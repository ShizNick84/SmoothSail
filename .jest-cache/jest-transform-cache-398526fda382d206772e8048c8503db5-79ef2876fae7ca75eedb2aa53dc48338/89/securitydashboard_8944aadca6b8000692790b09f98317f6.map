{"version":3,"names":["cov_13of9vkhip","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","events_1","require","logger_1","security_monitoring_service_1","SecurityDashboard","EventEmitter","config","widgets","Map","refreshInterval","currentDashboardData","activeAlerts","constructor","maxDisplayEvents","timelineDataPoints","autoRefresh","theme","initializeWidgets","setupEventHandlers","logger","info","startDashboard","refreshDashboardData","startAutoRefresh","securityMonitoringService","on","data","handleDashboardUpdate","error","Error","stopDashboard","stopAutoRefresh","clear","getDashboardData","getDashboardWidgets","Array","from","values","getThreatVisualizationCharts","charts","threatsByType","threatVisualization","Object","keys","length","push","title","labels","datasets","label","backgroundColor","options","responsive","plugins","legend","position","timeline","threatTimeline","map","point","timestamp","toLocaleTimeString","hour","minute","count","borderColor","borderWidth","fill","scales","y","beginAtZero","ticks","stepSize","threatsBySource","topSources","entries","sort","a","slice","source","getSecurityAlerts","getTime","acknowledgeAlert","alertId","alert","get","status","emit","resolveAlert","setTimeout","delete","set","id","color","size","priority","lastUpdate","Date","value","trend","max","unit","events","components","event","handleSecurityEvent","updateWidgets","setInterval","clearInterval","dashboardData","getSecurityDashboardData","updateAlerts","severity","eventId","mapSeverityToAlertLevel","formatEventTitle","message","formatEventMessage","actions","responseActions","icon","getEventIcon","eventType","getEventColor","statusWidget","securityStatus","getStatusColor","threatsWidget","activeThreats","scoreWidget","Math","round","metrics","securityScore","eventsWidget","recentEvents","healthWidget","systemHealth","componentStatus","oneHourAgo","now","typeMap","target","iconMap","getConfig","updateConfig","getStatus","isActive","widgetCount","exports","securityDashboard"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\security-dashboard.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - SECURITY DASHBOARD\r\n * =============================================================================\r\n * \r\n * This service provides a comprehensive security dashboard with real-time\r\n * threat visualization, security metrics, and system health monitoring.\r\n * \r\n * CRITICAL SECURITY NOTICE:\r\n * This dashboard provides real-time visibility into security threats and\r\n * system health. It must display accurate, up-to-date information to enable\r\n * rapid response to security incidents.\r\n * \r\n * Dashboard Features:\r\n * - Real-time threat visualization\r\n * - Security metrics and KPI display\r\n * - System health monitoring\r\n * - Interactive threat analysis\r\n * - Historical trend analysis\r\n * - Alert management interface\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { securityMonitoringService, SecurityDashboardData, SecurityEvent, SecurityMetrics } from '@/security/security-monitoring-service';\r\n\r\n/**\r\n * Interface for dashboard configuration\r\n */\r\nexport interface SecurityDashboardConfig {\r\n  /** Dashboard refresh interval in milliseconds */\r\n  refreshInterval: number;\r\n  /** Maximum events to display */\r\n  maxDisplayEvents: number;\r\n  /** Chart data points for timeline */\r\n  timelineDataPoints: number;\r\n  /** Auto-refresh enabled */\r\n  autoRefresh: boolean;\r\n  /** Theme configuration */\r\n  theme: 'light' | 'dark' | 'auto';\r\n}\r\n\r\n/**\r\n * Interface for dashboard widget data\r\n */\r\nexport interface DashboardWidget {\r\n  /** Widget identifier */\r\n  id: string;\r\n  /** Widget title */\r\n  title: string;\r\n  /** Widget type */\r\n  type: 'metric' | 'chart' | 'table' | 'alert' | 'status';\r\n  /** Widget data */\r\n  data: any;\r\n  /** Widget configuration */\r\n  config: Record<string, any>;\r\n  /** Last update timestamp */\r\n  lastUpdate: Date;\r\n}\r\n\r\n/**\r\n * Interface for threat visualization chart data\r\n */\r\nexport interface ThreatChartData {\r\n  /** Chart type */\r\n  type: 'line' | 'bar' | 'pie' | 'heatmap';\r\n  /** Chart title */\r\n  title: string;\r\n  /** Chart data */\r\n  data: {\r\n    labels: string[];\r\n    datasets: Array<{\r\n      label: string;\r\n      data: number[];\r\n      backgroundColor?: string[];\r\n      borderColor?: string;\r\n      borderWidth?: number;\r\n    }>;\r\n  };\r\n  /** Chart options */\r\n  options: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Interface for security alert display\r\n */\r\nexport interface SecurityAlertDisplay {\r\n  /** Alert identifier */\r\n  alertId: string;\r\n  /** Alert severity */\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  /** Alert title */\r\n  title: string;\r\n  /** Alert message */\r\n  message: string;\r\n  /** Alert timestamp */\r\n  timestamp: Date;\r\n  /** Alert status */\r\n  status: 'active' | 'acknowledged' | 'resolved';\r\n  /** Alert actions */\r\n  actions: string[];\r\n  /** Alert icon */\r\n  icon: string;\r\n  /** Alert color */\r\n  color: string;\r\n}\r\n\r\n/**\r\n * Security dashboard service\r\n * Provides comprehensive security visualization and monitoring interface\r\n */\r\nexport class SecurityDashboard extends EventEmitter {\r\n  /** Dashboard configuration */\r\n  private config: SecurityDashboardConfig;\r\n  \r\n  /** Dashboard widgets */\r\n  private widgets: Map<string, DashboardWidget> = new Map();\r\n  \r\n  /** Dashboard refresh interval */\r\n  private refreshInterval: NodeJS.Timeout | null = null;\r\n  \r\n  /** Current dashboard data */\r\n  private currentDashboardData: SecurityDashboardData | null = null;\r\n  \r\n  /** Active alerts */\r\n  private activeAlerts: Map<string, SecurityAlertDisplay> = new Map();\r\n\r\n  constructor(config?: Partial<SecurityDashboardConfig>) {\r\n    super();\r\n    \r\n    // Initialize configuration with defaults\r\n    this.config = {\r\n      refreshInterval: 5000, // 5 seconds\r\n      maxDisplayEvents: 100,\r\n      timelineDataPoints: 24, // 24 hours\r\n      autoRefresh: true,\r\n      theme: 'dark',\r\n      ...config\r\n    };\r\n    \r\n    // Initialize dashboard widgets\r\n    this.initializeWidgets();\r\n    \r\n    // Set up event handlers\r\n    this.setupEventHandlers();\r\n    \r\n    logger.info('üìä Security Dashboard initialized');\r\n  }\r\n\r\n  /**\r\n   * Start dashboard\r\n   * Begins dashboard operations and data refresh\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async startDashboard(): Promise<void> {\r\n    try {\r\n      logger.info('üöÄ Starting security dashboard...');\r\n      \r\n      // Perform initial data load\r\n      await this.refreshDashboardData();\r\n      \r\n      // Start auto-refresh if enabled\r\n      if (this.config.autoRefresh) {\r\n        this.startAutoRefresh();\r\n      }\r\n      \r\n      // Listen for security monitoring updates\r\n      securityMonitoringService.on('dashboardUpdate', (data: SecurityDashboardData) => {\r\n        this.handleDashboardUpdate(data);\r\n      });\r\n      \r\n      logger.info('‚úÖ Security dashboard started successfully');\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to start security dashboard:', error);\r\n      throw new Error('Security dashboard startup failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop dashboard\r\n   * Stops dashboard operations and cleanup\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async stopDashboard(): Promise<void> {\r\n    try {\r\n      logger.info('üõë Stopping security dashboard...');\r\n      \r\n      // Stop auto-refresh\r\n      this.stopAutoRefresh();\r\n      \r\n      // Clear widgets\r\n      this.widgets.clear();\r\n      \r\n      // Clear alerts\r\n      this.activeAlerts.clear();\r\n      \r\n      logger.info('‚úÖ Security dashboard stopped successfully');\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to stop security dashboard:', error);\r\n      throw new Error('Security dashboard shutdown failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get dashboard data\r\n   * Returns current dashboard data for rendering\r\n   * \r\n   * @returns SecurityDashboardData Current dashboard data\r\n   */\r\n  public getDashboardData(): SecurityDashboardData | null {\r\n    return this.currentDashboardData;\r\n  }\r\n\r\n  /**\r\n   * Get dashboard widgets\r\n   * Returns all dashboard widgets\r\n   * \r\n   * @returns DashboardWidget[] Dashboard widgets\r\n   */\r\n  public getDashboardWidgets(): DashboardWidget[] {\r\n    return Array.from(this.widgets.values());\r\n  }\r\n\r\n  /**\r\n   * Get threat visualization charts\r\n   * Returns chart data for threat visualization\r\n   * \r\n   * @returns ThreatChartData[] Threat visualization charts\r\n   */\r\n  public getThreatVisualizationCharts(): ThreatChartData[] {\r\n    if (!this.currentDashboardData) {\r\n      return [];\r\n    }\r\n    \r\n    const charts: ThreatChartData[] = [];\r\n    \r\n    // Threats by type pie chart\r\n    const threatsByType = this.currentDashboardData.threatVisualization.threatsByType;\r\n    if (Object.keys(threatsByType).length > 0) {\r\n      charts.push({\r\n        type: 'pie',\r\n        title: 'Threats by Type',\r\n        data: {\r\n          labels: Object.keys(threatsByType),\r\n          datasets: [{\r\n            label: 'Threats',\r\n            data: Object.values(threatsByType),\r\n            backgroundColor: [\r\n              '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',\r\n              '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\r\n            ]\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Threat timeline chart\r\n    const timeline = this.currentDashboardData.threatVisualization.threatTimeline;\r\n    if (timeline.length > 0) {\r\n      charts.push({\r\n        type: 'line',\r\n        title: 'Threat Timeline (24 Hours)',\r\n        data: {\r\n          labels: timeline.map(point => \r\n            point.timestamp.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })\r\n          ),\r\n          datasets: [{\r\n            label: 'Threats',\r\n            data: timeline.map(point => point.count),\r\n            borderColor: '#FF6384',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.1)',\r\n            borderWidth: 2,\r\n            fill: true\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              ticks: {\r\n                stepSize: 1\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Threats by source bar chart\r\n    const threatsBySource = this.currentDashboardData.threatVisualization.threatsBySource;\r\n    const topSources = Object.entries(threatsBySource)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 10); // Top 10 sources\r\n    \r\n    if (topSources.length > 0) {\r\n      charts.push({\r\n        type: 'bar',\r\n        title: 'Top Threat Sources',\r\n        data: {\r\n          labels: topSources.map(([source]) => source),\r\n          datasets: [{\r\n            label: 'Threats',\r\n            data: topSources.map(([, count]) => count),\r\n            backgroundColor: '#36A2EB',\r\n            borderColor: '#36A2EB',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              ticks: {\r\n                stepSize: 1\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    return charts;\r\n  }\r\n\r\n  /**\r\n   * Get security alerts\r\n   * Returns current security alerts for display\r\n   * \r\n   * @returns SecurityAlertDisplay[] Security alerts\r\n   */\r\n  public getSecurityAlerts(): SecurityAlertDisplay[] {\r\n    return Array.from(this.activeAlerts.values())\r\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n  }\r\n\r\n  /**\r\n   * Acknowledge alert\r\n   * Marks security alert as acknowledged\r\n   * \r\n   * @param alertId - Alert identifier\r\n   * @returns Promise<void>\r\n   */\r\n  public async acknowledgeAlert(alertId: string): Promise<void> {\r\n    const alert = this.activeAlerts.get(alertId);\r\n    if (alert) {\r\n      alert.status = 'acknowledged';\r\n      this.emit('alertAcknowledged', alert);\r\n      \r\n      logger.info('‚úÖ Security alert acknowledged', {\r\n        alertId,\r\n        title: alert.title\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resolve alert\r\n   * Marks security alert as resolved\r\n   * \r\n   * @param alertId - Alert identifier\r\n   * @returns Promise<void>\r\n   */\r\n  public async resolveAlert(alertId: string): Promise<void> {\r\n    const alert = this.activeAlerts.get(alertId);\r\n    if (alert) {\r\n      alert.status = 'resolved';\r\n      this.emit('alertResolved', alert);\r\n      \r\n      // Remove resolved alerts after 5 minutes\r\n      setTimeout(() => {\r\n        this.activeAlerts.delete(alertId);\r\n      }, 5 * 60 * 1000);\r\n      \r\n      logger.info('‚úÖ Security alert resolved', {\r\n        alertId,\r\n        title: alert.title\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize dashboard widgets\r\n   * Sets up default dashboard widgets\r\n   */\r\n  private initializeWidgets(): void {\r\n    // Security status widget\r\n    this.widgets.set('security-status', {\r\n      id: 'security-status',\r\n      title: 'Security Status',\r\n      type: 'status',\r\n      data: { status: 'SECURE', color: 'green' },\r\n      config: { size: 'large', priority: 1 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // Active threats widget\r\n    this.widgets.set('active-threats', {\r\n      id: 'active-threats',\r\n      title: 'Active Threats',\r\n      type: 'metric',\r\n      data: { value: 0, trend: 'stable' },\r\n      config: { size: 'medium', priority: 2 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // Security score widget\r\n    this.widgets.set('security-score', {\r\n      id: 'security-score',\r\n      title: 'Security Score',\r\n      type: 'metric',\r\n      data: { value: 100, max: 100, unit: '%' },\r\n      config: { size: 'medium', priority: 3 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // Recent events widget\r\n    this.widgets.set('recent-events', {\r\n      id: 'recent-events',\r\n      title: 'Recent Security Events',\r\n      type: 'table',\r\n      data: { events: [] },\r\n      config: { size: 'large', priority: 4 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // System health widget\r\n    this.widgets.set('system-health', {\r\n      id: 'system-health',\r\n      title: 'System Health',\r\n      type: 'status',\r\n      data: { components: {} },\r\n      config: { size: 'medium', priority: 5 },\r\n      lastUpdate: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers\r\n   * Configures event handling for dashboard updates\r\n   */\r\n  private setupEventHandlers(): void {\r\n    // Handle security events\r\n    securityMonitoringService.on('securityEvent', (event: SecurityEvent) => {\r\n      this.handleSecurityEvent(event);\r\n    });\r\n    \r\n    // Handle dashboard updates\r\n    this.on('dashboardUpdate', () => {\r\n      this.updateWidgets();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start auto-refresh\r\n   * Begins automatic dashboard data refresh\r\n   */\r\n  private startAutoRefresh(): void {\r\n    this.refreshInterval = setInterval(async () => {\r\n      try {\r\n        await this.refreshDashboardData();\r\n      } catch (error) {\r\n        logger.error('‚ùå Dashboard refresh error:', error);\r\n      }\r\n    }, this.config.refreshInterval);\r\n  }\r\n\r\n  /**\r\n   * Stop auto-refresh\r\n   * Stops automatic dashboard data refresh\r\n   */\r\n  private stopAutoRefresh(): void {\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n      this.refreshInterval = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refresh dashboard data\r\n   * Updates dashboard data from security monitoring service\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async refreshDashboardData(): Promise<void> {\r\n    try {\r\n      const dashboardData = securityMonitoringService.getSecurityDashboardData();\r\n      this.handleDashboardUpdate(dashboardData);\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to refresh dashboard data:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dashboard update\r\n   * Processes dashboard data updates\r\n   * \r\n   * @param data - Updated dashboard data\r\n   */\r\n  private handleDashboardUpdate(data: SecurityDashboardData): void {\r\n    this.currentDashboardData = data;\r\n    this.updateWidgets();\r\n    this.updateAlerts();\r\n    this.emit('dashboardUpdate', data);\r\n  }\r\n\r\n  /**\r\n   * Handle security event\r\n   * Processes security events for dashboard display\r\n   * \r\n   * @param event - Security event\r\n   */\r\n  private handleSecurityEvent(event: SecurityEvent): void {\r\n    // Create alert for high-severity events\r\n    if (event.severity >= 7) {\r\n      const alert: SecurityAlertDisplay = {\r\n        alertId: event.eventId,\r\n        severity: this.mapSeverityToAlertLevel(event.severity),\r\n        title: this.formatEventTitle(event),\r\n        message: this.formatEventMessage(event),\r\n        timestamp: event.timestamp,\r\n        status: 'active',\r\n        actions: event.responseActions,\r\n        icon: this.getEventIcon(event.eventType),\r\n        color: this.getEventColor(event.severity)\r\n      };\r\n      \r\n      this.activeAlerts.set(alert.alertId, alert);\r\n      this.emit('newAlert', alert);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update dashboard widgets\r\n   * Updates widget data based on current dashboard data\r\n   */\r\n  private updateWidgets(): void {\r\n    if (!this.currentDashboardData) return;\r\n    \r\n    const data = this.currentDashboardData;\r\n    \r\n    // Update security status widget\r\n    const statusWidget = this.widgets.get('security-status');\r\n    if (statusWidget) {\r\n      statusWidget.data = {\r\n        status: data.securityStatus,\r\n        color: this.getStatusColor(data.securityStatus)\r\n      };\r\n      statusWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update active threats widget\r\n    const threatsWidget = this.widgets.get('active-threats');\r\n    if (threatsWidget) {\r\n      threatsWidget.data = {\r\n        value: data.activeThreats,\r\n        trend: data.activeThreats > 0 ? 'up' : 'stable'\r\n      };\r\n      threatsWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update security score widget\r\n    const scoreWidget = this.widgets.get('security-score');\r\n    if (scoreWidget) {\r\n      scoreWidget.data = {\r\n        value: Math.round(data.metrics.securityScore),\r\n        max: 100,\r\n        unit: '%'\r\n      };\r\n      scoreWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update recent events widget\r\n    const eventsWidget = this.widgets.get('recent-events');\r\n    if (eventsWidget) {\r\n      eventsWidget.data = {\r\n        events: data.recentEvents.slice(0, this.config.maxDisplayEvents)\r\n      };\r\n      eventsWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update system health widget\r\n    const healthWidget = this.widgets.get('system-health');\r\n    if (healthWidget) {\r\n      healthWidget.data = {\r\n        components: data.systemHealth.componentStatus\r\n      };\r\n      healthWidget.lastUpdate = new Date();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update alerts\r\n   * Updates active alerts based on current events\r\n   */\r\n  private updateAlerts(): void {\r\n    if (!this.currentDashboardData) return;\r\n    \r\n    // Auto-resolve old alerts (older than 1 hour)\r\n    const oneHourAgo = Date.now() - (60 * 60 * 1000);\r\n    for (const [alertId, alert] of this.activeAlerts.entries()) {\r\n      if (alert.timestamp.getTime() < oneHourAgo && alert.status === 'active') {\r\n        alert.status = 'resolved';\r\n        setTimeout(() => {\r\n          this.activeAlerts.delete(alertId);\r\n        }, 5 * 60 * 1000); // Remove after 5 minutes\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Map severity to alert level\r\n   * Converts numeric severity to alert level\r\n   * \r\n   * @param severity - Numeric severity (1-10)\r\n   * @returns Alert level\r\n   */\r\n  private mapSeverityToAlertLevel(severity: number): 'low' | 'medium' | 'high' | 'critical' {\r\n    if (severity >= 9) return 'critical';\r\n    if (severity >= 7) return 'high';\r\n    if (severity >= 5) return 'medium';\r\n    return 'low';\r\n  }\r\n\r\n  /**\r\n   * Format event title\r\n   * Creates human-readable event title\r\n   * \r\n   * @param event - Security event\r\n   * @returns Formatted title\r\n   */\r\n  private formatEventTitle(event: SecurityEvent): string {\r\n    const typeMap: Record<string, string> = {\r\n      'threat_detected': 'üö® Threat Detected',\r\n      'authentication_failure': 'üîê Authentication Failure',\r\n      'unauthorized_access': 'üö´ Unauthorized Access',\r\n      'suspicious_activity': 'üîç Suspicious Activity',\r\n      'system_anomaly': '‚ö†Ô∏è System Anomaly',\r\n      'network_intrusion': 'üåê Network Intrusion',\r\n      'data_access_violation': 'üìä Data Access Violation',\r\n      'configuration_change': '‚öôÔ∏è Configuration Change',\r\n      'security_policy_violation': 'üìã Policy Violation',\r\n      'incident_escalation': 'üö® Incident Escalation'\r\n    };\r\n    \r\n    return typeMap[event.eventType] || '‚ö†Ô∏è Security Event';\r\n  }\r\n\r\n  /**\r\n   * Format event message\r\n   * Creates human-readable event message\r\n   * \r\n   * @param event - Security event\r\n   * @returns Formatted message\r\n   */\r\n  private formatEventMessage(event: SecurityEvent): string {\r\n    return `Security event from ${event.source} targeting ${event.target}. Severity: ${event.severity}/10`;\r\n  }\r\n\r\n  /**\r\n   * Get event icon\r\n   * Returns appropriate icon for event type\r\n   * \r\n   * @param eventType - Event type\r\n   * @returns Icon string\r\n   */\r\n  private getEventIcon(eventType: string): string {\r\n    const iconMap: Record<string, string> = {\r\n      'threat_detected': 'üö®',\r\n      'authentication_failure': 'üîê',\r\n      'unauthorized_access': 'üö´',\r\n      'suspicious_activity': 'üîç',\r\n      'system_anomaly': '‚ö†Ô∏è',\r\n      'network_intrusion': 'üåê',\r\n      'data_access_violation': 'üìä',\r\n      'configuration_change': '‚öôÔ∏è',\r\n      'security_policy_violation': 'üìã',\r\n      'incident_escalation': 'üö®'\r\n    };\r\n    \r\n    return iconMap[eventType] || '‚ö†Ô∏è';\r\n  }\r\n\r\n  /**\r\n   * Get event color\r\n   * Returns appropriate color for event severity\r\n   * \r\n   * @param severity - Event severity\r\n   * @returns Color string\r\n   */\r\n  private getEventColor(severity: number): string {\r\n    if (severity >= 9) return '#dc3545'; // Critical - Red\r\n    if (severity >= 7) return '#fd7e14'; // High - Orange\r\n    if (severity >= 5) return '#ffc107'; // Medium - Yellow\r\n    return '#28a745'; // Low - Green\r\n  }\r\n\r\n  /**\r\n   * Get status color\r\n   * Returns appropriate color for security status\r\n   * \r\n   * @param status - Security status\r\n   * @returns Color string\r\n   */\r\n  private getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'SECURE': return '#28a745'; // Green\r\n      case 'WARNING': return '#ffc107'; // Yellow\r\n      case 'CRITICAL': return '#dc3545'; // Red\r\n      default: return '#6c757d'; // Gray\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get dashboard configuration\r\n   * Returns current dashboard configuration\r\n   * \r\n   * @returns SecurityDashboardConfig Dashboard configuration\r\n   */\r\n  public getConfig(): SecurityDashboardConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update dashboard configuration\r\n   * Updates dashboard configuration\r\n   * \r\n   * @param config - New configuration\r\n   * @returns Promise<void>\r\n   */\r\n  public async updateConfig(config: Partial<SecurityDashboardConfig>): Promise<void> {\r\n    this.config = { ...this.config, ...config };\r\n    \r\n    // Restart auto-refresh if interval changed\r\n    if (config.refreshInterval && this.refreshInterval) {\r\n      this.stopAutoRefresh();\r\n      this.startAutoRefresh();\r\n    }\r\n    \r\n    this.emit('configUpdated', this.config);\r\n  }\r\n\r\n  /**\r\n   * Get dashboard status\r\n   * Returns current dashboard status\r\n   * \r\n   * @returns Dashboard status information\r\n   */\r\n  public getStatus(): {\r\n    isActive: boolean;\r\n    widgetCount: number;\r\n    activeAlerts: number;\r\n    lastUpdate: Date | null;\r\n    autoRefresh: boolean;\r\n    timestamp: number;\r\n  } {\r\n    return {\r\n      isActive: this.refreshInterval !== null,\r\n      widgetCount: this.widgets.size,\r\n      activeAlerts: this.activeAlerts.size,\r\n      lastUpdate: this.currentDashboardData ? new Date() : null,\r\n      autoRefresh: this.config.autoRefresh,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\n// Create and export singleton instance\r\nexport const securityDashboard = new SecurityDashboard();\r\n\r\n// =============================================================================\r\n// SECURITY DASHBOARD NOTES\r\n// =============================================================================\r\n// 1. Real-time security visualization with interactive charts and metrics\r\n// 2. Comprehensive threat analysis and pattern visualization\r\n// 3. Automated alert management with acknowledgment and resolution\r\n// 4. Configurable dashboard widgets and layout\r\n// 5. Integration with security monitoring service for live data\r\n// 6. Support for multiple chart types and visualization formats\r\n// 7. Responsive design for desktop and mobile access\r\n// 8. Theme support for light/dark mode preferences\r\n// =============================================================================\r\n"],"mappings":"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","ignoreList":[]}