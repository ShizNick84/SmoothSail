4280a30b6c83f2281cb55013d8cf62ce
"use strict";

/**
 * =============================================================================
 * ORDER MANAGEMENT AND EXECUTION SYSTEM
 * =============================================================================
 *
 * This module implements a comprehensive order management system for Gate.io
 * cryptocurrency trading with validation, confirmation, status monitoring,
 * and comprehensive audit logging for all order operations.
 *
 * SECURITY FEATURES:
 * - Order validation with risk assessment before placement
 * - Real-time order status monitoring and updates
 * - Comprehensive audit logging for all order operations
 * - Order cancellation and modification with safety checks
 * - Position tracking and reconciliation
 * - Emergency stop-loss and position closure capabilities
 *
 * CRITICAL TRADING NOTICE:
 * This system handles real financial assets and trading operations.
 * All order operations must be validated and logged for audit compliance.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1m32ycjiou() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\orders\\order-manager.ts";
  var hash = "cd98c10f1e15eab08cbfa08aafc78adcba961b7f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\orders\\order-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "1": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "2": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "3": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "4": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "5": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "6": {
        start: {
          line: 41,
          column: 19
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "7": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 25
        }
      },
      "8": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 32
        }
      },
      "9": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "10": {
        start: {
          line: 48,
          column: 18
        },
        end: {
          line: 48,
          column: 26
        }
      },
      "11": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 16
        }
      },
      "12": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "13": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "14": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "15": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "16": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 91
        }
      },
      "17": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "18": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 69
        }
      },
      "19": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "20": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "21": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 44
        }
      },
      "22": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 46
        }
      },
      "23": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 52
        }
      },
      "24": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "25": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 77
        }
      },
      "26": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 24
        }
      },
      "27": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 82
        }
      },
      "28": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "29": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 25
        }
      },
      "30": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 123,
          column: 36
        }
      },
      "31": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "32": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 131
        }
      },
      "33": {
        start: {
          line: 127,
          column: 37
        },
        end: {
          line: 127,
          column: 75
        }
      },
      "34": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "35": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 129,
          column: 94
        }
      },
      "36": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 104
        }
      },
      "37": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 137,
          column: 18
        }
      },
      "38": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "39": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 97
        }
      },
      "40": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "41": {
        start: {
          line: 145,
          column: 39
        },
        end: {
          line: 145,
          column: 97
        }
      },
      "42": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "43": {
        start: {
          line: 147,
          column: 34
        },
        end: {
          line: 147,
          column: 94
        }
      },
      "44": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 148,
          column: 107
        }
      },
      "45": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 155,
          column: 22
        }
      },
      "46": {
        start: {
          line: 159,
          column: 34
        },
        end: {
          line: 159,
          column: 71
        }
      },
      "47": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "48": {
        start: {
          line: 162,
          column: 39
        },
        end: {
          line: 162,
          column: 101
        }
      },
      "49": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 167,
          column: 17
        }
      },
      "50": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 104
        }
      },
      "51": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 88
        }
      },
      "52": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 67
        }
      },
      "53": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 50
        }
      },
      "54": {
        start: {
          line: 173,
          column: 34
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "55": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 120
        }
      },
      "56": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 61
        }
      },
      "57": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 182,
          column: 15
        }
      },
      "58": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 52
        }
      },
      "59": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 106
        }
      },
      "60": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 191,
          column: 14
        }
      },
      "61": {
        start: {
          line: 194,
          column: 34
        },
        end: {
          line: 194,
          column: 56
        }
      },
      "62": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 62
        }
      },
      "63": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "64": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 79
        }
      },
      "65": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 216,
          column: 14
        }
      },
      "66": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "67": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 88
        }
      },
      "68": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 56
        }
      },
      "69": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "70": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 88
        }
      },
      "71": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 29
        }
      },
      "72": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "73": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 85
        }
      },
      "74": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 29
        }
      },
      "75": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 244,
          column: 15
        }
      },
      "76": {
        start: {
          line: 246,
          column: 33
        },
        end: {
          line: 246,
          column: 66
        }
      },
      "77": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 57
        }
      },
      "78": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 41
        }
      },
      "79": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 75
        }
      },
      "80": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 62
        }
      },
      "81": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 79
        }
      },
      "82": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 24
        }
      },
      "83": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 81
        }
      },
      "84": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 262,
          column: 15
        }
      },
      "85": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 25
        }
      },
      "86": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "87": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 67
        }
      },
      "88": {
        start: {
          line: 277,
          column: 26
        },
        end: {
          line: 277,
          column: 56
        }
      },
      "89": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "90": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 71
        }
      },
      "91": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 28
        }
      },
      "92": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "93": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 102
        }
      },
      "94": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 28
        }
      },
      "95": {
        start: {
          line: 287,
          column: 37
        },
        end: {
          line: 287,
          column: 95
        }
      },
      "96": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 291,
          column: 13
        }
      },
      "97": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 106
        }
      },
      "98": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 28
        }
      },
      "99": {
        start: {
          line: 293,
          column: 34
        },
        end: {
          line: 300,
          column: 14
        }
      },
      "100": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 58
        }
      },
      "101": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 308,
          column: 15
        }
      },
      "102": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 69
        }
      },
      "103": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 78
        }
      },
      "104": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 33
        }
      },
      "105": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 81
        }
      },
      "106": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 319,
          column: 15
        }
      },
      "107": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 24
        }
      },
      "108": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "109": {
        start: {
          line: 332,
          column: 32
        },
        end: {
          line: 332,
          column: 62
        }
      },
      "110": {
        start: {
          line: 334,
          column: 34
        },
        end: {
          line: 338,
          column: 14
        }
      },
      "111": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "112": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 62
        }
      },
      "113": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 345,
          column: 17
        }
      },
      "114": {
        start: {
          line: 344,
          column: 20
        },
        end: {
          line: 344,
          column: 83
        }
      },
      "115": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 33
        }
      },
      "116": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 85
        }
      },
      "117": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 24
        }
      },
      "118": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 95
        }
      },
      "119": {
        start: {
          line: 360,
          column: 70
        },
        end: {
          line: 360,
          column: 93
        }
      },
      "120": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 371,
          column: 29
        }
      },
      "121": {
        start: {
          line: 370,
          column: 28
        },
        end: {
          line: 370,
          column: 97
        }
      },
      "122": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 50
        }
      },
      "123": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 51
        }
      },
      "124": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "125": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 65
        }
      },
      "126": {
        start: {
          line: 399,
          column: 33
        },
        end: {
          line: 399,
          column: 55
        }
      },
      "127": {
        start: {
          line: 400,
          column: 41
        },
        end: {
          line: 400,
          column: 123
        }
      },
      "128": {
        start: {
          line: 400,
          column: 67
        },
        end: {
          line: 400,
          column: 122
        }
      },
      "129": {
        start: {
          line: 401,
          column: 28
        },
        end: {
          line: 401,
          column: 74
        }
      },
      "130": {
        start: {
          line: 402,
          column: 33
        },
        end: {
          line: 402,
          column: 120
        }
      },
      "131": {
        start: {
          line: 402,
          column: 58
        },
        end: {
          line: 402,
          column: 112
        }
      },
      "132": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 412,
          column: 15
        }
      },
      "133": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 121
        }
      },
      "134": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 82
        }
      },
      "135": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 56
        }
      },
      "136": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 69
        }
      },
      "137": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 25
        }
      },
      "138": {
        start: {
          line: 430,
          column: 23
        },
        end: {
          line: 430,
          column: 25
        }
      },
      "139": {
        start: {
          line: 431,
          column: 25
        },
        end: {
          line: 431,
          column: 27
        }
      },
      "140": {
        start: {
          line: 432,
          column: 24
        },
        end: {
          line: 432,
          column: 25
        }
      },
      "141": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "142": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 53
        }
      },
      "143": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "144": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 50
        }
      },
      "145": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "146": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 57
        }
      },
      "147": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "148": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 65
        }
      },
      "149": {
        start: {
          line: 447,
          column: 27
        },
        end: {
          line: 447,
          column: 105
        }
      },
      "150": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "151": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 101
        }
      },
      "152": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 28
        }
      },
      "153": {
        start: {
          line: 453,
          column: 28
        },
        end: {
          line: 453,
          column: 55
        }
      },
      "154": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "155": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 128
        }
      },
      "156": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 28
        }
      },
      "157": {
        start: {
          line: 459,
          column: 30
        },
        end: {
          line: 459,
          column: 40
        }
      },
      "158": {
        start: {
          line: 460,
          column: 30
        },
        end: {
          line: 460,
          column: 48
        }
      },
      "159": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "160": {
        start: {
          line: 463,
          column: 29
        },
        end: {
          line: 466,
          column: 14
        }
      },
      "161": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 62
        }
      },
      "162": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 28
        }
      },
      "163": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 481,
          column: 10
        }
      },
      "164": {
        start: {
          line: 490,
          column: 30
        },
        end: {
          line: 494,
          column: 10
        }
      },
      "165": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 29
        }
      },
      "166": {
        start: {
          line: 505,
          column: 23
        },
        end: {
          line: 505,
          column: 25
        }
      },
      "167": {
        start: {
          line: 506,
          column: 25
        },
        end: {
          line: 506,
          column: 27
        }
      },
      "168": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "169": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 50
        }
      },
      "170": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 513,
          column: 9
        }
      },
      "171": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 47
        }
      },
      "172": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 516,
          column: 9
        }
      },
      "173": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 47
        }
      },
      "174": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "175": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 49
        }
      },
      "176": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "177": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 49
        }
      },
      "178": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "179": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 71
        }
      },
      "180": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 534,
          column: 10
        }
      },
      "181": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 549,
          column: 10
        }
      },
      "182": {
        start: {
          line: 559,
          column: 23
        },
        end: {
          line: 559,
          column: 25
        }
      },
      "183": {
        start: {
          line: 560,
          column: 25
        },
        end: {
          line: 560,
          column: 27
        }
      },
      "184": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 564,
          column: 9
        }
      },
      "185": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 59
        }
      },
      "186": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 567,
          column: 9
        }
      },
      "187": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 566,
          column: 60
        }
      },
      "188": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 571,
          column: 9
        }
      },
      "189": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 570,
          column: 62
        }
      },
      "190": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 579,
          column: 10
        }
      },
      "191": {
        start: {
          line: 588,
          column: 29
        },
        end: {
          line: 596,
          column: 9
        }
      },
      "192": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 598,
          column: 85
        }
      },
      "193": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 600,
          column: 52
        }
      },
      "194": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 602,
          column: 54
        }
      },
      "195": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 603,
          column: 138
        }
      },
      "196": {
        start: {
          line: 609,
          column: 8
        },
        end: {
          line: 632,
          column: 9
        }
      },
      "197": {
        start: {
          line: 611,
          column: 28
        },
        end: {
          line: 611,
          column: 52
        }
      },
      "198": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 627,
          column: 13
        }
      },
      "199": {
        start: {
          line: 613,
          column: 31
        },
        end: {
          line: 621,
          column: 18
        }
      },
      "200": {
        start: {
          line: 623,
          column: 16
        },
        end: {
          line: 626,
          column: 19
        }
      },
      "201": {
        start: {
          line: 624,
          column: 20
        },
        end: {
          line: 624,
          column: 59
        }
      },
      "202": {
        start: {
          line: 625,
          column: 20
        },
        end: {
          line: 625,
          column: 50
        }
      },
      "203": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 88
        }
      },
      "204": {
        start: {
          line: 631,
          column: 12
        },
        end: {
          line: 631,
          column: 78
        }
      },
      "205": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 640,
          column: 37
        }
      },
      "206": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 639,
          column: 46
        }
      },
      "207": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 641,
          column: 68
        }
      },
      "208": {
        start: {
          line: 647,
          column: 29
        },
        end: {
          line: 647,
          column: 51
        }
      },
      "209": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 655,
          column: 9
        }
      },
      "210": {
        start: {
          line: 649,
          column: 12
        },
        end: {
          line: 654,
          column: 13
        }
      },
      "211": {
        start: {
          line: 650,
          column: 16
        },
        end: {
          line: 650,
          column: 52
        }
      },
      "212": {
        start: {
          line: 653,
          column: 16
        },
        end: {
          line: 653,
          column: 87
        }
      },
      "213": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 657,
          column: 38
        }
      },
      "214": {
        start: {
          line: 663,
          column: 8
        },
        end: {
          line: 682,
          column: 9
        }
      },
      "215": {
        start: {
          line: 665,
          column: 28
        },
        end: {
          line: 665,
          column: 52
        }
      },
      "216": {
        start: {
          line: 666,
          column: 12
        },
        end: {
          line: 677,
          column: 13
        }
      },
      "217": {
        start: {
          line: 667,
          column: 16
        },
        end: {
          line: 676,
          column: 19
        }
      },
      "218": {
        start: {
          line: 678,
          column: 12
        },
        end: {
          line: 678,
          column: 69
        }
      },
      "219": {
        start: {
          line: 681,
          column: 12
        },
        end: {
          line: 681,
          column: 86
        }
      },
      "220": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 715,
          column: 9
        }
      },
      "221": {
        start: {
          line: 691,
          column: 29
        },
        end: {
          line: 691,
          column: 68
        }
      },
      "222": {
        start: {
          line: 692,
          column: 12
        },
        end: {
          line: 693,
          column: 23
        }
      },
      "223": {
        start: {
          line: 693,
          column: 16
        },
        end: {
          line: 693,
          column: 23
        }
      },
      "224": {
        start: {
          line: 695,
          column: 12
        },
        end: {
          line: 708,
          column: 13
        }
      },
      "225": {
        start: {
          line: 696,
          column: 37
        },
        end: {
          line: 696,
          column: 67
        }
      },
      "226": {
        start: {
          line: 697,
          column: 30
        },
        end: {
          line: 697,
          column: 53
        }
      },
      "227": {
        start: {
          line: 698,
          column: 16
        },
        end: {
          line: 703,
          column: 17
        }
      },
      "228": {
        start: {
          line: 699,
          column: 20
        },
        end: {
          line: 699,
          column: 57
        }
      },
      "229": {
        start: {
          line: 702,
          column: 20
        },
        end: {
          line: 702,
          column: 57
        }
      },
      "230": {
        start: {
          line: 705,
          column: 16
        },
        end: {
          line: 707,
          column: 17
        }
      },
      "231": {
        start: {
          line: 706,
          column: 20
        },
        end: {
          line: 706,
          column: 50
        }
      },
      "232": {
        start: {
          line: 710,
          column: 12
        },
        end: {
          line: 710,
          column: 110
        }
      },
      "233": {
        start: {
          line: 710,
          column: 69
        },
        end: {
          line: 710,
          column: 108
        }
      },
      "234": {
        start: {
          line: 711,
          column: 12
        },
        end: {
          line: 711,
          column: 45
        }
      },
      "235": {
        start: {
          line: 714,
          column: 12
        },
        end: {
          line: 714,
          column: 82
        }
      },
      "236": {
        start: {
          line: 721,
          column: 22
        },
        end: {
          line: 721,
          column: 32
        }
      },
      "237": {
        start: {
          line: 722,
          column: 8
        },
        end: {
          line: 722,
          column: 35
        }
      },
      "238": {
        start: {
          line: 723,
          column: 8
        },
        end: {
          line: 728,
          column: 14
        }
      },
      "239": {
        start: {
          line: 724,
          column: 29
        },
        end: {
          line: 724,
          column: 65
        }
      },
      "240": {
        start: {
          line: 726,
          column: 27
        },
        end: {
          line: 726,
          column: 77
        }
      },
      "241": {
        start: {
          line: 727,
          column: 12
        },
        end: {
          line: 727,
          column: 34
        }
      },
      "242": {
        start: {
          line: 739,
          column: 8
        },
        end: {
          line: 739,
          column: 33
        }
      },
      "243": {
        start: {
          line: 740,
          column: 8
        },
        end: {
          line: 740,
          column: 46
        }
      },
      "244": {
        start: {
          line: 741,
          column: 8
        },
        end: {
          line: 748,
          column: 9
        }
      },
      "245": {
        start: {
          line: 742,
          column: 12
        },
        end: {
          line: 742,
          column: 42
        }
      },
      "246": {
        start: {
          line: 743,
          column: 12
        },
        end: {
          line: 743,
          column: 45
        }
      },
      "247": {
        start: {
          line: 744,
          column: 12
        },
        end: {
          line: 744,
          column: 41
        }
      },
      "248": {
        start: {
          line: 747,
          column: 12
        },
        end: {
          line: 747,
          column: 38
        }
      },
      "249": {
        start: {
          line: 750,
          column: 22
        },
        end: {
          line: 750,
          column: 25
        }
      },
      "250": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 752,
          column: 86
        }
      },
      "251": {
        start: {
          line: 754,
          column: 8
        },
        end: {
          line: 754,
          column: 94
        }
      },
      "252": {
        start: {
          line: 760,
          column: 27
        },
        end: {
          line: 760,
          column: 56
        }
      },
      "253": {
        start: {
          line: 762,
          column: 8
        },
        end: {
          line: 767,
          column: 9
        }
      },
      "254": {
        start: {
          line: 763,
          column: 30
        },
        end: {
          line: 763,
          column: 67
        }
      },
      "255": {
        start: {
          line: 764,
          column: 12
        },
        end: {
          line: 766,
          column: 13
        }
      },
      "256": {
        start: {
          line: 765,
          column: 16
        },
        end: {
          line: 765,
          column: 50
        }
      },
      "257": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 773,
          column: 9
        }
      },
      "258": {
        start: {
          line: 770,
          column: 12
        },
        end: {
          line: 772,
          column: 32
        }
      },
      "259": {
        start: {
          line: 771,
          column: 32
        },
        end: {
          line: 771,
          column: 101
        }
      },
      "260": {
        start: {
          line: 783,
          column: 8
        },
        end: {
          line: 791,
          column: 11
        }
      },
      "261": {
        start: {
          line: 801,
          column: 26
        },
        end: {
          line: 801,
          column: 42
        }
      },
      "262": {
        start: {
          line: 803,
          column: 8
        },
        end: {
          line: 805,
          column: 9
        }
      },
      "263": {
        start: {
          line: 804,
          column: 12
        },
        end: {
          line: 804,
          column: 34
        }
      },
      "264": {
        start: {
          line: 806,
          column: 8
        },
        end: {
          line: 806,
          column: 25
        }
      },
      "265": {
        start: {
          line: 812,
          column: 8
        },
        end: {
          line: 812,
          column: 33
        }
      },
      "266": {
        start: {
          line: 818,
          column: 8
        },
        end: {
          line: 818,
          column: 34
        }
      },
      "267": {
        start: {
          line: 826,
          column: 8
        },
        end: {
          line: 826,
          column: 52
        }
      },
      "268": {
        start: {
          line: 827,
          column: 8
        },
        end: {
          line: 827,
          column: 73
        }
      },
      "269": {
        start: {
          line: 833,
          column: 8
        },
        end: {
          line: 833,
          column: 66
        }
      },
      "270": {
        start: {
          line: 835,
          column: 8
        },
        end: {
          line: 838,
          column: 9
        }
      },
      "271": {
        start: {
          line: 836,
          column: 12
        },
        end: {
          line: 836,
          column: 54
        }
      },
      "272": {
        start: {
          line: 837,
          column: 12
        },
        end: {
          line: 837,
          column: 46
        }
      },
      "273": {
        start: {
          line: 840,
          column: 8
        },
        end: {
          line: 849,
          column: 11
        }
      },
      "274": {
        start: {
          line: 850,
          column: 8
        },
        end: {
          line: 850,
          column: 67
        }
      },
      "275": {
        start: {
          line: 853,
          column: 0
        },
        end: {
          line: 853,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 49
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 83
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 35
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 122
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 58
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 226
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 46
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 273
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 34
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 329
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 22
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 359
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 360,
            column: 61
          },
          end: {
            line: 360,
            column: 62
          }
        },
        loc: {
          start: {
            line: 360,
            column: 70
          },
          end: {
            line: 360,
            column: 93
          }
        },
        line: 360
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 33
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 368
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 370,
            column: 18
          },
          end: {
            line: 370,
            column: 19
          }
        },
        loc: {
          start: {
            line: 370,
            column: 28
          },
          end: {
            line: 370,
            column: 97
          }
        },
        line: 370
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 24
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 379
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        loc: {
          start: {
            line: 387,
            column: 22
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 387
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 61
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 396
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 400,
            column: 58
          },
          end: {
            line: 400,
            column: 59
          }
        },
        loc: {
          start: {
            line: 400,
            column: 67
          },
          end: {
            line: 400,
            column: 122
          }
        },
        line: 400
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 402,
            column: 48
          },
          end: {
            line: 402,
            column: 49
          }
        },
        loc: {
          start: {
            line: 402,
            column: 58
          },
          end: {
            line: 402,
            column: 112
          }
        },
        line: 402
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 38
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 429
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        },
        loc: {
          start: {
            line: 489,
            column: 37
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 489
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 62
          },
          end: {
            line: 535,
            column: 5
          }
        },
        line: 504
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 58
          },
          end: {
            line: 550,
            column: 5
          }
        },
        line: 543
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 558,
            column: 5
          }
        },
        loc: {
          start: {
            line: 558,
            column: 58
          },
          end: {
            line: 580,
            column: 5
          }
        },
        line: 558
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 587,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        },
        loc: {
          start: {
            line: 587,
            column: 54
          },
          end: {
            line: 604,
            column: 5
          }
        },
        line: 587
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 608,
            column: 4
          },
          end: {
            line: 608,
            column: 5
          }
        },
        loc: {
          start: {
            line: 608,
            column: 31
          },
          end: {
            line: 633,
            column: 5
          }
        },
        line: 608
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 623,
            column: 31
          },
          end: {
            line: 623,
            column: 32
          }
        },
        loc: {
          start: {
            line: 623,
            column: 40
          },
          end: {
            line: 626,
            column: 17
          }
        },
        line: 623
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 637,
            column: 4
          },
          end: {
            line: 637,
            column: 5
          }
        },
        loc: {
          start: {
            line: 637,
            column: 33
          },
          end: {
            line: 642,
            column: 5
          }
        },
        line: 637
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 638,
            column: 49
          },
          end: {
            line: 638,
            column: 50
          }
        },
        loc: {
          start: {
            line: 638,
            column: 61
          },
          end: {
            line: 640,
            column: 9
          }
        },
        line: 638
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 646,
            column: 4
          },
          end: {
            line: 646,
            column: 5
          }
        },
        loc: {
          start: {
            line: 646,
            column: 33
          },
          end: {
            line: 658,
            column: 5
          }
        },
        line: 646
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 662,
            column: 4
          },
          end: {
            line: 662,
            column: 5
          }
        },
        loc: {
          start: {
            line: 662,
            column: 39
          },
          end: {
            line: 683,
            column: 5
          }
        },
        line: 662
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 689,
            column: 4
          },
          end: {
            line: 689,
            column: 5
          }
        },
        loc: {
          start: {
            line: 689,
            column: 40
          },
          end: {
            line: 716,
            column: 5
          }
        },
        line: 689
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 710,
            column: 64
          },
          end: {
            line: 710,
            column: 65
          }
        },
        loc: {
          start: {
            line: 710,
            column: 69
          },
          end: {
            line: 710,
            column: 108
          }
        },
        line: 710
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 720,
            column: 4
          },
          end: {
            line: 720,
            column: 5
          }
        },
        loc: {
          start: {
            line: 720,
            column: 27
          },
          end: {
            line: 729,
            column: 5
          }
        },
        line: 720
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 724,
            column: 20
          },
          end: {
            line: 724,
            column: 21
          }
        },
        loc: {
          start: {
            line: 724,
            column: 29
          },
          end: {
            line: 724,
            column: 65
          }
        },
        line: 724
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 725,
            column: 20
          },
          end: {
            line: 725,
            column: 21
          }
        },
        loc: {
          start: {
            line: 725,
            column: 38
          },
          end: {
            line: 728,
            column: 9
          }
        },
        line: 725
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 738,
            column: 4
          },
          end: {
            line: 738,
            column: 5
          }
        },
        loc: {
          start: {
            line: 738,
            column: 59
          },
          end: {
            line: 755,
            column: 5
          }
        },
        line: 738
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 759,
            column: 4
          },
          end: {
            line: 759,
            column: 5
          }
        },
        loc: {
          start: {
            line: 759,
            column: 29
          },
          end: {
            line: 774,
            column: 5
          }
        },
        line: 759
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 771,
            column: 22
          },
          end: {
            line: 771,
            column: 23
          }
        },
        loc: {
          start: {
            line: 771,
            column: 32
          },
          end: {
            line: 771,
            column: 101
          }
        },
        line: 771
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 782,
            column: 4
          },
          end: {
            line: 782,
            column: 5
          }
        },
        loc: {
          start: {
            line: 782,
            column: 67
          },
          end: {
            line: 792,
            column: 5
          }
        },
        line: 782
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 799,
            column: 4
          },
          end: {
            line: 799,
            column: 5
          }
        },
        loc: {
          start: {
            line: 799,
            column: 33
          },
          end: {
            line: 807,
            column: 5
          }
        },
        line: 799
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 811,
            column: 4
          },
          end: {
            line: 811,
            column: 5
          }
        },
        loc: {
          start: {
            line: 811,
            column: 20
          },
          end: {
            line: 813,
            column: 5
          }
        },
        line: 811
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 817,
            column: 4
          },
          end: {
            line: 817,
            column: 5
          }
        },
        loc: {
          start: {
            line: 817,
            column: 16
          },
          end: {
            line: 819,
            column: 5
          }
        },
        line: 817
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 825,
            column: 4
          },
          end: {
            line: 825,
            column: 5
          }
        },
        loc: {
          start: {
            line: 825,
            column: 25
          },
          end: {
            line: 828,
            column: 5
          }
        },
        line: 825
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 832,
            column: 4
          },
          end: {
            line: 832,
            column: 5
          }
        },
        loc: {
          start: {
            line: 832,
            column: 21
          },
          end: {
            line: 851,
            column: 5
          }
        },
        line: 832
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "1": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "2": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "3": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "4": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "5": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "6": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "7": {
        loc: {
          start: {
            line: 226,
            column: 31
          },
          end: {
            line: 226,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 226,
            column: 40
          },
          end: {
            line: 226,
            column: 56
          }
        }],
        line: 226
      },
      "8": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "9": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "10": {
        loc: {
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 235,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 235,
            column: 41
          }
        }, {
          start: {
            line: 235,
            column: 45
          },
          end: {
            line: 235,
            column: 73
          }
        }],
        line: 235
      },
      "11": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "12": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "13": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "14": {
        loc: {
          start: {
            line: 337,
            column: 41
          },
          end: {
            line: 337,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 41
          },
          end: {
            line: 337,
            column: 67
          }
        }, {
          start: {
            line: 337,
            column: 71
          },
          end: {
            line: 337,
            column: 81
          }
        }],
        line: 337
      },
      "15": {
        loc: {
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "16": {
        loc: {
          start: {
            line: 343,
            column: 16
          },
          end: {
            line: 345,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 16
          },
          end: {
            line: 345,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "17": {
        loc: {
          start: {
            line: 343,
            column: 20
          },
          end: {
            line: 343,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 20
          },
          end: {
            line: 343,
            column: 31
          }
        }, {
          start: {
            line: 343,
            column: 35
          },
          end: {
            line: 343,
            column: 78
          }
        }],
        line: 343
      },
      "18": {
        loc: {
          start: {
            line: 368,
            column: 20
          },
          end: {
            line: 368,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 368,
            column: 28
          },
          end: {
            line: 368,
            column: 31
          }
        }],
        line: 368
      },
      "19": {
        loc: {
          start: {
            line: 380,
            column: 15
          },
          end: {
            line: 380,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 15
          },
          end: {
            line: 380,
            column: 41
          }
        }, {
          start: {
            line: 380,
            column: 45
          },
          end: {
            line: 380,
            column: 49
          }
        }],
        line: 380
      },
      "20": {
        loc: {
          start: {
            line: 396,
            column: 24
          },
          end: {
            line: 396,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 396,
            column: 33
          },
          end: {
            line: 396,
            column: 59
          }
        }],
        line: 396
      },
      "21": {
        loc: {
          start: {
            line: 402,
            column: 58
          },
          end: {
            line: 402,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 58
          },
          end: {
            line: 402,
            column: 87
          }
        }, {
          start: {
            line: 402,
            column: 91
          },
          end: {
            line: 402,
            column: 112
          }
        }],
        line: 402
      },
      "22": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "23": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "24": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 442,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 442,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "25": {
        loc: {
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 440,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 440,
            column: 32
          }
        }, {
          start: {
            line: 440,
            column: 36
          },
          end: {
            line: 440,
            column: 72
          }
        }],
        line: 440
      },
      "26": {
        loc: {
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "27": {
        loc: {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 443,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 443,
            column: 41
          }
        }, {
          start: {
            line: 443,
            column: 46
          },
          end: {
            line: 443,
            column: 65
          }
        }, {
          start: {
            line: 443,
            column: 69
          },
          end: {
            line: 443,
            column: 104
          }
        }],
        line: 443
      },
      "28": {
        loc: {
          start: {
            line: 447,
            column: 62
          },
          end: {
            line: 447,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 62
          },
          end: {
            line: 447,
            column: 99
          }
        }, {
          start: {
            line: 447,
            column: 103
          },
          end: {
            line: 447,
            column: 104
          }
        }],
        line: 447
      },
      "29": {
        loc: {
          start: {
            line: 447,
            column: 73
          },
          end: {
            line: 447,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 73
          },
          end: {
            line: 447,
            column: 91
          }
        }, {
          start: {
            line: 447,
            column: 95
          },
          end: {
            line: 447,
            column: 98
          }
        }],
        line: 447
      },
      "30": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 451,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 451,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "31": {
        loc: {
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "32": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "33": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "34": {
        loc: {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 516,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 516,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "35": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "36": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "37": {
        loc: {
          start: {
            line: 524,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "38": {
        loc: {
          start: {
            line: 524,
            column: 12
          },
          end: {
            line: 524,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 12
          },
          end: {
            line: 524,
            column: 48
          }
        }, {
          start: {
            line: 524,
            column: 52
          },
          end: {
            line: 524,
            column: 86
          }
        }],
        line: 524
      },
      "39": {
        loc: {
          start: {
            line: 531,
            column: 23
          },
          end: {
            line: 531,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 531,
            column: 43
          },
          end: {
            line: 531,
            column: 46
          }
        }, {
          start: {
            line: 531,
            column: 49
          },
          end: {
            line: 531,
            column: 69
          }
        }],
        line: 531
      },
      "40": {
        loc: {
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "41": {
        loc: {
          start: {
            line: 562,
            column: 12
          },
          end: {
            line: 562,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 562,
            column: 12
          },
          end: {
            line: 562,
            column: 31
          }
        }, {
          start: {
            line: 562,
            column: 35
          },
          end: {
            line: 562,
            column: 71
          }
        }],
        line: 562
      },
      "42": {
        loc: {
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 567,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 8
          },
          end: {
            line: 567,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "43": {
        loc: {
          start: {
            line: 565,
            column: 12
          },
          end: {
            line: 565,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 565,
            column: 12
          },
          end: {
            line: 565,
            column: 32
          }
        }, {
          start: {
            line: 565,
            column: 36
          },
          end: {
            line: 565,
            column: 73
          }
        }],
        line: 565
      },
      "44": {
        loc: {
          start: {
            line: 569,
            column: 8
          },
          end: {
            line: 571,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 8
          },
          end: {
            line: 571,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 569
      },
      "45": {
        loc: {
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 569,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 12
          },
          end: {
            line: 569,
            column: 31
          }
        }, {
          start: {
            line: 569,
            column: 35
          },
          end: {
            line: 569,
            column: 109
          }
        }],
        line: 569
      },
      "46": {
        loc: {
          start: {
            line: 692,
            column: 12
          },
          end: {
            line: 693,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 692,
            column: 12
          },
          end: {
            line: 693,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 692
      },
      "47": {
        loc: {
          start: {
            line: 695,
            column: 12
          },
          end: {
            line: 708,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 695,
            column: 12
          },
          end: {
            line: 708,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 695
      },
      "48": {
        loc: {
          start: {
            line: 698,
            column: 16
          },
          end: {
            line: 703,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 698,
            column: 16
          },
          end: {
            line: 703,
            column: 17
          }
        }, {
          start: {
            line: 701,
            column: 21
          },
          end: {
            line: 703,
            column: 17
          }
        }],
        line: 698
      },
      "49": {
        loc: {
          start: {
            line: 705,
            column: 16
          },
          end: {
            line: 707,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 16
          },
          end: {
            line: 707,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 705
      },
      "50": {
        loc: {
          start: {
            line: 741,
            column: 8
          },
          end: {
            line: 748,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 741,
            column: 8
          },
          end: {
            line: 748,
            column: 9
          }
        }, {
          start: {
            line: 746,
            column: 13
          },
          end: {
            line: 748,
            column: 9
          }
        }],
        line: 741
      },
      "51": {
        loc: {
          start: {
            line: 764,
            column: 12
          },
          end: {
            line: 766,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 764,
            column: 12
          },
          end: {
            line: 766,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 764
      },
      "52": {
        loc: {
          start: {
            line: 764,
            column: 16
          },
          end: {
            line: 764,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 764,
            column: 16
          },
          end: {
            line: 764,
            column: 38
          }
        }, {
          start: {
            line: 764,
            column: 43
          },
          end: {
            line: 764,
            column: 68
          }
        }, {
          start: {
            line: 764,
            column: 72
          },
          end: {
            line: 764,
            column: 100
          }
        }],
        line: 764
      },
      "53": {
        loc: {
          start: {
            line: 769,
            column: 8
          },
          end: {
            line: 773,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 769,
            column: 8
          },
          end: {
            line: 773,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 769
      },
      "54": {
        loc: {
          start: {
            line: 782,
            column: 46
          },
          end: {
            line: 782,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 782,
            column: 63
          },
          end: {
            line: 782,
            column: 65
          }
        }],
        line: 782
      },
      "55": {
        loc: {
          start: {
            line: 803,
            column: 8
          },
          end: {
            line: 805,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 803,
            column: 8
          },
          end: {
            line: 805,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 803
      },
      "56": {
        loc: {
          start: {
            line: 835,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 835,
            column: 8
          },
          end: {
            line: 838,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 835
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0],
      "53": [0, 0],
      "54": [0],
      "55": [0, 0],
      "56": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\orders\\order-manager.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\orders\\order-manager.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * ORDER MANAGEMENT AND EXECUTION SYSTEM\r\n * =============================================================================\r\n * \r\n * This module implements a comprehensive order management system for Gate.io\r\n * cryptocurrency trading with validation, confirmation, status monitoring,\r\n * and comprehensive audit logging for all order operations.\r\n * \r\n * SECURITY FEATURES:\r\n * - Order validation with risk assessment before placement\r\n * - Real-time order status monitoring and updates\r\n * - Comprehensive audit logging for all order operations\r\n * - Order cancellation and modification with safety checks\r\n * - Position tracking and reconciliation\r\n * - Emergency stop-loss and position closure capabilities\r\n * \r\n * CRITICAL TRADING NOTICE:\r\n * This system handles real financial assets and trading operations.\r\n * All order operations must be validated and logged for audit compliance.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { AuditService } from '@/security/audit-service';\r\nimport { GateIOClient } from '../api/gate-io-client';\r\nimport { \r\n  OrderRequest, \r\n  OrderResponse, \r\n  OrderModifyRequest, \r\n  OrderStatus, \r\n  OrderSide, \r\n  OrderType,\r\n  TradingSymbol,\r\n  TimeInForce \r\n} from '../api/types';\r\n\r\n/**\r\n * Order validation result\r\n */\r\ninterface OrderValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  warnings: string[];\r\n  riskScore: number; // 0-100\r\n  estimatedCost: number;\r\n  estimatedFees: number;\r\n}\r\n\r\n/**\r\n * Order execution result\r\n */\r\ninterface OrderExecutionResult {\r\n  success: boolean;\r\n  order: OrderResponse | null;\r\n  executionTime: number;\r\n  error?: string;\r\n  validationResult: OrderValidationResult;\r\n}\r\n\r\n/**\r\n * Order status update\r\n */\r\ninterface OrderStatusUpdate {\r\n  orderId: string;\r\n  oldStatus: OrderStatus;\r\n  newStatus: OrderStatus;\r\n  timestamp: Date;\r\n  filledAmount?: string;\r\n  remainingAmount?: string;\r\n  averagePrice?: string;\r\n}\r\n\r\n/**\r\n * Position summary\r\n */\r\ninterface PositionSummary {\r\n  symbol: string;\r\n  side: 'long' | 'short' | 'neutral';\r\n  totalAmount: number;\r\n  averagePrice: number;\r\n  unrealizedPnL: number;\r\n  realizedPnL: number;\r\n  openOrders: OrderResponse[];\r\n  lastUpdate: Date;\r\n}\r\n\r\n/**\r\n * Order management statistics\r\n */\r\ninterface OrderManagementStats {\r\n  totalOrders: number;\r\n  successfulOrders: number;\r\n  failedOrders: number;\r\n  cancelledOrders: number;\r\n  totalVolume: number;\r\n  totalFees: number;\r\n  averageExecutionTime: number;\r\n  successRate: number;\r\n  lastOrderTime: Date | null;\r\n}\r\n\r\n/**\r\n * Order execution configuration\r\n */\r\ninterface OrderExecutionConfig {\r\n  enablePreValidation: boolean;\r\n  enablePostValidation: boolean;\r\n  maxOrderValue: number;\r\n  maxDailyVolume: number;\r\n  enableRiskChecks: boolean;\r\n  confirmationRequired: boolean;\r\n  executionTimeout: number;\r\n}\r\n\r\n/**\r\n * Order Management and Execution System\r\n * Handles all order lifecycle operations with comprehensive validation and monitoring\r\n */\r\nexport class OrderManager extends EventEmitter {\r\n  private gateIOClient: GateIOClient;\r\n  private auditService: AuditService;\r\n  private activeOrders: Map<string, OrderResponse> = new Map();\r\n  private orderHistory: OrderResponse[] = [];\r\n  private positions: Map<string, PositionSummary> = new Map();\r\n  private stats: OrderManagementStats;\r\n  private config: OrderExecutionConfig;\r\n  \r\n  // Monitoring and validation\r\n  private statusMonitorInterval: NodeJS.Timeout | null = null;\r\n  private readonly statusCheckInterval: number = 5000; // 5 seconds\r\n  private readonly maxOrderAge: number = 86400000; // 24 hours in milliseconds\r\n\r\n  constructor(gateIOClient: GateIOClient) {\r\n    super();\r\n    \r\n    this.gateIOClient = gateIOClient;\r\n    this.auditService = new AuditService();\r\n    \r\n    // Initialize statistics\r\n    this.stats = {\r\n      totalOrders: 0,\r\n      successfulOrders: 0,\r\n      failedOrders: 0,\r\n      cancelledOrders: 0,\r\n      totalVolume: 0,\r\n      totalFees: 0,\r\n      averageExecutionTime: 0,\r\n      successRate: 0,\r\n      lastOrderTime: null,\r\n    };\r\n    \r\n    // Default configuration\r\n    this.config = {\r\n      enablePreValidation: true,\r\n      enablePostValidation: true,\r\n      maxOrderValue: 10000, // $10,000 USD\r\n      maxDailyVolume: 100000, // $100,000 USD\r\n      enableRiskChecks: true,\r\n      confirmationRequired: false,\r\n      executionTimeout: 30000, // 30 seconds\r\n    };\r\n    \r\n    logger.info('\uD83D\uDCB9 Order Manager initialized with comprehensive validation');\r\n  }\r\n\r\n  /**\r\n   * Initialize order manager with configuration\r\n   * \r\n   * @param config - Order execution configuration\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async initialize(config?: Partial<OrderExecutionConfig>): Promise<boolean> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Initializing Order Manager...');\r\n      \r\n      // Update configuration\r\n      if (config) {\r\n        this.config = { ...this.config, ...config };\r\n      }\r\n      \r\n      // Load existing orders from exchange\r\n      await this.loadExistingOrders();\r\n      \r\n      // Start order status monitoring\r\n      this.startOrderStatusMonitoring();\r\n      \r\n      // Initialize position tracking\r\n      await this.initializePositionTracking();\r\n      \r\n      await this.auditService.logSecurityEvent({\r\n        type: 'ORDER_MANAGER_INITIALIZED',\r\n        severity: 'INFO',\r\n        details: { config: this.config },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.info('\u2705 Order Manager initialized successfully');\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize Order Manager:', error);\r\n      await this.auditService.logSecurityEvent({\r\n        type: 'ORDER_MANAGER_INIT_FAILED',\r\n        severity: 'ERROR',\r\n        details: { error: error.message },\r\n        timestamp: new Date(),\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Place new order with comprehensive validation and confirmation\r\n   * \r\n   * @param orderRequest - Order request parameters\r\n   * @returns Promise<OrderExecutionResult> - Order execution result\r\n   */\r\n  public async placeOrder(orderRequest: OrderRequest): Promise<OrderExecutionResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      logger.info(`\uD83D\uDCDD Placing ${orderRequest.side} order for ${orderRequest.amount} ${orderRequest.currency_pair}`);\r\n      \r\n      // Pre-validation\r\n      const validationResult = await this.validateOrder(orderRequest);\r\n      if (!validationResult.isValid) {\r\n        const error = `Order validation failed: ${validationResult.errors.join(', ')}`;\r\n        await this.logOrderEvent('ORDER_VALIDATION_FAILED', orderRequest, { validationResult });\r\n        return {\r\n          success: false,\r\n          order: null,\r\n          executionTime: Date.now() - startTime,\r\n          error,\r\n          validationResult,\r\n        };\r\n      }\r\n      \r\n      // Log validation warnings if any\r\n      if (validationResult.warnings.length > 0) {\r\n        logger.warn('\u26A0\uFE0F Order validation warnings:', validationResult.warnings);\r\n      }\r\n      \r\n      // Risk assessment\r\n      if (this.config.enableRiskChecks) {\r\n        const riskAssessment = await this.assessOrderRisk(orderRequest, validationResult);\r\n        if (riskAssessment.riskScore > 80) {\r\n          const error = `Order risk score too high: ${riskAssessment.riskScore}/100`;\r\n          await this.logOrderEvent('ORDER_HIGH_RISK_REJECTED', orderRequest, { riskAssessment });\r\n          return {\r\n            success: false,\r\n            order: null,\r\n            executionTime: Date.now() - startTime,\r\n            error,\r\n            validationResult,\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Execute order through Gate.io API\r\n      const orderResponse = await this.executeOrder(orderRequest);\r\n      \r\n      // Post-validation\r\n      if (this.config.enablePostValidation) {\r\n        const postValidation = await this.validateOrderExecution(orderRequest, orderResponse);\r\n        if (!postValidation.isValid) {\r\n          logger.error('\u274C Post-execution validation failed:', postValidation.errors);\r\n          // Attempt to cancel the order if validation fails\r\n          await this.cancelOrder(orderResponse.id, 'Post-validation failure');\r\n        }\r\n      }\r\n      \r\n      // Store order in active orders\r\n      this.activeOrders.set(orderResponse.id, orderResponse);\r\n      this.orderHistory.push(orderResponse);\r\n      \r\n      // Update statistics\r\n      const executionTime = Date.now() - startTime;\r\n      this.updateOrderStats(true, executionTime, parseFloat(orderRequest.amount), validationResult.estimatedFees);\r\n      \r\n      // Update position tracking\r\n      await this.updatePositionTracking(orderResponse);\r\n      \r\n      // Log successful order placement\r\n      await this.logOrderEvent('ORDER_PLACED_SUCCESS', orderRequest, { \r\n        orderResponse, \r\n        executionTime,\r\n        validationResult \r\n      });\r\n      \r\n      // Emit order placed event\r\n      this.emit('orderPlaced', orderResponse);\r\n      \r\n      logger.info(`\u2705 Order placed successfully: ${orderResponse.id} (${executionTime}ms)`);\r\n      \r\n      return {\r\n        success: true,\r\n        order: orderResponse,\r\n        executionTime,\r\n        validationResult,\r\n      };\r\n      \r\n    } catch (error) {\r\n      const executionTime = Date.now() - startTime;\r\n      \r\n      // Update statistics\r\n      this.updateOrderStats(false, executionTime, 0, 0);\r\n      \r\n      // Log failed order placement\r\n      await this.logOrderEvent('ORDER_PLACEMENT_FAILED', orderRequest, { \r\n        error: error.message,\r\n        executionTime \r\n      });\r\n      \r\n      logger.error(`\u274C Failed to place order: ${error.message}`);\r\n      \r\n      return {\r\n        success: false,\r\n        order: null,\r\n        executionTime,\r\n        error: error.message,\r\n        validationResult: {\r\n          isValid: false,\r\n          errors: [error.message],\r\n          warnings: [],\r\n          riskScore: 100,\r\n          estimatedCost: 0,\r\n          estimatedFees: 0,\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancel existing order with safety checks\r\n   * \r\n   * @param orderId - Order ID to cancel\r\n   * @param reason - Cancellation reason\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async cancelOrder(orderId: string, reason: string = 'User requested'): Promise<boolean> {\r\n    try {\r\n      logger.info(`\uD83D\uDEAB Cancelling order: ${orderId} (reason: ${reason})`);\r\n      \r\n      // Check if order exists and is cancellable\r\n      const order = this.activeOrders.get(orderId);\r\n      if (!order) {\r\n        logger.warn(`\u26A0\uFE0F Order not found in active orders: ${orderId}`);\r\n        return false;\r\n      }\r\n      \r\n      if (order.status === 'closed' || order.status === 'cancelled') {\r\n        logger.warn(`\u26A0\uFE0F Order already ${order.status}: ${orderId}`);\r\n        return false;\r\n      }\r\n      \r\n      // Execute cancellation through Gate.io API\r\n      await this.gateIOClient.makeRequest({\r\n        method: 'DELETE',\r\n        url: `/spot/orders/${orderId}`,\r\n        data: { currency_pair: order.currency_pair },\r\n      });\r\n      \r\n      // Update order status\r\n      const updatedOrder = { ...order, status: 'cancelled' as OrderStatus };\r\n      this.activeOrders.set(orderId, updatedOrder);\r\n      \r\n      // Update statistics\r\n      this.stats.cancelledOrders++;\r\n      \r\n      // Log cancellation\r\n      await this.logOrderEvent('ORDER_CANCELLED', order, { reason });\r\n      \r\n      // Emit order cancelled event\r\n      this.emit('orderCancelled', updatedOrder, reason);\r\n      \r\n      logger.info(`\u2705 Order cancelled successfully: ${orderId}`);\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to cancel order ${orderId}:`, error);\r\n      await this.logOrderEvent('ORDER_CANCELLATION_FAILED', { orderId }, { \r\n        error: error.message, \r\n        reason \r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Modify existing order\r\n   * \r\n   * @param orderId - Order ID to modify\r\n   * @param modifications - Order modifications\r\n   * @returns Promise<OrderResponse | null> - Modified order or null if failed\r\n   */\r\n  public async modifyOrder(\r\n    orderId: string, \r\n    modifications: OrderModifyRequest\r\n  ): Promise<OrderResponse | null> {\r\n    try {\r\n      logger.info(`\u270F\uFE0F Modifying order: ${orderId}`);\r\n      \r\n      // Check if order exists and is modifiable\r\n      const order = this.activeOrders.get(orderId);\r\n      if (!order) {\r\n        logger.warn(`\u26A0\uFE0F Order not found: ${orderId}`);\r\n        return null;\r\n      }\r\n      \r\n      if (order.status !== 'open') {\r\n        logger.warn(`\u26A0\uFE0F Order not modifiable (status: ${order.status}): ${orderId}`);\r\n        return null;\r\n      }\r\n      \r\n      // Validate modifications\r\n      const validationResult = await this.validateOrderModification(order, modifications);\r\n      if (!validationResult.isValid) {\r\n        logger.error('\u274C Order modification validation failed:', validationResult.errors);\r\n        return null;\r\n      }\r\n      \r\n      // Execute modification through Gate.io API\r\n      const modifiedOrder = await this.gateIOClient.makeRequest<OrderResponse>({\r\n        method: 'PATCH',\r\n        url: `/spot/orders/${orderId}`,\r\n        data: {\r\n          currency_pair: order.currency_pair,\r\n          ...modifications,\r\n        },\r\n      });\r\n      \r\n      // Update stored order\r\n      this.activeOrders.set(orderId, modifiedOrder);\r\n      \r\n      // Log modification\r\n      await this.logOrderEvent('ORDER_MODIFIED', order, { \r\n        modifications, \r\n        modifiedOrder,\r\n        validationResult \r\n      });\r\n      \r\n      // Emit order modified event\r\n      this.emit('orderModified', modifiedOrder, modifications);\r\n      \r\n      logger.info(`\u2705 Order modified successfully: ${orderId}`);\r\n      return modifiedOrder;\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to modify order ${orderId}:`, error);\r\n      await this.logOrderEvent('ORDER_MODIFICATION_FAILED', { orderId }, { \r\n        error: error.message, \r\n        modifications \r\n      });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get order status with real-time updates\r\n   * \r\n   * @param orderId - Order ID\r\n   * @returns Promise<OrderResponse | null> - Order details or null if not found\r\n   */\r\n  public async getOrderStatus(orderId: string): Promise<OrderResponse | null> {\r\n    try {\r\n      // First check local cache\r\n      const cachedOrder = this.activeOrders.get(orderId);\r\n      \r\n      // Fetch latest status from exchange\r\n      const orderResponse = await this.gateIOClient.makeRequest<OrderResponse>({\r\n        method: 'GET',\r\n        url: `/spot/orders/${orderId}`,\r\n        params: { currency_pair: cachedOrder?.currency_pair || 'BTC_USDT' },\r\n      });\r\n      \r\n      // Update local cache\r\n      if (orderResponse) {\r\n        this.activeOrders.set(orderId, orderResponse);\r\n        \r\n        // Check for status changes\r\n        if (cachedOrder && cachedOrder.status !== orderResponse.status) {\r\n          await this.handleOrderStatusChange(cachedOrder, orderResponse);\r\n        }\r\n      }\r\n      \r\n      return orderResponse;\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to get order status ${orderId}:`, error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all active orders\r\n   * \r\n   * @returns Array of active orders\r\n   */\r\n  public getActiveOrders(): OrderResponse[] {\r\n    return Array.from(this.activeOrders.values()).filter(\r\n      order => order.status === 'open'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get order history\r\n   * \r\n   * @param limit - Maximum number of orders to return\r\n   * @returns Array of historical orders\r\n   */\r\n  public getOrderHistory(limit: number = 100): OrderResponse[] {\r\n    return this.orderHistory\r\n      .sort((a, b) => new Date(b.create_time).getTime() - new Date(a.create_time).getTime())\r\n      .slice(0, limit);\r\n  }\r\n\r\n  /**\r\n   * Get position summary for symbol\r\n   * \r\n   * @param symbol - Trading symbol\r\n   * @returns Position summary or null if no position\r\n   */\r\n  public getPosition(symbol: string): PositionSummary | null {\r\n    return this.positions.get(symbol) || null;\r\n  }\r\n\r\n  /**\r\n   * Get all positions\r\n   * \r\n   * @returns Array of all position summaries\r\n   */\r\n  public getAllPositions(): PositionSummary[] {\r\n    return Array.from(this.positions.values());\r\n  }\r\n\r\n  /**\r\n   * Emergency stop - cancel all open orders\r\n   * \r\n   * @param reason - Emergency stop reason\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async emergencyStop(reason: string = 'Emergency stop triggered'): Promise<boolean> {\r\n    try {\r\n      logger.warn(`\uD83D\uDEA8 EMERGENCY STOP: ${reason}`);\r\n      \r\n      const activeOrders = this.getActiveOrders();\r\n      const cancellationPromises = activeOrders.map(order => \r\n        this.cancelOrder(order.id, `Emergency stop: ${reason}`)\r\n      );\r\n      \r\n      const results = await Promise.allSettled(cancellationPromises);\r\n      const successCount = results.filter(result => \r\n        result.status === 'fulfilled' && result.value === true\r\n      ).length;\r\n      \r\n      await this.auditService.logSecurityEvent({\r\n        type: 'EMERGENCY_STOP_EXECUTED',\r\n        severity: 'CRITICAL',\r\n        details: { \r\n          reason, \r\n          totalOrders: activeOrders.length, \r\n          cancelledOrders: successCount \r\n        },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.warn(`\uD83D\uDEA8 Emergency stop completed: ${successCount}/${activeOrders.length} orders cancelled`);\r\n      \r\n      // Emit emergency stop event\r\n      this.emit('emergencyStop', reason, successCount, activeOrders.length);\r\n      \r\n      return successCount === activeOrders.length;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Emergency stop failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate order before placement\r\n   * \r\n   * @param orderRequest - Order request to validate\r\n   * @returns Promise<OrderValidationResult> - Validation result\r\n   */\r\n  private async validateOrder(orderRequest: OrderRequest): Promise<OrderValidationResult> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    let riskScore = 0;\r\n    \r\n    // Validate required fields\r\n    if (!orderRequest.currency_pair) {\r\n      errors.push('Currency pair is required');\r\n    }\r\n    \r\n    if (!orderRequest.side) {\r\n      errors.push('Order side is required');\r\n    }\r\n    \r\n    if (!orderRequest.amount || parseFloat(orderRequest.amount) <= 0) {\r\n      errors.push('Order amount must be positive');\r\n    }\r\n    \r\n    if (orderRequest.type === 'limit' && (!orderRequest.price || parseFloat(orderRequest.price) <= 0)) {\r\n      errors.push('Limit orders require a positive price');\r\n    }\r\n    \r\n    // Validate order size limits\r\n    const orderValue = parseFloat(orderRequest.amount) * (parseFloat(orderRequest.price || '0') || 1);\r\n    if (orderValue > this.config.maxOrderValue) {\r\n      errors.push(`Order value exceeds maximum: ${orderValue} > ${this.config.maxOrderValue}`);\r\n      riskScore += 30;\r\n    }\r\n    \r\n    // Check daily volume limits\r\n    const todayVolume = this.calculateTodayVolume();\r\n    if (todayVolume + orderValue > this.config.maxDailyVolume) {\r\n      warnings.push(`Order would exceed daily volume limit: ${todayVolume + orderValue} > ${this.config.maxDailyVolume}`);\r\n      riskScore += 20;\r\n    }\r\n    \r\n    // Estimate costs and fees\r\n    const estimatedCost = orderValue;\r\n    const estimatedFees = orderValue * 0.002; // Assume 0.2% fee\r\n    \r\n    // Check account balance (simplified)\r\n    try {\r\n      const balances = await this.gateIOClient.makeRequest({\r\n        method: 'GET',\r\n        url: '/spot/accounts',\r\n      });\r\n      \r\n      // Add balance validation logic here\r\n      // This is simplified - in production, you'd check specific currency balances\r\n      \r\n    } catch (error) {\r\n      warnings.push('Could not verify account balance');\r\n      riskScore += 10;\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n      riskScore,\r\n      estimatedCost,\r\n      estimatedFees,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Execute order through Gate.io API\r\n   * \r\n   * @param orderRequest - Order request\r\n   * @returns Promise<OrderResponse> - Order response\r\n   */\r\n  private async executeOrder(orderRequest: OrderRequest): Promise<OrderResponse> {\r\n    const orderResponse = await this.gateIOClient.makeRequest<OrderResponse>({\r\n      method: 'POST',\r\n      url: '/spot/orders',\r\n      data: orderRequest,\r\n    });\r\n    \r\n    return orderResponse;\r\n  }\r\n\r\n  /**\r\n   * Validate order execution\r\n   * \r\n   * @param orderRequest - Original order request\r\n   * @param orderResponse - Order response from exchange\r\n   * @returns Promise<OrderValidationResult> - Validation result\r\n   */\r\n  private async validateOrderExecution(\r\n    orderRequest: OrderRequest, \r\n    orderResponse: OrderResponse\r\n  ): Promise<OrderValidationResult> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    \r\n    // Validate response matches request\r\n    if (orderResponse.currency_pair !== orderRequest.currency_pair) {\r\n      errors.push('Currency pair mismatch');\r\n    }\r\n    \r\n    if (orderResponse.side !== orderRequest.side) {\r\n      errors.push('Order side mismatch');\r\n    }\r\n    \r\n    if (orderResponse.type !== orderRequest.type) {\r\n      errors.push('Order type mismatch');\r\n    }\r\n    \r\n    if (Math.abs(parseFloat(orderResponse.amount) - parseFloat(orderRequest.amount)) > 0.00001) {\r\n      errors.push('Order amount mismatch');\r\n    }\r\n    \r\n    // Validate order was accepted\r\n    if (!orderResponse.id) {\r\n      errors.push('Order ID not received');\r\n    }\r\n    \r\n    if (orderResponse.status === 'cancelled' || orderResponse.status === 'expired') {\r\n      warnings.push(`Order immediately ${orderResponse.status}`);\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n      riskScore: errors.length > 0 ? 100 : warnings.length * 10,\r\n      estimatedCost: 0,\r\n      estimatedFees: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Assess order risk\r\n   * \r\n   * @param orderRequest - Order request\r\n   * @param validationResult - Validation result\r\n   * @returns Promise<any> - Risk assessment\r\n   */\r\n  private async assessOrderRisk(\r\n    orderRequest: OrderRequest, \r\n    validationResult: OrderValidationResult\r\n  ): Promise<any> {\r\n    // Simplified risk assessment\r\n    // In production, this would include more sophisticated risk models\r\n    return {\r\n      riskScore: validationResult.riskScore,\r\n      factors: validationResult.warnings,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate order modification\r\n   * \r\n   * @param order - Original order\r\n   * @param modifications - Proposed modifications\r\n   * @returns Promise<OrderValidationResult> - Validation result\r\n   */\r\n  private async validateOrderModification(\r\n    order: OrderResponse, \r\n    modifications: OrderModifyRequest\r\n  ): Promise<OrderValidationResult> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    \r\n    // Validate modification parameters\r\n    if (modifications.price && parseFloat(modifications.price) <= 0) {\r\n      errors.push('Modified price must be positive');\r\n    }\r\n    \r\n    if (modifications.amount && parseFloat(modifications.amount) <= 0) {\r\n      errors.push('Modified amount must be positive');\r\n    }\r\n    \r\n    // Check if modifications are significant\r\n    if (modifications.price && Math.abs(parseFloat(modifications.price) - parseFloat(order.price)) < 0.01) {\r\n      warnings.push('Price modification is very small');\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n      riskScore: errors.length * 20,\r\n      estimatedCost: 0,\r\n      estimatedFees: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle order status changes\r\n   * \r\n   * @param oldOrder - Previous order state\r\n   * @param newOrder - New order state\r\n   */\r\n  private async handleOrderStatusChange(\r\n    oldOrder: OrderResponse, \r\n    newOrder: OrderResponse\r\n  ): Promise<void> {\r\n    const statusUpdate: OrderStatusUpdate = {\r\n      orderId: newOrder.id,\r\n      oldStatus: oldOrder.status,\r\n      newStatus: newOrder.status,\r\n      timestamp: new Date(),\r\n      filledAmount: newOrder.filled_total,\r\n      remainingAmount: newOrder.left,\r\n      averagePrice: newOrder.price,\r\n    };\r\n    \r\n    // Log status change\r\n    await this.logOrderEvent('ORDER_STATUS_CHANGED', newOrder, { statusUpdate });\r\n    \r\n    // Update position tracking\r\n    await this.updatePositionTracking(newOrder);\r\n    \r\n    // Emit status change event\r\n    this.emit('orderStatusChanged', statusUpdate);\r\n    \r\n    logger.info(`\uD83D\uDCCA Order status changed: ${statusUpdate.orderId} (${statusUpdate.oldStatus} -> ${statusUpdate.newStatus})`);\r\n  }\r\n\r\n  /**\r\n   * Load existing orders from exchange\r\n   */\r\n  private async loadExistingOrders(): Promise<void> {\r\n    try {\r\n      // Load open orders for each supported trading pair\r\n      const symbols: TradingSymbol[] = ['BTC_USDT', 'ETH_USDT'];\r\n      \r\n      for (const symbol of symbols) {\r\n        const orders = await this.gateIOClient.makeRequest<OrderResponse[]>({\r\n          method: 'GET',\r\n          url: '/spot/orders',\r\n          params: { \r\n            currency_pair: symbol,\r\n            status: 'open',\r\n            limit: 100 \r\n          },\r\n        });\r\n        \r\n        // Store active orders\r\n        orders.forEach(order => {\r\n          this.activeOrders.set(order.id, order);\r\n          this.orderHistory.push(order);\r\n        });\r\n      }\r\n      \r\n      logger.info(`\uD83D\uDCCB Loaded ${this.activeOrders.size} existing orders`);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to load existing orders:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start order status monitoring\r\n   */\r\n  private startOrderStatusMonitoring(): void {\r\n    this.statusMonitorInterval = setInterval(async () => {\r\n      await this.monitorOrderStatuses();\r\n    }, this.statusCheckInterval);\r\n    \r\n    logger.info('\uD83D\uDC41\uFE0F Started order status monitoring');\r\n  }\r\n\r\n  /**\r\n   * Monitor order statuses\r\n   */\r\n  private async monitorOrderStatuses(): Promise<void> {\r\n    const activeOrders = this.getActiveOrders();\r\n    \r\n    for (const order of activeOrders) {\r\n      try {\r\n        await this.getOrderStatus(order.id);\r\n      } catch (error) {\r\n        logger.error(`\u274C Failed to monitor order ${order.id}:`, error);\r\n      }\r\n    }\r\n    \r\n    // Clean up old orders\r\n    await this.cleanupOldOrders();\r\n  }\r\n\r\n  /**\r\n   * Initialize position tracking\r\n   */\r\n  private async initializePositionTracking(): Promise<void> {\r\n    try {\r\n      // Initialize positions for supported symbols\r\n      const symbols: TradingSymbol[] = ['BTC_USDT', 'ETH_USDT'];\r\n      \r\n      for (const symbol of symbols) {\r\n        this.positions.set(symbol, {\r\n          symbol,\r\n          side: 'neutral',\r\n          totalAmount: 0,\r\n          averagePrice: 0,\r\n          unrealizedPnL: 0,\r\n          realizedPnL: 0,\r\n          openOrders: [],\r\n          lastUpdate: new Date(),\r\n        });\r\n      }\r\n      \r\n      logger.info('\uD83D\uDCCA Position tracking initialized');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize position tracking:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update position tracking\r\n   * \r\n   * @param order - Order to update position with\r\n   */\r\n  private async updatePositionTracking(order: OrderResponse): Promise<void> {\r\n    try {\r\n      const position = this.positions.get(order.currency_pair);\r\n      if (!position) return;\r\n      \r\n      // Update position based on order status\r\n      if (order.status === 'closed') {\r\n        const filledAmount = parseFloat(order.filled_total);\r\n        const price = parseFloat(order.price);\r\n        \r\n        if (order.side === 'buy') {\r\n          position.totalAmount += filledAmount;\r\n        } else {\r\n          position.totalAmount -= filledAmount;\r\n        }\r\n        \r\n        // Recalculate average price (simplified)\r\n        if (position.totalAmount > 0) {\r\n          position.averagePrice = price; // Simplified calculation\r\n        }\r\n      }\r\n      \r\n      // Update open orders\r\n      position.openOrders = this.getActiveOrders().filter(\r\n        o => o.currency_pair === order.currency_pair\r\n      );\r\n      \r\n      position.lastUpdate = new Date();\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to update position tracking:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate today's trading volume\r\n   */\r\n  private calculateTodayVolume(): number {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    return this.orderHistory\r\n      .filter(order => new Date(order.create_time) >= today)\r\n      .reduce((total, order) => {\r\n        const volume = parseFloat(order.amount) * parseFloat(order.price);\r\n        return total + volume;\r\n      }, 0);\r\n  }\r\n\r\n  /**\r\n   * Update order statistics\r\n   * \r\n   * @param success - Order success status\r\n   * @param executionTime - Execution time in milliseconds\r\n   * @param volume - Order volume\r\n   * @param fees - Order fees\r\n   */\r\n  private updateOrderStats(\r\n    success: boolean, \r\n    executionTime: number, \r\n    volume: number, \r\n    fees: number\r\n  ): void {\r\n    this.stats.totalOrders++;\r\n    this.stats.lastOrderTime = new Date();\r\n    \r\n    if (success) {\r\n      this.stats.successfulOrders++;\r\n      this.stats.totalVolume += volume;\r\n      this.stats.totalFees += fees;\r\n    } else {\r\n      this.stats.failedOrders++;\r\n    }\r\n    \r\n    // Update average execution time\r\n    const alpha = 0.1;\r\n    this.stats.averageExecutionTime = \r\n      (alpha * executionTime) + ((1 - alpha) * this.stats.averageExecutionTime);\r\n    \r\n    // Update success rate\r\n    this.stats.successRate = (this.stats.successfulOrders / this.stats.totalOrders) * 100;\r\n  }\r\n\r\n  /**\r\n   * Clean up old orders from memory\r\n   */\r\n  private async cleanupOldOrders(): Promise<void> {\r\n    const cutoffTime = Date.now() - this.maxOrderAge;\r\n    \r\n    // Remove old orders from active orders map\r\n    for (const [orderId, order] of this.activeOrders.entries()) {\r\n      const orderTime = new Date(order.create_time).getTime();\r\n      if (orderTime < cutoffTime && (order.status === 'closed' || order.status === 'cancelled')) {\r\n        this.activeOrders.delete(orderId);\r\n      }\r\n    }\r\n    \r\n    // Limit order history size\r\n    if (this.orderHistory.length > 1000) {\r\n      this.orderHistory = this.orderHistory\r\n        .sort((a, b) => new Date(b.create_time).getTime() - new Date(a.create_time).getTime())\r\n        .slice(0, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log order event for audit trail\r\n   * \r\n   * @param eventType - Event type\r\n   * @param orderData - Order data\r\n   * @param additionalData - Additional event data\r\n   */\r\n  private async logOrderEvent(\r\n    eventType: string, \r\n    orderData: any, \r\n    additionalData: any = {}\r\n  ): Promise<void> {\r\n    await this.auditService.logSecurityEvent({\r\n      type: eventType,\r\n      severity: 'INFO',\r\n      details: {\r\n        orderData: this.sanitizeOrderData(orderData),\r\n        ...additionalData,\r\n      },\r\n      timestamp: new Date(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sanitize order data for logging\r\n   * \r\n   * @param orderData - Order data to sanitize\r\n   * @returns Sanitized order data\r\n   */\r\n  private sanitizeOrderData(orderData: any): any {\r\n    // Remove sensitive information from logs\r\n    const sanitized = { ...orderData };\r\n    \r\n    // Keep only essential order information\r\n    if (sanitized.text) {\r\n      delete sanitized.text; // May contain sensitive info\r\n    }\r\n    \r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Get order management statistics\r\n   */\r\n  public getOrderStats(): OrderManagementStats {\r\n    return { ...this.stats };\r\n  }\r\n\r\n  /**\r\n   * Get order execution configuration\r\n   */\r\n  public getConfig(): OrderExecutionConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update order execution configuration\r\n   * \r\n   * @param config - New configuration\r\n   */\r\n  public updateConfig(config: Partial<OrderExecutionConfig>): void {\r\n    this.config = { ...this.config, ...config };\r\n    logger.info('\u2699\uFE0F Order execution configuration updated');\r\n  }\r\n\r\n  /**\r\n   * Graceful shutdown\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    logger.info('\uD83D\uDED1 Shutting down Order Manager...');\r\n    \r\n    // Stop status monitoring\r\n    if (this.statusMonitorInterval) {\r\n      clearInterval(this.statusMonitorInterval);\r\n      this.statusMonitorInterval = null;\r\n    }\r\n    \r\n    // Log final statistics\r\n    await this.auditService.logSecurityEvent({\r\n      type: 'ORDER_MANAGER_SHUTDOWN',\r\n      severity: 'INFO',\r\n      details: { \r\n        stats: this.stats,\r\n        activeOrders: this.activeOrders.size,\r\n        positions: this.positions.size \r\n      },\r\n      timestamp: new Date(),\r\n    });\r\n    \r\n    logger.info('\u2705 Order Manager shutdown completed');\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  OrderValidationResult,\r\n  OrderExecutionResult,\r\n  OrderStatusUpdate,\r\n  PositionSummary,\r\n  OrderManagementStats,\r\n  OrderExecutionConfig,\r\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cd98c10f1e15eab08cbfa08aafc78adcba961b7f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m32ycjiou = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m32ycjiou();
cov_1m32ycjiou().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1m32ycjiou().s[1]++;
exports.OrderManager = void 0;
const events_1 =
/* istanbul ignore next */
(cov_1m32ycjiou().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_1m32ycjiou().s[3]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_1m32ycjiou().s[4]++, require("@/security/audit-service"));
/**
 * Order Management and Execution System
 * Handles all order lifecycle operations with comprehensive validation and monitoring
 */
class OrderManager extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  gateIOClient;
  auditService;
  activeOrders =
  /* istanbul ignore next */
  (cov_1m32ycjiou().s[5]++, new Map());
  orderHistory =
  /* istanbul ignore next */
  (cov_1m32ycjiou().s[6]++, []);
  positions =
  /* istanbul ignore next */
  (cov_1m32ycjiou().s[7]++, new Map());
  stats;
  config;
  // Monitoring and validation
  statusMonitorInterval =
  /* istanbul ignore next */
  (cov_1m32ycjiou().s[8]++, null);
  statusCheckInterval =
  /* istanbul ignore next */
  (cov_1m32ycjiou().s[9]++, 5000); // 5 seconds
  maxOrderAge =
  /* istanbul ignore next */
  (cov_1m32ycjiou().s[10]++, 86400000); // 24 hours in milliseconds
  constructor(gateIOClient) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[0]++;
    cov_1m32ycjiou().s[11]++;
    super();
    /* istanbul ignore next */
    cov_1m32ycjiou().s[12]++;
    this.gateIOClient = gateIOClient;
    /* istanbul ignore next */
    cov_1m32ycjiou().s[13]++;
    this.auditService = new audit_service_1.AuditService();
    // Initialize statistics
    /* istanbul ignore next */
    cov_1m32ycjiou().s[14]++;
    this.stats = {
      totalOrders: 0,
      successfulOrders: 0,
      failedOrders: 0,
      cancelledOrders: 0,
      totalVolume: 0,
      totalFees: 0,
      averageExecutionTime: 0,
      successRate: 0,
      lastOrderTime: null
    };
    // Default configuration
    /* istanbul ignore next */
    cov_1m32ycjiou().s[15]++;
    this.config = {
      enablePreValidation: true,
      enablePostValidation: true,
      maxOrderValue: 10000,
      // $10,000 USD
      maxDailyVolume: 100000,
      // $100,000 USD
      enableRiskChecks: true,
      confirmationRequired: false,
      executionTimeout: 30000 // 30 seconds
    };
    /* istanbul ignore next */
    cov_1m32ycjiou().s[16]++;
    logger_1.logger.info('💹 Order Manager initialized with comprehensive validation');
  }
  /**
   * Initialize order manager with configuration
   *
   * @param config - Order execution configuration
   * @returns Promise<boolean> - Success status
   */
  async initialize(config) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[1]++;
    cov_1m32ycjiou().s[17]++;
    try {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[18]++;
      logger_1.logger.info('🚀 Initializing Order Manager...');
      // Update configuration
      /* istanbul ignore next */
      cov_1m32ycjiou().s[19]++;
      if (config) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[0][0]++;
        cov_1m32ycjiou().s[20]++;
        this.config = {
          ...this.config,
          ...config
        };
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[0][1]++;
      }
      // Load existing orders from exchange
      cov_1m32ycjiou().s[21]++;
      await this.loadExistingOrders();
      // Start order status monitoring
      /* istanbul ignore next */
      cov_1m32ycjiou().s[22]++;
      this.startOrderStatusMonitoring();
      // Initialize position tracking
      /* istanbul ignore next */
      cov_1m32ycjiou().s[23]++;
      await this.initializePositionTracking();
      /* istanbul ignore next */
      cov_1m32ycjiou().s[24]++;
      await this.auditService.logSecurityEvent({
        type: 'ORDER_MANAGER_INITIALIZED',
        severity: 'INFO',
        details: {
          config: this.config
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[25]++;
      logger_1.logger.info('✅ Order Manager initialized successfully');
      /* istanbul ignore next */
      cov_1m32ycjiou().s[26]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[27]++;
      logger_1.logger.error('❌ Failed to initialize Order Manager:', error);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[28]++;
      await this.auditService.logSecurityEvent({
        type: 'ORDER_MANAGER_INIT_FAILED',
        severity: 'ERROR',
        details: {
          error: error.message
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[29]++;
      return false;
    }
  }
  /**
   * Place new order with comprehensive validation and confirmation
   *
   * @param orderRequest - Order request parameters
   * @returns Promise<OrderExecutionResult> - Order execution result
   */
  async placeOrder(orderRequest) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[2]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[30]++, Date.now());
    /* istanbul ignore next */
    cov_1m32ycjiou().s[31]++;
    try {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[32]++;
      logger_1.logger.info(`📝 Placing ${orderRequest.side} order for ${orderRequest.amount} ${orderRequest.currency_pair}`);
      // Pre-validation
      const validationResult =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[33]++, await this.validateOrder(orderRequest));
      /* istanbul ignore next */
      cov_1m32ycjiou().s[34]++;
      if (!validationResult.isValid) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[1][0]++;
        const error =
        /* istanbul ignore next */
        (cov_1m32ycjiou().s[35]++, `Order validation failed: ${validationResult.errors.join(', ')}`);
        /* istanbul ignore next */
        cov_1m32ycjiou().s[36]++;
        await this.logOrderEvent('ORDER_VALIDATION_FAILED', orderRequest, {
          validationResult
        });
        /* istanbul ignore next */
        cov_1m32ycjiou().s[37]++;
        return {
          success: false,
          order: null,
          executionTime: Date.now() - startTime,
          error,
          validationResult
        };
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[1][1]++;
      }
      // Log validation warnings if any
      cov_1m32ycjiou().s[38]++;
      if (validationResult.warnings.length > 0) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[2][0]++;
        cov_1m32ycjiou().s[39]++;
        logger_1.logger.warn('⚠️ Order validation warnings:', validationResult.warnings);
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[2][1]++;
      }
      // Risk assessment
      cov_1m32ycjiou().s[40]++;
      if (this.config.enableRiskChecks) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[3][0]++;
        const riskAssessment =
        /* istanbul ignore next */
        (cov_1m32ycjiou().s[41]++, await this.assessOrderRisk(orderRequest, validationResult));
        /* istanbul ignore next */
        cov_1m32ycjiou().s[42]++;
        if (riskAssessment.riskScore > 80) {
          /* istanbul ignore next */
          cov_1m32ycjiou().b[4][0]++;
          const error =
          /* istanbul ignore next */
          (cov_1m32ycjiou().s[43]++, `Order risk score too high: ${riskAssessment.riskScore}/100`);
          /* istanbul ignore next */
          cov_1m32ycjiou().s[44]++;
          await this.logOrderEvent('ORDER_HIGH_RISK_REJECTED', orderRequest, {
            riskAssessment
          });
          /* istanbul ignore next */
          cov_1m32ycjiou().s[45]++;
          return {
            success: false,
            order: null,
            executionTime: Date.now() - startTime,
            error,
            validationResult
          };
        } else
        /* istanbul ignore next */
        {
          cov_1m32ycjiou().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[3][1]++;
      }
      // Execute order through Gate.io API
      const orderResponse =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[46]++, await this.executeOrder(orderRequest));
      // Post-validation
      /* istanbul ignore next */
      cov_1m32ycjiou().s[47]++;
      if (this.config.enablePostValidation) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[5][0]++;
        const postValidation =
        /* istanbul ignore next */
        (cov_1m32ycjiou().s[48]++, await this.validateOrderExecution(orderRequest, orderResponse));
        /* istanbul ignore next */
        cov_1m32ycjiou().s[49]++;
        if (!postValidation.isValid) {
          /* istanbul ignore next */
          cov_1m32ycjiou().b[6][0]++;
          cov_1m32ycjiou().s[50]++;
          logger_1.logger.error('❌ Post-execution validation failed:', postValidation.errors);
          // Attempt to cancel the order if validation fails
          /* istanbul ignore next */
          cov_1m32ycjiou().s[51]++;
          await this.cancelOrder(orderResponse.id, 'Post-validation failure');
        } else
        /* istanbul ignore next */
        {
          cov_1m32ycjiou().b[6][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[5][1]++;
      }
      // Store order in active orders
      cov_1m32ycjiou().s[52]++;
      this.activeOrders.set(orderResponse.id, orderResponse);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[53]++;
      this.orderHistory.push(orderResponse);
      // Update statistics
      const executionTime =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[54]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[55]++;
      this.updateOrderStats(true, executionTime, parseFloat(orderRequest.amount), validationResult.estimatedFees);
      // Update position tracking
      /* istanbul ignore next */
      cov_1m32ycjiou().s[56]++;
      await this.updatePositionTracking(orderResponse);
      // Log successful order placement
      /* istanbul ignore next */
      cov_1m32ycjiou().s[57]++;
      await this.logOrderEvent('ORDER_PLACED_SUCCESS', orderRequest, {
        orderResponse,
        executionTime,
        validationResult
      });
      // Emit order placed event
      /* istanbul ignore next */
      cov_1m32ycjiou().s[58]++;
      this.emit('orderPlaced', orderResponse);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[59]++;
      logger_1.logger.info(`✅ Order placed successfully: ${orderResponse.id} (${executionTime}ms)`);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[60]++;
      return {
        success: true,
        order: orderResponse,
        executionTime,
        validationResult
      };
    } catch (error) {
      const executionTime =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[61]++, Date.now() - startTime);
      // Update statistics
      /* istanbul ignore next */
      cov_1m32ycjiou().s[62]++;
      this.updateOrderStats(false, executionTime, 0, 0);
      // Log failed order placement
      /* istanbul ignore next */
      cov_1m32ycjiou().s[63]++;
      await this.logOrderEvent('ORDER_PLACEMENT_FAILED', orderRequest, {
        error: error.message,
        executionTime
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[64]++;
      logger_1.logger.error(`❌ Failed to place order: ${error.message}`);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[65]++;
      return {
        success: false,
        order: null,
        executionTime,
        error: error.message,
        validationResult: {
          isValid: false,
          errors: [error.message],
          warnings: [],
          riskScore: 100,
          estimatedCost: 0,
          estimatedFees: 0
        }
      };
    }
  }
  /**
   * Cancel existing order with safety checks
   *
   * @param orderId - Order ID to cancel
   * @param reason - Cancellation reason
   * @returns Promise<boolean> - Success status
   */
  async cancelOrder(orderId, reason =
  /* istanbul ignore next */
  (cov_1m32ycjiou().b[7][0]++, 'User requested')) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[3]++;
    cov_1m32ycjiou().s[66]++;
    try {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[67]++;
      logger_1.logger.info(`🚫 Cancelling order: ${orderId} (reason: ${reason})`);
      // Check if order exists and is cancellable
      const order =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[68]++, this.activeOrders.get(orderId));
      /* istanbul ignore next */
      cov_1m32ycjiou().s[69]++;
      if (!order) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[8][0]++;
        cov_1m32ycjiou().s[70]++;
        logger_1.logger.warn(`⚠️ Order not found in active orders: ${orderId}`);
        /* istanbul ignore next */
        cov_1m32ycjiou().s[71]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[8][1]++;
      }
      cov_1m32ycjiou().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[10][0]++, order.status === 'closed') ||
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[10][1]++, order.status === 'cancelled')) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[9][0]++;
        cov_1m32ycjiou().s[73]++;
        logger_1.logger.warn(`⚠️ Order already ${order.status}: ${orderId}`);
        /* istanbul ignore next */
        cov_1m32ycjiou().s[74]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[9][1]++;
      }
      // Execute cancellation through Gate.io API
      cov_1m32ycjiou().s[75]++;
      await this.gateIOClient.makeRequest({
        method: 'DELETE',
        url: `/spot/orders/${orderId}`,
        data: {
          currency_pair: order.currency_pair
        }
      });
      // Update order status
      const updatedOrder =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[76]++, {
        ...order,
        status: 'cancelled'
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[77]++;
      this.activeOrders.set(orderId, updatedOrder);
      // Update statistics
      /* istanbul ignore next */
      cov_1m32ycjiou().s[78]++;
      this.stats.cancelledOrders++;
      // Log cancellation
      /* istanbul ignore next */
      cov_1m32ycjiou().s[79]++;
      await this.logOrderEvent('ORDER_CANCELLED', order, {
        reason
      });
      // Emit order cancelled event
      /* istanbul ignore next */
      cov_1m32ycjiou().s[80]++;
      this.emit('orderCancelled', updatedOrder, reason);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[81]++;
      logger_1.logger.info(`✅ Order cancelled successfully: ${orderId}`);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[82]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[83]++;
      logger_1.logger.error(`❌ Failed to cancel order ${orderId}:`, error);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[84]++;
      await this.logOrderEvent('ORDER_CANCELLATION_FAILED', {
        orderId
      }, {
        error: error.message,
        reason
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[85]++;
      return false;
    }
  }
  /**
   * Modify existing order
   *
   * @param orderId - Order ID to modify
   * @param modifications - Order modifications
   * @returns Promise<OrderResponse | null> - Modified order or null if failed
   */
  async modifyOrder(orderId, modifications) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[4]++;
    cov_1m32ycjiou().s[86]++;
    try {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[87]++;
      logger_1.logger.info(`✏️ Modifying order: ${orderId}`);
      // Check if order exists and is modifiable
      const order =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[88]++, this.activeOrders.get(orderId));
      /* istanbul ignore next */
      cov_1m32ycjiou().s[89]++;
      if (!order) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[11][0]++;
        cov_1m32ycjiou().s[90]++;
        logger_1.logger.warn(`⚠️ Order not found: ${orderId}`);
        /* istanbul ignore next */
        cov_1m32ycjiou().s[91]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[11][1]++;
      }
      cov_1m32ycjiou().s[92]++;
      if (order.status !== 'open') {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[12][0]++;
        cov_1m32ycjiou().s[93]++;
        logger_1.logger.warn(`⚠️ Order not modifiable (status: ${order.status}): ${orderId}`);
        /* istanbul ignore next */
        cov_1m32ycjiou().s[94]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[12][1]++;
      }
      // Validate modifications
      const validationResult =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[95]++, await this.validateOrderModification(order, modifications));
      /* istanbul ignore next */
      cov_1m32ycjiou().s[96]++;
      if (!validationResult.isValid) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[13][0]++;
        cov_1m32ycjiou().s[97]++;
        logger_1.logger.error('❌ Order modification validation failed:', validationResult.errors);
        /* istanbul ignore next */
        cov_1m32ycjiou().s[98]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[13][1]++;
      }
      // Execute modification through Gate.io API
      const modifiedOrder =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[99]++, await this.gateIOClient.makeRequest({
        method: 'PATCH',
        url: `/spot/orders/${orderId}`,
        data: {
          currency_pair: order.currency_pair,
          ...modifications
        }
      }));
      // Update stored order
      /* istanbul ignore next */
      cov_1m32ycjiou().s[100]++;
      this.activeOrders.set(orderId, modifiedOrder);
      // Log modification
      /* istanbul ignore next */
      cov_1m32ycjiou().s[101]++;
      await this.logOrderEvent('ORDER_MODIFIED', order, {
        modifications,
        modifiedOrder,
        validationResult
      });
      // Emit order modified event
      /* istanbul ignore next */
      cov_1m32ycjiou().s[102]++;
      this.emit('orderModified', modifiedOrder, modifications);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[103]++;
      logger_1.logger.info(`✅ Order modified successfully: ${orderId}`);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[104]++;
      return modifiedOrder;
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[105]++;
      logger_1.logger.error(`❌ Failed to modify order ${orderId}:`, error);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[106]++;
      await this.logOrderEvent('ORDER_MODIFICATION_FAILED', {
        orderId
      }, {
        error: error.message,
        modifications
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[107]++;
      return null;
    }
  }
  /**
   * Get order status with real-time updates
   *
   * @param orderId - Order ID
   * @returns Promise<OrderResponse | null> - Order details or null if not found
   */
  async getOrderStatus(orderId) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[5]++;
    cov_1m32ycjiou().s[108]++;
    try {
      // First check local cache
      const cachedOrder =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[109]++, this.activeOrders.get(orderId));
      // Fetch latest status from exchange
      const orderResponse =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[110]++, await this.gateIOClient.makeRequest({
        method: 'GET',
        url: `/spot/orders/${orderId}`,
        params: {
          currency_pair:
          /* istanbul ignore next */
          (cov_1m32ycjiou().b[14][0]++, cachedOrder?.currency_pair) ||
          /* istanbul ignore next */
          (cov_1m32ycjiou().b[14][1]++, 'BTC_USDT')
        }
      }));
      // Update local cache
      /* istanbul ignore next */
      cov_1m32ycjiou().s[111]++;
      if (orderResponse) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[15][0]++;
        cov_1m32ycjiou().s[112]++;
        this.activeOrders.set(orderId, orderResponse);
        // Check for status changes
        /* istanbul ignore next */
        cov_1m32ycjiou().s[113]++;
        if (
        /* istanbul ignore next */
        (cov_1m32ycjiou().b[17][0]++, cachedOrder) &&
        /* istanbul ignore next */
        (cov_1m32ycjiou().b[17][1]++, cachedOrder.status !== orderResponse.status)) {
          /* istanbul ignore next */
          cov_1m32ycjiou().b[16][0]++;
          cov_1m32ycjiou().s[114]++;
          await this.handleOrderStatusChange(cachedOrder, orderResponse);
        } else
        /* istanbul ignore next */
        {
          cov_1m32ycjiou().b[16][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[15][1]++;
      }
      cov_1m32ycjiou().s[115]++;
      return orderResponse;
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[116]++;
      logger_1.logger.error(`❌ Failed to get order status ${orderId}:`, error);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[117]++;
      return null;
    }
  }
  /**
   * Get all active orders
   *
   * @returns Array of active orders
   */
  getActiveOrders() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[6]++;
    cov_1m32ycjiou().s[118]++;
    return Array.from(this.activeOrders.values()).filter(order => {
      /* istanbul ignore next */
      cov_1m32ycjiou().f[7]++;
      cov_1m32ycjiou().s[119]++;
      return order.status === 'open';
    });
  }
  /**
   * Get order history
   *
   * @param limit - Maximum number of orders to return
   * @returns Array of historical orders
   */
  getOrderHistory(limit =
  /* istanbul ignore next */
  (cov_1m32ycjiou().b[18][0]++, 100)) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[8]++;
    cov_1m32ycjiou().s[120]++;
    return this.orderHistory.sort((a, b) => {
      /* istanbul ignore next */
      cov_1m32ycjiou().f[9]++;
      cov_1m32ycjiou().s[121]++;
      return new Date(b.create_time).getTime() - new Date(a.create_time).getTime();
    }).slice(0, limit);
  }
  /**
   * Get position summary for symbol
   *
   * @param symbol - Trading symbol
   * @returns Position summary or null if no position
   */
  getPosition(symbol) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[10]++;
    cov_1m32ycjiou().s[122]++;
    return /* istanbul ignore next */(cov_1m32ycjiou().b[19][0]++, this.positions.get(symbol)) ||
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[19][1]++, null);
  }
  /**
   * Get all positions
   *
   * @returns Array of all position summaries
   */
  getAllPositions() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[11]++;
    cov_1m32ycjiou().s[123]++;
    return Array.from(this.positions.values());
  }
  /**
   * Emergency stop - cancel all open orders
   *
   * @param reason - Emergency stop reason
   * @returns Promise<boolean> - Success status
   */
  async emergencyStop(reason =
  /* istanbul ignore next */
  (cov_1m32ycjiou().b[20][0]++, 'Emergency stop triggered')) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[12]++;
    cov_1m32ycjiou().s[124]++;
    try {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[125]++;
      logger_1.logger.warn(`🚨 EMERGENCY STOP: ${reason}`);
      const activeOrders =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[126]++, this.getActiveOrders());
      const cancellationPromises =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[127]++, activeOrders.map(order => {
        /* istanbul ignore next */
        cov_1m32ycjiou().f[13]++;
        cov_1m32ycjiou().s[128]++;
        return this.cancelOrder(order.id, `Emergency stop: ${reason}`);
      }));
      const results =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[129]++, await Promise.allSettled(cancellationPromises));
      const successCount =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[130]++, results.filter(result => {
        /* istanbul ignore next */
        cov_1m32ycjiou().f[14]++;
        cov_1m32ycjiou().s[131]++;
        return /* istanbul ignore next */(cov_1m32ycjiou().b[21][0]++, result.status === 'fulfilled') &&
        /* istanbul ignore next */
        (cov_1m32ycjiou().b[21][1]++, result.value === true);
      }).length);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[132]++;
      await this.auditService.logSecurityEvent({
        type: 'EMERGENCY_STOP_EXECUTED',
        severity: 'CRITICAL',
        details: {
          reason,
          totalOrders: activeOrders.length,
          cancelledOrders: successCount
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[133]++;
      logger_1.logger.warn(`🚨 Emergency stop completed: ${successCount}/${activeOrders.length} orders cancelled`);
      // Emit emergency stop event
      /* istanbul ignore next */
      cov_1m32ycjiou().s[134]++;
      this.emit('emergencyStop', reason, successCount, activeOrders.length);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[135]++;
      return successCount === activeOrders.length;
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[136]++;
      logger_1.logger.error('❌ Emergency stop failed:', error);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[137]++;
      return false;
    }
  }
  /**
   * Validate order before placement
   *
   * @param orderRequest - Order request to validate
   * @returns Promise<OrderValidationResult> - Validation result
   */
  async validateOrder(orderRequest) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[15]++;
    const errors =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[138]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[139]++, []);
    let riskScore =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[140]++, 0);
    // Validate required fields
    /* istanbul ignore next */
    cov_1m32ycjiou().s[141]++;
    if (!orderRequest.currency_pair) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[22][0]++;
      cov_1m32ycjiou().s[142]++;
      errors.push('Currency pair is required');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[22][1]++;
    }
    cov_1m32ycjiou().s[143]++;
    if (!orderRequest.side) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[23][0]++;
      cov_1m32ycjiou().s[144]++;
      errors.push('Order side is required');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[23][1]++;
    }
    cov_1m32ycjiou().s[145]++;
    if (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[25][0]++, !orderRequest.amount) ||
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[25][1]++, parseFloat(orderRequest.amount) <= 0)) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[24][0]++;
      cov_1m32ycjiou().s[146]++;
      errors.push('Order amount must be positive');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[24][1]++;
    }
    cov_1m32ycjiou().s[147]++;
    if (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[27][0]++, orderRequest.type === 'limit') && (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[27][1]++, !orderRequest.price) ||
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[27][2]++, parseFloat(orderRequest.price) <= 0))) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[26][0]++;
      cov_1m32ycjiou().s[148]++;
      errors.push('Limit orders require a positive price');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[26][1]++;
    }
    // Validate order size limits
    const orderValue =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[149]++, parseFloat(orderRequest.amount) * (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[28][0]++, parseFloat(
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[29][0]++, orderRequest.price) ||
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[29][1]++, '0'))) ||
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[28][1]++, 1)));
    /* istanbul ignore next */
    cov_1m32ycjiou().s[150]++;
    if (orderValue > this.config.maxOrderValue) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[30][0]++;
      cov_1m32ycjiou().s[151]++;
      errors.push(`Order value exceeds maximum: ${orderValue} > ${this.config.maxOrderValue}`);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[152]++;
      riskScore += 30;
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[30][1]++;
    }
    // Check daily volume limits
    const todayVolume =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[153]++, this.calculateTodayVolume());
    /* istanbul ignore next */
    cov_1m32ycjiou().s[154]++;
    if (todayVolume + orderValue > this.config.maxDailyVolume) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[31][0]++;
      cov_1m32ycjiou().s[155]++;
      warnings.push(`Order would exceed daily volume limit: ${todayVolume + orderValue} > ${this.config.maxDailyVolume}`);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[156]++;
      riskScore += 20;
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[31][1]++;
    }
    // Estimate costs and fees
    const estimatedCost =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[157]++, orderValue);
    const estimatedFees =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[158]++, orderValue * 0.002); // Assume 0.2% fee
    // Check account balance (simplified)
    /* istanbul ignore next */
    cov_1m32ycjiou().s[159]++;
    try {
      const balances =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[160]++, await this.gateIOClient.makeRequest({
        method: 'GET',
        url: '/spot/accounts'
      }));
      // Add balance validation logic here
      // This is simplified - in production, you'd check specific currency balances
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[161]++;
      warnings.push('Could not verify account balance');
      /* istanbul ignore next */
      cov_1m32ycjiou().s[162]++;
      riskScore += 10;
    }
    /* istanbul ignore next */
    cov_1m32ycjiou().s[163]++;
    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      riskScore,
      estimatedCost,
      estimatedFees
    };
  }
  /**
   * Execute order through Gate.io API
   *
   * @param orderRequest - Order request
   * @returns Promise<OrderResponse> - Order response
   */
  async executeOrder(orderRequest) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[16]++;
    const orderResponse =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[164]++, await this.gateIOClient.makeRequest({
      method: 'POST',
      url: '/spot/orders',
      data: orderRequest
    }));
    /* istanbul ignore next */
    cov_1m32ycjiou().s[165]++;
    return orderResponse;
  }
  /**
   * Validate order execution
   *
   * @param orderRequest - Original order request
   * @param orderResponse - Order response from exchange
   * @returns Promise<OrderValidationResult> - Validation result
   */
  async validateOrderExecution(orderRequest, orderResponse) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[17]++;
    const errors =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[166]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[167]++, []);
    // Validate response matches request
    /* istanbul ignore next */
    cov_1m32ycjiou().s[168]++;
    if (orderResponse.currency_pair !== orderRequest.currency_pair) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[32][0]++;
      cov_1m32ycjiou().s[169]++;
      errors.push('Currency pair mismatch');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[32][1]++;
    }
    cov_1m32ycjiou().s[170]++;
    if (orderResponse.side !== orderRequest.side) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[33][0]++;
      cov_1m32ycjiou().s[171]++;
      errors.push('Order side mismatch');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[33][1]++;
    }
    cov_1m32ycjiou().s[172]++;
    if (orderResponse.type !== orderRequest.type) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[34][0]++;
      cov_1m32ycjiou().s[173]++;
      errors.push('Order type mismatch');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[34][1]++;
    }
    cov_1m32ycjiou().s[174]++;
    if (Math.abs(parseFloat(orderResponse.amount) - parseFloat(orderRequest.amount)) > 0.00001) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[35][0]++;
      cov_1m32ycjiou().s[175]++;
      errors.push('Order amount mismatch');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[35][1]++;
    }
    // Validate order was accepted
    cov_1m32ycjiou().s[176]++;
    if (!orderResponse.id) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[36][0]++;
      cov_1m32ycjiou().s[177]++;
      errors.push('Order ID not received');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[36][1]++;
    }
    cov_1m32ycjiou().s[178]++;
    if (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[38][0]++, orderResponse.status === 'cancelled') ||
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[38][1]++, orderResponse.status === 'expired')) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[37][0]++;
      cov_1m32ycjiou().s[179]++;
      warnings.push(`Order immediately ${orderResponse.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[37][1]++;
    }
    cov_1m32ycjiou().s[180]++;
    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      riskScore: errors.length > 0 ?
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[39][0]++, 100) :
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[39][1]++, warnings.length * 10),
      estimatedCost: 0,
      estimatedFees: 0
    };
  }
  /**
   * Assess order risk
   *
   * @param orderRequest - Order request
   * @param validationResult - Validation result
   * @returns Promise<any> - Risk assessment
   */
  async assessOrderRisk(orderRequest, validationResult) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[18]++;
    cov_1m32ycjiou().s[181]++;
    // Simplified risk assessment
    // In production, this would include more sophisticated risk models
    return {
      riskScore: validationResult.riskScore,
      factors: validationResult.warnings
    };
  }
  /**
   * Validate order modification
   *
   * @param order - Original order
   * @param modifications - Proposed modifications
   * @returns Promise<OrderValidationResult> - Validation result
   */
  async validateOrderModification(order, modifications) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[19]++;
    const errors =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[182]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[183]++, []);
    // Validate modification parameters
    /* istanbul ignore next */
    cov_1m32ycjiou().s[184]++;
    if (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[41][0]++, modifications.price) &&
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[41][1]++, parseFloat(modifications.price) <= 0)) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[40][0]++;
      cov_1m32ycjiou().s[185]++;
      errors.push('Modified price must be positive');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[40][1]++;
    }
    cov_1m32ycjiou().s[186]++;
    if (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[43][0]++, modifications.amount) &&
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[43][1]++, parseFloat(modifications.amount) <= 0)) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[42][0]++;
      cov_1m32ycjiou().s[187]++;
      errors.push('Modified amount must be positive');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[42][1]++;
    }
    // Check if modifications are significant
    cov_1m32ycjiou().s[188]++;
    if (
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[45][0]++, modifications.price) &&
    /* istanbul ignore next */
    (cov_1m32ycjiou().b[45][1]++, Math.abs(parseFloat(modifications.price) - parseFloat(order.price)) < 0.01)) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[44][0]++;
      cov_1m32ycjiou().s[189]++;
      warnings.push('Price modification is very small');
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[44][1]++;
    }
    cov_1m32ycjiou().s[190]++;
    return {
      isValid: errors.length === 0,
      errors,
      warnings,
      riskScore: errors.length * 20,
      estimatedCost: 0,
      estimatedFees: 0
    };
  }
  /**
   * Handle order status changes
   *
   * @param oldOrder - Previous order state
   * @param newOrder - New order state
   */
  async handleOrderStatusChange(oldOrder, newOrder) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[20]++;
    const statusUpdate =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[191]++, {
      orderId: newOrder.id,
      oldStatus: oldOrder.status,
      newStatus: newOrder.status,
      timestamp: new Date(),
      filledAmount: newOrder.filled_total,
      remainingAmount: newOrder.left,
      averagePrice: newOrder.price
    });
    // Log status change
    /* istanbul ignore next */
    cov_1m32ycjiou().s[192]++;
    await this.logOrderEvent('ORDER_STATUS_CHANGED', newOrder, {
      statusUpdate
    });
    // Update position tracking
    /* istanbul ignore next */
    cov_1m32ycjiou().s[193]++;
    await this.updatePositionTracking(newOrder);
    // Emit status change event
    /* istanbul ignore next */
    cov_1m32ycjiou().s[194]++;
    this.emit('orderStatusChanged', statusUpdate);
    /* istanbul ignore next */
    cov_1m32ycjiou().s[195]++;
    logger_1.logger.info(`📊 Order status changed: ${statusUpdate.orderId} (${statusUpdate.oldStatus} -> ${statusUpdate.newStatus})`);
  }
  /**
   * Load existing orders from exchange
   */
  async loadExistingOrders() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[21]++;
    cov_1m32ycjiou().s[196]++;
    try {
      // Load open orders for each supported trading pair
      const symbols =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[197]++, ['BTC_USDT', 'ETH_USDT']);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[198]++;
      for (const symbol of symbols) {
        const orders =
        /* istanbul ignore next */
        (cov_1m32ycjiou().s[199]++, await this.gateIOClient.makeRequest({
          method: 'GET',
          url: '/spot/orders',
          params: {
            currency_pair: symbol,
            status: 'open',
            limit: 100
          }
        }));
        // Store active orders
        /* istanbul ignore next */
        cov_1m32ycjiou().s[200]++;
        orders.forEach(order => {
          /* istanbul ignore next */
          cov_1m32ycjiou().f[22]++;
          cov_1m32ycjiou().s[201]++;
          this.activeOrders.set(order.id, order);
          /* istanbul ignore next */
          cov_1m32ycjiou().s[202]++;
          this.orderHistory.push(order);
        });
      }
      /* istanbul ignore next */
      cov_1m32ycjiou().s[203]++;
      logger_1.logger.info(`📋 Loaded ${this.activeOrders.size} existing orders`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[204]++;
      logger_1.logger.error('❌ Failed to load existing orders:', error);
    }
  }
  /**
   * Start order status monitoring
   */
  startOrderStatusMonitoring() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[23]++;
    cov_1m32ycjiou().s[205]++;
    this.statusMonitorInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_1m32ycjiou().f[24]++;
      cov_1m32ycjiou().s[206]++;
      await this.monitorOrderStatuses();
    }, this.statusCheckInterval);
    /* istanbul ignore next */
    cov_1m32ycjiou().s[207]++;
    logger_1.logger.info('👁️ Started order status monitoring');
  }
  /**
   * Monitor order statuses
   */
  async monitorOrderStatuses() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[25]++;
    const activeOrders =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[208]++, this.getActiveOrders());
    /* istanbul ignore next */
    cov_1m32ycjiou().s[209]++;
    for (const order of activeOrders) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[210]++;
      try {
        /* istanbul ignore next */
        cov_1m32ycjiou().s[211]++;
        await this.getOrderStatus(order.id);
      } catch (error) {
        /* istanbul ignore next */
        cov_1m32ycjiou().s[212]++;
        logger_1.logger.error(`❌ Failed to monitor order ${order.id}:`, error);
      }
    }
    // Clean up old orders
    /* istanbul ignore next */
    cov_1m32ycjiou().s[213]++;
    await this.cleanupOldOrders();
  }
  /**
   * Initialize position tracking
   */
  async initializePositionTracking() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[26]++;
    cov_1m32ycjiou().s[214]++;
    try {
      // Initialize positions for supported symbols
      const symbols =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[215]++, ['BTC_USDT', 'ETH_USDT']);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[216]++;
      for (const symbol of symbols) {
        /* istanbul ignore next */
        cov_1m32ycjiou().s[217]++;
        this.positions.set(symbol, {
          symbol,
          side: 'neutral',
          totalAmount: 0,
          averagePrice: 0,
          unrealizedPnL: 0,
          realizedPnL: 0,
          openOrders: [],
          lastUpdate: new Date()
        });
      }
      /* istanbul ignore next */
      cov_1m32ycjiou().s[218]++;
      logger_1.logger.info('📊 Position tracking initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[219]++;
      logger_1.logger.error('❌ Failed to initialize position tracking:', error);
    }
  }
  /**
   * Update position tracking
   *
   * @param order - Order to update position with
   */
  async updatePositionTracking(order) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[27]++;
    cov_1m32ycjiou().s[220]++;
    try {
      const position =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[221]++, this.positions.get(order.currency_pair));
      /* istanbul ignore next */
      cov_1m32ycjiou().s[222]++;
      if (!position) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[46][0]++;
        cov_1m32ycjiou().s[223]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[46][1]++;
      }
      // Update position based on order status
      cov_1m32ycjiou().s[224]++;
      if (order.status === 'closed') {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[47][0]++;
        const filledAmount =
        /* istanbul ignore next */
        (cov_1m32ycjiou().s[225]++, parseFloat(order.filled_total));
        const price =
        /* istanbul ignore next */
        (cov_1m32ycjiou().s[226]++, parseFloat(order.price));
        /* istanbul ignore next */
        cov_1m32ycjiou().s[227]++;
        if (order.side === 'buy') {
          /* istanbul ignore next */
          cov_1m32ycjiou().b[48][0]++;
          cov_1m32ycjiou().s[228]++;
          position.totalAmount += filledAmount;
        } else {
          /* istanbul ignore next */
          cov_1m32ycjiou().b[48][1]++;
          cov_1m32ycjiou().s[229]++;
          position.totalAmount -= filledAmount;
        }
        // Recalculate average price (simplified)
        /* istanbul ignore next */
        cov_1m32ycjiou().s[230]++;
        if (position.totalAmount > 0) {
          /* istanbul ignore next */
          cov_1m32ycjiou().b[49][0]++;
          cov_1m32ycjiou().s[231]++;
          position.averagePrice = price; // Simplified calculation
        } else
        /* istanbul ignore next */
        {
          cov_1m32ycjiou().b[49][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[47][1]++;
      }
      // Update open orders
      cov_1m32ycjiou().s[232]++;
      position.openOrders = this.getActiveOrders().filter(o => {
        /* istanbul ignore next */
        cov_1m32ycjiou().f[28]++;
        cov_1m32ycjiou().s[233]++;
        return o.currency_pair === order.currency_pair;
      });
      /* istanbul ignore next */
      cov_1m32ycjiou().s[234]++;
      position.lastUpdate = new Date();
    } catch (error) {
      /* istanbul ignore next */
      cov_1m32ycjiou().s[235]++;
      logger_1.logger.error('❌ Failed to update position tracking:', error);
    }
  }
  /**
   * Calculate today's trading volume
   */
  calculateTodayVolume() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[29]++;
    const today =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[236]++, new Date());
    /* istanbul ignore next */
    cov_1m32ycjiou().s[237]++;
    today.setHours(0, 0, 0, 0);
    /* istanbul ignore next */
    cov_1m32ycjiou().s[238]++;
    return this.orderHistory.filter(order => {
      /* istanbul ignore next */
      cov_1m32ycjiou().f[30]++;
      cov_1m32ycjiou().s[239]++;
      return new Date(order.create_time) >= today;
    }).reduce((total, order) => {
      /* istanbul ignore next */
      cov_1m32ycjiou().f[31]++;
      const volume =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[240]++, parseFloat(order.amount) * parseFloat(order.price));
      /* istanbul ignore next */
      cov_1m32ycjiou().s[241]++;
      return total + volume;
    }, 0);
  }
  /**
   * Update order statistics
   *
   * @param success - Order success status
   * @param executionTime - Execution time in milliseconds
   * @param volume - Order volume
   * @param fees - Order fees
   */
  updateOrderStats(success, executionTime, volume, fees) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[32]++;
    cov_1m32ycjiou().s[242]++;
    this.stats.totalOrders++;
    /* istanbul ignore next */
    cov_1m32ycjiou().s[243]++;
    this.stats.lastOrderTime = new Date();
    /* istanbul ignore next */
    cov_1m32ycjiou().s[244]++;
    if (success) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[50][0]++;
      cov_1m32ycjiou().s[245]++;
      this.stats.successfulOrders++;
      /* istanbul ignore next */
      cov_1m32ycjiou().s[246]++;
      this.stats.totalVolume += volume;
      /* istanbul ignore next */
      cov_1m32ycjiou().s[247]++;
      this.stats.totalFees += fees;
    } else {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[50][1]++;
      cov_1m32ycjiou().s[248]++;
      this.stats.failedOrders++;
    }
    // Update average execution time
    const alpha =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[249]++, 0.1);
    /* istanbul ignore next */
    cov_1m32ycjiou().s[250]++;
    this.stats.averageExecutionTime = alpha * executionTime + (1 - alpha) * this.stats.averageExecutionTime;
    // Update success rate
    /* istanbul ignore next */
    cov_1m32ycjiou().s[251]++;
    this.stats.successRate = this.stats.successfulOrders / this.stats.totalOrders * 100;
  }
  /**
   * Clean up old orders from memory
   */
  async cleanupOldOrders() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[33]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[252]++, Date.now() - this.maxOrderAge);
    // Remove old orders from active orders map
    /* istanbul ignore next */
    cov_1m32ycjiou().s[253]++;
    for (const [orderId, order] of this.activeOrders.entries()) {
      const orderTime =
      /* istanbul ignore next */
      (cov_1m32ycjiou().s[254]++, new Date(order.create_time).getTime());
      /* istanbul ignore next */
      cov_1m32ycjiou().s[255]++;
      if (
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[52][0]++, orderTime < cutoffTime) && (
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[52][1]++, order.status === 'closed') ||
      /* istanbul ignore next */
      (cov_1m32ycjiou().b[52][2]++, order.status === 'cancelled'))) {
        /* istanbul ignore next */
        cov_1m32ycjiou().b[51][0]++;
        cov_1m32ycjiou().s[256]++;
        this.activeOrders.delete(orderId);
      } else
      /* istanbul ignore next */
      {
        cov_1m32ycjiou().b[51][1]++;
      }
    }
    // Limit order history size
    /* istanbul ignore next */
    cov_1m32ycjiou().s[257]++;
    if (this.orderHistory.length > 1000) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[53][0]++;
      cov_1m32ycjiou().s[258]++;
      this.orderHistory = this.orderHistory.sort((a, b) => {
        /* istanbul ignore next */
        cov_1m32ycjiou().f[34]++;
        cov_1m32ycjiou().s[259]++;
        return new Date(b.create_time).getTime() - new Date(a.create_time).getTime();
      }).slice(0, 1000);
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[53][1]++;
    }
  }
  /**
   * Log order event for audit trail
   *
   * @param eventType - Event type
   * @param orderData - Order data
   * @param additionalData - Additional event data
   */
  async logOrderEvent(eventType, orderData, additionalData =
  /* istanbul ignore next */
  (cov_1m32ycjiou().b[54][0]++, {})) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[35]++;
    cov_1m32ycjiou().s[260]++;
    await this.auditService.logSecurityEvent({
      type: eventType,
      severity: 'INFO',
      details: {
        orderData: this.sanitizeOrderData(orderData),
        ...additionalData
      },
      timestamp: new Date()
    });
  }
  /**
   * Sanitize order data for logging
   *
   * @param orderData - Order data to sanitize
   * @returns Sanitized order data
   */
  sanitizeOrderData(orderData) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[36]++;
    // Remove sensitive information from logs
    const sanitized =
    /* istanbul ignore next */
    (cov_1m32ycjiou().s[261]++, {
      ...orderData
    });
    // Keep only essential order information
    /* istanbul ignore next */
    cov_1m32ycjiou().s[262]++;
    if (sanitized.text) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[55][0]++;
      cov_1m32ycjiou().s[263]++;
      delete sanitized.text; // May contain sensitive info
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[55][1]++;
    }
    cov_1m32ycjiou().s[264]++;
    return sanitized;
  }
  /**
   * Get order management statistics
   */
  getOrderStats() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[37]++;
    cov_1m32ycjiou().s[265]++;
    return {
      ...this.stats
    };
  }
  /**
   * Get order execution configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[38]++;
    cov_1m32ycjiou().s[266]++;
    return {
      ...this.config
    };
  }
  /**
   * Update order execution configuration
   *
   * @param config - New configuration
   */
  updateConfig(config) {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[39]++;
    cov_1m32ycjiou().s[267]++;
    this.config = {
      ...this.config,
      ...config
    };
    /* istanbul ignore next */
    cov_1m32ycjiou().s[268]++;
    logger_1.logger.info('⚙️ Order execution configuration updated');
  }
  /**
   * Graceful shutdown
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_1m32ycjiou().f[40]++;
    cov_1m32ycjiou().s[269]++;
    logger_1.logger.info('🛑 Shutting down Order Manager...');
    // Stop status monitoring
    /* istanbul ignore next */
    cov_1m32ycjiou().s[270]++;
    if (this.statusMonitorInterval) {
      /* istanbul ignore next */
      cov_1m32ycjiou().b[56][0]++;
      cov_1m32ycjiou().s[271]++;
      clearInterval(this.statusMonitorInterval);
      /* istanbul ignore next */
      cov_1m32ycjiou().s[272]++;
      this.statusMonitorInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_1m32ycjiou().b[56][1]++;
    }
    // Log final statistics
    cov_1m32ycjiou().s[273]++;
    await this.auditService.logSecurityEvent({
      type: 'ORDER_MANAGER_SHUTDOWN',
      severity: 'INFO',
      details: {
        stats: this.stats,
        activeOrders: this.activeOrders.size,
        positions: this.positions.size
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_1m32ycjiou().s[274]++;
    logger_1.logger.info('✅ Order Manager shutdown completed');
  }
}
/* istanbul ignore next */
cov_1m32ycjiou().s[275]++;
exports.OrderManager = OrderManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,