{"version":3,"names":["cov_1m32ycjiou","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","events_1","require","logger_1","audit_service_1","OrderManager","EventEmitter","gateIOClient","auditService","activeOrders","Map","orderHistory","positions","stats","config","statusMonitorInterval","statusCheckInterval","maxOrderAge","constructor","AuditService","totalOrders","successfulOrders","failedOrders","cancelledOrders","totalVolume","totalFees","averageExecutionTime","successRate","lastOrderTime","enablePreValidation","enablePostValidation","maxOrderValue","maxDailyVolume","enableRiskChecks","confirmationRequired","executionTimeout","logger","info","initialize","loadExistingOrders","startOrderStatusMonitoring","initializePositionTracking","logSecurityEvent","severity","details","timestamp","Date","error","message","placeOrder","orderRequest","startTime","now","side","amount","currency_pair","validationResult","validateOrder","isValid","errors","join","logOrderEvent","success","order","executionTime","warnings","length","warn","riskAssessment","assessOrderRisk","riskScore","orderResponse","executeOrder","postValidation","validateOrderExecution","cancelOrder","id","set","push","updateOrderStats","parseFloat","estimatedFees","updatePositionTracking","emit","estimatedCost","orderId","reason","get","status","makeRequest","method","url","data","updatedOrder","modifyOrder","modifications","validateOrderModification","modifiedOrder","getOrderStatus","cachedOrder","params","handleOrderStatusChange","getActiveOrders","Array","from","values","filter","getOrderHistory","limit","sort","a","create_time","getTime","slice","getPosition","symbol","getAllPositions","emergencyStop","cancellationPromises","map","results","Promise","allSettled","successCount","result","value","price","orderValue","todayVolume","calculateTodayVolume","balances","Math","abs","factors","oldOrder","newOrder","statusUpdate","oldStatus","newStatus","filledAmount","filled_total","remainingAmount","left","averagePrice","symbols","orders","forEach","size","setInterval","monitorOrderStatuses","cleanupOldOrders","totalAmount","unrealizedPnL","realizedPnL","openOrders","lastUpdate","position","o","today","setHours","reduce","total","volume","fees","alpha","cutoffTime","entries","orderTime","delete","eventType","orderData","additionalData","sanitizeOrderData","sanitized","text","getOrderStats","getConfig","updateConfig","shutdown","clearInterval","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\orders\\order-manager.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * ORDER MANAGEMENT AND EXECUTION SYSTEM\r\n * =============================================================================\r\n * \r\n * This module implements a comprehensive order management system for Gate.io\r\n * cryptocurrency trading with validation, confirmation, status monitoring,\r\n * and comprehensive audit logging for all order operations.\r\n * \r\n * SECURITY FEATURES:\r\n * - Order validation with risk assessment before placement\r\n * - Real-time order status monitoring and updates\r\n * - Comprehensive audit logging for all order operations\r\n * - Order cancellation and modification with safety checks\r\n * - Position tracking and reconciliation\r\n * - Emergency stop-loss and position closure capabilities\r\n * \r\n * CRITICAL TRADING NOTICE:\r\n * This system handles real financial assets and trading operations.\r\n * All order operations must be validated and logged for audit compliance.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { AuditService } from '@/security/audit-service';\r\nimport { GateIOClient } from '../api/gate-io-client';\r\nimport { \r\n  OrderRequest, \r\n  OrderResponse, \r\n  OrderModifyRequest, \r\n  OrderStatus, \r\n  OrderSide, \r\n  OrderType,\r\n  TradingSymbol,\r\n  TimeInForce \r\n} from '../api/types';\r\n\r\n/**\r\n * Order validation result\r\n */\r\ninterface OrderValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  warnings: string[];\r\n  riskScore: number; // 0-100\r\n  estimatedCost: number;\r\n  estimatedFees: number;\r\n}\r\n\r\n/**\r\n * Order execution result\r\n */\r\ninterface OrderExecutionResult {\r\n  success: boolean;\r\n  order: OrderResponse | null;\r\n  executionTime: number;\r\n  error?: string;\r\n  validationResult: OrderValidationResult;\r\n}\r\n\r\n/**\r\n * Order status update\r\n */\r\ninterface OrderStatusUpdate {\r\n  orderId: string;\r\n  oldStatus: OrderStatus;\r\n  newStatus: OrderStatus;\r\n  timestamp: Date;\r\n  filledAmount?: string;\r\n  remainingAmount?: string;\r\n  averagePrice?: string;\r\n}\r\n\r\n/**\r\n * Position summary\r\n */\r\ninterface PositionSummary {\r\n  symbol: string;\r\n  side: 'long' | 'short' | 'neutral';\r\n  totalAmount: number;\r\n  averagePrice: number;\r\n  unrealizedPnL: number;\r\n  realizedPnL: number;\r\n  openOrders: OrderResponse[];\r\n  lastUpdate: Date;\r\n}\r\n\r\n/**\r\n * Order management statistics\r\n */\r\ninterface OrderManagementStats {\r\n  totalOrders: number;\r\n  successfulOrders: number;\r\n  failedOrders: number;\r\n  cancelledOrders: number;\r\n  totalVolume: number;\r\n  totalFees: number;\r\n  averageExecutionTime: number;\r\n  successRate: number;\r\n  lastOrderTime: Date | null;\r\n}\r\n\r\n/**\r\n * Order execution configuration\r\n */\r\ninterface OrderExecutionConfig {\r\n  enablePreValidation: boolean;\r\n  enablePostValidation: boolean;\r\n  maxOrderValue: number;\r\n  maxDailyVolume: number;\r\n  enableRiskChecks: boolean;\r\n  confirmationRequired: boolean;\r\n  executionTimeout: number;\r\n}\r\n\r\n/**\r\n * Order Management and Execution System\r\n * Handles all order lifecycle operations with comprehensive validation and monitoring\r\n */\r\nexport class OrderManager extends EventEmitter {\r\n  private gateIOClient: GateIOClient;\r\n  private auditService: AuditService;\r\n  private activeOrders: Map<string, OrderResponse> = new Map();\r\n  private orderHistory: OrderResponse[] = [];\r\n  private positions: Map<string, PositionSummary> = new Map();\r\n  private stats: OrderManagementStats;\r\n  private config: OrderExecutionConfig;\r\n  \r\n  // Monitoring and validation\r\n  private statusMonitorInterval: NodeJS.Timeout | null = null;\r\n  private readonly statusCheckInterval: number = 5000; // 5 seconds\r\n  private readonly maxOrderAge: number = 86400000; // 24 hours in milliseconds\r\n\r\n  constructor(gateIOClient: GateIOClient) {\r\n    super();\r\n    \r\n    this.gateIOClient = gateIOClient;\r\n    this.auditService = new AuditService();\r\n    \r\n    // Initialize statistics\r\n    this.stats = {\r\n      totalOrders: 0,\r\n      successfulOrders: 0,\r\n      failedOrders: 0,\r\n      cancelledOrders: 0,\r\n      totalVolume: 0,\r\n      totalFees: 0,\r\n      averageExecutionTime: 0,\r\n      successRate: 0,\r\n      lastOrderTime: null,\r\n    };\r\n    \r\n    // Default configuration\r\n    this.config = {\r\n      enablePreValidation: true,\r\n      enablePostValidation: true,\r\n      maxOrderValue: 10000, // $10,000 USD\r\n      maxDailyVolume: 100000, // $100,000 USD\r\n      enableRiskChecks: true,\r\n      confirmationRequired: false,\r\n      executionTimeout: 30000, // 30 seconds\r\n    };\r\n    \r\n    logger.info('üíπ Order Manager initialized with comprehensive validation');\r\n  }\r\n\r\n  /**\r\n   * Initialize order manager with configuration\r\n   * \r\n   * @param config - Order execution configuration\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async initialize(config?: Partial<OrderExecutionConfig>): Promise<boolean> {\r\n    try {\r\n      logger.info('üöÄ Initializing Order Manager...');\r\n      \r\n      // Update configuration\r\n      if (config) {\r\n        this.config = { ...this.config, ...config };\r\n      }\r\n      \r\n      // Load existing orders from exchange\r\n      await this.loadExistingOrders();\r\n      \r\n      // Start order status monitoring\r\n      this.startOrderStatusMonitoring();\r\n      \r\n      // Initialize position tracking\r\n      await this.initializePositionTracking();\r\n      \r\n      await this.auditService.logSecurityEvent({\r\n        type: 'ORDER_MANAGER_INITIALIZED',\r\n        severity: 'INFO',\r\n        details: { config: this.config },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.info('‚úÖ Order Manager initialized successfully');\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to initialize Order Manager:', error);\r\n      await this.auditService.logSecurityEvent({\r\n        type: 'ORDER_MANAGER_INIT_FAILED',\r\n        severity: 'ERROR',\r\n        details: { error: error.message },\r\n        timestamp: new Date(),\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Place new order with comprehensive validation and confirmation\r\n   * \r\n   * @param orderRequest - Order request parameters\r\n   * @returns Promise<OrderExecutionResult> - Order execution result\r\n   */\r\n  public async placeOrder(orderRequest: OrderRequest): Promise<OrderExecutionResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      logger.info(`üìù Placing ${orderRequest.side} order for ${orderRequest.amount} ${orderRequest.currency_pair}`);\r\n      \r\n      // Pre-validation\r\n      const validationResult = await this.validateOrder(orderRequest);\r\n      if (!validationResult.isValid) {\r\n        const error = `Order validation failed: ${validationResult.errors.join(', ')}`;\r\n        await this.logOrderEvent('ORDER_VALIDATION_FAILED', orderRequest, { validationResult });\r\n        return {\r\n          success: false,\r\n          order: null,\r\n          executionTime: Date.now() - startTime,\r\n          error,\r\n          validationResult,\r\n        };\r\n      }\r\n      \r\n      // Log validation warnings if any\r\n      if (validationResult.warnings.length > 0) {\r\n        logger.warn('‚ö†Ô∏è Order validation warnings:', validationResult.warnings);\r\n      }\r\n      \r\n      // Risk assessment\r\n      if (this.config.enableRiskChecks) {\r\n        const riskAssessment = await this.assessOrderRisk(orderRequest, validationResult);\r\n        if (riskAssessment.riskScore > 80) {\r\n          const error = `Order risk score too high: ${riskAssessment.riskScore}/100`;\r\n          await this.logOrderEvent('ORDER_HIGH_RISK_REJECTED', orderRequest, { riskAssessment });\r\n          return {\r\n            success: false,\r\n            order: null,\r\n            executionTime: Date.now() - startTime,\r\n            error,\r\n            validationResult,\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Execute order through Gate.io API\r\n      const orderResponse = await this.executeOrder(orderRequest);\r\n      \r\n      // Post-validation\r\n      if (this.config.enablePostValidation) {\r\n        const postValidation = await this.validateOrderExecution(orderRequest, orderResponse);\r\n        if (!postValidation.isValid) {\r\n          logger.error('‚ùå Post-execution validation failed:', postValidation.errors);\r\n          // Attempt to cancel the order if validation fails\r\n          await this.cancelOrder(orderResponse.id, 'Post-validation failure');\r\n        }\r\n      }\r\n      \r\n      // Store order in active orders\r\n      this.activeOrders.set(orderResponse.id, orderResponse);\r\n      this.orderHistory.push(orderResponse);\r\n      \r\n      // Update statistics\r\n      const executionTime = Date.now() - startTime;\r\n      this.updateOrderStats(true, executionTime, parseFloat(orderRequest.amount), validationResult.estimatedFees);\r\n      \r\n      // Update position tracking\r\n      await this.updatePositionTracking(orderResponse);\r\n      \r\n      // Log successful order placement\r\n      await this.logOrderEvent('ORDER_PLACED_SUCCESS', orderRequest, { \r\n        orderResponse, \r\n        executionTime,\r\n        validationResult \r\n      });\r\n      \r\n      // Emit order placed event\r\n      this.emit('orderPlaced', orderResponse);\r\n      \r\n      logger.info(`‚úÖ Order placed successfully: ${orderResponse.id} (${executionTime}ms)`);\r\n      \r\n      return {\r\n        success: true,\r\n        order: orderResponse,\r\n        executionTime,\r\n        validationResult,\r\n      };\r\n      \r\n    } catch (error) {\r\n      const executionTime = Date.now() - startTime;\r\n      \r\n      // Update statistics\r\n      this.updateOrderStats(false, executionTime, 0, 0);\r\n      \r\n      // Log failed order placement\r\n      await this.logOrderEvent('ORDER_PLACEMENT_FAILED', orderRequest, { \r\n        error: error.message,\r\n        executionTime \r\n      });\r\n      \r\n      logger.error(`‚ùå Failed to place order: ${error.message}`);\r\n      \r\n      return {\r\n        success: false,\r\n        order: null,\r\n        executionTime,\r\n        error: error.message,\r\n        validationResult: {\r\n          isValid: false,\r\n          errors: [error.message],\r\n          warnings: [],\r\n          riskScore: 100,\r\n          estimatedCost: 0,\r\n          estimatedFees: 0,\r\n        },\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancel existing order with safety checks\r\n   * \r\n   * @param orderId - Order ID to cancel\r\n   * @param reason - Cancellation reason\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async cancelOrder(orderId: string, reason: string = 'User requested'): Promise<boolean> {\r\n    try {\r\n      logger.info(`üö´ Cancelling order: ${orderId} (reason: ${reason})`);\r\n      \r\n      // Check if order exists and is cancellable\r\n      const order = this.activeOrders.get(orderId);\r\n      if (!order) {\r\n        logger.warn(`‚ö†Ô∏è Order not found in active orders: ${orderId}`);\r\n        return false;\r\n      }\r\n      \r\n      if (order.status === 'closed' || order.status === 'cancelled') {\r\n        logger.warn(`‚ö†Ô∏è Order already ${order.status}: ${orderId}`);\r\n        return false;\r\n      }\r\n      \r\n      // Execute cancellation through Gate.io API\r\n      await this.gateIOClient.makeRequest({\r\n        method: 'DELETE',\r\n        url: `/spot/orders/${orderId}`,\r\n        data: { currency_pair: order.currency_pair },\r\n      });\r\n      \r\n      // Update order status\r\n      const updatedOrder = { ...order, status: 'cancelled' as OrderStatus };\r\n      this.activeOrders.set(orderId, updatedOrder);\r\n      \r\n      // Update statistics\r\n      this.stats.cancelledOrders++;\r\n      \r\n      // Log cancellation\r\n      await this.logOrderEvent('ORDER_CANCELLED', order, { reason });\r\n      \r\n      // Emit order cancelled event\r\n      this.emit('orderCancelled', updatedOrder, reason);\r\n      \r\n      logger.info(`‚úÖ Order cancelled successfully: ${orderId}`);\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to cancel order ${orderId}:`, error);\r\n      await this.logOrderEvent('ORDER_CANCELLATION_FAILED', { orderId }, { \r\n        error: error.message, \r\n        reason \r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Modify existing order\r\n   * \r\n   * @param orderId - Order ID to modify\r\n   * @param modifications - Order modifications\r\n   * @returns Promise<OrderResponse | null> - Modified order or null if failed\r\n   */\r\n  public async modifyOrder(\r\n    orderId: string, \r\n    modifications: OrderModifyRequest\r\n  ): Promise<OrderResponse | null> {\r\n    try {\r\n      logger.info(`‚úèÔ∏è Modifying order: ${orderId}`);\r\n      \r\n      // Check if order exists and is modifiable\r\n      const order = this.activeOrders.get(orderId);\r\n      if (!order) {\r\n        logger.warn(`‚ö†Ô∏è Order not found: ${orderId}`);\r\n        return null;\r\n      }\r\n      \r\n      if (order.status !== 'open') {\r\n        logger.warn(`‚ö†Ô∏è Order not modifiable (status: ${order.status}): ${orderId}`);\r\n        return null;\r\n      }\r\n      \r\n      // Validate modifications\r\n      const validationResult = await this.validateOrderModification(order, modifications);\r\n      if (!validationResult.isValid) {\r\n        logger.error('‚ùå Order modification validation failed:', validationResult.errors);\r\n        return null;\r\n      }\r\n      \r\n      // Execute modification through Gate.io API\r\n      const modifiedOrder = await this.gateIOClient.makeRequest<OrderResponse>({\r\n        method: 'PATCH',\r\n        url: `/spot/orders/${orderId}`,\r\n        data: {\r\n          currency_pair: order.currency_pair,\r\n          ...modifications,\r\n        },\r\n      });\r\n      \r\n      // Update stored order\r\n      this.activeOrders.set(orderId, modifiedOrder);\r\n      \r\n      // Log modification\r\n      await this.logOrderEvent('ORDER_MODIFIED', order, { \r\n        modifications, \r\n        modifiedOrder,\r\n        validationResult \r\n      });\r\n      \r\n      // Emit order modified event\r\n      this.emit('orderModified', modifiedOrder, modifications);\r\n      \r\n      logger.info(`‚úÖ Order modified successfully: ${orderId}`);\r\n      return modifiedOrder;\r\n      \r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to modify order ${orderId}:`, error);\r\n      await this.logOrderEvent('ORDER_MODIFICATION_FAILED', { orderId }, { \r\n        error: error.message, \r\n        modifications \r\n      });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get order status with real-time updates\r\n   * \r\n   * @param orderId - Order ID\r\n   * @returns Promise<OrderResponse | null> - Order details or null if not found\r\n   */\r\n  public async getOrderStatus(orderId: string): Promise<OrderResponse | null> {\r\n    try {\r\n      // First check local cache\r\n      const cachedOrder = this.activeOrders.get(orderId);\r\n      \r\n      // Fetch latest status from exchange\r\n      const orderResponse = await this.gateIOClient.makeRequest<OrderResponse>({\r\n        method: 'GET',\r\n        url: `/spot/orders/${orderId}`,\r\n        params: { currency_pair: cachedOrder?.currency_pair || 'BTC_USDT' },\r\n      });\r\n      \r\n      // Update local cache\r\n      if (orderResponse) {\r\n        this.activeOrders.set(orderId, orderResponse);\r\n        \r\n        // Check for status changes\r\n        if (cachedOrder && cachedOrder.status !== orderResponse.status) {\r\n          await this.handleOrderStatusChange(cachedOrder, orderResponse);\r\n        }\r\n      }\r\n      \r\n      return orderResponse;\r\n      \r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to get order status ${orderId}:`, error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all active orders\r\n   * \r\n   * @returns Array of active orders\r\n   */\r\n  public getActiveOrders(): OrderResponse[] {\r\n    return Array.from(this.activeOrders.values()).filter(\r\n      order => order.status === 'open'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get order history\r\n   * \r\n   * @param limit - Maximum number of orders to return\r\n   * @returns Array of historical orders\r\n   */\r\n  public getOrderHistory(limit: number = 100): OrderResponse[] {\r\n    return this.orderHistory\r\n      .sort((a, b) => new Date(b.create_time).getTime() - new Date(a.create_time).getTime())\r\n      .slice(0, limit);\r\n  }\r\n\r\n  /**\r\n   * Get position summary for symbol\r\n   * \r\n   * @param symbol - Trading symbol\r\n   * @returns Position summary or null if no position\r\n   */\r\n  public getPosition(symbol: string): PositionSummary | null {\r\n    return this.positions.get(symbol) || null;\r\n  }\r\n\r\n  /**\r\n   * Get all positions\r\n   * \r\n   * @returns Array of all position summaries\r\n   */\r\n  public getAllPositions(): PositionSummary[] {\r\n    return Array.from(this.positions.values());\r\n  }\r\n\r\n  /**\r\n   * Emergency stop - cancel all open orders\r\n   * \r\n   * @param reason - Emergency stop reason\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async emergencyStop(reason: string = 'Emergency stop triggered'): Promise<boolean> {\r\n    try {\r\n      logger.warn(`üö® EMERGENCY STOP: ${reason}`);\r\n      \r\n      const activeOrders = this.getActiveOrders();\r\n      const cancellationPromises = activeOrders.map(order => \r\n        this.cancelOrder(order.id, `Emergency stop: ${reason}`)\r\n      );\r\n      \r\n      const results = await Promise.allSettled(cancellationPromises);\r\n      const successCount = results.filter(result => \r\n        result.status === 'fulfilled' && result.value === true\r\n      ).length;\r\n      \r\n      await this.auditService.logSecurityEvent({\r\n        type: 'EMERGENCY_STOP_EXECUTED',\r\n        severity: 'CRITICAL',\r\n        details: { \r\n          reason, \r\n          totalOrders: activeOrders.length, \r\n          cancelledOrders: successCount \r\n        },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.warn(`üö® Emergency stop completed: ${successCount}/${activeOrders.length} orders cancelled`);\r\n      \r\n      // Emit emergency stop event\r\n      this.emit('emergencyStop', reason, successCount, activeOrders.length);\r\n      \r\n      return successCount === activeOrders.length;\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Emergency stop failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate order before placement\r\n   * \r\n   * @param orderRequest - Order request to validate\r\n   * @returns Promise<OrderValidationResult> - Validation result\r\n   */\r\n  private async validateOrder(orderRequest: OrderRequest): Promise<OrderValidationResult> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    let riskScore = 0;\r\n    \r\n    // Validate required fields\r\n    if (!orderRequest.currency_pair) {\r\n      errors.push('Currency pair is required');\r\n    }\r\n    \r\n    if (!orderRequest.side) {\r\n      errors.push('Order side is required');\r\n    }\r\n    \r\n    if (!orderRequest.amount || parseFloat(orderRequest.amount) <= 0) {\r\n      errors.push('Order amount must be positive');\r\n    }\r\n    \r\n    if (orderRequest.type === 'limit' && (!orderRequest.price || parseFloat(orderRequest.price) <= 0)) {\r\n      errors.push('Limit orders require a positive price');\r\n    }\r\n    \r\n    // Validate order size limits\r\n    const orderValue = parseFloat(orderRequest.amount) * (parseFloat(orderRequest.price || '0') || 1);\r\n    if (orderValue > this.config.maxOrderValue) {\r\n      errors.push(`Order value exceeds maximum: ${orderValue} > ${this.config.maxOrderValue}`);\r\n      riskScore += 30;\r\n    }\r\n    \r\n    // Check daily volume limits\r\n    const todayVolume = this.calculateTodayVolume();\r\n    if (todayVolume + orderValue > this.config.maxDailyVolume) {\r\n      warnings.push(`Order would exceed daily volume limit: ${todayVolume + orderValue} > ${this.config.maxDailyVolume}`);\r\n      riskScore += 20;\r\n    }\r\n    \r\n    // Estimate costs and fees\r\n    const estimatedCost = orderValue;\r\n    const estimatedFees = orderValue * 0.002; // Assume 0.2% fee\r\n    \r\n    // Check account balance (simplified)\r\n    try {\r\n      const balances = await this.gateIOClient.makeRequest({\r\n        method: 'GET',\r\n        url: '/spot/accounts',\r\n      });\r\n      \r\n      // Add balance validation logic here\r\n      // This is simplified - in production, you'd check specific currency balances\r\n      \r\n    } catch (error) {\r\n      warnings.push('Could not verify account balance');\r\n      riskScore += 10;\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n      riskScore,\r\n      estimatedCost,\r\n      estimatedFees,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Execute order through Gate.io API\r\n   * \r\n   * @param orderRequest - Order request\r\n   * @returns Promise<OrderResponse> - Order response\r\n   */\r\n  private async executeOrder(orderRequest: OrderRequest): Promise<OrderResponse> {\r\n    const orderResponse = await this.gateIOClient.makeRequest<OrderResponse>({\r\n      method: 'POST',\r\n      url: '/spot/orders',\r\n      data: orderRequest,\r\n    });\r\n    \r\n    return orderResponse;\r\n  }\r\n\r\n  /**\r\n   * Validate order execution\r\n   * \r\n   * @param orderRequest - Original order request\r\n   * @param orderResponse - Order response from exchange\r\n   * @returns Promise<OrderValidationResult> - Validation result\r\n   */\r\n  private async validateOrderExecution(\r\n    orderRequest: OrderRequest, \r\n    orderResponse: OrderResponse\r\n  ): Promise<OrderValidationResult> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    \r\n    // Validate response matches request\r\n    if (orderResponse.currency_pair !== orderRequest.currency_pair) {\r\n      errors.push('Currency pair mismatch');\r\n    }\r\n    \r\n    if (orderResponse.side !== orderRequest.side) {\r\n      errors.push('Order side mismatch');\r\n    }\r\n    \r\n    if (orderResponse.type !== orderRequest.type) {\r\n      errors.push('Order type mismatch');\r\n    }\r\n    \r\n    if (Math.abs(parseFloat(orderResponse.amount) - parseFloat(orderRequest.amount)) > 0.00001) {\r\n      errors.push('Order amount mismatch');\r\n    }\r\n    \r\n    // Validate order was accepted\r\n    if (!orderResponse.id) {\r\n      errors.push('Order ID not received');\r\n    }\r\n    \r\n    if (orderResponse.status === 'cancelled' || orderResponse.status === 'expired') {\r\n      warnings.push(`Order immediately ${orderResponse.status}`);\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n      riskScore: errors.length > 0 ? 100 : warnings.length * 10,\r\n      estimatedCost: 0,\r\n      estimatedFees: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Assess order risk\r\n   * \r\n   * @param orderRequest - Order request\r\n   * @param validationResult - Validation result\r\n   * @returns Promise<any> - Risk assessment\r\n   */\r\n  private async assessOrderRisk(\r\n    orderRequest: OrderRequest, \r\n    validationResult: OrderValidationResult\r\n  ): Promise<any> {\r\n    // Simplified risk assessment\r\n    // In production, this would include more sophisticated risk models\r\n    return {\r\n      riskScore: validationResult.riskScore,\r\n      factors: validationResult.warnings,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate order modification\r\n   * \r\n   * @param order - Original order\r\n   * @param modifications - Proposed modifications\r\n   * @returns Promise<OrderValidationResult> - Validation result\r\n   */\r\n  private async validateOrderModification(\r\n    order: OrderResponse, \r\n    modifications: OrderModifyRequest\r\n  ): Promise<OrderValidationResult> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n    \r\n    // Validate modification parameters\r\n    if (modifications.price && parseFloat(modifications.price) <= 0) {\r\n      errors.push('Modified price must be positive');\r\n    }\r\n    \r\n    if (modifications.amount && parseFloat(modifications.amount) <= 0) {\r\n      errors.push('Modified amount must be positive');\r\n    }\r\n    \r\n    // Check if modifications are significant\r\n    if (modifications.price && Math.abs(parseFloat(modifications.price) - parseFloat(order.price)) < 0.01) {\r\n      warnings.push('Price modification is very small');\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors,\r\n      warnings,\r\n      riskScore: errors.length * 20,\r\n      estimatedCost: 0,\r\n      estimatedFees: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle order status changes\r\n   * \r\n   * @param oldOrder - Previous order state\r\n   * @param newOrder - New order state\r\n   */\r\n  private async handleOrderStatusChange(\r\n    oldOrder: OrderResponse, \r\n    newOrder: OrderResponse\r\n  ): Promise<void> {\r\n    const statusUpdate: OrderStatusUpdate = {\r\n      orderId: newOrder.id,\r\n      oldStatus: oldOrder.status,\r\n      newStatus: newOrder.status,\r\n      timestamp: new Date(),\r\n      filledAmount: newOrder.filled_total,\r\n      remainingAmount: newOrder.left,\r\n      averagePrice: newOrder.price,\r\n    };\r\n    \r\n    // Log status change\r\n    await this.logOrderEvent('ORDER_STATUS_CHANGED', newOrder, { statusUpdate });\r\n    \r\n    // Update position tracking\r\n    await this.updatePositionTracking(newOrder);\r\n    \r\n    // Emit status change event\r\n    this.emit('orderStatusChanged', statusUpdate);\r\n    \r\n    logger.info(`üìä Order status changed: ${statusUpdate.orderId} (${statusUpdate.oldStatus} -> ${statusUpdate.newStatus})`);\r\n  }\r\n\r\n  /**\r\n   * Load existing orders from exchange\r\n   */\r\n  private async loadExistingOrders(): Promise<void> {\r\n    try {\r\n      // Load open orders for each supported trading pair\r\n      const symbols: TradingSymbol[] = ['BTC_USDT', 'ETH_USDT'];\r\n      \r\n      for (const symbol of symbols) {\r\n        const orders = await this.gateIOClient.makeRequest<OrderResponse[]>({\r\n          method: 'GET',\r\n          url: '/spot/orders',\r\n          params: { \r\n            currency_pair: symbol,\r\n            status: 'open',\r\n            limit: 100 \r\n          },\r\n        });\r\n        \r\n        // Store active orders\r\n        orders.forEach(order => {\r\n          this.activeOrders.set(order.id, order);\r\n          this.orderHistory.push(order);\r\n        });\r\n      }\r\n      \r\n      logger.info(`üìã Loaded ${this.activeOrders.size} existing orders`);\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to load existing orders:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start order status monitoring\r\n   */\r\n  private startOrderStatusMonitoring(): void {\r\n    this.statusMonitorInterval = setInterval(async () => {\r\n      await this.monitorOrderStatuses();\r\n    }, this.statusCheckInterval);\r\n    \r\n    logger.info('üëÅÔ∏è Started order status monitoring');\r\n  }\r\n\r\n  /**\r\n   * Monitor order statuses\r\n   */\r\n  private async monitorOrderStatuses(): Promise<void> {\r\n    const activeOrders = this.getActiveOrders();\r\n    \r\n    for (const order of activeOrders) {\r\n      try {\r\n        await this.getOrderStatus(order.id);\r\n      } catch (error) {\r\n        logger.error(`‚ùå Failed to monitor order ${order.id}:`, error);\r\n      }\r\n    }\r\n    \r\n    // Clean up old orders\r\n    await this.cleanupOldOrders();\r\n  }\r\n\r\n  /**\r\n   * Initialize position tracking\r\n   */\r\n  private async initializePositionTracking(): Promise<void> {\r\n    try {\r\n      // Initialize positions for supported symbols\r\n      const symbols: TradingSymbol[] = ['BTC_USDT', 'ETH_USDT'];\r\n      \r\n      for (const symbol of symbols) {\r\n        this.positions.set(symbol, {\r\n          symbol,\r\n          side: 'neutral',\r\n          totalAmount: 0,\r\n          averagePrice: 0,\r\n          unrealizedPnL: 0,\r\n          realizedPnL: 0,\r\n          openOrders: [],\r\n          lastUpdate: new Date(),\r\n        });\r\n      }\r\n      \r\n      logger.info('üìä Position tracking initialized');\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to initialize position tracking:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update position tracking\r\n   * \r\n   * @param order - Order to update position with\r\n   */\r\n  private async updatePositionTracking(order: OrderResponse): Promise<void> {\r\n    try {\r\n      const position = this.positions.get(order.currency_pair);\r\n      if (!position) return;\r\n      \r\n      // Update position based on order status\r\n      if (order.status === 'closed') {\r\n        const filledAmount = parseFloat(order.filled_total);\r\n        const price = parseFloat(order.price);\r\n        \r\n        if (order.side === 'buy') {\r\n          position.totalAmount += filledAmount;\r\n        } else {\r\n          position.totalAmount -= filledAmount;\r\n        }\r\n        \r\n        // Recalculate average price (simplified)\r\n        if (position.totalAmount > 0) {\r\n          position.averagePrice = price; // Simplified calculation\r\n        }\r\n      }\r\n      \r\n      // Update open orders\r\n      position.openOrders = this.getActiveOrders().filter(\r\n        o => o.currency_pair === order.currency_pair\r\n      );\r\n      \r\n      position.lastUpdate = new Date();\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to update position tracking:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate today's trading volume\r\n   */\r\n  private calculateTodayVolume(): number {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    return this.orderHistory\r\n      .filter(order => new Date(order.create_time) >= today)\r\n      .reduce((total, order) => {\r\n        const volume = parseFloat(order.amount) * parseFloat(order.price);\r\n        return total + volume;\r\n      }, 0);\r\n  }\r\n\r\n  /**\r\n   * Update order statistics\r\n   * \r\n   * @param success - Order success status\r\n   * @param executionTime - Execution time in milliseconds\r\n   * @param volume - Order volume\r\n   * @param fees - Order fees\r\n   */\r\n  private updateOrderStats(\r\n    success: boolean, \r\n    executionTime: number, \r\n    volume: number, \r\n    fees: number\r\n  ): void {\r\n    this.stats.totalOrders++;\r\n    this.stats.lastOrderTime = new Date();\r\n    \r\n    if (success) {\r\n      this.stats.successfulOrders++;\r\n      this.stats.totalVolume += volume;\r\n      this.stats.totalFees += fees;\r\n    } else {\r\n      this.stats.failedOrders++;\r\n    }\r\n    \r\n    // Update average execution time\r\n    const alpha = 0.1;\r\n    this.stats.averageExecutionTime = \r\n      (alpha * executionTime) + ((1 - alpha) * this.stats.averageExecutionTime);\r\n    \r\n    // Update success rate\r\n    this.stats.successRate = (this.stats.successfulOrders / this.stats.totalOrders) * 100;\r\n  }\r\n\r\n  /**\r\n   * Clean up old orders from memory\r\n   */\r\n  private async cleanupOldOrders(): Promise<void> {\r\n    const cutoffTime = Date.now() - this.maxOrderAge;\r\n    \r\n    // Remove old orders from active orders map\r\n    for (const [orderId, order] of this.activeOrders.entries()) {\r\n      const orderTime = new Date(order.create_time).getTime();\r\n      if (orderTime < cutoffTime && (order.status === 'closed' || order.status === 'cancelled')) {\r\n        this.activeOrders.delete(orderId);\r\n      }\r\n    }\r\n    \r\n    // Limit order history size\r\n    if (this.orderHistory.length > 1000) {\r\n      this.orderHistory = this.orderHistory\r\n        .sort((a, b) => new Date(b.create_time).getTime() - new Date(a.create_time).getTime())\r\n        .slice(0, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log order event for audit trail\r\n   * \r\n   * @param eventType - Event type\r\n   * @param orderData - Order data\r\n   * @param additionalData - Additional event data\r\n   */\r\n  private async logOrderEvent(\r\n    eventType: string, \r\n    orderData: any, \r\n    additionalData: any = {}\r\n  ): Promise<void> {\r\n    await this.auditService.logSecurityEvent({\r\n      type: eventType,\r\n      severity: 'INFO',\r\n      details: {\r\n        orderData: this.sanitizeOrderData(orderData),\r\n        ...additionalData,\r\n      },\r\n      timestamp: new Date(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sanitize order data for logging\r\n   * \r\n   * @param orderData - Order data to sanitize\r\n   * @returns Sanitized order data\r\n   */\r\n  private sanitizeOrderData(orderData: any): any {\r\n    // Remove sensitive information from logs\r\n    const sanitized = { ...orderData };\r\n    \r\n    // Keep only essential order information\r\n    if (sanitized.text) {\r\n      delete sanitized.text; // May contain sensitive info\r\n    }\r\n    \r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Get order management statistics\r\n   */\r\n  public getOrderStats(): OrderManagementStats {\r\n    return { ...this.stats };\r\n  }\r\n\r\n  /**\r\n   * Get order execution configuration\r\n   */\r\n  public getConfig(): OrderExecutionConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update order execution configuration\r\n   * \r\n   * @param config - New configuration\r\n   */\r\n  public updateConfig(config: Partial<OrderExecutionConfig>): void {\r\n    this.config = { ...this.config, ...config };\r\n    logger.info('‚öôÔ∏è Order execution configuration updated');\r\n  }\r\n\r\n  /**\r\n   * Graceful shutdown\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    logger.info('üõë Shutting down Order Manager...');\r\n    \r\n    // Stop status monitoring\r\n    if (this.statusMonitorInterval) {\r\n      clearInterval(this.statusMonitorInterval);\r\n      this.statusMonitorInterval = null;\r\n    }\r\n    \r\n    // Log final statistics\r\n    await this.auditService.logSecurityEvent({\r\n      type: 'ORDER_MANAGER_SHUTDOWN',\r\n      severity: 'INFO',\r\n      details: { \r\n        stats: this.stats,\r\n        activeOrders: this.activeOrders.size,\r\n        positions: this.positions.size \r\n      },\r\n      timestamp: new Date(),\r\n    });\r\n    \r\n    logger.info('‚úÖ Order Manager shutdown completed');\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  OrderValidationResult,\r\n  OrderExecutionResult,\r\n  OrderStatusUpdate,\r\n  PositionSummary,\r\n  OrderManagementStats,\r\n  OrderExecutionConfig,\r\n};"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;U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C,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;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","ignoreList":[]}