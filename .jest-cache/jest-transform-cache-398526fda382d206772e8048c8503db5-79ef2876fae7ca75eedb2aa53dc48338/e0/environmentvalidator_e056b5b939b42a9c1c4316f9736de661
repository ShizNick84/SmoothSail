da656fc1f9b704171c99860fc4734985
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - ENVIRONMENT CONFIGURATION VALIDATOR
 * =============================================================================
 *
 * This module validates all environment variables required for the AI crypto
 * trading agent to operate safely and securely. It ensures all critical
 * configuration is present and properly formatted before system startup.
 *
 * CRITICAL SECURITY NOTICE:
 * This validator protects against misconfiguration that could lead to
 * financial losses or security breaches. All validation failures must
 * be treated as critical errors that prevent system startup.
 *
 * Validation Categories:
 * - Security configuration (encryption keys, secrets)
 * - Trading configuration (API credentials, risk parameters)
 * - System configuration (hardware limits, monitoring)
 * - Infrastructure configuration (SSH tunnels, networking)
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_29s9uqb4nk() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\config\\environment-validator.ts";
  var hash = "8f878d41b091f7817ba6bb6b0f5a4b067e26b077";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\config\\environment-validator.ts",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "1": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 50
        }
      },
      "2": {
        start: {
          line: 29,
          column: 14
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "3": {
        start: {
          line: 30,
          column: 13
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "4": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "5": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 150,
          column: 2
        }
      },
      "6": {
        start: {
          line: 52,
          column: 55
        },
        end: {
          line: 52,
          column: 69
        }
      },
      "7": {
        start: {
          line: 61,
          column: 61
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "8": {
        start: {
          line: 62,
          column: 62
        },
        end: {
          line: 62,
          column: 76
        }
      },
      "9": {
        start: {
          line: 71,
          column: 56
        },
        end: {
          line: 71,
          column: 70
        }
      },
      "10": {
        start: {
          line: 73,
          column: 70
        },
        end: {
          line: 73,
          column: 84
        }
      },
      "11": {
        start: {
          line: 74,
          column: 59
        },
        end: {
          line: 74,
          column: 73
        }
      },
      "12": {
        start: {
          line: 75,
          column: 60
        },
        end: {
          line: 75,
          column: 74
        }
      },
      "13": {
        start: {
          line: 76,
          column: 65
        },
        end: {
          line: 76,
          column: 79
        }
      },
      "14": {
        start: {
          line: 77,
          column: 64
        },
        end: {
          line: 77,
          column: 78
        }
      },
      "15": {
        start: {
          line: 83,
          column: 65
        },
        end: {
          line: 83,
          column: 79
        }
      },
      "16": {
        start: {
          line: 84,
          column: 70
        },
        end: {
          line: 84,
          column: 84
        }
      },
      "17": {
        start: {
          line: 102,
          column: 57
        },
        end: {
          line: 102,
          column: 71
        }
      },
      "18": {
        start: {
          line: 108,
          column: 66
        },
        end: {
          line: 108,
          column: 80
        }
      },
      "19": {
        start: {
          line: 109,
          column: 69
        },
        end: {
          line: 109,
          column: 83
        }
      },
      "20": {
        start: {
          line: 126,
          column: 67
        },
        end: {
          line: 126,
          column: 81
        }
      },
      "21": {
        start: {
          line: 139,
          column: 65
        },
        end: {
          line: 139,
          column: 79
        }
      },
      "22": {
        start: {
          line: 140,
          column: 66
        },
        end: {
          line: 140,
          column: 80
        }
      },
      "23": {
        start: {
          line: 142,
          column: 60
        },
        end: {
          line: 142,
          column: 74
        }
      },
      "24": {
        start: {
          line: 145,
          column: 57
        },
        end: {
          line: 145,
          column: 71
        }
      },
      "25": {
        start: {
          line: 146,
          column: 60
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "26": {
        start: {
          line: 147,
          column: 58
        },
        end: {
          line: 147,
          column: 72
        }
      },
      "27": {
        start: {
          line: 158,
          column: 19
        },
        end: {
          line: 158,
          column: 21
        }
      },
      "28": {
        start: {
          line: 159,
          column: 21
        },
        end: {
          line: 159,
          column: 23
        }
      },
      "29": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "30": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 84
        }
      },
      "31": {
        start: {
          line: 163,
          column: 23
        },
        end: {
          line: 163,
          column: 63
        }
      },
      "32": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "33": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "34": {
        start: {
          line: 167,
          column: 29
        },
        end: {
          line: 167,
          column: 49
        }
      },
      "35": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 57
        }
      },
      "36": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 174,
          column: 14
        }
      },
      "37": {
        start: {
          line: 176,
          column: 23
        },
        end: {
          line: 176,
          column: 34
        }
      },
      "38": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 65
        }
      },
      "39": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 64
        }
      },
      "40": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "41": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 91
        }
      },
      "42": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 188,
          column: 14
        }
      },
      "43": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "44": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 100
        }
      },
      "45": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 84
        }
      },
      "46": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 201,
          column: 10
        }
      },
      "47": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 72
        }
      },
      "48": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 101
        }
      },
      "49": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "50": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "51": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 92
        }
      },
      "52": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "53": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 76
        }
      },
      "54": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "55": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 89
        }
      },
      "56": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "57": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 85
        }
      },
      "58": {
        start: {
          line: 237,
          column: 31
        },
        end: {
          line: 239,
          column: 36
        }
      },
      "59": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "60": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 106
        }
      },
      "61": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "62": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 82
        }
      },
      "63": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "64": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 85
        }
      },
      "65": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "66": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "67": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 73
        }
      },
      "68": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "69": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 76
        }
      },
      "70": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "71": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 77
        }
      },
      "72": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "73": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 89
        }
      },
      "74": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "75": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 92
        }
      },
      "76": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "77": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 112
        }
      },
      "78": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 395,
          column: 6
        }
      },
      "79": {
        start: {
          line: 309,
          column: 81
        },
        end: {
          line: 309,
          column: 92
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 49
          }
        },
        loc: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 69
          }
        },
        line: 52
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 61,
            column: 54
          },
          end: {
            line: 61,
            column: 55
          }
        },
        loc: {
          start: {
            line: 61,
            column: 61
          },
          end: {
            line: 61,
            column: 75
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 55
          },
          end: {
            line: 62,
            column: 56
          }
        },
        loc: {
          start: {
            line: 62,
            column: 62
          },
          end: {
            line: 62,
            column: 76
          }
        },
        line: 62
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 71,
            column: 49
          },
          end: {
            line: 71,
            column: 50
          }
        },
        loc: {
          start: {
            line: 71,
            column: 56
          },
          end: {
            line: 71,
            column: 70
          }
        },
        line: 71
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 63
          },
          end: {
            line: 73,
            column: 64
          }
        },
        loc: {
          start: {
            line: 73,
            column: 70
          },
          end: {
            line: 73,
            column: 84
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 52
          },
          end: {
            line: 74,
            column: 53
          }
        },
        loc: {
          start: {
            line: 74,
            column: 59
          },
          end: {
            line: 74,
            column: 73
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 75,
            column: 54
          }
        },
        loc: {
          start: {
            line: 75,
            column: 60
          },
          end: {
            line: 75,
            column: 74
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 58
          },
          end: {
            line: 76,
            column: 59
          }
        },
        loc: {
          start: {
            line: 76,
            column: 65
          },
          end: {
            line: 76,
            column: 79
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 57
          },
          end: {
            line: 77,
            column: 58
          }
        },
        loc: {
          start: {
            line: 77,
            column: 64
          },
          end: {
            line: 77,
            column: 78
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 83,
            column: 58
          },
          end: {
            line: 83,
            column: 59
          }
        },
        loc: {
          start: {
            line: 83,
            column: 65
          },
          end: {
            line: 83,
            column: 79
          }
        },
        line: 83
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 63
          },
          end: {
            line: 84,
            column: 64
          }
        },
        loc: {
          start: {
            line: 84,
            column: 70
          },
          end: {
            line: 84,
            column: 84
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 102,
            column: 50
          },
          end: {
            line: 102,
            column: 51
          }
        },
        loc: {
          start: {
            line: 102,
            column: 57
          },
          end: {
            line: 102,
            column: 71
          }
        },
        line: 102
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 59
          },
          end: {
            line: 108,
            column: 60
          }
        },
        loc: {
          start: {
            line: 108,
            column: 66
          },
          end: {
            line: 108,
            column: 80
          }
        },
        line: 108
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 62
          },
          end: {
            line: 109,
            column: 63
          }
        },
        loc: {
          start: {
            line: 109,
            column: 69
          },
          end: {
            line: 109,
            column: 83
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 126,
            column: 60
          },
          end: {
            line: 126,
            column: 61
          }
        },
        loc: {
          start: {
            line: 126,
            column: 67
          },
          end: {
            line: 126,
            column: 81
          }
        },
        line: 126
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 139,
            column: 58
          },
          end: {
            line: 139,
            column: 59
          }
        },
        loc: {
          start: {
            line: 139,
            column: 65
          },
          end: {
            line: 139,
            column: 79
          }
        },
        line: 139
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 140,
            column: 59
          },
          end: {
            line: 140,
            column: 60
          }
        },
        loc: {
          start: {
            line: 140,
            column: 66
          },
          end: {
            line: 140,
            column: 80
          }
        },
        line: 140
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 142,
            column: 53
          },
          end: {
            line: 142,
            column: 54
          }
        },
        loc: {
          start: {
            line: 142,
            column: 60
          },
          end: {
            line: 142,
            column: 74
          }
        },
        line: 142
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 145,
            column: 50
          },
          end: {
            line: 145,
            column: 51
          }
        },
        loc: {
          start: {
            line: 145,
            column: 57
          },
          end: {
            line: 145,
            column: 71
          }
        },
        line: 145
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 146,
            column: 53
          },
          end: {
            line: 146,
            column: 54
          }
        },
        loc: {
          start: {
            line: 146,
            column: 60
          },
          end: {
            line: 146,
            column: 74
          }
        },
        line: 146
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 147,
            column: 51
          },
          end: {
            line: 147,
            column: 52
          }
        },
        loc: {
          start: {
            line: 147,
            column: 58
          },
          end: {
            line: 147,
            column: 72
          }
        },
        line: 147
      },
      "21": {
        name: "validateEnvironment",
        decl: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 34
          }
        },
        loc: {
          start: {
            line: 157,
            column: 37
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 157
      },
      "22": {
        name: "performCustomValidations",
        decl: {
          start: {
            line: 221,
            column: 15
          },
          end: {
            line: 221,
            column: 39
          }
        },
        loc: {
          start: {
            line: 221,
            column: 66
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 221
      },
      "23": {
        name: "convertToValidatedConfig",
        decl: {
          start: {
            line: 280,
            column: 9
          },
          end: {
            line: 280,
            column: 33
          }
        },
        loc: {
          start: {
            line: 280,
            column: 42
          },
          end: {
            line: 396,
            column: 1
          }
        },
        line: 280
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 309,
            column: 73
          },
          end: {
            line: 309,
            column: 74
          }
        },
        loc: {
          start: {
            line: 309,
            column: 81
          },
          end: {
            line: 309,
            column: 92
          }
        },
        line: 309
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "1": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "2": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: 193,
            column: 13
          },
          end: {
            line: 195,
            column: 9
          }
        }],
        line: 190
      },
      "3": {
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 66
          },
          end: {
            line: 205,
            column: 79
          }
        }, {
          start: {
            line: 205,
            column: 82
          },
          end: {
            line: 205,
            column: 97
          }
        }],
        line: 205
      },
      "4": {
        loc: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "5": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "6": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 29
          }
        }, {
          start: {
            line: 226,
            column: 33
          },
          end: {
            line: 226,
            column: 77
          }
        }],
        line: 226
      },
      "7": {
        loc: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "8": {
        loc: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "9": {
        loc: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "10": {
        loc: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "11": {
        loc: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "12": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "13": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "14": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "15": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "16": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "17": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 38
          }
        }, {
          start: {
            line: 261,
            column: 42
          },
          end: {
            line: 261,
            column: 78
          }
        }],
        line: 261
      },
      "18": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "19": {
        loc: {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 30
          }
        }, {
          start: {
            line: 264,
            column: 34
          },
          end: {
            line: 264,
            column: 67
          }
        }],
        line: 264
      },
      "20": {
        loc: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f878d41b091f7817ba6bb6b0f5a4b067e26b077"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29s9uqb4nk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29s9uqb4nk();
cov_29s9uqb4nk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29s9uqb4nk().s[1]++;
exports.validateEnvironment = validateEnvironment;
const zod_1 =
/* istanbul ignore next */
(cov_29s9uqb4nk().s[2]++, require("zod"));
const fs_1 =
/* istanbul ignore next */
(cov_29s9uqb4nk().s[3]++, require("fs"));
const logger_1 =
/* istanbul ignore next */
(cov_29s9uqb4nk().s[4]++, require("@/core/logging/logger"));
/**
 * Zod schema for environment variable validation
 * Defines strict validation rules for all configuration
 */
const environmentSchema =
/* istanbul ignore next */
(cov_29s9uqb4nk().s[5]++, zod_1.z.object({
  // System configuration
  NODE_ENV: zod_1.z.enum(['development', 'production', 'staging', 'test']).default('development'),
  LOG_LEVEL: zod_1.z.enum(['error', 'warn', 'info', 'debug']).default('info'),
  PORT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1).max(65535)).default('3000'),
  API_PORT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1).max(65535)).default('3001'),
  // Security configuration - CRITICAL
  MASTER_ENCRYPTION_KEY: zod_1.z.string().min(64, 'Master encryption key must be at least 64 characters'),
  JWT_SECRET: zod_1.z.string().min(128, 'JWT secret must be at least 128 characters'),
  SESSION_SECRET: zod_1.z.string().min(32, 'Session secret must be at least 32 characters'),
  SESSION_TIMEOUT_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(300000)).default('1800000'),
  // 30 minutes
  // Gate.io API configuration - CRITICAL FOR TRADING
  GATE_IO_API_KEY: zod_1.z.string().min(1, 'Gate.io API key is required'),
  GATE_IO_API_SECRET: zod_1.z.string().min(1, 'Gate.io API secret is required'),
  GATE_IO_API_PASSPHRASE: zod_1.z.string().min(1, 'Gate.io API passphrase is required'),
  GATE_IO_BASE_URL: zod_1.z.string().url().default('https://api.gateio.ws'),
  GATE_IO_TESTNET: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[0]++;
    cov_29s9uqb4nk().s[6]++;
    return val === 'true';
  }).default('false'),
  GATE_IO_RATE_LIMIT_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(50)).default('100'),
  // Oracle SSH tunnel configuration - CRITICAL FOR IP CONSISTENCY
  ORACLE_HOST: zod_1.z.string().ip().or(zod_1.z.string().min(1)),
  ORACLE_SSH_PORT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1).max(65535)).default('22'),
  ORACLE_USERNAME: zod_1.z.string().min(1, 'Oracle username is required'),
  ORACLE_PRIVATE_KEY_PATH: zod_1.z.string().min(1, 'Oracle private key path is required'),
  SSH_TUNNEL_LOCAL_PORT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1024).max(65535)).default('8080'),
  SSH_TUNNEL_REMOTE_PORT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1).max(65535)).default('8080'),
  SSH_TUNNEL_KEEP_ALIVE: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[1]++;
    cov_29s9uqb4nk().s[7]++;
    return val === 'true';
  }).default('true'),
  SSH_TUNNEL_COMPRESSION: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[2]++;
    cov_29s9uqb4nk().s[8]++;
    return val === 'true';
  }).default('true'),
  // Trading configuration - CRITICAL FOR RISK MANAGEMENT
  DEFAULT_TRADING_PAIRS: zod_1.z.string().default('BTC_USDT,ETH_USDT'),
  RISK_PERCENTAGE_PER_TRADE: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0.1).max(10)).default('2.5'),
  MAX_DAILY_LOSS_PERCENTAGE: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(1).max(20)).default('5.0'),
  MIN_RISK_REWARD_RATIO: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(1.0).max(10)).default('1.3'),
  STOP_LOSS_PERCENTAGE: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0.1).max(5)).default('1.0'),
  MAX_POSITION_SIZE_USD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(10)).default('1000'),
  MIN_POSITION_SIZE_USD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(1)).default('10'),
  COMPOUND_PROFITS: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[3]++;
    cov_29s9uqb4nk().s[9]++;
    return val === 'true';
  }).default('true'),
  // Strategy configuration
  ENABLE_MOVING_AVERAGE_STRATEGY: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[4]++;
    cov_29s9uqb4nk().s[10]++;
    return val === 'true';
  }).default('true'),
  ENABLE_RSI_STRATEGY: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[5]++;
    cov_29s9uqb4nk().s[11]++;
    return val === 'true';
  }).default('true'),
  ENABLE_MACD_STRATEGY: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[6]++;
    cov_29s9uqb4nk().s[12]++;
    return val === 'true';
  }).default('true'),
  ENABLE_FIBONACCI_STRATEGY: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[7]++;
    cov_29s9uqb4nk().s[13]++;
    return val === 'true';
  }).default('true'),
  ENABLE_BREAKOUT_STRATEGY: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[8]++;
    cov_29s9uqb4nk().s[14]++;
    return val === 'true';
  }).default('true'),
  // AI configuration
  LLM_MODEL_PATH: zod_1.z.string().optional(),
  LLM_MAX_TOKENS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(256).max(8192)).default('2048'),
  LLM_TEMPERATURE: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0).max(2)).default('0.7'),
  LLM_CONTEXT_WINDOW: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1024)).default('4096'),
  ENABLE_AI_MARKET_ANALYSIS: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[9]++;
    cov_29s9uqb4nk().s[15]++;
    return val === 'true';
  }).default('true'),
  ENABLE_AI_DECISION_EXPLANATION: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[10]++;
    cov_29s9uqb4nk().s[16]++;
    return val === 'true';
  }).default('true'),
  AI_CONFIDENCE_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0).max(1)).default('0.75'),
  // Sentiment analysis configuration (optional)
  TWITTER_API_KEY: zod_1.z.string().optional(),
  TWITTER_API_SECRET: zod_1.z.string().optional(),
  TWITTER_ACCESS_TOKEN: zod_1.z.string().optional(),
  TWITTER_ACCESS_TOKEN_SECRET: zod_1.z.string().optional(),
  REDDIT_CLIENT_ID: zod_1.z.string().optional(),
  REDDIT_CLIENT_SECRET: zod_1.z.string().optional(),
  REDDIT_USER_AGENT: zod_1.z.string().optional(),
  NEWS_API_KEY: zod_1.z.string().optional(),
  SENTIMENT_UPDATE_INTERVAL_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(60000)).default('300000'),
  SENTIMENT_WEIGHT_TWITTER: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0).max(1)).default('0.4'),
  SENTIMENT_WEIGHT_REDDIT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0).max(1)).default('0.3'),
  SENTIMENT_WEIGHT_NEWS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(0).max(1)).default('0.3'),
  // Notification configuration (optional but recommended)
  EMAIL_SMTP_HOST: zod_1.z.string().optional(),
  EMAIL_SMTP_PORT: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1).max(65535)).optional(),
  EMAIL_SMTP_SECURE: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[11]++;
    cov_29s9uqb4nk().s[17]++;
    return val === 'true';
  }).optional(),
  EMAIL_FROM: zod_1.z.string().email().optional(),
  EMAIL_PASSWORD: zod_1.z.string().optional(),
  EMAIL_TO: zod_1.z.string().email().optional(),
  TELEGRAM_BOT_TOKEN: zod_1.z.string().optional(),
  TELEGRAM_CHAT_ID: zod_1.z.string().optional(),
  ENABLE_EMAIL_NOTIFICATIONS: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[12]++;
    cov_29s9uqb4nk().s[18]++;
    return val === 'true';
  }).default('true'),
  ENABLE_TELEGRAM_NOTIFICATIONS: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[13]++;
    cov_29s9uqb4nk().s[19]++;
    return val === 'true';
  }).default('true'),
  NOTIFICATION_RATE_LIMIT_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1000)).default('5000'),
  // System monitoring configuration
  CPU_USAGE_WARNING_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(50).max(95)).default('70'),
  CPU_USAGE_CRITICAL_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(70).max(99)).default('85'),
  MEMORY_USAGE_WARNING_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(50).max(95)).default('75'),
  MEMORY_USAGE_CRITICAL_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(70).max(99)).default('90'),
  DISK_USAGE_WARNING_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(50).max(95)).default('80'),
  DISK_USAGE_CRITICAL_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(70).max(99)).default('95'),
  CPU_TEMP_WARNING_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(50).max(90)).default('70'),
  CPU_TEMP_CRITICAL_THRESHOLD: zod_1.z.string().transform(Number).pipe(zod_1.z.number().min(60).max(100)).default('80'),
  NETWORK_LATENCY_WARNING_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(50)).default('100'),
  NETWORK_LATENCY_CRITICAL_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(100)).default('500'),
  // Database configuration
  DATABASE_PATH: zod_1.z.string().default('./data/trading_agent.db'),
  DATABASE_BACKUP_INTERVAL_HOURS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(1).max(24)).default('6'),
  DATABASE_RETENTION_DAYS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(7)).default('90'),
  DATABASE_ENCRYPTION_ENABLED: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[14]++;
    cov_29s9uqb4nk().s[20]++;
    return val === 'true';
  }).default('true'),
  // Logging configuration
  LOG_DIR: zod_1.z.string().default('./logs'),
  AUDIT_LOG_DIR: zod_1.z.string().default('./logs/audit'),
  SECURITY_LOG_DIR: zod_1.z.string().default('./logs/security'),
  LOG_RETENTION_DAYS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(7)).default('30'),
  AUDIT_LOG_RETENTION_DAYS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(90)).default('365'),
  SECURITY_LOG_RETENTION_DAYS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(90)).default('365'),
  TRADING_LOG_LEVEL: zod_1.z.enum(['error', 'warn', 'info', 'debug']).default('info'),
  SECURITY_LOG_LEVEL: zod_1.z.enum(['error', 'warn', 'info', 'debug']).default('debug'),
  SYSTEM_LOG_LEVEL: zod_1.z.enum(['error', 'warn', 'info', 'debug']).default('info'),
  // Backup configuration
  BACKUP_DIR: zod_1.z.string().default('./backups'),
  BACKUP_ENCRYPTION_ENABLED: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[15]++;
    cov_29s9uqb4nk().s[21]++;
    return val === 'true';
  }).default('true'),
  BACKUP_COMPRESSION_ENABLED: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[16]++;
    cov_29s9uqb4nk().s[22]++;
    return val === 'true';
  }).default('true'),
  BACKUP_RETENTION_DAYS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(7)).default('30'),
  ENABLE_AUTO_RECOVERY: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[17]++;
    cov_29s9uqb4nk().s[23]++;
    return val === 'true';
  }).default('true'),
  RECOVERY_TIMEOUT_MS: zod_1.z.string().transform(Number).pipe(zod_1.z.number().int().min(10000)).default('30000'),
  // Development configuration
  ENABLE_DEBUG_MODE: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[18]++;
    cov_29s9uqb4nk().s[24]++;
    return val === 'true';
  }).default('false'),
  ENABLE_PAPER_TRADING: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[19]++;
    cov_29s9uqb4nk().s[25]++;
    return val === 'true';
  }).default('true'),
  MOCK_EXTERNAL_APIS: zod_1.z.string().transform(val => {
    /* istanbul ignore next */
    cov_29s9uqb4nk().f[20]++;
    cov_29s9uqb4nk().s[26]++;
    return val === 'true';
  }).default('false'),
  TEST_DATABASE_PATH: zod_1.z.string().optional(),
  TEST_LOG_LEVEL: zod_1.z.enum(['error', 'warn', 'info', 'debug']).optional()
}));
/**
 * Validate environment configuration
 * Performs comprehensive validation of all environment variables
 *
 * @returns Promise<ValidationResult> Validation result with errors and warnings
 */
async function validateEnvironment() {
  /* istanbul ignore next */
  cov_29s9uqb4nk().f[21]++;
  const errors =
  /* istanbul ignore next */
  (cov_29s9uqb4nk().s[27]++, []);
  const warnings =
  /* istanbul ignore next */
  (cov_29s9uqb4nk().s[28]++, []);
  /* istanbul ignore next */
  cov_29s9uqb4nk().s[29]++;
  try {
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[30]++;
    logger_1.logger.info('🔍 Starting environment configuration validation...');
    // Parse and validate environment variables
    const result =
    /* istanbul ignore next */
    (cov_29s9uqb4nk().s[31]++, environmentSchema.safeParse(process.env));
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[32]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[0][0]++;
      cov_29s9uqb4nk().s[33]++;
      // Collect Zod validation errors
      for (const issue of result.error.issues) {
        const path =
        /* istanbul ignore next */
        (cov_29s9uqb4nk().s[34]++, issue.path.join('.'));
        /* istanbul ignore next */
        cov_29s9uqb4nk().s[35]++;
        errors.push(`${path}: ${issue.message}`);
      }
      /* istanbul ignore next */
      cov_29s9uqb4nk().s[36]++;
      return {
        isValid: false,
        errors,
        warnings
      };
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[0][1]++;
    }
    const config =
    /* istanbul ignore next */
    (cov_29s9uqb4nk().s[37]++, result.data);
    // Additional custom validations
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[38]++;
    await performCustomValidations(config, errors, warnings);
    // Convert to typed configuration
    const validatedConfig =
    /* istanbul ignore next */
    (cov_29s9uqb4nk().s[39]++, convertToValidatedConfig(config));
    // Log validation results
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[40]++;
    if (errors.length > 0) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[1][0]++;
      cov_29s9uqb4nk().s[41]++;
      logger_1.logger.error('❌ Environment validation failed', {
        errors,
        warnings
      });
      /* istanbul ignore next */
      cov_29s9uqb4nk().s[42]++;
      return {
        isValid: false,
        errors,
        warnings
      };
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[1][1]++;
    }
    cov_29s9uqb4nk().s[43]++;
    if (warnings.length > 0) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[2][0]++;
      cov_29s9uqb4nk().s[44]++;
      logger_1.logger.warn('⚠️ Environment validation completed with warnings', {
        warnings
      });
    } else {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[2][1]++;
      cov_29s9uqb4nk().s[45]++;
      logger_1.logger.info('✅ Environment validation completed successfully');
    }
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[46]++;
    return {
      isValid: true,
      errors: [],
      warnings,
      config: validatedConfig
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[47]++;
    logger_1.logger.error('❌ Environment validation error:', error);
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[48]++;
    errors.push(`Validation error: ${error instanceof Error ?
    /* istanbul ignore next */
    (cov_29s9uqb4nk().b[3][0]++, error.message) :
    /* istanbul ignore next */
    (cov_29s9uqb4nk().b[3][1]++, 'Unknown error')}`);
    /* istanbul ignore next */
    cov_29s9uqb4nk().s[49]++;
    return {
      isValid: false,
      errors,
      warnings
    };
  }
}
/**
 * Perform additional custom validations
 * Validates file paths, network connectivity, and business logic
 *
 * @param config - Parsed configuration
 * @param errors - Array to collect errors
 * @param warnings - Array to collect warnings
 */
async function performCustomValidations(config, errors, warnings) {
  /* istanbul ignore next */
  cov_29s9uqb4nk().f[22]++;
  cov_29s9uqb4nk().s[50]++;
  // Validate file paths exist
  if (!(0, fs_1.existsSync)(config.ORACLE_PRIVATE_KEY_PATH)) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[4][0]++;
    cov_29s9uqb4nk().s[51]++;
    errors.push(`Oracle private key file not found: ${config.ORACLE_PRIVATE_KEY_PATH}`);
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[4][1]++;
  }
  cov_29s9uqb4nk().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_29s9uqb4nk().b[6][0]++, config.LLM_MODEL_PATH) &&
  /* istanbul ignore next */
  (cov_29s9uqb4nk().b[6][1]++, !(0, fs_1.existsSync)(config.LLM_MODEL_PATH))) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[5][0]++;
    cov_29s9uqb4nk().s[53]++;
    warnings.push(`LLM model file not found: ${config.LLM_MODEL_PATH}`);
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[5][1]++;
  }
  // Validate risk management parameters
  cov_29s9uqb4nk().s[54]++;
  if (config.RISK_PERCENTAGE_PER_TRADE > config.MAX_DAILY_LOSS_PERCENTAGE) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[7][0]++;
    cov_29s9uqb4nk().s[55]++;
    errors.push('Risk percentage per trade cannot exceed max daily loss percentage');
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[7][1]++;
  }
  cov_29s9uqb4nk().s[56]++;
  if (config.MIN_POSITION_SIZE_USD >= config.MAX_POSITION_SIZE_USD) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[8][0]++;
    cov_29s9uqb4nk().s[57]++;
    errors.push('Minimum position size must be less than maximum position size');
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[8][1]++;
  }
  // Validate sentiment analysis weights sum to 1.0
  const sentimentWeightSum =
  /* istanbul ignore next */
  (cov_29s9uqb4nk().s[58]++, config.SENTIMENT_WEIGHT_TWITTER + config.SENTIMENT_WEIGHT_REDDIT + config.SENTIMENT_WEIGHT_NEWS);
  /* istanbul ignore next */
  cov_29s9uqb4nk().s[59]++;
  if (Math.abs(sentimentWeightSum - 1.0) > 0.01) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[9][0]++;
    cov_29s9uqb4nk().s[60]++;
    warnings.push(`Sentiment analysis weights should sum to 1.0, current sum: ${sentimentWeightSum}`);
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[9][1]++;
  }
  // Validate monitoring thresholds
  cov_29s9uqb4nk().s[61]++;
  if (config.CPU_USAGE_WARNING_THRESHOLD >= config.CPU_USAGE_CRITICAL_THRESHOLD) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[10][0]++;
    cov_29s9uqb4nk().s[62]++;
    errors.push('CPU warning threshold must be less than critical threshold');
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[10][1]++;
  }
  cov_29s9uqb4nk().s[63]++;
  if (config.MEMORY_USAGE_WARNING_THRESHOLD >= config.MEMORY_USAGE_CRITICAL_THRESHOLD) {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[11][0]++;
    cov_29s9uqb4nk().s[64]++;
    errors.push('Memory warning threshold must be less than critical threshold');
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[11][1]++;
  }
  // Validate production environment requirements
  cov_29s9uqb4nk().s[65]++;
  if (config.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[12][0]++;
    cov_29s9uqb4nk().s[66]++;
    if (config.ENABLE_DEBUG_MODE) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[13][0]++;
      cov_29s9uqb4nk().s[67]++;
      warnings.push('Debug mode should be disabled in production');
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[13][1]++;
    }
    cov_29s9uqb4nk().s[68]++;
    if (config.ENABLE_PAPER_TRADING) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[14][0]++;
      cov_29s9uqb4nk().s[69]++;
      warnings.push('Paper trading should be disabled in production');
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[14][1]++;
    }
    cov_29s9uqb4nk().s[70]++;
    if (config.MOCK_EXTERNAL_APIS) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[15][0]++;
      cov_29s9uqb4nk().s[71]++;
      errors.push('Mock external APIs must be disabled in production');
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[15][1]++;
    }
    cov_29s9uqb4nk().s[72]++;
    if (
    /* istanbul ignore next */
    (cov_29s9uqb4nk().b[17][0]++, !config.TELEGRAM_BOT_TOKEN) &&
    /* istanbul ignore next */
    (cov_29s9uqb4nk().b[17][1]++, config.ENABLE_TELEGRAM_NOTIFICATIONS)) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[16][0]++;
      cov_29s9uqb4nk().s[73]++;
      warnings.push('Telegram notifications enabled but bot token not configured');
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[16][1]++;
    }
    cov_29s9uqb4nk().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_29s9uqb4nk().b[19][0]++, !config.EMAIL_FROM) &&
    /* istanbul ignore next */
    (cov_29s9uqb4nk().b[19][1]++, config.ENABLE_EMAIL_NOTIFICATIONS)) {
      /* istanbul ignore next */
      cov_29s9uqb4nk().b[18][0]++;
      cov_29s9uqb4nk().s[75]++;
      warnings.push('Email notifications enabled but email configuration incomplete');
    } else
    /* istanbul ignore next */
    {
      cov_29s9uqb4nk().b[18][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[12][1]++;
  }
  // Validate Oracle host IP (should be 168.138.104.117 for Oracle Free Tier)
  cov_29s9uqb4nk().s[76]++;
  if (config.ORACLE_HOST !== '168.138.104.117') {
    /* istanbul ignore next */
    cov_29s9uqb4nk().b[20][0]++;
    cov_29s9uqb4nk().s[77]++;
    warnings.push(`Oracle host IP is ${config.ORACLE_HOST}, expected 168.138.104.117 for Oracle Free Tier`);
  } else
  /* istanbul ignore next */
  {
    cov_29s9uqb4nk().b[20][1]++;
  }
}
/**
 * Convert parsed configuration to typed configuration object
 * Maps environment variables to strongly typed configuration
 *
 * @param config - Parsed environment configuration
 * @returns ValidatedConfig Strongly typed configuration
 */
function convertToValidatedConfig(config) {
  /* istanbul ignore next */
  cov_29s9uqb4nk().f[23]++;
  cov_29s9uqb4nk().s[78]++;
  return {
    // System configuration
    nodeEnv: config.NODE_ENV,
    logLevel: config.LOG_LEVEL,
    port: config.PORT,
    apiPort: config.API_PORT,
    // Security configuration
    masterEncryptionKey: config.MASTER_ENCRYPTION_KEY,
    jwtSecret: config.JWT_SECRET,
    sessionSecret: config.SESSION_SECRET,
    sessionTimeoutMs: config.SESSION_TIMEOUT_MS,
    // Gate.io API configuration
    gateIoApiKey: config.GATE_IO_API_KEY,
    gateIoApiSecret: config.GATE_IO_API_SECRET,
    gateIoApiPassphrase: config.GATE_IO_API_PASSPHRASE,
    gateIoBaseUrl: config.GATE_IO_BASE_URL,
    gateIoTestnet: config.GATE_IO_TESTNET,
    gateIoRateLimitMs: config.GATE_IO_RATE_LIMIT_MS,
    // Oracle SSH tunnel configuration
    oracleHost: config.ORACLE_HOST,
    oracleSshPort: config.ORACLE_SSH_PORT,
    oracleUsername: config.ORACLE_USERNAME,
    oraclePrivateKeyPath: config.ORACLE_PRIVATE_KEY_PATH,
    sshTunnelLocalPort: config.SSH_TUNNEL_LOCAL_PORT,
    sshTunnelRemotePort: config.SSH_TUNNEL_REMOTE_PORT,
    sshTunnelKeepAlive: config.SSH_TUNNEL_KEEP_ALIVE,
    sshTunnelCompression: config.SSH_TUNNEL_COMPRESSION,
    // Trading configuration
    defaultTradingPairs: config.DEFAULT_TRADING_PAIRS.split(',').map(pair => {
      /* istanbul ignore next */
      cov_29s9uqb4nk().f[24]++;
      cov_29s9uqb4nk().s[79]++;
      return pair.trim();
    }),
    riskPercentagePerTrade: config.RISK_PERCENTAGE_PER_TRADE,
    maxDailyLossPercentage: config.MAX_DAILY_LOSS_PERCENTAGE,
    minRiskRewardRatio: config.MIN_RISK_REWARD_RATIO,
    stopLossPercentage: config.STOP_LOSS_PERCENTAGE,
    maxPositionSizeUsd: config.MAX_POSITION_SIZE_USD,
    minPositionSizeUsd: config.MIN_POSITION_SIZE_USD,
    compoundProfits: config.COMPOUND_PROFITS,
    // Strategy configuration
    enableMovingAverageStrategy: config.ENABLE_MOVING_AVERAGE_STRATEGY,
    enableRsiStrategy: config.ENABLE_RSI_STRATEGY,
    enableMacdStrategy: config.ENABLE_MACD_STRATEGY,
    enableFibonacciStrategy: config.ENABLE_FIBONACCI_STRATEGY,
    enableBreakoutStrategy: config.ENABLE_BREAKOUT_STRATEGY,
    // AI configuration
    llmModelPath: config.LLM_MODEL_PATH,
    llmMaxTokens: config.LLM_MAX_TOKENS,
    llmTemperature: config.LLM_TEMPERATURE,
    llmContextWindow: config.LLM_CONTEXT_WINDOW,
    enableAiMarketAnalysis: config.ENABLE_AI_MARKET_ANALYSIS,
    enableAiDecisionExplanation: config.ENABLE_AI_DECISION_EXPLANATION,
    aiConfidenceThreshold: config.AI_CONFIDENCE_THRESHOLD,
    // Sentiment analysis configuration
    twitterApiKey: config.TWITTER_API_KEY,
    twitterApiSecret: config.TWITTER_API_SECRET,
    twitterAccessToken: config.TWITTER_ACCESS_TOKEN,
    twitterAccessTokenSecret: config.TWITTER_ACCESS_TOKEN_SECRET,
    redditClientId: config.REDDIT_CLIENT_ID,
    redditClientSecret: config.REDDIT_CLIENT_SECRET,
    redditUserAgent: config.REDDIT_USER_AGENT,
    newsApiKey: config.NEWS_API_KEY,
    sentimentUpdateIntervalMs: config.SENTIMENT_UPDATE_INTERVAL_MS,
    sentimentWeightTwitter: config.SENTIMENT_WEIGHT_TWITTER,
    sentimentWeightReddit: config.SENTIMENT_WEIGHT_REDDIT,
    sentimentWeightNews: config.SENTIMENT_WEIGHT_NEWS,
    // Notification configuration
    emailSmtpHost: config.EMAIL_SMTP_HOST,
    emailSmtpPort: config.EMAIL_SMTP_PORT,
    emailSmtpSecure: config.EMAIL_SMTP_SECURE,
    emailFrom: config.EMAIL_FROM,
    emailPassword: config.EMAIL_PASSWORD,
    emailTo: config.EMAIL_TO,
    telegramBotToken: config.TELEGRAM_BOT_TOKEN,
    telegramChatId: config.TELEGRAM_CHAT_ID,
    enableEmailNotifications: config.ENABLE_EMAIL_NOTIFICATIONS,
    enableTelegramNotifications: config.ENABLE_TELEGRAM_NOTIFICATIONS,
    notificationRateLimitMs: config.NOTIFICATION_RATE_LIMIT_MS,
    // System monitoring configuration
    cpuUsageWarningThreshold: config.CPU_USAGE_WARNING_THRESHOLD,
    cpuUsageCriticalThreshold: config.CPU_USAGE_CRITICAL_THRESHOLD,
    memoryUsageWarningThreshold: config.MEMORY_USAGE_WARNING_THRESHOLD,
    memoryUsageCriticalThreshold: config.MEMORY_USAGE_CRITICAL_THRESHOLD,
    diskUsageWarningThreshold: config.DISK_USAGE_WARNING_THRESHOLD,
    diskUsageCriticalThreshold: config.DISK_USAGE_CRITICAL_THRESHOLD,
    cpuTempWarningThreshold: config.CPU_TEMP_WARNING_THRESHOLD,
    cpuTempCriticalThreshold: config.CPU_TEMP_CRITICAL_THRESHOLD,
    networkLatencyWarningMs: config.NETWORK_LATENCY_WARNING_MS,
    networkLatencyCriticalMs: config.NETWORK_LATENCY_CRITICAL_MS,
    // Database configuration
    databasePath: config.DATABASE_PATH,
    databaseBackupIntervalHours: config.DATABASE_BACKUP_INTERVAL_HOURS,
    databaseRetentionDays: config.DATABASE_RETENTION_DAYS,
    databaseEncryptionEnabled: config.DATABASE_ENCRYPTION_ENABLED,
    // Logging configuration
    logDir: config.LOG_DIR,
    auditLogDir: config.AUDIT_LOG_DIR,
    securityLogDir: config.SECURITY_LOG_DIR,
    logRetentionDays: config.LOG_RETENTION_DAYS,
    auditLogRetentionDays: config.AUDIT_LOG_RETENTION_DAYS,
    securityLogRetentionDays: config.SECURITY_LOG_RETENTION_DAYS,
    tradingLogLevel: config.TRADING_LOG_LEVEL,
    securityLogLevel: config.SECURITY_LOG_LEVEL,
    systemLogLevel: config.SYSTEM_LOG_LEVEL,
    // Backup configuration
    backupDir: config.BACKUP_DIR,
    backupEncryptionEnabled: config.BACKUP_ENCRYPTION_ENABLED,
    backupCompressionEnabled: config.BACKUP_COMPRESSION_ENABLED,
    backupRetentionDays: config.BACKUP_RETENTION_DAYS,
    enableAutoRecovery: config.ENABLE_AUTO_RECOVERY,
    recoveryTimeoutMs: config.RECOVERY_TIMEOUT_MS,
    // Development configuration
    enableDebugMode: config.ENABLE_DEBUG_MODE,
    enablePaperTrading: config.ENABLE_PAPER_TRADING,
    mockExternalApis: config.MOCK_EXTERNAL_APIS,
    testDatabasePath: config.TEST_DATABASE_PATH,
    testLogLevel: config.TEST_LOG_LEVEL
  };
}
// =============================================================================
// CONFIGURATION SECURITY NOTES
// =============================================================================
// 1. All sensitive configuration is validated before system startup
// 2. File paths are verified to exist and be accessible
// 3. Risk management parameters are validated for safety
// 4. Production environments have additional validation requirements
// 5. Configuration errors prevent system startup to avoid unsafe operation
// 6. Warnings are logged but don't prevent startup
// 7. All validation results are logged for audit purposes
// 8. Environment variables are never logged in plain text
// =============================================================================