1ff0a725ce9502ddf11657b2784b6d35
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - INTEL NUC DISK OPTIMIZER
 * =============================================================================
 *
 * This module provides comprehensive disk space optimization for Intel NUC systems
 * with 256GB SSD. It manages log rotation, database cleanup, temporary file
 * management, and provides automated disk space monitoring and alerts.
 *
 * CRITICAL PERFORMANCE NOTICE:
 * Disk space management is crucial for continuous trading operations on Intel NUC.
 * Running out of disk space could prevent logging, database operations, and
 * system updates, potentially impacting trading performance and data integrity.
 *
 * Intel NUC Specifications:
 * - 256GB M.2 SSD
 * - Target usage: <80% (204GB)
 * - Critical threshold: 95% (243GB)
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_lnocvymrs() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance\\disk-optimizer.ts";
  var hash = "1364bd7fb3f7c7ebf52bec6a081193d179fcdc94";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance\\disk-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "1": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "2": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "3": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "4": {
        start: {
          line: 30,
          column: 13
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "5": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "6": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "7": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 16
        }
      },
      "8": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 39
        }
      },
      "9": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 38
        }
      },
      "11": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "12": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "13": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "16": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "17": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "18": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "19": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 79
        }
      },
      "20": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "21": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "22": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "23": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 45
        }
      },
      "24": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 42
        }
      },
      "25": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 77
        }
      },
      "26": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 45
        }
      },
      "27": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 81
        }
      },
      "28": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 24
        }
      },
      "29": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 65
        }
      },
      "30": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "31": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 51
        }
      },
      "32": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 43
        }
      },
      "33": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "34": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 48
        }
      },
      "35": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 40
        }
      },
      "36": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "37": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 50
        }
      },
      "38": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "39": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "40": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 52
        }
      },
      "41": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 44
        }
      },
      "42": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "43": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 41
        }
      },
      "44": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 75
        }
      },
      "45": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 132,
          column: 55
        }
      },
      "46": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "47": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "48": {
        start: {
          line: 144,
          column: 24
        },
        end: {
          line: 144,
          column: 63
        }
      },
      "49": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "50": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "51": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 43
        }
      },
      "52": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 73
        }
      },
      "53": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "54": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 91
        }
      },
      "55": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 74
        }
      },
      "56": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 185,
          column: 45
        }
      },
      "57": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "58": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 166,
          column: 63
        }
      },
      "59": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 46
        }
      },
      "60": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 47
        }
      },
      "61": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 172,
          column: 17
        }
      },
      "62": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 45
        }
      },
      "63": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 52
        }
      },
      "64": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 53
        }
      },
      "65": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 180,
          column: 17
        }
      },
      "66": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 48
        }
      },
      "67": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 73
        }
      },
      "68": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 75
        }
      },
      "69": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 200,
          column: 42
        }
      },
      "70": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "71": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "72": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 75
        }
      },
      "73": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 209,
          column: 44
        }
      },
      "74": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "75": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 52
        }
      },
      "76": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 74
        }
      },
      "77": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "78": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "79": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 52
        }
      },
      "80": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 75
        }
      },
      "81": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "82": {
        start: {
          line: 226,
          column: 26
        },
        end: {
          line: 226,
          column: 58
        }
      },
      "83": {
        start: {
          line: 227,
          column: 31
        },
        end: {
          line: 227,
          column: 57
        }
      },
      "84": {
        start: {
          line: 228,
          column: 30
        },
        end: {
          line: 228,
          column: 56
        }
      },
      "85": {
        start: {
          line: 229,
          column: 30
        },
        end: {
          line: 229,
          column: 52
        }
      },
      "86": {
        start: {
          line: 230,
          column: 32
        },
        end: {
          line: 230,
          column: 74
        }
      },
      "87": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "88": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 42
        }
      },
      "89": {
        start: {
          line: 236,
          column: 17
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "90": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 41
        }
      },
      "91": {
        start: {
          line: 239,
          column: 17
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "92": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 38
        }
      },
      "93": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 43
        }
      },
      "94": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 261,
          column: 14
        }
      },
      "95": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 78
        }
      },
      "96": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 24
        }
      },
      "97": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 64
        }
      },
      "98": {
        start: {
          line: 273,
          column: 32
        },
        end: {
          line: 273,
          column: 34
        }
      },
      "99": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "100": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "101": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 279,
          column: 17
        }
      },
      "102": {
        start: {
          line: 277,
          column: 34
        },
        end: {
          line: 277,
          column: 67
        }
      },
      "103": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 48
        }
      },
      "104": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 86
        }
      },
      "105": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 56
        }
      },
      "106": {
        start: {
          line: 286,
          column: 39
        },
        end: {
          line: 286,
          column: 54
        }
      },
      "107": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 288,
          column: 56
        }
      },
      "108": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "109": {
        start: {
          line: 289,
          column: 88
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "110": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 56
        }
      },
      "111": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "112": {
        start: {
          line: 302,
          column: 26
        },
        end: {
          line: 302,
          column: 59
        }
      },
      "113": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 303,
          column: 29
        }
      },
      "114": {
        start: {
          line: 304,
          column: 28
        },
        end: {
          line: 304,
          column: 29
        }
      },
      "115": {
        start: {
          line: 305,
          column: 27
        },
        end: {
          line: 305,
          column: 28
        }
      },
      "116": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 314,
          column: 13
        }
      },
      "117": {
        start: {
          line: 308,
          column: 31
        },
        end: {
          line: 308,
          column: 129
        }
      },
      "118": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 65
        }
      },
      "119": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 39
        }
      },
      "120": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "121": {
        start: {
          line: 317,
          column: 30
        },
        end: {
          line: 317,
          column: 66
        }
      },
      "122": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 332,
          column: 17
        }
      },
      "123": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 331,
          column: 21
        }
      },
      "124": {
        start: {
          line: 320,
          column: 41
        },
        end: {
          line: 320,
          column: 72
        }
      },
      "125": {
        start: {
          line: 321,
          column: 42
        },
        end: {
          line: 321,
          column: 76
        }
      },
      "126": {
        start: {
          line: 322,
          column: 24
        },
        end: {
          line: 327,
          column: 25
        }
      },
      "127": {
        start: {
          line: 323,
          column: 28
        },
        end: {
          line: 323,
          column: 39
        }
      },
      "128": {
        start: {
          line: 326,
          column: 28
        },
        end: {
          line: 326,
          column: 40
        }
      },
      "129": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 344,
          column: 14
        }
      },
      "130": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 82
        }
      },
      "131": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 355,
          column: 14
        }
      },
      "132": {
        start: {
          line: 362,
          column: 23
        },
        end: {
          line: 362,
          column: 25
        }
      },
      "133": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "134": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 380,
          column: 15
        }
      },
      "135": {
        start: {
          line: 382,
          column: 13
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "136": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 397,
          column: 15
        }
      },
      "137": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "138": {
        start: {
          line: 401,
          column: 26
        },
        end: {
          line: 401,
          column: 49
        }
      },
      "139": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 418,
          column: 13
        }
      },
      "140": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 417,
          column: 19
        }
      },
      "141": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "142": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 47
        }
      },
      "143": {
        start: {
          line: 430,
          column: 30
        },
        end: {
          line: 431,
          column: 78
        }
      },
      "144": {
        start: {
          line: 431,
          column: 23
        },
        end: {
          line: 431,
          column: 77
        }
      },
      "145": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "146": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 60
        }
      },
      "147": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 54
        }
      },
      "148": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 19
        }
      },
      "149": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 47
        }
      },
      "150": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 448,
          column: 11
        }
      },
      "151": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 38
        }
      },
      "152": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "153": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 54
        }
      },
      "154": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 90
        }
      },
      "155": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "156": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 49
        }
      },
      "157": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 49
        }
      },
      "158": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 84
        }
      },
      "159": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "160": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 19
        }
      },
      "161": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 33
        }
      },
      "162": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "163": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 76
        }
      },
      "164": {
        start: {
          line: 481,
          column: 34
        },
        end: {
          line: 481,
          column: 65
        }
      },
      "165": {
        start: {
          line: 482,
          column: 31
        },
        end: {
          line: 482,
          column: 32
        }
      },
      "166": {
        start: {
          line: 484,
          column: 32
        },
        end: {
          line: 484,
          column: 61
        }
      },
      "167": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 40
        }
      },
      "168": {
        start: {
          line: 487,
          column: 32
        },
        end: {
          line: 487,
          column: 64
        }
      },
      "169": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 40
        }
      },
      "170": {
        start: {
          line: 490,
          column: 33
        },
        end: {
          line: 490,
          column: 65
        }
      },
      "171": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 41
        }
      },
      "172": {
        start: {
          line: 492,
          column: 33
        },
        end: {
          line: 492,
          column: 64
        }
      },
      "173": {
        start: {
          line: 493,
          column: 31
        },
        end: {
          line: 493,
          column: 79
        }
      },
      "174": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 501,
          column: 15
        }
      },
      "175": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 507,
          column: 15
        }
      },
      "176": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 510,
          column: 72
        }
      },
      "177": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 513,
          column: 38
        }
      },
      "178": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 72
        }
      },
      "179": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 531,
          column: 9
        }
      },
      "180": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 523,
          column: 43
        }
      },
      "181": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 45
        }
      },
      "182": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 45
        }
      },
      "183": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 526,
          column: 47
        }
      },
      "184": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 527,
          column: 66
        }
      },
      "185": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 72
        }
      },
      "186": {
        start: {
          line: 537,
          column: 26
        },
        end: {
          line: 537,
          column: 71
        }
      },
      "187": {
        start: {
          line: 538,
          column: 27
        },
        end: {
          line: 538,
          column: 28
        }
      },
      "188": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 552,
          column: 9
        }
      },
      "189": {
        start: {
          line: 540,
          column: 28
        },
        end: {
          line: 540,
          column: 64
        }
      },
      "190": {
        start: {
          line: 541,
          column: 31
        },
        end: {
          line: 541,
          column: 41
        }
      },
      "191": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 65
        }
      },
      "192": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 547,
          column: 13
        }
      },
      "193": {
        start: {
          line: 544,
          column: 16
        },
        end: {
          line: 546,
          column: 17
        }
      },
      "194": {
        start: {
          line: 545,
          column: 20
        },
        end: {
          line: 545,
          column: 87
        }
      },
      "195": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 107
        }
      },
      "196": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 551,
          column: 77
        }
      },
      "197": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 553,
          column: 28
        }
      },
      "198": {
        start: {
          line: 559,
          column: 27
        },
        end: {
          line: 559,
          column: 28
        }
      },
      "199": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 573,
          column: 9
        }
      },
      "200": {
        start: {
          line: 561,
          column: 29
        },
        end: {
          line: 561,
          column: 58
        }
      },
      "201": {
        start: {
          line: 562,
          column: 31
        },
        end: {
          line: 562,
          column: 41
        }
      },
      "202": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 60
        }
      },
      "203": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 568,
          column: 13
        }
      },
      "204": {
        start: {
          line: 565,
          column: 16
        },
        end: {
          line: 567,
          column: 17
        }
      },
      "205": {
        start: {
          line: 566,
          column: 20
        },
        end: {
          line: 566,
          column: 88
        }
      },
      "206": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 569,
          column: 109
        }
      },
      "207": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 79
        }
      },
      "208": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 574,
          column: 28
        }
      },
      "209": {
        start: {
          line: 580,
          column: 27
        },
        end: {
          line: 580,
          column: 28
        }
      },
      "210": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 594,
          column: 9
        }
      },
      "211": {
        start: {
          line: 582,
          column: 33
        },
        end: {
          line: 582,
          column: 74
        }
      },
      "212": {
        start: {
          line: 583,
          column: 12
        },
        end: {
          line: 589,
          column: 13
        }
      },
      "213": {
        start: {
          line: 584,
          column: 16
        },
        end: {
          line: 588,
          column: 17
        }
      },
      "214": {
        start: {
          line: 585,
          column: 39
        },
        end: {
          line: 585,
          column: 71
        }
      },
      "215": {
        start: {
          line: 586,
          column: 20
        },
        end: {
          line: 586,
          column: 82
        }
      },
      "216": {
        start: {
          line: 587,
          column: 20
        },
        end: {
          line: 587,
          column: 47
        }
      },
      "217": {
        start: {
          line: 590,
          column: 12
        },
        end: {
          line: 590,
          column: 109
        }
      },
      "218": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 593,
          column: 79
        }
      },
      "219": {
        start: {
          line: 595,
          column: 8
        },
        end: {
          line: 595,
          column: 28
        }
      },
      "220": {
        start: {
          line: 601,
          column: 27
        },
        end: {
          line: 601,
          column: 28
        }
      },
      "221": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 615,
          column: 9
        }
      },
      "222": {
        start: {
          line: 604,
          column: 12
        },
        end: {
          line: 610,
          column: 13
        }
      },
      "223": {
        start: {
          line: 605,
          column: 16
        },
        end: {
          line: 605,
          column: 94
        }
      },
      "224": {
        start: {
          line: 606,
          column: 16
        },
        end: {
          line: 606,
          column: 50
        }
      },
      "225": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 611,
          column: 112
        }
      },
      "226": {
        start: {
          line: 614,
          column: 12
        },
        end: {
          line: 614,
          column: 82
        }
      },
      "227": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 616,
          column: 28
        }
      },
      "228": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 622,
          column: 67
        }
      },
      "229": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 630,
          column: 9
        }
      },
      "230": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 65
        }
      },
      "231": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 71
        }
      },
      "232": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 41
        }
      },
      "233": {
        start: {
          line: 642,
          column: 8
        },
        end: {
          line: 642,
          column: 62
        }
      },
      "234": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 650,
          column: 9
        }
      },
      "235": {
        start: {
          line: 646,
          column: 12
        },
        end: {
          line: 646,
          column: 62
        }
      },
      "236": {
        start: {
          line: 649,
          column: 12
        },
        end: {
          line: 649,
          column: 76
        }
      },
      "237": {
        start: {
          line: 656,
          column: 27
        },
        end: {
          line: 656,
          column: 28
        }
      },
      "238": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 676,
          column: 9
        }
      },
      "239": {
        start: {
          line: 658,
          column: 26
        },
        end: {
          line: 658,
          column: 62
        }
      },
      "240": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 672,
          column: 13
        }
      },
      "241": {
        start: {
          line: 660,
          column: 16
        },
        end: {
          line: 671,
          column: 17
        }
      },
      "242": {
        start: {
          line: 661,
          column: 37
        },
        end: {
          line: 661,
          column: 68
        }
      },
      "243": {
        start: {
          line: 662,
          column: 34
        },
        end: {
          line: 662,
          column: 68
        }
      },
      "244": {
        start: {
          line: 663,
          column: 20
        },
        end: {
          line: 667,
          column: 21
        }
      },
      "245": {
        start: {
          line: 664,
          column: 37
        },
        end: {
          line: 664,
          column: 47
        }
      },
      "246": {
        start: {
          line: 665,
          column: 24
        },
        end: {
          line: 665,
          column: 91
        }
      },
      "247": {
        start: {
          line: 666,
          column: 24
        },
        end: {
          line: 666,
          column: 45
        }
      },
      "248": {
        start: {
          line: 675,
          column: 12
        },
        end: {
          line: 675,
          column: 84
        }
      },
      "249": {
        start: {
          line: 677,
          column: 8
        },
        end: {
          line: 677,
          column: 28
        }
      },
      "250": {
        start: {
          line: 683,
          column: 8
        },
        end: {
          line: 689,
          column: 9
        }
      },
      "251": {
        start: {
          line: 684,
          column: 27
        },
        end: {
          line: 684,
          column: 125
        }
      },
      "252": {
        start: {
          line: 685,
          column: 12
        },
        end: {
          line: 685,
          column: 56
        }
      },
      "253": {
        start: {
          line: 688,
          column: 12
        },
        end: {
          line: 688,
          column: 21
        }
      },
      "254": {
        start: {
          line: 695,
          column: 8
        },
        end: {
          line: 697,
          column: 9
        }
      },
      "255": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 696,
          column: 52
        }
      },
      "256": {
        start: {
          line: 698,
          column: 23
        },
        end: {
          line: 698,
          column: 49
        }
      },
      "257": {
        start: {
          line: 699,
          column: 22
        },
        end: {
          line: 699,
          column: 43
        }
      },
      "258": {
        start: {
          line: 700,
          column: 21
        },
        end: {
          line: 700,
          column: 58
        }
      },
      "259": {
        start: {
          line: 701,
          column: 21
        },
        end: {
          line: 701,
          column: 51
        }
      },
      "260": {
        start: {
          line: 702,
          column: 8
        },
        end: {
          line: 705,
          column: 10
        }
      },
      "261": {
        start: {
          line: 711,
          column: 32
        },
        end: {
          line: 711,
          column: 34
        }
      },
      "262": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 714,
          column: 9
        }
      },
      "263": {
        start: {
          line: 713,
          column: 12
        },
        end: {
          line: 713,
          column: 92
        }
      },
      "264": {
        start: {
          line: 715,
          column: 8
        },
        end: {
          line: 717,
          column: 9
        }
      },
      "265": {
        start: {
          line: 716,
          column: 12
        },
        end: {
          line: 716,
          column: 83
        }
      },
      "266": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 720,
          column: 9
        }
      },
      "267": {
        start: {
          line: 719,
          column: 12
        },
        end: {
          line: 719,
          column: 80
        }
      },
      "268": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 721,
          column: 31
        }
      },
      "269": {
        start: {
          line: 727,
          column: 8
        },
        end: {
          line: 735,
          column: 11
        }
      },
      "270": {
        start: {
          line: 741,
          column: 8
        },
        end: {
          line: 741,
          column: 35
        }
      },
      "271": {
        start: {
          line: 747,
          column: 8
        },
        end: {
          line: 747,
          column: 37
        }
      },
      "272": {
        start: {
          line: 753,
          column: 8
        },
        end: {
          line: 753,
          column: 54
        }
      },
      "273": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 759,
          column: 45
        }
      },
      "274": {
        start: {
          line: 765,
          column: 8
        },
        end: {
          line: 771,
          column: 10
        }
      },
      "275": {
        start: {
          line: 774,
          column: 0
        },
        end: {
          line: 774,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 82
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 23
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 106
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 130
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 26
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 162
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 47
          }
        },
        loc: {
          start: {
            line: 164,
            column: 58
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 164
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 190
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 193,
            column: 43
          },
          end: {
            line: 193,
            column: 44
          }
        },
        loc: {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 200,
            column: 9
          }
        },
        line: 193
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 202,
            column: 45
          },
          end: {
            line: 202,
            column: 46
          }
        },
        loc: {
          start: {
            line: 202,
            column: 57
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 202
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 211,
            column: 47
          },
          end: {
            line: 211,
            column: 48
          }
        },
        loc: {
          start: {
            line: 211,
            column: 59
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 211
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 31
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 223
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 34
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 271
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 286,
            column: 29
          },
          end: {
            line: 286,
            column: 30
          }
        },
        loc: {
          start: {
            line: 286,
            column: 39
          },
          end: {
            line: 286,
            column: 54
          }
        },
        line: 286
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 289,
            column: 78
          },
          end: {
            line: 289,
            column: 79
          }
        },
        loc: {
          start: {
            line: 289,
            column: 88
          },
          end: {
            line: 294,
            column: 9
          }
        },
        line: 289
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 37
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 300
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 35
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 361
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 34
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 428
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 431,
            column: 18
          },
          end: {
            line: 431,
            column: 19
          }
        },
        loc: {
          start: {
            line: 431,
            column: 23
          },
          end: {
            line: 431,
            column: 77
          }
        },
        line: 431
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 41
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 459
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        loc: {
          start: {
            line: 474,
            column: 36
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 474
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 5
          }
        },
        loc: {
          start: {
            line: 519,
            column: 36
          },
          end: {
            line: 532,
            column: 5
          }
        },
        line: 519
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 5
          }
        },
        loc: {
          start: {
            line: 536,
            column: 42
          },
          end: {
            line: 554,
            column: 5
          }
        },
        line: 536
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 558,
            column: 5
          }
        },
        loc: {
          start: {
            line: 558,
            column: 32
          },
          end: {
            line: 575,
            column: 5
          }
        },
        line: 558
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 579,
            column: 4
          },
          end: {
            line: 579,
            column: 5
          }
        },
        loc: {
          start: {
            line: 579,
            column: 32
          },
          end: {
            line: 596,
            column: 5
          }
        },
        line: 579
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 600,
            column: 4
          },
          end: {
            line: 600,
            column: 5
          }
        },
        loc: {
          start: {
            line: 600,
            column: 34
          },
          end: {
            line: 617,
            column: 5
          }
        },
        line: 600
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        loc: {
          start: {
            line: 621,
            column: 35
          },
          end: {
            line: 631,
            column: 5
          }
        },
        line: 621
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 635,
            column: 4
          },
          end: {
            line: 635,
            column: 5
          }
        },
        loc: {
          start: {
            line: 635,
            column: 35
          },
          end: {
            line: 637,
            column: 5
          }
        },
        line: 635
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 641,
            column: 4
          },
          end: {
            line: 641,
            column: 5
          }
        },
        loc: {
          start: {
            line: 641,
            column: 29
          },
          end: {
            line: 651,
            column: 5
          }
        },
        line: 641
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 655,
            column: 5
          }
        },
        loc: {
          start: {
            line: 655,
            column: 51
          },
          end: {
            line: 678,
            column: 5
          }
        },
        line: 655
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 682,
            column: 4
          },
          end: {
            line: 682,
            column: 5
          }
        },
        loc: {
          start: {
            line: 682,
            column: 36
          },
          end: {
            line: 690,
            column: 5
          }
        },
        line: 682
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 694,
            column: 4
          },
          end: {
            line: 694,
            column: 5
          }
        },
        loc: {
          start: {
            line: 694,
            column: 23
          },
          end: {
            line: 706,
            column: 5
          }
        },
        line: 694
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 710,
            column: 4
          },
          end: {
            line: 710,
            column: 5
          }
        },
        loc: {
          start: {
            line: 710,
            column: 41
          },
          end: {
            line: 722,
            column: 5
          }
        },
        line: 710
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 726,
            column: 4
          },
          end: {
            line: 726,
            column: 5
          }
        },
        loc: {
          start: {
            line: 726,
            column: 27
          },
          end: {
            line: 736,
            column: 5
          }
        },
        line: 726
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 740,
            column: 4
          },
          end: {
            line: 740,
            column: 5
          }
        },
        loc: {
          start: {
            line: 740,
            column: 24
          },
          end: {
            line: 742,
            column: 5
          }
        },
        line: 740
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 746,
            column: 4
          },
          end: {
            line: 746,
            column: 5
          }
        },
        loc: {
          start: {
            line: 746,
            column: 21
          },
          end: {
            line: 748,
            column: 5
          }
        },
        line: 746
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 752,
            column: 4
          },
          end: {
            line: 752,
            column: 5
          }
        },
        loc: {
          start: {
            line: 752,
            column: 22
          },
          end: {
            line: 754,
            column: 5
          }
        },
        line: 752
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 758,
            column: 4
          },
          end: {
            line: 758,
            column: 5
          }
        },
        loc: {
          start: {
            line: 758,
            column: 25
          },
          end: {
            line: 760,
            column: 5
          }
        },
        line: 758
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 764,
            column: 4
          },
          end: {
            line: 764,
            column: 5
          }
        },
        loc: {
          start: {
            line: 764,
            column: 16
          },
          end: {
            line: 772,
            column: 5
          }
        },
        line: 764
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "1": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "2": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "3": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "4": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "5": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "6": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "7": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "8": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "9": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        }],
        line: 233
      },
      "10": {
        loc: {
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: 239,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        }],
        line: 236
      },
      "11": {
        loc: {
          start: {
            line: 239,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: 242,
            column: 17
          },
          end: {
            line: 244,
            column: 13
          }
        }],
        line: 239
      },
      "12": {
        loc: {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "13": {
        loc: {
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 309,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 309,
            column: 59
          }
        }, {
          start: {
            line: 309,
            column: 63
          },
          end: {
            line: 309,
            column: 64
          }
        }],
        line: 309
      },
      "14": {
        loc: {
          start: {
            line: 322,
            column: 24
          },
          end: {
            line: 327,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 24
          },
          end: {
            line: 327,
            column: 25
          }
        }, {
          start: {
            line: 325,
            column: 29
          },
          end: {
            line: 327,
            column: 25
          }
        }],
        line: 322
      },
      "15": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        }, {
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 398,
            column: 9
          }
        }],
        line: 364
      },
      "16": {
        loc: {
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 398,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "17": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "18": {
        loc: {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 418,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 418,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "19": {
        loc: {
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 402,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 402,
            column: 34
          }
        }, {
          start: {
            line: 402,
            column: 38
          },
          end: {
            line: 402,
            column: 52
          }
        }],
        line: 402
      },
      "20": {
        loc: {
          start: {
            line: 431,
            column: 23
          },
          end: {
            line: 431,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 431,
            column: 23
          },
          end: {
            line: 431,
            column: 44
          }
        }, {
          start: {
            line: 431,
            column: 48
          },
          end: {
            line: 431,
            column: 77
          }
        }],
        line: 431
      },
      "21": {
        loc: {
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "22": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "23": {
        loc: {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 452,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 452,
            column: 41
          }
        }, {
          start: {
            line: 452,
            column: 45
          },
          end: {
            line: 452,
            column: 74
          }
        }],
        line: 452
      },
      "24": {
        loc: {
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 475
      },
      "25": {
        loc: {
          start: {
            line: 537,
            column: 26
          },
          end: {
            line: 537,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 26
          },
          end: {
            line: 537,
            column: 39
          }
        }, {
          start: {
            line: 537,
            column: 43
          },
          end: {
            line: 537,
            column: 71
          }
        }],
        line: 537
      },
      "26": {
        loc: {
          start: {
            line: 544,
            column: 16
          },
          end: {
            line: 546,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 16
          },
          end: {
            line: 546,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "27": {
        loc: {
          start: {
            line: 565,
            column: 16
          },
          end: {
            line: 567,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 16
          },
          end: {
            line: 567,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "28": {
        loc: {
          start: {
            line: 584,
            column: 16
          },
          end: {
            line: 588,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 584,
            column: 16
          },
          end: {
            line: 588,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 584
      },
      "29": {
        loc: {
          start: {
            line: 663,
            column: 20
          },
          end: {
            line: 667,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 663,
            column: 20
          },
          end: {
            line: 667,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 663
      },
      "30": {
        loc: {
          start: {
            line: 685,
            column: 19
          },
          end: {
            line: 685,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 685,
            column: 19
          },
          end: {
            line: 685,
            column: 50
          }
        }, {
          start: {
            line: 685,
            column: 54
          },
          end: {
            line: 685,
            column: 55
          }
        }],
        line: 685
      },
      "31": {
        loc: {
          start: {
            line: 695,
            column: 8
          },
          end: {
            line: 697,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 695,
            column: 8
          },
          end: {
            line: 697,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 695
      },
      "32": {
        loc: {
          start: {
            line: 712,
            column: 8
          },
          end: {
            line: 714,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 712,
            column: 8
          },
          end: {
            line: 714,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 712
      },
      "33": {
        loc: {
          start: {
            line: 715,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 715,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 715
      },
      "34": {
        loc: {
          start: {
            line: 718,
            column: 8
          },
          end: {
            line: 720,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 718,
            column: 8
          },
          end: {
            line: 720,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 718
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1364bd7fb3f7c7ebf52bec6a081193d179fcdc94"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_lnocvymrs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_lnocvymrs();
cov_lnocvymrs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_lnocvymrs().s[1]++;
exports.DiskOptimizer = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_lnocvymrs().s[2]++, require("@/core/logging/logger"));
const events_1 =
/* istanbul ignore next */
(cov_lnocvymrs().s[3]++, require("events"));
const fs_1 =
/* istanbul ignore next */
(cov_lnocvymrs().s[4]++, require("fs"));
const path_1 =
/* istanbul ignore next */
(cov_lnocvymrs().s[5]++, require("path"));
const child_process_1 =
/* istanbul ignore next */
(cov_lnocvymrs().s[6]++, require("child_process"));
/**
 * Intel NUC Disk Optimizer
 * Provides comprehensive disk space management and optimization for 256GB SSD
 */
class DiskOptimizer extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(config) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[0]++;
    cov_lnocvymrs().s[7]++;
    super();
    /* istanbul ignore next */
    cov_lnocvymrs().s[8]++;
    this.monitoringInterval = null;
    /* istanbul ignore next */
    cov_lnocvymrs().s[9]++;
    this.cleanupInterval = null;
    /* istanbul ignore next */
    cov_lnocvymrs().s[10]++;
    this.dbCleanupInterval = null;
    /* istanbul ignore next */
    cov_lnocvymrs().s[11]++;
    this.tempCleanupInterval = null;
    /* istanbul ignore next */
    cov_lnocvymrs().s[12]++;
    this.currentMetrics = null;
    /* istanbul ignore next */
    cov_lnocvymrs().s[13]++;
    this.diskHistory = [];
    /* istanbul ignore next */
    cov_lnocvymrs().s[14]++;
    this.activeAlerts = new Map();
    /* istanbul ignore next */
    cov_lnocvymrs().s[15]++;
    this.isOptimizing = false;
    /* istanbul ignore next */
    cov_lnocvymrs().s[16]++;
    this.config = {
      maxUsagePercent: 80,
      criticalUsagePercent: 95,
      monitoringIntervalMs: 60000,
      // 1 minute
      cleanupIntervalMs: 3600000,
      // 1 hour
      logRetentionDays: 30,
      dbCleanupIntervalMs: 86400000,
      // 24 hours
      tempCleanupIntervalMs: 1800000,
      // 30 minutes
      enableAutoCleanup: true,
      monitoredDirectories: ['./logs', './node_modules', './dist', './coverage', '/tmp', '/var/tmp', '/var/log'],
      excludedDirectories: ['./src', './keys', './scripts', './systemd'],
      ...config
    };
    /* istanbul ignore next */
    cov_lnocvymrs().s[17]++;
    logger_1.logger.info('💾 Intel NUC Disk Optimizer initializing...', {
      component: 'DiskOptimizer',
      config: this.config
    });
  }
  /**
   * Start disk optimization and monitoring
   */
  async startOptimization() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[1]++;
    cov_lnocvymrs().s[18]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[19]++;
      logger_1.logger.info('🚀 Starting Intel NUC disk optimization...');
      // Perform initial disk assessment
      /* istanbul ignore next */
      cov_lnocvymrs().s[20]++;
      await this.performDiskAssessment();
      // Start disk monitoring
      /* istanbul ignore next */
      cov_lnocvymrs().s[21]++;
      this.startDiskMonitoring();
      // Start cleanup intervals
      /* istanbul ignore next */
      cov_lnocvymrs().s[22]++;
      if (this.config.enableAutoCleanup) {
        /* istanbul ignore next */
        cov_lnocvymrs().b[0][0]++;
        cov_lnocvymrs().s[23]++;
        this.startCleanupIntervals();
      } else
      /* istanbul ignore next */
      {
        cov_lnocvymrs().b[0][1]++;
      }
      // Setup log rotation
      cov_lnocvymrs().s[24]++;
      await this.setupLogRotation();
      /* istanbul ignore next */
      cov_lnocvymrs().s[25]++;
      logger_1.logger.info('✅ Disk optimization started successfully');
      /* istanbul ignore next */
      cov_lnocvymrs().s[26]++;
      this.emit('optimizationStarted');
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[27]++;
      logger_1.logger.error('❌ Failed to start disk optimization:', error);
      /* istanbul ignore next */
      cov_lnocvymrs().s[28]++;
      throw error;
    }
  }
  /**
   * Stop disk optimization
   */
  stopOptimization() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[2]++;
    cov_lnocvymrs().s[29]++;
    logger_1.logger.info('🛑 Stopping disk optimization...');
    /* istanbul ignore next */
    cov_lnocvymrs().s[30]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[1][0]++;
      cov_lnocvymrs().s[31]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_lnocvymrs().s[32]++;
      this.monitoringInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[1][1]++;
    }
    cov_lnocvymrs().s[33]++;
    if (this.cleanupInterval) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[2][0]++;
      cov_lnocvymrs().s[34]++;
      clearInterval(this.cleanupInterval);
      /* istanbul ignore next */
      cov_lnocvymrs().s[35]++;
      this.cleanupInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[2][1]++;
    }
    cov_lnocvymrs().s[36]++;
    if (this.dbCleanupInterval) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[3][0]++;
      cov_lnocvymrs().s[37]++;
      clearInterval(this.dbCleanupInterval);
      /* istanbul ignore next */
      cov_lnocvymrs().s[38]++;
      this.dbCleanupInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[3][1]++;
    }
    cov_lnocvymrs().s[39]++;
    if (this.tempCleanupInterval) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[4][0]++;
      cov_lnocvymrs().s[40]++;
      clearInterval(this.tempCleanupInterval);
      /* istanbul ignore next */
      cov_lnocvymrs().s[41]++;
      this.tempCleanupInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[4][1]++;
    }
    cov_lnocvymrs().s[42]++;
    logger_1.logger.info('✅ Disk optimization stopped');
    /* istanbul ignore next */
    cov_lnocvymrs().s[43]++;
    this.emit('optimizationStopped');
  }
  /**
   * Perform comprehensive disk assessment
   */
  async performDiskAssessment() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[3]++;
    cov_lnocvymrs().s[44]++;
    logger_1.logger.info('🔍 Performing Intel NUC disk assessment...');
    const metrics =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[45]++, await this.collectDiskMetrics());
    /* istanbul ignore next */
    cov_lnocvymrs().s[46]++;
    this.currentMetrics = metrics;
    // Log disk information
    /* istanbul ignore next */
    cov_lnocvymrs().s[47]++;
    logger_1.logger.info('📊 Disk Assessment:', {
      totalSpace: `${Math.round(metrics.totalSpace / 1024 / 1024 / 1024 * 100) / 100}GB`,
      usedSpace: `${Math.round(metrics.usedSpace / 1024 / 1024 / 1024 * 100) / 100}GB`,
      freeSpace: `${Math.round(metrics.freeSpace / 1024 / 1024 / 1024 * 100) / 100}GB`,
      utilization: `${metrics.utilization}%`,
      fileSystem: metrics.fileSystem,
      healthStatus: metrics.healthStatus
    });
    // Check if disk meets Intel NUC specifications
    const totalGB =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[48]++, metrics.totalSpace / 1024 / 1024 / 1024);
    /* istanbul ignore next */
    cov_lnocvymrs().s[49]++;
    if (totalGB < 250) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[5][0]++;
      cov_lnocvymrs().s[50]++;
      // Allow for some formatting overhead
      logger_1.logger.warn('⚠️ Disk capacity below Intel NUC specification:', {
        detected: `${Math.round(totalGB * 100) / 100}GB`,
        expected: '256GB'
      });
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[5][1]++;
    }
    // Analyze directory usage
    cov_lnocvymrs().s[51]++;
    await this.analyzeDirectoryUsage();
    // Generate initial recommendations
    const recommendations =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[52]++, this.generateDiskRecommendations(metrics));
    /* istanbul ignore next */
    cov_lnocvymrs().s[53]++;
    if (recommendations.length > 0) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[6][0]++;
      cov_lnocvymrs().s[54]++;
      logger_1.logger.info('💡 Disk optimization recommendations:', recommendations);
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[6][1]++;
    }
  }
  /**
   * Start continuous disk monitoring
   */
  startDiskMonitoring() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[4]++;
    cov_lnocvymrs().s[55]++;
    logger_1.logger.info('📊 Starting continuous disk monitoring...');
    /* istanbul ignore next */
    cov_lnocvymrs().s[56]++;
    this.monitoringInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[5]++;
      cov_lnocvymrs().s[57]++;
      try {
        const metrics =
        /* istanbul ignore next */
        (cov_lnocvymrs().s[58]++, await this.collectDiskMetrics());
        /* istanbul ignore next */
        cov_lnocvymrs().s[59]++;
        this.currentMetrics = metrics;
        // Add to history (keep last 100 entries)
        /* istanbul ignore next */
        cov_lnocvymrs().s[60]++;
        this.diskHistory.push(metrics);
        /* istanbul ignore next */
        cov_lnocvymrs().s[61]++;
        if (this.diskHistory.length > 100) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[7][0]++;
          cov_lnocvymrs().s[62]++;
          this.diskHistory.shift();
        } else
        /* istanbul ignore next */
        {
          cov_lnocvymrs().b[7][1]++;
        }
        // Check for disk alerts
        cov_lnocvymrs().s[63]++;
        await this.checkDiskAlerts(metrics);
        // Emit metrics update
        /* istanbul ignore next */
        cov_lnocvymrs().s[64]++;
        this.emit('metricsUpdated', metrics);
        // Log periodic status
        /* istanbul ignore next */
        cov_lnocvymrs().s[65]++;
        if (this.diskHistory.length % 10 === 0) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[8][0]++;
          cov_lnocvymrs().s[66]++;
          // Every 10 intervals
          this.logDiskStatus(metrics);
        } else
        /* istanbul ignore next */
        {
          cov_lnocvymrs().b[8][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[67]++;
        logger_1.logger.error('❌ Disk monitoring error:', error);
      }
    }, this.config.monitoringIntervalMs);
  }
  /**
   * Start cleanup intervals
   */
  startCleanupIntervals() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[6]++;
    cov_lnocvymrs().s[68]++;
    logger_1.logger.info('🧹 Starting automated cleanup intervals...');
    // General cleanup interval
    /* istanbul ignore next */
    cov_lnocvymrs().s[69]++;
    this.cleanupInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[7]++;
      cov_lnocvymrs().s[70]++;
      try {
        /* istanbul ignore next */
        cov_lnocvymrs().s[71]++;
        await this.performAutomaticCleanup();
      } catch (error) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[72]++;
        logger_1.logger.error('❌ Automatic cleanup error:', error);
      }
    }, this.config.cleanupIntervalMs);
    // Database cleanup interval
    /* istanbul ignore next */
    cov_lnocvymrs().s[73]++;
    this.dbCleanupInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[8]++;
      cov_lnocvymrs().s[74]++;
      try {
        /* istanbul ignore next */
        cov_lnocvymrs().s[75]++;
        await this.performDatabaseCleanup();
      } catch (error) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[76]++;
        logger_1.logger.error('❌ Database cleanup error:', error);
      }
    }, this.config.dbCleanupIntervalMs);
    // Temporary file cleanup interval
    /* istanbul ignore next */
    cov_lnocvymrs().s[77]++;
    this.tempCleanupInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[9]++;
      cov_lnocvymrs().s[78]++;
      try {
        /* istanbul ignore next */
        cov_lnocvymrs().s[79]++;
        await this.performTempFileCleanup();
      } catch (error) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[80]++;
        logger_1.logger.error('❌ Temp file cleanup error:', error);
      }
    }, this.config.tempCleanupIntervalMs);
  }
  /**
   * Collect comprehensive disk metrics
   */
  async collectDiskMetrics() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[10]++;
    cov_lnocvymrs().s[81]++;
    try {
      // Get disk usage using statvfs (more accurate than df)
      const stats =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[82]++, await fs_1.promises.statfs('./'));
      const totalSpace =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[83]++, stats.blocks * stats.bsize);
      const freeSpace =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[84]++, stats.bavail * stats.bsize);
      const usedSpace =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[85]++, totalSpace - freeSpace);
      const utilization =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[86]++, Math.round(usedSpace / totalSpace * 100));
      // Determine health status
      let healthStatus;
      /* istanbul ignore next */
      cov_lnocvymrs().s[87]++;
      if (utilization >= this.config.criticalUsagePercent) {
        /* istanbul ignore next */
        cov_lnocvymrs().b[9][0]++;
        cov_lnocvymrs().s[88]++;
        healthStatus = 'CRITICAL';
      } else {
        /* istanbul ignore next */
        cov_lnocvymrs().b[9][1]++;
        cov_lnocvymrs().s[89]++;
        if (utilization >= this.config.maxUsagePercent) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[10][0]++;
          cov_lnocvymrs().s[90]++;
          healthStatus = 'WARNING';
        } else {
          /* istanbul ignore next */
          cov_lnocvymrs().b[10][1]++;
          cov_lnocvymrs().s[91]++;
          if (utilization >= 60) {
            /* istanbul ignore next */
            cov_lnocvymrs().b[11][0]++;
            cov_lnocvymrs().s[92]++;
            healthStatus = 'GOOD';
          } else {
            /* istanbul ignore next */
            cov_lnocvymrs().b[11][1]++;
            cov_lnocvymrs().s[93]++;
            healthStatus = 'EXCELLENT';
          }
        }
      }
      /* istanbul ignore next */
      cov_lnocvymrs().s[94]++;
      return {
        totalSpace,
        usedSpace,
        freeSpace,
        utilization,
        availableSpace: freeSpace,
        ioStats: {
          readOps: 0,
          // Would need iostat for real values
          writeOps: 0,
          readThroughput: 0,
          writeThroughput: 0
        },
        fileSystem: 'ext4',
        // Default assumption
        mountPoint: '/',
        healthStatus,
        timestamp: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[95]++;
      logger_1.logger.error('❌ Failed to collect disk metrics:', error);
      /* istanbul ignore next */
      cov_lnocvymrs().s[96]++;
      throw error;
    }
  }
  /**
   * Analyze directory usage
   */
  async analyzeDirectoryUsage() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[11]++;
    cov_lnocvymrs().s[97]++;
    logger_1.logger.info('📁 Analyzing directory usage...');
    const directoryUsages =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[98]++, []);
    /* istanbul ignore next */
    cov_lnocvymrs().s[99]++;
    for (const dir of this.config.monitoredDirectories) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[100]++;
      try {
        /* istanbul ignore next */
        cov_lnocvymrs().s[101]++;
        if ((0, fs_1.existsSync)(dir)) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[12][0]++;
          const usage =
          /* istanbul ignore next */
          (cov_lnocvymrs().s[102]++, await this.getDirectoryUsage(dir));
          /* istanbul ignore next */
          cov_lnocvymrs().s[103]++;
          directoryUsages.push(usage);
        } else
        /* istanbul ignore next */
        {
          cov_lnocvymrs().b[12][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[104]++;
        logger_1.logger.warn(`⚠️ Failed to analyze directory ${dir}:`, error);
      }
    }
    // Sort by size (largest first)
    /* istanbul ignore next */
    cov_lnocvymrs().s[105]++;
    directoryUsages.sort((a, b) => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[12]++;
      cov_lnocvymrs().s[106]++;
      return b.size - a.size;
    });
    // Log top space consumers
    const topConsumers =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[107]++, directoryUsages.slice(0, 5));
    /* istanbul ignore next */
    cov_lnocvymrs().s[108]++;
    logger_1.logger.info('📊 Top disk space consumers:', topConsumers.map(usage => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[13]++;
      cov_lnocvymrs().s[109]++;
      return {
        path: usage.path,
        size: `${Math.round(usage.size / 1024 / 1024)}MB`,
        files: usage.fileCount,
        cleanable: usage.isCleanable
      };
    }));
    /* istanbul ignore next */
    cov_lnocvymrs().s[110]++;
    this.emit('directoryAnalysis', directoryUsages);
  }
  /**
   * Get directory usage information
   */
  async getDirectoryUsage(dirPath) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[14]++;
    cov_lnocvymrs().s[111]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[112]++, await fs_1.promises.stat(dirPath));
      let totalSize =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[113]++, 0);
      let fileCount =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[114]++, 0);
      let dirCount =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[115]++, 0);
      // Simple size calculation (for more accurate, would need recursive traversal)
      /* istanbul ignore next */
      cov_lnocvymrs().s[116]++;
      try {
        const output =
        /* istanbul ignore next */
        (cov_lnocvymrs().s[117]++, (0, child_process_1.execSync)(`du -sb "${dirPath}" 2>/dev/null || echo "0"`, {
          encoding: 'utf8'
        }));
        /* istanbul ignore next */
        cov_lnocvymrs().s[118]++;
        totalSize =
        /* istanbul ignore next */
        (cov_lnocvymrs().b[13][0]++, parseInt(output.split('\t')[0])) ||
        /* istanbul ignore next */
        (cov_lnocvymrs().b[13][1]++, 0);
      } catch (error) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[119]++;
        // Fallback to stat size
        totalSize = stats.size;
      }
      // Count files and directories
      /* istanbul ignore next */
      cov_lnocvymrs().s[120]++;
      try {
        const items =
        /* istanbul ignore next */
        (cov_lnocvymrs().s[121]++, await fs_1.promises.readdir(dirPath));
        /* istanbul ignore next */
        cov_lnocvymrs().s[122]++;
        for (const item of items) {
          /* istanbul ignore next */
          cov_lnocvymrs().s[123]++;
          try {
            const itemPath =
            /* istanbul ignore next */
            (cov_lnocvymrs().s[124]++, (0, path_1.join)(dirPath, item));
            const itemStats =
            /* istanbul ignore next */
            (cov_lnocvymrs().s[125]++, await fs_1.promises.stat(itemPath));
            /* istanbul ignore next */
            cov_lnocvymrs().s[126]++;
            if (itemStats.isDirectory()) {
              /* istanbul ignore next */
              cov_lnocvymrs().b[14][0]++;
              cov_lnocvymrs().s[127]++;
              dirCount++;
            } else {
              /* istanbul ignore next */
              cov_lnocvymrs().b[14][1]++;
              cov_lnocvymrs().s[128]++;
              fileCount++;
            }
          } catch (error) {
            // Skip inaccessible items
          }
        }
      } catch (error) {
        // Directory not readable
      }
      /* istanbul ignore next */
      cov_lnocvymrs().s[129]++;
      return {
        path: dirPath,
        size: totalSize,
        fileCount,
        dirCount,
        lastModified: stats.mtime,
        isCleanable: !this.config.excludedDirectories.includes(dirPath)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[130]++;
      logger_1.logger.warn(`⚠️ Failed to get usage for ${dirPath}:`, error);
      /* istanbul ignore next */
      cov_lnocvymrs().s[131]++;
      return {
        path: dirPath,
        size: 0,
        fileCount: 0,
        dirCount: 0,
        lastModified: new Date(),
        isCleanable: false
      };
    }
  }
  /**
   * Check for disk alerts
   */
  async checkDiskAlerts(metrics) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[15]++;
    const alerts =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[132]++, []);
    // Check disk usage
    /* istanbul ignore next */
    cov_lnocvymrs().s[133]++;
    if (metrics.utilization >= this.config.criticalUsagePercent) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[15][0]++;
      cov_lnocvymrs().s[134]++;
      alerts.push({
        id: `disk_critical_${Date.now()}`,
        type: 'DISK_CRITICAL',
        severity: 'CRITICAL',
        message: `Disk usage critical: ${metrics.utilization}%`,
        currentUsage: metrics.utilization,
        threshold: this.config.criticalUsagePercent,
        timestamp: new Date(),
        recommendations: ['Immediate cleanup required', 'Remove old log files', 'Clear temporary files', 'Consider database cleanup', 'Remove unnecessary node_modules']
      });
    } else {
      /* istanbul ignore next */
      cov_lnocvymrs().b[15][1]++;
      cov_lnocvymrs().s[135]++;
      if (metrics.utilization >= this.config.maxUsagePercent) {
        /* istanbul ignore next */
        cov_lnocvymrs().b[16][0]++;
        cov_lnocvymrs().s[136]++;
        alerts.push({
          id: `disk_warning_${Date.now()}`,
          type: 'DISK_WARNING',
          severity: 'HIGH',
          message: `Disk usage high: ${metrics.utilization}%`,
          currentUsage: metrics.utilization,
          threshold: this.config.maxUsagePercent,
          timestamp: new Date(),
          recommendations: ['Schedule cleanup operations', 'Review log retention policies', 'Clear build artifacts', 'Monitor disk usage trends']
        });
      } else
      /* istanbul ignore next */
      {
        cov_lnocvymrs().b[16][1]++;
      }
    }
    // Check for rapid disk usage increase
    /* istanbul ignore next */
    cov_lnocvymrs().s[137]++;
    if (this.diskHistory.length >= 5) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[17][0]++;
      const trend =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[138]++, this.analyzeDiskTrend());
      /* istanbul ignore next */
      cov_lnocvymrs().s[139]++;
      if (
      /* istanbul ignore next */
      (cov_lnocvymrs().b[19][0]++, trend.isIncreasing) &&
      /* istanbul ignore next */
      (cov_lnocvymrs().b[19][1]++, trend.rate > 2)) {
        /* istanbul ignore next */
        cov_lnocvymrs().b[18][0]++;
        cov_lnocvymrs().s[140]++;
        // 2% increase per interval
        alerts.push({
          id: `disk_trend_warning_${Date.now()}`,
          type: 'CLEANUP_NEEDED',
          severity: 'MEDIUM',
          message: `Rapid disk usage increase: ${trend.rate.toFixed(1)}% per interval`,
          currentUsage: metrics.utilization,
          threshold: 0,
          timestamp: new Date(),
          recommendations: ['Investigate disk usage sources', 'Check for log file growth', 'Monitor temporary file creation', 'Review application data storage']
        });
      } else
      /* istanbul ignore next */
      {
        cov_lnocvymrs().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[17][1]++;
    }
    // Process alerts
    cov_lnocvymrs().s[141]++;
    for (const alert of alerts) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[142]++;
      await this.processDiskAlert(alert);
    }
  }
  /**
   * Process disk alert
   */
  async processDiskAlert(alert) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[16]++;
    // Check if similar alert already exists
    const existingAlert =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[143]++, Array.from(this.activeAlerts.values()).find(a => {
      /* istanbul ignore next */
      cov_lnocvymrs().f[17]++;
      cov_lnocvymrs().s[144]++;
      return /* istanbul ignore next */(cov_lnocvymrs().b[20][0]++, a.type === alert.type) &&
      /* istanbul ignore next */
      (cov_lnocvymrs().b[20][1]++, a.severity === alert.severity);
    }));
    /* istanbul ignore next */
    cov_lnocvymrs().s[145]++;
    if (existingAlert) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[21][0]++;
      cov_lnocvymrs().s[146]++;
      // Update existing alert
      existingAlert.currentUsage = alert.currentUsage;
      /* istanbul ignore next */
      cov_lnocvymrs().s[147]++;
      existingAlert.timestamp = alert.timestamp;
      /* istanbul ignore next */
      cov_lnocvymrs().s[148]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[21][1]++;
    }
    // Add new alert
    cov_lnocvymrs().s[149]++;
    this.activeAlerts.set(alert.id, alert);
    // Log alert
    /* istanbul ignore next */
    cov_lnocvymrs().s[150]++;
    logger_1.logger.warn(`⚠️ Disk Alert: ${alert.message}`, {
      component: 'DiskOptimizer',
      alertType: alert.type,
      severity: alert.severity,
      currentUsage: alert.currentUsage,
      threshold: alert.threshold,
      recommendations: alert.recommendations
    });
    // Emit alert event
    /* istanbul ignore next */
    cov_lnocvymrs().s[151]++;
    this.emit('diskAlert', alert);
    // Take automatic action for critical alerts
    /* istanbul ignore next */
    cov_lnocvymrs().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_lnocvymrs().b[23][0]++, alert.severity === 'CRITICAL') &&
    /* istanbul ignore next */
    (cov_lnocvymrs().b[23][1]++, this.config.enableAutoCleanup)) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[22][0]++;
      cov_lnocvymrs().s[153]++;
      await this.handleCriticalDiskAlert(alert);
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[22][1]++;
    }
  }
  /**
   * Handle critical disk alerts with automatic actions
   */
  async handleCriticalDiskAlert(alert) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[18]++;
    cov_lnocvymrs().s[154]++;
    logger_1.logger.warn('🚨 Handling critical disk alert with automatic actions...');
    /* istanbul ignore next */
    cov_lnocvymrs().s[155]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[156]++;
      // Perform emergency cleanup
      await this.performEmergencyCleanup();
      // Emit emergency cleanup event
      /* istanbul ignore next */
      cov_lnocvymrs().s[157]++;
      this.emit('emergencyCleanup', alert);
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[158]++;
      logger_1.logger.error('❌ Failed to handle critical disk alert:', error);
    }
  }
  /**
   * Perform automatic cleanup
   */
  async performAutomaticCleanup() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[19]++;
    cov_lnocvymrs().s[159]++;
    if (this.isOptimizing) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[24][0]++;
      cov_lnocvymrs().s[160]++;
      return; // Prevent concurrent cleanup
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[24][1]++;
    }
    cov_lnocvymrs().s[161]++;
    this.isOptimizing = true;
    /* istanbul ignore next */
    cov_lnocvymrs().s[162]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[163]++;
      logger_1.logger.info('🧹 Performing automatic disk cleanup...');
      const beforeMetrics =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[164]++, await this.collectDiskMetrics());
      let totalCleaned =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[165]++, 0);
      // Clean old log files
      const logsCleaned =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[166]++, await this.cleanOldLogFiles());
      /* istanbul ignore next */
      cov_lnocvymrs().s[167]++;
      totalCleaned += logsCleaned;
      // Clean temporary files
      const tempCleaned =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[168]++, await this.cleanTemporaryFiles());
      /* istanbul ignore next */
      cov_lnocvymrs().s[169]++;
      totalCleaned += tempCleaned;
      // Clean build artifacts
      const buildCleaned =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[170]++, await this.cleanBuildArtifacts());
      /* istanbul ignore next */
      cov_lnocvymrs().s[171]++;
      totalCleaned += buildCleaned;
      const afterMetrics =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[172]++, await this.collectDiskMetrics());
      const spaceFreed =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[173]++, beforeMetrics.usedSpace - afterMetrics.usedSpace);
      /* istanbul ignore next */
      cov_lnocvymrs().s[174]++;
      logger_1.logger.info('✅ Automatic cleanup completed', {
        spaceFreed: `${Math.round(spaceFreed / 1024 / 1024)}MB`,
        beforeUsage: `${beforeMetrics.utilization}%`,
        afterUsage: `${afterMetrics.utilization}%`,
        logsCleaned: `${Math.round(logsCleaned / 1024 / 1024)}MB`,
        tempCleaned: `${Math.round(tempCleaned / 1024 / 1024)}MB`,
        buildCleaned: `${Math.round(buildCleaned / 1024 / 1024)}MB`
      });
      /* istanbul ignore next */
      cov_lnocvymrs().s[175]++;
      this.emit('cleanupCompleted', {
        spaceFreed,
        beforeMetrics,
        afterMetrics,
        details: {
          logsCleaned,
          tempCleaned,
          buildCleaned
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[176]++;
      logger_1.logger.error('❌ Automatic cleanup failed:', error);
    } finally {
      /* istanbul ignore next */
      cov_lnocvymrs().s[177]++;
      this.isOptimizing = false;
    }
  }
  /**
   * Perform emergency cleanup for critical disk space
   */
  async performEmergencyCleanup() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[20]++;
    cov_lnocvymrs().s[178]++;
    logger_1.logger.warn('🚨 Performing emergency disk cleanup...');
    /* istanbul ignore next */
    cov_lnocvymrs().s[179]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[180]++;
      // More aggressive cleanup for emergency situations
      await this.cleanOldLogFiles(7); // Keep only 7 days
      /* istanbul ignore next */
      cov_lnocvymrs().s[181]++;
      await this.cleanTemporaryFiles();
      /* istanbul ignore next */
      cov_lnocvymrs().s[182]++;
      await this.cleanBuildArtifacts();
      /* istanbul ignore next */
      cov_lnocvymrs().s[183]++;
      await this.cleanNodeModulesCache();
      /* istanbul ignore next */
      cov_lnocvymrs().s[184]++;
      logger_1.logger.info('✅ Emergency cleanup completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[185]++;
      logger_1.logger.error('❌ Emergency cleanup failed:', error);
    }
  }
  /**
   * Clean old log files
   */
  async cleanOldLogFiles(retentionDays) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[21]++;
    const retention =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[186]++,
    /* istanbul ignore next */
    (cov_lnocvymrs().b[25][0]++, retentionDays) ||
    /* istanbul ignore next */
    (cov_lnocvymrs().b[25][1]++, this.config.logRetentionDays));
    let totalCleaned =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[187]++, 0);
    /* istanbul ignore next */
    cov_lnocvymrs().s[188]++;
    try {
      const logDirs =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[189]++, ['./logs', '/var/log/trading-agent']);
      const cutoffDate =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[190]++, new Date());
      /* istanbul ignore next */
      cov_lnocvymrs().s[191]++;
      cutoffDate.setDate(cutoffDate.getDate() - retention);
      /* istanbul ignore next */
      cov_lnocvymrs().s[192]++;
      for (const logDir of logDirs) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[193]++;
        if ((0, fs_1.existsSync)(logDir)) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[26][0]++;
          cov_lnocvymrs().s[194]++;
          totalCleaned += await this.cleanDirectoryByAge(logDir, cutoffDate);
        } else
        /* istanbul ignore next */
        {
          cov_lnocvymrs().b[26][1]++;
        }
      }
      /* istanbul ignore next */
      cov_lnocvymrs().s[195]++;
      logger_1.logger.info(`🗑️ Cleaned old log files: ${Math.round(totalCleaned / 1024 / 1024)}MB`);
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[196]++;
      logger_1.logger.error('❌ Failed to clean old log files:', error);
    }
    /* istanbul ignore next */
    cov_lnocvymrs().s[197]++;
    return totalCleaned;
  }
  /**
   * Clean temporary files
   */
  async cleanTemporaryFiles() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[22]++;
    let totalCleaned =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[198]++, 0);
    /* istanbul ignore next */
    cov_lnocvymrs().s[199]++;
    try {
      const tempDirs =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[200]++, ['/tmp', '/var/tmp', './tmp']);
      const cutoffDate =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[201]++, new Date());
      /* istanbul ignore next */
      cov_lnocvymrs().s[202]++;
      cutoffDate.setHours(cutoffDate.getHours() - 24); // Files older than 24 hours
      /* istanbul ignore next */
      cov_lnocvymrs().s[203]++;
      for (const tempDir of tempDirs) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[204]++;
        if ((0, fs_1.existsSync)(tempDir)) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[27][0]++;
          cov_lnocvymrs().s[205]++;
          totalCleaned += await this.cleanDirectoryByAge(tempDir, cutoffDate);
        } else
        /* istanbul ignore next */
        {
          cov_lnocvymrs().b[27][1]++;
        }
      }
      /* istanbul ignore next */
      cov_lnocvymrs().s[206]++;
      logger_1.logger.info(`🗑️ Cleaned temporary files: ${Math.round(totalCleaned / 1024 / 1024)}MB`);
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[207]++;
      logger_1.logger.error('❌ Failed to clean temporary files:', error);
    }
    /* istanbul ignore next */
    cov_lnocvymrs().s[208]++;
    return totalCleaned;
  }
  /**
   * Clean build artifacts
   */
  async cleanBuildArtifacts() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[23]++;
    let totalCleaned =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[209]++, 0);
    /* istanbul ignore next */
    cov_lnocvymrs().s[210]++;
    try {
      const artifactDirs =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[211]++, ['./dist', './coverage', './.jest-cache']);
      /* istanbul ignore next */
      cov_lnocvymrs().s[212]++;
      for (const dir of artifactDirs) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[213]++;
        if ((0, fs_1.existsSync)(dir)) {
          /* istanbul ignore next */
          cov_lnocvymrs().b[28][0]++;
          const sizeBefore =
          /* istanbul ignore next */
          (cov_lnocvymrs().s[214]++, await this.getDirectorySize(dir));
          /* istanbul ignore next */
          cov_lnocvymrs().s[215]++;
          await fs_1.promises.rm(dir, {
            recursive: true,
            force: true
          });
          /* istanbul ignore next */
          cov_lnocvymrs().s[216]++;
          totalCleaned += sizeBefore;
        } else
        /* istanbul ignore next */
        {
          cov_lnocvymrs().b[28][1]++;
        }
      }
      /* istanbul ignore next */
      cov_lnocvymrs().s[217]++;
      logger_1.logger.info(`🗑️ Cleaned build artifacts: ${Math.round(totalCleaned / 1024 / 1024)}MB`);
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[218]++;
      logger_1.logger.error('❌ Failed to clean build artifacts:', error);
    }
    /* istanbul ignore next */
    cov_lnocvymrs().s[219]++;
    return totalCleaned;
  }
  /**
   * Clean node_modules cache
   */
  async cleanNodeModulesCache() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[24]++;
    let totalCleaned =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[220]++, 0);
    /* istanbul ignore next */
    cov_lnocvymrs().s[221]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[222]++;
      // Clean npm cache
      try {
        /* istanbul ignore next */
        cov_lnocvymrs().s[223]++;
        (0, child_process_1.execSync)('npm cache clean --force', {
          stdio: 'ignore'
        });
        /* istanbul ignore next */
        cov_lnocvymrs().s[224]++;
        totalCleaned += 100 * 1024 * 1024; // Estimate 100MB
      } catch (error) {
        // Ignore npm cache errors
      }
      /* istanbul ignore next */
      cov_lnocvymrs().s[225]++;
      logger_1.logger.info(`🗑️ Cleaned node_modules cache: ${Math.round(totalCleaned / 1024 / 1024)}MB`);
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[226]++;
      logger_1.logger.error('❌ Failed to clean node_modules cache:', error);
    }
    /* istanbul ignore next */
    cov_lnocvymrs().s[227]++;
    return totalCleaned;
  }
  /**
   * Perform database cleanup
   */
  async performDatabaseCleanup() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[25]++;
    cov_lnocvymrs().s[228]++;
    logger_1.logger.info('🗄️ Performing database cleanup...');
    /* istanbul ignore next */
    cov_lnocvymrs().s[229]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[230]++;
      // Database cleanup would be implemented here
      // This is a placeholder for database-specific cleanup operations
      logger_1.logger.info('✅ Database cleanup completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[231]++;
      logger_1.logger.error('❌ Database cleanup failed:', error);
    }
  }
  /**
   * Perform temporary file cleanup
   */
  async performTempFileCleanup() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[26]++;
    cov_lnocvymrs().s[232]++;
    await this.cleanTemporaryFiles();
  }
  /**
   * Setup log rotation
   */
  async setupLogRotation() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[27]++;
    cov_lnocvymrs().s[233]++;
    logger_1.logger.info('🔄 Setting up log rotation...');
    /* istanbul ignore next */
    cov_lnocvymrs().s[234]++;
    try {
      /* istanbul ignore next */
      cov_lnocvymrs().s[235]++;
      // Log rotation is typically handled by winston-daily-rotate-file
      // This method can set up additional logrotate configuration if needed
      logger_1.logger.info('✅ Log rotation configured');
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[236]++;
      logger_1.logger.error('❌ Failed to setup log rotation:', error);
    }
  }
  /**
   * Clean directory by age
   */
  async cleanDirectoryByAge(dirPath, cutoffDate) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[28]++;
    let totalCleaned =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[237]++, 0);
    /* istanbul ignore next */
    cov_lnocvymrs().s[238]++;
    try {
      const items =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[239]++, await fs_1.promises.readdir(dirPath));
      /* istanbul ignore next */
      cov_lnocvymrs().s[240]++;
      for (const item of items) {
        /* istanbul ignore next */
        cov_lnocvymrs().s[241]++;
        try {
          const itemPath =
          /* istanbul ignore next */
          (cov_lnocvymrs().s[242]++, (0, path_1.join)(dirPath, item));
          const stats =
          /* istanbul ignore next */
          (cov_lnocvymrs().s[243]++, await fs_1.promises.stat(itemPath));
          /* istanbul ignore next */
          cov_lnocvymrs().s[244]++;
          if (stats.mtime < cutoffDate) {
            /* istanbul ignore next */
            cov_lnocvymrs().b[29][0]++;
            const size =
            /* istanbul ignore next */
            (cov_lnocvymrs().s[245]++, stats.size);
            /* istanbul ignore next */
            cov_lnocvymrs().s[246]++;
            await fs_1.promises.rm(itemPath, {
              recursive: true,
              force: true
            });
            /* istanbul ignore next */
            cov_lnocvymrs().s[247]++;
            totalCleaned += size;
          } else
          /* istanbul ignore next */
          {
            cov_lnocvymrs().b[29][1]++;
          }
        } catch (error) {
          // Skip items that can't be processed
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[248]++;
      logger_1.logger.warn(`⚠️ Failed to clean directory ${dirPath}:`, error);
    }
    /* istanbul ignore next */
    cov_lnocvymrs().s[249]++;
    return totalCleaned;
  }
  /**
   * Get directory size
   */
  async getDirectorySize(dirPath) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[29]++;
    cov_lnocvymrs().s[250]++;
    try {
      const output =
      /* istanbul ignore next */
      (cov_lnocvymrs().s[251]++, (0, child_process_1.execSync)(`du -sb "${dirPath}" 2>/dev/null || echo "0"`, {
        encoding: 'utf8'
      }));
      /* istanbul ignore next */
      cov_lnocvymrs().s[252]++;
      return /* istanbul ignore next */(cov_lnocvymrs().b[30][0]++, parseInt(output.split('\t')[0])) ||
      /* istanbul ignore next */
      (cov_lnocvymrs().b[30][1]++, 0);
    } catch (error) {
      /* istanbul ignore next */
      cov_lnocvymrs().s[253]++;
      return 0;
    }
  }
  /**
   * Analyze disk usage trend
   */
  analyzeDiskTrend() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[30]++;
    cov_lnocvymrs().s[254]++;
    if (this.diskHistory.length < 5) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[31][0]++;
      cov_lnocvymrs().s[255]++;
      return {
        isIncreasing: false,
        rate: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[31][1]++;
    }
    const recent =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[256]++, this.diskHistory.slice(-5));
    const first =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[257]++, recent[0].utilization);
    const last =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[258]++, recent[recent.length - 1].utilization);
    const rate =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[259]++, (last - first) / first * 100);
    /* istanbul ignore next */
    cov_lnocvymrs().s[260]++;
    return {
      isIncreasing: rate > 0,
      rate: Math.abs(rate)
    };
  }
  /**
   * Generate disk optimization recommendations
   */
  generateDiskRecommendations(metrics) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[31]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_lnocvymrs().s[261]++, []);
    /* istanbul ignore next */
    cov_lnocvymrs().s[262]++;
    if (metrics.utilization > 85) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[32][0]++;
      cov_lnocvymrs().s[263]++;
      recommendations.push('Disk usage is very high - immediate cleanup recommended');
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[32][1]++;
    }
    cov_lnocvymrs().s[264]++;
    if (metrics.utilization > 70) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[33][0]++;
      cov_lnocvymrs().s[265]++;
      recommendations.push('Consider enabling more aggressive log rotation');
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[33][1]++;
    }
    cov_lnocvymrs().s[266]++;
    if (metrics.freeSpace < 10 * 1024 * 1024 * 1024) {
      /* istanbul ignore next */
      cov_lnocvymrs().b[34][0]++;
      cov_lnocvymrs().s[267]++;
      // Less than 10GB
      recommendations.push('Low free space - monitor disk usage closely');
    } else
    /* istanbul ignore next */
    {
      cov_lnocvymrs().b[34][1]++;
    }
    cov_lnocvymrs().s[268]++;
    return recommendations;
  }
  /**
   * Log disk status
   */
  logDiskStatus(metrics) {
    /* istanbul ignore next */
    cov_lnocvymrs().f[32]++;
    cov_lnocvymrs().s[269]++;
    logger_1.logger.debug('📊 Disk Status Update', {
      component: 'DiskOptimizer',
      totalSpace: `${Math.round(metrics.totalSpace / 1024 / 1024 / 1024 * 100) / 100}GB`,
      usedSpace: `${Math.round(metrics.usedSpace / 1024 / 1024 / 1024 * 100) / 100}GB`,
      freeSpace: `${Math.round(metrics.freeSpace / 1024 / 1024 / 1024 * 100) / 100}GB`,
      utilization: `${metrics.utilization}%`,
      healthStatus: metrics.healthStatus,
      activeAlerts: this.activeAlerts.size
    });
  }
  /**
   * Get current disk metrics
   */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[33]++;
    cov_lnocvymrs().s[270]++;
    return this.currentMetrics;
  }
  /**
   * Get disk usage history
   */
  getDiskHistory() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[34]++;
    cov_lnocvymrs().s[271]++;
    return [...this.diskHistory];
  }
  /**
   * Get active disk alerts
   */
  getActiveAlerts() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[35]++;
    cov_lnocvymrs().s[272]++;
    return Array.from(this.activeAlerts.values());
  }
  /**
   * Force cleanup operation
   */
  async forceCleanup() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[36]++;
    cov_lnocvymrs().s[273]++;
    await this.performAutomaticCleanup();
  }
  /**
   * Get disk optimizer status
   */
  getStatus() {
    /* istanbul ignore next */
    cov_lnocvymrs().f[37]++;
    cov_lnocvymrs().s[274]++;
    return {
      isOptimizing: this.isOptimizing,
      isMonitoring: this.monitoringInterval !== null,
      currentMetrics: this.currentMetrics,
      activeAlerts: this.activeAlerts.size,
      config: this.config
    };
  }
}
/* istanbul ignore next */
cov_lnocvymrs().s[275]++;
exports.DiskOptimizer = DiskOptimizer;