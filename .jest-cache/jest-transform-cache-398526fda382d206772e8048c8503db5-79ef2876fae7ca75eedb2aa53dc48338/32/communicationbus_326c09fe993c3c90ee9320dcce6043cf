a0d37d153937108ebb1363fb90fb4821
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - INTER-COMPONENT COMMUNICATION BUS
 * =============================================================================
 *
 * This module provides a comprehensive communication bus for inter-component
 * messaging, event handling, and data sharing across the trading system.
 * It ensures loose coupling while maintaining reliable message delivery.
 *
 * CRITICAL SYSTEM NOTICE:
 * This communication bus handles critical trading events and system messages.
 * Message delivery reliability and ordering are essential for system safety
 * and financial operations.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2g7kl6bnf7() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\communication-bus.ts";
  var hash = "62395bd88d086e7f7e65e64b3530c43634b00f16";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\communication-bus.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 127
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "5": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 58
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 68
        }
      },
      "10": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 16
        }
      },
      "11": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 29
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "13": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 38
        }
      },
      "19": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "20": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 80
        }
      },
      "21": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "22": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 42
        }
      },
      "23": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 37
        }
      },
      "24": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "25": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 61
        }
      },
      "26": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "27": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 58
        }
      },
      "28": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 100,
          column: 14
        }
      },
      "29": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 81
        }
      },
      "30": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "31": {
        start: {
          line: 117,
          column: 31
        },
        end: {
          line: 117,
          column: 60
        }
      },
      "32": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "33": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 61
        }
      },
      "34": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 114
        }
      },
      "35": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "36": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 148,
          column: 67
        }
      },
      "37": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "38": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 54
        }
      },
      "39": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 101
        }
      },
      "40": {
        start: {
          line: 163,
          column: 30
        },
        end: {
          line: 163,
          column: 58
        }
      },
      "41": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 48
        }
      },
      "42": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 181,
          column: 10
        }
      },
      "43": {
        start: {
          line: 167,
          column: 36
        },
        end: {
          line: 170,
          column: 23
        }
      },
      "44": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 49
        }
      },
      "45": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 62
        }
      },
      "46": {
        start: {
          line: 171,
          column: 35
        },
        end: {
          line: 180,
          column: 14
        }
      },
      "47": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 50
        }
      },
      "48": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 53
        }
      },
      "49": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 45
        }
      },
      "50": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "51": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 31
        }
      },
      "52": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "53": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 90
        }
      },
      "54": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 203,
          column: 11
        }
      },
      "55": {
        start: {
          line: 212,
          column: 29
        },
        end: {
          line: 212,
          column: 67
        }
      },
      "56": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 35
        }
      },
      "57": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 223,
          column: 60
        }
      },
      "58": {
        start: {
          line: 223,
          column: 27
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "59": {
        start: {
          line: 231,
          column: 37
        },
        end: {
          line: 231,
          column: 38
        }
      },
      "60": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "61": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 75
        }
      },
      "62": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 242,
          column: 10
        }
      },
      "63": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 30
        }
      },
      "64": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      },
      "65": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "66": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 85
        }
      },
      "67": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 29
        }
      },
      "68": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 24
        }
      },
      "69": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "70": {
        start: {
          line: 259,
          column: 34
        },
        end: {
          line: 259,
          column: 62
        }
      },
      "71": {
        start: {
          line: 260,
          column: 31
        },
        end: {
          line: 260,
          column: 70
        }
      },
      "72": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "73": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 264,
          column: 17
        }
      },
      "74": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 263,
          column: 58
        }
      },
      "75": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 70
        }
      },
      "76": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 34
        }
      },
      "77": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "78": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 51
        }
      },
      "79": {
        start: {
          line: 279,
          column: 37
        },
        end: {
          line: 280,
          column: 64
        }
      },
      "80": {
        start: {
          line: 280,
          column: 27
        },
        end: {
          line: 280,
          column: 63
        }
      },
      "81": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "82": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 287,
          column: 13
        }
      },
      "83": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 51
        }
      },
      "84": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 107
        }
      },
      "85": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 35
        }
      },
      "86": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 31
        }
      },
      "87": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 37
        }
      },
      "88": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 36
        }
      },
      "89": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 34
        }
      },
      "90": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 71
        }
      },
      "91": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 33
        }
      },
      "92": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 310,
          column: 16
        }
      },
      "93": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "94": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 48
        }
      },
      "95": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "96": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 44
        }
      },
      "97": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "98": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 19
        }
      },
      "99": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 325,
          column: 11
        }
      },
      "100": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "101": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 47
        }
      },
      "102": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 65
        }
      },
      "103": {
        start: {
          line: 326,
          column: 24
        },
        end: {
          line: 326,
          column: 49
        }
      },
      "104": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "105": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 47
        }
      },
      "106": {
        start: {
          line: 338,
          column: 26
        },
        end: {
          line: 338,
          column: 36
        }
      },
      "107": {
        start: {
          line: 339,
          column: 23
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "108": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "109": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "110": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 74
        }
      },
      "111": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 30
        }
      },
      "112": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 49
        }
      },
      "113": {
        start: {
          line: 355,
          column: 42
        },
        end: {
          line: 355,
          column: 81
        }
      },
      "114": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "115": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 101
        }
      },
      "116": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 30
        }
      },
      "117": {
        start: {
          line: 361,
          column: 36
        },
        end: {
          line: 361,
          column: 125
        }
      },
      "118": {
        start: {
          line: 361,
          column: 78
        },
        end: {
          line: 361,
          column: 124
        }
      },
      "119": {
        start: {
          line: 362,
          column: 35
        },
        end: {
          line: 362,
          column: 76
        }
      },
      "120": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 372,
          column: 13
        }
      },
      "121": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 371,
          column: 17
        }
      },
      "122": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 42
        }
      },
      "123": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 43
        }
      },
      "124": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 89
        }
      },
      "125": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 59
        }
      },
      "126": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "127": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 128
        }
      },
      "128": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 140
        }
      },
      "129": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 26
        }
      },
      "130": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 35
        }
      },
      "131": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 89
        }
      },
      "132": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 59
        }
      },
      "133": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 86
        }
      },
      "134": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 391,
          column: 13
        }
      },
      "135": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 51
        }
      },
      "136": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 26
        }
      },
      "137": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 52
        }
      },
      "138": {
        start: {
          line: 407,
          column: 26
        },
        end: {
          line: 407,
          column: 36
        }
      },
      "139": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "140": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 50
        }
      },
      "141": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 58
        }
      },
      "142": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 415,
          column: 13
        }
      },
      "143": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 414,
          column: 23
        }
      },
      "144": {
        start: {
          line: 417,
          column: 35
        },
        end: {
          line: 417,
          column: 71
        }
      },
      "145": {
        start: {
          line: 418,
          column: 35
        },
        end: {
          line: 422,
          column: 14
        }
      },
      "146": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 421,
          column: 49
        }
      },
      "147": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 85
        }
      },
      "148": {
        start: {
          line: 423,
          column: 27
        },
        end: {
          line: 423,
          column: 79
        }
      },
      "149": {
        start: {
          line: 425,
          column: 35
        },
        end: {
          line: 425,
          column: 57
        }
      },
      "150": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 51
        }
      },
      "151": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 429,
          column: 57
        }
      },
      "152": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 26
        }
      },
      "153": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 48
        }
      },
      "154": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 100
        }
      },
      "155": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 88
        }
      },
      "156": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 24
        }
      },
      "157": {
        start: {
          line: 447,
          column: 25
        },
        end: {
          line: 447,
          column: 27
        }
      },
      "158": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "159": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 458,
          column: 13
        }
      },
      "160": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 456,
          column: 17
        }
      },
      "161": {
        start: {
          line: 452,
          column: 36
        },
        end: {
          line: 452,
          column: 101
        }
      },
      "162": {
        start: {
          line: 453,
          column: 20
        },
        end: {
          line: 455,
          column: 21
        }
      },
      "163": {
        start: {
          line: 454,
          column: 24
        },
        end: {
          line: 454,
          column: 33
        }
      },
      "164": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 44
        }
      },
      "165": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 461,
          column: 73
        }
      },
      "166": {
        start: {
          line: 461,
          column: 32
        },
        end: {
          line: 461,
          column: 71
        }
      },
      "167": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 462,
          column: 24
        }
      },
      "168": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "169": {
        start: {
          line: 474,
          column: 33
        },
        end: {
          line: 476,
          column: 36
        }
      },
      "170": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 70
        }
      },
      "171": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 46
        }
      },
      "172": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "173": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 54
        }
      },
      "174": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "175": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 56
        }
      },
      "176": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "177": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 58
        }
      },
      "178": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "179": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 77
        }
      },
      "180": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "181": {
        start: {
          line: 511,
          column: 37
        },
        end: {
          line: 511,
          column: 111
        }
      },
      "182": {
        start: {
          line: 511,
          column: 72
        },
        end: {
          line: 511,
          column: 110
        }
      },
      "183": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 518,
          column: 13
        }
      },
      "184": {
        start: {
          line: 513,
          column: 32
        },
        end: {
          line: 513,
          column: 80
        }
      },
      "185": {
        start: {
          line: 514,
          column: 16
        },
        end: {
          line: 514,
          column: 86
        }
      },
      "186": {
        start: {
          line: 517,
          column: 16
        },
        end: {
          line: 517,
          column: 96
        }
      },
      "187": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 520,
          column: 40
        }
      },
      "188": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 78
        }
      },
      "189": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 78
        }
      },
      "190": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 79
        }
      },
      "191": {
        start: {
          line: 547,
          column: 0
        },
        end: {
          line: 547,
          column: 44
        }
      },
      "192": {
        start: {
          line: 551,
          column: 0
        },
        end: {
          line: 560,
          column: 2
        }
      },
      "193": {
        start: {
          line: 564,
          column: 0
        },
        end: {
          line: 564,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 1
          },
          end: {
            line: 29,
            column: 2
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 59
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 116
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 32
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 147
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 50
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 162
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 166,
            column: 44
          },
          end: {
            line: 166,
            column: 45
          }
        },
        loc: {
          start: {
            line: 166,
            column: 65
          },
          end: {
            line: 181,
            column: 9
          }
        },
        line: 166
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 167,
            column: 47
          },
          end: {
            line: 167,
            column: 48
          }
        },
        loc: {
          start: {
            line: 167,
            column: 53
          },
          end: {
            line: 170,
            column: 13
          }
        },
        line: 167
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 175,
            column: 24
          },
          end: {
            line: 175,
            column: 25
          }
        },
        loc: {
          start: {
            line: 175,
            column: 43
          },
          end: {
            line: 179,
            column: 17
          }
        },
        line: 175
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 52
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 196
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 41
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 211
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 43
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 221
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 223,
            column: 20
          },
          end: {
            line: 223,
            column: 21
          }
        },
        loc: {
          start: {
            line: 223,
            column: 27
          },
          end: {
            line: 223,
            column: 58
          }
        },
        line: 223
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 20
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 230
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 27
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 247
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 250,
            column: 53
          },
          end: {
            line: 250,
            column: 54
          }
        },
        loc: {
          start: {
            line: 250,
            column: 64
          },
          end: {
            line: 256,
            column: 9
          }
        },
        line: 250
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 21
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 271
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 280,
            column: 20
          },
          end: {
            line: 280,
            column: 21
          }
        },
        loc: {
          start: {
            line: 280,
            column: 27
          },
          end: {
            line: 280,
            column: 63
          }
        },
        line: 280
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 29
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 300
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 302,
            column: 46
          },
          end: {
            line: 302,
            column: 47
          }
        },
        loc: {
          start: {
            line: 302,
            column: 58
          },
          end: {
            line: 310,
            column: 9
          }
        },
        line: 302
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 31
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 315
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 320,
            column: 31
          },
          end: {
            line: 320,
            column: 32
          }
        },
        loc: {
          start: {
            line: 320,
            column: 41
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 320
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 34
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 337
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 361,
            column: 62
          },
          end: {
            line: 361,
            column: 63
          }
        },
        loc: {
          start: {
            line: 361,
            column: 78
          },
          end: {
            line: 361,
            column: 124
          }
        },
        line: 361
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 52
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 406
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 418,
            column: 47
          },
          end: {
            line: 418,
            column: 48
          }
        },
        loc: {
          start: {
            line: 418,
            column: 62
          },
          end: {
            line: 422,
            column: 13
          }
        },
        line: 418
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 419,
            column: 27
          },
          end: {
            line: 419,
            column: 28
          }
        },
        loc: {
          start: {
            line: 419,
            column: 33
          },
          end: {
            line: 421,
            column: 17
          }
        },
        line: 419
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 446,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        loc: {
          start: {
            line: 446,
            column: 39
          },
          end: {
            line: 463,
            column: 5
          }
        },
        line: 446
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 461,
            column: 22
          },
          end: {
            line: 461,
            column: 23
          }
        },
        loc: {
          start: {
            line: 461,
            column: 32
          },
          end: {
            line: 461,
            column: 71
          }
        },
        line: 461
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 471,
            column: 4
          },
          end: {
            line: 471,
            column: 5
          }
        },
        loc: {
          start: {
            line: 471,
            column: 37
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 471
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 488,
            column: 4
          },
          end: {
            line: 488,
            column: 5
          }
        },
        loc: {
          start: {
            line: 488,
            column: 29
          },
          end: {
            line: 501,
            column: 5
          }
        },
        line: 488
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        },
        loc: {
          start: {
            line: 507,
            column: 24
          },
          end: {
            line: 521,
            column: 5
          }
        },
        line: 507
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 511,
            column: 65
          },
          end: {
            line: 511,
            column: 66
          }
        },
        loc: {
          start: {
            line: 511,
            column: 72
          },
          end: {
            line: 511,
            column: 110
          }
        },
        line: 511
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        },
        loc: {
          start: {
            line: 527,
            column: 24
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 527
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 535,
            column: 5
          }
        },
        loc: {
          start: {
            line: 535,
            column: 29
          },
          end: {
            line: 537,
            column: 5
          }
        },
        line: 535
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 543,
            column: 4
          },
          end: {
            line: 543,
            column: 5
          }
        },
        loc: {
          start: {
            line: 543,
            column: 28
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 543
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 3
          },
          end: {
            line: 35,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 3
          },
          end: {
            line: 35,
            column: 18
          }
        }, {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 69
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 43
          },
          end: {
            line: 59,
            column: 45
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 65,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 65,
            column: 34
          }
        }, {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 47
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 38
          }
        }, {
          start: {
            line: 67,
            column: 42
          },
          end: {
            line: 67,
            column: 64
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 116,
            column: 45
          },
          end: {
            line: 116,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 116,
            column: 57
          }
        }],
        line: 116
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 162,
            column: 33
          },
          end: {
            line: 162,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 43
          },
          end: {
            line: 162,
            column: 48
          }
        }],
        line: 162
      },
      "9": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "10": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 197,
            column: 36
          }
        }, {
          start: {
            line: 197,
            column: 40
          },
          end: {
            line: 197,
            column: 70
          }
        }],
        line: 197
      },
      "11": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "12": {
        loc: {
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 251,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 251,
            column: 33
          }
        }, {
          start: {
            line: 251,
            column: 37
          },
          end: {
            line: 251,
            column: 60
          }
        }],
        line: 251
      },
      "13": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "14": {
        loc: {
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "15": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "16": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "17": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "18": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "19": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 30
          }
        }, {
          start: {
            line: 316,
            column: 34
          },
          end: {
            line: 316,
            column: 64
          }
        }],
        line: 316
      },
      "20": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "21": {
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "22": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "23": {
        loc: {
          start: {
            line: 348,
            column: 16
          },
          end: {
            line: 348,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 16
          },
          end: {
            line: 348,
            column: 33
          }
        }, {
          start: {
            line: 348,
            column: 37
          },
          end: {
            line: 348,
            column: 67
          }
        }],
        line: 348
      },
      "24": {
        loc: {
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "25": {
        loc: {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 371,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 371,
            column: 17
          }
        }, {
          start: {
            line: 368,
            column: 21
          },
          end: {
            line: 371,
            column: 17
          }
        }],
        line: 365
      },
      "26": {
        loc: {
          start: {
            line: 370,
            column: 39
          },
          end: {
            line: 370,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 39
          },
          end: {
            line: 370,
            column: 68
          }
        }, {
          start: {
            line: 370,
            column: 72
          },
          end: {
            line: 370,
            column: 87
          }
        }],
        line: 370
      },
      "27": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        }, {
          start: {
            line: 378,
            column: 17
          },
          end: {
            line: 380,
            column: 13
          }
        }],
        line: 375
      },
      "28": {
        loc: {
          start: {
            line: 385,
            column: 31
          },
          end: {
            line: 385,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 56
          },
          end: {
            line: 385,
            column: 69
          }
        }, {
          start: {
            line: 385,
            column: 72
          },
          end: {
            line: 385,
            column: 87
          }
        }],
        line: 385
      },
      "29": {
        loc: {
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 391,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "30": {
        loc: {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "31": {
        loc: {
          start: {
            line: 413,
            column: 16
          },
          end: {
            line: 413,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 16
          },
          end: {
            line: 413,
            column: 46
          }
        }, {
          start: {
            line: 413,
            column: 50
          },
          end: {
            line: 413,
            column: 90
          }
        }],
        line: 413
      },
      "32": {
        loc: {
          start: {
            line: 435,
            column: 43
          },
          end: {
            line: 435,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 68
          },
          end: {
            line: 435,
            column: 81
          }
        }, {
          start: {
            line: 435,
            column: 84
          },
          end: {
            line: 435,
            column: 99
          }
        }],
        line: 435
      },
      "33": {
        loc: {
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 458,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 458,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "34": {
        loc: {
          start: {
            line: 451,
            column: 16
          },
          end: {
            line: 456,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 16
          },
          end: {
            line: 456,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "35": {
        loc: {
          start: {
            line: 452,
            column: 36
          },
          end: {
            line: 452,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 68
          },
          end: {
            line: 452,
            column: 82
          }
        }, {
          start: {
            line: 452,
            column: 85
          },
          end: {
            line: 452,
            column: 101
          }
        }],
        line: 452
      },
      "36": {
        loc: {
          start: {
            line: 453,
            column: 20
          },
          end: {
            line: 455,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 20
          },
          end: {
            line: 455,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "37": {
        loc: {
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: 479,
            column: 13
          },
          end: {
            line: 481,
            column: 9
          }
        }],
        line: 472
      },
      "38": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "39": {
        loc: {
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "40": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "41": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "42": {
        loc: {
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 498,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 498,
            column: 29
          }
        }, {
          start: {
            line: 498,
            column: 33
          },
          end: {
            line: 498,
            column: 64
          }
        }],
        line: 498
      },
      "43": {
        loc: {
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 509
      },
      "44": {
        loc: {
          start: {
            line: 512,
            column: 12
          },
          end: {
            line: 518,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 12
          },
          end: {
            line: 518,
            column: 13
          }
        }, {
          start: {
            line: 516,
            column: 17
          },
          end: {
            line: 518,
            column: 13
          }
        }],
        line: 512
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62395bd88d086e7f7e65e64b3530c43634b00f16"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g7kl6bnf7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g7kl6bnf7();
cov_2g7kl6bnf7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2g7kl6bnf7().s[1]++;
exports.communicationBus = exports.defaultCommunicationBusConfig = exports.CommunicationBus = exports.MessagePriority = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2g7kl6bnf7().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_2g7kl6bnf7().s[3]++, require("@/core/logging/logger"));
/**
 * Message priority enumeration
 */
var MessagePriority;
/* istanbul ignore next */
cov_2g7kl6bnf7().s[4]++;
(function (MessagePriority) {
  /* istanbul ignore next */
  cov_2g7kl6bnf7().f[0]++;
  cov_2g7kl6bnf7().s[5]++;
  MessagePriority[MessagePriority["LOW"] = 0] = "LOW";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[6]++;
  MessagePriority[MessagePriority["NORMAL"] = 1] = "NORMAL";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[7]++;
  MessagePriority[MessagePriority["HIGH"] = 2] = "HIGH";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[8]++;
  MessagePriority[MessagePriority["CRITICAL"] = 3] = "CRITICAL";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[9]++;
  MessagePriority[MessagePriority["EMERGENCY"] = 4] = "EMERGENCY";
})(
/* istanbul ignore next */
(cov_2g7kl6bnf7().b[0][0]++, MessagePriority) ||
/* istanbul ignore next */
(cov_2g7kl6bnf7().b[0][1]++, exports.MessagePriority = MessagePriority = {}));
/**
 * Communication bus class
 */
class CommunicationBus extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(config) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[1]++;
    cov_2g7kl6bnf7().s[10]++;
    super();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[11]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[12]++;
    this.subscriptions = new Map();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[13]++;
    this.messageQueue = [];
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[14]++;
    this.processingQueue = new Set();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[15]++;
    this.messageHistory = new Map();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[16]++;
    this.deadLetterQueue = [];
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[17]++;
    this.isProcessing = false;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[18]++;
    this.startMessageProcessing();
  }
  /**
   * Publish a message to the bus
   *
   * @param type Message type
   * @param payload Message payload
   * @param options Message options
   * @returns Promise<DeliveryResult>
   */
  async publish(type, payload, options =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[2]++;
    const message =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[19]++, {
      id: this.generateMessageId(),
      type,
      payload,
      timestamp: new Date(),
      source:
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[2][0]++, options.source) ||
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[2][1]++, 'unknown'),
      target: options.target,
      priority:
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[3][0]++, options.priority) ||
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[3][1]++, MessagePriority.NORMAL),
      expiresAt: options.expiresAt,
      correlationId: options.correlationId,
      replyTo: options.replyTo,
      metadata: {
        version: '1.0',
        encoding: 'json',
        encrypted: this.config.enableEncryption,
        headers: {},
        ...options.metadata
      }
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[20]++;
    logger_1.logger.debug(`📤 Publishing message: ${type} (${message.id})`);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[21]++;
    try {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[22]++;
      // Validate message
      this.validateMessage(message);
      // Add to queue
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[23]++;
      this.addToQueue(message);
      // Store in history
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[24]++;
      if (this.config.enablePersistence) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[4][0]++;
        cov_2g7kl6bnf7().s[25]++;
        this.messageHistory.set(message.id, message);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[4][1]++;
      }
      // Process immediately if high priority
      cov_2g7kl6bnf7().s[26]++;
      if (message.priority >= MessagePriority.HIGH) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[5][0]++;
        cov_2g7kl6bnf7().s[27]++;
        return await this.processMessage(message);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[5][1]++;
      }
      // Return pending result for normal priority messages
      cov_2g7kl6bnf7().s[28]++;
      return {
        success: true,
        deliveredAt: new Date(),
        handlerCount: 0,
        errors: [],
        processingTime: 0
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[29]++;
      logger_1.logger.error(`❌ Failed to publish message ${type}:`, error);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[30]++;
      throw error;
    }
  }
  /**
   * Subscribe to messages
   *
   * @param componentId Component identifier
   * @param pattern Message pattern
   * @param handler Message handler
   * @param options Subscription options
   * @returns Subscription ID
   */
  subscribe(componentId, pattern, handler, options =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[3]++;
    const subscriptionId =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[31]++, this.generateSubscriptionId());
    const subscription =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[32]++, {
      id: subscriptionId,
      componentId,
      pattern,
      handler,
      options: {
        acknowledge: true,
        maxRetries: 3,
        retryDelay: 1000,
        timeout: 30000,
        persistent: false,
        ...options
      },
      stats: {
        messagesReceived: 0,
        messagesProcessed: 0,
        messagesFailed: 0,
        averageProcessingTime: 0
      }
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[33]++;
    this.subscriptions.set(subscriptionId, subscription);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[34]++;
    logger_1.logger.info(`📥 Component ${componentId} subscribed to pattern: ${pattern} (${subscriptionId})`);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[35]++;
    return subscriptionId;
  }
  /**
   * Unsubscribe from messages
   *
   * @param subscriptionId Subscription identifier
   */
  unsubscribe(subscriptionId) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[4]++;
    const subscription =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[36]++, this.subscriptions.get(subscriptionId));
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[37]++;
    if (subscription) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[7][0]++;
      cov_2g7kl6bnf7().s[38]++;
      this.subscriptions.delete(subscriptionId);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[39]++;
      logger_1.logger.info(`📤 Unsubscribed: ${subscriptionId} (${subscription.componentId})`);
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[7][1]++;
    }
  }
  /**
   * Send a request and wait for response
   *
   * @param type Message type
   * @param payload Message payload
   * @param timeout Timeout in milliseconds
   * @returns Promise<any> Response payload
   */
  async request(type, payload, timeout =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().b[8][0]++, 30000)) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[5]++;
    const correlationId =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[40]++, this.generateCorrelationId());
    const replyTo =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[41]++, `reply.${correlationId}`);
    // Set up response handler
    const responsePromise =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[42]++, new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[6]++;
      const responseTimeout =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[43]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[7]++;
        cov_2g7kl6bnf7().s[44]++;
        this.unsubscribe(subscriptionId);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[45]++;
        reject(new Error(`Request timeout: ${type}`));
      }, timeout));
      const subscriptionId =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[46]++, this.subscribe('request-response', replyTo, {
        id: `response-handler-${correlationId}`,
        messageTypes: [replyTo],
        priority: 100,
        handle: async message => {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().f[8]++;
          cov_2g7kl6bnf7().s[47]++;
          clearTimeout(responseTimeout);
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[48]++;
          this.unsubscribe(subscriptionId);
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[49]++;
          resolve(message.payload);
        }
      }));
    }));
    // Send request
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[50]++;
    await this.publish(type, payload, {
      correlationId,
      replyTo,
      priority: MessagePriority.HIGH
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[51]++;
    return responsePromise;
  }
  /**
   * Send a response to a request
   *
   * @param originalMessage Original request message
   * @param responsePayload Response payload
   */
  async respond(originalMessage, responsePayload) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[9]++;
    cov_2g7kl6bnf7().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[10][0]++, !originalMessage.replyTo) ||
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[10][1]++, !originalMessage.correlationId)) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[9][0]++;
      cov_2g7kl6bnf7().s[53]++;
      throw new Error('Cannot respond to message without replyTo or correlationId');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[9][1]++;
    }
    cov_2g7kl6bnf7().s[54]++;
    await this.publish(originalMessage.replyTo, responsePayload, {
      correlationId: originalMessage.correlationId,
      priority: MessagePriority.HIGH
    });
  }
  /**
   * Get subscription statistics
   *
   * @param subscriptionId Subscription identifier
   * @returns Subscription statistics or undefined
   */
  getSubscriptionStats(subscriptionId) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[10]++;
    const subscription =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[55]++, this.subscriptions.get(subscriptionId));
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[56]++;
    return subscription?.stats;
  }
  /**
   * Get all subscriptions for a component
   *
   * @param componentId Component identifier
   * @returns Array of subscriptions
   */
  getComponentSubscriptions(componentId) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[11]++;
    cov_2g7kl6bnf7().s[57]++;
    return Array.from(this.subscriptions.values()).filter(sub => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[12]++;
      cov_2g7kl6bnf7().s[58]++;
      return sub.componentId === componentId;
    });
  }
  /**
   * Get bus statistics
   *
   * @returns Bus statistics
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[13]++;
    let totalMessagesProcessed =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[59]++, 0);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[60]++;
    for (const subscription of this.subscriptions.values()) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[61]++;
      totalMessagesProcessed += subscription.stats.messagesProcessed;
    }
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[62]++;
    return {
      totalSubscriptions: this.subscriptions.size,
      queueSize: this.messageQueue.length,
      processingQueueSize: this.processingQueue.size,
      messageHistorySize: this.messageHistory.size,
      deadLetterQueueSize: this.deadLetterQueue.length,
      totalMessagesProcessed
    };
  }
  /**
   * Clear expired messages
   */
  clearExpiredMessages() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[14]++;
    const now =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[63]++, new Date());
    // Clear expired messages from queue
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[64]++;
    this.messageQueue = this.messageQueue.filter(message => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[15]++;
      cov_2g7kl6bnf7().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[12][0]++, message.expiresAt) &&
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[12][1]++, message.expiresAt < now)) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[11][0]++;
        cov_2g7kl6bnf7().s[66]++;
        logger_1.logger.debug(`🗑️ Removing expired message: ${message.id}`);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[67]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[11][1]++;
      }
      cov_2g7kl6bnf7().s[68]++;
      return true;
    });
    // Clear old messages from history
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[69]++;
    if (this.config.enablePersistence) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[13][0]++;
      const retentionTime =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[70]++, this.config.messageRetention);
      const cutoffTime =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[71]++, new Date(now.getTime() - retentionTime));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[72]++;
      for (const [messageId, message] of this.messageHistory) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[73]++;
        if (message.timestamp < cutoffTime) {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[14][0]++;
          cov_2g7kl6bnf7().s[74]++;
          this.messageHistory.delete(messageId);
        } else
        /* istanbul ignore next */
        {
          cov_2g7kl6bnf7().b[14][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[13][1]++;
    }
  }
  /**
   * Shutdown the communication bus
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[16]++;
    cov_2g7kl6bnf7().s[75]++;
    logger_1.logger.info('🛑 Shutting down communication bus...');
    // Stop processing
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[76]++;
    this.isProcessing = false;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[77]++;
    if (this.processingInterval) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[15][0]++;
      cov_2g7kl6bnf7().s[78]++;
      clearInterval(this.processingInterval);
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[15][1]++;
    }
    // Process remaining high-priority messages
    const highPriorityMessages =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[79]++, this.messageQueue.filter(msg => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[17]++;
      cov_2g7kl6bnf7().s[80]++;
      return msg.priority >= MessagePriority.HIGH;
    }));
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[81]++;
    for (const message of highPriorityMessages) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[82]++;
      try {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[83]++;
        await this.processMessage(message);
      } catch (error) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[84]++;
        logger_1.logger.error(`❌ Failed to process message during shutdown: ${message.id}`, error);
      }
    }
    // Clear all data
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[85]++;
    this.subscriptions.clear();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[86]++;
    this.messageQueue = [];
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[87]++;
    this.processingQueue.clear();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[88]++;
    this.messageHistory.clear();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[89]++;
    this.deadLetterQueue = [];
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[90]++;
    logger_1.logger.info('✅ Communication bus shutdown completed');
  }
  /**
   * Start message processing loop
   */
  startMessageProcessing() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[18]++;
    cov_2g7kl6bnf7().s[91]++;
    this.isProcessing = true;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[92]++;
    this.processingInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[19]++;
      cov_2g7kl6bnf7().s[93]++;
      if (this.messageQueue.length > 0) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[16][0]++;
        cov_2g7kl6bnf7().s[94]++;
        await this.processNextMessage();
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[16][1]++;
      }
      // Clean up expired messages periodically
      cov_2g7kl6bnf7().s[95]++;
      if (Math.random() < 0.1) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[17][0]++;
        cov_2g7kl6bnf7().s[96]++;
        // 10% chance each interval
        this.clearExpiredMessages();
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[17][1]++;
      }
    }, 100); // Process every 100ms
  }
  /**
   * Process next message in queue
   */
  async processNextMessage() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[20]++;
    cov_2g7kl6bnf7().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[19][0]++, !this.isProcessing) ||
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[19][1]++, this.messageQueue.length === 0)) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[18][0]++;
      cov_2g7kl6bnf7().s[98]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[18][1]++;
    }
    // Sort by priority and timestamp
    cov_2g7kl6bnf7().s[99]++;
    this.messageQueue.sort((a, b) => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[21]++;
      cov_2g7kl6bnf7().s[100]++;
      if (a.priority !== b.priority) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[20][0]++;
        cov_2g7kl6bnf7().s[101]++;
        return b.priority - a.priority; // Higher priority first
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[20][1]++;
      }
      cov_2g7kl6bnf7().s[102]++;
      return a.timestamp.getTime() - b.timestamp.getTime(); // Older first
    });
    const message =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[103]++, this.messageQueue.shift());
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[104]++;
    if (message) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[21][0]++;
      cov_2g7kl6bnf7().s[105]++;
      await this.processMessage(message);
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[21][1]++;
    }
  }
  /**
   * Process a specific message
   *
   * @param message Message to process
   * @returns Promise<DeliveryResult>
   */
  async processMessage(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[22]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[106]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[107]++, {
      success: true,
      deliveredAt: new Date(),
      handlerCount: 0,
      errors: [],
      processingTime: 0
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[108]++;
    try {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[109]++;
      // Check if message is expired
      if (
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[23][0]++, message.expiresAt) &&
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[23][1]++, message.expiresAt < new Date())) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[22][0]++;
        cov_2g7kl6bnf7().s[110]++;
        logger_1.logger.debug(`⏰ Message expired: ${message.id}`);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[111]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[22][1]++;
      }
      // Mark as processing
      cov_2g7kl6bnf7().s[112]++;
      this.processingQueue.add(message.id);
      // Find matching subscriptions
      const matchingSubscriptions =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[113]++, this.findMatchingSubscriptions(message));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[114]++;
      if (matchingSubscriptions.length === 0) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[24][0]++;
        cov_2g7kl6bnf7().s[115]++;
        logger_1.logger.debug(`📭 No handlers for message: ${message.type} (${message.id})`);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[116]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[24][1]++;
      }
      // Process with each matching handler
      const handlerPromises =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[117]++, matchingSubscriptions.map(subscription => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[23]++;
        cov_2g7kl6bnf7().s[118]++;
        return this.processWithHandler(message, subscription);
      }));
      const handlerResults =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[119]++, await Promise.allSettled(handlerPromises));
      // Collect results
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[120]++;
      for (const handlerResult of handlerResults) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[121]++;
        if (handlerResult.status === 'fulfilled') {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[25][0]++;
          cov_2g7kl6bnf7().s[122]++;
          result.handlerCount++;
        } else {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[25][1]++;
          cov_2g7kl6bnf7().s[123]++;
          result.success = false;
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[124]++;
          result.errors.push(
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[26][0]++, handlerResult.reason?.message) ||
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[26][1]++, 'Unknown error'));
        }
      }
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[125]++;
      result.processingTime = Date.now() - startTime;
      // Log result
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[126]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[27][0]++;
        cov_2g7kl6bnf7().s[127]++;
        logger_1.logger.debug(`✅ Message processed: ${message.type} (${message.id}) - ${result.handlerCount} handlers`);
      } else {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[27][1]++;
        cov_2g7kl6bnf7().s[128]++;
        logger_1.logger.error(`❌ Message processing failed: ${message.type} (${message.id}) - errors: ${result.errors.join(', ')}`);
      }
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[129]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[130]++;
      result.success = false;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[131]++;
      result.errors.push(error instanceof Error ?
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[28][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[28][1]++, 'Unknown error'));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[132]++;
      result.processingTime = Date.now() - startTime;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[133]++;
      logger_1.logger.error(`❌ Message processing error: ${message.id}`, error);
      // Move to dead letter queue if enabled
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[134]++;
      if (this.config.enableDeadLetterQueue) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[29][0]++;
        cov_2g7kl6bnf7().s[135]++;
        this.deadLetterQueue.push(message);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[29][1]++;
      }
      cov_2g7kl6bnf7().s[136]++;
      return result;
    } finally {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[137]++;
      // Remove from processing queue
      this.processingQueue.delete(message.id);
    }
  }
  /**
   * Process message with specific handler
   *
   * @param message Message to process
   * @param subscription Subscription with handler
   * @returns Promise<any>
   */
  async processWithHandler(message, subscription) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[24]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[138]++, Date.now());
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[139]++;
    try {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[140]++;
      // Update stats
      subscription.stats.messagesReceived++;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[141]++;
      subscription.stats.lastMessageAt = new Date();
      // Check if handler can handle this message
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[142]++;
      if (
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[31][0]++, subscription.handler.canHandle) &&
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[31][1]++, !subscription.handler.canHandle(message))) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[30][0]++;
        cov_2g7kl6bnf7().s[143]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[30][1]++;
      }
      // Process with timeout
      const handlerPromise =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[144]++, subscription.handler.handle(message));
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[145]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[25]++;
        cov_2g7kl6bnf7().s[146]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().f[26]++;
          cov_2g7kl6bnf7().s[147]++;
          reject(new Error(`Handler timeout: ${subscription.handler.id}`));
        }, subscription.options.timeout);
      }));
      const result =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[148]++, await Promise.race([handlerPromise, timeoutPromise]));
      // Update stats
      const processingTime =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[149]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[150]++;
      subscription.stats.messagesProcessed++;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[151]++;
      subscription.stats.averageProcessingTime = (subscription.stats.averageProcessingTime * (subscription.stats.messagesProcessed - 1) + processingTime) / subscription.stats.messagesProcessed;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[152]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[153]++;
      // Update error stats
      subscription.stats.messagesFailed++;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[154]++;
      subscription.stats.lastError = error instanceof Error ?
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[32][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[32][1]++, 'Unknown error');
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[155]++;
      logger_1.logger.error(`❌ Handler error: ${subscription.handler.id}`, error);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[156]++;
      throw error;
    }
  }
  /**
   * Find subscriptions matching a message
   *
   * @param message Message to match
   * @returns Array of matching subscriptions
   */
  findMatchingSubscriptions(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[27]++;
    const matching =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[157]++, []);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[158]++;
    for (const subscription of this.subscriptions.values()) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[159]++;
      if (this.messageMatches(message, subscription.pattern)) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[33][0]++;
        cov_2g7kl6bnf7().s[160]++;
        // Check target filtering
        if (message.target) {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[34][0]++;
          const targets =
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().s[161]++, Array.isArray(message.target) ?
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[35][0]++, message.target) :
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[35][1]++, [message.target]));
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[162]++;
          if (!targets.includes(subscription.componentId)) {
            /* istanbul ignore next */
            cov_2g7kl6bnf7().b[36][0]++;
            cov_2g7kl6bnf7().s[163]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_2g7kl6bnf7().b[36][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2g7kl6bnf7().b[34][1]++;
        }
        cov_2g7kl6bnf7().s[164]++;
        matching.push(subscription);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[33][1]++;
      }
    }
    // Sort by handler priority
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[165]++;
    matching.sort((a, b) => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[28]++;
      cov_2g7kl6bnf7().s[166]++;
      return b.handler.priority - a.handler.priority;
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[167]++;
    return matching;
  }
  /**
   * Check if message matches pattern
   *
   * @param message Message to check
   * @param pattern Pattern to match against
   * @returns True if matches
   */
  messageMatches(message, pattern) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[29]++;
    cov_2g7kl6bnf7().s[168]++;
    if (typeof pattern === 'string') {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[37][0]++;
      // Simple string matching with wildcards
      const regexPattern =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[169]++, pattern.replace(/\*/g, '.*').replace(/\?/g, '.'));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[170]++;
      return new RegExp(`^${regexPattern}$`).test(message.type);
    } else {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[37][1]++;
      cov_2g7kl6bnf7().s[171]++;
      return pattern.test(message.type);
    }
  }
  /**
   * Validate message format
   *
   * @param message Message to validate
   */
  validateMessage(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[30]++;
    cov_2g7kl6bnf7().s[172]++;
    if (!message.id) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[38][0]++;
      cov_2g7kl6bnf7().s[173]++;
      throw new Error('Message ID is required');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[38][1]++;
    }
    cov_2g7kl6bnf7().s[174]++;
    if (!message.type) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[39][0]++;
      cov_2g7kl6bnf7().s[175]++;
      throw new Error('Message type is required');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[39][1]++;
    }
    cov_2g7kl6bnf7().s[176]++;
    if (!message.source) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[40][0]++;
      cov_2g7kl6bnf7().s[177]++;
      throw new Error('Message source is required');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[40][1]++;
    }
    cov_2g7kl6bnf7().s[178]++;
    if (
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[42][0]++, message.expiresAt) &&
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[42][1]++, message.expiresAt <= new Date())) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[41][0]++;
      cov_2g7kl6bnf7().s[179]++;
      throw new Error('Message expiration time must be in the future');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[41][1]++;
    }
  }
  /**
   * Add message to queue
   *
   * @param message Message to add
   */
  addToQueue(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[31]++;
    cov_2g7kl6bnf7().s[180]++;
    // Check queue size limit
    if (this.messageQueue.length >= this.config.maxQueueSize) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[43][0]++;
      // Remove oldest low-priority message
      const lowPriorityIndex =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[181]++, this.messageQueue.findIndex(msg => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[32]++;
        cov_2g7kl6bnf7().s[182]++;
        return msg.priority <= MessagePriority.NORMAL;
      }));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[183]++;
      if (lowPriorityIndex >= 0) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[44][0]++;
        const removed =
        /* istanbul ignore next */
        (cov_2g7kl6bnf7().s[184]++, this.messageQueue.splice(lowPriorityIndex, 1)[0]);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[185]++;
        logger_1.logger.warn(`⚠️ Queue full, removed message: ${removed.id}`);
      } else {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[44][1]++;
        cov_2g7kl6bnf7().s[186]++;
        throw new Error('Message queue is full and no low-priority messages to remove');
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[43][1]++;
    }
    cov_2g7kl6bnf7().s[187]++;
    this.messageQueue.push(message);
  }
  /**
   * Generate unique message ID
   *
   * @returns Unique message ID
   */
  generateMessageId() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[33]++;
    cov_2g7kl6bnf7().s[188]++;
    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Generate unique subscription ID
   *
   * @returns Unique subscription ID
   */
  generateSubscriptionId() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[34]++;
    cov_2g7kl6bnf7().s[189]++;
    return `sub_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Generate unique correlation ID
   *
   * @returns Unique correlation ID
   */
  generateCorrelationId() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[35]++;
    cov_2g7kl6bnf7().s[190]++;
    return `corr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
}
/* istanbul ignore next */
cov_2g7kl6bnf7().s[191]++;
exports.CommunicationBus = CommunicationBus;
/**
 * Default communication bus configuration
 */
/* istanbul ignore next */
cov_2g7kl6bnf7().s[192]++;
exports.defaultCommunicationBusConfig = {
  maxQueueSize: 10000,
  messageRetention: 24 * 60 * 60 * 1000,
  // 24 hours
  enablePersistence: true,
  enableEncryption: false,
  enableCompression: false,
  defaultTimeout: 30000,
  maxConcurrentHandlers: 100,
  enableDeadLetterQueue: true
};
/**
 * Global communication bus instance
 */
/* istanbul ignore next */
cov_2g7kl6bnf7().s[193]++;
exports.communicationBus = new CommunicationBus(exports.defaultCommunicationBusConfig);
// =============================================================================
// COMMUNICATION BUS NOTES
// =============================================================================
// 1. Event-driven inter-component communication with message queuing
// 2. Priority-based message processing with timeout handling
// 3. Request/response pattern support with correlation IDs
// 4. Subscription-based message routing with pattern matching
// 5. Message persistence and dead letter queue for reliability
// 6. Comprehensive statistics and monitoring capabilities
// 7. Graceful shutdown with high-priority message processing
// 8. Configurable message retention and queue size limits
// =============================================================================