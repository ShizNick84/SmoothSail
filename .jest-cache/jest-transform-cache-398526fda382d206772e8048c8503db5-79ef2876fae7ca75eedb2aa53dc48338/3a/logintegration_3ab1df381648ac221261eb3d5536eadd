39b8a87c99b682baf12bc69c6f673383
"use strict";

/**
 * =============================================================================
 * LOGGING INTEGRATION FOR INTEL NUC DEPLOYMENT
 * =============================================================================
 *
 * This module provides integration utilities to enhance existing logging
 * throughout the application with rich formatting and contextual information.
 *
 * Features:
 * - Automatic log enrichment with system context
 * - Performance monitoring integration
 * - Trading operation logging
 * - System health monitoring
 * - Error tracking and alerting
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2e42bakg0h() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\log-integration.ts";
  var hash = "580d2e9e3c7e1934afc1a9710cc6c716658d5170";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\log-integration.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "2": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "3": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "4": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "5": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "6": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "7": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "8": {
        start: {
          line: 36,
          column: 18
        },
        end: {
          line: 36,
          column: 27
        }
      },
      "9": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 74
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "11": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "12": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 36
        }
      },
      "13": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "14": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 54
        }
      },
      "15": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 51
        }
      },
      "16": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "17": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 48
        }
      },
      "18": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "19": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 42
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "21": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "22": {
        start: {
          line: 83,
          column: 31
        },
        end: {
          line: 83,
          column: 49
        }
      },
      "23": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 84,
          column: 60
        }
      },
      "24": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "25": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 61
        }
      },
      "26": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 62
        }
      },
      "27": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 88,
          column: 52
        }
      },
      "28": {
        start: {
          line: 89,
          column: 36
        },
        end: {
          line: 89,
          column: 75
        }
      },
      "29": {
        start: {
          line: 90,
          column: 38
        },
        end: {
          line: 90,
          column: 79
        }
      },
      "30": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 53
        }
      },
      "31": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "32": {
        start: {
          line: 100,
          column: 33
        },
        end: {
          line: 100,
          column: 57
        }
      },
      "33": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 101,
          column: 78
        }
      },
      "34": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 52
        }
      },
      "35": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 103,
          column: 50
        }
      },
      "36": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 104,
          column: 49
        }
      },
      "37": {
        start: {
          line: 105,
          column: 31
        },
        end: {
          line: 105,
          column: 68
        }
      },
      "38": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 47
        }
      },
      "39": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 56
        }
      },
      "40": {
        start: {
          line: 116,
          column: 22
        },
        end: {
          line: 116,
          column: 75
        }
      },
      "41": {
        start: {
          line: 117,
          column: 22
        },
        end: {
          line: 117,
          column: 65
        }
      },
      "42": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "43": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "44": {
        start: {
          line: 120,
          column: 22
        },
        end: {
          line: 120,
          column: 42
        }
      },
      "45": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "46": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 42
        }
      },
      "47": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "48": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 57
        }
      },
      "49": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 139
        }
      },
      "50": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "51": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "52": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "53": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 175
        }
      },
      "54": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 73
        }
      },
      "55": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 80
        }
      },
      "56": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 65
        }
      },
      "57": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "58": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 82
        }
      },
      "59": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 21
        }
      },
      "60": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 171,
          column: 67
        }
      },
      "61": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 51
        }
      },
      "62": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 175,
          column: 97
        }
      },
      "63": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 142
        }
      },
      "64": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 24
        }
      },
      "65": {
        start: {
          line: 183,
          column: 75
        },
        end: {
          line: 183,
          column: 82
        }
      },
      "66": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "67": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 189,
          column: 114
        }
      },
      "68": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 31
        }
      },
      "69": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 22
        }
      },
      "70": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 58
        }
      },
      "71": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 32
        }
      },
      "72": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "73": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 22
        }
      },
      "74": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 60
        }
      },
      "75": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 31
        }
      },
      "76": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 22
        }
      },
      "77": {
        start: {
          line: 202,
          column: 22
        },
        end: {
          line: 202,
          column: 68
        }
      },
      "78": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 204,
          column: 44
        }
      },
      "79": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 44
        }
      },
      "80": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 206,
          column: 50
        }
      },
      "81": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 50
        }
      },
      "82": {
        start: {
          line: 207,
          column: 29
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "83": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 70
        }
      },
      "84": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 62
        }
      },
      "85": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "86": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "87": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "88": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "89": {
        start: {
          line: 244,
          column: 29
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "90": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 168
        }
      },
      "91": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "92": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "93": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      },
      "94": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "95": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 71
        }
      },
      "96": {
        start: {
          line: 279,
          column: 29
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "97": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "98": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 103
        }
      },
      "99": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "100": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 74
        }
      },
      "101": {
        start: {
          line: 301,
          column: 28
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "102": {
        start: {
          line: 306,
          column: 22
        },
        end: {
          line: 306,
          column: 40
        }
      },
      "103": {
        start: {
          line: 307,
          column: 24
        },
        end: {
          line: 307,
          column: 60
        }
      },
      "104": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 313,
          column: 11
        }
      },
      "105": {
        start: {
          line: 319,
          column: 24
        },
        end: {
          line: 319,
          column: 60
        }
      },
      "106": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 53
        }
      },
      "107": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 52
        }
      },
      "108": {
        start: {
          line: 332,
          column: 30
        },
        end: {
          line: 332,
          column: 59
        }
      },
      "109": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 339,
          column: 10
        }
      },
      "110": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 35
        }
      },
      "111": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 33
        }
      },
      "112": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 39
        }
      },
      "113": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 27
        }
      },
      "114": {
        start: {
          line: 356,
          column: 0
        },
        end: {
          line: 356,
          column: 40
        }
      },
      "115": {
        start: {
          line: 358,
          column: 0
        },
        end: {
          line: 358,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 57
          }
        },
        loc: {
          start: {
            line: 21,
            column: 71
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 49
          },
          end: {
            line: 46,
            column: 50
          }
        },
        loc: {
          start: {
            line: 46,
            column: 55
          },
          end: {
            line: 48,
            column: 9
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 82,
            column: 28
          }
        },
        loc: {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 23
          },
          end: {
            line: 85,
            column: 24
          }
        },
        loc: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 92,
            column: 13
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 25
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 23
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 127
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 29
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 159
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 48
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 165
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 182
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 56
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 224
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 40
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 243
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 63
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 254
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 60
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 278
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 55
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 300
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 318,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        loc: {
          start: {
            line: 318,
            column: 35
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 318
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 25
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 325
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 33
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 331
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 19
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 344
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 16
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 352
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 23,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 22,
            column: 40
          }
        }, {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 22,
            column: 61
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 15
          }
        }, {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 33
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 119,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 119,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 35
          }
        }, {
          start: {
            line: 122,
            column: 39
          },
          end: {
            line: 122,
            column: 40
          }
        }],
        line: 122
      },
      "6": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "7": {
        loc: {
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 175,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 39
          },
          end: {
            line: 174,
            column: 71
          }
        }, {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 97
          }
        }],
        line: 174
      },
      "8": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 175,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 30
          },
          end: {
            line: 175,
            column: 62
          }
        }, {
          start: {
            line: 175,
            column: 65
          },
          end: {
            line: 175,
            column: 97
          }
        }],
        line: 175
      },
      "9": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 191,
            column: 22
          }
        }, {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 196,
            column: 22
          }
        }, {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 200,
            column: 22
          }
        }],
        line: 186
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 189,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 46
          },
          end: {
            line: 188,
            column: 77
          }
        }, {
          start: {
            line: 189,
            column: 20
          },
          end: {
            line: 189,
            column: 113
          }
        }],
        line: 188
      },
      "11": {
        loc: {
          start: {
            line: 189,
            column: 20
          },
          end: {
            line: 189,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 43
          },
          end: {
            line: 189,
            column: 75
          }
        }, {
          start: {
            line: 189,
            column: 78
          },
          end: {
            line: 189,
            column: 113
          }
        }],
        line: 189
      },
      "12": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 204,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 204,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "13": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 206,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 206,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "14": {
        loc: {
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 234,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 27
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 234,
            column: 25
          }
        }],
        line: 231
      },
      "15": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "16": {
        loc: {
          start: {
            line: 266,
            column: 19
          },
          end: {
            line: 269,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 27
          },
          end: {
            line: 269,
            column: 13
          }
        }, {
          start: {
            line: 269,
            column: 16
          },
          end: {
            line: 269,
            column: 25
          }
        }],
        line: 266
      },
      "17": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "18": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "19": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 31
          }
        }, {
          start: {
            line: 293,
            column: 35
          },
          end: {
            line: 293,
            column: 58
          }
        }],
        line: 293
      },
      "20": {
        loc: {
          start: {
            line: 319,
            column: 24
          },
          end: {
            line: 319,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 24
          },
          end: {
            line: 319,
            column: 55
          }
        }, {
          start: {
            line: 319,
            column: 59
          },
          end: {
            line: 319,
            column: 60
          }
        }],
        line: 319
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\log-integration.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\log-integration.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * LOGGING INTEGRATION FOR INTEL NUC DEPLOYMENT\r\n * =============================================================================\r\n * \r\n * This module provides integration utilities to enhance existing logging\r\n * throughout the application with rich formatting and contextual information.\r\n * \r\n * Features:\r\n * - Automatic log enrichment with system context\r\n * - Performance monitoring integration\r\n * - Trading operation logging\r\n * - System health monitoring\r\n * - Error tracking and alerting\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport { EnhancedLogger, LogEmojis } from './enhanced-logger';\r\nimport { LogMetadata } from './logger';\r\nimport os from 'os';\r\nimport { performance } from 'perf_hooks';\r\n\r\n/**\r\n * System performance metrics interface\r\n */\r\ninterface SystemMetrics {\r\n  cpuUsage: number;\r\n  memoryUsage: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  diskUsage: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  networkLatency?: number;\r\n  uptime: number;\r\n}\r\n\r\n/**\r\n * Trading operation context interface\r\n */\r\ninterface TradingContext {\r\n  symbol: string;\r\n  operation: 'buy' | 'sell' | 'analyze' | 'monitor';\r\n  amount?: number;\r\n  price?: number;\r\n  strategy?: string;\r\n  confidence?: number;\r\n  marketConditions?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Logging integration service for Intel NUC deployment\r\n */\r\nexport class LogIntegration {\r\n  private logger: EnhancedLogger;\r\n  private performanceTimers: Map<string, number> = new Map();\r\n  private systemMetricsInterval?: NodeJS.Timeout;\r\n  private errorCounts: Map<string, number> = new Map();\r\n\r\n  constructor(componentName?: string) {\r\n    this.logger = new EnhancedLogger(componentName);\r\n    this.startSystemMonitoring();\r\n  }\r\n\r\n  /**\r\n   * Start system performance monitoring\r\n   */\r\n  private startSystemMonitoring(): void {\r\n    // Monitor system metrics every 30 seconds\r\n    this.systemMetricsInterval = setInterval(() => {\r\n      this.logSystemMetrics();\r\n    }, 30000);\r\n  }\r\n\r\n  /**\r\n   * Stop system monitoring\r\n   */\r\n  public stopSystemMonitoring(): void {\r\n    if (this.systemMetricsInterval) {\r\n      clearInterval(this.systemMetricsInterval);\r\n      this.systemMetricsInterval = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current system metrics\r\n   */\r\n  private async getSystemMetrics(): Promise<SystemMetrics> {\r\n    const memUsage = process.memoryUsage();\r\n    const totalMem = os.totalmem();\r\n    const freeMem = os.freemem();\r\n    const usedMem = totalMem - freeMem;\r\n\r\n    return {\r\n      cpuUsage: await this.getCPUUsage(),\r\n      memoryUsage: {\r\n        used: usedMem,\r\n        total: totalMem,\r\n        percentage: (usedMem / totalMem) * 100\r\n      },\r\n      diskUsage: await this.getDiskUsage(),\r\n      uptime: os.uptime()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get CPU usage percentage\r\n   */\r\n  private async getCPUUsage(): Promise<number> {\r\n    return new Promise((resolve) => {\r\n      const startUsage = process.cpuUsage();\r\n      const startTime = performance.now();\r\n\r\n      setTimeout(() => {\r\n        const endUsage = process.cpuUsage(startUsage);\r\n        const endTime = performance.now();\r\n        const timeDiff = endTime - startTime;\r\n\r\n        const userPercent = (endUsage.user / 1000) / timeDiff * 100;\r\n        const systemPercent = (endUsage.system / 1000) / timeDiff * 100;\r\n        \r\n        resolve(userPercent + systemPercent);\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get disk usage information\r\n   */\r\n  private async getDiskUsage(): Promise<{ used: number; total: number; percentage: number }> {\r\n    try {\r\n      const { execSync } = require('child_process');\r\n      const output = execSync('df -h / | tail -1', { encoding: 'utf8' });\r\n      const parts = output.trim().split(/\\s+/);\r\n      \r\n      const total = this.parseSize(parts[1]);\r\n      const used = this.parseSize(parts[2]);\r\n      const percentage = parseFloat(parts[4].replace('%', ''));\r\n\r\n      return { used, total, percentage };\r\n    } catch (error) {\r\n      return { used: 0, total: 0, percentage: 0 };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse size string to bytes\r\n   */\r\n  private parseSize(sizeStr: string): number {\r\n    const units = { K: 1024, M: 1024**2, G: 1024**3, T: 1024**4 };\r\n    const match = sizeStr.match(/^(\\d+(?:\\.\\d+)?)([KMGT]?)$/);\r\n    \r\n    if (!match) return 0;\r\n    \r\n    const value = parseFloat(match[1]);\r\n    const unit = match[2] as keyof typeof units;\r\n    \r\n    return value * (units[unit] || 1);\r\n  }\r\n\r\n  /**\r\n   * Log system metrics with visual indicators\r\n   */\r\n  private async logSystemMetrics(): Promise<void> {\r\n    try {\r\n      const metrics = await this.getSystemMetrics();\r\n      \r\n      // Log CPU usage\r\n      this.logger.logPerformance(\r\n        'CPU Usage',\r\n        metrics.cpuUsage,\r\n        '%',\r\n        { warning: 70, critical: 90 },\r\n        { component: 'system_monitor' }\r\n      );\r\n\r\n      // Log memory usage\r\n      this.logger.logPerformance(\r\n        'Memory Usage',\r\n        metrics.memoryUsage.percentage,\r\n        '%',\r\n        { warning: 80, critical: 95 },\r\n        { \r\n          component: 'system_monitor',\r\n          details: {\r\n            used: `${(metrics.memoryUsage.used / 1024**3).toFixed(2)}GB`,\r\n            total: `${(metrics.memoryUsage.total / 1024**3).toFixed(2)}GB`\r\n          }\r\n        }\r\n      );\r\n\r\n      // Log disk usage\r\n      this.logger.logPerformance(\r\n        'Disk Usage',\r\n        metrics.diskUsage.percentage,\r\n        '%',\r\n        { warning: 85, critical: 95 },\r\n        { \r\n          component: 'system_monitor',\r\n          details: {\r\n            used: `${(metrics.diskUsage.used / 1024**3).toFixed(2)}GB`,\r\n            total: `${(metrics.diskUsage.total / 1024**3).toFixed(2)}GB`\r\n          }\r\n        }\r\n      );\r\n\r\n      // Log system uptime\r\n      const uptimeHours = Math.floor(metrics.uptime / 3600);\r\n      this.logger.logWithEmoji(\r\n        'info',\r\n        LogEmojis.INFO,\r\n        `System uptime: ${uptimeHours} hours`,\r\n        { component: 'system_monitor', uptime: metrics.uptime }\r\n      );\r\n\r\n    } catch (error) {\r\n      this.logger.error('Failed to collect system metrics', error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start performance timing for an operation\r\n   */\r\n  public startTiming(operationId: string): void {\r\n    this.performanceTimers.set(operationId, performance.now());\r\n  }\r\n\r\n  /**\r\n   * End performance timing and log the result\r\n   */\r\n  public endTiming(\r\n    operationId: string,\r\n    operationName: string,\r\n    meta?: LogMetadata\r\n  ): number {\r\n    const startTime = this.performanceTimers.get(operationId);\r\n    if (!startTime) {\r\n      this.logger.warn(`No start time found for operation: ${operationId}`);\r\n      return 0;\r\n    }\r\n\r\n    const duration = performance.now() - startTime;\r\n    this.performanceTimers.delete(operationId);\r\n\r\n    // Log the timing with appropriate emoji based on duration\r\n    const emoji = duration < 100 ? LogEmojis.FAST : \r\n                 duration < 1000 ? LogEmojis.INFO : LogEmojis.SLOW;\r\n\r\n    this.logger.logWithEmoji(\r\n      'info',\r\n      emoji,\r\n      `${operationName} completed in ${duration.toFixed(2)}ms`,\r\n      { ...meta, duration, operationId }\r\n    );\r\n\r\n    return duration;\r\n  }\r\n\r\n  /**\r\n   * Log trading operation with rich context\r\n   */\r\n  public logTradingOperation(\r\n    context: TradingContext,\r\n    result: 'success' | 'failed' | 'skipped',\r\n    details?: Record<string, any>\r\n  ): void {\r\n    const { symbol, operation, amount, price, strategy, confidence } = context;\r\n    \r\n    let emoji: string;\r\n    let level: 'info' | 'warn' | 'error';\r\n\r\n    switch (result) {\r\n      case 'success':\r\n        emoji = operation === 'buy' ? LogEmojis.BUY : \r\n               operation === 'sell' ? LogEmojis.SELL : LogEmojis.SUCCESS;\r\n        level = 'info';\r\n        break;\r\n      case 'failed':\r\n        emoji = LogEmojis.ERROR;\r\n        level = 'error';\r\n        this.incrementErrorCount(`trading_${operation}_failed`);\r\n        break;\r\n      case 'skipped':\r\n        emoji = LogEmojis.WARNING;\r\n        level = 'warn';\r\n        break;\r\n    }\r\n\r\n    let message = `Trading ${operation} ${result} for ${symbol}`;\r\n    if (amount) message += ` (${amount} units)`;\r\n    if (price) message += ` at $${price.toFixed(4)}`;\r\n\r\n    const enrichedMeta: LogMetadata = {\r\n      symbol,\r\n      operation,\r\n      result,\r\n      amount,\r\n      price,\r\n      strategy,\r\n      confidence,\r\n      details,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    this.logger.logWithEmoji(level, emoji, message, enrichedMeta);\r\n    this.logger.trading(operation, message, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Log API connectivity status\r\n   */\r\n  public logAPIConnectivity(\r\n    apiName: string,\r\n    status: 'connected' | 'disconnected' | 'error',\r\n    latency?: number,\r\n    error?: Error\r\n  ): void {\r\n    const statusMap = {\r\n      connected: 'CONNECTED',\r\n      disconnected: 'DISCONNECTED',\r\n      error: 'TIMEOUT'\r\n    } as const;\r\n\r\n    this.logger.logConnectivity(\r\n      apiName,\r\n      statusMap[status],\r\n      latency,\r\n      { \r\n        error: error ? {\r\n          name: error.name,\r\n          message: error.message\r\n        } : undefined\r\n      }\r\n    );\r\n\r\n    if (status === 'error') {\r\n      this.incrementErrorCount(`api_${apiName}_error`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log market analysis results\r\n   */\r\n  public logMarketAnalysis(\r\n    symbol: string,\r\n    analysis: {\r\n      sentiment: 'bullish' | 'bearish' | 'neutral';\r\n      confidence: number;\r\n      indicators: Record<string, any>;\r\n      recommendation: string;\r\n    }\r\n  ): void {\r\n    const sentimentMap = {\r\n      bullish: 'BULLISH',\r\n      bearish: 'BEARISH',\r\n      neutral: 'NEUTRAL'\r\n    } as const;\r\n\r\n    this.logger.logMarketSentiment(\r\n      symbol,\r\n      sentimentMap[analysis.sentiment],\r\n      analysis.confidence,\r\n      analysis.indicators,\r\n      { recommendation: analysis.recommendation }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Log notification delivery\r\n   */\r\n  public logNotificationDelivery(\r\n    channel: 'telegram' | 'email' | 'webhook',\r\n    status: 'sent' | 'failed' | 'queued',\r\n    recipient?: string,\r\n    error?: Error\r\n  ): void {\r\n    const channelMap = {\r\n      telegram: 'TELEGRAM',\r\n      email: 'EMAIL',\r\n      webhook: 'WEBHOOK'\r\n    } as const;\r\n\r\n    const statusMap = {\r\n      sent: 'SENT',\r\n      failed: 'FAILED',\r\n      queued: 'QUEUED'\r\n    } as const;\r\n\r\n    this.logger.logNotification(\r\n      channelMap[channel],\r\n      statusMap[status],\r\n      recipient,\r\n      {\r\n        error: error ? {\r\n          name: error.name,\r\n          message: error.message\r\n        } : undefined\r\n      }\r\n    );\r\n\r\n    if (status === 'failed') {\r\n      this.incrementErrorCount(`notification_${channel}_failed`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log security event\r\n   */\r\n  public logSecurityEvent(\r\n    eventType: 'login' | 'logout' | 'api_access' | 'unauthorized' | 'suspicious',\r\n    severity: 'low' | 'medium' | 'high' | 'critical',\r\n    details: string,\r\n    context?: Record<string, any>\r\n  ): void {\r\n    const eventTypeMap = {\r\n      login: 'LOGIN',\r\n      logout: 'LOGOUT',\r\n      api_access: 'API_ACCESS',\r\n      unauthorized: 'UNAUTHORIZED',\r\n      suspicious: 'SUSPICIOUS'\r\n    } as const;\r\n\r\n    const severityMap = {\r\n      low: 'LOW',\r\n      medium: 'MEDIUM',\r\n      high: 'HIGH',\r\n      critical: 'CRITICAL'\r\n    } as const;\r\n\r\n    this.logger.logSecurityEvent(\r\n      eventTypeMap[eventType],\r\n      severityMap[severity],\r\n      details,\r\n      context\r\n    );\r\n\r\n    if (severity === 'high' || severity === 'critical') {\r\n      this.incrementErrorCount(`security_${eventType}_${severity}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log application startup/shutdown\r\n   */\r\n  public logApplicationLifecycle(\r\n    event: 'startup' | 'shutdown' | 'restart',\r\n    component: string,\r\n    details?: Record<string, any>\r\n  ): void {\r\n    const eventEmojis = {\r\n      startup: LogEmojis.START,\r\n      shutdown: LogEmojis.STOP,\r\n      restart: LogEmojis.RESTART\r\n    };\r\n\r\n    const emoji = eventEmojis[event];\r\n    const message = `Application ${event}: ${component}`;\r\n\r\n    this.logger.logWithEmoji('info', emoji, message, {\r\n      component,\r\n      event,\r\n      details,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Increment error counter\r\n   */\r\n  private incrementErrorCount(errorType: string): void {\r\n    const current = this.errorCounts.get(errorType) || 0;\r\n    this.errorCounts.set(errorType, current + 1);\r\n  }\r\n\r\n  /**\r\n   * Get error statistics\r\n   */\r\n  public getErrorStatistics(): Record<string, number> {\r\n    return Object.fromEntries(this.errorCounts);\r\n  }\r\n\r\n  /**\r\n   * Generate comprehensive system report\r\n   */\r\n  public async generateSystemReport(): Promise<{\r\n    timestamp: string;\r\n    systemMetrics: SystemMetrics;\r\n    performanceMetrics: Record<string, number>;\r\n    operationCounters: Record<string, number>;\r\n    errorStatistics: Record<string, number>;\r\n  }> {\r\n    const systemMetrics = await this.getSystemMetrics();\r\n    \r\n    return {\r\n      timestamp: new Date().toISOString(),\r\n      systemMetrics,\r\n      performanceMetrics: this.logger.getPerformanceMetrics(),\r\n      operationCounters: this.logger.getOperationCounters(),\r\n      errorStatistics: this.getErrorStatistics()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reset all metrics and counters\r\n   */\r\n  public resetMetrics(): void {\r\n    this.logger.resetMetrics();\r\n    this.errorCounts.clear();\r\n    this.performanceTimers.clear();\r\n  }\r\n\r\n  /**\r\n   * Get the underlying enhanced logger\r\n   */\r\n  public getLogger(): EnhancedLogger {\r\n    return this.logger;\r\n  }\r\n}\r\n\r\n// Create and export singleton instance\r\nexport const logIntegration = new LogIntegration();\r\n\r\n// Export types\r\nexport type { SystemMetrics, TradingContext };"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "580d2e9e3c7e1934afc1a9710cc6c716658d5170"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e42bakg0h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e42bakg0h();
var __importDefault =
/* istanbul ignore next */
(cov_2e42bakg0h().s[0]++,
/* istanbul ignore next */
(cov_2e42bakg0h().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2e42bakg0h().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2e42bakg0h().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2e42bakg0h().f[0]++;
  cov_2e42bakg0h().s[1]++;
  return /* istanbul ignore next */(cov_2e42bakg0h().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2e42bakg0h().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2e42bakg0h().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2e42bakg0h().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2e42bakg0h().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2e42bakg0h().s[3]++;
exports.logIntegration = exports.LogIntegration = void 0;
const enhanced_logger_1 =
/* istanbul ignore next */
(cov_2e42bakg0h().s[4]++, require("./enhanced-logger"));
const os_1 =
/* istanbul ignore next */
(cov_2e42bakg0h().s[5]++, __importDefault(require("os")));
const perf_hooks_1 =
/* istanbul ignore next */
(cov_2e42bakg0h().s[6]++, require("perf_hooks"));
/**
 * Logging integration service for Intel NUC deployment
 */
class LogIntegration {
  logger;
  performanceTimers =
  /* istanbul ignore next */
  (cov_2e42bakg0h().s[7]++, new Map());
  systemMetricsInterval;
  errorCounts =
  /* istanbul ignore next */
  (cov_2e42bakg0h().s[8]++, new Map());
  constructor(componentName) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[1]++;
    cov_2e42bakg0h().s[9]++;
    this.logger = new enhanced_logger_1.EnhancedLogger(componentName);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[10]++;
    this.startSystemMonitoring();
  }
  /**
   * Start system performance monitoring
   */
  startSystemMonitoring() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[2]++;
    cov_2e42bakg0h().s[11]++;
    // Monitor system metrics every 30 seconds
    this.systemMetricsInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2e42bakg0h().f[3]++;
      cov_2e42bakg0h().s[12]++;
      this.logSystemMetrics();
    }, 30000);
  }
  /**
   * Stop system monitoring
   */
  stopSystemMonitoring() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[4]++;
    cov_2e42bakg0h().s[13]++;
    if (this.systemMetricsInterval) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[3][0]++;
      cov_2e42bakg0h().s[14]++;
      clearInterval(this.systemMetricsInterval);
      /* istanbul ignore next */
      cov_2e42bakg0h().s[15]++;
      this.systemMetricsInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[3][1]++;
    }
  }
  /**
   * Get current system metrics
   */
  async getSystemMetrics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[5]++;
    const memUsage =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[16]++, process.memoryUsage());
    const totalMem =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[17]++, os_1.default.totalmem());
    const freeMem =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[18]++, os_1.default.freemem());
    const usedMem =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[19]++, totalMem - freeMem);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[20]++;
    return {
      cpuUsage: await this.getCPUUsage(),
      memoryUsage: {
        used: usedMem,
        total: totalMem,
        percentage: usedMem / totalMem * 100
      },
      diskUsage: await this.getDiskUsage(),
      uptime: os_1.default.uptime()
    };
  }
  /**
   * Get CPU usage percentage
   */
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[6]++;
    cov_2e42bakg0h().s[21]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2e42bakg0h().f[7]++;
      const startUsage =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[22]++, process.cpuUsage());
      const startTime =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[23]++, perf_hooks_1.performance.now());
      /* istanbul ignore next */
      cov_2e42bakg0h().s[24]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2e42bakg0h().f[8]++;
        const endUsage =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[25]++, process.cpuUsage(startUsage));
        const endTime =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[26]++, perf_hooks_1.performance.now());
        const timeDiff =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[27]++, endTime - startTime);
        const userPercent =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[28]++, endUsage.user / 1000 / timeDiff * 100);
        const systemPercent =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[29]++, endUsage.system / 1000 / timeDiff * 100);
        /* istanbul ignore next */
        cov_2e42bakg0h().s[30]++;
        resolve(userPercent + systemPercent);
      }, 100);
    });
  }
  /**
   * Get disk usage information
   */
  async getDiskUsage() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[9]++;
    cov_2e42bakg0h().s[31]++;
    try {
      const {
        execSync
      } =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[32]++, require('child_process'));
      const output =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[33]++, execSync('df -h / | tail -1', {
        encoding: 'utf8'
      }));
      const parts =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[34]++, output.trim().split(/\s+/));
      const total =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[35]++, this.parseSize(parts[1]));
      const used =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[36]++, this.parseSize(parts[2]));
      const percentage =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[37]++, parseFloat(parts[4].replace('%', '')));
      /* istanbul ignore next */
      cov_2e42bakg0h().s[38]++;
      return {
        used,
        total,
        percentage
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2e42bakg0h().s[39]++;
      return {
        used: 0,
        total: 0,
        percentage: 0
      };
    }
  }
  /**
   * Parse size string to bytes
   */
  parseSize(sizeStr) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[10]++;
    const units =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[40]++, {
      K: 1024,
      M: 1024 ** 2,
      G: 1024 ** 3,
      T: 1024 ** 4
    });
    const match =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[41]++, sizeStr.match(/^(\d+(?:\.\d+)?)([KMGT]?)$/));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[42]++;
    if (!match) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[4][0]++;
      cov_2e42bakg0h().s[43]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[4][1]++;
    }
    const value =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[44]++, parseFloat(match[1]));
    const unit =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[45]++, match[2]);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[46]++;
    return value * (
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[5][0]++, units[unit]) ||
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[5][1]++, 1));
  }
  /**
   * Log system metrics with visual indicators
   */
  async logSystemMetrics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[11]++;
    cov_2e42bakg0h().s[47]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[48]++, await this.getSystemMetrics());
      // Log CPU usage
      /* istanbul ignore next */
      cov_2e42bakg0h().s[49]++;
      this.logger.logPerformance('CPU Usage', metrics.cpuUsage, '%', {
        warning: 70,
        critical: 90
      }, {
        component: 'system_monitor'
      });
      // Log memory usage
      /* istanbul ignore next */
      cov_2e42bakg0h().s[50]++;
      this.logger.logPerformance('Memory Usage', metrics.memoryUsage.percentage, '%', {
        warning: 80,
        critical: 95
      }, {
        component: 'system_monitor',
        details: {
          used: `${(metrics.memoryUsage.used / 1024 ** 3).toFixed(2)}GB`,
          total: `${(metrics.memoryUsage.total / 1024 ** 3).toFixed(2)}GB`
        }
      });
      // Log disk usage
      /* istanbul ignore next */
      cov_2e42bakg0h().s[51]++;
      this.logger.logPerformance('Disk Usage', metrics.diskUsage.percentage, '%', {
        warning: 85,
        critical: 95
      }, {
        component: 'system_monitor',
        details: {
          used: `${(metrics.diskUsage.used / 1024 ** 3).toFixed(2)}GB`,
          total: `${(metrics.diskUsage.total / 1024 ** 3).toFixed(2)}GB`
        }
      });
      // Log system uptime
      const uptimeHours =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[52]++, Math.floor(metrics.uptime / 3600));
      /* istanbul ignore next */
      cov_2e42bakg0h().s[53]++;
      this.logger.logWithEmoji('info', enhanced_logger_1.LogEmojis.INFO, `System uptime: ${uptimeHours} hours`, {
        component: 'system_monitor',
        uptime: metrics.uptime
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e42bakg0h().s[54]++;
      this.logger.error('Failed to collect system metrics', error);
    }
  }
  /**
   * Start performance timing for an operation
   */
  startTiming(operationId) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[12]++;
    cov_2e42bakg0h().s[55]++;
    this.performanceTimers.set(operationId, perf_hooks_1.performance.now());
  }
  /**
   * End performance timing and log the result
   */
  endTiming(operationId, operationName, meta) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[13]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[56]++, this.performanceTimers.get(operationId));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[57]++;
    if (!startTime) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[6][0]++;
      cov_2e42bakg0h().s[58]++;
      this.logger.warn(`No start time found for operation: ${operationId}`);
      /* istanbul ignore next */
      cov_2e42bakg0h().s[59]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[6][1]++;
    }
    const duration =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[60]++, perf_hooks_1.performance.now() - startTime);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[61]++;
    this.performanceTimers.delete(operationId);
    // Log the timing with appropriate emoji based on duration
    const emoji =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[62]++, duration < 100 ?
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[7][0]++, enhanced_logger_1.LogEmojis.FAST) :
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[7][1]++, duration < 1000 ?
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[8][0]++, enhanced_logger_1.LogEmojis.INFO) :
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[8][1]++, enhanced_logger_1.LogEmojis.SLOW)));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[63]++;
    this.logger.logWithEmoji('info', emoji, `${operationName} completed in ${duration.toFixed(2)}ms`, {
      ...meta,
      duration,
      operationId
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[64]++;
    return duration;
  }
  /**
   * Log trading operation with rich context
   */
  logTradingOperation(context, result, details) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[14]++;
    const {
      symbol,
      operation,
      amount,
      price,
      strategy,
      confidence
    } =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[65]++, context);
    let emoji;
    let level;
    /* istanbul ignore next */
    cov_2e42bakg0h().s[66]++;
    switch (result) {
      case 'success':
        /* istanbul ignore next */
        cov_2e42bakg0h().b[9][0]++;
        cov_2e42bakg0h().s[67]++;
        emoji = operation === 'buy' ?
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[10][0]++, enhanced_logger_1.LogEmojis.BUY) :
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[10][1]++, operation === 'sell' ?
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[11][0]++, enhanced_logger_1.LogEmojis.SELL) :
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[11][1]++, enhanced_logger_1.LogEmojis.SUCCESS));
        /* istanbul ignore next */
        cov_2e42bakg0h().s[68]++;
        level = 'info';
        /* istanbul ignore next */
        cov_2e42bakg0h().s[69]++;
        break;
      case 'failed':
        /* istanbul ignore next */
        cov_2e42bakg0h().b[9][1]++;
        cov_2e42bakg0h().s[70]++;
        emoji = enhanced_logger_1.LogEmojis.ERROR;
        /* istanbul ignore next */
        cov_2e42bakg0h().s[71]++;
        level = 'error';
        /* istanbul ignore next */
        cov_2e42bakg0h().s[72]++;
        this.incrementErrorCount(`trading_${operation}_failed`);
        /* istanbul ignore next */
        cov_2e42bakg0h().s[73]++;
        break;
      case 'skipped':
        /* istanbul ignore next */
        cov_2e42bakg0h().b[9][2]++;
        cov_2e42bakg0h().s[74]++;
        emoji = enhanced_logger_1.LogEmojis.WARNING;
        /* istanbul ignore next */
        cov_2e42bakg0h().s[75]++;
        level = 'warn';
        /* istanbul ignore next */
        cov_2e42bakg0h().s[76]++;
        break;
    }
    let message =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[77]++, `Trading ${operation} ${result} for ${symbol}`);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[78]++;
    if (amount) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[12][0]++;
      cov_2e42bakg0h().s[79]++;
      message += ` (${amount} units)`;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[12][1]++;
    }
    cov_2e42bakg0h().s[80]++;
    if (price) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[13][0]++;
      cov_2e42bakg0h().s[81]++;
      message += ` at $${price.toFixed(4)}`;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[13][1]++;
    }
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[82]++, {
      symbol,
      operation,
      result,
      amount,
      price,
      strategy,
      confidence,
      details,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[83]++;
    this.logger.logWithEmoji(level, emoji, message, enrichedMeta);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[84]++;
    this.logger.trading(operation, message, enrichedMeta);
  }
  /**
   * Log API connectivity status
   */
  logAPIConnectivity(apiName, status, latency, error) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[15]++;
    const statusMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[85]++, {
      connected: 'CONNECTED',
      disconnected: 'DISCONNECTED',
      error: 'TIMEOUT'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[86]++;
    this.logger.logConnectivity(apiName, statusMap[status], latency, {
      error: error ?
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[14][0]++, {
        name: error.name,
        message: error.message
      }) :
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[14][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[87]++;
    if (status === 'error') {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[15][0]++;
      cov_2e42bakg0h().s[88]++;
      this.incrementErrorCount(`api_${apiName}_error`);
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[15][1]++;
    }
  }
  /**
   * Log market analysis results
   */
  logMarketAnalysis(symbol, analysis) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[16]++;
    const sentimentMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[89]++, {
      bullish: 'BULLISH',
      bearish: 'BEARISH',
      neutral: 'NEUTRAL'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[90]++;
    this.logger.logMarketSentiment(symbol, sentimentMap[analysis.sentiment], analysis.confidence, analysis.indicators, {
      recommendation: analysis.recommendation
    });
  }
  /**
   * Log notification delivery
   */
  logNotificationDelivery(channel, status, recipient, error) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[17]++;
    const channelMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[91]++, {
      telegram: 'TELEGRAM',
      email: 'EMAIL',
      webhook: 'WEBHOOK'
    });
    const statusMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[92]++, {
      sent: 'SENT',
      failed: 'FAILED',
      queued: 'QUEUED'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[93]++;
    this.logger.logNotification(channelMap[channel], statusMap[status], recipient, {
      error: error ?
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[16][0]++, {
        name: error.name,
        message: error.message
      }) :
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[16][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[94]++;
    if (status === 'failed') {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[17][0]++;
      cov_2e42bakg0h().s[95]++;
      this.incrementErrorCount(`notification_${channel}_failed`);
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[17][1]++;
    }
  }
  /**
   * Log security event
   */
  logSecurityEvent(eventType, severity, details, context) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[18]++;
    const eventTypeMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[96]++, {
      login: 'LOGIN',
      logout: 'LOGOUT',
      api_access: 'API_ACCESS',
      unauthorized: 'UNAUTHORIZED',
      suspicious: 'SUSPICIOUS'
    });
    const severityMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[97]++, {
      low: 'LOW',
      medium: 'MEDIUM',
      high: 'HIGH',
      critical: 'CRITICAL'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[98]++;
    this.logger.logSecurityEvent(eventTypeMap[eventType], severityMap[severity], details, context);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[99]++;
    if (
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[19][0]++, severity === 'high') ||
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[19][1]++, severity === 'critical')) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[18][0]++;
      cov_2e42bakg0h().s[100]++;
      this.incrementErrorCount(`security_${eventType}_${severity}`);
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[18][1]++;
    }
  }
  /**
   * Log application startup/shutdown
   */
  logApplicationLifecycle(event, component, details) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[19]++;
    const eventEmojis =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[101]++, {
      startup: enhanced_logger_1.LogEmojis.START,
      shutdown: enhanced_logger_1.LogEmojis.STOP,
      restart: enhanced_logger_1.LogEmojis.RESTART
    });
    const emoji =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[102]++, eventEmojis[event]);
    const message =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[103]++, `Application ${event}: ${component}`);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[104]++;
    this.logger.logWithEmoji('info', emoji, message, {
      component,
      event,
      details,
      timestamp: new Date().toISOString()
    });
  }
  /**
   * Increment error counter
   */
  incrementErrorCount(errorType) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[20]++;
    const current =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[105]++,
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[20][0]++, this.errorCounts.get(errorType)) ||
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[20][1]++, 0));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[106]++;
    this.errorCounts.set(errorType, current + 1);
  }
  /**
   * Get error statistics
   */
  getErrorStatistics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[21]++;
    cov_2e42bakg0h().s[107]++;
    return Object.fromEntries(this.errorCounts);
  }
  /**
   * Generate comprehensive system report
   */
  async generateSystemReport() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[22]++;
    const systemMetrics =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[108]++, await this.getSystemMetrics());
    /* istanbul ignore next */
    cov_2e42bakg0h().s[109]++;
    return {
      timestamp: new Date().toISOString(),
      systemMetrics,
      performanceMetrics: this.logger.getPerformanceMetrics(),
      operationCounters: this.logger.getOperationCounters(),
      errorStatistics: this.getErrorStatistics()
    };
  }
  /**
   * Reset all metrics and counters
   */
  resetMetrics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[23]++;
    cov_2e42bakg0h().s[110]++;
    this.logger.resetMetrics();
    /* istanbul ignore next */
    cov_2e42bakg0h().s[111]++;
    this.errorCounts.clear();
    /* istanbul ignore next */
    cov_2e42bakg0h().s[112]++;
    this.performanceTimers.clear();
  }
  /**
   * Get the underlying enhanced logger
   */
  getLogger() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[24]++;
    cov_2e42bakg0h().s[113]++;
    return this.logger;
  }
}
/* istanbul ignore next */
cov_2e42bakg0h().s[114]++;
exports.LogIntegration = LogIntegration;
// Create and export singleton instance
/* istanbul ignore next */
cov_2e42bakg0h().s[115]++;
exports.logIntegration = new LogIntegration();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,