96d394ade1e680bd7bb08a1cf4836756
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SYSTEM ORCHESTRATOR
 * =============================================================================
 *
 * This module provides comprehensive system orchestration for the AI crypto
 * trading agent. It manages component lifecycle, dependency resolution,
 * startup/shutdown sequencing, and inter-component communication.
 *
 * CRITICAL SYSTEM NOTICE:
 * This orchestrator manages the entire trading system lifecycle. Proper
 * initialization order and dependency management are essential for system
 * stability and financial safety.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2bytyo6fy8() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-orchestrator.ts";
  var hash = "c0bd42b3e0eea6ca70e558d006e2da2318a4aa52";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-orchestrator.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 99
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "5": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 72
        }
      },
      "6": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 45
        }
      },
      "11": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "12": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "13": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 16
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 36
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 41
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 36
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "20": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 45
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 74
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 42
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 53
        }
      },
      "25": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 72
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "29": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 72
        }
      },
      "30": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "31": {
        start: {
          line: 91,
          column: 33
        },
        end: {
          line: 91,
          column: 59
        }
      },
      "32": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 91
        }
      },
      "33": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "34": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 55
        }
      },
      "35": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "36": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "37": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 94
        }
      },
      "38": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "39": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "40": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 24
        }
      },
      "41": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "42": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 75
        }
      },
      "43": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "44": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "46": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "47": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 40
        }
      },
      "48": {
        start: {
          line: 125,
          column: 36
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "49": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "50": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 48
        }
      },
      "51": {
        start: {
          line: 130,
          column: 35
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "52": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "53": {
        start: {
          line: 139,
          column: 34
        },
        end: {
          line: 139,
          column: 66
        }
      },
      "54": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 142,
          column: 17
        }
      },
      "55": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 63
        }
      },
      "56": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 41
        }
      },
      "57": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "58": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 81
        }
      },
      "59": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 105
        }
      },
      "60": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 70
        }
      },
      "61": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 45
        }
      },
      "62": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 24
        }
      },
      "63": {
        start: {
          line: 165,
          column: 32
        },
        end: {
          line: 165,
          column: 52
        }
      },
      "64": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 166,
          column: 33
        }
      },
      "65": {
        start: {
          line: 167,
          column: 30
        },
        end: {
          line: 167,
          column: 31
        }
      },
      "66": {
        start: {
          line: 168,
          column: 31
        },
        end: {
          line: 168,
          column: 32
        }
      },
      "67": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "68": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "69": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 36
        }
      },
      "70": {
        start: {
          line: 173,
          column: 17
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "71": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 34
        }
      },
      "72": {
        start: {
          line: 177,
          column: 29
        },
        end: {
          line: 177,
          column: 89
        }
      },
      "73": {
        start: {
          line: 178,
          column: 23
        },
        end: {
          line: 178,
          column: 46
        }
      },
      "74": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 185,
          column: 10
        }
      },
      "75": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 48
        }
      },
      "76": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 203,
          column: 58
        }
      },
      "77": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "78": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 67
        }
      },
      "79": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 72
        }
      },
      "80": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "81": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 56
        }
      },
      "82": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 39
        }
      },
      "83": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 55
        }
      },
      "84": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 51
        }
      },
      "85": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 87
        }
      },
      "86": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 90
        }
      },
      "87": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 53
        }
      },
      "88": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 59
        }
      },
      "89": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 24
        }
      },
      "90": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "91": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 57
        }
      },
      "92": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "93": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 77
        }
      },
      "94": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "95": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 88
        }
      },
      "96": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "97": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 84
        }
      },
      "98": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "99": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 62
        }
      },
      "100": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "101": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 67
        }
      },
      "102": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 33
        }
      },
      "103": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 34
        }
      },
      "104": {
        start: {
          line: 264,
          column: 22
        },
        end: {
          line: 264,
          column: 24
        }
      },
      "105": {
        start: {
          line: 265,
          column: 22
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "106": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 268,
          column: 13
        }
      },
      "107": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 80
        }
      },
      "108": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "109": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 23
        }
      },
      "110": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 38
        }
      },
      "111": {
        start: {
          line: 273,
          column: 33
        },
        end: {
          line: 273,
          column: 83
        }
      },
      "112": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "113": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 277,
          column: 17
        }
      },
      "114": {
        start: {
          line: 276,
          column: 20
        },
        end: {
          line: 276,
          column: 103
        }
      },
      "115": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 34
        }
      },
      "116": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 41
        }
      },
      "117": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 37
        }
      },
      "118": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 36
        }
      },
      "119": {
        start: {
          line: 285,
          column: 33
        },
        end: {
          line: 286,
          column: 52
        }
      },
      "120": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 286,
          column: 51
        }
      },
      "121": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "122": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 32
        }
      },
      "123": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "124": {
        start: {
          line: 299,
          column: 26
        },
        end: {
          line: 299,
          column: 58
        }
      },
      "125": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "126": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 67
        }
      },
      "127": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 303,
          column: 68
        }
      },
      "128": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "129": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 102
        }
      },
      "130": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 60
        }
      },
      "131": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 58
        }
      },
      "132": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 54
        }
      },
      "133": {
        start: {
          line: 311,
          column: 32
        },
        end: {
          line: 311,
          column: 54
        }
      },
      "134": {
        start: {
          line: 312,
          column: 35
        },
        end: {
          line: 316,
          column: 14
        }
      },
      "135": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 315,
          column: 47
        }
      },
      "136": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 90
        }
      },
      "137": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 62
        }
      },
      "138": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 55
        }
      },
      "139": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 54
        }
      },
      "140": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 52
        }
      },
      "141": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 85
        }
      },
      "142": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 88
        }
      },
      "143": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 53
        }
      },
      "144": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 59
        }
      },
      "145": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 339,
          column: 13
        }
      },
      "146": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 69
        }
      },
      "147": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 139
        }
      },
      "148": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 91
        }
      },
      "149": {
        start: {
          line: 334,
          column: 45
        },
        end: {
          line: 334,
          column: 89
        }
      },
      "150": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 56
        }
      },
      "151": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 338,
          column: 123
        }
      },
      "152": {
        start: {
          line: 349,
          column: 29
        },
        end: {
          line: 349,
          column: 51
        }
      },
      "153": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "154": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 19
        }
      },
      "155": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 87
        }
      },
      "156": {
        start: {
          line: 354,
          column: 26
        },
        end: {
          line: 354,
          column: 36
        }
      },
      "157": {
        start: {
          line: 355,
          column: 24
        },
        end: {
          line: 355,
          column: 53
        }
      },
      "158": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "159": {
        start: {
          line: 357,
          column: 27
        },
        end: {
          line: 357,
          column: 31
        }
      },
      "160": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "161": {
        start: {
          line: 359,
          column: 35
        },
        end: {
          line: 359,
          column: 68
        }
      },
      "162": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 363,
          column: 17
        }
      },
      "163": {
        start: {
          line: 361,
          column: 20
        },
        end: {
          line: 361,
          column: 37
        }
      },
      "164": {
        start: {
          line: 362,
          column: 20
        },
        end: {
          line: 362,
          column: 26
        }
      },
      "165": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "166": {
        start: {
          line: 366,
          column: 16
        },
        end: {
          line: 366,
          column: 86
        }
      },
      "167": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 23
        }
      },
      "168": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 68
        }
      },
      "169": {
        start: {
          line: 370,
          column: 41
        },
        end: {
          line: 370,
          column: 66
        }
      },
      "170": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 77
        }
      },
      "171": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "172": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 19
        }
      },
      "173": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 72
        }
      },
      "174": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 384,
          column: 44
        }
      },
      "175": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 45
        }
      },
      "176": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "177": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 52
        }
      },
      "178": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 49
        }
      },
      "179": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 65
        }
      },
      "180": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "181": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 415,
          column: 13
        }
      },
      "182": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 414,
          column: 17
        }
      },
      "183": {
        start: {
          line: 403,
          column: 35
        },
        end: {
          line: 403,
          column: 64
        }
      },
      "184": {
        start: {
          line: 404,
          column: 20
        },
        end: {
          line: 404,
          column: 77
        }
      },
      "185": {
        start: {
          line: 406,
          column: 20
        },
        end: {
          line: 408,
          column: 21
        }
      },
      "186": {
        start: {
          line: 407,
          column: 24
        },
        end: {
          line: 407,
          column: 79
        }
      },
      "187": {
        start: {
          line: 411,
          column: 20
        },
        end: {
          line: 411,
          column: 95
        }
      },
      "188": {
        start: {
          line: 412,
          column: 20
        },
        end: {
          line: 412,
          column: 61
        }
      },
      "189": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 67
        }
      },
      "190": {
        start: {
          line: 425,
          column: 29
        },
        end: {
          line: 425,
          column: 76
        }
      },
      "191": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 426,
          column: 30
        }
      },
      "192": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "193": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 19
        }
      },
      "194": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 93
        }
      },
      "195": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 75
        }
      },
      "196": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "197": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 60
        }
      },
      "198": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 54
        }
      },
      "199": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 85
        }
      },
      "200": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 89
        }
      },
      "201": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 448,
          column: 11
        }
      },
      "202": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 77
        }
      },
      "203": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 453,
          column: 11
        }
      },
      "204": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 452,
          column: 13
        }
      },
      "205": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 451,
          column: 108
        }
      },
      "206": {
        start: {
          line: 456,
          column: 0
        },
        end: {
          line: 456,
          column: 48
        }
      },
      "207": {
        start: {
          line: 460,
          column: 0
        },
        end: {
          line: 467,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 1
          },
          end: {
            line: 31,
            column: 2
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 114
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 22
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 164
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 36
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 40
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 202
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 33
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 229
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 248
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 26
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 261
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 265,
            column: 22
          },
          end: {
            line: 265,
            column: 23
          }
        },
        loc: {
          start: {
            line: 265,
            column: 39
          },
          end: {
            line: 283,
            column: 9
          }
        },
        line: 265
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 286,
            column: 18
          },
          end: {
            line: 286,
            column: 19
          }
        },
        loc: {
          start: {
            line: 286,
            column: 28
          },
          end: {
            line: 286,
            column: 51
          }
        },
        line: 286
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 38
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 298
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 312,
            column: 47
          },
          end: {
            line: 312,
            column: 48
          }
        },
        loc: {
          start: {
            line: 312,
            column: 62
          },
          end: {
            line: 316,
            column: 13
          }
        },
        line: 312
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 313,
            column: 27
          },
          end: {
            line: 313,
            column: 28
          }
        },
        loc: {
          start: {
            line: 313,
            column: 33
          },
          end: {
            line: 315,
            column: 17
          }
        },
        line: 313
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 334,
            column: 34
          },
          end: {
            line: 334,
            column: 35
          }
        },
        loc: {
          start: {
            line: 334,
            column: 45
          },
          end: {
            line: 334,
            column: 89
          }
        },
        line: 334
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 41
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 348
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 370,
            column: 30
          },
          end: {
            line: 370,
            column: 31
          }
        },
        loc: {
          start: {
            line: 370,
            column: 41
          },
          end: {
            line: 370,
            column: 66
          }
        },
        line: 370
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 28
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 377
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 382,
            column: 47
          },
          end: {
            line: 382,
            column: 48
          }
        },
        loc: {
          start: {
            line: 382,
            column: 59
          },
          end: {
            line: 384,
            column: 9
          }
        },
        line: 382
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        loc: {
          start: {
            line: 389,
            column: 27
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 389
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 32
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 399
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 54
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 424
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 25
          },
          end: {
            line: 454,
            column: 5
          }
        },
        line: 445
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 446,
            column: 35
          },
          end: {
            line: 446,
            column: 36
          }
        },
        loc: {
          start: {
            line: 446,
            column: 57
          },
          end: {
            line: 448,
            column: 9
          }
        },
        line: 446
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 449,
            column: 44
          },
          end: {
            line: 449,
            column: 45
          }
        },
        loc: {
          start: {
            line: 449,
            column: 67
          },
          end: {
            line: 453,
            column: 9
          }
        },
        line: 449
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 3
          },
          end: {
            line: 39,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 3
          },
          end: {
            line: 39,
            column: 18
          }
        }, {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 69
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "2": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "3": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: 149,
            column: 17
          },
          end: {
            line: 151,
            column: 13
          }
        }],
        line: 146
      },
      "4": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: 173,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }],
        line: 170
      },
      "5": {
        loc: {
          start: {
            line: 173,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 17
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "6": {
        loc: {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 177,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 51
          },
          end: {
            line: 177,
            column: 85
          }
        }, {
          start: {
            line: 177,
            column: 88
          },
          end: {
            line: 177,
            column: 89
          }
        }],
        line: 177
      },
      "7": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "8": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "9": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "10": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "11": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "12": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "13": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "14": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "15": {
        loc: {
          start: {
            line: 273,
            column: 33
          },
          end: {
            line: 273,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 33
          },
          end: {
            line: 273,
            column: 70
          }
        }, {
          start: {
            line: 273,
            column: 74
          },
          end: {
            line: 273,
            column: 83
          }
        }],
        line: 273
      },
      "16": {
        loc: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 277,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 277,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "17": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "18": {
        loc: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 303,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 303,
            column: 63
          }
        }, {
          start: {
            line: 303,
            column: 67
          },
          end: {
            line: 303,
            column: 68
          }
        }],
        line: 303
      },
      "19": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 339,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 339,
            column: 13
          }
        }, {
          start: {
            line: 337,
            column: 17
          },
          end: {
            line: 339,
            column: 13
          }
        }],
        line: 330
      },
      "20": {
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 352,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 352,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "21": {
        loc: {
          start: {
            line: 360,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 16
          },
          end: {
            line: 363,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "22": {
        loc: {
          start: {
            line: 360,
            column: 20
          },
          end: {
            line: 360,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 20
          },
          end: {
            line: 360,
            column: 31
          }
        }, {
          start: {
            line: 360,
            column: 35
          },
          end: {
            line: 360,
            column: 80
          }
        }],
        line: 360
      },
      "23": {
        loc: {
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 368,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "24": {
        loc: {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "25": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "26": {
        loc: {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "27": {
        loc: {
          start: {
            line: 406,
            column: 20
          },
          end: {
            line: 408,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 20
          },
          end: {
            line: 408,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "28": {
        loc: {
          start: {
            line: 406,
            column: 24
          },
          end: {
            line: 406,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 24
          },
          end: {
            line: 406,
            column: 39
          }
        }, {
          start: {
            line: 406,
            column: 43
          },
          end: {
            line: 406,
            column: 67
          }
        }],
        line: 406
      },
      "29": {
        loc: {
          start: {
            line: 425,
            column: 29
          },
          end: {
            line: 425,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 29
          },
          end: {
            line: 425,
            column: 71
          }
        }, {
          start: {
            line: 425,
            column: 75
          },
          end: {
            line: 425,
            column: 76
          }
        }],
        line: 425
      },
      "30": {
        loc: {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "31": {
        loc: {
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 452,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 452,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c0bd42b3e0eea6ca70e558d006e2da2318a4aa52"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bytyo6fy8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bytyo6fy8();
cov_2bytyo6fy8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2bytyo6fy8().s[1]++;
exports.defaultOrchestrationConfig = exports.SystemOrchestrator = exports.ComponentStatus = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[3]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[4]++, require("@/security/audit-service"));
const graceful_shutdown_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[5]++, require("@/core/shutdown/graceful-shutdown"));
/**
 * Component status enumeration
 */
var ComponentStatus;
/* istanbul ignore next */
cov_2bytyo6fy8().s[6]++;
(function (ComponentStatus) {
  /* istanbul ignore next */
  cov_2bytyo6fy8().f[0]++;
  cov_2bytyo6fy8().s[7]++;
  ComponentStatus["UNINITIALIZED"] = "UNINITIALIZED";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[8]++;
  ComponentStatus["INITIALIZING"] = "INITIALIZING";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[9]++;
  ComponentStatus["RUNNING"] = "RUNNING";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[10]++;
  ComponentStatus["STOPPING"] = "STOPPING";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[11]++;
  ComponentStatus["STOPPED"] = "STOPPED";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[12]++;
  ComponentStatus["ERROR"] = "ERROR";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[13]++;
  ComponentStatus["MAINTENANCE"] = "MAINTENANCE";
})(
/* istanbul ignore next */
(cov_2bytyo6fy8().b[0][0]++, ComponentStatus) ||
/* istanbul ignore next */
(cov_2bytyo6fy8().b[0][1]++, exports.ComponentStatus = ComponentStatus = {}));
/**
 * System orchestrator class
 */
class SystemOrchestrator extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(config) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[1]++;
    cov_2bytyo6fy8().s[14]++;
    super();
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[15]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[16]++;
    this.components = new Map();
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[17]++;
    this.dependencyGraph = new Map();
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[18]++;
    this.isShuttingDown = false;
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[19]++;
    this.startupRetries = new Map();
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[20]++;
    this.lastRecoveryAttempt = new Map();
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[21]++;
    this.setupEventHandlers();
  }
  /**
   * Register a system component
   *
   * @param component System component to register
   */
  registerComponent(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[2]++;
    cov_2bytyo6fy8().s[22]++;
    logger_1.logger.info(`📋 Registering component: ${component.id}`);
    // Validate component
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[23]++;
    this.validateComponent(component);
    // Register component
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[24]++;
    this.components.set(component.id, component);
    // Build dependency graph
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[25]++;
    this.buildDependencyGraph(component);
    // Initialize retry counter
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[26]++;
    this.startupRetries.set(component.id, 0);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[27]++;
    logger_1.logger.info(`✅ Component registered: ${component.id}`);
  }
  /**
   * Start all system components in dependency order
   *
   * @returns Promise<void>
   */
  async startSystem() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[3]++;
    cov_2bytyo6fy8().s[28]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[29]++;
      logger_1.logger.info('🚀 Starting system orchestration...');
      // Create audit entry
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[30]++;
      await audit_service_1.auditService.createAuditEntry({
        auditId: `system_start_${Date.now()}`,
        eventType: 'SYSTEM_STARTUP_INITIATED',
        actor: 'SYSTEM_ORCHESTRATOR',
        resource: 'SYSTEM',
        action: 'START_SYSTEM',
        result: 'SUCCESS',
        timestamp: new Date(),
        auditData: {
          componentCount: this.components.size
        }
      });
      // Resolve startup order
      const startupOrder =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[31]++, this.resolveStartupOrder());
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[32]++;
      logger_1.logger.info(`📋 Startup order resolved: ${startupOrder.join(' → ')}`);
      // Start components in order
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[33]++;
      for (const componentId of startupOrder) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[34]++;
        await this.startComponent(componentId);
      }
      // Start health monitoring
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[35]++;
      this.startHealthMonitoring();
      // System is ready
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[36]++;
      this.emit('system:ready');
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[37]++;
      logger_1.logger.info('✅ System orchestration completed - all components running');
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[38]++;
      logger_1.logger.error('❌ System startup failed:', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[39]++;
      this.emit('system:error', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[40]++;
      throw error;
    }
  }
  /**
   * Stop all system components gracefully
   *
   * @returns Promise<void>
   */
  async stopSystem() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[4]++;
    cov_2bytyo6fy8().s[41]++;
    if (this.isShuttingDown) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[1][0]++;
      cov_2bytyo6fy8().s[42]++;
      logger_1.logger.warn('⚠️ System shutdown already in progress');
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[1][1]++;
    }
    cov_2bytyo6fy8().s[44]++;
    this.isShuttingDown = true;
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[45]++;
    logger_1.logger.info('🛑 Initiating system shutdown...');
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[46]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[47]++;
      // Stop health monitoring
      this.stopHealthMonitoring();
      // Create shutdown context
      const shutdownContext =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[48]++, {});
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[49]++;
      for (const [id, component] of this.components) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[50]++;
        shutdownContext[id] = component;
      }
      // Perform graceful shutdown
      const shutdownResult =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[51]++, await (0, graceful_shutdown_1.gracefulShutdown)(shutdownContext, {
        timeout: 60000,
        // 60 seconds
        closePositions: true,
        backupData: true,
        sendNotifications: true,
        emergencyOnTimeout: true
      }));
      // Update component statuses
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[52]++;
      for (const componentId of shutdownResult.successfulComponents) {
        const component =
        /* istanbul ignore next */
        (cov_2bytyo6fy8().s[53]++, this.components.get(componentId));
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[54]++;
        if (component) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[2][0]++;
          cov_2bytyo6fy8().s[55]++;
          component.status = ComponentStatus.STOPPED;
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[2][1]++;
        }
      }
      // Emit shutdown event
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[56]++;
      this.emit('system:shutdown');
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[57]++;
      if (shutdownResult.success) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[3][0]++;
        cov_2bytyo6fy8().s[58]++;
        logger_1.logger.info('✅ System shutdown completed successfully');
      } else {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[3][1]++;
        cov_2bytyo6fy8().s[59]++;
        logger_1.logger.error('❌ System shutdown completed with errors:', shutdownResult.errors);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[60]++;
      logger_1.logger.error('❌ System shutdown failed:', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[61]++;
      this.emit('system:error', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[62]++;
      throw error;
    }
  }
  /**
   * Get system status
   *
   * @returns System status information
   */
  getSystemStatus() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[5]++;
    const totalComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[63]++, this.components.size);
    let runningComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[64]++, 0);
    let errorComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[65]++, 0);
    let totalHealthScore =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[66]++, 0);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[67]++;
    for (const component of this.components.values()) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[68]++;
      if (component.status === ComponentStatus.RUNNING) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[4][0]++;
        cov_2bytyo6fy8().s[69]++;
        runningComponents++;
      } else {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[4][1]++;
        cov_2bytyo6fy8().s[70]++;
        if (component.status === ComponentStatus.ERROR) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[5][0]++;
          cov_2bytyo6fy8().s[71]++;
          errorComponents++;
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[5][1]++;
        }
      }
    }
    const systemHealth =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[72]++, totalComponents > 0 ?
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[6][0]++, totalHealthScore / totalComponents) :
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[6][1]++, 0));
    const uptime =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[73]++, process.uptime() * 1000);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[74]++;
    return {
      totalComponents,
      runningComponents,
      errorComponents,
      systemHealth,
      uptime
    };
  }
  /**
   * Get component status
   *
   * @param componentId Component identifier
   * @returns Component status or undefined if not found
   */
  getComponentStatus(componentId) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[6]++;
    cov_2bytyo6fy8().s[75]++;
    return this.components.get(componentId);
  }
  /**
   * Restart a specific component
   *
   * @param componentId Component identifier
   * @returns Promise<void>
   */
  async restartComponent(componentId) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[7]++;
    const component =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[76]++, this.components.get(componentId));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[77]++;
    if (!component) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[7][0]++;
      cov_2bytyo6fy8().s[78]++;
      throw new Error(`Component not found: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[7][1]++;
    }
    cov_2bytyo6fy8().s[79]++;
    logger_1.logger.info(`🔄 Restarting component: ${componentId}`);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[80]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[81]++;
      // Stop component
      component.status = ComponentStatus.STOPPING;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[82]++;
      await component.shutdown();
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[83]++;
      component.status = ComponentStatus.STOPPED;
      // Start component
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[84]++;
      await this.startComponent(componentId);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[85]++;
      logger_1.logger.info(`✅ Component restarted successfully: ${componentId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[86]++;
      logger_1.logger.error(`❌ Failed to restart component ${componentId}:`, error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[87]++;
      component.status = ComponentStatus.ERROR;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[88]++;
      this.emit('component:error', component, error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[89]++;
      throw error;
    }
  }
  /**
   * Validate component configuration
   *
   * @param component Component to validate
   */
  validateComponent(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[8]++;
    cov_2bytyo6fy8().s[90]++;
    if (!component.id) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[8][0]++;
      cov_2bytyo6fy8().s[91]++;
      throw new Error('Component must have an ID');
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[8][1]++;
    }
    cov_2bytyo6fy8().s[92]++;
    if (this.components.has(component.id)) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[9][0]++;
      cov_2bytyo6fy8().s[93]++;
      throw new Error(`Component already registered: ${component.id}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[9][1]++;
    }
    cov_2bytyo6fy8().s[94]++;
    if (!Array.isArray(component.dependencies)) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[10][0]++;
      cov_2bytyo6fy8().s[95]++;
      throw new Error(`Component dependencies must be an array: ${component.id}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[10][1]++;
    }
    cov_2bytyo6fy8().s[96]++;
    if (typeof component.priority !== 'number') {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[11][0]++;
      cov_2bytyo6fy8().s[97]++;
      throw new Error(`Component priority must be a number: ${component.id}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[11][1]++;
    }
  }
  /**
   * Build dependency graph for component
   *
   * @param component Component to build graph for
   */
  buildDependencyGraph(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[9]++;
    cov_2bytyo6fy8().s[98]++;
    if (!this.dependencyGraph.has(component.id)) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[12][0]++;
      cov_2bytyo6fy8().s[99]++;
      this.dependencyGraph.set(component.id, new Set());
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[12][1]++;
    }
    cov_2bytyo6fy8().s[100]++;
    for (const dependency of component.dependencies) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[101]++;
      this.dependencyGraph.get(component.id).add(dependency);
    }
  }
  /**
   * Resolve startup order based on dependencies and priorities
   *
   * @returns Array of component IDs in startup order
   */
  resolveStartupOrder() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[10]++;
    const visited =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[102]++, new Set());
    const visiting =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[103]++, new Set());
    const order =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[104]++, []);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[105]++;
    const visit = componentId => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[11]++;
      cov_2bytyo6fy8().s[106]++;
      if (visiting.has(componentId)) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[13][0]++;
        cov_2bytyo6fy8().s[107]++;
        throw new Error(`Circular dependency detected: ${componentId}`);
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[13][1]++;
      }
      cov_2bytyo6fy8().s[108]++;
      if (visited.has(componentId)) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[14][0]++;
        cov_2bytyo6fy8().s[109]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[14][1]++;
      }
      cov_2bytyo6fy8().s[110]++;
      visiting.add(componentId);
      const dependencies =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[111]++,
      /* istanbul ignore next */
      (cov_2bytyo6fy8().b[15][0]++, this.dependencyGraph.get(componentId)) ||
      /* istanbul ignore next */
      (cov_2bytyo6fy8().b[15][1]++, new Set()));
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[112]++;
      for (const dependency of dependencies) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[113]++;
        if (!this.components.has(dependency)) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[16][0]++;
          cov_2bytyo6fy8().s[114]++;
          throw new Error(`Missing dependency: ${dependency} for component: ${componentId}`);
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[16][1]++;
        }
        cov_2bytyo6fy8().s[115]++;
        visit(dependency);
      }
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[116]++;
      visiting.delete(componentId);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[117]++;
      visited.add(componentId);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[118]++;
      order.push(componentId);
    };
    // Sort components by priority first
    const sortedComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[119]++, Array.from(this.components.values()).sort((a, b) => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[12]++;
      cov_2bytyo6fy8().s[120]++;
      return a.priority - b.priority;
    }));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[121]++;
    for (const component of sortedComponents) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[122]++;
      visit(component.id);
    }
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[123]++;
    return order;
  }
  /**
   * Start a specific component
   *
   * @param componentId Component identifier
   * @returns Promise<void>
   */
  async startComponent(componentId) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[13]++;
    const component =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[124]++, this.components.get(componentId));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[125]++;
    if (!component) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[17][0]++;
      cov_2bytyo6fy8().s[126]++;
      throw new Error(`Component not found: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[17][1]++;
    }
    const retryCount =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[127]++,
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[18][0]++, this.startupRetries.get(componentId)) ||
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[18][1]++, 0));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[128]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[129]++;
      logger_1.logger.info(`🚀 Starting component: ${componentId} (attempt ${retryCount + 1})`);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[130]++;
      component.status = ComponentStatus.INITIALIZING;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[131]++;
      this.emit('component:initialized', component);
      // Wait for dependencies
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[132]++;
      await this.waitForDependencies(component);
      // Initialize component with timeout
      const initPromise =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[133]++, component.initialize());
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[134]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2bytyo6fy8().f[14]++;
        cov_2bytyo6fy8().s[135]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2bytyo6fy8().f[15]++;
          cov_2bytyo6fy8().s[136]++;
          reject(new Error(`Component initialization timeout: ${componentId}`));
        }, this.config.startupTimeout);
      }));
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[137]++;
      await Promise.race([initPromise, timeoutPromise]);
      // Update status
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[138]++;
      component.status = ComponentStatus.RUNNING;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[139]++;
      this.emit('component:started', component);
      // Reset retry counter
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[140]++;
      this.startupRetries.set(componentId, 0);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[141]++;
      logger_1.logger.info(`✅ Component started successfully: ${componentId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[142]++;
      logger_1.logger.error(`❌ Failed to start component ${componentId}:`, error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[143]++;
      component.status = ComponentStatus.ERROR;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[144]++;
      this.emit('component:error', component, error);
      // Handle retries
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[145]++;
      if (retryCount < this.config.maxStartupRetries) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[19][0]++;
        cov_2bytyo6fy8().s[146]++;
        this.startupRetries.set(componentId, retryCount + 1);
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[147]++;
        logger_1.logger.info(`🔄 Retrying component startup: ${componentId} (${retryCount + 1}/${this.config.maxStartupRetries})`);
        // Wait before retry
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[148]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bytyo6fy8().f[16]++;
          cov_2bytyo6fy8().s[149]++;
          return setTimeout(resolve, 2000 * (retryCount + 1));
        });
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[150]++;
        return this.startComponent(componentId);
      } else {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[19][1]++;
        cov_2bytyo6fy8().s[151]++;
        throw new Error(`Component startup failed after ${this.config.maxStartupRetries} retries: ${componentId}`);
      }
    }
  }
  /**
   * Wait for component dependencies to be ready
   *
   * @param component Component to wait for dependencies
   * @returns Promise<void>
   */
  async waitForDependencies(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[17]++;
    const dependencies =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[152]++, component.dependencies);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[153]++;
    if (dependencies.length === 0) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[20][0]++;
      cov_2bytyo6fy8().s[154]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[20][1]++;
    }
    cov_2bytyo6fy8().s[155]++;
    logger_1.logger.info(`⏳ Waiting for dependencies: ${dependencies.join(', ')}`);
    const startTime =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[156]++, Date.now());
    const timeout =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[157]++, this.config.dependencyTimeout);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[158]++;
    while (Date.now() - startTime < timeout) {
      let allReady =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[159]++, true);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[160]++;
      for (const dependencyId of dependencies) {
        const dependency =
        /* istanbul ignore next */
        (cov_2bytyo6fy8().s[161]++, this.components.get(dependencyId));
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[162]++;
        if (
        /* istanbul ignore next */
        (cov_2bytyo6fy8().b[22][0]++, !dependency) ||
        /* istanbul ignore next */
        (cov_2bytyo6fy8().b[22][1]++, dependency.status !== ComponentStatus.RUNNING)) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[21][0]++;
          cov_2bytyo6fy8().s[163]++;
          allReady = false;
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[164]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[21][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[165]++;
      if (allReady) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[23][0]++;
        cov_2bytyo6fy8().s[166]++;
        logger_1.logger.info(`✅ All dependencies ready for: ${component.id}`);
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[167]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[23][1]++;
      }
      // Wait before checking again
      cov_2bytyo6fy8().s[168]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2bytyo6fy8().f[18]++;
        cov_2bytyo6fy8().s[169]++;
        return setTimeout(resolve, 1000);
      });
    }
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[170]++;
    throw new Error(`Dependency timeout for component: ${component.id}`);
  }
  /**
   * Start health monitoring for all components
   */
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[19]++;
    cov_2bytyo6fy8().s[171]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[24][0]++;
      cov_2bytyo6fy8().s[172]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[24][1]++;
    }
    cov_2bytyo6fy8().s[173]++;
    logger_1.logger.info('🏥 Starting system health monitoring...');
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[174]++;
    this.healthCheckInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[20]++;
      cov_2bytyo6fy8().s[175]++;
      await this.performHealthChecks();
    }, this.config.healthCheckInterval);
  }
  /**
   * Stop health monitoring
   */
  stopHealthMonitoring() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[21]++;
    cov_2bytyo6fy8().s[176]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[25][0]++;
      cov_2bytyo6fy8().s[177]++;
      clearInterval(this.healthCheckInterval);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[178]++;
      this.healthCheckInterval = undefined;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[179]++;
      logger_1.logger.info('🏥 Health monitoring stopped');
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[25][1]++;
    }
  }
  /**
   * Perform health checks on all components
   */
  async performHealthChecks() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[22]++;
    cov_2bytyo6fy8().s[180]++;
    for (const component of this.components.values()) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[181]++;
      if (component.status === ComponentStatus.RUNNING) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[26][0]++;
        cov_2bytyo6fy8().s[182]++;
        try {
          const health =
          /* istanbul ignore next */
          (cov_2bytyo6fy8().s[183]++, await component.healthCheck());
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[184]++;
          this.emit('component:health-changed', component, health);
          // Handle unhealthy components
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[185]++;
          if (
          /* istanbul ignore next */
          (cov_2bytyo6fy8().b[28][0]++, !health.healthy) &&
          /* istanbul ignore next */
          (cov_2bytyo6fy8().b[28][1]++, this.config.autoRecovery)) {
            /* istanbul ignore next */
            cov_2bytyo6fy8().b[27][0]++;
            cov_2bytyo6fy8().s[186]++;
            await this.handleUnhealthyComponent(component, health);
          } else
          /* istanbul ignore next */
          {
            cov_2bytyo6fy8().b[27][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[187]++;
          logger_1.logger.error(`❌ Health check failed for ${component.id}:`, error);
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[188]++;
          component.status = ComponentStatus.ERROR;
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[189]++;
          this.emit('component:error', component, error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[26][1]++;
      }
    }
  }
  /**
   * Handle unhealthy component with recovery attempts
   *
   * @param component Unhealthy component
   * @param health Health status
   */
  async handleUnhealthyComponent(component, health) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[23]++;
    const lastRecovery =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[190]++,
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[29][0]++, this.lastRecoveryAttempt.get(component.id)) ||
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[29][1]++, 0));
    const now =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[191]++, Date.now());
    // Check cooldown period
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[192]++;
    if (now - lastRecovery < this.config.recoveryCooldown) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[30][0]++;
      cov_2bytyo6fy8().s[193]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[30][1]++;
    }
    cov_2bytyo6fy8().s[194]++;
    logger_1.logger.warn(`⚠️ Component unhealthy, attempting recovery: ${component.id}`);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[195]++;
    logger_1.logger.warn(`Health issues: ${health.issues.join(', ')}`);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[196]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[197]++;
      this.lastRecoveryAttempt.set(component.id, now);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[198]++;
      await this.restartComponent(component.id);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[199]++;
      logger_1.logger.info(`✅ Component recovery successful: ${component.id}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[200]++;
      logger_1.logger.error(`❌ Component recovery failed: ${component.id}`, error);
    }
  }
  /**
   * Setup event handlers
   */
  setupEventHandlers() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[24]++;
    cov_2bytyo6fy8().s[201]++;
    this.on('component:error', (component, error) => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[25]++;
      cov_2bytyo6fy8().s[202]++;
      logger_1.logger.error(`Component error: ${component.id}`, error);
    });
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[203]++;
    this.on('component:health-changed', (component, health) => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[26]++;
      cov_2bytyo6fy8().s[204]++;
      if (!health.healthy) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[31][0]++;
        cov_2bytyo6fy8().s[205]++;
        logger_1.logger.warn(`Component health degraded: ${component.id} (score: ${health.score})`);
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[31][1]++;
      }
    });
  }
}
/* istanbul ignore next */
cov_2bytyo6fy8().s[206]++;
exports.SystemOrchestrator = SystemOrchestrator;
/**
 * Default orchestration configuration
 */
/* istanbul ignore next */
cov_2bytyo6fy8().s[207]++;
exports.defaultOrchestrationConfig = {
  startupTimeout: 30000,
  // 30 seconds
  healthCheckInterval: 30000,
  // 30 seconds
  dependencyTimeout: 60000,
  // 60 seconds
  maxStartupRetries: 3,
  autoRecovery: true,
  recoveryCooldown: 300000 // 5 minutes
};
// =============================================================================
// SYSTEM ORCHESTRATION NOTES
// =============================================================================
// 1. Dependency-aware component startup sequencing
// 2. Comprehensive health monitoring and auto-recovery
// 3. Graceful shutdown with proper cleanup procedures
// 4. Event-driven architecture for system coordination
// 5. Retry logic with exponential backoff for resilience
// 6. Audit logging for all orchestration activities
// 7. Timeout handling for startup and dependency resolution
// 8. Component lifecycle management with status tracking
// =============================================================================