b26d6a89caaf0dae429cec87d440efd6
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - PERFORMANCE OPTIMIZATION MODULE
 * =============================================================================
 *
 * This module exports all performance optimization components for Intel NUC
 * systems. It provides comprehensive memory, disk, and CPU optimization
 * capabilities designed for 24/7 trading operations.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_zcke2c321() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance\\index.ts";
  var hash = "d5e3ba1eddabd2b3f9953f289844a63c8a1dc2b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "1": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 111
        }
      },
      "2": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 19,
          column: 64
        }
      },
      "3": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 152
        }
      },
      "4": {
        start: {
          line: 20,
          column: 94
        },
        end: {
          line: 20,
          column: 146
        }
      },
      "5": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "6": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 137
        }
      },
      "7": {
        start: {
          line: 23,
          column: 89
        },
        end: {
          line: 23,
          column: 131
        }
      },
      "8": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 131
        }
      },
      "10": {
        start: {
          line: 26,
          column: 87
        },
        end: {
          line: 26,
          column: 125
        }
      },
      "11": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 48
        }
      },
      "12": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 128
        }
      },
      "13": {
        start: {
          line: 29,
          column: 86
        },
        end: {
          line: 29,
          column: 122
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 20,
            column: 81
          }
        },
        loc: {
          start: {
            line: 20,
            column: 92
          },
          end: {
            line: 20,
            column: 148
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 75
          },
          end: {
            line: 23,
            column: 76
          }
        },
        loc: {
          start: {
            line: 23,
            column: 87
          },
          end: {
            line: 23,
            column: 133
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 73
          },
          end: {
            line: 26,
            column: 74
          }
        },
        loc: {
          start: {
            line: 26,
            column: 85
          },
          end: {
            line: 26,
            column: 127
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 72
          },
          end: {
            line: 29,
            column: 73
          }
        },
        loc: {
          start: {
            line: 29,
            column: 84
          },
          end: {
            line: 29,
            column: 124
          }
        },
        line: 29
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d5e3ba1eddabd2b3f9953f289844a63c8a1dc2b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zcke2c321 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zcke2c321();
cov_zcke2c321().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zcke2c321().s[1]++;
exports.CPUOptimizer = exports.DiskOptimizer = exports.MemoryOptimizer = exports.PerformanceOptimizer = void 0;
// Main performance optimizer
var performance_optimizer_1 =
/* istanbul ignore next */
(cov_zcke2c321().s[2]++, require("./performance-optimizer"));
/* istanbul ignore next */
cov_zcke2c321().s[3]++;
Object.defineProperty(exports, "PerformanceOptimizer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zcke2c321().f[0]++;
    cov_zcke2c321().s[4]++;
    return performance_optimizer_1.PerformanceOptimizer;
  }
});
// Memory optimization
var memory_optimizer_1 =
/* istanbul ignore next */
(cov_zcke2c321().s[5]++, require("./memory-optimizer"));
/* istanbul ignore next */
cov_zcke2c321().s[6]++;
Object.defineProperty(exports, "MemoryOptimizer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zcke2c321().f[1]++;
    cov_zcke2c321().s[7]++;
    return memory_optimizer_1.MemoryOptimizer;
  }
});
// Disk optimization
var disk_optimizer_1 =
/* istanbul ignore next */
(cov_zcke2c321().s[8]++, require("./disk-optimizer"));
/* istanbul ignore next */
cov_zcke2c321().s[9]++;
Object.defineProperty(exports, "DiskOptimizer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zcke2c321().f[2]++;
    cov_zcke2c321().s[10]++;
    return disk_optimizer_1.DiskOptimizer;
  }
});
// CPU optimization
var cpu_optimizer_1 =
/* istanbul ignore next */
(cov_zcke2c321().s[11]++, require("./cpu-optimizer"));
/* istanbul ignore next */
cov_zcke2c321().s[12]++;
Object.defineProperty(exports, "CPUOptimizer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zcke2c321().f[3]++;
    cov_zcke2c321().s[13]++;
    return cpu_optimizer_1.CPUOptimizer;
  }
});