{"version":3,"names":["cov_19580smyiq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","logger_1","require","notification_router_1","email_service_1","telegram_service_1","TradingEventType","exports","SystemEventType","TradingNotifications","notificationRouter","emailService","telegramService","performanceHistory","lastNotificationTimes","isInitialized","constructor","NotificationRouter","EmailService","TelegramService","Map","initialize","logger","info","scheduleSummaryReports","error","notifyTradeExecution","data","Error","tradeId","sendTradingNotification","symbol","action","quantity","price","pnl","balance","strategy","Math","abs","sendDetailedTradeEmail","notifyProfitTargetHit","positionId","profitEmoji","realizedPnL","telegramMessage","side","entryPrice","toFixed","currentPrice","floor","duration","maxProfit","trim","sendNotification","id","Date","now","priority","chatId","process","env","TELEGRAM_CHAT_ID","message","parseMode","timestamp","sendProfitTargetEmail","notifyStopLossTriggered","lossEmoji","maxDrawdown","sendStopLossEmail","sendDailySummary","push","routeAlert","category","AlertCategory","TRADING","AlertPriority","NORMAL","title","totalTrades","winRate","totalPnL","source","tags","sendDetailedDailySummaryEmail","sendTelegramDailySummary","sendWeeklySummary","sendDetailedWeeklySummaryEmail","sendTelegramWeeklySummary","notifySystemHealth","lastNotification","get","getTime","needsAttention","cpu","usage","memory","usagePercent","disk","network","latency","connectionStatus","sendSystemHealthAlert","component","status","metrics","generateSystemHealthMessage","set","notifyBalanceMilestone","currentBalance","milestone","milestoneEmoji","subject","htmlContent","totalValue","fees","confidence","riskReward","executionTime","toLocaleString","to","NOTIFICATION_EMAIL","templateData","bestTrade","worstTrade","date","endDate","weeklyMessage","startDate","toDateString","profitFactor","returnPercent","strategies","slice","map","trades","join","issues","length","dailySchedule","weeklySchedule","getStatistics","totalNotificationsSent","performanceHistorySize","lastDailySummary","lastWeeklySummary","stop","default"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\trading-notifications.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * TRADING-SPECIFIC NOTIFICATIONS\r\n * =============================================================================\r\n * \r\n * Implements specialized notification handlers for trading events including\r\n * trade execution, profit targets, stop losses, system health, and performance\r\n * summaries for the AI crypto trading agent.\r\n * \r\n * Features:\r\n * - Trade execution notifications with P&L details\r\n * - Profit target and stop loss alerts\r\n * - System health and security notifications\r\n * - Daily/weekly performance summary emails\r\n * - Rich formatting with emojis and charts\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport { logger } from '@/core/logging/logger';\r\nimport { NotificationRouter, AlertCategory, AlertPriority } from './notification-router';\r\nimport { EmailService } from './email-service';\r\nimport { TelegramService } from './telegram-service';\r\n\r\n/**\r\n * Trading event types for notifications\r\n */\r\nexport enum TradingEventType {\r\n  TRADE_EXECUTED = 'TRADE_EXECUTED',\r\n  PROFIT_TARGET_HIT = 'PROFIT_TARGET_HIT',\r\n  STOP_LOSS_TRIGGERED = 'STOP_LOSS_TRIGGERED',\r\n  POSITION_OPENED = 'POSITION_OPENED',\r\n  POSITION_CLOSED = 'POSITION_CLOSED',\r\n  BALANCE_MILESTONE = 'BALANCE_MILESTONE',\r\n  DRAWDOWN_WARNING = 'DRAWDOWN_WARNING',\r\n  RISK_LIMIT_EXCEEDED = 'RISK_LIMIT_EXCEEDED',\r\n  STRATEGY_PERFORMANCE = 'STRATEGY_PERFORMANCE'\r\n}\r\n\r\n/**\r\n * System event types for notifications\r\n */\r\nexport enum SystemEventType {\r\n  SYSTEM_STARTUP = 'SYSTEM_STARTUP',\r\n  SYSTEM_SHUTDOWN = 'SYSTEM_SHUTDOWN',\r\n  CONNECTION_LOST = 'CONNECTION_LOST',\r\n  CONNECTION_RESTORED = 'CONNECTION_RESTORED',\r\n  HIGH_CPU_USAGE = 'HIGH_CPU_USAGE',\r\n  LOW_MEMORY = 'LOW_MEMORY',\r\n  DISK_SPACE_WARNING = 'DISK_SPACE_WARNING',\r\n  NETWORK_LATENCY = 'NETWORK_LATENCY'\r\n}\r\n\r\n/**\r\n * Trade execution data structure\r\n */\r\nexport interface TradeExecutionData {\r\n  tradeId: string;\r\n  symbol: string;\r\n  action: 'BUY' | 'SELL';\r\n  quantity: number;\r\n  price: number;\r\n  totalValue: number;\r\n  fees: number;\r\n  pnl?: number;\r\n  balance: number;\r\n  strategy: string;\r\n  confidence: number;\r\n  riskReward: number;\r\n  timestamp: Date;\r\n  executionTime: number; // milliseconds\r\n}\r\n\r\n/**\r\n * Position data structure\r\n */\r\nexport interface PositionData {\r\n  positionId: string;\r\n  symbol: string;\r\n  side: 'LONG' | 'SHORT';\r\n  quantity: number;\r\n  entryPrice: number;\r\n  currentPrice: number;\r\n  unrealizedPnL: number;\r\n  realizedPnL: number;\r\n  stopLoss: number;\r\n  takeProfit: number;\r\n  duration: number; // minutes\r\n  maxDrawdown: number;\r\n  maxProfit: number;\r\n}\r\n\r\n/**\r\n * Performance summary data structure\r\n */\r\nexport interface PerformanceSummaryData {\r\n  period: 'daily' | 'weekly' | 'monthly';\r\n  startDate: Date;\r\n  endDate: Date;\r\n  totalTrades: number;\r\n  winningTrades: number;\r\n  losingTrades: number;\r\n  winRate: number;\r\n  totalPnL: number;\r\n  grossProfit: number;\r\n  grossLoss: number;\r\n  profitFactor: number;\r\n  sharpeRatio: number;\r\n  maxDrawdown: number;\r\n  maxDrawdownPercent: number;\r\n  bestTrade: number;\r\n  worstTrade: number;\r\n  averageWin: number;\r\n  averageLoss: number;\r\n  largestWinStreak: number;\r\n  largestLossStreak: number;\r\n  currentBalance: number;\r\n  startingBalance: number;\r\n  returnPercent: number;\r\n  tradingDays: number;\r\n  averageTradesPerDay: number;\r\n  strategies: StrategyPerformance[];\r\n}\r\n\r\n/**\r\n * Strategy performance data\r\n */\r\nexport interface StrategyPerformance {\r\n  name: string;\r\n  trades: number;\r\n  winRate: number;\r\n  pnl: number;\r\n  profitFactor: number;\r\n  averageReturn: number;\r\n}\r\n\r\n/**\r\n * System health data structure\r\n */\r\nexport interface SystemHealthData {\r\n  timestamp: Date;\r\n  uptime: number;\r\n  cpu: {\r\n    usage: number;\r\n    temperature: number;\r\n    frequency: number;\r\n  };\r\n  memory: {\r\n    used: number;\r\n    available: number;\r\n    usagePercent: number;\r\n  };\r\n  disk: {\r\n    used: number;\r\n    available: number;\r\n    usagePercent: number;\r\n    ioWait: number;\r\n  };\r\n  network: {\r\n    latency: number;\r\n    throughput: number;\r\n    packetsLost: number;\r\n    connectionStatus: 'connected' | 'disconnected' | 'unstable';\r\n  };\r\n  trading: {\r\n    activePositions: number;\r\n    dailyTrades: number;\r\n    apiLatency: number;\r\n    lastTradeTime: Date;\r\n  };\r\n}\r\n\r\n/**\r\n * Trading notifications manager class\r\n */\r\nexport class TradingNotifications {\r\n  private notificationRouter: NotificationRouter;\r\n  private emailService: EmailService;\r\n  private telegramService: TelegramService;\r\n  private performanceHistory: PerformanceSummaryData[];\r\n  private lastNotificationTimes: Map<string, Date>;\r\n  private isInitialized: boolean = false;\r\n\r\n  constructor() {\r\n    this.notificationRouter = new NotificationRouter();\r\n    this.emailService = new EmailService();\r\n    this.telegramService = new TelegramService();\r\n    this.performanceHistory = [];\r\n    this.lastNotificationTimes = new Map();\r\n  }\r\n\r\n  /**\r\n   * Initialize trading notifications\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('üìä Initializing trading notifications...');\r\n\r\n      // Initialize notification router (which initializes services)\r\n      await this.notificationRouter.initialize();\r\n\r\n      // Schedule daily and weekly summaries\r\n      this.scheduleSummaryReports();\r\n\r\n      this.isInitialized = true;\r\n      logger.info('‚úÖ Trading notifications initialized successfully');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to initialize trading notifications:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send trade execution notification\r\n   */\r\n  public async notifyTradeExecution(data: TradeExecutionData): Promise<void> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('Trading notifications not initialized');\r\n    }\r\n\r\n    try {\r\n      logger.info(`üìä Sending trade execution notification: ${data.tradeId}`);\r\n\r\n      // Send through notification router\r\n      await this.notificationRouter.sendTradingNotification({\r\n        symbol: data.symbol,\r\n        action: data.action,\r\n        quantity: data.quantity,\r\n        price: data.price,\r\n        pnl: data.pnl,\r\n        balance: data.balance,\r\n        strategy: data.strategy\r\n      });\r\n\r\n      // Send detailed email for significant trades\r\n      if (Math.abs(data.pnl || 0) > 100) { // Significant P&L threshold\r\n        await this.sendDetailedTradeEmail(data);\r\n      }\r\n\r\n      logger.info(`‚úÖ Trade execution notification sent: ${data.tradeId}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to send trade execution notification:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send profit target hit notification\r\n   */\r\n  public async notifyProfitTargetHit(data: PositionData): Promise<void> {\r\n    try {\r\n      logger.info(`üéØ Sending profit target notification: ${data.positionId}`);\r\n\r\n      const profitEmoji = data.realizedPnL > 500 ? 'üöÄ' : data.realizedPnL > 100 ? 'üí∞' : 'üìà';\r\n\r\n      // Telegram notification\r\n      const telegramMessage = `\r\n${profitEmoji} <b>PROFIT TARGET HIT!</b> üéØ\r\n\r\nüíé <b>Symbol:</b> ${data.symbol}\r\nüìä <b>Position:</b> ${data.side} ${data.quantity}\r\nüíµ <b>Entry:</b> $${data.entryPrice.toFixed(4)}\r\nüéØ <b>Exit:</b> $${data.currentPrice.toFixed(4)}\r\nüí∞ <b>Profit:</b> $${data.realizedPnL.toFixed(2)}\r\n‚è±Ô∏è <b>Duration:</b> ${Math.floor(data.duration / 60)}h ${data.duration % 60}m\r\nüìà <b>Max Profit:</b> $${data.maxProfit.toFixed(2)}\r\n\r\nüéâ <i>Excellent execution! Target achieved successfully.</i>\r\n      `.trim();\r\n\r\n      await this.telegramService.sendNotification({\r\n        id: `profit_${data.positionId}_${Date.now()}`,\r\n        type: 'PROFIT_TARGET' as any,\r\n        priority: 'high' as any,\r\n        chatId: process.env.TELEGRAM_CHAT_ID!,\r\n        message: telegramMessage,\r\n        parseMode: 'HTML',\r\n        timestamp: new Date()\r\n      });\r\n\r\n      // Email notification for significant profits\r\n      if (data.realizedPnL > 200) {\r\n        await this.sendProfitTargetEmail(data);\r\n      }\r\n\r\n      logger.info(`‚úÖ Profit target notification sent: ${data.positionId}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to send profit target notification:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send stop loss triggered notification\r\n   */\r\n  public async notifyStopLossTriggered(data: PositionData): Promise<void> {\r\n    try {\r\n      logger.info(`üõë Sending stop loss notification: ${data.positionId}`);\r\n\r\n      const lossEmoji = Math.abs(data.realizedPnL) > 500 ? 'üö®' : Math.abs(data.realizedPnL) > 100 ? '‚ö†Ô∏è' : 'üìâ';\r\n\r\n      // Telegram notification\r\n      const telegramMessage = `\r\n${lossEmoji} <b>STOP LOSS TRIGGERED</b> üõë\r\n\r\nüíé <b>Symbol:</b> ${data.symbol}\r\nüìä <b>Position:</b> ${data.side} ${data.quantity}\r\nüíµ <b>Entry:</b> $${data.entryPrice.toFixed(4)}\r\nüõë <b>Exit:</b> $${data.currentPrice.toFixed(4)}\r\nüìâ <b>Loss:</b> $${data.realizedPnL.toFixed(2)}\r\n‚è±Ô∏è <b>Duration:</b> ${Math.floor(data.duration / 60)}h ${data.duration % 60}m\r\nüìâ <b>Max Drawdown:</b> $${data.maxDrawdown.toFixed(2)}\r\n\r\nüõ°Ô∏è <i>Capital protected. Risk management working correctly.</i>\r\n      `.trim();\r\n\r\n      await this.telegramService.sendNotification({\r\n        id: `stoploss_${data.positionId}_${Date.now()}`,\r\n        type: 'STOP_LOSS' as any,\r\n        priority: 'high' as any,\r\n        chatId: process.env.TELEGRAM_CHAT_ID!,\r\n        message: telegramMessage,\r\n        parseMode: 'HTML',\r\n        timestamp: new Date()\r\n      });\r\n\r\n      // Email notification for significant losses\r\n      if (Math.abs(data.realizedPnL) > 200) {\r\n        await this.sendStopLossEmail(data);\r\n      }\r\n\r\n      logger.info(`‚úÖ Stop loss notification sent: ${data.positionId}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to send stop loss notification:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send daily performance summary\r\n   */\r\n  public async sendDailySummary(data: PerformanceSummaryData): Promise<void> {\r\n    try {\r\n      logger.info('üìä Sending daily performance summary...');\r\n\r\n      // Store in history\r\n      this.performanceHistory.push(data);\r\n\r\n      // Send through notification router\r\n      await this.notificationRouter.routeAlert({\r\n        id: `daily_summary_${Date.now()}`,\r\n        category: AlertCategory.TRADING,\r\n        priority: AlertPriority.NORMAL,\r\n        title: 'Daily Trading Summary',\r\n        message: `Daily performance: ${data.totalTrades} trades, ${data.winRate.toFixed(1)}% win rate, $${data.totalPnL.toFixed(2)} P&L`,\r\n        data,\r\n        timestamp: new Date(),\r\n        source: 'trading-notifications',\r\n        tags: ['daily', 'summary', 'performance']\r\n      });\r\n\r\n      // Send detailed email summary\r\n      await this.sendDetailedDailySummaryEmail(data);\r\n\r\n      // Send Telegram summary\r\n      await this.sendTelegramDailySummary(data);\r\n\r\n      logger.info('‚úÖ Daily performance summary sent');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to send daily summary:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send weekly performance summary\r\n   */\r\n  public async sendWeeklySummary(data: PerformanceSummaryData): Promise<void> {\r\n    try {\r\n      logger.info('üìä Sending weekly performance summary...');\r\n\r\n      // Send detailed email with charts and analysis\r\n      await this.sendDetailedWeeklySummaryEmail(data);\r\n\r\n      // Send Telegram summary\r\n      await this.sendTelegramWeeklySummary(data);\r\n\r\n      logger.info('‚úÖ Weekly performance summary sent');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to send weekly summary:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send system health notification\r\n   */\r\n  public async notifySystemHealth(data: SystemHealthData): Promise<void> {\r\n    try {\r\n      // Check if we should send notification (avoid spam)\r\n      const lastNotification = this.lastNotificationTimes.get('system_health');\r\n      const now = new Date();\r\n      \r\n      if (lastNotification && (now.getTime() - lastNotification.getTime()) < 30 * 60 * 1000) {\r\n        return; // Skip if sent within last 30 minutes\r\n      }\r\n\r\n      // Determine if system needs attention\r\n      const needsAttention = \r\n        data.cpu.usage > 80 ||\r\n        data.memory.usagePercent > 85 ||\r\n        data.disk.usagePercent > 90 ||\r\n        data.network.latency > 1000 ||\r\n        data.network.connectionStatus !== 'connected';\r\n\r\n      if (!needsAttention) {\r\n        return; // Only send notifications for issues\r\n      }\r\n\r\n      logger.info('üñ•Ô∏è Sending system health notification...');\r\n\r\n      await this.notificationRouter.sendSystemHealthAlert({\r\n        component: 'Intel NUC',\r\n        status: needsAttention ? 'warning' : 'healthy',\r\n        metrics: {\r\n          cpu: data.cpu.usage,\r\n          memory: data.memory.usagePercent,\r\n          disk: data.disk.usagePercent,\r\n          latency: data.network.latency\r\n        },\r\n        message: this.generateSystemHealthMessage(data)\r\n      });\r\n\r\n      this.lastNotificationTimes.set('system_health', now);\r\n      logger.info('‚úÖ System health notification sent');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to send system health notification:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send balance milestone notification\r\n   */\r\n  public async notifyBalanceMilestone(currentBalance: number, milestone: number): Promise<void> {\r\n    try {\r\n      logger.info(`üéâ Sending balance milestone notification: $${milestone}`);\r\n\r\n      const milestoneEmoji = milestone >= 100000 ? 'üíé' : milestone >= 50000 ? 'üöÄ' : milestone >= 10000 ? 'üí∞' : 'üìà';\r\n\r\n      const telegramMessage = `\r\n${milestoneEmoji} <b>BALANCE MILESTONE REACHED!</b> üéâ\r\n\r\nüí∞ <b>New Balance:</b> $${currentBalance.toFixed(2)}\r\nüéØ <b>Milestone:</b> $${milestone.toFixed(2)}\r\nüìà <b>Growth:</b> ${((currentBalance / milestone - 1) * 100).toFixed(2)}%\r\n\r\nüéä <i>Congratulations! Another step towards financial freedom!</i>\r\n      `.trim();\r\n\r\n      await this.telegramService.sendNotification({\r\n        id: `milestone_${milestone}_${Date.now()}`,\r\n        type: 'BALANCE_MILESTONE' as any,\r\n        priority: 'normal' as any,\r\n        chatId: process.env.TELEGRAM_CHAT_ID!,\r\n        message: telegramMessage,\r\n        parseMode: 'HTML',\r\n        timestamp: new Date()\r\n      });\r\n\r\n      logger.info(`‚úÖ Balance milestone notification sent: $${milestone}`);\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to send balance milestone notification:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send detailed trade email\r\n   */\r\n  private async sendDetailedTradeEmail(data: TradeExecutionData): Promise<void> {\r\n    const subject = `Trade Executed: ${data.action} ${data.symbol} - $${data.pnl?.toFixed(2)} P&L`;\r\n    \r\n    const htmlContent = `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">üöÄ Trade Executed</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <h2 style=\"color: #333;\">${data.action} ${data.symbol}</h2>\r\n          \r\n          <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 20px 0;\">\r\n            <h3 style=\"margin-top: 0; color: #667eea;\">Trade Details</h3>\r\n            <table style=\"width: 100%; border-collapse: collapse;\">\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Trade ID:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${data.tradeId}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Symbol:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${data.symbol}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Action:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${data.action}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Quantity:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${data.quantity}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Price:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">$${data.price.toFixed(4)}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Total Value:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">$${data.totalValue.toFixed(2)}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Fees:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">$${data.fees.toFixed(2)}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>P&L:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd; color: ${(data.pnl || 0) >= 0 ? '#28a745' : '#dc3545'};\">$${data.pnl?.toFixed(2)}</td></tr>\r\n              <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>New Balance:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">$${data.balance.toFixed(2)}</td></tr>\r\n            </table>\r\n          </div>\r\n\r\n          <div style=\"background: white; padding: 20px; border-radius: 8px; margin: 20px 0;\">\r\n            <h3 style=\"margin-top: 0; color: #667eea;\">Strategy Information</h3>\r\n            <p><strong>Strategy:</strong> ${data.strategy}</p>\r\n            <p><strong>Confidence:</strong> ${(data.confidence * 100).toFixed(1)}%</p>\r\n            <p><strong>Risk/Reward:</strong> ${data.riskReward.toFixed(2)}:1</p>\r\n            <p><strong>Execution Time:</strong> ${data.executionTime}ms</p>\r\n          </div>\r\n\r\n          <p style=\"margin-top: 20px; color: #666; text-align: center;\">\r\n            <em>Executed at ${data.timestamp.toLocaleString()}</em>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    await this.emailService.sendNotification({\r\n      id: `trade_email_${data.tradeId}`,\r\n      type: 'TRADE_EXECUTION' as any,\r\n      priority: 'high' as any,\r\n      to: [process.env.NOTIFICATION_EMAIL!],\r\n      subject,\r\n      templateData: {},\r\n      timestamp: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send detailed daily summary email\r\n   */\r\n  private async sendDetailedDailySummaryEmail(data: PerformanceSummaryData): Promise<void> {\r\n    // Implementation would include comprehensive HTML email with charts\r\n    // For brevity, using the existing email service method\r\n    await this.emailService.sendDailySummary({\r\n      totalTrades: data.totalTrades,\r\n      winRate: data.winRate,\r\n      totalPnL: data.totalPnL,\r\n      bestTrade: data.bestTrade,\r\n      worstTrade: data.worstTrade,\r\n      balance: data.currentBalance,\r\n      date: data.endDate\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send Telegram daily summary\r\n   */\r\n  private async sendTelegramDailySummary(data: PerformanceSummaryData): Promise<void> {\r\n    await this.telegramService.sendDailySummary({\r\n      totalTrades: data.totalTrades,\r\n      winRate: data.winRate,\r\n      totalPnL: data.totalPnL,\r\n      bestTrade: data.bestTrade,\r\n      worstTrade: data.worstTrade,\r\n      balance: data.currentBalance,\r\n      date: data.endDate\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send detailed weekly summary email\r\n   */\r\n  private async sendDetailedWeeklySummaryEmail(data: PerformanceSummaryData): Promise<void> {\r\n    // Implementation would include comprehensive weekly analysis\r\n    // This is a placeholder for the full implementation\r\n    logger.info('üìß Sending detailed weekly summary email...');\r\n  }\r\n\r\n  /**\r\n   * Send Telegram weekly summary\r\n   */\r\n  private async sendTelegramWeeklySummary(data: PerformanceSummaryData): Promise<void> {\r\n    const weeklyMessage = `\r\nüìä <b>WEEKLY TRADING SUMMARY</b> üìà\r\n\r\nüìÖ <b>Period:</b> ${data.startDate.toDateString()} - ${data.endDate.toDateString()}\r\n\r\nüìà <b>Performance Overview:</b>\r\n‚Ä¢ üéØ <b>Total Trades:</b> ${data.totalTrades}\r\n‚Ä¢ üèÜ <b>Win Rate:</b> ${data.winRate.toFixed(1)}%\r\n‚Ä¢ üí∞ <b>Total P&L:</b> $${data.totalPnL.toFixed(2)}\r\n‚Ä¢ üìä <b>Profit Factor:</b> ${data.profitFactor.toFixed(2)}\r\n‚Ä¢ üìà <b>Return:</b> ${data.returnPercent.toFixed(2)}%\r\n\r\nüéØ <b>Best Performers:</b>\r\n${data.strategies.slice(0, 3).map(s => `‚Ä¢ ${s.name}: ${s.winRate.toFixed(1)}% (${s.trades} trades)`).join('\\n')}\r\n\r\nüíé <b>Current Balance:</b> $${data.currentBalance.toFixed(2)}\r\n\r\n${data.totalPnL >= 0 ? 'üöÄ Great week! Keep up the momentum!' : 'üí™ Learning week - adjusting strategies for better performance!'}\r\n    `.trim();\r\n\r\n    await this.telegramService.sendNotification({\r\n      id: `weekly_summary_${Date.now()}`,\r\n      type: 'WEEKLY_SUMMARY' as any,\r\n      priority: 'normal' as any,\r\n      chatId: process.env.TELEGRAM_CHAT_ID!,\r\n      message: weeklyMessage,\r\n      parseMode: 'HTML',\r\n      timestamp: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate system health message\r\n   */\r\n  private generateSystemHealthMessage(data: SystemHealthData): string {\r\n    const issues: string[] = [];\r\n\r\n    if (data.cpu.usage > 80) issues.push(`High CPU usage: ${data.cpu.usage.toFixed(1)}%`);\r\n    if (data.memory.usagePercent > 85) issues.push(`High memory usage: ${data.memory.usagePercent.toFixed(1)}%`);\r\n    if (data.disk.usagePercent > 90) issues.push(`Low disk space: ${data.disk.usagePercent.toFixed(1)}% used`);\r\n    if (data.network.latency > 1000) issues.push(`High network latency: ${data.network.latency}ms`);\r\n    if (data.network.connectionStatus !== 'connected') issues.push(`Network connection: ${data.network.connectionStatus}`);\r\n\r\n    return issues.length > 0 \r\n      ? `System attention required: ${issues.join(', ')}`\r\n      : 'System is running optimally';\r\n  }\r\n\r\n  /**\r\n   * Schedule daily and weekly summary reports\r\n   */\r\n  private scheduleSummaryReports(): void {\r\n    // Schedule daily summary at 11:59 PM\r\n    const dailySchedule = '59 23 * * *'; // cron format\r\n    \r\n    // Schedule weekly summary on Sundays at 11:59 PM\r\n    const weeklySchedule = '59 23 * * 0'; // cron format\r\n\r\n    // Note: In a real implementation, you would use node-cron or similar\r\n    // For now, this is a placeholder for the scheduling logic\r\n    logger.info('üìÖ Summary report schedules configured');\r\n  }\r\n\r\n  /**\r\n   * Get trading notifications statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalNotificationsSent: number;\r\n    performanceHistorySize: number;\r\n    lastDailySummary?: Date;\r\n    lastWeeklySummary?: Date;\r\n  } {\r\n    return {\r\n      totalNotificationsSent: this.performanceHistory.length,\r\n      performanceHistorySize: this.performanceHistory.length,\r\n      lastDailySummary: this.lastNotificationTimes.get('daily_summary'),\r\n      lastWeeklySummary: this.lastNotificationTimes.get('weekly_summary')\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Stop trading notifications\r\n   */\r\n  public async stop(): Promise<void> {\r\n    await this.notificationRouter.stop();\r\n    logger.info('üõë Trading notifications stopped');\r\n  }\r\n}\r\n\r\nexport default TradingNotifications;\r\n"],"mappings":"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","ignoreList":[]}