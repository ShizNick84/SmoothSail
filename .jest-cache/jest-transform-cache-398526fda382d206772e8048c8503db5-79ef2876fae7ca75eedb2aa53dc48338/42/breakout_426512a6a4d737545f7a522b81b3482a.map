{"version":3,"names":["cov_288l7y2im","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","BreakoutStrategy","volumeConfirmationThreshold","minBreakoutPercentage","consolidationPeriod","momentumPeriod","detectSupportResistance","marketData","lookbackPeriod","length","support","resistance","consolidationRange","recentData","slice","highs","map","d","high","lows","low","localHighs","findLocalExtremes","localLows","resistanceLevels","groupSimilarLevels","h","index","supportLevels","l","consolidationHigh","Math","max","consolidationLow","min","consolidationRangeData","sort","a","data","lookback","extremes","i","isExtreme","j","push","value","levels","threshold","sortedLevels","groupedLevels","currentGroup","currentLevel","groupAverage","reduce","sum","level","abs","calculateMomentum","period","currentPrice","close","pastPrice","momentum","round","detectBreakout","currentData","nearestResistance","find","r","breakoutPercentage","volumeConfirmed","isVolumeConfirmed","falseBreakoutProbability","calculateFalseBreakoutProbability","timestamp","parameters","breakoutLevel","direction","strength","calculateBreakoutStrength","nearestSupport","currentVolume","volume","averageVolume","probability","levelTests","forEach","testThreshold","generateSignal","breakout","latestData","signalType","adjustedStrength","confidence","calculateSignalConfidence","riskReward","calculateRiskReward","reasoning","generateReasoning","id","Date","now","random","toString","substr","symbol","indicators","metadata","countLevelTests","tests","momentumAlignment","breakoutMagnitude","target","stop","reward","risk","levelType","volumeText","momentumText","toFixed","charAt","toUpperCase","evaluateSignalConfidence","signal","technical","momentumScore","alignment","overall","factors","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\breakout.ts"],"sourcesContent":["/**\r\n * Breakout and Momentum Detection Strategy Implementation\r\n * \r\n * This module implements volume-confirmed breakout detection, momentum oscillator calculations,\r\n * and false breakout filtering mechanisms for reliable breakout trading signals.\r\n * \r\n * Requirements: 4.2, 4.8 - Breakout detection with volume confirmation and false breakout filtering\r\n */\r\n\r\nimport { MarketData, BreakoutSignal, TradingSignal, SignalConfidence } from './types';\r\n\r\nexport class BreakoutStrategy {\r\n  private readonly volumeConfirmationThreshold = 1.5; // 50% above average volume\r\n  private readonly minBreakoutPercentage = 0.02; // Minimum 2% breakout\r\n  private readonly consolidationPeriod = 20; // Periods to analyze for consolidation\r\n  private readonly momentumPeriod = 14; // Period for momentum calculation\r\n\r\n  /**\r\n   * Detect support and resistance levels\r\n   * @param marketData Array of market data\r\n   * @param lookbackPeriod Period to analyze for levels\r\n   * @returns Support and resistance levels\r\n   */\r\n  public detectSupportResistance(\r\n    marketData: MarketData[],\r\n    lookbackPeriod: number = this.consolidationPeriod\r\n  ): { support: number[]; resistance: number[]; consolidationRange: { high: number; low: number } | null } {\r\n    if (marketData.length < lookbackPeriod) {\r\n      return { support: [], resistance: [], consolidationRange: null };\r\n    }\r\n\r\n    const recentData = marketData.slice(-lookbackPeriod);\r\n    const highs = recentData.map(d => d.high);\r\n    const lows = recentData.map(d => d.low);\r\n\r\n    // Find local highs and lows\r\n    const localHighs = this.findLocalExtremes(highs, 'high', 3);\r\n    const localLows = this.findLocalExtremes(lows, 'low', 3);\r\n\r\n    // Group similar levels together (within 1% of each other)\r\n    const resistanceLevels = this.groupSimilarLevels(localHighs.map(h => highs[h.index]));\r\n    const supportLevels = this.groupSimilarLevels(localLows.map(l => lows[l.index]));\r\n\r\n    // Determine consolidation range\r\n    const consolidationHigh = Math.max(...highs);\r\n    const consolidationLow = Math.min(...lows);\r\n    const consolidationRange = (consolidationHigh - consolidationLow) / consolidationLow;\r\n\r\n    // Only consider it consolidation if range is reasonable (not too wide)\r\n    const consolidationRangeData = consolidationRange < 0.15 ? \r\n      { high: consolidationHigh, low: consolidationLow } : null;\r\n\r\n    return {\r\n      support: supportLevels.sort((a, b) => b - a), // Descending order\r\n      resistance: resistanceLevels.sort((a, b) => a - b), // Ascending order\r\n      consolidationRange: consolidationRangeData\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find local extremes in price data\r\n   * @param data Price data array\r\n   * @param type Type of extreme to find\r\n   * @param lookback Lookback period for comparison\r\n   * @returns Array of extreme points\r\n   */\r\n  private findLocalExtremes(\r\n    data: number[],\r\n    type: 'high' | 'low',\r\n    lookback: number = 3\r\n  ): Array<{ index: number; value: number }> {\r\n    const extremes: Array<{ index: number; value: number }> = [];\r\n\r\n    for (let i = lookback; i < data.length - lookback; i++) {\r\n      let isExtreme = true;\r\n\r\n      for (let j = i - lookback; j <= i + lookback; j++) {\r\n        if (j === i) continue;\r\n\r\n        if (type === 'high' && data[j] >= data[i]) {\r\n          isExtreme = false;\r\n          break;\r\n        }\r\n        if (type === 'low' && data[j] <= data[i]) {\r\n          isExtreme = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (isExtreme) {\r\n        extremes.push({ index: i, value: data[i] });\r\n      }\r\n    }\r\n\r\n    return extremes;\r\n  }\r\n\r\n  /**\r\n   * Group similar price levels together\r\n   * @param levels Array of price levels\r\n   * @param threshold Similarity threshold (default: 1%)\r\n   * @returns Grouped levels\r\n   */\r\n  private groupSimilarLevels(levels: number[], threshold: number = 0.01): number[] {\r\n    if (levels.length === 0) return [];\r\n\r\n    const sortedLevels = [...levels].sort((a, b) => a - b);\r\n    const groupedLevels: number[] = [];\r\n    let currentGroup = [sortedLevels[0]];\r\n\r\n    for (let i = 1; i < sortedLevels.length; i++) {\r\n      const currentLevel = sortedLevels[i];\r\n      const groupAverage = currentGroup.reduce((sum, level) => sum + level, 0) / currentGroup.length;\r\n\r\n      if (Math.abs(currentLevel - groupAverage) / groupAverage <= threshold) {\r\n        currentGroup.push(currentLevel);\r\n      } else {\r\n        // Finalize current group and start new one\r\n        groupedLevels.push(groupAverage);\r\n        currentGroup = [currentLevel];\r\n      }\r\n    }\r\n\r\n    // Add the last group\r\n    if (currentGroup.length > 0) {\r\n      const groupAverage = currentGroup.reduce((sum, level) => sum + level, 0) / currentGroup.length;\r\n      groupedLevels.push(groupAverage);\r\n    }\r\n\r\n    return groupedLevels;\r\n  }\r\n\r\n  /**\r\n   * Calculate momentum oscillator\r\n   * @param marketData Array of market data\r\n   * @param period Period for momentum calculation\r\n   * @returns Momentum value (-100 to +100)\r\n   */\r\n  public calculateMomentum(\r\n    marketData: MarketData[],\r\n    period: number = this.momentumPeriod\r\n  ): number | null {\r\n    if (marketData.length < period + 1) {\r\n      return null;\r\n    }\r\n\r\n    const currentPrice = marketData[marketData.length - 1].close;\r\n    const pastPrice = marketData[marketData.length - 1 - period].close;\r\n\r\n    const momentum = ((currentPrice - pastPrice) / pastPrice) * 100;\r\n    return Math.round(momentum * 100) / 100; // Round to 2 decimal places\r\n  }\r\n\r\n  /**\r\n   * Detect breakout signals with volume confirmation\r\n   * @param marketData Array of market data\r\n   * @param lookbackPeriod Period for support/resistance analysis\r\n   * @returns Breakout signal or null\r\n   */\r\n  public detectBreakout(\r\n    marketData: MarketData[],\r\n    lookbackPeriod: number = this.consolidationPeriod\r\n  ): BreakoutSignal | null {\r\n    if (marketData.length < lookbackPeriod + 5) {\r\n      return null;\r\n    }\r\n\r\n    const levels = this.detectSupportResistance(marketData, lookbackPeriod);\r\n    const currentData = marketData[marketData.length - 1];\r\n    const currentPrice = currentData.close;\r\n\r\n    // Check for breakout above resistance\r\n    const nearestResistance = levels.resistance.find(r => r > currentPrice * 0.98);\r\n    if (nearestResistance && currentPrice > nearestResistance) {\r\n      const breakoutPercentage = (currentPrice - nearestResistance) / nearestResistance;\r\n      \r\n      if (breakoutPercentage >= this.minBreakoutPercentage) {\r\n        const volumeConfirmed = this.isVolumeConfirmed(marketData);\r\n        const falseBreakoutProbability = this.calculateFalseBreakoutProbability(\r\n          marketData, nearestResistance, 'UP'\r\n        );\r\n\r\n        return {\r\n          name: 'BREAKOUT',\r\n          value: currentPrice,\r\n          timestamp: currentData.timestamp,\r\n          parameters: {\r\n            breakoutLevel: nearestResistance,\r\n            breakoutPercentage,\r\n            lookbackPeriod\r\n          },\r\n          direction: 'UP',\r\n          volumeConfirmed,\r\n          strength: this.calculateBreakoutStrength(breakoutPercentage, volumeConfirmed, falseBreakoutProbability),\r\n          falseBreakoutProbability\r\n        };\r\n      }\r\n    }\r\n\r\n    // Check for breakout below support\r\n    const nearestSupport = levels.support.find(s => s < currentPrice * 1.02);\r\n    if (nearestSupport && currentPrice < nearestSupport) {\r\n      const breakoutPercentage = (nearestSupport - currentPrice) / nearestSupport;\r\n      \r\n      if (breakoutPercentage >= this.minBreakoutPercentage) {\r\n        const volumeConfirmed = this.isVolumeConfirmed(marketData);\r\n        const falseBreakoutProbability = this.calculateFalseBreakoutProbability(\r\n          marketData, nearestSupport, 'DOWN'\r\n        );\r\n\r\n        return {\r\n          name: 'BREAKOUT',\r\n          value: currentPrice,\r\n          timestamp: currentData.timestamp,\r\n          parameters: {\r\n            breakoutLevel: nearestSupport,\r\n            breakoutPercentage,\r\n            lookbackPeriod\r\n          },\r\n          direction: 'DOWN',\r\n          volumeConfirmed,\r\n          strength: this.calculateBreakoutStrength(breakoutPercentage, volumeConfirmed, falseBreakoutProbability),\r\n          falseBreakoutProbability\r\n        };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Check if current volume confirms the breakout\r\n   * @param marketData Array of market data\r\n   * @returns True if volume is above threshold\r\n   */\r\n  private isVolumeConfirmed(marketData: MarketData[]): boolean {\r\n    if (marketData.length < 20) {\r\n      return false;\r\n    }\r\n\r\n    const currentVolume = marketData[marketData.length - 1].volume;\r\n    const averageVolume = marketData.slice(-20)\r\n      .reduce((sum, data) => sum + data.volume, 0) / 20;\r\n\r\n    return currentVolume >= (averageVolume * this.volumeConfirmationThreshold);\r\n  }\r\n\r\n  /**\r\n   * Calculate false breakout probability\r\n   * @param marketData Market data\r\n   * @param breakoutLevel The level being broken\r\n   * @param direction Breakout direction\r\n   * @returns Probability (0-100)\r\n   */\r\n  private calculateFalseBreakoutProbability(\r\n    marketData: MarketData[],\r\n    breakoutLevel: number,\r\n    direction: 'UP' | 'DOWN'\r\n  ): number {\r\n    let probability = 50; // Base probability\r\n\r\n    // Check how many times this level has been tested recently\r\n    const recentData = marketData.slice(-50);\r\n    let levelTests = 0;\r\n\r\n    recentData.forEach(data => {\r\n      const testThreshold = breakoutLevel * 0.005; // 0.5% threshold\r\n      if (direction === 'UP') {\r\n        if (data.high >= breakoutLevel - testThreshold && data.close < breakoutLevel) {\r\n          levelTests++;\r\n        }\r\n      } else {\r\n        if (data.low <= breakoutLevel + testThreshold && data.close > breakoutLevel) {\r\n          levelTests++;\r\n        }\r\n      }\r\n    });\r\n\r\n    // More tests = lower false breakout probability\r\n    probability -= Math.min(levelTests * 5, 30);\r\n\r\n    // Volume confirmation reduces false breakout probability\r\n    if (this.isVolumeConfirmed(marketData)) {\r\n      probability -= 20;\r\n    }\r\n\r\n    // Momentum alignment reduces false breakout probability\r\n    const momentum = this.calculateMomentum(marketData);\r\n    if (momentum !== null) {\r\n      if ((direction === 'UP' && momentum > 5) || (direction === 'DOWN' && momentum < -5)) {\r\n        probability -= 15;\r\n      }\r\n    }\r\n\r\n    return Math.max(0, Math.min(100, Math.round(probability)));\r\n  }\r\n\r\n  /**\r\n   * Calculate breakout strength\r\n   * @param breakoutPercentage Percentage of breakout\r\n   * @param volumeConfirmed Whether volume confirms\r\n   * @param falseBreakoutProbability Probability of false breakout\r\n   * @returns Strength score (0-100)\r\n   */\r\n  private calculateBreakoutStrength(\r\n    breakoutPercentage: number,\r\n    volumeConfirmed: boolean,\r\n    falseBreakoutProbability: number\r\n  ): number {\r\n    let strength = 50; // Base strength\r\n\r\n    // Breakout magnitude\r\n    strength += Math.min(breakoutPercentage * 1000, 30); // Up to 30 points for 3%+ breakout\r\n\r\n    // Volume confirmation\r\n    if (volumeConfirmed) {\r\n      strength += 25;\r\n    } else {\r\n      strength -= 15;\r\n    }\r\n\r\n    // False breakout probability (inverse relationship)\r\n    strength += (100 - falseBreakoutProbability) * 0.2;\r\n\r\n    return Math.max(0, Math.min(100, Math.round(strength)));\r\n  }\r\n\r\n  /**\r\n   * Generate trading signal based on breakout analysis\r\n   * @param marketData Array of market data\r\n   * @param lookbackPeriod Period for analysis\r\n   * @returns Trading signal or null\r\n   */\r\n  public generateSignal(\r\n    marketData: MarketData[],\r\n    lookbackPeriod: number = this.consolidationPeriod\r\n  ): TradingSignal | null {\r\n    const breakout = this.detectBreakout(marketData, lookbackPeriod);\r\n    if (!breakout) {\r\n      return null;\r\n    }\r\n\r\n    // Filter out high probability false breakouts\r\n    if (breakout.falseBreakoutProbability > 70) {\r\n      return null;\r\n    }\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n    const signalType = breakout.direction === 'UP' ? 'BUY' : 'SELL';\r\n    \r\n    // Calculate momentum for additional confirmation\r\n    const momentum = this.calculateMomentum(marketData);\r\n    let adjustedStrength = breakout.strength;\r\n\r\n    // Adjust strength based on momentum alignment\r\n    if (momentum !== null) {\r\n      if ((signalType === 'BUY' && momentum > 0) || (signalType === 'SELL' && momentum < 0)) {\r\n        adjustedStrength = Math.min(adjustedStrength + 10, 100);\r\n      } else if ((signalType === 'BUY' && momentum < -10) || (signalType === 'SELL' && momentum > 10)) {\r\n        adjustedStrength = Math.max(adjustedStrength - 15, 0);\r\n      }\r\n    }\r\n\r\n    // Calculate confidence\r\n    const confidence = this.calculateSignalConfidence(breakout, momentum, marketData);\r\n\r\n    // Calculate risk-reward ratio\r\n    const riskReward = this.calculateRiskReward(marketData, signalType, breakout);\r\n\r\n    const reasoning = this.generateReasoning(breakout, momentum);\r\n\r\n    return {\r\n      id: `breakout_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      symbol: latestData.symbol,\r\n      type: signalType,\r\n      strength: Math.round(adjustedStrength),\r\n      confidence: Math.round(confidence),\r\n      indicators: [`BREAKOUT_${breakout.direction}`],\r\n      reasoning,\r\n      riskReward,\r\n      timestamp: latestData.timestamp,\r\n      metadata: {\r\n        breakoutLevel: breakout.parameters.breakoutLevel,\r\n        breakoutPercentage: breakout.parameters.breakoutPercentage,\r\n        direction: breakout.direction,\r\n        volumeConfirmed: breakout.volumeConfirmed,\r\n        falseBreakoutProbability: breakout.falseBreakoutProbability,\r\n        momentum: momentum,\r\n        levelTests: this.countLevelTests(marketData, breakout.parameters.breakoutLevel, breakout.direction)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Count how many times a level has been tested\r\n   * @param marketData Market data\r\n   * @param level Price level\r\n   * @param direction Breakout direction\r\n   * @returns Number of tests\r\n   */\r\n  private countLevelTests(marketData: MarketData[], level: number, direction: 'UP' | 'DOWN'): number {\r\n    const recentData = marketData.slice(-50);\r\n    let tests = 0;\r\n    const threshold = level * 0.005; // 0.5% threshold\r\n\r\n    recentData.forEach(data => {\r\n      if (direction === 'UP') {\r\n        if (data.high >= level - threshold && data.close < level) {\r\n          tests++;\r\n        }\r\n      } else {\r\n        if (data.low <= level + threshold && data.close > level) {\r\n          tests++;\r\n        }\r\n      }\r\n    });\r\n\r\n    return tests;\r\n  }\r\n\r\n  /**\r\n   * Calculate signal confidence\r\n   * @param breakout Breakout signal data\r\n   * @param momentum Momentum value\r\n   * @param marketData Market data\r\n   * @returns Confidence score (0-100)\r\n   */\r\n  private calculateSignalConfidence(\r\n    breakout: BreakoutSignal,\r\n    momentum: number | null,\r\n    marketData: MarketData[]\r\n  ): number {\r\n    let confidence = 50; // Base confidence\r\n\r\n    // Breakout strength contributes to confidence\r\n    confidence += breakout.strength * 0.3;\r\n\r\n    // Volume confirmation\r\n    if (breakout.volumeConfirmed) {\r\n      confidence += 20;\r\n    } else {\r\n      confidence -= 10;\r\n    }\r\n\r\n    // False breakout probability (inverse)\r\n    confidence += (100 - breakout.falseBreakoutProbability) * 0.2;\r\n\r\n    // Momentum alignment\r\n    if (momentum !== null) {\r\n      const momentumAlignment = (breakout.direction === 'UP' && momentum > 0) || \r\n                               (breakout.direction === 'DOWN' && momentum < 0);\r\n      if (momentumAlignment) {\r\n        confidence += Math.min(Math.abs(momentum), 15);\r\n      } else {\r\n        confidence -= 10;\r\n      }\r\n    }\r\n\r\n    // Level significance (more tests = more significant level)\r\n    const levelTests = this.countLevelTests(marketData, breakout.parameters.breakoutLevel, breakout.direction);\r\n    confidence += Math.min(levelTests * 2, 10);\r\n\r\n    return Math.max(0, Math.min(100, confidence));\r\n  }\r\n\r\n  /**\r\n   * Calculate risk-reward ratio for breakout trades\r\n   * @param marketData Market data\r\n   * @param signalType Signal type\r\n   * @param breakout Breakout data\r\n   * @returns Risk-reward ratio\r\n   */\r\n  private calculateRiskReward(\r\n    marketData: MarketData[],\r\n    signalType: 'BUY' | 'SELL',\r\n    breakout: BreakoutSignal\r\n  ): number {\r\n    const currentPrice = marketData[marketData.length - 1].close;\r\n    const breakoutLevel = breakout.parameters.breakoutLevel;\r\n\r\n    if (signalType === 'BUY') {\r\n      // For upward breakouts, target is based on breakout magnitude\r\n      const breakoutMagnitude = currentPrice - breakoutLevel;\r\n      const target = currentPrice + (breakoutMagnitude * 2); // 2:1 projection\r\n      const stop = breakoutLevel * 0.99; // Stop just below breakout level\r\n      \r\n      const reward = target - currentPrice;\r\n      const risk = currentPrice - stop;\r\n      \r\n      return risk > 0 ? reward / risk : 1.0;\r\n    } else {\r\n      // For downward breakouts\r\n      const breakoutMagnitude = breakoutLevel - currentPrice;\r\n      const target = currentPrice - (breakoutMagnitude * 2); // 2:1 projection\r\n      const stop = breakoutLevel * 1.01; // Stop just above breakout level\r\n      \r\n      const reward = currentPrice - target;\r\n      const risk = stop - currentPrice;\r\n      \r\n      return risk > 0 ? reward / risk : 1.0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate human-readable reasoning for the signal\r\n   * @param breakout Breakout data\r\n   * @param momentum Momentum value\r\n   * @returns Reasoning string\r\n   */\r\n  private generateReasoning(breakout: BreakoutSignal, momentum: number | null): string {\r\n    const direction = breakout.direction === 'UP' ? 'upward' : 'downward';\r\n    const levelType = breakout.direction === 'UP' ? 'resistance' : 'support';\r\n    const volumeText = breakout.volumeConfirmed ? ' with strong volume confirmation' : ' with weak volume';\r\n    const momentumText = momentum !== null ? \r\n      ` and ${momentum > 0 ? 'positive' : 'negative'} momentum (${momentum.toFixed(1)}%)` : '';\r\n\r\n    return `${direction.charAt(0).toUpperCase() + direction.slice(1)} breakout detected above ${levelType} level at ${breakout.parameters.breakoutLevel.toFixed(4)}${volumeText}${momentumText}. Breakout magnitude: ${(breakout.parameters.breakoutPercentage * 100).toFixed(2)}%. False breakout probability: ${breakout.falseBreakoutProbability}%.`;\r\n  }\r\n\r\n  /**\r\n   * Evaluate signal confidence with detailed breakdown\r\n   * @param marketData Market data\r\n   * @param signal Trading signal\r\n   * @returns Detailed confidence analysis\r\n   */\r\n  public evaluateSignalConfidence(marketData: MarketData[], signal: TradingSignal): SignalConfidence {\r\n    const technical = signal.strength;\r\n    \r\n    // Volume analysis\r\n    const volumeConfirmed = signal.metadata?.volumeConfirmed as boolean;\r\n    const volume = volumeConfirmed ? 80 : 40;\r\n\r\n    // Momentum analysis\r\n    const momentum = signal.metadata?.momentum as number | null;\r\n    let momentumScore = 50;\r\n    if (momentum !== null) {\r\n      const alignment = (signal.type === 'BUY' && momentum > 0) || (signal.type === 'SELL' && momentum < 0);\r\n      momentumScore = alignment ? 70 + Math.min(Math.abs(momentum), 20) : 30;\r\n    }\r\n\r\n    const overall = Math.round((technical * 0.4 + volume * 0.3 + momentumScore * 0.3));\r\n\r\n    const factors = [\r\n      `Breakout signal strength: ${technical}/100`,\r\n      `Volume confirmation: ${volume}/100`,\r\n      `Momentum alignment: ${momentumScore}/100`,\r\n      `Breakout level: ${signal.metadata?.breakoutLevel} (${signal.metadata?.direction})`\r\n    ];\r\n\r\n    if (signal.metadata?.falseBreakoutProbability !== undefined) {\r\n      factors.push(`False breakout probability: ${signal.metadata.falseBreakoutProbability}%`);\r\n    }\r\n\r\n    if (signal.metadata?.levelTests !== undefined) {\r\n      factors.push(`Level tested ${signal.metadata.levelTests} times previously`);\r\n    }\r\n\r\n    if (signal.metadata?.breakoutPercentage !== undefined) {\r\n      factors.push(`Breakout magnitude: ${(signal.metadata.breakoutPercentage * 100).toFixed(2)}%`);\r\n    }\r\n\r\n    return {\r\n      overall,\r\n      technical,\r\n      volume,\r\n      momentum: momentumScore,\r\n      factors\r\n    };\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}