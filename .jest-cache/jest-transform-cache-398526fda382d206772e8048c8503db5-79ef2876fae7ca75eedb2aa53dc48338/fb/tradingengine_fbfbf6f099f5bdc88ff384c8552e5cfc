0acea4124f48995a31f172ada5a45327
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - TRADING ENGINE
 * =============================================================================
 *
 * Core trading engine that manages all trading operations, order execution,
 * position management, and integration with Gate.io through SSH tunnel.
 *
 * This is the heart of the trading system that coordinates:
 * - Market data processing
 * - Strategy execution
 * - Order management
 * - Risk management
 * - Portfolio tracking
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_mzgom6xlz() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\trading-engine.ts";
  var hash = "9b52c19dff39d50e4f0a3036441e77938a1652b6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\trading-engine.ts",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "1": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "2": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "3": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "4": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 56
        }
      },
      "5": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "6": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "7": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 29,
          column: 73
        }
      },
      "8": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "9": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "10": {
        start: {
          line: 32,
          column: 14
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "11": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 21
        }
      },
      "12": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 25
        }
      },
      "13": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 29
        }
      },
      "14": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "15": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 16
        }
      },
      "16": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 80
        }
      },
      "21": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 86
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "24": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "25": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 66
        }
      },
      "26": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 49
        }
      },
      "27": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "28": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 49
        }
      },
      "29": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "30": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 51
        }
      },
      "31": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 62
        }
      },
      "32": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "33": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "34": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "35": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 65
        }
      },
      "36": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 45
        }
      },
      "37": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 60
        }
      },
      "38": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 41
        }
      },
      "39": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 54
        }
      },
      "40": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 38
        }
      },
      "41": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "42": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 37
        }
      },
      "43": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 80
        }
      },
      "44": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 78
        }
      },
      "45": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "46": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 82
        }
      },
      "47": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "48": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "49": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 19
        }
      },
      "50": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "51": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 62
        }
      },
      "52": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 45
        }
      },
      "53": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 41
        }
      },
      "54": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 42
        }
      },
      "55": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 34
        }
      },
      "56": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 70
        }
      },
      "57": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 33
        }
      },
      "58": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 74
        }
      },
      "59": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 24
        }
      },
      "60": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "61": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "62": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 19
        }
      },
      "63": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "64": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 67
        }
      },
      "65": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "66": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 55
        }
      },
      "67": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 47
        }
      },
      "68": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "69": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 56
        }
      },
      "70": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "71": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 54
        }
      },
      "72": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 35
        }
      },
      "73": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 67
        }
      },
      "74": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 34
        }
      },
      "75": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 80
        }
      },
      "76": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 24
        }
      },
      "77": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "78": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "79": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 84
        }
      },
      "80": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 75
        }
      },
      "81": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 79
        }
      },
      "82": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 73
        }
      },
      "83": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 68
        }
      },
      "84": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 88
        }
      },
      "85": {
        start: {
          line: 205,
          column: 80
        },
        end: {
          line: 205,
          column: 86
        }
      },
      "86": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "87": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 75
        }
      },
      "88": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 37
        }
      },
      "89": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 64
        }
      },
      "90": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "91": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "92": {
        start: {
          line: 221,
          column: 33
        },
        end: {
          line: 221,
          column: 74
        }
      },
      "93": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 222,
          column: 71
        }
      },
      "94": {
        start: {
          line: 224,
          column: 36
        },
        end: {
          line: 224,
          column: 91
        }
      },
      "95": {
        start: {
          line: 224,
          column: 65
        },
        end: {
          line: 224,
          column: 90
        }
      },
      "96": {
        start: {
          line: 225,
          column: 34
        },
        end: {
          line: 228,
          column: 14
        }
      },
      "97": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 28
        }
      },
      "98": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "99": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 25
        }
      },
      "100": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 69
        }
      },
      "101": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 24
        }
      },
      "102": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "103": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 88
        }
      },
      "104": {
        start: {
          line: 254,
          column: 30
        },
        end: {
          line: 259,
          column: 14
        }
      },
      "105": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "106": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 87
        }
      },
      "107": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 270,
          column: 14
        }
      },
      "108": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 77
        }
      },
      "109": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 46
        }
      },
      "110": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 25
        }
      },
      "111": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 71
        }
      },
      "112": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 24
        }
      },
      "113": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "114": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 66
        }
      },
      "115": {
        start: {
          line: 286,
          column: 30
        },
        end: {
          line: 286,
          column: 70
        }
      },
      "116": {
        start: {
          line: 287,
          column: 31
        },
        end: {
          line: 287,
          column: 70
        }
      },
      "117": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 293,
          column: 14
        }
      },
      "118": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 72
        }
      },
      "119": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 24
        }
      },
      "120": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "121": {
        start: {
          line: 306,
          column: 31
        },
        end: {
          line: 310,
          column: 14
        }
      },
      "122": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 62
        }
      },
      "123": {
        start: {
          line: 313,
          column: 33
        },
        end: {
          line: 318,
          column: 14
        }
      },
      "124": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 54
        }
      },
      "125": {
        start: {
          line: 321,
          column: 32
        },
        end: {
          line: 326,
          column: 14
        }
      },
      "126": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 52
        }
      },
      "127": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 87
        }
      },
      "128": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 72
        }
      },
      "129": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 24
        }
      },
      "130": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "131": {
        start: {
          line: 341,
          column: 31
        },
        end: {
          line: 341,
          column: 70
        }
      },
      "132": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 77
        }
      },
      "133": {
        start: {
          line: 344,
          column: 32
        },
        end: {
          line: 344,
          column: 72
        }
      },
      "134": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 347,
          column: 15
        }
      },
      "135": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 70
        }
      },
      "136": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 70
        }
      },
      "137": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "138": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 55
        }
      },
      "139": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 56
        }
      },
      "140": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 65
        }
      },
      "141": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 69
        }
      },
      "142": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 24
        }
      },
      "143": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 386,
          column: 18
        }
      },
      "144": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 385,
          column: 13
        }
      },
      "145": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 381,
          column: 17
        }
      },
      "146": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 380,
          column: 21
        }
      },
      "147": {
        start: {
          line: 379,
          column: 24
        },
        end: {
          line: 379,
          column: 74
        }
      },
      "148": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 74
        }
      },
      "149": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 59
        }
      },
      "150": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 404,
          column: 18
        }
      },
      "151": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 403,
          column: 13
        }
      },
      "152": {
        start: {
          line: 395,
          column: 31
        },
        end: {
          line: 395,
          column: 59
        }
      },
      "153": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 399,
          column: 17
        }
      },
      "154": {
        start: {
          line: 397,
          column: 20
        },
        end: {
          line: 397,
          column: 82
        }
      },
      "155": {
        start: {
          line: 398,
          column: 20
        },
        end: {
          line: 398,
          column: 55
        }
      },
      "156": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 402,
          column: 69
        }
      },
      "157": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 54
        }
      },
      "158": {
        start: {
          line: 412,
          column: 32
        },
        end: {
          line: 412,
          column: 80
        }
      },
      "159": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "160": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 44
        }
      },
      "161": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 91
        }
      },
      "162": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "163": {
        start: {
          line: 424,
          column: 31
        },
        end: {
          line: 424,
          column: 85
        }
      },
      "164": {
        start: {
          line: 426,
          column: 27
        },
        end: {
          line: 426,
          column: 68
        }
      },
      "165": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 438,
          column: 13
        }
      },
      "166": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 433,
          column: 19
        }
      },
      "167": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 437,
          column: 17
        }
      },
      "168": {
        start: {
          line: 436,
          column: 20
        },
        end: {
          line: 436,
          column: 60
        }
      },
      "169": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 87
        }
      },
      "170": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "171": {
        start: {
          line: 449,
          column: 27
        },
        end: {
          line: 449,
          column: 79
        }
      },
      "172": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 88
        }
      },
      "173": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 73
        }
      },
      "174": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 465,
          column: 10
        }
      },
      "175": {
        start: {
          line: 468,
          column: 0
        },
        end: {
          line: 468,
          column: 38
        }
      },
      "176": {
        start: {
          line: 469,
          column: 0
        },
        end: {
          line: 469,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 49
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 23
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 80
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 18
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 117
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 21
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 146
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 179
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 205,
            column: 70
          },
          end: {
            line: 205,
            column: 71
          }
        },
        loc: {
          start: {
            line: 205,
            column: 80
          },
          end: {
            line: 205,
            column: 86
          }
        },
        line: 205
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 28
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 219
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 224,
            column: 56
          },
          end: {
            line: 224,
            column: 57
          }
        },
        loc: {
          start: {
            line: 224,
            column: 65
          },
          end: {
            line: 224,
            column: 90
          }
        },
        line: 224
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 225,
            column: 57
          },
          end: {
            line: 225,
            column: 58
          }
        },
        loc: {
          start: {
            line: 225,
            column: 66
          },
          end: {
            line: 228,
            column: 13
          }
        },
        line: 225
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 52
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 250
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 31
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 283
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 303
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 32
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 338
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 28
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 357
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 32
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 373
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 374,
            column: 46
          },
          end: {
            line: 374,
            column: 47
          }
        },
        loc: {
          start: {
            line: 374,
            column: 58
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 374
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        loc: {
          start: {
            line: 392,
            column: 28
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 392
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 393,
            column: 47
          },
          end: {
            line: 393,
            column: 48
          }
        },
        loc: {
          start: {
            line: 393,
            column: 59
          },
          end: {
            line: 404,
            column: 9
          }
        },
        line: 393
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 5
          }
        },
        loc: {
          start: {
            line: 410,
            column: 29
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 410
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        loc: {
          start: {
            line: 421,
            column: 57
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 421
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 447,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        loc: {
          start: {
            line: 447,
            column: 39
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 447
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 16
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 459
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 60,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 21
          },
          end: {
            line: 60,
            column: 35
          }
        }, {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 60,
            column: 62
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "2": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "3": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "4": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "5": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "6": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "7": {
        loc: {
          start: {
            line: 233,
            column: 25
          },
          end: {
            line: 233,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 54
          },
          end: {
            line: 233,
            column: 107
          }
        }, {
          start: {
            line: 233,
            column: 110
          },
          end: {
            line: 233,
            column: 111
          }
        }],
        line: 233
      },
      "8": {
        loc: {
          start: {
            line: 238,
            column: 31
          },
          end: {
            line: 238,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 60
          },
          end: {
            line: 238,
            column: 113
          }
        }, {
          start: {
            line: 238,
            column: 116
          },
          end: {
            line: 238,
            column: 120
          }
        }],
        line: 238
      },
      "9": {
        loc: {
          start: {
            line: 258,
            column: 23
          },
          end: {
            line: 258,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 23
          },
          end: {
            line: 258,
            column: 28
          }
        }, {
          start: {
            line: 258,
            column: 32
          },
          end: {
            line: 258,
            column: 33
          }
        }],
        line: 258
      },
      "10": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "11": {
        loc: {
          start: {
            line: 269,
            column: 22
          },
          end: {
            line: 269,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 30
          },
          end: {
            line: 269,
            column: 37
          }
        }, {
          start: {
            line: 269,
            column: 40
          },
          end: {
            line: 269,
            column: 48
          }
        }],
        line: 269
      },
      "12": {
        loc: {
          start: {
            line: 346,
            column: 24
          },
          end: {
            line: 346,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 24
          },
          end: {
            line: 346,
            column: 43
          }
        }, {
          start: {
            line: 346,
            column: 47
          },
          end: {
            line: 346,
            column: 52
          }
        }],
        line: 346
      },
      "13": {
        loc: {
          start: {
            line: 378,
            column: 20
          },
          end: {
            line: 380,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 20
          },
          end: {
            line: 380,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "14": {
        loc: {
          start: {
            line: 396,
            column: 16
          },
          end: {
            line: 399,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 16
          },
          end: {
            line: 399,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "15": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "16": {
        loc: {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 438,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 438,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "17": {
        loc: {
          start: {
            line: 427,
            column: 16
          },
          end: {
            line: 427,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 16
          },
          end: {
            line: 427,
            column: 22
          }
        }, {
          start: {
            line: 427,
            column: 26
          },
          end: {
            line: 427,
            column: 50
          }
        }],
        line: 427
      },
      "18": {
        loc: {
          start: {
            line: 435,
            column: 16
          },
          end: {
            line: 437,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 16
          },
          end: {
            line: 437,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\trading-engine.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\trading-engine.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - TRADING ENGINE\r\n * =============================================================================\r\n * \r\n * Core trading engine that manages all trading operations, order execution,\r\n * position management, and integration with Gate.io through SSH tunnel.\r\n * \r\n * This is the heart of the trading system that coordinates:\r\n * - Market data processing\r\n * - Strategy execution\r\n * - Order management\r\n * - Risk management\r\n * - Portfolio tracking\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { Logger } from '../core/logging/logger';\r\nimport { GateIOClient } from './api/gate-io-client';\r\nimport { OrderManager } from './orders/order-manager';\r\nimport { BalanceManager } from './account/balance-manager';\r\nimport { PortfolioRiskManager } from './risk/portfolio-risk-manager';\r\nimport { MovingAverageStrategy } from './strategies/moving-average';\r\nimport { MACDStrategy } from './strategies/macd';\r\nimport { RSIStrategy } from './strategies/rsi';\r\n\r\n/**\r\n * Trading engine configuration interface\r\n */\r\nexport interface TradingEngineConfig {\r\n  exchange: string;\r\n  apiKey: string;\r\n  apiSecret: string;\r\n  passphrase?: string;\r\n  testnet: boolean;\r\n  baseUrl?: string;\r\n  defaultStrategy: string;\r\n  riskSettings: {\r\n    maxPositionSize: number;\r\n    maxDailyLoss: number;\r\n    stopLossPercent: number;\r\n    takeProfitPercent: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Trading engine system health interface\r\n */\r\nexport interface TradingSystemHealth {\r\n  isHealthy: boolean;\r\n  components: {\r\n    apiConnection: boolean;\r\n    orderManager: boolean;\r\n    balanceManager: boolean;\r\n    riskManager: boolean;\r\n    strategies: boolean;\r\n  };\r\n  lastUpdate: Date;\r\n  errors: string[];\r\n  warnings: string[];\r\n}\r\n\r\n/**\r\n * Trading statistics interface\r\n */\r\nexport interface TradingStats {\r\n  totalTrades: number;\r\n  winningTrades: number;\r\n  losingTrades: number;\r\n  winRate: number;\r\n  totalPnL: number;\r\n  dailyPnL: number;\r\n  maxDrawdown: number;\r\n  sharpeRatio: number;\r\n  lastTradeTime: Date | null;\r\n}\r\n\r\n/**\r\n * Main trading engine class\r\n * Orchestrates all trading operations and system components\r\n */\r\nexport class TradingEngine extends EventEmitter {\r\n  private logger: Logger;\r\n  private config: TradingEngineConfig;\r\n  private gateIOClient: GateIOClient;\r\n  private orderManager: OrderManager;\r\n  private balanceManager: BalanceManager;\r\n  private riskManager: PortfolioRiskManager;\r\n  private strategies: Map<string, any>;\r\n  private isRunning: boolean = false;\r\n  private isInitialized: boolean = false;\r\n  private marketDataInterval: NodeJS.Timeout | null = null;\r\n  private healthCheckInterval: NodeJS.Timeout | null = null;\r\n\r\n  constructor(config: TradingEngineConfig) {\r\n    super();\r\n    this.logger = new Logger('TradingEngine');\r\n    this.config = config;\r\n    this.strategies = new Map();\r\n    \r\n    // Initialize components\r\n    this.gateIOClient = new GateIOClient({\r\n      apiKey: config.apiKey,\r\n      apiSecret: config.apiSecret,\r\n      passphrase: config.passphrase,\r\n      testnet: config.testnet,\r\n      baseUrl: config.baseUrl || 'http://localhost:8443' // SSH tunnel endpoint\r\n    });\r\n\r\n    this.orderManager = new OrderManager(this.gateIOClient);\r\n    this.balanceManager = new BalanceManager(this.gateIOClient);\r\n    this.riskManager = new PortfolioRiskManager({\r\n      maxPositionSize: config.riskSettings.maxPositionSize,\r\n      maxDailyLoss: config.riskSettings.maxDailyLoss,\r\n      stopLossPercent: config.riskSettings.stopLossPercent,\r\n      takeProfitPercent: config.riskSettings.takeProfitPercent\r\n    });\r\n\r\n    this.logger.info('Trading Engine created', {\r\n      exchange: config.exchange,\r\n      testnet: config.testnet,\r\n      defaultStrategy: config.defaultStrategy\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize the trading engine\r\n   * Sets up all components and validates connections\r\n   */\r\n  async initialize(): Promise<void> {\r\n    try {\r\n      this.logger.info('\uD83D\uDD27 Initializing Trading Engine...');\r\n\r\n      // Initialize Gate.io API client\r\n      await this.gateIOClient.initialize();\r\n      this.logger.info('\u2705 Gate.io API client initialized');\r\n\r\n      // Initialize order manager\r\n      await this.orderManager.initialize();\r\n      this.logger.info('\u2705 Order manager initialized');\r\n\r\n      // Initialize balance manager\r\n      await this.balanceManager.initialize();\r\n      this.logger.info('\u2705 Balance manager initialized');\r\n\r\n      // Initialize risk manager\r\n      await this.riskManager.initialize();\r\n      this.logger.info('\u2705 Risk manager initialized');\r\n\r\n      // Initialize trading strategies\r\n      await this.initializeStrategies();\r\n      this.logger.info('\u2705 Trading strategies initialized');\r\n\r\n      // Test API connectivity\r\n      await this.testAPIConnectivity();\r\n      this.logger.info('\u2705 API connectivity verified');\r\n\r\n      // Load initial account data\r\n      await this.loadAccountData();\r\n      this.logger.info('\u2705 Account data loaded');\r\n\r\n      this.isInitialized = true;\r\n      this.logger.info('\u2705 Trading Engine initialization complete');\r\n\r\n      this.emit('initialized');\r\n\r\n    } catch (error) {\r\n      this.logger.error('\u274C Trading Engine initialization failed:', error);\r\n      throw new Error(`Trading Engine initialization failed: ${error}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start trading operations\r\n   * Begins market data processing and strategy execution\r\n   */\r\n  async start(): Promise<void> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('Trading Engine must be initialized before starting');\r\n    }\r\n\r\n    if (this.isRunning) {\r\n      this.logger.warn('Trading Engine is already running');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.logger.info('\uD83D\uDE80 Starting Trading Engine...');\r\n\r\n      // Start market data processing\r\n      this.startMarketDataProcessing();\r\n\r\n      // Start health monitoring\r\n      this.startHealthMonitoring();\r\n\r\n      // Start strategy execution\r\n      this.startStrategyExecution();\r\n\r\n      this.isRunning = true;\r\n      this.logger.info('\u2705 Trading Engine started successfully');\r\n\r\n      this.emit('started');\r\n\r\n    } catch (error) {\r\n      this.logger.error('\u274C Failed to start Trading Engine:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop trading operations\r\n   * Gracefully shuts down all trading activities\r\n   */\r\n  async shutdown(): Promise<void> {\r\n    if (!this.isRunning) {\r\n      this.logger.warn('Trading Engine is not running');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.logger.info('\uD83D\uDED1 Shutting down Trading Engine...');\r\n\r\n      // Stop market data processing\r\n      if (this.marketDataInterval) {\r\n        clearInterval(this.marketDataInterval);\r\n        this.marketDataInterval = null;\r\n      }\r\n\r\n      // Stop health monitoring\r\n      if (this.healthCheckInterval) {\r\n        clearInterval(this.healthCheckInterval);\r\n        this.healthCheckInterval = null;\r\n      }\r\n\r\n      // Cancel all open orders\r\n      await this.orderManager.cancelAllOrders();\r\n\r\n      // Close all positions (if configured)\r\n      // await this.closeAllPositions();\r\n\r\n      this.isRunning = false;\r\n      this.logger.info('\u2705 Trading Engine shutdown complete');\r\n\r\n      this.emit('shutdown');\r\n\r\n    } catch (error) {\r\n      this.logger.error('\u274C Error during Trading Engine shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get system health status\r\n   */\r\n  async getSystemHealth(): Promise<TradingSystemHealth> {\r\n    const health: TradingSystemHealth = {\r\n      isHealthy: true,\r\n      components: {\r\n        apiConnection: false,\r\n        orderManager: false,\r\n        balanceManager: false,\r\n        riskManager: false,\r\n        strategies: false\r\n      },\r\n      lastUpdate: new Date(),\r\n      errors: [],\r\n      warnings: []\r\n    };\r\n\r\n    try {\r\n      // Check API connection\r\n      health.components.apiConnection = await this.gateIOClient.isConnected();\r\n      \r\n      // Check order manager\r\n      health.components.orderManager = this.orderManager.isHealthy();\r\n      \r\n      // Check balance manager\r\n      health.components.balanceManager = this.balanceManager.isHealthy();\r\n      \r\n      // Check risk manager\r\n      health.components.riskManager = this.riskManager.isHealthy();\r\n      \r\n      // Check strategies\r\n      health.components.strategies = this.strategies.size > 0;\r\n\r\n      // Overall health\r\n      health.isHealthy = Object.values(health.components).every(status => status);\r\n\r\n      if (!health.isHealthy) {\r\n        health.errors.push('One or more components are unhealthy');\r\n      }\r\n\r\n    } catch (error) {\r\n      health.isHealthy = false;\r\n      health.errors.push(`Health check failed: ${error}`);\r\n    }\r\n\r\n    return health;\r\n  }\r\n\r\n  /**\r\n   * Get trading statistics\r\n   */\r\n  async getTradingStats(): Promise<TradingStats> {\r\n    try {\r\n      const orderHistory = await this.orderManager.getOrderHistory();\r\n      const balance = await this.balanceManager.getTotalBalance();\r\n\r\n      // Calculate statistics from order history\r\n      const completedTrades = orderHistory.filter(order => order.status === 'filled');\r\n      const winningTrades = completedTrades.filter(order => {\r\n        // This would need proper P&L calculation\r\n        return true; // Placeholder\r\n      });\r\n\r\n      const stats: TradingStats = {\r\n        totalTrades: completedTrades.length,\r\n        winningTrades: winningTrades.length,\r\n        losingTrades: completedTrades.length - winningTrades.length,\r\n        winRate: completedTrades.length > 0 ? (winningTrades.length / completedTrades.length) * 100 : 0,\r\n        totalPnL: 0, // Would calculate from trade history\r\n        dailyPnL: 0, // Would calculate from today's trades\r\n        maxDrawdown: 0, // Would calculate from balance history\r\n        sharpeRatio: 0, // Would calculate from returns\r\n        lastTradeTime: completedTrades.length > 0 ? completedTrades[completedTrades.length - 1].timestamp : null\r\n      };\r\n\r\n      return stats;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error getting trading stats:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute a manual trade\r\n   */\r\n  async executeTrade(symbol: string, side: 'buy' | 'sell', amount: number, price?: number): Promise<any> {\r\n    try {\r\n      this.logger.info('Executing manual trade', { symbol, side, amount, price });\r\n\r\n      // Risk check\r\n      const riskCheck = await this.riskManager.validateTrade({\r\n        symbol,\r\n        side,\r\n        amount,\r\n        price: price || 0\r\n      });\r\n\r\n      if (!riskCheck.approved) {\r\n        throw new Error(`Trade rejected by risk manager: ${riskCheck.reason}`);\r\n      }\r\n\r\n      // Execute order\r\n      const order = await this.orderManager.createOrder({\r\n        symbol,\r\n        side,\r\n        amount,\r\n        price,\r\n        type: price ? 'limit' : 'market'\r\n      });\r\n\r\n      this.logger.info('Manual trade executed', { orderId: order.id });\r\n      this.emit('tradeExecuted', order);\r\n\r\n      return order;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Manual trade execution failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current portfolio status\r\n   */\r\n  async getPortfolioStatus(): Promise<any> {\r\n    try {\r\n      const balance = await this.balanceManager.getBalance();\r\n      const positions = await this.balanceManager.getPositions();\r\n      const openOrders = await this.orderManager.getOpenOrders();\r\n\r\n      return {\r\n        balance,\r\n        positions,\r\n        openOrders,\r\n        timestamp: new Date()\r\n      };\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error getting portfolio status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize trading strategies\r\n   */\r\n  private async initializeStrategies(): Promise<void> {\r\n    try {\r\n      // Initialize Moving Average strategy\r\n      const maStrategy = new MovingAverageStrategy({\r\n        fastPeriod: 20,\r\n        slowPeriod: 50,\r\n        symbol: 'BTC_USDT'\r\n      });\r\n      this.strategies.set('moving-average', maStrategy);\r\n\r\n      // Initialize MACD strategy\r\n      const macdStrategy = new MACDStrategy({\r\n        fastPeriod: 12,\r\n        slowPeriod: 26,\r\n        signalPeriod: 9,\r\n        symbol: 'BTC_USDT'\r\n      });\r\n      this.strategies.set('macd', macdStrategy);\r\n\r\n      // Initialize RSI strategy\r\n      const rsiStrategy = new RSIStrategy({\r\n        period: 14,\r\n        overbought: 70,\r\n        oversold: 30,\r\n        symbol: 'BTC_USDT'\r\n      });\r\n      this.strategies.set('rsi', rsiStrategy);\r\n\r\n      this.logger.info(`Initialized ${this.strategies.size} trading strategies`);\r\n\r\n    } catch (error) {\r\n      this.logger.error('Strategy initialization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test API connectivity\r\n   */\r\n  private async testAPIConnectivity(): Promise<void> {\r\n    try {\r\n      // Test basic API connectivity\r\n      const serverTime = await this.gateIOClient.getServerTime();\r\n      this.logger.info('API connectivity test passed', { serverTime });\r\n\r\n      // Test account access\r\n      const accountInfo = await this.gateIOClient.getAccountInfo();\r\n      this.logger.info('Account access verified', { \r\n        userId: accountInfo.user_id || 'N/A' \r\n      });\r\n\r\n    } catch (error) {\r\n      this.logger.error('API connectivity test failed:', error);\r\n      throw new Error(`API connectivity test failed: ${error}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load initial account data\r\n   */\r\n  private async loadAccountData(): Promise<void> {\r\n    try {\r\n      // Load account balance\r\n      await this.balanceManager.refreshBalance();\r\n      \r\n      // Load open orders\r\n      await this.orderManager.refreshOpenOrders();\r\n\r\n      this.logger.info('Account data loaded successfully');\r\n\r\n    } catch (error) {\r\n      this.logger.error('Failed to load account data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start market data processing\r\n   */\r\n  private startMarketDataProcessing(): void {\r\n    this.marketDataInterval = setInterval(async () => {\r\n      try {\r\n        // Process market data for each strategy\r\n        for (const [name, strategy] of this.strategies) {\r\n          if (strategy.isActive) {\r\n            await this.processStrategySignals(name, strategy);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        this.logger.error('Market data processing error:', error);\r\n      }\r\n    }, 30000); // Process every 30 seconds\r\n\r\n    this.logger.info('Market data processing started');\r\n  }\r\n\r\n  /**\r\n   * Start health monitoring\r\n   */\r\n  private startHealthMonitoring(): void {\r\n    this.healthCheckInterval = setInterval(async () => {\r\n      try {\r\n        const health = await this.getSystemHealth();\r\n        if (!health.isHealthy) {\r\n          this.logger.warn('System health check failed', health.errors);\r\n          this.emit('healthWarning', health);\r\n        }\r\n      } catch (error) {\r\n        this.logger.error('Health monitoring error:', error);\r\n      }\r\n    }, 60000); // Check every minute\r\n\r\n    this.logger.info('Health monitoring started');\r\n  }\r\n\r\n  /**\r\n   * Start strategy execution\r\n   */\r\n  private startStrategyExecution(): void {\r\n    // Enable the default strategy\r\n    const defaultStrategy = this.strategies.get(this.config.defaultStrategy);\r\n    if (defaultStrategy) {\r\n      defaultStrategy.isActive = true;\r\n      this.logger.info(`Activated default strategy: ${this.config.defaultStrategy}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process signals from a trading strategy\r\n   */\r\n  private async processStrategySignals(strategyName: string, strategy: any): Promise<void> {\r\n    try {\r\n      // Get market data\r\n      const marketData = await this.gateIOClient.getMarketData(strategy.symbol);\r\n      \r\n      // Generate trading signal\r\n      const signal = await strategy.generateSignal(marketData);\r\n      \r\n      if (signal && signal.action !== 'hold') {\r\n        this.logger.info(`Strategy signal generated`, {\r\n          strategy: strategyName,\r\n          signal: signal.action,\r\n          symbol: signal.symbol,\r\n          confidence: signal.confidence\r\n        });\r\n\r\n        // Execute trade if confidence is high enough\r\n        if (signal.confidence > 0.7) {\r\n          await this.executeStrategyTrade(signal);\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      this.logger.error(`Strategy processing error for ${strategyName}:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute a trade based on strategy signal\r\n   */\r\n  private async executeStrategyTrade(signal: any): Promise<void> {\r\n    try {\r\n      const amount = await this.riskManager.calculatePositionSize(signal);\r\n      \r\n      await this.executeTrade(\r\n        signal.symbol,\r\n        signal.action,\r\n        amount,\r\n        signal.price\r\n      );\r\n\r\n    } catch (error) {\r\n      this.logger.error('Strategy trade execution failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get trading engine status for monitoring\r\n   */\r\n  getStatus(): {\r\n    isRunning: boolean;\r\n    isInitialized: boolean;\r\n    strategiesCount: number;\r\n    timestamp: number;\r\n  } {\r\n    return {\r\n      isRunning: this.isRunning,\r\n      isInitialized: this.isInitialized,\r\n      strategiesCount: this.strategies.size,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\nexport default TradingEngine;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9b52c19dff39d50e4f0a3036441e77938a1652b6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mzgom6xlz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mzgom6xlz();
cov_mzgom6xlz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_mzgom6xlz().s[1]++;
exports.TradingEngine = void 0;
const events_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[3]++, require("../core/logging/logger"));
const gate_io_client_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[4]++, require("./api/gate-io-client"));
const order_manager_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[5]++, require("./orders/order-manager"));
const balance_manager_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[6]++, require("./account/balance-manager"));
const portfolio_risk_manager_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[7]++, require("./risk/portfolio-risk-manager"));
const moving_average_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[8]++, require("./strategies/moving-average"));
const macd_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[9]++, require("./strategies/macd"));
const rsi_1 =
/* istanbul ignore next */
(cov_mzgom6xlz().s[10]++, require("./strategies/rsi"));
/**
 * Main trading engine class
 * Orchestrates all trading operations and system components
 */
class TradingEngine extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  logger;
  config;
  gateIOClient;
  orderManager;
  balanceManager;
  riskManager;
  strategies;
  isRunning =
  /* istanbul ignore next */
  (cov_mzgom6xlz().s[11]++, false);
  isInitialized =
  /* istanbul ignore next */
  (cov_mzgom6xlz().s[12]++, false);
  marketDataInterval =
  /* istanbul ignore next */
  (cov_mzgom6xlz().s[13]++, null);
  healthCheckInterval =
  /* istanbul ignore next */
  (cov_mzgom6xlz().s[14]++, null);
  constructor(config) {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[0]++;
    cov_mzgom6xlz().s[15]++;
    super();
    /* istanbul ignore next */
    cov_mzgom6xlz().s[16]++;
    this.logger = new logger_1.Logger('TradingEngine');
    /* istanbul ignore next */
    cov_mzgom6xlz().s[17]++;
    this.config = config;
    /* istanbul ignore next */
    cov_mzgom6xlz().s[18]++;
    this.strategies = new Map();
    // Initialize components
    /* istanbul ignore next */
    cov_mzgom6xlz().s[19]++;
    this.gateIOClient = new gate_io_client_1.GateIOClient({
      apiKey: config.apiKey,
      apiSecret: config.apiSecret,
      passphrase: config.passphrase,
      testnet: config.testnet,
      baseUrl:
      /* istanbul ignore next */
      (cov_mzgom6xlz().b[0][0]++, config.baseUrl) ||
      /* istanbul ignore next */
      (cov_mzgom6xlz().b[0][1]++, 'http://localhost:8443') // SSH tunnel endpoint
    });
    /* istanbul ignore next */
    cov_mzgom6xlz().s[20]++;
    this.orderManager = new order_manager_1.OrderManager(this.gateIOClient);
    /* istanbul ignore next */
    cov_mzgom6xlz().s[21]++;
    this.balanceManager = new balance_manager_1.BalanceManager(this.gateIOClient);
    /* istanbul ignore next */
    cov_mzgom6xlz().s[22]++;
    this.riskManager = new portfolio_risk_manager_1.PortfolioRiskManager({
      maxPositionSize: config.riskSettings.maxPositionSize,
      maxDailyLoss: config.riskSettings.maxDailyLoss,
      stopLossPercent: config.riskSettings.stopLossPercent,
      takeProfitPercent: config.riskSettings.takeProfitPercent
    });
    /* istanbul ignore next */
    cov_mzgom6xlz().s[23]++;
    this.logger.info('Trading Engine created', {
      exchange: config.exchange,
      testnet: config.testnet,
      defaultStrategy: config.defaultStrategy
    });
  }
  /**
   * Initialize the trading engine
   * Sets up all components and validates connections
   */
  async initialize() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[1]++;
    cov_mzgom6xlz().s[24]++;
    try {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[25]++;
      this.logger.info('🔧 Initializing Trading Engine...');
      // Initialize Gate.io API client
      /* istanbul ignore next */
      cov_mzgom6xlz().s[26]++;
      await this.gateIOClient.initialize();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[27]++;
      this.logger.info('✅ Gate.io API client initialized');
      // Initialize order manager
      /* istanbul ignore next */
      cov_mzgom6xlz().s[28]++;
      await this.orderManager.initialize();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[29]++;
      this.logger.info('✅ Order manager initialized');
      // Initialize balance manager
      /* istanbul ignore next */
      cov_mzgom6xlz().s[30]++;
      await this.balanceManager.initialize();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[31]++;
      this.logger.info('✅ Balance manager initialized');
      // Initialize risk manager
      /* istanbul ignore next */
      cov_mzgom6xlz().s[32]++;
      await this.riskManager.initialize();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[33]++;
      this.logger.info('✅ Risk manager initialized');
      // Initialize trading strategies
      /* istanbul ignore next */
      cov_mzgom6xlz().s[34]++;
      await this.initializeStrategies();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[35]++;
      this.logger.info('✅ Trading strategies initialized');
      // Test API connectivity
      /* istanbul ignore next */
      cov_mzgom6xlz().s[36]++;
      await this.testAPIConnectivity();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[37]++;
      this.logger.info('✅ API connectivity verified');
      // Load initial account data
      /* istanbul ignore next */
      cov_mzgom6xlz().s[38]++;
      await this.loadAccountData();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[39]++;
      this.logger.info('✅ Account data loaded');
      /* istanbul ignore next */
      cov_mzgom6xlz().s[40]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_mzgom6xlz().s[41]++;
      this.logger.info('✅ Trading Engine initialization complete');
      /* istanbul ignore next */
      cov_mzgom6xlz().s[42]++;
      this.emit('initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[43]++;
      this.logger.error('❌ Trading Engine initialization failed:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[44]++;
      throw new Error(`Trading Engine initialization failed: ${error}`);
    }
  }
  /**
   * Start trading operations
   * Begins market data processing and strategy execution
   */
  async start() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[2]++;
    cov_mzgom6xlz().s[45]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_mzgom6xlz().b[1][0]++;
      cov_mzgom6xlz().s[46]++;
      throw new Error('Trading Engine must be initialized before starting');
    } else
    /* istanbul ignore next */
    {
      cov_mzgom6xlz().b[1][1]++;
    }
    cov_mzgom6xlz().s[47]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_mzgom6xlz().b[2][0]++;
      cov_mzgom6xlz().s[48]++;
      this.logger.warn('Trading Engine is already running');
      /* istanbul ignore next */
      cov_mzgom6xlz().s[49]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_mzgom6xlz().b[2][1]++;
    }
    cov_mzgom6xlz().s[50]++;
    try {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[51]++;
      this.logger.info('🚀 Starting Trading Engine...');
      // Start market data processing
      /* istanbul ignore next */
      cov_mzgom6xlz().s[52]++;
      this.startMarketDataProcessing();
      // Start health monitoring
      /* istanbul ignore next */
      cov_mzgom6xlz().s[53]++;
      this.startHealthMonitoring();
      // Start strategy execution
      /* istanbul ignore next */
      cov_mzgom6xlz().s[54]++;
      this.startStrategyExecution();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[55]++;
      this.isRunning = true;
      /* istanbul ignore next */
      cov_mzgom6xlz().s[56]++;
      this.logger.info('✅ Trading Engine started successfully');
      /* istanbul ignore next */
      cov_mzgom6xlz().s[57]++;
      this.emit('started');
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[58]++;
      this.logger.error('❌ Failed to start Trading Engine:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[59]++;
      throw error;
    }
  }
  /**
   * Stop trading operations
   * Gracefully shuts down all trading activities
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[3]++;
    cov_mzgom6xlz().s[60]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_mzgom6xlz().b[3][0]++;
      cov_mzgom6xlz().s[61]++;
      this.logger.warn('Trading Engine is not running');
      /* istanbul ignore next */
      cov_mzgom6xlz().s[62]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_mzgom6xlz().b[3][1]++;
    }
    cov_mzgom6xlz().s[63]++;
    try {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[64]++;
      this.logger.info('🛑 Shutting down Trading Engine...');
      // Stop market data processing
      /* istanbul ignore next */
      cov_mzgom6xlz().s[65]++;
      if (this.marketDataInterval) {
        /* istanbul ignore next */
        cov_mzgom6xlz().b[4][0]++;
        cov_mzgom6xlz().s[66]++;
        clearInterval(this.marketDataInterval);
        /* istanbul ignore next */
        cov_mzgom6xlz().s[67]++;
        this.marketDataInterval = null;
      } else
      /* istanbul ignore next */
      {
        cov_mzgom6xlz().b[4][1]++;
      }
      // Stop health monitoring
      cov_mzgom6xlz().s[68]++;
      if (this.healthCheckInterval) {
        /* istanbul ignore next */
        cov_mzgom6xlz().b[5][0]++;
        cov_mzgom6xlz().s[69]++;
        clearInterval(this.healthCheckInterval);
        /* istanbul ignore next */
        cov_mzgom6xlz().s[70]++;
        this.healthCheckInterval = null;
      } else
      /* istanbul ignore next */
      {
        cov_mzgom6xlz().b[5][1]++;
      }
      // Cancel all open orders
      cov_mzgom6xlz().s[71]++;
      await this.orderManager.cancelAllOrders();
      // Close all positions (if configured)
      // await this.closeAllPositions();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[72]++;
      this.isRunning = false;
      /* istanbul ignore next */
      cov_mzgom6xlz().s[73]++;
      this.logger.info('✅ Trading Engine shutdown complete');
      /* istanbul ignore next */
      cov_mzgom6xlz().s[74]++;
      this.emit('shutdown');
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[75]++;
      this.logger.error('❌ Error during Trading Engine shutdown:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[76]++;
      throw error;
    }
  }
  /**
   * Get system health status
   */
  async getSystemHealth() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[4]++;
    const health =
    /* istanbul ignore next */
    (cov_mzgom6xlz().s[77]++, {
      isHealthy: true,
      components: {
        apiConnection: false,
        orderManager: false,
        balanceManager: false,
        riskManager: false,
        strategies: false
      },
      lastUpdate: new Date(),
      errors: [],
      warnings: []
    });
    /* istanbul ignore next */
    cov_mzgom6xlz().s[78]++;
    try {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[79]++;
      // Check API connection
      health.components.apiConnection = await this.gateIOClient.isConnected();
      // Check order manager
      /* istanbul ignore next */
      cov_mzgom6xlz().s[80]++;
      health.components.orderManager = this.orderManager.isHealthy();
      // Check balance manager
      /* istanbul ignore next */
      cov_mzgom6xlz().s[81]++;
      health.components.balanceManager = this.balanceManager.isHealthy();
      // Check risk manager
      /* istanbul ignore next */
      cov_mzgom6xlz().s[82]++;
      health.components.riskManager = this.riskManager.isHealthy();
      // Check strategies
      /* istanbul ignore next */
      cov_mzgom6xlz().s[83]++;
      health.components.strategies = this.strategies.size > 0;
      // Overall health
      /* istanbul ignore next */
      cov_mzgom6xlz().s[84]++;
      health.isHealthy = Object.values(health.components).every(status => {
        /* istanbul ignore next */
        cov_mzgom6xlz().f[5]++;
        cov_mzgom6xlz().s[85]++;
        return status;
      });
      /* istanbul ignore next */
      cov_mzgom6xlz().s[86]++;
      if (!health.isHealthy) {
        /* istanbul ignore next */
        cov_mzgom6xlz().b[6][0]++;
        cov_mzgom6xlz().s[87]++;
        health.errors.push('One or more components are unhealthy');
      } else
      /* istanbul ignore next */
      {
        cov_mzgom6xlz().b[6][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[88]++;
      health.isHealthy = false;
      /* istanbul ignore next */
      cov_mzgom6xlz().s[89]++;
      health.errors.push(`Health check failed: ${error}`);
    }
    /* istanbul ignore next */
    cov_mzgom6xlz().s[90]++;
    return health;
  }
  /**
   * Get trading statistics
   */
  async getTradingStats() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[6]++;
    cov_mzgom6xlz().s[91]++;
    try {
      const orderHistory =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[92]++, await this.orderManager.getOrderHistory());
      const balance =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[93]++, await this.balanceManager.getTotalBalance());
      // Calculate statistics from order history
      const completedTrades =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[94]++, orderHistory.filter(order => {
        /* istanbul ignore next */
        cov_mzgom6xlz().f[7]++;
        cov_mzgom6xlz().s[95]++;
        return order.status === 'filled';
      }));
      const winningTrades =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[96]++, completedTrades.filter(order => {
        /* istanbul ignore next */
        cov_mzgom6xlz().f[8]++;
        cov_mzgom6xlz().s[97]++;
        // This would need proper P&L calculation
        return true; // Placeholder
      }));
      const stats =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[98]++, {
        totalTrades: completedTrades.length,
        winningTrades: winningTrades.length,
        losingTrades: completedTrades.length - winningTrades.length,
        winRate: completedTrades.length > 0 ?
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[7][0]++, winningTrades.length / completedTrades.length * 100) :
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[7][1]++, 0),
        totalPnL: 0,
        // Would calculate from trade history
        dailyPnL: 0,
        // Would calculate from today's trades
        maxDrawdown: 0,
        // Would calculate from balance history
        sharpeRatio: 0,
        // Would calculate from returns
        lastTradeTime: completedTrades.length > 0 ?
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[8][0]++, completedTrades[completedTrades.length - 1].timestamp) :
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[8][1]++, null)
      });
      /* istanbul ignore next */
      cov_mzgom6xlz().s[99]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[100]++;
      this.logger.error('Error getting trading stats:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[101]++;
      throw error;
    }
  }
  /**
   * Execute a manual trade
   */
  async executeTrade(symbol, side, amount, price) {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[9]++;
    cov_mzgom6xlz().s[102]++;
    try {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[103]++;
      this.logger.info('Executing manual trade', {
        symbol,
        side,
        amount,
        price
      });
      // Risk check
      const riskCheck =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[104]++, await this.riskManager.validateTrade({
        symbol,
        side,
        amount,
        price:
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[9][0]++, price) ||
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[9][1]++, 0)
      }));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[105]++;
      if (!riskCheck.approved) {
        /* istanbul ignore next */
        cov_mzgom6xlz().b[10][0]++;
        cov_mzgom6xlz().s[106]++;
        throw new Error(`Trade rejected by risk manager: ${riskCheck.reason}`);
      } else
      /* istanbul ignore next */
      {
        cov_mzgom6xlz().b[10][1]++;
      }
      // Execute order
      const order =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[107]++, await this.orderManager.createOrder({
        symbol,
        side,
        amount,
        price,
        type: price ?
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[11][0]++, 'limit') :
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[11][1]++, 'market')
      }));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[108]++;
      this.logger.info('Manual trade executed', {
        orderId: order.id
      });
      /* istanbul ignore next */
      cov_mzgom6xlz().s[109]++;
      this.emit('tradeExecuted', order);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[110]++;
      return order;
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[111]++;
      this.logger.error('Manual trade execution failed:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[112]++;
      throw error;
    }
  }
  /**
   * Get current portfolio status
   */
  async getPortfolioStatus() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[10]++;
    cov_mzgom6xlz().s[113]++;
    try {
      const balance =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[114]++, await this.balanceManager.getBalance());
      const positions =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[115]++, await this.balanceManager.getPositions());
      const openOrders =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[116]++, await this.orderManager.getOpenOrders());
      /* istanbul ignore next */
      cov_mzgom6xlz().s[117]++;
      return {
        balance,
        positions,
        openOrders,
        timestamp: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[118]++;
      this.logger.error('Error getting portfolio status:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[119]++;
      throw error;
    }
  }
  /**
   * Initialize trading strategies
   */
  async initializeStrategies() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[11]++;
    cov_mzgom6xlz().s[120]++;
    try {
      // Initialize Moving Average strategy
      const maStrategy =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[121]++, new moving_average_1.MovingAverageStrategy({
        fastPeriod: 20,
        slowPeriod: 50,
        symbol: 'BTC_USDT'
      }));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[122]++;
      this.strategies.set('moving-average', maStrategy);
      // Initialize MACD strategy
      const macdStrategy =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[123]++, new macd_1.MACDStrategy({
        fastPeriod: 12,
        slowPeriod: 26,
        signalPeriod: 9,
        symbol: 'BTC_USDT'
      }));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[124]++;
      this.strategies.set('macd', macdStrategy);
      // Initialize RSI strategy
      const rsiStrategy =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[125]++, new rsi_1.RSIStrategy({
        period: 14,
        overbought: 70,
        oversold: 30,
        symbol: 'BTC_USDT'
      }));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[126]++;
      this.strategies.set('rsi', rsiStrategy);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[127]++;
      this.logger.info(`Initialized ${this.strategies.size} trading strategies`);
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[128]++;
      this.logger.error('Strategy initialization failed:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[129]++;
      throw error;
    }
  }
  /**
   * Test API connectivity
   */
  async testAPIConnectivity() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[12]++;
    cov_mzgom6xlz().s[130]++;
    try {
      // Test basic API connectivity
      const serverTime =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[131]++, await this.gateIOClient.getServerTime());
      /* istanbul ignore next */
      cov_mzgom6xlz().s[132]++;
      this.logger.info('API connectivity test passed', {
        serverTime
      });
      // Test account access
      const accountInfo =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[133]++, await this.gateIOClient.getAccountInfo());
      /* istanbul ignore next */
      cov_mzgom6xlz().s[134]++;
      this.logger.info('Account access verified', {
        userId:
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[12][0]++, accountInfo.user_id) ||
        /* istanbul ignore next */
        (cov_mzgom6xlz().b[12][1]++, 'N/A')
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[135]++;
      this.logger.error('API connectivity test failed:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[136]++;
      throw new Error(`API connectivity test failed: ${error}`);
    }
  }
  /**
   * Load initial account data
   */
  async loadAccountData() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[13]++;
    cov_mzgom6xlz().s[137]++;
    try {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[138]++;
      // Load account balance
      await this.balanceManager.refreshBalance();
      // Load open orders
      /* istanbul ignore next */
      cov_mzgom6xlz().s[139]++;
      await this.orderManager.refreshOpenOrders();
      /* istanbul ignore next */
      cov_mzgom6xlz().s[140]++;
      this.logger.info('Account data loaded successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[141]++;
      this.logger.error('Failed to load account data:', error);
      /* istanbul ignore next */
      cov_mzgom6xlz().s[142]++;
      throw error;
    }
  }
  /**
   * Start market data processing
   */
  startMarketDataProcessing() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[14]++;
    cov_mzgom6xlz().s[143]++;
    this.marketDataInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_mzgom6xlz().f[15]++;
      cov_mzgom6xlz().s[144]++;
      try {
        /* istanbul ignore next */
        cov_mzgom6xlz().s[145]++;
        // Process market data for each strategy
        for (const [name, strategy] of this.strategies) {
          /* istanbul ignore next */
          cov_mzgom6xlz().s[146]++;
          if (strategy.isActive) {
            /* istanbul ignore next */
            cov_mzgom6xlz().b[13][0]++;
            cov_mzgom6xlz().s[147]++;
            await this.processStrategySignals(name, strategy);
          } else
          /* istanbul ignore next */
          {
            cov_mzgom6xlz().b[13][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_mzgom6xlz().s[148]++;
        this.logger.error('Market data processing error:', error);
      }
    }, 30000); // Process every 30 seconds
    /* istanbul ignore next */
    cov_mzgom6xlz().s[149]++;
    this.logger.info('Market data processing started');
  }
  /**
   * Start health monitoring
   */
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[16]++;
    cov_mzgom6xlz().s[150]++;
    this.healthCheckInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_mzgom6xlz().f[17]++;
      cov_mzgom6xlz().s[151]++;
      try {
        const health =
        /* istanbul ignore next */
        (cov_mzgom6xlz().s[152]++, await this.getSystemHealth());
        /* istanbul ignore next */
        cov_mzgom6xlz().s[153]++;
        if (!health.isHealthy) {
          /* istanbul ignore next */
          cov_mzgom6xlz().b[14][0]++;
          cov_mzgom6xlz().s[154]++;
          this.logger.warn('System health check failed', health.errors);
          /* istanbul ignore next */
          cov_mzgom6xlz().s[155]++;
          this.emit('healthWarning', health);
        } else
        /* istanbul ignore next */
        {
          cov_mzgom6xlz().b[14][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_mzgom6xlz().s[156]++;
        this.logger.error('Health monitoring error:', error);
      }
    }, 60000); // Check every minute
    /* istanbul ignore next */
    cov_mzgom6xlz().s[157]++;
    this.logger.info('Health monitoring started');
  }
  /**
   * Start strategy execution
   */
  startStrategyExecution() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[18]++;
    // Enable the default strategy
    const defaultStrategy =
    /* istanbul ignore next */
    (cov_mzgom6xlz().s[158]++, this.strategies.get(this.config.defaultStrategy));
    /* istanbul ignore next */
    cov_mzgom6xlz().s[159]++;
    if (defaultStrategy) {
      /* istanbul ignore next */
      cov_mzgom6xlz().b[15][0]++;
      cov_mzgom6xlz().s[160]++;
      defaultStrategy.isActive = true;
      /* istanbul ignore next */
      cov_mzgom6xlz().s[161]++;
      this.logger.info(`Activated default strategy: ${this.config.defaultStrategy}`);
    } else
    /* istanbul ignore next */
    {
      cov_mzgom6xlz().b[15][1]++;
    }
  }
  /**
   * Process signals from a trading strategy
   */
  async processStrategySignals(strategyName, strategy) {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[19]++;
    cov_mzgom6xlz().s[162]++;
    try {
      // Get market data
      const marketData =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[163]++, await this.gateIOClient.getMarketData(strategy.symbol));
      // Generate trading signal
      const signal =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[164]++, await strategy.generateSignal(marketData));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[165]++;
      if (
      /* istanbul ignore next */
      (cov_mzgom6xlz().b[17][0]++, signal) &&
      /* istanbul ignore next */
      (cov_mzgom6xlz().b[17][1]++, signal.action !== 'hold')) {
        /* istanbul ignore next */
        cov_mzgom6xlz().b[16][0]++;
        cov_mzgom6xlz().s[166]++;
        this.logger.info(`Strategy signal generated`, {
          strategy: strategyName,
          signal: signal.action,
          symbol: signal.symbol,
          confidence: signal.confidence
        });
        // Execute trade if confidence is high enough
        /* istanbul ignore next */
        cov_mzgom6xlz().s[167]++;
        if (signal.confidence > 0.7) {
          /* istanbul ignore next */
          cov_mzgom6xlz().b[18][0]++;
          cov_mzgom6xlz().s[168]++;
          await this.executeStrategyTrade(signal);
        } else
        /* istanbul ignore next */
        {
          cov_mzgom6xlz().b[18][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_mzgom6xlz().b[16][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[169]++;
      this.logger.error(`Strategy processing error for ${strategyName}:`, error);
    }
  }
  /**
   * Execute a trade based on strategy signal
   */
  async executeStrategyTrade(signal) {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[20]++;
    cov_mzgom6xlz().s[170]++;
    try {
      const amount =
      /* istanbul ignore next */
      (cov_mzgom6xlz().s[171]++, await this.riskManager.calculatePositionSize(signal));
      /* istanbul ignore next */
      cov_mzgom6xlz().s[172]++;
      await this.executeTrade(signal.symbol, signal.action, amount, signal.price);
    } catch (error) {
      /* istanbul ignore next */
      cov_mzgom6xlz().s[173]++;
      this.logger.error('Strategy trade execution failed:', error);
    }
  }
  /**
   * Get trading engine status for monitoring
   */
  getStatus() {
    /* istanbul ignore next */
    cov_mzgom6xlz().f[21]++;
    cov_mzgom6xlz().s[174]++;
    return {
      isRunning: this.isRunning,
      isInitialized: this.isInitialized,
      strategiesCount: this.strategies.size,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_mzgom6xlz().s[175]++;
exports.TradingEngine = TradingEngine;
/* istanbul ignore next */
cov_mzgom6xlz().s[176]++;
exports.default = TradingEngine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbXpnb202eGx6IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZXZlbnRzXzEiLCJyZXF1aXJlIiwibG9nZ2VyXzEiLCJnYXRlX2lvX2NsaWVudF8xIiwib3JkZXJfbWFuYWdlcl8xIiwiYmFsYW5jZV9tYW5hZ2VyXzEiLCJwb3J0Zm9saW9fcmlza19tYW5hZ2VyXzEiLCJtb3ZpbmdfYXZlcmFnZV8xIiwibWFjZF8xIiwicnNpXzEiLCJUcmFkaW5nRW5naW5lIiwiRXZlbnRFbWl0dGVyIiwibG9nZ2VyIiwiY29uZmlnIiwiZ2F0ZUlPQ2xpZW50Iiwib3JkZXJNYW5hZ2VyIiwiYmFsYW5jZU1hbmFnZXIiLCJyaXNrTWFuYWdlciIsInN0cmF0ZWdpZXMiLCJpc1J1bm5pbmciLCJpc0luaXRpYWxpemVkIiwibWFya2V0RGF0YUludGVydmFsIiwiaGVhbHRoQ2hlY2tJbnRlcnZhbCIsImNvbnN0cnVjdG9yIiwiTG9nZ2VyIiwiTWFwIiwiR2F0ZUlPQ2xpZW50IiwiYXBpS2V5IiwiYXBpU2VjcmV0IiwicGFzc3BocmFzZSIsInRlc3RuZXQiLCJiYXNlVXJsIiwiT3JkZXJNYW5hZ2VyIiwiQmFsYW5jZU1hbmFnZXIiLCJQb3J0Zm9saW9SaXNrTWFuYWdlciIsIm1heFBvc2l0aW9uU2l6ZSIsInJpc2tTZXR0aW5ncyIsIm1heERhaWx5TG9zcyIsInN0b3BMb3NzUGVyY2VudCIsInRha2VQcm9maXRQZXJjZW50IiwiaW5mbyIsImV4Y2hhbmdlIiwiZGVmYXVsdFN0cmF0ZWd5IiwiaW5pdGlhbGl6ZSIsImluaXRpYWxpemVTdHJhdGVnaWVzIiwidGVzdEFQSUNvbm5lY3Rpdml0eSIsImxvYWRBY2NvdW50RGF0YSIsImVtaXQiLCJlcnJvciIsIkVycm9yIiwid2FybiIsInN0YXJ0TWFya2V0RGF0YVByb2Nlc3NpbmciLCJzdGFydEhlYWx0aE1vbml0b3JpbmciLCJzdGFydFN0cmF0ZWd5RXhlY3V0aW9uIiwic2h1dGRvd24iLCJjbGVhckludGVydmFsIiwiY2FuY2VsQWxsT3JkZXJzIiwiZ2V0U3lzdGVtSGVhbHRoIiwiaGVhbHRoIiwiaXNIZWFsdGh5IiwiY29tcG9uZW50cyIsImFwaUNvbm5lY3Rpb24iLCJsYXN0VXBkYXRlIiwiRGF0ZSIsImVycm9ycyIsIndhcm5pbmdzIiwiaXNDb25uZWN0ZWQiLCJzaXplIiwiT2JqZWN0IiwidmFsdWVzIiwiZXZlcnkiLCJzdGF0dXMiLCJwdXNoIiwiZ2V0VHJhZGluZ1N0YXRzIiwib3JkZXJIaXN0b3J5IiwiZ2V0T3JkZXJIaXN0b3J5IiwiYmFsYW5jZSIsImdldFRvdGFsQmFsYW5jZSIsImNvbXBsZXRlZFRyYWRlcyIsImZpbHRlciIsIm9yZGVyIiwid2lubmluZ1RyYWRlcyIsInN0YXRzIiwidG90YWxUcmFkZXMiLCJsZW5ndGgiLCJsb3NpbmdUcmFkZXMiLCJ3aW5SYXRlIiwidG90YWxQbkwiLCJkYWlseVBuTCIsIm1heERyYXdkb3duIiwic2hhcnBlUmF0aW8iLCJsYXN0VHJhZGVUaW1lIiwidGltZXN0YW1wIiwiZXhlY3V0ZVRyYWRlIiwic3ltYm9sIiwic2lkZSIsImFtb3VudCIsInByaWNlIiwicmlza0NoZWNrIiwidmFsaWRhdGVUcmFkZSIsImFwcHJvdmVkIiwicmVhc29uIiwiY3JlYXRlT3JkZXIiLCJvcmRlcklkIiwiaWQiLCJnZXRQb3J0Zm9saW9TdGF0dXMiLCJnZXRCYWxhbmNlIiwicG9zaXRpb25zIiwiZ2V0UG9zaXRpb25zIiwib3Blbk9yZGVycyIsImdldE9wZW5PcmRlcnMiLCJtYVN0cmF0ZWd5IiwiTW92aW5nQXZlcmFnZVN0cmF0ZWd5IiwiZmFzdFBlcmlvZCIsInNsb3dQZXJpb2QiLCJzZXQiLCJtYWNkU3RyYXRlZ3kiLCJNQUNEU3RyYXRlZ3kiLCJzaWduYWxQZXJpb2QiLCJyc2lTdHJhdGVneSIsIlJTSVN0cmF0ZWd5IiwicGVyaW9kIiwib3ZlcmJvdWdodCIsIm92ZXJzb2xkIiwic2VydmVyVGltZSIsImdldFNlcnZlclRpbWUiLCJhY2NvdW50SW5mbyIsImdldEFjY291bnRJbmZvIiwidXNlcklkIiwidXNlcl9pZCIsInJlZnJlc2hCYWxhbmNlIiwicmVmcmVzaE9wZW5PcmRlcnMiLCJzZXRJbnRlcnZhbCIsInN0cmF0ZWd5IiwiaXNBY3RpdmUiLCJwcm9jZXNzU3RyYXRlZ3lTaWduYWxzIiwiZ2V0Iiwic3RyYXRlZ3lOYW1lIiwibWFya2V0RGF0YSIsImdldE1hcmtldERhdGEiLCJzaWduYWwiLCJnZW5lcmF0ZVNpZ25hbCIsImFjdGlvbiIsImNvbmZpZGVuY2UiLCJleGVjdXRlU3RyYXRlZ3lUcmFkZSIsImNhbGN1bGF0ZVBvc2l0aW9uU2l6ZSIsImdldFN0YXR1cyIsInN0cmF0ZWdpZXNDb3VudCIsIm5vdyIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxOaWNrXFxEZXNrdG9wXFxTbW9vdGhTYWlsXFxzcmNcXHRyYWRpbmdcXHRyYWRpbmctZW5naW5lLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBBSSBDUllQVE8gVFJBRElORyBBR0VOVCAtIFRSQURJTkcgRU5HSU5FXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIFxyXG4gKiBDb3JlIHRyYWRpbmcgZW5naW5lIHRoYXQgbWFuYWdlcyBhbGwgdHJhZGluZyBvcGVyYXRpb25zLCBvcmRlciBleGVjdXRpb24sXHJcbiAqIHBvc2l0aW9uIG1hbmFnZW1lbnQsIGFuZCBpbnRlZ3JhdGlvbiB3aXRoIEdhdGUuaW8gdGhyb3VnaCBTU0ggdHVubmVsLlxyXG4gKiBcclxuICogVGhpcyBpcyB0aGUgaGVhcnQgb2YgdGhlIHRyYWRpbmcgc3lzdGVtIHRoYXQgY29vcmRpbmF0ZXM6XHJcbiAqIC0gTWFya2V0IGRhdGEgcHJvY2Vzc2luZ1xyXG4gKiAtIFN0cmF0ZWd5IGV4ZWN1dGlvblxyXG4gKiAtIE9yZGVyIG1hbmFnZW1lbnRcclxuICogLSBSaXNrIG1hbmFnZW1lbnRcclxuICogLSBQb3J0Zm9saW8gdHJhY2tpbmdcclxuICogXHJcbiAqIEBhdXRob3IgQUkgQ3J5cHRvIFRyYWRpbmcgU3lzdGVtXHJcbiAqIEB2ZXJzaW9uIDEuMC4wXHJcbiAqIEBsaWNlbnNlIFBST1BSSUVUQVJZXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnZXZlbnRzJztcclxuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi4vY29yZS9sb2dnaW5nL2xvZ2dlcic7XHJcbmltcG9ydCB7IEdhdGVJT0NsaWVudCB9IGZyb20gJy4vYXBpL2dhdGUtaW8tY2xpZW50JztcclxuaW1wb3J0IHsgT3JkZXJNYW5hZ2VyIH0gZnJvbSAnLi9vcmRlcnMvb3JkZXItbWFuYWdlcic7XHJcbmltcG9ydCB7IEJhbGFuY2VNYW5hZ2VyIH0gZnJvbSAnLi9hY2NvdW50L2JhbGFuY2UtbWFuYWdlcic7XHJcbmltcG9ydCB7IFBvcnRmb2xpb1Jpc2tNYW5hZ2VyIH0gZnJvbSAnLi9yaXNrL3BvcnRmb2xpby1yaXNrLW1hbmFnZXInO1xyXG5pbXBvcnQgeyBNb3ZpbmdBdmVyYWdlU3RyYXRlZ3kgfSBmcm9tICcuL3N0cmF0ZWdpZXMvbW92aW5nLWF2ZXJhZ2UnO1xyXG5pbXBvcnQgeyBNQUNEU3RyYXRlZ3kgfSBmcm9tICcuL3N0cmF0ZWdpZXMvbWFjZCc7XHJcbmltcG9ydCB7IFJTSVN0cmF0ZWd5IH0gZnJvbSAnLi9zdHJhdGVnaWVzL3JzaSc7XHJcblxyXG4vKipcclxuICogVHJhZGluZyBlbmdpbmUgY29uZmlndXJhdGlvbiBpbnRlcmZhY2VcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHJhZGluZ0VuZ2luZUNvbmZpZyB7XHJcbiAgZXhjaGFuZ2U6IHN0cmluZztcclxuICBhcGlLZXk6IHN0cmluZztcclxuICBhcGlTZWNyZXQ6IHN0cmluZztcclxuICBwYXNzcGhyYXNlPzogc3RyaW5nO1xyXG4gIHRlc3RuZXQ6IGJvb2xlYW47XHJcbiAgYmFzZVVybD86IHN0cmluZztcclxuICBkZWZhdWx0U3RyYXRlZ3k6IHN0cmluZztcclxuICByaXNrU2V0dGluZ3M6IHtcclxuICAgIG1heFBvc2l0aW9uU2l6ZTogbnVtYmVyO1xyXG4gICAgbWF4RGFpbHlMb3NzOiBudW1iZXI7XHJcbiAgICBzdG9wTG9zc1BlcmNlbnQ6IG51bWJlcjtcclxuICAgIHRha2VQcm9maXRQZXJjZW50OiBudW1iZXI7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRyYWRpbmcgZW5naW5lIHN5c3RlbSBoZWFsdGggaW50ZXJmYWNlXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFRyYWRpbmdTeXN0ZW1IZWFsdGgge1xyXG4gIGlzSGVhbHRoeTogYm9vbGVhbjtcclxuICBjb21wb25lbnRzOiB7XHJcbiAgICBhcGlDb25uZWN0aW9uOiBib29sZWFuO1xyXG4gICAgb3JkZXJNYW5hZ2VyOiBib29sZWFuO1xyXG4gICAgYmFsYW5jZU1hbmFnZXI6IGJvb2xlYW47XHJcbiAgICByaXNrTWFuYWdlcjogYm9vbGVhbjtcclxuICAgIHN0cmF0ZWdpZXM6IGJvb2xlYW47XHJcbiAgfTtcclxuICBsYXN0VXBkYXRlOiBEYXRlO1xyXG4gIGVycm9yczogc3RyaW5nW107XHJcbiAgd2FybmluZ3M6IHN0cmluZ1tdO1xyXG59XHJcblxyXG4vKipcclxuICogVHJhZGluZyBzdGF0aXN0aWNzIGludGVyZmFjZVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBUcmFkaW5nU3RhdHMge1xyXG4gIHRvdGFsVHJhZGVzOiBudW1iZXI7XHJcbiAgd2lubmluZ1RyYWRlczogbnVtYmVyO1xyXG4gIGxvc2luZ1RyYWRlczogbnVtYmVyO1xyXG4gIHdpblJhdGU6IG51bWJlcjtcclxuICB0b3RhbFBuTDogbnVtYmVyO1xyXG4gIGRhaWx5UG5MOiBudW1iZXI7XHJcbiAgbWF4RHJhd2Rvd246IG51bWJlcjtcclxuICBzaGFycGVSYXRpbzogbnVtYmVyO1xyXG4gIGxhc3RUcmFkZVRpbWU6IERhdGUgfCBudWxsO1xyXG59XHJcblxyXG4vKipcclxuICogTWFpbiB0cmFkaW5nIGVuZ2luZSBjbGFzc1xyXG4gKiBPcmNoZXN0cmF0ZXMgYWxsIHRyYWRpbmcgb3BlcmF0aW9ucyBhbmQgc3lzdGVtIGNvbXBvbmVudHNcclxuICovXHJcbmV4cG9ydCBjbGFzcyBUcmFkaW5nRW5naW5lIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcclxuICBwcml2YXRlIGxvZ2dlcjogTG9nZ2VyO1xyXG4gIHByaXZhdGUgY29uZmlnOiBUcmFkaW5nRW5naW5lQ29uZmlnO1xyXG4gIHByaXZhdGUgZ2F0ZUlPQ2xpZW50OiBHYXRlSU9DbGllbnQ7XHJcbiAgcHJpdmF0ZSBvcmRlck1hbmFnZXI6IE9yZGVyTWFuYWdlcjtcclxuICBwcml2YXRlIGJhbGFuY2VNYW5hZ2VyOiBCYWxhbmNlTWFuYWdlcjtcclxuICBwcml2YXRlIHJpc2tNYW5hZ2VyOiBQb3J0Zm9saW9SaXNrTWFuYWdlcjtcclxuICBwcml2YXRlIHN0cmF0ZWdpZXM6IE1hcDxzdHJpbmcsIGFueT47XHJcbiAgcHJpdmF0ZSBpc1J1bm5pbmc6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIGlzSW5pdGlhbGl6ZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwcml2YXRlIG1hcmtldERhdGFJbnRlcnZhbDogTm9kZUpTLlRpbWVvdXQgfCBudWxsID0gbnVsbDtcclxuICBwcml2YXRlIGhlYWx0aENoZWNrSW50ZXJ2YWw6IE5vZGVKUy5UaW1lb3V0IHwgbnVsbCA9IG51bGw7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogVHJhZGluZ0VuZ2luZUNvbmZpZykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcignVHJhZGluZ0VuZ2luZScpO1xyXG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XHJcbiAgICB0aGlzLnN0cmF0ZWdpZXMgPSBuZXcgTWFwKCk7XHJcbiAgICBcclxuICAgIC8vIEluaXRpYWxpemUgY29tcG9uZW50c1xyXG4gICAgdGhpcy5nYXRlSU9DbGllbnQgPSBuZXcgR2F0ZUlPQ2xpZW50KHtcclxuICAgICAgYXBpS2V5OiBjb25maWcuYXBpS2V5LFxyXG4gICAgICBhcGlTZWNyZXQ6IGNvbmZpZy5hcGlTZWNyZXQsXHJcbiAgICAgIHBhc3NwaHJhc2U6IGNvbmZpZy5wYXNzcGhyYXNlLFxyXG4gICAgICB0ZXN0bmV0OiBjb25maWcudGVzdG5ldCxcclxuICAgICAgYmFzZVVybDogY29uZmlnLmJhc2VVcmwgfHwgJ2h0dHA6Ly9sb2NhbGhvc3Q6ODQ0MycgLy8gU1NIIHR1bm5lbCBlbmRwb2ludFxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5vcmRlck1hbmFnZXIgPSBuZXcgT3JkZXJNYW5hZ2VyKHRoaXMuZ2F0ZUlPQ2xpZW50KTtcclxuICAgIHRoaXMuYmFsYW5jZU1hbmFnZXIgPSBuZXcgQmFsYW5jZU1hbmFnZXIodGhpcy5nYXRlSU9DbGllbnQpO1xyXG4gICAgdGhpcy5yaXNrTWFuYWdlciA9IG5ldyBQb3J0Zm9saW9SaXNrTWFuYWdlcih7XHJcbiAgICAgIG1heFBvc2l0aW9uU2l6ZTogY29uZmlnLnJpc2tTZXR0aW5ncy5tYXhQb3NpdGlvblNpemUsXHJcbiAgICAgIG1heERhaWx5TG9zczogY29uZmlnLnJpc2tTZXR0aW5ncy5tYXhEYWlseUxvc3MsXHJcbiAgICAgIHN0b3BMb3NzUGVyY2VudDogY29uZmlnLnJpc2tTZXR0aW5ncy5zdG9wTG9zc1BlcmNlbnQsXHJcbiAgICAgIHRha2VQcm9maXRQZXJjZW50OiBjb25maWcucmlza1NldHRpbmdzLnRha2VQcm9maXRQZXJjZW50XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdUcmFkaW5nIEVuZ2luZSBjcmVhdGVkJywge1xyXG4gICAgICBleGNoYW5nZTogY29uZmlnLmV4Y2hhbmdlLFxyXG4gICAgICB0ZXN0bmV0OiBjb25maWcudGVzdG5ldCxcclxuICAgICAgZGVmYXVsdFN0cmF0ZWd5OiBjb25maWcuZGVmYXVsdFN0cmF0ZWd5XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluaXRpYWxpemUgdGhlIHRyYWRpbmcgZW5naW5lXHJcbiAgICogU2V0cyB1cCBhbGwgY29tcG9uZW50cyBhbmQgdmFsaWRhdGVzIGNvbm5lY3Rpb25zXHJcbiAgICovXHJcbiAgYXN5bmMgaW5pdGlhbGl6ZSgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ/CflKcgSW5pdGlhbGl6aW5nIFRyYWRpbmcgRW5naW5lLi4uJyk7XHJcblxyXG4gICAgICAvLyBJbml0aWFsaXplIEdhdGUuaW8gQVBJIGNsaWVudFxyXG4gICAgICBhd2FpdCB0aGlzLmdhdGVJT0NsaWVudC5pbml0aWFsaXplKCk7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ+KchSBHYXRlLmlvIEFQSSBjbGllbnQgaW5pdGlhbGl6ZWQnKTtcclxuXHJcbiAgICAgIC8vIEluaXRpYWxpemUgb3JkZXIgbWFuYWdlclxyXG4gICAgICBhd2FpdCB0aGlzLm9yZGVyTWFuYWdlci5pbml0aWFsaXplKCk7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ+KchSBPcmRlciBtYW5hZ2VyIGluaXRpYWxpemVkJyk7XHJcblxyXG4gICAgICAvLyBJbml0aWFsaXplIGJhbGFuY2UgbWFuYWdlclxyXG4gICAgICBhd2FpdCB0aGlzLmJhbGFuY2VNYW5hZ2VyLmluaXRpYWxpemUoKTtcclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygn4pyFIEJhbGFuY2UgbWFuYWdlciBpbml0aWFsaXplZCcpO1xyXG5cclxuICAgICAgLy8gSW5pdGlhbGl6ZSByaXNrIG1hbmFnZXJcclxuICAgICAgYXdhaXQgdGhpcy5yaXNrTWFuYWdlci5pbml0aWFsaXplKCk7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ+KchSBSaXNrIG1hbmFnZXIgaW5pdGlhbGl6ZWQnKTtcclxuXHJcbiAgICAgIC8vIEluaXRpYWxpemUgdHJhZGluZyBzdHJhdGVnaWVzXHJcbiAgICAgIGF3YWl0IHRoaXMuaW5pdGlhbGl6ZVN0cmF0ZWdpZXMoKTtcclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygn4pyFIFRyYWRpbmcgc3RyYXRlZ2llcyBpbml0aWFsaXplZCcpO1xyXG5cclxuICAgICAgLy8gVGVzdCBBUEkgY29ubmVjdGl2aXR5XHJcbiAgICAgIGF3YWl0IHRoaXMudGVzdEFQSUNvbm5lY3Rpdml0eSgpO1xyXG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKCfinIUgQVBJIGNvbm5lY3Rpdml0eSB2ZXJpZmllZCcpO1xyXG5cclxuICAgICAgLy8gTG9hZCBpbml0aWFsIGFjY291bnQgZGF0YVxyXG4gICAgICBhd2FpdCB0aGlzLmxvYWRBY2NvdW50RGF0YSgpO1xyXG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKCfinIUgQWNjb3VudCBkYXRhIGxvYWRlZCcpO1xyXG5cclxuICAgICAgdGhpcy5pc0luaXRpYWxpemVkID0gdHJ1ZTtcclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygn4pyFIFRyYWRpbmcgRW5naW5lIGluaXRpYWxpemF0aW9uIGNvbXBsZXRlJyk7XHJcblxyXG4gICAgICB0aGlzLmVtaXQoJ2luaXRpYWxpemVkJyk7XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoJ+KdjCBUcmFkaW5nIEVuZ2luZSBpbml0aWFsaXphdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFRyYWRpbmcgRW5naW5lIGluaXRpYWxpemF0aW9uIGZhaWxlZDogJHtlcnJvcn1gKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0YXJ0IHRyYWRpbmcgb3BlcmF0aW9uc1xyXG4gICAqIEJlZ2lucyBtYXJrZXQgZGF0YSBwcm9jZXNzaW5nIGFuZCBzdHJhdGVneSBleGVjdXRpb25cclxuICAgKi9cclxuICBhc3luYyBzdGFydCgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIGlmICghdGhpcy5pc0luaXRpYWxpemVkKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignVHJhZGluZyBFbmdpbmUgbXVzdCBiZSBpbml0aWFsaXplZCBiZWZvcmUgc3RhcnRpbmcnKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5pc1J1bm5pbmcpIHtcclxuICAgICAgdGhpcy5sb2dnZXIud2FybignVHJhZGluZyBFbmdpbmUgaXMgYWxyZWFkeSBydW5uaW5nJyk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKCfwn5qAIFN0YXJ0aW5nIFRyYWRpbmcgRW5naW5lLi4uJyk7XHJcblxyXG4gICAgICAvLyBTdGFydCBtYXJrZXQgZGF0YSBwcm9jZXNzaW5nXHJcbiAgICAgIHRoaXMuc3RhcnRNYXJrZXREYXRhUHJvY2Vzc2luZygpO1xyXG5cclxuICAgICAgLy8gU3RhcnQgaGVhbHRoIG1vbml0b3JpbmdcclxuICAgICAgdGhpcy5zdGFydEhlYWx0aE1vbml0b3JpbmcoKTtcclxuXHJcbiAgICAgIC8vIFN0YXJ0IHN0cmF0ZWd5IGV4ZWN1dGlvblxyXG4gICAgICB0aGlzLnN0YXJ0U3RyYXRlZ3lFeGVjdXRpb24oKTtcclxuXHJcbiAgICAgIHRoaXMuaXNSdW5uaW5nID0gdHJ1ZTtcclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygn4pyFIFRyYWRpbmcgRW5naW5lIHN0YXJ0ZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcblxyXG4gICAgICB0aGlzLmVtaXQoJ3N0YXJ0ZWQnKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcign4p2MIEZhaWxlZCB0byBzdGFydCBUcmFkaW5nIEVuZ2luZTonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3RvcCB0cmFkaW5nIG9wZXJhdGlvbnNcclxuICAgKiBHcmFjZWZ1bGx5IHNodXRzIGRvd24gYWxsIHRyYWRpbmcgYWN0aXZpdGllc1xyXG4gICAqL1xyXG4gIGFzeW5jIHNodXRkb3duKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgaWYgKCF0aGlzLmlzUnVubmluZykge1xyXG4gICAgICB0aGlzLmxvZ2dlci53YXJuKCdUcmFkaW5nIEVuZ2luZSBpcyBub3QgcnVubmluZycpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygn8J+bkSBTaHV0dGluZyBkb3duIFRyYWRpbmcgRW5naW5lLi4uJyk7XHJcblxyXG4gICAgICAvLyBTdG9wIG1hcmtldCBkYXRhIHByb2Nlc3NpbmdcclxuICAgICAgaWYgKHRoaXMubWFya2V0RGF0YUludGVydmFsKSB7XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLm1hcmtldERhdGFJbnRlcnZhbCk7XHJcbiAgICAgICAgdGhpcy5tYXJrZXREYXRhSW50ZXJ2YWwgPSBudWxsO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBTdG9wIGhlYWx0aCBtb25pdG9yaW5nXHJcbiAgICAgIGlmICh0aGlzLmhlYWx0aENoZWNrSW50ZXJ2YWwpIHtcclxuICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaGVhbHRoQ2hlY2tJbnRlcnZhbCk7XHJcbiAgICAgICAgdGhpcy5oZWFsdGhDaGVja0ludGVydmFsID0gbnVsbDtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gQ2FuY2VsIGFsbCBvcGVuIG9yZGVyc1xyXG4gICAgICBhd2FpdCB0aGlzLm9yZGVyTWFuYWdlci5jYW5jZWxBbGxPcmRlcnMoKTtcclxuXHJcbiAgICAgIC8vIENsb3NlIGFsbCBwb3NpdGlvbnMgKGlmIGNvbmZpZ3VyZWQpXHJcbiAgICAgIC8vIGF3YWl0IHRoaXMuY2xvc2VBbGxQb3NpdGlvbnMoKTtcclxuXHJcbiAgICAgIHRoaXMuaXNSdW5uaW5nID0gZmFsc2U7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ+KchSBUcmFkaW5nIEVuZ2luZSBzaHV0ZG93biBjb21wbGV0ZScpO1xyXG5cclxuICAgICAgdGhpcy5lbWl0KCdzaHV0ZG93bicpO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCfinYwgRXJyb3IgZHVyaW5nIFRyYWRpbmcgRW5naW5lIHNodXRkb3duOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgc3lzdGVtIGhlYWx0aCBzdGF0dXNcclxuICAgKi9cclxuICBhc3luYyBnZXRTeXN0ZW1IZWFsdGgoKTogUHJvbWlzZTxUcmFkaW5nU3lzdGVtSGVhbHRoPiB7XHJcbiAgICBjb25zdCBoZWFsdGg6IFRyYWRpbmdTeXN0ZW1IZWFsdGggPSB7XHJcbiAgICAgIGlzSGVhbHRoeTogdHJ1ZSxcclxuICAgICAgY29tcG9uZW50czoge1xyXG4gICAgICAgIGFwaUNvbm5lY3Rpb246IGZhbHNlLFxyXG4gICAgICAgIG9yZGVyTWFuYWdlcjogZmFsc2UsXHJcbiAgICAgICAgYmFsYW5jZU1hbmFnZXI6IGZhbHNlLFxyXG4gICAgICAgIHJpc2tNYW5hZ2VyOiBmYWxzZSxcclxuICAgICAgICBzdHJhdGVnaWVzOiBmYWxzZVxyXG4gICAgICB9LFxyXG4gICAgICBsYXN0VXBkYXRlOiBuZXcgRGF0ZSgpLFxyXG4gICAgICBlcnJvcnM6IFtdLFxyXG4gICAgICB3YXJuaW5nczogW11cclxuICAgIH07XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQ2hlY2sgQVBJIGNvbm5lY3Rpb25cclxuICAgICAgaGVhbHRoLmNvbXBvbmVudHMuYXBpQ29ubmVjdGlvbiA9IGF3YWl0IHRoaXMuZ2F0ZUlPQ2xpZW50LmlzQ29ubmVjdGVkKCk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBDaGVjayBvcmRlciBtYW5hZ2VyXHJcbiAgICAgIGhlYWx0aC5jb21wb25lbnRzLm9yZGVyTWFuYWdlciA9IHRoaXMub3JkZXJNYW5hZ2VyLmlzSGVhbHRoeSgpO1xyXG4gICAgICBcclxuICAgICAgLy8gQ2hlY2sgYmFsYW5jZSBtYW5hZ2VyXHJcbiAgICAgIGhlYWx0aC5jb21wb25lbnRzLmJhbGFuY2VNYW5hZ2VyID0gdGhpcy5iYWxhbmNlTWFuYWdlci5pc0hlYWx0aHkoKTtcclxuICAgICAgXHJcbiAgICAgIC8vIENoZWNrIHJpc2sgbWFuYWdlclxyXG4gICAgICBoZWFsdGguY29tcG9uZW50cy5yaXNrTWFuYWdlciA9IHRoaXMucmlza01hbmFnZXIuaXNIZWFsdGh5KCk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBDaGVjayBzdHJhdGVnaWVzXHJcbiAgICAgIGhlYWx0aC5jb21wb25lbnRzLnN0cmF0ZWdpZXMgPSB0aGlzLnN0cmF0ZWdpZXMuc2l6ZSA+IDA7XHJcblxyXG4gICAgICAvLyBPdmVyYWxsIGhlYWx0aFxyXG4gICAgICBoZWFsdGguaXNIZWFsdGh5ID0gT2JqZWN0LnZhbHVlcyhoZWFsdGguY29tcG9uZW50cykuZXZlcnkoc3RhdHVzID0+IHN0YXR1cyk7XHJcblxyXG4gICAgICBpZiAoIWhlYWx0aC5pc0hlYWx0aHkpIHtcclxuICAgICAgICBoZWFsdGguZXJyb3JzLnB1c2goJ09uZSBvciBtb3JlIGNvbXBvbmVudHMgYXJlIHVuaGVhbHRoeScpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgaGVhbHRoLmlzSGVhbHRoeSA9IGZhbHNlO1xyXG4gICAgICBoZWFsdGguZXJyb3JzLnB1c2goYEhlYWx0aCBjaGVjayBmYWlsZWQ6ICR7ZXJyb3J9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGhlYWx0aDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCB0cmFkaW5nIHN0YXRpc3RpY3NcclxuICAgKi9cclxuICBhc3luYyBnZXRUcmFkaW5nU3RhdHMoKTogUHJvbWlzZTxUcmFkaW5nU3RhdHM+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IG9yZGVySGlzdG9yeSA9IGF3YWl0IHRoaXMub3JkZXJNYW5hZ2VyLmdldE9yZGVySGlzdG9yeSgpO1xyXG4gICAgICBjb25zdCBiYWxhbmNlID0gYXdhaXQgdGhpcy5iYWxhbmNlTWFuYWdlci5nZXRUb3RhbEJhbGFuY2UoKTtcclxuXHJcbiAgICAgIC8vIENhbGN1bGF0ZSBzdGF0aXN0aWNzIGZyb20gb3JkZXIgaGlzdG9yeVxyXG4gICAgICBjb25zdCBjb21wbGV0ZWRUcmFkZXMgPSBvcmRlckhpc3RvcnkuZmlsdGVyKG9yZGVyID0+IG9yZGVyLnN0YXR1cyA9PT0gJ2ZpbGxlZCcpO1xyXG4gICAgICBjb25zdCB3aW5uaW5nVHJhZGVzID0gY29tcGxldGVkVHJhZGVzLmZpbHRlcihvcmRlciA9PiB7XHJcbiAgICAgICAgLy8gVGhpcyB3b3VsZCBuZWVkIHByb3BlciBQJkwgY2FsY3VsYXRpb25cclxuICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gUGxhY2Vob2xkZXJcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCBzdGF0czogVHJhZGluZ1N0YXRzID0ge1xyXG4gICAgICAgIHRvdGFsVHJhZGVzOiBjb21wbGV0ZWRUcmFkZXMubGVuZ3RoLFxyXG4gICAgICAgIHdpbm5pbmdUcmFkZXM6IHdpbm5pbmdUcmFkZXMubGVuZ3RoLFxyXG4gICAgICAgIGxvc2luZ1RyYWRlczogY29tcGxldGVkVHJhZGVzLmxlbmd0aCAtIHdpbm5pbmdUcmFkZXMubGVuZ3RoLFxyXG4gICAgICAgIHdpblJhdGU6IGNvbXBsZXRlZFRyYWRlcy5sZW5ndGggPiAwID8gKHdpbm5pbmdUcmFkZXMubGVuZ3RoIC8gY29tcGxldGVkVHJhZGVzLmxlbmd0aCkgKiAxMDAgOiAwLFxyXG4gICAgICAgIHRvdGFsUG5MOiAwLCAvLyBXb3VsZCBjYWxjdWxhdGUgZnJvbSB0cmFkZSBoaXN0b3J5XHJcbiAgICAgICAgZGFpbHlQbkw6IDAsIC8vIFdvdWxkIGNhbGN1bGF0ZSBmcm9tIHRvZGF5J3MgdHJhZGVzXHJcbiAgICAgICAgbWF4RHJhd2Rvd246IDAsIC8vIFdvdWxkIGNhbGN1bGF0ZSBmcm9tIGJhbGFuY2UgaGlzdG9yeVxyXG4gICAgICAgIHNoYXJwZVJhdGlvOiAwLCAvLyBXb3VsZCBjYWxjdWxhdGUgZnJvbSByZXR1cm5zXHJcbiAgICAgICAgbGFzdFRyYWRlVGltZTogY29tcGxldGVkVHJhZGVzLmxlbmd0aCA+IDAgPyBjb21wbGV0ZWRUcmFkZXNbY29tcGxldGVkVHJhZGVzLmxlbmd0aCAtIDFdLnRpbWVzdGFtcCA6IG51bGxcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHJldHVybiBzdGF0cztcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcignRXJyb3IgZ2V0dGluZyB0cmFkaW5nIHN0YXRzOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBFeGVjdXRlIGEgbWFudWFsIHRyYWRlXHJcbiAgICovXHJcbiAgYXN5bmMgZXhlY3V0ZVRyYWRlKHN5bWJvbDogc3RyaW5nLCBzaWRlOiAnYnV5JyB8ICdzZWxsJywgYW1vdW50OiBudW1iZXIsIHByaWNlPzogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ0V4ZWN1dGluZyBtYW51YWwgdHJhZGUnLCB7IHN5bWJvbCwgc2lkZSwgYW1vdW50LCBwcmljZSB9KTtcclxuXHJcbiAgICAgIC8vIFJpc2sgY2hlY2tcclxuICAgICAgY29uc3Qgcmlza0NoZWNrID0gYXdhaXQgdGhpcy5yaXNrTWFuYWdlci52YWxpZGF0ZVRyYWRlKHtcclxuICAgICAgICBzeW1ib2wsXHJcbiAgICAgICAgc2lkZSxcclxuICAgICAgICBhbW91bnQsXHJcbiAgICAgICAgcHJpY2U6IHByaWNlIHx8IDBcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAoIXJpc2tDaGVjay5hcHByb3ZlZCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVHJhZGUgcmVqZWN0ZWQgYnkgcmlzayBtYW5hZ2VyOiAke3Jpc2tDaGVjay5yZWFzb259YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIEV4ZWN1dGUgb3JkZXJcclxuICAgICAgY29uc3Qgb3JkZXIgPSBhd2FpdCB0aGlzLm9yZGVyTWFuYWdlci5jcmVhdGVPcmRlcih7XHJcbiAgICAgICAgc3ltYm9sLFxyXG4gICAgICAgIHNpZGUsXHJcbiAgICAgICAgYW1vdW50LFxyXG4gICAgICAgIHByaWNlLFxyXG4gICAgICAgIHR5cGU6IHByaWNlID8gJ2xpbWl0JyA6ICdtYXJrZXQnXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygnTWFudWFsIHRyYWRlIGV4ZWN1dGVkJywgeyBvcmRlcklkOiBvcmRlci5pZCB9KTtcclxuICAgICAgdGhpcy5lbWl0KCd0cmFkZUV4ZWN1dGVkJywgb3JkZXIpO1xyXG5cclxuICAgICAgcmV0dXJuIG9yZGVyO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdNYW51YWwgdHJhZGUgZXhlY3V0aW9uIGZhaWxlZDonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IGN1cnJlbnQgcG9ydGZvbGlvIHN0YXR1c1xyXG4gICAqL1xyXG4gIGFzeW5jIGdldFBvcnRmb2xpb1N0YXR1cygpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgYmFsYW5jZSA9IGF3YWl0IHRoaXMuYmFsYW5jZU1hbmFnZXIuZ2V0QmFsYW5jZSgpO1xyXG4gICAgICBjb25zdCBwb3NpdGlvbnMgPSBhd2FpdCB0aGlzLmJhbGFuY2VNYW5hZ2VyLmdldFBvc2l0aW9ucygpO1xyXG4gICAgICBjb25zdCBvcGVuT3JkZXJzID0gYXdhaXQgdGhpcy5vcmRlck1hbmFnZXIuZ2V0T3Blbk9yZGVycygpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBiYWxhbmNlLFxyXG4gICAgICAgIHBvc2l0aW9ucyxcclxuICAgICAgICBvcGVuT3JkZXJzLFxyXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxyXG4gICAgICB9O1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdFcnJvciBnZXR0aW5nIHBvcnRmb2xpbyBzdGF0dXM6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluaXRpYWxpemUgdHJhZGluZyBzdHJhdGVnaWVzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBpbml0aWFsaXplU3RyYXRlZ2llcygpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIEluaXRpYWxpemUgTW92aW5nIEF2ZXJhZ2Ugc3RyYXRlZ3lcclxuICAgICAgY29uc3QgbWFTdHJhdGVneSA9IG5ldyBNb3ZpbmdBdmVyYWdlU3RyYXRlZ3koe1xyXG4gICAgICAgIGZhc3RQZXJpb2Q6IDIwLFxyXG4gICAgICAgIHNsb3dQZXJpb2Q6IDUwLFxyXG4gICAgICAgIHN5bWJvbDogJ0JUQ19VU0RUJ1xyXG4gICAgICB9KTtcclxuICAgICAgdGhpcy5zdHJhdGVnaWVzLnNldCgnbW92aW5nLWF2ZXJhZ2UnLCBtYVN0cmF0ZWd5KTtcclxuXHJcbiAgICAgIC8vIEluaXRpYWxpemUgTUFDRCBzdHJhdGVneVxyXG4gICAgICBjb25zdCBtYWNkU3RyYXRlZ3kgPSBuZXcgTUFDRFN0cmF0ZWd5KHtcclxuICAgICAgICBmYXN0UGVyaW9kOiAxMixcclxuICAgICAgICBzbG93UGVyaW9kOiAyNixcclxuICAgICAgICBzaWduYWxQZXJpb2Q6IDksXHJcbiAgICAgICAgc3ltYm9sOiAnQlRDX1VTRFQnXHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLnN0cmF0ZWdpZXMuc2V0KCdtYWNkJywgbWFjZFN0cmF0ZWd5KTtcclxuXHJcbiAgICAgIC8vIEluaXRpYWxpemUgUlNJIHN0cmF0ZWd5XHJcbiAgICAgIGNvbnN0IHJzaVN0cmF0ZWd5ID0gbmV3IFJTSVN0cmF0ZWd5KHtcclxuICAgICAgICBwZXJpb2Q6IDE0LFxyXG4gICAgICAgIG92ZXJib3VnaHQ6IDcwLFxyXG4gICAgICAgIG92ZXJzb2xkOiAzMCxcclxuICAgICAgICBzeW1ib2w6ICdCVENfVVNEVCdcclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuc3RyYXRlZ2llcy5zZXQoJ3JzaScsIHJzaVN0cmF0ZWd5KTtcclxuXHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oYEluaXRpYWxpemVkICR7dGhpcy5zdHJhdGVnaWVzLnNpemV9IHRyYWRpbmcgc3RyYXRlZ2llc2ApO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdTdHJhdGVneSBpbml0aWFsaXphdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFRlc3QgQVBJIGNvbm5lY3Rpdml0eVxyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgdGVzdEFQSUNvbm5lY3Rpdml0eSgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIFRlc3QgYmFzaWMgQVBJIGNvbm5lY3Rpdml0eVxyXG4gICAgICBjb25zdCBzZXJ2ZXJUaW1lID0gYXdhaXQgdGhpcy5nYXRlSU9DbGllbnQuZ2V0U2VydmVyVGltZSgpO1xyXG4gICAgICB0aGlzLmxvZ2dlci5pbmZvKCdBUEkgY29ubmVjdGl2aXR5IHRlc3QgcGFzc2VkJywgeyBzZXJ2ZXJUaW1lIH0pO1xyXG5cclxuICAgICAgLy8gVGVzdCBhY2NvdW50IGFjY2Vzc1xyXG4gICAgICBjb25zdCBhY2NvdW50SW5mbyA9IGF3YWl0IHRoaXMuZ2F0ZUlPQ2xpZW50LmdldEFjY291bnRJbmZvKCk7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmluZm8oJ0FjY291bnQgYWNjZXNzIHZlcmlmaWVkJywgeyBcclxuICAgICAgICB1c2VySWQ6IGFjY291bnRJbmZvLnVzZXJfaWQgfHwgJ04vQScgXHJcbiAgICAgIH0pO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdBUEkgY29ubmVjdGl2aXR5IHRlc3QgZmFpbGVkOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBBUEkgY29ubmVjdGl2aXR5IHRlc3QgZmFpbGVkOiAke2Vycm9yfWApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTG9hZCBpbml0aWFsIGFjY291bnQgZGF0YVxyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgbG9hZEFjY291bnREYXRhKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gTG9hZCBhY2NvdW50IGJhbGFuY2VcclxuICAgICAgYXdhaXQgdGhpcy5iYWxhbmNlTWFuYWdlci5yZWZyZXNoQmFsYW5jZSgpO1xyXG4gICAgICBcclxuICAgICAgLy8gTG9hZCBvcGVuIG9yZGVyc1xyXG4gICAgICBhd2FpdCB0aGlzLm9yZGVyTWFuYWdlci5yZWZyZXNoT3Blbk9yZGVycygpO1xyXG5cclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbygnQWNjb3VudCBkYXRhIGxvYWRlZCBzdWNjZXNzZnVsbHknKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcignRmFpbGVkIHRvIGxvYWQgYWNjb3VudCBkYXRhOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBtYXJrZXQgZGF0YSBwcm9jZXNzaW5nXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBzdGFydE1hcmtldERhdGFQcm9jZXNzaW5nKCk6IHZvaWQge1xyXG4gICAgdGhpcy5tYXJrZXREYXRhSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChhc3luYyAoKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgLy8gUHJvY2VzcyBtYXJrZXQgZGF0YSBmb3IgZWFjaCBzdHJhdGVneVxyXG4gICAgICAgIGZvciAoY29uc3QgW25hbWUsIHN0cmF0ZWd5XSBvZiB0aGlzLnN0cmF0ZWdpZXMpIHtcclxuICAgICAgICAgIGlmIChzdHJhdGVneS5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLnByb2Nlc3NTdHJhdGVneVNpZ25hbHMobmFtZSwgc3RyYXRlZ3kpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcignTWFya2V0IGRhdGEgcHJvY2Vzc2luZyBlcnJvcjonLCBlcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH0sIDMwMDAwKTsgLy8gUHJvY2VzcyBldmVyeSAzMCBzZWNvbmRzXHJcblxyXG4gICAgdGhpcy5sb2dnZXIuaW5mbygnTWFya2V0IGRhdGEgcHJvY2Vzc2luZyBzdGFydGVkJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBoZWFsdGggbW9uaXRvcmluZ1xyXG4gICAqL1xyXG4gIHByaXZhdGUgc3RhcnRIZWFsdGhNb25pdG9yaW5nKCk6IHZvaWQge1xyXG4gICAgdGhpcy5oZWFsdGhDaGVja0ludGVydmFsID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGhlYWx0aCA9IGF3YWl0IHRoaXMuZ2V0U3lzdGVtSGVhbHRoKCk7XHJcbiAgICAgICAgaWYgKCFoZWFsdGguaXNIZWFsdGh5KSB7XHJcbiAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuKCdTeXN0ZW0gaGVhbHRoIGNoZWNrIGZhaWxlZCcsIGhlYWx0aC5lcnJvcnMpO1xyXG4gICAgICAgICAgdGhpcy5lbWl0KCdoZWFsdGhXYXJuaW5nJywgaGVhbHRoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoJ0hlYWx0aCBtb25pdG9yaW5nIGVycm9yOicsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSwgNjAwMDApOyAvLyBDaGVjayBldmVyeSBtaW51dGVcclxuXHJcbiAgICB0aGlzLmxvZ2dlci5pbmZvKCdIZWFsdGggbW9uaXRvcmluZyBzdGFydGVkJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBzdHJhdGVneSBleGVjdXRpb25cclxuICAgKi9cclxuICBwcml2YXRlIHN0YXJ0U3RyYXRlZ3lFeGVjdXRpb24oKTogdm9pZCB7XHJcbiAgICAvLyBFbmFibGUgdGhlIGRlZmF1bHQgc3RyYXRlZ3lcclxuICAgIGNvbnN0IGRlZmF1bHRTdHJhdGVneSA9IHRoaXMuc3RyYXRlZ2llcy5nZXQodGhpcy5jb25maWcuZGVmYXVsdFN0cmF0ZWd5KTtcclxuICAgIGlmIChkZWZhdWx0U3RyYXRlZ3kpIHtcclxuICAgICAgZGVmYXVsdFN0cmF0ZWd5LmlzQWN0aXZlID0gdHJ1ZTtcclxuICAgICAgdGhpcy5sb2dnZXIuaW5mbyhgQWN0aXZhdGVkIGRlZmF1bHQgc3RyYXRlZ3k6ICR7dGhpcy5jb25maWcuZGVmYXVsdFN0cmF0ZWd5fWApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUHJvY2VzcyBzaWduYWxzIGZyb20gYSB0cmFkaW5nIHN0cmF0ZWd5XHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBwcm9jZXNzU3RyYXRlZ3lTaWduYWxzKHN0cmF0ZWd5TmFtZTogc3RyaW5nLCBzdHJhdGVneTogYW55KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBHZXQgbWFya2V0IGRhdGFcclxuICAgICAgY29uc3QgbWFya2V0RGF0YSA9IGF3YWl0IHRoaXMuZ2F0ZUlPQ2xpZW50LmdldE1hcmtldERhdGEoc3RyYXRlZ3kuc3ltYm9sKTtcclxuICAgICAgXHJcbiAgICAgIC8vIEdlbmVyYXRlIHRyYWRpbmcgc2lnbmFsXHJcbiAgICAgIGNvbnN0IHNpZ25hbCA9IGF3YWl0IHN0cmF0ZWd5LmdlbmVyYXRlU2lnbmFsKG1hcmtldERhdGEpO1xyXG4gICAgICBcclxuICAgICAgaWYgKHNpZ25hbCAmJiBzaWduYWwuYWN0aW9uICE9PSAnaG9sZCcpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKGBTdHJhdGVneSBzaWduYWwgZ2VuZXJhdGVkYCwge1xyXG4gICAgICAgICAgc3RyYXRlZ3k6IHN0cmF0ZWd5TmFtZSxcclxuICAgICAgICAgIHNpZ25hbDogc2lnbmFsLmFjdGlvbixcclxuICAgICAgICAgIHN5bWJvbDogc2lnbmFsLnN5bWJvbCxcclxuICAgICAgICAgIGNvbmZpZGVuY2U6IHNpZ25hbC5jb25maWRlbmNlXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIEV4ZWN1dGUgdHJhZGUgaWYgY29uZmlkZW5jZSBpcyBoaWdoIGVub3VnaFxyXG4gICAgICAgIGlmIChzaWduYWwuY29uZmlkZW5jZSA+IDAuNykge1xyXG4gICAgICAgICAgYXdhaXQgdGhpcy5leGVjdXRlU3RyYXRlZ3lUcmFkZShzaWduYWwpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGBTdHJhdGVneSBwcm9jZXNzaW5nIGVycm9yIGZvciAke3N0cmF0ZWd5TmFtZX06YCwgZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRXhlY3V0ZSBhIHRyYWRlIGJhc2VkIG9uIHN0cmF0ZWd5IHNpZ25hbFxyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgZXhlY3V0ZVN0cmF0ZWd5VHJhZGUoc2lnbmFsOiBhbnkpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGFtb3VudCA9IGF3YWl0IHRoaXMucmlza01hbmFnZXIuY2FsY3VsYXRlUG9zaXRpb25TaXplKHNpZ25hbCk7XHJcbiAgICAgIFxyXG4gICAgICBhd2FpdCB0aGlzLmV4ZWN1dGVUcmFkZShcclxuICAgICAgICBzaWduYWwuc3ltYm9sLFxyXG4gICAgICAgIHNpZ25hbC5hY3Rpb24sXHJcbiAgICAgICAgYW1vdW50LFxyXG4gICAgICAgIHNpZ25hbC5wcmljZVxyXG4gICAgICApO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHRoaXMubG9nZ2VyLmVycm9yKCdTdHJhdGVneSB0cmFkZSBleGVjdXRpb24gZmFpbGVkOicsIGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCB0cmFkaW5nIGVuZ2luZSBzdGF0dXMgZm9yIG1vbml0b3JpbmdcclxuICAgKi9cclxuICBnZXRTdGF0dXMoKToge1xyXG4gICAgaXNSdW5uaW5nOiBib29sZWFuO1xyXG4gICAgaXNJbml0aWFsaXplZDogYm9vbGVhbjtcclxuICAgIHN0cmF0ZWdpZXNDb3VudDogbnVtYmVyO1xyXG4gICAgdGltZXN0YW1wOiBudW1iZXI7XHJcbiAgfSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpc1J1bm5pbmc6IHRoaXMuaXNSdW5uaW5nLFxyXG4gICAgICBpc0luaXRpYWxpemVkOiB0aGlzLmlzSW5pdGlhbGl6ZWQsXHJcbiAgICAgIHN0cmF0ZWdpZXNDb3VudDogdGhpcy5zdHJhdGVnaWVzLnNpemUsXHJcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRyYWRpbmdFbmdpbmU7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBLFNBQUFBLGNBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO0lBQUE7SUFBQVcsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJ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