{"version":3,"names":["cov_1048vy7b82","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","events_1","require","logger_1","LLMResourceMonitor","EventEmitter","systemMonitor","isMonitoring","monitoringInterval","currentMetrics","metricsHistory","maxHistorySize","currentAllocationStrategy","THRESHOLDS","memory","low","medium","high","critical","cpu","normal","temperature","warning","constructor","tradingPriority","aiPriority","memoryAllocation","trading","ai","system","cpuAllocation","logger","info","startMonitoring","intervalMs","warn","collectMetrics","setInterval","analyzeMetrics","generateRecommendations","error","emit","stopMonitoring","clearInterval","systemResources","getCurrentResources","metrics","totalMemory","availableMemory","available","llmMemoryUsage","estimateLLMMemoryUsage","memoryPressure","calculateMemoryPressure","cpuUsage","usage","cpuTemperature","availableCores","cores","llmCpuUsage","estimateLLMCpuUsage","inferenceLatency","getAverageInferenceLatency","throughput","calculateThroughput","queueLength","getQueueLength","thermalThrottling","swapUsage","swap","diskIOWait","disk","ioWait","timestamp","Date","addToHistory","length","recentMetrics","slice","totalLatency","reduce","sum","m","avgLatency","avgTokensPerInference","push","issues","recommendations","priority","description","expectedImpact","implementation","estimatedBenefit","predictPerformance","modelName","memoryRequirement","cpuThreads","expectedInferenceTime","expectedAccuracy","resourceRequirement","confidence","factors","cpuLoadFactor","Math","min","round","updateAllocationStrategy","strategy","getCurrentMetrics","getMetricsHistory","limit","getAllocationStrategy","canHandleModel","currentCpuUsage","estimatedCpuIncrease","getSystemHealthScore","score","max","shutdown","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\resource-monitor.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * RESOURCE MONITOR - LLM RESOURCE MANAGEMENT FOR INTEL NUC\r\n * =============================================================================\r\n * \r\n * This module monitors system resources specifically for LLM operations on\r\n * Intel NUC hardware. It provides real-time monitoring, optimization\r\n * recommendations, and automatic resource management to ensure optimal\r\n * performance within hardware constraints.\r\n * \r\n * Key Features:\r\n * - Real-time CPU, memory, and thermal monitoring\r\n * - LLM-specific resource optimization\r\n * - Automatic throttling and scaling\r\n * - Performance prediction and recommendations\r\n * - Resource allocation for trading vs AI operations\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { SystemMonitor } from '@/infrastructure/system-monitor';\r\n\r\n/**\r\n * Interface for LLM-specific resource metrics\r\n */\r\ninterface LLMResourceMetrics {\r\n  // Memory metrics\r\n  totalMemory: number; // MB\r\n  availableMemory: number; // MB\r\n  llmMemoryUsage: number; // MB\r\n  memoryPressure: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  \r\n  // CPU metrics\r\n  cpuUsage: number; // percentage\r\n  cpuTemperature: number; // Celsius\r\n  availableCores: number;\r\n  llmCpuUsage: number; // percentage\r\n  \r\n  // Performance metrics\r\n  inferenceLatency: number; // milliseconds\r\n  throughput: number; // tokens per second\r\n  queueLength: number; // pending requests\r\n  \r\n  // System health\r\n  thermalThrottling: boolean;\r\n  swapUsage: number; // MB\r\n  diskIOWait: number; // percentage\r\n  \r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Interface for resource optimization recommendations\r\n */\r\ninterface OptimizationRecommendation {\r\n  type: 'MODEL_SWITCH' | 'PARAMETER_ADJUST' | 'RESOURCE_ALLOCATION' | 'THERMAL_MANAGEMENT';\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  description: string;\r\n  expectedImpact: string;\r\n  implementation: string;\r\n  estimatedBenefit: number; // 0-100 percentage improvement\r\n}\r\n\r\n/**\r\n * Interface for resource allocation strategy\r\n */\r\ninterface ResourceAllocationStrategy {\r\n  tradingPriority: number; // 0-100, higher means more resources for trading\r\n  aiPriority: number; // 0-100, higher means more resources for AI\r\n  memoryAllocation: {\r\n    trading: number; // MB\r\n    ai: number; // MB\r\n    system: number; // MB\r\n  };\r\n  cpuAllocation: {\r\n    trading: number; // percentage\r\n    ai: number; // percentage\r\n    system: number; // percentage\r\n  };\r\n}\r\n\r\n/**\r\n * Interface for performance prediction\r\n */\r\ninterface PerformancePrediction {\r\n  expectedInferenceTime: number; // milliseconds\r\n  expectedAccuracy: number; // 0-100\r\n  resourceRequirement: number; // MB\r\n  confidence: number; // 0-100\r\n  factors: string[];\r\n}\r\n\r\n/**\r\n * Resource Monitor class for LLM operations on Intel NUC\r\n */\r\nexport class LLMResourceMonitor extends EventEmitter {\r\n  private systemMonitor: SystemMonitor;\r\n  private isMonitoring: boolean = false;\r\n  private monitoringInterval: NodeJS.Timeout | null = null;\r\n  private currentMetrics: LLMResourceMetrics | null = null;\r\n  private metricsHistory: LLMResourceMetrics[] = [];\r\n  private maxHistorySize: number = 1000; // Keep last 1000 measurements\r\n  private currentAllocationStrategy: ResourceAllocationStrategy;\r\n  \r\n  // Intel NUC specific thresholds\r\n  private readonly THRESHOLDS = {\r\n    memory: {\r\n      low: 2048, // 2GB available\r\n      medium: 1024, // 1GB available\r\n      high: 512, // 512MB available\r\n      critical: 256 // 256MB available\r\n    },\r\n    cpu: {\r\n      normal: 70, // 70% usage\r\n      high: 85, // 85% usage\r\n      critical: 95 // 95% usage\r\n    },\r\n    temperature: {\r\n      normal: 70, // 70¬∞C\r\n      warning: 80, // 80¬∞C\r\n      critical: 90 // 90¬∞C\r\n    }\r\n  };\r\n\r\n  constructor(systemMonitor: SystemMonitor) {\r\n    super();\r\n    this.systemMonitor = systemMonitor;\r\n    \r\n    // Default resource allocation strategy\r\n    this.currentAllocationStrategy = {\r\n      tradingPriority: 70, // Trading gets priority\r\n      aiPriority: 30,\r\n      memoryAllocation: {\r\n        trading: 4096, // 4GB for trading\r\n        ai: 6144, // 6GB for AI\r\n        system: 1856 // ~1.8GB for system\r\n      },\r\n      cpuAllocation: {\r\n        trading: 60, // 60% for trading\r\n        ai: 30, // 30% for AI\r\n        system: 10 // 10% for system\r\n      }\r\n    };\r\n\r\n    logger.info('üìä LLM Resource Monitor initialized for Intel NUC');\r\n  }\r\n\r\n  /**\r\n   * Start resource monitoring\r\n   * Begins continuous monitoring of system resources for LLM operations\r\n   */\r\n  public async startMonitoring(intervalMs: number = 5000): Promise<void> {\r\n    try {\r\n      if (this.isMonitoring) {\r\n        logger.warn('‚ö†Ô∏è Resource monitoring already running');\r\n        return;\r\n      }\r\n\r\n      logger.info('üöÄ Starting LLM resource monitoring...');\r\n\r\n      // Initial metrics collection\r\n      await this.collectMetrics();\r\n\r\n      // Start periodic monitoring\r\n      this.monitoringInterval = setInterval(async () => {\r\n        try {\r\n          await this.collectMetrics();\r\n          await this.analyzeMetrics();\r\n          await this.generateRecommendations();\r\n        } catch (error) {\r\n          logger.error('‚ùå Error in resource monitoring cycle:', error);\r\n        }\r\n      }, intervalMs);\r\n\r\n      this.isMonitoring = true;\r\n      logger.info('‚úÖ LLM resource monitoring started');\r\n\r\n      this.emit('monitoringStarted');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to start resource monitoring:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop resource monitoring\r\n   */\r\n  public async stopMonitoring(): Promise<void> {\r\n    try {\r\n      if (!this.isMonitoring) {\r\n        logger.warn('‚ö†Ô∏è Resource monitoring not running');\r\n        return;\r\n      }\r\n\r\n      logger.info('üõë Stopping LLM resource monitoring...');\r\n\r\n      if (this.monitoringInterval) {\r\n        clearInterval(this.monitoringInterval);\r\n        this.monitoringInterval = null;\r\n      }\r\n\r\n      this.isMonitoring = false;\r\n      logger.info('‚úÖ LLM resource monitoring stopped');\r\n\r\n      this.emit('monitoringStopped');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Error stopping resource monitoring:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect current system metrics\r\n   */\r\n  private async collectMetrics(): Promise<void> {\r\n    try {\r\n      const systemResources = await this.systemMonitor.getCurrentResources();\r\n      \r\n      // Calculate LLM-specific metrics\r\n      const metrics: LLMResourceMetrics = {\r\n        totalMemory: 12288, // 12GB Intel NUC\r\n        availableMemory: systemResources.memory.available,\r\n        llmMemoryUsage: this.estimateLLMMemoryUsage(),\r\n        memoryPressure: this.calculateMemoryPressure(systemResources.memory.available),\r\n        \r\n        cpuUsage: systemResources.cpu.usage,\r\n        cpuTemperature: systemResources.cpu.temperature || 0,\r\n        availableCores: systemResources.cpu.cores,\r\n        llmCpuUsage: this.estimateLLMCpuUsage(),\r\n        \r\n        inferenceLatency: this.getAverageInferenceLatency(),\r\n        throughput: this.calculateThroughput(),\r\n        queueLength: this.getQueueLength(),\r\n        \r\n        thermalThrottling: systemResources.cpu.temperature > this.THRESHOLDS.temperature.warning,\r\n        swapUsage: systemResources.memory.swap || 0,\r\n        diskIOWait: systemResources.disk.ioWait || 0,\r\n        \r\n        timestamp: new Date()\r\n      };\r\n\r\n      this.currentMetrics = metrics;\r\n      this.addToHistory(metrics);\r\n\r\n      // Emit metrics for other components\r\n      this.emit('metricsUpdated', metrics);\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Error collecting metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Estimate current LLM memory usage\r\n   */\r\n  private estimateLLMMemoryUsage(): number {\r\n    // This would track actual LLM memory usage in production\r\n    // For now, return estimated usage based on loaded models\r\n    return 2048; // Mock 2GB usage\r\n  }\r\n\r\n  /**\r\n   * Estimate current LLM CPU usage\r\n   */\r\n  private estimateLLMCpuUsage(): number {\r\n    // This would track actual LLM CPU usage in production\r\n    // For now, return estimated usage\r\n    return 25; // Mock 25% CPU usage\r\n  }\r\n\r\n  /**\r\n   * Calculate memory pressure level\r\n   */\r\n  private calculateMemoryPressure(availableMemory: number): 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' {\r\n    if (availableMemory >= this.THRESHOLDS.memory.low) return 'LOW';\r\n    if (availableMemory >= this.THRESHOLDS.memory.medium) return 'MEDIUM';\r\n    if (availableMemory >= this.THRESHOLDS.memory.high) return 'HIGH';\r\n    return 'CRITICAL';\r\n  }\r\n\r\n  /**\r\n   * Get average inference latency from recent history\r\n   */\r\n  private getAverageInferenceLatency(): number {\r\n    if (this.metricsHistory.length === 0) return 0;\r\n    \r\n    const recentMetrics = this.metricsHistory.slice(-10); // Last 10 measurements\r\n    const totalLatency = recentMetrics.reduce((sum, m) => sum + m.inferenceLatency, 0);\r\n    \r\n    return totalLatency / recentMetrics.length;\r\n  }\r\n\r\n  /**\r\n   * Calculate current throughput (tokens per second)\r\n   */\r\n  private calculateThroughput(): number {\r\n    // Mock calculation - in production, this would track actual token generation\r\n    const avgLatency = this.getAverageInferenceLatency();\r\n    if (avgLatency === 0) return 0;\r\n    \r\n    const avgTokensPerInference = 100; // Estimated average tokens\r\n    return (avgTokensPerInference / avgLatency) * 1000; // Convert to per second\r\n  }\r\n\r\n  /**\r\n   * Get current queue length for pending LLM requests\r\n   */\r\n  private getQueueLength(): number {\r\n    // Mock implementation - in production, this would track actual queue\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Add metrics to history and maintain size limit\r\n   */\r\n  private addToHistory(metrics: LLMResourceMetrics): void {\r\n    this.metricsHistory.push(metrics);\r\n    \r\n    if (this.metricsHistory.length > this.maxHistorySize) {\r\n      this.metricsHistory = this.metricsHistory.slice(-this.maxHistorySize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analyze current metrics and detect issues\r\n   */\r\n  private async analyzeMetrics(): Promise<void> {\r\n    if (!this.currentMetrics) return;\r\n\r\n    const metrics = this.currentMetrics;\r\n    const issues: string[] = [];\r\n\r\n    // Check memory pressure\r\n    if (metrics.memoryPressure === 'CRITICAL') {\r\n      issues.push('Critical memory pressure detected');\r\n      this.emit('criticalMemoryPressure', metrics);\r\n    } else if (metrics.memoryPressure === 'HIGH') {\r\n      issues.push('High memory pressure detected');\r\n      this.emit('highMemoryPressure', metrics);\r\n    }\r\n\r\n    // Check CPU usage\r\n    if (metrics.cpuUsage > this.THRESHOLDS.cpu.critical) {\r\n      issues.push('Critical CPU usage detected');\r\n      this.emit('criticalCpuUsage', metrics);\r\n    } else if (metrics.cpuUsage > this.THRESHOLDS.cpu.high) {\r\n      issues.push('High CPU usage detected');\r\n      this.emit('highCpuUsage', metrics);\r\n    }\r\n\r\n    // Check thermal throttling\r\n    if (metrics.thermalThrottling) {\r\n      issues.push('Thermal throttling detected');\r\n      this.emit('thermalThrottling', metrics);\r\n    }\r\n\r\n    // Check inference performance\r\n    if (metrics.inferenceLatency > 5000) { // 5 seconds is too slow for trading\r\n      issues.push('Slow inference performance detected');\r\n      this.emit('slowInference', metrics);\r\n    }\r\n\r\n    // Check swap usage\r\n    if (metrics.swapUsage > 1024) { // More than 1GB swap usage\r\n      issues.push('High swap usage detected');\r\n      this.emit('highSwapUsage', metrics);\r\n    }\r\n\r\n    if (issues.length > 0) {\r\n      logger.warn('‚ö†Ô∏è Resource issues detected:', issues);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate optimization recommendations based on current metrics\r\n   */\r\n  private async generateRecommendations(): Promise<OptimizationRecommendation[]> {\r\n    if (!this.currentMetrics) return [];\r\n\r\n    const recommendations: OptimizationRecommendation[] = [];\r\n    const metrics = this.currentMetrics;\r\n\r\n    // Memory optimization recommendations\r\n    if (metrics.memoryPressure === 'CRITICAL' || metrics.memoryPressure === 'HIGH') {\r\n      recommendations.push({\r\n        type: 'MODEL_SWITCH',\r\n        priority: 'HIGH',\r\n        description: 'Switch to a smaller, more memory-efficient model',\r\n        expectedImpact: 'Reduce memory usage by 30-50%',\r\n        implementation: 'Load TinyLlama model instead of current model',\r\n        estimatedBenefit: 40\r\n      });\r\n\r\n      recommendations.push({\r\n        type: 'RESOURCE_ALLOCATION',\r\n        priority: 'MEDIUM',\r\n        description: 'Reduce AI memory allocation in favor of trading operations',\r\n        expectedImpact: 'Free up 1-2GB for critical trading operations',\r\n        implementation: 'Adjust memory allocation strategy',\r\n        estimatedBenefit: 25\r\n      });\r\n    }\r\n\r\n    // CPU optimization recommendations\r\n    if (metrics.cpuUsage > this.THRESHOLDS.cpu.high) {\r\n      recommendations.push({\r\n        type: 'PARAMETER_ADJUST',\r\n        priority: 'MEDIUM',\r\n        description: 'Reduce CPU threads used by LLM inference',\r\n        expectedImpact: 'Reduce CPU usage by 10-20%',\r\n        implementation: 'Decrease cpuThreads parameter from 4 to 2',\r\n        estimatedBenefit: 15\r\n      });\r\n    }\r\n\r\n    // Thermal management recommendations\r\n    if (metrics.thermalThrottling) {\r\n      recommendations.push({\r\n        type: 'THERMAL_MANAGEMENT',\r\n        priority: 'CRITICAL',\r\n        description: 'Implement aggressive thermal throttling',\r\n        expectedImpact: 'Prevent hardware damage and maintain stability',\r\n        implementation: 'Reduce inference frequency and CPU usage',\r\n        estimatedBenefit: 60\r\n      });\r\n    }\r\n\r\n    // Performance optimization recommendations\r\n    if (metrics.inferenceLatency > 3000) {\r\n      recommendations.push({\r\n        type: 'PARAMETER_ADJUST',\r\n        priority: 'MEDIUM',\r\n        description: 'Optimize model parameters for faster inference',\r\n        expectedImpact: 'Reduce inference time by 20-30%',\r\n        implementation: 'Reduce max_tokens and adjust temperature',\r\n        estimatedBenefit: 25\r\n      });\r\n    }\r\n\r\n    // Emit recommendations\r\n    if (recommendations.length > 0) {\r\n      this.emit('optimizationRecommendations', recommendations);\r\n      logger.info(`üí° Generated ${recommendations.length} optimization recommendations`);\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Predict performance for a given model configuration\r\n   */\r\n  public predictPerformance(\r\n    modelName: string,\r\n    memoryRequirement: number,\r\n    cpuThreads: number\r\n  ): PerformancePrediction {\r\n    if (!this.currentMetrics) {\r\n      return {\r\n        expectedInferenceTime: 0,\r\n        expectedAccuracy: 0,\r\n        resourceRequirement: memoryRequirement,\r\n        confidence: 0,\r\n        factors: ['No current metrics available']\r\n      };\r\n    }\r\n\r\n    const metrics = this.currentMetrics;\r\n    const factors: string[] = [];\r\n    \r\n    // Base inference time estimation\r\n    let expectedInferenceTime = 1000; // Base 1 second\r\n    \r\n    // Adjust for model size\r\n    expectedInferenceTime *= (memoryRequirement / 1000); // Scale with memory requirement\r\n    factors.push(`Model size: ${memoryRequirement}MB`);\r\n    \r\n    // Adjust for available CPU\r\n    const cpuLoadFactor = metrics.cpuUsage / 100;\r\n    expectedInferenceTime *= (1 + cpuLoadFactor);\r\n    factors.push(`CPU usage: ${metrics.cpuUsage}%`);\r\n    \r\n    // Adjust for memory pressure\r\n    if (metrics.memoryPressure === 'HIGH') {\r\n      expectedInferenceTime *= 1.5;\r\n      factors.push('High memory pressure');\r\n    } else if (metrics.memoryPressure === 'CRITICAL') {\r\n      expectedInferenceTime *= 2.0;\r\n      factors.push('Critical memory pressure');\r\n    }\r\n    \r\n    // Adjust for thermal throttling\r\n    if (metrics.thermalThrottling) {\r\n      expectedInferenceTime *= 1.3;\r\n      factors.push('Thermal throttling active');\r\n    }\r\n    \r\n    // Estimate accuracy based on model size (larger models generally more accurate)\r\n    const expectedAccuracy = Math.min(95, 60 + (memoryRequirement / 100));\r\n    \r\n    // Calculate confidence based on available data\r\n    const confidence = Math.min(100, this.metricsHistory.length * 2);\r\n    \r\n    return {\r\n      expectedInferenceTime: Math.round(expectedInferenceTime),\r\n      expectedAccuracy: Math.round(expectedAccuracy),\r\n      resourceRequirement: memoryRequirement,\r\n      confidence,\r\n      factors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update resource allocation strategy\r\n   */\r\n  public updateAllocationStrategy(strategy: Partial<ResourceAllocationStrategy>): void {\r\n    this.currentAllocationStrategy = {\r\n      ...this.currentAllocationStrategy,\r\n      ...strategy\r\n    };\r\n    \r\n    logger.info('üîß Resource allocation strategy updated:', this.currentAllocationStrategy);\r\n    this.emit('allocationStrategyUpdated', this.currentAllocationStrategy);\r\n  }\r\n\r\n  /**\r\n   * Get current metrics\r\n   */\r\n  public getCurrentMetrics(): LLMResourceMetrics | null {\r\n    return this.currentMetrics;\r\n  }\r\n\r\n  /**\r\n   * Get metrics history\r\n   */\r\n  public getMetricsHistory(limit?: number): LLMResourceMetrics[] {\r\n    if (limit) {\r\n      return this.metricsHistory.slice(-limit);\r\n    }\r\n    return [...this.metricsHistory];\r\n  }\r\n\r\n  /**\r\n   * Get current resource allocation strategy\r\n   */\r\n  public getAllocationStrategy(): ResourceAllocationStrategy {\r\n    return { ...this.currentAllocationStrategy };\r\n  }\r\n\r\n  /**\r\n   * Check if system can handle a specific model\r\n   */\r\n  public canHandleModel(memoryRequirement: number, cpuThreads: number): boolean {\r\n    if (!this.currentMetrics) return false;\r\n    \r\n    const availableMemory = this.currentMetrics.availableMemory;\r\n    const currentCpuUsage = this.currentMetrics.cpuUsage;\r\n    \r\n    // Check memory availability (leave 1GB buffer)\r\n    if (memoryRequirement > (availableMemory - 1024)) {\r\n      return false;\r\n    }\r\n    \r\n    // Check CPU availability (don't exceed 90% total usage)\r\n    const estimatedCpuIncrease = (cpuThreads / this.currentMetrics.availableCores) * 100;\r\n    if ((currentCpuUsage + estimatedCpuIncrease) > 90) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get system health score (0-100)\r\n   */\r\n  public getSystemHealthScore(): number {\r\n    if (!this.currentMetrics) return 0;\r\n    \r\n    const metrics = this.currentMetrics;\r\n    let score = 100;\r\n    \r\n    // Memory pressure penalty\r\n    switch (metrics.memoryPressure) {\r\n      case 'MEDIUM': score -= 10; break;\r\n      case 'HIGH': score -= 25; break;\r\n      case 'CRITICAL': score -= 50; break;\r\n    }\r\n    \r\n    // CPU usage penalty\r\n    if (metrics.cpuUsage > 70) score -= (metrics.cpuUsage - 70);\r\n    \r\n    // Thermal throttling penalty\r\n    if (metrics.thermalThrottling) score -= 30;\r\n    \r\n    // Swap usage penalty\r\n    if (metrics.swapUsage > 512) score -= 20;\r\n    \r\n    // Inference performance penalty\r\n    if (metrics.inferenceLatency > 2000) score -= 15;\r\n    \r\n    return Math.max(0, Math.round(score));\r\n  }\r\n\r\n  /**\r\n   * Shutdown the resource monitor\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    try {\r\n      logger.info('üõë Shutting down LLM Resource Monitor...');\r\n      \r\n      await this.stopMonitoring();\r\n      \r\n      // Clear history\r\n      this.metricsHistory = [];\r\n      this.currentMetrics = null;\r\n      \r\n      logger.info('‚úÖ LLM Resource Monitor shutdown completed');\r\n      \r\n    } catch (error) {\r\n      logger.error('‚ùå Error during LLM Resource Monitor shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  LLMResourceMetrics,\r\n  OptimizationRecommendation,\r\n  ResourceAllocationStrategy,\r\n  PerformancePrediction\r\n};"],"mappings":"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","ignoreList":[]}