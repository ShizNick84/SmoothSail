df517913c11926675506b1752f81cbf4
"use strict";

/* istanbul ignore next */
function cov_1o33sj3qc1() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\tunnel-load-balancer.ts";
  var hash = "33626ed3298081fce8dc2c4c1775ba3e31b00290";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\tunnel-load-balancer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 68
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "3": {
        start: {
          line: 5,
          column: 29
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 17,
          column: 90
        }
      },
      "5": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 57
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "7": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 75
        }
      },
      "8": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "9": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 61
        }
      },
      "10": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 16
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 33
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 74
        }
      },
      "24": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "25": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 66
        }
      },
      "26": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 30
        }
      },
      "28": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 39
        }
      },
      "30": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "31": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 41
        }
      },
      "32": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 42
        }
      },
      "33": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "34": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 67
        }
      },
      "35": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "36": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 31
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 52
        }
      },
      "38": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "39": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 54
        }
      },
      "40": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 46
        }
      },
      "41": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 43
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "43": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 61
        }
      },
      "44": {
        start: {
          line: 104,
          column: 33
        },
        end: {
          line: 104,
          column: 77
        }
      },
      "45": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "46": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 67
        }
      },
      "47": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 24
        }
      },
      "48": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "49": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "50": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 58
        }
      },
      "51": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 22
        }
      },
      "52": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 83
        }
      },
      "53": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 64
        }
      },
      "54": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 22
        }
      },
      "55": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 85
        }
      },
      "56": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 67
        }
      },
      "57": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 22
        }
      },
      "58": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 78
        }
      },
      "59": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "60": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 22
        }
      },
      "61": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 79
        }
      },
      "62": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 60
        }
      },
      "63": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 22
        }
      },
      "64": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 73
        }
      },
      "65": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 53
        }
      },
      "66": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 22
        }
      },
      "67": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "68": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 54
        }
      },
      "69": {
        start: {
          line: 141,
          column: 30
        },
        end: {
          line: 141,
          column: 88
        }
      },
      "70": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 142,
          column: 74
        }
      },
      "71": {
        start: {
          line: 143,
          column: 26
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "72": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 57
        }
      },
      "73": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "74": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 47
        }
      },
      "75": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 25
        }
      },
      "76": {
        start: {
          line: 169,
          column: 31
        },
        end: {
          line: 169,
          column: 69
        }
      },
      "77": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "78": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "79": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 29
        }
      },
      "80": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "81": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 29
        }
      },
      "82": {
        start: {
          line: 180,
          column: 34
        },
        end: {
          line: 180,
          column: 84
        }
      },
      "83": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "84": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 29
        }
      },
      "85": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "86": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 29
        }
      },
      "87": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 24
        }
      },
      "88": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "89": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 53
        }
      },
      "90": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 24
        }
      },
      "91": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 87
        }
      },
      "92": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 48
        }
      },
      "93": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 58
        }
      },
      "94": {
        start: {
          line: 207,
          column: 34
        },
        end: {
          line: 207,
          column: 73
        }
      },
      "95": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "96": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 79
        }
      },
      "97": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 60
        }
      },
      "98": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 24
        }
      },
      "99": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 109
        }
      },
      "100": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 79
        }
      },
      "101": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 33
        }
      },
      "102": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 46
        }
      },
      "103": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 43
        }
      },
      "104": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 65
        }
      },
      "105": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "106": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 73
        }
      },
      "107": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 19
        }
      },
      "108": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 66
        }
      },
      "109": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 46
        }
      },
      "110": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 100
        }
      },
      "111": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 69
        }
      },
      "112": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 48
        }
      },
      "113": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 40
        }
      },
      "114": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 58
        }
      },
      "115": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "116": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 37
        }
      },
      "117": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 91
        }
      },
      "118": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 60
        }
      },
      "119": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "120": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 55
        }
      },
      "121": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "122": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 53
        }
      },
      "123": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "124": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "125": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 52
        }
      },
      "126": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 289,
          column: 66
        }
      },
      "127": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "128": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 55
        }
      },
      "129": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "130": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "131": {
        start: {
          line: 303,
          column: 23
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "132": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 53
        }
      },
      "133": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 71
        }
      },
      "134": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 71
        }
      },
      "135": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 72
        }
      },
      "136": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "137": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 54
        }
      },
      "138": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 49
        }
      },
      "139": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 39
        }
      },
      "140": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 62
        }
      },
      "141": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "142": {
        start: {
          line: 333,
          column: 34
        },
        end: {
          line: 333,
          column: 83
        }
      },
      "143": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 335,
          column: 25
        }
      },
      "144": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 25
        }
      },
      "145": {
        start: {
          line: 337,
          column: 38
        },
        end: {
          line: 337,
          column: 114
        }
      },
      "146": {
        start: {
          line: 338,
          column: 37
        },
        end: {
          line: 338,
          column: 83
        }
      },
      "147": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "148": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 55
        }
      },
      "149": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 103
        }
      },
      "150": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 44
        }
      },
      "151": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 347,
          column: 15
        }
      },
      "152": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 57
        }
      },
      "153": {
        start: {
          line: 358,
          column: 25
        },
        end: {
          line: 358,
          column: 89
        }
      },
      "154": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 84
        }
      },
      "155": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 24
        }
      },
      "156": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 373,
          column: 11
        }
      },
      "157": {
        start: {
          line: 370,
          column: 34
        },
        end: {
          line: 370,
          column: 94
        }
      },
      "158": {
        start: {
          line: 371,
          column: 36
        },
        end: {
          line: 371,
          column: 98
        }
      },
      "159": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 69
        }
      },
      "160": {
        start: {
          line: 383,
          column: 28
        },
        end: {
          line: 386,
          column: 13
        }
      },
      "161": {
        start: {
          line: 384,
          column: 27
        },
        end: {
          line: 384,
          column: 73
        }
      },
      "162": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 32
        }
      },
      "163": {
        start: {
          line: 388,
          column: 21
        },
        end: {
          line: 388,
          column: 48
        }
      },
      "164": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "165": {
        start: {
          line: 391,
          column: 27
        },
        end: {
          line: 391,
          column: 73
        }
      },
      "166": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 29
        }
      },
      "167": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "168": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 30
        }
      },
      "169": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 35
        }
      },
      "170": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 411,
          column: 11
        }
      },
      "171": {
        start: {
          line: 408,
          column: 31
        },
        end: {
          line: 408,
          column: 93
        }
      },
      "172": {
        start: {
          line: 409,
          column: 34
        },
        end: {
          line: 409,
          column: 99
        }
      },
      "173": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 63
        }
      },
      "174": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 424,
          column: 11
        }
      },
      "175": {
        start: {
          line: 421,
          column: 32
        },
        end: {
          line: 421,
          column: 97
        }
      },
      "176": {
        start: {
          line: 422,
          column: 35
        },
        end: {
          line: 422,
          column: 103
        }
      },
      "177": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 65
        }
      },
      "178": {
        start: {
          line: 433,
          column: 28
        },
        end: {
          line: 433,
          column: 79
        }
      },
      "179": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 45
        }
      },
      "180": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 48
        }
      },
      "181": {
        start: {
          line: 443,
          column: 32
        },
        end: {
          line: 443,
          column: 96
        }
      },
      "182": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 89
        }
      },
      "183": {
        start: {
          line: 446,
          column: 30
        },
        end: {
          line: 446,
          column: 67
        }
      },
      "184": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 450,
          column: 9
        }
      },
      "185": {
        start: {
          line: 448,
          column: 32
        },
        end: {
          line: 448,
          column: 64
        }
      },
      "186": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 81
        }
      },
      "187": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 23
        }
      },
      "188": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 35
        }
      },
      "189": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 58
        }
      },
      "190": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 58
        }
      },
      "191": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 67
        }
      },
      "192": {
        start: {
          line: 463,
          column: 0
        },
        end: {
          line: 463,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 1
          },
          end: {
            line: 10,
            column: 2
          }
        },
        loc: {
          start: {
            line: 10,
            column: 34
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 76
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 62
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 14
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 42
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 49
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 168
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 38
          }
        },
        loc: {
          start: {
            line: 170,
            column: 51
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 170
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 197
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 28
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 222
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 23
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 230
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 45
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 239
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 29
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 255
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 26
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 269
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 271,
            column: 49
          },
          end: {
            line: 271,
            column: 50
          }
        },
        loc: {
          start: {
            line: 271,
            column: 65
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 271
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 275,
            column: 52
          },
          end: {
            line: 275,
            column: 53
          }
        },
        loc: {
          start: {
            line: 275,
            column: 68
          },
          end: {
            line: 277,
            column: 9
          }
        },
        line: 275
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 279,
            column: 53
          },
          end: {
            line: 279,
            column: 54
          }
        },
        loc: {
          start: {
            line: 279,
            column: 69
          },
          end: {
            line: 283,
            column: 9
          }
        },
        line: 279
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 30
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 288
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 41
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 299
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 28
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 319
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 323,
            column: 49
          },
          end: {
            line: 323,
            column: 50
          }
        },
        loc: {
          start: {
            line: 323,
            column: 55
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 323
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 26
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 331
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 39
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 357
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 45
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 368
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 369,
            column: 39
          },
          end: {
            line: 369,
            column: 40
          }
        },
        loc: {
          start: {
            line: 369,
            column: 59
          },
          end: {
            line: 373,
            column: 9
          }
        },
        line: 369
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 47
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 381
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 383,
            column: 52
          },
          end: {
            line: 383,
            column: 53
          }
        },
        loc: {
          start: {
            line: 383,
            column: 69
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 383
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 40
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 406
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 407,
            column: 39
          },
          end: {
            line: 407,
            column: 40
          }
        },
        loc: {
          start: {
            line: 407,
            column: 58
          },
          end: {
            line: 411,
            column: 9
          }
        },
        line: 407
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 41
          },
          end: {
            line: 425,
            column: 5
          }
        },
        line: 419
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 420,
            column: 39
          },
          end: {
            line: 420,
            column: 40
          }
        },
        loc: {
          start: {
            line: 420,
            column: 58
          },
          end: {
            line: 424,
            column: 9
          }
        },
        line: 420
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 432,
            column: 5
          }
        },
        loc: {
          start: {
            line: 432,
            column: 35
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 432
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        loc: {
          start: {
            line: 441,
            column: 39
          },
          end: {
            line: 451,
            column: 5
          }
        },
        line: 441
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 455,
            column: 5
          }
        },
        loc: {
          start: {
            line: 455,
            column: 14
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 455
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 3
          },
          end: {
            line: 17,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 3
          },
          end: {
            line: 17,
            column: 24
          }
        }, {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 87
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 100,
            column: 17
          },
          end: {
            line: 100,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 38
          },
          end: {
            line: 100,
            column: 40
          }
        }],
        line: 100
      },
      "6": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 115,
            column: 22
          }
        }, {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 119,
            column: 22
          }
        }, {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 123,
            column: 22
          }
        }, {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 127,
            column: 22
          }
        }, {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 131,
            column: 22
          }
        }, {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 135,
            column: 22
          }
        }, {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 54
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 146,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 146,
            column: 40
          }
        }, {
          start: {
            line: 146,
            column: 44
          },
          end: {
            line: 146,
            column: 45
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 147,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 147,
            column: 51
          }
        }, {
          start: {
            line: 147,
            column: 55
          },
          end: {
            line: 147,
            column: 56
          }
        }],
        line: 147
      },
      "11": {
        loc: {
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 148,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 21
          },
          end: {
            line: 148,
            column: 43
          }
        }, {
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 48
          }
        }],
        line: 148
      },
      "12": {
        loc: {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 168,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 168,
            column: 45
          },
          end: {
            line: 168,
            column: 47
          }
        }],
        line: 168
      },
      "13": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "16": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 181,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 181,
            column: 29
          }
        }, {
          start: {
            line: 181,
            column: 33
          },
          end: {
            line: 181,
            column: 88
          }
        }],
        line: 181
      },
      "17": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "18": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 29
          }
        }, {
          start: {
            line: 185,
            column: 33
          },
          end: {
            line: 185,
            column: 88
          }
        }],
        line: 185
      },
      "19": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "20": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "22": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "23": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 260,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 260,
            column: 58
          }
        }, {
          start: {
            line: 260,
            column: 62
          },
          end: {
            line: 260,
            column: 117
          }
        }],
        line: 260
      },
      "24": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "25": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "26": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "27": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 335,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 335,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "28": {
        loc: {
          start: {
            line: 370,
            column: 34
          },
          end: {
            line: 370,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 34
          },
          end: {
            line: 370,
            column: 89
          }
        }, {
          start: {
            line: 370,
            column: 93
          },
          end: {
            line: 370,
            column: 94
          }
        }],
        line: 370
      },
      "29": {
        loc: {
          start: {
            line: 371,
            column: 36
          },
          end: {
            line: 371,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 36
          },
          end: {
            line: 371,
            column: 93
          }
        }, {
          start: {
            line: 371,
            column: 97
          },
          end: {
            line: 371,
            column: 98
          }
        }],
        line: 371
      },
      "30": {
        loc: {
          start: {
            line: 372,
            column: 19
          },
          end: {
            line: 372,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 53
          },
          end: {
            line: 372,
            column: 60
          }
        }, {
          start: {
            line: 372,
            column: 63
          },
          end: {
            line: 372,
            column: 68
          }
        }],
        line: 372
      },
      "31": {
        loc: {
          start: {
            line: 384,
            column: 27
          },
          end: {
            line: 384,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 27
          },
          end: {
            line: 384,
            column: 68
          }
        }, {
          start: {
            line: 384,
            column: 72
          },
          end: {
            line: 384,
            column: 73
          }
        }],
        line: 384
      },
      "32": {
        loc: {
          start: {
            line: 391,
            column: 27
          },
          end: {
            line: 391,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 27
          },
          end: {
            line: 391,
            column: 68
          }
        }, {
          start: {
            line: 391,
            column: 72
          },
          end: {
            line: 391,
            column: 73
          }
        }],
        line: 391
      },
      "33": {
        loc: {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 395,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 395,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "34": {
        loc: {
          start: {
            line: 408,
            column: 31
          },
          end: {
            line: 408,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 31
          },
          end: {
            line: 408,
            column: 88
          }
        }, {
          start: {
            line: 408,
            column: 92
          },
          end: {
            line: 408,
            column: 93
          }
        }],
        line: 408
      },
      "35": {
        loc: {
          start: {
            line: 409,
            column: 34
          },
          end: {
            line: 409,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 34
          },
          end: {
            line: 409,
            column: 94
          }
        }, {
          start: {
            line: 409,
            column: 98
          },
          end: {
            line: 409,
            column: 99
          }
        }],
        line: 409
      },
      "36": {
        loc: {
          start: {
            line: 410,
            column: 19
          },
          end: {
            line: 410,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 410,
            column: 48
          },
          end: {
            line: 410,
            column: 55
          }
        }, {
          start: {
            line: 410,
            column: 58
          },
          end: {
            line: 410,
            column: 62
          }
        }],
        line: 410
      },
      "37": {
        loc: {
          start: {
            line: 421,
            column: 32
          },
          end: {
            line: 421,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 421,
            column: 32
          },
          end: {
            line: 421,
            column: 85
          }
        }, {
          start: {
            line: 421,
            column: 89
          },
          end: {
            line: 421,
            column: 97
          }
        }],
        line: 421
      },
      "38": {
        loc: {
          start: {
            line: 422,
            column: 35
          },
          end: {
            line: 422,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 35
          },
          end: {
            line: 422,
            column: 91
          }
        }, {
          start: {
            line: 422,
            column: 95
          },
          end: {
            line: 422,
            column: 103
          }
        }],
        line: 422
      },
      "39": {
        loc: {
          start: {
            line: 423,
            column: 19
          },
          end: {
            line: 423,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 423,
            column: 50
          },
          end: {
            line: 423,
            column: 57
          }
        }, {
          start: {
            line: 423,
            column: 60
          },
          end: {
            line: 423,
            column: 64
          }
        }],
        line: 423
      },
      "40": {
        loc: {
          start: {
            line: 443,
            column: 32
          },
          end: {
            line: 443,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 32
          },
          end: {
            line: 443,
            column: 91
          }
        }, {
          start: {
            line: 443,
            column: 95
          },
          end: {
            line: 443,
            column: 96
          }
        }],
        line: 443
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33626ed3298081fce8dc2c4c1775ba3e31b00290"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1o33sj3qc1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1o33sj3qc1();
cov_1o33sj3qc1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1o33sj3qc1().s[1]++;
exports.TunnelLoadBalancer = exports.LoadBalancingStrategy = void 0;
const events_1 =
/* istanbul ignore next */
(cov_1o33sj3qc1().s[2]++, require("events"));
const ssh_tunnel_manager_1 =
/* istanbul ignore next */
(cov_1o33sj3qc1().s[3]++, require("./ssh-tunnel-manager"));
/**
 * Load balancing strategy types
 */
var LoadBalancingStrategy;
/* istanbul ignore next */
cov_1o33sj3qc1().s[4]++;
(function (LoadBalancingStrategy) {
  /* istanbul ignore next */
  cov_1o33sj3qc1().f[0]++;
  cov_1o33sj3qc1().s[5]++;
  LoadBalancingStrategy["ROUND_ROBIN"] = "ROUND_ROBIN";
  /* istanbul ignore next */
  cov_1o33sj3qc1().s[6]++;
  LoadBalancingStrategy["LEAST_CONNECTIONS"] = "LEAST_CONNECTIONS";
  /* istanbul ignore next */
  cov_1o33sj3qc1().s[7]++;
  LoadBalancingStrategy["WEIGHTED_ROUND_ROBIN"] = "WEIGHTED_ROUND_ROBIN";
  /* istanbul ignore next */
  cov_1o33sj3qc1().s[8]++;
  LoadBalancingStrategy["HEALTH_BASED"] = "HEALTH_BASED";
  /* istanbul ignore next */
  cov_1o33sj3qc1().s[9]++;
  LoadBalancingStrategy["LATENCY_BASED"] = "LATENCY_BASED";
  /* istanbul ignore next */
  cov_1o33sj3qc1().s[10]++;
  LoadBalancingStrategy["RANDOM"] = "RANDOM";
})(
/* istanbul ignore next */
(cov_1o33sj3qc1().b[0][0]++, LoadBalancingStrategy) ||
/* istanbul ignore next */
(cov_1o33sj3qc1().b[0][1]++, exports.LoadBalancingStrategy = LoadBalancingStrategy = {}));
/**
 * Tunnel Load Balancer
 * Implements intelligent load balancing and failover for multiple SSH tunnels
 */
class TunnelLoadBalancer extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(logger, tunnelManager, healthMonitor, stateTracker, config) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[1]++;
    cov_1o33sj3qc1().s[11]++;
    super();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[12]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[13]++;
    this.tunnelManager = tunnelManager;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[14]++;
    this.healthMonitor = healthMonitor;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[15]++;
    this.stateTracker = stateTracker;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[16]++;
    this.tunnelWeights = new Map();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[17]++;
    this.roundRobinIndex = 0;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[18]++;
    this.weightAdjustmentTimer = null;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[19]++;
    this.isEnabled = false;
    // Default configuration
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[20]++;
    this.config = {
      minActiveTunnels: 1,
      maxActiveTunnels: 3,
      strategy: LoadBalancingStrategy.HEALTH_BASED,
      healthThreshold: 70,
      maxLatencyThreshold: 1000,
      enableFailover: true,
      failoverTimeout: 30000,
      enableDynamicWeights: true,
      weightAdjustmentInterval: 60000,
      ...config
    };
    // Initialize statistics
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[21]++;
    this.loadBalancingStats = {
      totalRequests: 0,
      requestsPerTunnel: new Map(),
      averageResponseTime: 0,
      failoverCount: 0,
      lastFailover: null,
      activeStrategy: this.config.strategy,
      tunnelUtilization: new Map()
    };
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[22]++;
    this.setupEventListeners();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[23]++;
    this.logger.info('Tunnel Load Balancer initialized', this.config);
  }
  /**
   * Enable load balancing
   */
  enable() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[2]++;
    cov_1o33sj3qc1().s[24]++;
    if (this.isEnabled) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[1][0]++;
      cov_1o33sj3qc1().s[25]++;
      this.logger.warn('Load balancing is already enabled');
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[1][1]++;
    }
    cov_1o33sj3qc1().s[27]++;
    this.isEnabled = true;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[28]++;
    this.logger.info('Load balancing enabled');
    // Initialize tunnel weights
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[29]++;
    this.initializeTunnelWeights();
    // Start dynamic weight adjustment if enabled
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[30]++;
    if (this.config.enableDynamicWeights) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[2][0]++;
      cov_1o33sj3qc1().s[31]++;
      this.startWeightAdjustment();
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[2][1]++;
    }
    cov_1o33sj3qc1().s[32]++;
    this.emit('loadBalancingEnabled');
  }
  /**
   * Disable load balancing
   */
  disable() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[3]++;
    cov_1o33sj3qc1().s[33]++;
    if (!this.isEnabled) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[3][0]++;
      cov_1o33sj3qc1().s[34]++;
      this.logger.warn('Load balancing is already disabled');
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[35]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[3][1]++;
    }
    cov_1o33sj3qc1().s[36]++;
    this.isEnabled = false;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[37]++;
    this.logger.info('Load balancing disabled');
    // Stop weight adjustment
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[38]++;
    if (this.weightAdjustmentTimer) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[4][0]++;
      cov_1o33sj3qc1().s[39]++;
      clearInterval(this.weightAdjustmentTimer);
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[40]++;
      this.weightAdjustmentTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[4][1]++;
    }
    cov_1o33sj3qc1().s[41]++;
    this.emit('loadBalancingDisabled');
  }
  /**
   * Select the best tunnel for a request
   *
   * @param excludeConnections - Connection IDs to exclude from selection
   * @returns Selected tunnel or null if none available
   */
  selectTunnel(excludeConnections =
  /* istanbul ignore next */
  (cov_1o33sj3qc1().b[5][0]++, [])) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[4]++;
    cov_1o33sj3qc1().s[42]++;
    if (!this.isEnabled) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[6][0]++;
      cov_1o33sj3qc1().s[43]++;
      throw new Error('Load balancing is not enabled');
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[6][1]++;
    }
    const availableTunnels =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[44]++, this.getAvailableTunnels(excludeConnections));
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[45]++;
    if (availableTunnels.length === 0) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[7][0]++;
      cov_1o33sj3qc1().s[46]++;
      this.logger.warn('No available tunnels for selection');
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[47]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[7][1]++;
    }
    let selectedConnection;
    let selectionReason;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[48]++;
    switch (this.config.strategy) {
      case LoadBalancingStrategy.ROUND_ROBIN:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][0]++;
        cov_1o33sj3qc1().s[49]++;
        selectedConnection = this.selectRoundRobin(availableTunnels);
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[50]++;
        selectionReason = 'Round robin selection';
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[51]++;
        break;
      case LoadBalancingStrategy.LEAST_CONNECTIONS:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][1]++;
        cov_1o33sj3qc1().s[52]++;
        selectedConnection = this.selectLeastConnections(availableTunnels);
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[53]++;
        selectionReason = 'Least connections selection';
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[54]++;
        break;
      case LoadBalancingStrategy.WEIGHTED_ROUND_ROBIN:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][2]++;
        cov_1o33sj3qc1().s[55]++;
        selectedConnection = this.selectWeightedRoundRobin(availableTunnels);
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[56]++;
        selectionReason = 'Weighted round robin selection';
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[57]++;
        break;
      case LoadBalancingStrategy.HEALTH_BASED:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][3]++;
        cov_1o33sj3qc1().s[58]++;
        selectedConnection = this.selectHealthBased(availableTunnels);
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[59]++;
        selectionReason = 'Health-based selection';
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[60]++;
        break;
      case LoadBalancingStrategy.LATENCY_BASED:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][4]++;
        cov_1o33sj3qc1().s[61]++;
        selectedConnection = this.selectLatencyBased(availableTunnels);
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[62]++;
        selectionReason = 'Latency-based selection';
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[63]++;
        break;
      case LoadBalancingStrategy.RANDOM:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][5]++;
        cov_1o33sj3qc1().s[64]++;
        selectedConnection = this.selectRandom(availableTunnels);
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[65]++;
        selectionReason = 'Random selection';
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[66]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[8][6]++;
        cov_1o33sj3qc1().s[67]++;
        selectedConnection = availableTunnels[0];
        /* istanbul ignore next */
        cov_1o33sj3qc1().s[68]++;
        selectionReason = 'Default selection';
    }
    // Get additional metrics for the selection
    const healthMetrics =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[69]++, this.healthMonitor.getHealthMetrics(selectedConnection.id));
    const tunnelWeight =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[70]++, this.tunnelWeights.get(selectedConnection.id));
    const selection =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[71]++, {
      connection: selectedConnection,
      reason: selectionReason,
      weight:
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[9][0]++, tunnelWeight?.weight) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[9][1]++, 1),
      healthScore:
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[10][0]++, healthMetrics?.healthScore) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[10][1]++, 0),
      latency:
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[11][0]++, healthMetrics?.latency) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[11][1]++, 0),
      selectionTime: new Date()
    });
    // Update statistics
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[72]++;
    this.updateSelectionStats(selectedConnection.id);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[73]++;
    this.logger.debug(`Tunnel selected: ${selectedConnection.id}`, {
      strategy: this.config.strategy,
      reason: selectionReason,
      healthScore: selection.healthScore,
      latency: selection.latency
    });
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[74]++;
    this.emit('tunnelSelected', selection);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[75]++;
    return selection;
  }
  /**
   * Get available tunnels for load balancing
   *
   * @param excludeConnections - Connection IDs to exclude
   * @returns Array of available tunnel connections
   */
  getAvailableTunnels(excludeConnections =
  /* istanbul ignore next */
  (cov_1o33sj3qc1().b[12][0]++, [])) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[5]++;
    const allConnections =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[76]++, this.tunnelManager.getAllConnections());
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[77]++;
    return allConnections.filter(connection => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[6]++;
      cov_1o33sj3qc1().s[78]++;
      // Exclude specified connections
      if (excludeConnections.includes(connection.id)) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[13][0]++;
        cov_1o33sj3qc1().s[79]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[13][1]++;
      }
      // Must be connected
      cov_1o33sj3qc1().s[80]++;
      if (connection.state !== ssh_tunnel_manager_1.TunnelState.CONNECTED) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[14][0]++;
        cov_1o33sj3qc1().s[81]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[14][1]++;
      }
      // Check health threshold
      const healthMetrics =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[82]++, this.healthMonitor.getHealthMetrics(connection.id));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[83]++;
      if (
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[16][0]++, healthMetrics) &&
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[16][1]++, healthMetrics.healthScore < this.config.healthThreshold)) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[15][0]++;
        cov_1o33sj3qc1().s[84]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[15][1]++;
      }
      // Check latency threshold
      cov_1o33sj3qc1().s[85]++;
      if (
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[18][0]++, healthMetrics) &&
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[18][1]++, healthMetrics.latency > this.config.maxLatencyThreshold)) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[17][0]++;
        cov_1o33sj3qc1().s[86]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[17][1]++;
      }
      cov_1o33sj3qc1().s[87]++;
      return true;
    });
  }
  /**
   * Perform failover to backup tunnels
   *
   * @param failedConnectionId - ID of the failed connection
   * @returns New tunnel selection or null if no alternatives
   */
  async performFailover(failedConnectionId) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[7]++;
    cov_1o33sj3qc1().s[88]++;
    if (!this.config.enableFailover) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[19][0]++;
      cov_1o33sj3qc1().s[89]++;
      this.logger.warn('Failover is disabled');
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[90]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[19][1]++;
    }
    cov_1o33sj3qc1().s[91]++;
    this.logger.warn(`Performing failover from connection: ${failedConnectionId}`);
    // Update failover statistics
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[92]++;
    this.loadBalancingStats.failoverCount++;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[93]++;
    this.loadBalancingStats.lastFailover = new Date();
    // Select alternative tunnel
    const alternativeTunnel =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[94]++, this.selectTunnel([failedConnectionId]));
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[95]++;
    if (!alternativeTunnel) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[20][0]++;
      cov_1o33sj3qc1().s[96]++;
      this.logger.error('No alternative tunnels available for failover');
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[97]++;
      this.emit('failoverFailed', failedConnectionId);
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[98]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[20][1]++;
    }
    cov_1o33sj3qc1().s[99]++;
    this.logger.info(`Failover successful: ${failedConnectionId} -> ${alternativeTunnel.connection.id}`);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[100]++;
    this.emit('failoverSuccessful', failedConnectionId, alternativeTunnel);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[101]++;
    return alternativeTunnel;
  }
  /**
   * Get load balancing statistics
   *
   * @returns Current load balancing statistics
   */
  getLoadBalancingStats() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[8]++;
    cov_1o33sj3qc1().s[102]++;
    return {
      ...this.loadBalancingStats
    };
  }
  /**
   * Get tunnel weights
   *
   * @returns Map of tunnel weights
   */
  getTunnelWeights() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[9]++;
    cov_1o33sj3qc1().s[103]++;
    return new Map(this.tunnelWeights);
  }
  /**
   * Update tunnel weight manually
   *
   * @param connectionId - Connection identifier
   * @param weight - New weight value
   */
  updateTunnelWeight(connectionId, weight) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[10]++;
    const tunnelWeight =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[104]++, this.tunnelWeights.get(connectionId));
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[105]++;
    if (!tunnelWeight) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[21][0]++;
      cov_1o33sj3qc1().s[106]++;
      this.logger.warn(`Tunnel weight not found: ${connectionId}`);
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[107]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[21][1]++;
    }
    cov_1o33sj3qc1().s[108]++;
    tunnelWeight.weight = Math.max(0.1, Math.min(10, weight)); // Clamp between 0.1 and 10
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[109]++;
    tunnelWeight.lastUpdated = new Date();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[110]++;
    this.logger.info(`Updated tunnel weight: ${connectionId}`, {
      weight: tunnelWeight.weight
    });
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[111]++;
    this.emit('tunnelWeightUpdated', connectionId, tunnelWeight);
  }
  /**
   * Update load balancing strategy
   *
   * @param strategy - New load balancing strategy
   */
  updateStrategy(strategy) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[11]++;
    const oldStrategy =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[112]++, this.config.strategy);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[113]++;
    this.config.strategy = strategy;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[114]++;
    this.loadBalancingStats.activeStrategy = strategy;
    // Reset round robin index when changing strategy
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[115]++;
    if (
    /* istanbul ignore next */
    (cov_1o33sj3qc1().b[23][0]++, strategy === LoadBalancingStrategy.ROUND_ROBIN) ||
    /* istanbul ignore next */
    (cov_1o33sj3qc1().b[23][1]++, strategy === LoadBalancingStrategy.WEIGHTED_ROUND_ROBIN)) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[22][0]++;
      cov_1o33sj3qc1().s[116]++;
      this.roundRobinIndex = 0;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[22][1]++;
    }
    cov_1o33sj3qc1().s[117]++;
    this.logger.info(`Load balancing strategy updated: ${oldStrategy} -> ${strategy}`);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[118]++;
    this.emit('strategyUpdated', oldStrategy, strategy);
  }
  /**
   * Setup event listeners
   */
  setupEventListeners() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[12]++;
    cov_1o33sj3qc1().s[119]++;
    // Listen for tunnel connections
    this.tunnelManager.on('tunnelConnected', connection => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[13]++;
      cov_1o33sj3qc1().s[120]++;
      this.initializeTunnelWeight(connection.id);
    });
    // Listen for tunnel disconnections
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[121]++;
    this.tunnelManager.on('tunnelDisconnected', connection => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[14]++;
      cov_1o33sj3qc1().s[122]++;
      this.tunnelWeights.delete(connection.id);
    });
    // Listen for health changes
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[123]++;
    this.healthMonitor.on('connectionUnhealthy', connection => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[15]++;
      cov_1o33sj3qc1().s[124]++;
      if (this.config.enableFailover) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[24][0]++;
        cov_1o33sj3qc1().s[125]++;
        this.performFailover(connection.id);
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[24][1]++;
      }
    });
  }
  /**
   * Initialize tunnel weights for all connections
   */
  initializeTunnelWeights() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[16]++;
    const connections =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[126]++, this.tunnelManager.getAllConnections());
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[127]++;
    for (const connection of connections) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[128]++;
      this.initializeTunnelWeight(connection.id);
    }
  }
  /**
   * Initialize weight for a specific tunnel
   *
   * @param connectionId - Connection identifier
   */
  initializeTunnelWeight(connectionId) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[17]++;
    cov_1o33sj3qc1().s[129]++;
    if (this.tunnelWeights.has(connectionId)) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[25][0]++;
      cov_1o33sj3qc1().s[130]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[25][1]++;
    }
    const weight =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[131]++, {
      connectionId,
      weight: 1.0,
      baseWeight: 1.0,
      performanceMultiplier: 1.0,
      healthMultiplier: 1.0,
      lastUpdated: new Date()
    });
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[132]++;
    this.tunnelWeights.set(connectionId, weight);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[133]++;
    this.loadBalancingStats.requestsPerTunnel.set(connectionId, 0);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[134]++;
    this.loadBalancingStats.tunnelUtilization.set(connectionId, 0);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[135]++;
    this.logger.debug(`Initialized tunnel weight: ${connectionId}`);
  }
  /**
   * Start dynamic weight adjustment
   */
  startWeightAdjustment() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[18]++;
    cov_1o33sj3qc1().s[136]++;
    if (this.weightAdjustmentTimer) {
      /* istanbul ignore next */
      cov_1o33sj3qc1().b[26][0]++;
      cov_1o33sj3qc1().s[137]++;
      clearInterval(this.weightAdjustmentTimer);
    } else
    /* istanbul ignore next */
    {
      cov_1o33sj3qc1().b[26][1]++;
    }
    cov_1o33sj3qc1().s[138]++;
    this.weightAdjustmentTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[19]++;
      cov_1o33sj3qc1().s[139]++;
      this.adjustTunnelWeights();
    }, this.config.weightAdjustmentInterval);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[140]++;
    this.logger.info('Started dynamic weight adjustment');
  }
  /**
   * Adjust tunnel weights based on performance
   */
  adjustTunnelWeights() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[20]++;
    cov_1o33sj3qc1().s[141]++;
    for (const [connectionId, weight] of this.tunnelWeights.entries()) {
      const healthMetrics =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[142]++, this.healthMonitor.getHealthMetrics(connectionId));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[143]++;
      if (!healthMetrics) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[27][0]++;
        cov_1o33sj3qc1().s[144]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[27][1]++;
      }
      // Calculate performance multiplier based on latency and health
      const latencyMultiplier =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[145]++, Math.max(0.1, 1 - healthMetrics.latency / this.config.maxLatencyThreshold));
      const healthMultiplier =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[146]++, Math.max(0.1, healthMetrics.healthScore / 100));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[147]++;
      weight.performanceMultiplier = latencyMultiplier;
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[148]++;
      weight.healthMultiplier = healthMultiplier;
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[149]++;
      weight.weight = weight.baseWeight * weight.performanceMultiplier * weight.healthMultiplier;
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[150]++;
      weight.lastUpdated = new Date();
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[151]++;
      this.logger.debug(`Adjusted tunnel weight: ${connectionId}`, {
        weight: weight.weight,
        latencyMultiplier,
        healthMultiplier
      });
    }
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[152]++;
    this.emit('weightsAdjusted', this.tunnelWeights);
  }
  /**
   * Select tunnel using round robin strategy
   *
   * @param availableTunnels - Available tunnel connections
   * @returns Selected tunnel connection
   */
  selectRoundRobin(availableTunnels) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[21]++;
    const selected =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[153]++, availableTunnels[this.roundRobinIndex % availableTunnels.length]);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[154]++;
    this.roundRobinIndex = (this.roundRobinIndex + 1) % availableTunnels.length;
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[155]++;
    return selected;
  }
  /**
   * Select tunnel using least connections strategy
   *
   * @param availableTunnels - Available tunnel connections
   * @returns Selected tunnel connection
   */
  selectLeastConnections(availableTunnels) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[22]++;
    cov_1o33sj3qc1().s[156]++;
    return availableTunnels.reduce((least, current) => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[23]++;
      const leastRequests =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[157]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[28][0]++, this.loadBalancingStats.requestsPerTunnel.get(least.id)) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[28][1]++, 0));
      const currentRequests =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[158]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[29][0]++, this.loadBalancingStats.requestsPerTunnel.get(current.id)) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[29][1]++, 0));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[159]++;
      return currentRequests < leastRequests ?
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[30][0]++, current) :
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[30][1]++, least);
    });
  }
  /**
   * Select tunnel using weighted round robin strategy
   *
   * @param availableTunnels - Available tunnel connections
   * @returns Selected tunnel connection
   */
  selectWeightedRoundRobin(availableTunnels) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[24]++;
    // Calculate total weight
    const totalWeight =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[160]++, availableTunnels.reduce((sum, tunnel) => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[25]++;
      const weight =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[161]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[31][0]++, this.tunnelWeights.get(tunnel.id)?.weight) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[31][1]++, 1));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[162]++;
      return sum + weight;
    }, 0));
    // Generate random number
    let random =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[163]++, Math.random() * totalWeight);
    // Select based on weight
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[164]++;
    for (const tunnel of availableTunnels) {
      const weight =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[165]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[32][0]++, this.tunnelWeights.get(tunnel.id)?.weight) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[32][1]++, 1));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[166]++;
      random -= weight;
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[167]++;
      if (random <= 0) {
        /* istanbul ignore next */
        cov_1o33sj3qc1().b[33][0]++;
        cov_1o33sj3qc1().s[168]++;
        return tunnel;
      } else
      /* istanbul ignore next */
      {
        cov_1o33sj3qc1().b[33][1]++;
      }
    }
    // Fallback to first tunnel
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[169]++;
    return availableTunnels[0];
  }
  /**
   * Select tunnel using health-based strategy
   *
   * @param availableTunnels - Available tunnel connections
   * @returns Selected tunnel connection
   */
  selectHealthBased(availableTunnels) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[26]++;
    cov_1o33sj3qc1().s[170]++;
    return availableTunnels.reduce((best, current) => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[27]++;
      const bestHealth =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[171]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[34][0]++, this.healthMonitor.getHealthMetrics(best.id)?.healthScore) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[34][1]++, 0));
      const currentHealth =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[172]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[35][0]++, this.healthMonitor.getHealthMetrics(current.id)?.healthScore) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[35][1]++, 0));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[173]++;
      return currentHealth > bestHealth ?
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[36][0]++, current) :
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[36][1]++, best);
    });
  }
  /**
   * Select tunnel using latency-based strategy
   *
   * @param availableTunnels - Available tunnel connections
   * @returns Selected tunnel connection
   */
  selectLatencyBased(availableTunnels) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[28]++;
    cov_1o33sj3qc1().s[174]++;
    return availableTunnels.reduce((best, current) => {
      /* istanbul ignore next */
      cov_1o33sj3qc1().f[29]++;
      const bestLatency =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[175]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[37][0]++, this.healthMonitor.getHealthMetrics(best.id)?.latency) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[37][1]++, Infinity));
      const currentLatency =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[176]++,
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[38][0]++, this.healthMonitor.getHealthMetrics(current.id)?.latency) ||
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[38][1]++, Infinity));
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[177]++;
      return currentLatency < bestLatency ?
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[39][0]++, current) :
      /* istanbul ignore next */
      (cov_1o33sj3qc1().b[39][1]++, best);
    });
  }
  /**
   * Select tunnel using random strategy
   *
   * @param availableTunnels - Available tunnel connections
   * @returns Selected tunnel connection
   */
  selectRandom(availableTunnels) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[30]++;
    const randomIndex =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[178]++, Math.floor(Math.random() * availableTunnels.length));
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[179]++;
    return availableTunnels[randomIndex];
  }
  /**
   * Update selection statistics
   *
   * @param connectionId - Selected connection ID
   */
  updateSelectionStats(connectionId) {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[31]++;
    cov_1o33sj3qc1().s[180]++;
    this.loadBalancingStats.totalRequests++;
    const currentRequests =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[181]++,
    /* istanbul ignore next */
    (cov_1o33sj3qc1().b[40][0]++, this.loadBalancingStats.requestsPerTunnel.get(connectionId)) ||
    /* istanbul ignore next */
    (cov_1o33sj3qc1().b[40][1]++, 0));
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[182]++;
    this.loadBalancingStats.requestsPerTunnel.set(connectionId, currentRequests + 1);
    // Update utilization
    const totalRequests =
    /* istanbul ignore next */
    (cov_1o33sj3qc1().s[183]++, this.loadBalancingStats.totalRequests);
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[184]++;
    for (const [tunnelId, requests] of this.loadBalancingStats.requestsPerTunnel.entries()) {
      const utilization =
      /* istanbul ignore next */
      (cov_1o33sj3qc1().s[185]++, requests / totalRequests * 100);
      /* istanbul ignore next */
      cov_1o33sj3qc1().s[186]++;
      this.loadBalancingStats.tunnelUtilization.set(tunnelId, utilization);
    }
  }
  /**
   * Cleanup load balancer resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_1o33sj3qc1().f[32]++;
    cov_1o33sj3qc1().s[187]++;
    this.disable();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[188]++;
    this.tunnelWeights.clear();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[189]++;
    this.loadBalancingStats.requestsPerTunnel.clear();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[190]++;
    this.loadBalancingStats.tunnelUtilization.clear();
    /* istanbul ignore next */
    cov_1o33sj3qc1().s[191]++;
    this.logger.info('Tunnel load balancer cleanup completed');
  }
}
/* istanbul ignore next */
cov_1o33sj3qc1().s[192]++;
exports.TunnelLoadBalancer = TunnelLoadBalancer;