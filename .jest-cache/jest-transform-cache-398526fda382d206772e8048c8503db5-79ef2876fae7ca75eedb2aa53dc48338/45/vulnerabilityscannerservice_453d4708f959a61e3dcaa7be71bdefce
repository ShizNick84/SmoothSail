616e6ed0642a2556a5b3d970464a78d4
"use strict";

/**
 * =============================================================================
 * COMPREHENSIVE VULNERABILITY SCANNER SERVICE
 * =============================================================================
 *
 * Advanced vulnerability scanning service for the AI crypto trading agent.
 * Implements automated vulnerability detection, assessment, and reporting
 * across all system components and dependencies.
 *
 * Features:
 * - Dependency vulnerability scanning
 * - Code vulnerability analysis
 * - Configuration security scanning
 * - Network vulnerability assessment
 * - Real-time vulnerability monitoring
 * - Automated remediation recommendations
 *
 * Requirements: 25.7 - Create vulnerability scanning and assessment
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2fe1xfdeye() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\vulnerability-scanner-service.ts";
  var hash = "d84dbee62551c456a405df3cb4c3cee7927e31f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\vulnerability-scanner-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "1": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "2": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "3": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "5": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "6": {
        start: {
          line: 30,
          column: 51
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "9": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 17
        }
      },
      "11": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "12": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 72
        }
      },
      "13": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 21
        }
      },
      "14": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 58,
          column: 4
        }
      },
      "15": {
        start: {
          line: 43,
          column: 18
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "17": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 23
        }
      },
      "18": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "19": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "20": {
        start: {
          line: 46,
          column: 77
        },
        end: {
          line: 46,
          column: 95
        }
      },
      "21": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 26
        }
      },
      "23": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "24": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "25": {
        start: {
          line: 52,
          column: 35
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "26": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "27": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 137
        }
      },
      "28": {
        start: {
          line: 54,
          column: 25
        },
        end: {
          line: 54,
          column: 137
        }
      },
      "29": {
        start: {
          line: 54,
          column: 38
        },
        end: {
          line: 54,
          column: 50
        }
      },
      "30": {
        start: {
          line: 54,
          column: 56
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "31": {
        start: {
          line: 54,
          column: 78
        },
        end: {
          line: 54,
          column: 137
        }
      },
      "32": {
        start: {
          line: 54,
          column: 102
        },
        end: {
          line: 54,
          column: 137
        }
      },
      "33": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 40
        }
      },
      "34": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 22
        }
      },
      "35": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "36": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "37": {
        start: {
          line: 61,
          column: 15
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "38": {
        start: {
          line: 62,
          column: 11
        },
        end: {
          line: 62,
          column: 47
        }
      },
      "39": {
        start: {
          line: 63,
          column: 13
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "40": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "41": {
        start: {
          line: 65,
          column: 15
        },
        end: {
          line: 65,
          column: 30
        }
      },
      "42": {
        start: {
          line: 66,
          column: 18
        },
        end: {
          line: 66,
          column: 58
        }
      },
      "43": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 74,
          column: 90
        }
      },
      "44": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 65
        }
      },
      "45": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "46": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 71
        }
      },
      "47": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "48": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 71
        }
      },
      "49": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 37
        }
      },
      "50": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "51": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 49
        }
      },
      "52": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "53": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 44
        }
      },
      "54": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 29
        }
      },
      "55": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 47
        }
      },
      "56": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 46
        }
      },
      "57": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "58": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "59": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "60": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "61": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "62": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "63": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "64": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "65": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "66": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "67": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "68": {
        start: {
          line: 201,
          column: 23
        },
        end: {
          line: 201,
          column: 89
        }
      },
      "69": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "70": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 46
        }
      },
      "71": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "72": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "73": {
        start: {
          line: 227,
          column: 39
        },
        end: {
          line: 227,
          column: 81
        }
      },
      "74": {
        start: {
          line: 228,
          column: 33
        },
        end: {
          line: 228,
          column: 69
        }
      },
      "75": {
        start: {
          line: 229,
          column: 35
        },
        end: {
          line: 229,
          column: 80
        }
      },
      "76": {
        start: {
          line: 230,
          column: 36
        },
        end: {
          line: 230,
          column: 75
        }
      },
      "77": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 237,
          column: 14
        }
      },
      "78": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 82
        }
      },
      "79": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 103
        }
      },
      "80": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 41
        }
      },
      "81": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 41
        }
      },
      "82": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 249,
          column: 15
        }
      },
      "83": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 38
        }
      },
      "84": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 41
        }
      },
      "85": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "86": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 24
        }
      },
      "87": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 44
        }
      },
      "88": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 43
        }
      },
      "89": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 23
        }
      },
      "90": {
        start: {
          line: 270,
          column: 25
        },
        end: {
          line: 270,
          column: 27
        }
      },
      "91": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "92": {
        start: {
          line: 273,
          column: 36
        },
        end: {
          line: 273,
          column: 76
        }
      },
      "93": {
        start: {
          line: 274,
          column: 39
        },
        end: {
          line: 274,
          column: 82
        }
      },
      "94": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 275,
          column: 62
        }
      },
      "95": {
        start: {
          line: 276,
          column: 33
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "96": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "97": {
        start: {
          line: 282,
          column: 40
        },
        end: {
          line: 282,
          column: 85
        }
      },
      "98": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 298,
          column: 17
        }
      },
      "99": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 297,
          column: 21
        }
      },
      "100": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 296,
          column: 25
        }
      },
      "101": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 295,
          column: 31
        }
      },
      "102": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 321,
          column: 13
        }
      },
      "103": {
        start: {
          line: 302,
          column: 35
        },
        end: {
          line: 302,
          column: 90
        }
      },
      "104": {
        start: {
          line: 303,
          column: 36
        },
        end: {
          line: 303,
          column: 54
        }
      },
      "105": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 317,
          column: 17
        }
      },
      "106": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 316,
          column: 21
        }
      },
      "107": {
        start: {
          line: 306,
          column: 37
        },
        end: {
          line: 306,
          column: 45
        }
      },
      "108": {
        start: {
          line: 307,
          column: 24
        },
        end: {
          line: 315,
          column: 27
        }
      },
      "109": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 76
        }
      },
      "110": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 81
        }
      },
      "111": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 24
        }
      },
      "112": {
        start: {
          line: 332,
          column: 25
        },
        end: {
          line: 332,
          column: 27
        }
      },
      "113": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "114": {
        start: {
          line: 334,
          column: 30
        },
        end: {
          line: 334,
          column: 61
        }
      },
      "115": {
        start: {
          line: 335,
          column: 26
        },
        end: {
          line: 335,
          column: 62
        }
      },
      "116": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "117": {
        start: {
          line: 337,
          column: 32
        },
        end: {
          line: 337,
          column: 64
        }
      },
      "118": {
        start: {
          line: 338,
          column: 30
        },
        end: {
          line: 338,
          column: 49
        }
      },
      "119": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 359,
          column: 17
        }
      },
      "120": {
        start: {
          line: 340,
          column: 37
        },
        end: {
          line: 340,
          column: 38
        }
      },
      "121": {
        start: {
          line: 341,
          column: 33
        },
        end: {
          line: 341,
          column: 49
        }
      },
      "122": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 358,
          column: 21
        }
      },
      "123": {
        start: {
          line: 343,
          column: 40
        },
        end: {
          line: 343,
          column: 59
        }
      },
      "124": {
        start: {
          line: 344,
          column: 24
        },
        end: {
          line: 357,
          column: 25
        }
      },
      "125": {
        start: {
          line: 345,
          column: 50
        },
        end: {
          line: 345,
          column: 115
        }
      },
      "126": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 356,
          column: 29
        }
      },
      "127": {
        start: {
          line: 347,
          column: 32
        },
        end: {
          line: 355,
          column: 35
        }
      },
      "128": {
        start: {
          line: 362,
          column: 43
        },
        end: {
          line: 362,
          column: 82
        }
      },
      "129": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 53
        }
      },
      "130": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 75
        }
      },
      "131": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 24
        }
      },
      "132": {
        start: {
          line: 374,
          column: 25
        },
        end: {
          line: 374,
          column: 27
        }
      },
      "133": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "134": {
        start: {
          line: 377,
          column: 32
        },
        end: {
          line: 377,
          column: 73
        }
      },
      "135": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 42
        }
      },
      "136": {
        start: {
          line: 380,
          column: 38
        },
        end: {
          line: 380,
          column: 79
        }
      },
      "137": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 48
        }
      },
      "138": {
        start: {
          line: 383,
          column: 35
        },
        end: {
          line: 383,
          column: 67
        }
      },
      "139": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 45
        }
      },
      "140": {
        start: {
          line: 386,
          column: 39
        },
        end: {
          line: 386,
          column: 71
        }
      },
      "141": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 49
        }
      },
      "142": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 84
        }
      },
      "143": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 24
        }
      },
      "144": {
        start: {
          line: 398,
          column: 25
        },
        end: {
          line: 398,
          column: 27
        }
      },
      "145": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "146": {
        start: {
          line: 401,
          column: 33
        },
        end: {
          line: 401,
          column: 59
        }
      },
      "147": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 43
        }
      },
      "148": {
        start: {
          line: 404,
          column: 32
        },
        end: {
          line: 404,
          column: 65
        }
      },
      "149": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 42
        }
      },
      "150": {
        start: {
          line: 407,
          column: 36
        },
        end: {
          line: 407,
          column: 68
        }
      },
      "151": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 46
        }
      },
      "152": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 78
        }
      },
      "153": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 24
        }
      },
      "154": {
        start: {
          line: 419,
          column: 22
        },
        end: {
          line: 419,
          column: 24
        }
      },
      "155": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "156": {
        start: {
          line: 421,
          column: 28
        },
        end: {
          line: 421,
          column: 74
        }
      },
      "157": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "158": {
        start: {
          line: 423,
          column: 33
        },
        end: {
          line: 423,
          column: 59
        }
      },
      "159": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "160": {
        start: {
          line: 425,
          column: 37
        },
        end: {
          line: 425,
          column: 72
        }
      },
      "161": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 426,
          column: 44
        }
      },
      "162": {
        start: {
          line: 428,
          column: 21
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "163": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 41
        }
      },
      "164": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 73
        }
      },
      "165": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 21
        }
      },
      "166": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "167": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 455,
          column: 14
        }
      },
      "168": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "169": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 468,
          column: 14
        }
      },
      "170": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "171": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 481,
          column: 14
        }
      },
      "172": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 495,
          column: 9
        }
      },
      "173": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 494,
          column: 14
        }
      },
      "174": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "175": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 507,
          column: 14
        }
      },
      "176": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 509,
          column: 20
        }
      },
      "177": {
        start: {
          line: 515,
          column: 25
        },
        end: {
          line: 515,
          column: 27
        }
      },
      "178": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 560,
          column: 9
        }
      },
      "179": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 559,
          column: 13
        }
      },
      "180": {
        start: {
          line: 518,
          column: 32
        },
        end: {
          line: 518,
          column: 64
        }
      },
      "181": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 530,
          column: 17
        }
      },
      "182": {
        start: {
          line: 521,
          column: 20
        },
        end: {
          line: 529,
          column: 23
        }
      },
      "183": {
        start: {
          line: 532,
          column: 16
        },
        end: {
          line: 542,
          column: 17
        }
      },
      "184": {
        start: {
          line: 533,
          column: 20
        },
        end: {
          line: 541,
          column: 23
        }
      },
      "185": {
        start: {
          line: 544,
          column: 36
        },
        end: {
          line: 544,
          column: 70
        }
      },
      "186": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 555,
          column: 17
        }
      },
      "187": {
        start: {
          line: 546,
          column: 20
        },
        end: {
          line: 554,
          column: 23
        }
      },
      "188": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 85
        }
      },
      "189": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 561,
          column: 24
        }
      },
      "190": {
        start: {
          line: 567,
          column: 25
        },
        end: {
          line: 567,
          column: 27
        }
      },
      "191": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 608,
          column: 9
        }
      },
      "192": {
        start: {
          line: 570,
          column: 28
        },
        end: {
          line: 570,
          column: 60
        }
      },
      "193": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 604,
          column: 13
        }
      },
      "194": {
        start: {
          line: 572,
          column: 35
        },
        end: {
          line: 572,
          column: 70
        }
      },
      "195": {
        start: {
          line: 573,
          column: 30
        },
        end: {
          line: 573,
          column: 52
        }
      },
      "196": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 600,
          column: 17
        }
      },
      "197": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 599,
          column: 21
        }
      },
      "198": {
        start: {
          line: 576,
          column: 45
        },
        end: {
          line: 576,
          column: 60
        }
      },
      "199": {
        start: {
          line: 577,
          column: 24
        },
        end: {
          line: 587,
          column: 25
        }
      },
      "200": {
        start: {
          line: 578,
          column: 28
        },
        end: {
          line: 586,
          column: 31
        }
      },
      "201": {
        start: {
          line: 588,
          column: 24
        },
        end: {
          line: 598,
          column: 25
        }
      },
      "202": {
        start: {
          line: 589,
          column: 28
        },
        end: {
          line: 597,
          column: 31
        }
      },
      "203": {
        start: {
          line: 607,
          column: 12
        },
        end: {
          line: 607,
          column: 82
        }
      },
      "204": {
        start: {
          line: 609,
          column: 8
        },
        end: {
          line: 609,
          column: 24
        }
      },
      "205": {
        start: {
          line: 615,
          column: 25
        },
        end: {
          line: 615,
          column: 27
        }
      },
      "206": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 627,
          column: 9
        }
      },
      "207": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 626,
          column: 15
        }
      },
      "208": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 639,
          column: 9
        }
      },
      "209": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 638,
          column: 15
        }
      },
      "210": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 640,
          column: 24
        }
      },
      "211": {
        start: {
          line: 646,
          column: 25
        },
        end: {
          line: 646,
          column: 27
        }
      },
      "212": {
        start: {
          line: 647,
          column: 32
        },
        end: {
          line: 653,
          column: 9
        }
      },
      "213": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 676,
          column: 9
        }
      },
      "214": {
        start: {
          line: 657,
          column: 29
        },
        end: {
          line: 657,
          column: 87
        }
      },
      "215": {
        start: {
          line: 658,
          column: 30
        },
        end: {
          line: 661,
          column: 14
        }
      },
      "216": {
        start: {
          line: 659,
          column: 32
        },
        end: {
          line: 659,
          column: 64
        }
      },
      "217": {
        start: {
          line: 660,
          column: 16
        },
        end: {
          line: 660,
          column: 50
        }
      },
      "218": {
        start: {
          line: 662,
          column: 12
        },
        end: {
          line: 672,
          column: 13
        }
      },
      "219": {
        start: {
          line: 663,
          column: 16
        },
        end: {
          line: 671,
          column: 19
        }
      },
      "220": {
        start: {
          line: 675,
          column: 12
        },
        end: {
          line: 675,
          column: 73
        }
      },
      "221": {
        start: {
          line: 677,
          column: 8
        },
        end: {
          line: 677,
          column: 24
        }
      },
      "222": {
        start: {
          line: 683,
          column: 25
        },
        end: {
          line: 683,
          column: 27
        }
      },
      "223": {
        start: {
          line: 684,
          column: 8
        },
        end: {
          line: 711,
          column: 9
        }
      },
      "224": {
        start: {
          line: 685,
          column: 35
        },
        end: {
          line: 685,
          column: 76
        }
      },
      "225": {
        start: {
          line: 686,
          column: 12
        },
        end: {
          line: 707,
          column: 13
        }
      },
      "226": {
        start: {
          line: 687,
          column: 16
        },
        end: {
          line: 706,
          column: 17
        }
      },
      "227": {
        start: {
          line: 688,
          column: 37
        },
        end: {
          line: 688,
          column: 67
        }
      },
      "228": {
        start: {
          line: 689,
          column: 34
        },
        end: {
          line: 689,
          column: 57
        }
      },
      "229": {
        start: {
          line: 690,
          column: 33
        },
        end: {
          line: 690,
          column: 64
        }
      },
      "230": {
        start: {
          line: 692,
          column: 20
        },
        end: {
          line: 702,
          column: 21
        }
      },
      "231": {
        start: {
          line: 693,
          column: 24
        },
        end: {
          line: 701,
          column: 27
        }
      },
      "232": {
        start: {
          line: 710,
          column: 12
        },
        end: {
          line: 710,
          column: 73
        }
      },
      "233": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 24
        }
      },
      "234": {
        start: {
          line: 718,
          column: 25
        },
        end: {
          line: 718,
          column: 27
        }
      },
      "235": {
        start: {
          line: 719,
          column: 8
        },
        end: {
          line: 740,
          column: 9
        }
      },
      "236": {
        start: {
          line: 722,
          column: 32
        },
        end: {
          line: 722,
          column: 76
        }
      },
      "237": {
        start: {
          line: 723,
          column: 12
        },
        end: {
          line: 736,
          column: 13
        }
      },
      "238": {
        start: {
          line: 725,
          column: 16
        },
        end: {
          line: 735,
          column: 17
        }
      },
      "239": {
        start: {
          line: 726,
          column: 20
        },
        end: {
          line: 734,
          column: 23
        }
      },
      "240": {
        start: {
          line: 739,
          column: 12
        },
        end: {
          line: 739,
          column: 61
        }
      },
      "241": {
        start: {
          line: 741,
          column: 8
        },
        end: {
          line: 741,
          column: 24
        }
      },
      "242": {
        start: {
          line: 747,
          column: 25
        },
        end: {
          line: 747,
          column: 27
        }
      },
      "243": {
        start: {
          line: 749,
          column: 8
        },
        end: {
          line: 759,
          column: 9
        }
      },
      "244": {
        start: {
          line: 750,
          column: 12
        },
        end: {
          line: 758,
          column: 15
        }
      },
      "245": {
        start: {
          line: 760,
          column: 8
        },
        end: {
          line: 760,
          column: 24
        }
      },
      "246": {
        start: {
          line: 766,
          column: 25
        },
        end: {
          line: 766,
          column: 27
        }
      },
      "247": {
        start: {
          line: 768,
          column: 36
        },
        end: {
          line: 768,
          column: 70
        }
      },
      "248": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 782,
          column: 9
        }
      },
      "249": {
        start: {
          line: 771,
          column: 12
        },
        end: {
          line: 781,
          column: 13
        }
      },
      "250": {
        start: {
          line: 772,
          column: 16
        },
        end: {
          line: 780,
          column: 19
        }
      },
      "251": {
        start: {
          line: 783,
          column: 8
        },
        end: {
          line: 783,
          column: 24
        }
      },
      "252": {
        start: {
          line: 789,
          column: 30
        },
        end: {
          line: 789,
          column: 84
        }
      },
      "253": {
        start: {
          line: 789,
          column: 51
        },
        end: {
          line: 789,
          column: 76
        }
      },
      "254": {
        start: {
          line: 790,
          column: 26
        },
        end: {
          line: 790,
          column: 76
        }
      },
      "255": {
        start: {
          line: 790,
          column: 47
        },
        end: {
          line: 790,
          column: 68
        }
      },
      "256": {
        start: {
          line: 791,
          column: 28
        },
        end: {
          line: 791,
          column: 80
        }
      },
      "257": {
        start: {
          line: 791,
          column: 49
        },
        end: {
          line: 791,
          column: 72
        }
      },
      "258": {
        start: {
          line: 792,
          column: 25
        },
        end: {
          line: 792,
          column: 74
        }
      },
      "259": {
        start: {
          line: 792,
          column: 46
        },
        end: {
          line: 792,
          column: 66
        }
      },
      "260": {
        start: {
          line: 794,
          column: 26
        },
        end: {
          line: 797,
          column: 27
        }
      },
      "261": {
        start: {
          line: 799,
          column: 32
        },
        end: {
          line: 799,
          column: 60
        }
      },
      "262": {
        start: {
          line: 800,
          column: 8
        },
        end: {
          line: 809,
          column: 10
        }
      },
      "263": {
        start: {
          line: 815,
          column: 33
        },
        end: {
          line: 815,
          column: 35
        }
      },
      "264": {
        start: {
          line: 817,
          column: 32
        },
        end: {
          line: 824,
          column: 14
        }
      },
      "265": {
        start: {
          line: 818,
          column: 24
        },
        end: {
          line: 818,
          column: 61
        }
      },
      "266": {
        start: {
          line: 819,
          column: 12
        },
        end: {
          line: 821,
          column: 13
        }
      },
      "267": {
        start: {
          line: 820,
          column: 16
        },
        end: {
          line: 820,
          column: 33
        }
      },
      "268": {
        start: {
          line: 822,
          column: 12
        },
        end: {
          line: 822,
          column: 38
        }
      },
      "269": {
        start: {
          line: 823,
          column: 12
        },
        end: {
          line: 823,
          column: 26
        }
      },
      "270": {
        start: {
          line: 826,
          column: 8
        },
        end: {
          line: 839,
          column: 9
        }
      },
      "271": {
        start: {
          line: 827,
          column: 37
        },
        end: {
          line: 827,
          column: 51
        }
      },
      "272": {
        start: {
          line: 828,
          column: 29
        },
        end: {
          line: 828,
          column: 37
        }
      },
      "273": {
        start: {
          line: 829,
          column: 12
        },
        end: {
          line: 838,
          column: 15
        }
      },
      "274": {
        start: {
          line: 841,
          column: 8
        },
        end: {
          line: 844,
          column: 11
        }
      },
      "275": {
        start: {
          line: 842,
          column: 34
        },
        end: {
          line: 842,
          column: 85
        }
      },
      "276": {
        start: {
          line: 843,
          column: 12
        },
        end: {
          line: 843,
          column: 73
        }
      },
      "277": {
        start: {
          line: 851,
          column: 8
        },
        end: {
          line: 851,
          column: 76
        }
      },
      "278": {
        start: {
          line: 854,
          column: 8
        },
        end: {
          line: 860,
          column: 9
        }
      },
      "279": {
        start: {
          line: 855,
          column: 29
        },
        end: {
          line: 855,
          column: 47
        }
      },
      "280": {
        start: {
          line: 856,
          column: 25
        },
        end: {
          line: 856,
          column: 39
        }
      },
      "281": {
        start: {
          line: 857,
          column: 29
        },
        end: {
          line: 857,
          column: 45
        }
      },
      "282": {
        start: {
          line: 858,
          column: 24
        },
        end: {
          line: 858,
          column: 37
        }
      },
      "283": {
        start: {
          line: 859,
          column: 21
        },
        end: {
          line: 859,
          column: 37
        }
      },
      "284": {
        start: {
          line: 863,
          column: 8
        },
        end: {
          line: 864,
          column: 25
        }
      },
      "285": {
        start: {
          line: 864,
          column: 12
        },
        end: {
          line: 864,
          column: 25
        }
      },
      "286": {
        start: {
          line: 865,
          column: 8
        },
        end: {
          line: 866,
          column: 28
        }
      },
      "287": {
        start: {
          line: 866,
          column: 12
        },
        end: {
          line: 866,
          column: 28
        }
      },
      "288": {
        start: {
          line: 867,
          column: 8
        },
        end: {
          line: 867,
          column: 22
        }
      },
      "289": {
        start: {
          line: 870,
          column: 8
        },
        end: {
          line: 876,
          column: 9
        }
      },
      "290": {
        start: {
          line: 871,
          column: 29
        },
        end: {
          line: 871,
          column: 73
        }
      },
      "291": {
        start: {
          line: 872,
          column: 25
        },
        end: {
          line: 872,
          column: 67
        }
      },
      "292": {
        start: {
          line: 873,
          column: 27
        },
        end: {
          line: 873,
          column: 66
        }
      },
      "293": {
        start: {
          line: 874,
          column: 24
        },
        end: {
          line: 874,
          column: 60
        }
      },
      "294": {
        start: {
          line: 875,
          column: 21
        },
        end: {
          line: 875,
          column: 51
        }
      },
      "295": {
        start: {
          line: 879,
          column: 22
        },
        end: {
          line: 879,
          column: 24
        }
      },
      "296": {
        start: {
          line: 880,
          column: 8
        },
        end: {
          line: 904,
          column: 9
        }
      },
      "297": {
        start: {
          line: 882,
          column: 16
        },
        end: {
          line: 882,
          column: 61
        }
      },
      "298": {
        start: {
          line: 883,
          column: 16
        },
        end: {
          line: 883,
          column: 57
        }
      },
      "299": {
        start: {
          line: 884,
          column: 16
        },
        end: {
          line: 884,
          column: 61
        }
      },
      "300": {
        start: {
          line: 885,
          column: 16
        },
        end: {
          line: 885,
          column: 58
        }
      },
      "301": {
        start: {
          line: 886,
          column: 16
        },
        end: {
          line: 886,
          column: 22
        }
      },
      "302": {
        start: {
          line: 888,
          column: 16
        },
        end: {
          line: 888,
          column: 58
        }
      },
      "303": {
        start: {
          line: 889,
          column: 16
        },
        end: {
          line: 889,
          column: 62
        }
      },
      "304": {
        start: {
          line: 890,
          column: 16
        },
        end: {
          line: 890,
          column: 51
        }
      },
      "305": {
        start: {
          line: 891,
          column: 16
        },
        end: {
          line: 891,
          column: 55
        }
      },
      "306": {
        start: {
          line: 892,
          column: 16
        },
        end: {
          line: 892,
          column: 22
        }
      },
      "307": {
        start: {
          line: 894,
          column: 16
        },
        end: {
          line: 894,
          column: 59
        }
      },
      "308": {
        start: {
          line: 895,
          column: 16
        },
        end: {
          line: 895,
          column: 56
        }
      },
      "309": {
        start: {
          line: 896,
          column: 16
        },
        end: {
          line: 896,
          column: 58
        }
      },
      "310": {
        start: {
          line: 897,
          column: 16
        },
        end: {
          line: 897,
          column: 61
        }
      },
      "311": {
        start: {
          line: 898,
          column: 16
        },
        end: {
          line: 898,
          column: 22
        }
      },
      "312": {
        start: {
          line: 900,
          column: 16
        },
        end: {
          line: 900,
          column: 55
        }
      },
      "313": {
        start: {
          line: 901,
          column: 16
        },
        end: {
          line: 901,
          column: 58
        }
      },
      "314": {
        start: {
          line: 902,
          column: 16
        },
        end: {
          line: 902,
          column: 57
        }
      },
      "315": {
        start: {
          line: 903,
          column: 16
        },
        end: {
          line: 903,
          column: 58
        }
      },
      "316": {
        start: {
          line: 905,
          column: 8
        },
        end: {
          line: 905,
          column: 21
        }
      },
      "317": {
        start: {
          line: 908,
          column: 25
        },
        end: {
          line: 915,
          column: 9
        }
      },
      "318": {
        start: {
          line: 916,
          column: 22
        },
        end: {
          line: 916,
          column: 51
        }
      },
      "319": {
        start: {
          line: 917,
          column: 8
        },
        end: {
          line: 918,
          column: 36
        }
      },
      "320": {
        start: {
          line: 918,
          column: 12
        },
        end: {
          line: 918,
          column: 36
        }
      },
      "321": {
        start: {
          line: 919,
          column: 8
        },
        end: {
          line: 920,
          column: 50
        }
      },
      "322": {
        start: {
          line: 920,
          column: 12
        },
        end: {
          line: 920,
          column: 50
        }
      },
      "323": {
        start: {
          line: 921,
          column: 8
        },
        end: {
          line: 921,
          column: 48
        }
      },
      "324": {
        start: {
          line: 927,
          column: 8
        },
        end: {
          line: 927,
          column: 32
        }
      },
      "325": {
        start: {
          line: 933,
          column: 8
        },
        end: {
          line: 933,
          column: 53
        }
      },
      "326": {
        start: {
          line: 939,
          column: 21
        },
        end: {
          line: 939,
          column: 49
        }
      },
      "327": {
        start: {
          line: 940,
          column: 8
        },
        end: {
          line: 947,
          column: 9
        }
      },
      "328": {
        start: {
          line: 941,
          column: 12
        },
        end: {
          line: 941,
          column: 38
        }
      },
      "329": {
        start: {
          line: 942,
          column: 12
        },
        end: {
          line: 942,
          column: 38
        }
      },
      "330": {
        start: {
          line: 943,
          column: 12
        },
        end: {
          line: 943,
          column: 44
        }
      },
      "331": {
        start: {
          line: 944,
          column: 12
        },
        end: {
          line: 944,
          column: 40
        }
      },
      "332": {
        start: {
          line: 945,
          column: 12
        },
        end: {
          line: 945,
          column: 73
        }
      },
      "333": {
        start: {
          line: 946,
          column: 12
        },
        end: {
          line: 946,
          column: 24
        }
      },
      "334": {
        start: {
          line: 948,
          column: 8
        },
        end: {
          line: 948,
          column: 21
        }
      },
      "335": {
        start: {
          line: 951,
          column: 0
        },
        end: {
          line: 951,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 26,
            column: 74
          },
          end: {
            line: 26,
            column: 75
          }
        },
        loc: {
          start: {
            line: 26,
            column: 96
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 30,
            column: 39
          }
        },
        loc: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 30,
            column: 65
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 80
          },
          end: {
            line: 37,
            column: 81
          }
        },
        loc: {
          start: {
            line: 37,
            column: 95
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 5
          },
          end: {
            line: 39,
            column: 6
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 39
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 51
          },
          end: {
            line: 42,
            column: 52
          }
        },
        loc: {
          start: {
            line: 42,
            column: 63
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 43,
            column: 19
          }
        },
        loc: {
          start: {
            line: 43,
            column: 30
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 44,
            column: 49
          }
        },
        loc: {
          start: {
            line: 44,
            column: 61
          },
          end: {
            line: 48,
            column: 9
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 51,
            column: 11
          },
          end: {
            line: 51,
            column: 12
          }
        },
        loc: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 51
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 68,
            column: 1
          },
          end: {
            line: 68,
            column: 2
          }
        },
        loc: {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 68
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 37
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 67
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 200
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 42
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 269
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 36
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 331
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 45
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 373
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 39
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 397
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 418,
            column: 5
          }
        },
        loc: {
          start: {
            line: 418,
            column: 30
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 418
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 62
          },
          end: {
            line: 510,
            column: 5
          }
        },
        line: 443
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 39
          },
          end: {
            line: 562,
            column: 5
          }
        },
        line: 514
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 566,
            column: 4
          },
          end: {
            line: 566,
            column: 5
          }
        },
        loc: {
          start: {
            line: 566,
            column: 41
          },
          end: {
            line: 610,
            column: 5
          }
        },
        line: 566
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 614,
            column: 4
          },
          end: {
            line: 614,
            column: 5
          }
        },
        loc: {
          start: {
            line: 614,
            column: 41
          },
          end: {
            line: 641,
            column: 5
          }
        },
        line: 614
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 645,
            column: 4
          },
          end: {
            line: 645,
            column: 5
          }
        },
        loc: {
          start: {
            line: 645,
            column: 32
          },
          end: {
            line: 678,
            column: 5
          }
        },
        line: 645
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 658,
            column: 44
          },
          end: {
            line: 658,
            column: 45
          }
        },
        loc: {
          start: {
            line: 658,
            column: 60
          },
          end: {
            line: 661,
            column: 13
          }
        },
        line: 658
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 682,
            column: 4
          },
          end: {
            line: 682,
            column: 5
          }
        },
        loc: {
          start: {
            line: 682,
            column: 32
          },
          end: {
            line: 713,
            column: 5
          }
        },
        line: 682
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 717,
            column: 4
          },
          end: {
            line: 717,
            column: 5
          }
        },
        loc: {
          start: {
            line: 717,
            column: 26
          },
          end: {
            line: 742,
            column: 5
          }
        },
        line: 717
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 746,
            column: 4
          },
          end: {
            line: 746,
            column: 5
          }
        },
        loc: {
          start: {
            line: 746,
            column: 33
          },
          end: {
            line: 761,
            column: 5
          }
        },
        line: 746
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 765,
            column: 4
          },
          end: {
            line: 765,
            column: 5
          }
        },
        loc: {
          start: {
            line: 765,
            column: 32
          },
          end: {
            line: 784,
            column: 5
          }
        },
        line: 765
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 788,
            column: 4
          },
          end: {
            line: 788,
            column: 5
          }
        },
        loc: {
          start: {
            line: 788,
            column: 43
          },
          end: {
            line: 810,
            column: 5
          }
        },
        line: 788
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 789,
            column: 46
          },
          end: {
            line: 789,
            column: 47
          }
        },
        loc: {
          start: {
            line: 789,
            column: 51
          },
          end: {
            line: 789,
            column: 76
          }
        },
        line: 789
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 790,
            column: 42
          },
          end: {
            line: 790,
            column: 43
          }
        },
        loc: {
          start: {
            line: 790,
            column: 47
          },
          end: {
            line: 790,
            column: 68
          }
        },
        line: 790
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 791,
            column: 44
          },
          end: {
            line: 791,
            column: 45
          }
        },
        loc: {
          start: {
            line: 791,
            column: 49
          },
          end: {
            line: 791,
            column: 72
          }
        },
        line: 791
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 792,
            column: 41
          },
          end: {
            line: 792,
            column: 42
          }
        },
        loc: {
          start: {
            line: 792,
            column: 46
          },
          end: {
            line: 792,
            column: 66
          }
        },
        line: 792
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 814,
            column: 4
          },
          end: {
            line: 814,
            column: 5
          }
        },
        loc: {
          start: {
            line: 814,
            column: 44
          },
          end: {
            line: 845,
            column: 5
          }
        },
        line: 814
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 817,
            column: 48
          },
          end: {
            line: 817,
            column: 49
          }
        },
        loc: {
          start: {
            line: 817,
            column: 69
          },
          end: {
            line: 824,
            column: 9
          }
        },
        line: 817
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 841,
            column: 37
          },
          end: {
            line: 841,
            column: 38
          }
        },
        loc: {
          start: {
            line: 841,
            column: 47
          },
          end: {
            line: 844,
            column: 9
          }
        },
        line: 841
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 849,
            column: 4
          },
          end: {
            line: 849,
            column: 5
          }
        },
        loc: {
          start: {
            line: 849,
            column: 60
          },
          end: {
            line: 852,
            column: 5
          }
        },
        line: 849
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 853,
            column: 4
          },
          end: {
            line: 853,
            column: 5
          }
        },
        loc: {
          start: {
            line: 853,
            column: 32
          },
          end: {
            line: 861,
            column: 5
          }
        },
        line: 853
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 862,
            column: 4
          },
          end: {
            line: 862,
            column: 5
          }
        },
        loc: {
          start: {
            line: 862,
            column: 43
          },
          end: {
            line: 868,
            column: 5
          }
        },
        line: 862
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 869,
            column: 4
          },
          end: {
            line: 869,
            column: 5
          }
        },
        loc: {
          start: {
            line: 869,
            column: 40
          },
          end: {
            line: 877,
            column: 5
          }
        },
        line: 869
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 878,
            column: 4
          },
          end: {
            line: 878,
            column: 5
          }
        },
        loc: {
          start: {
            line: 878,
            column: 45
          },
          end: {
            line: 906,
            column: 5
          }
        },
        line: 878
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 907,
            column: 4
          },
          end: {
            line: 907,
            column: 5
          }
        },
        loc: {
          start: {
            line: 907,
            column: 41
          },
          end: {
            line: 922,
            column: 5
          }
        },
        line: 907
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 926,
            column: 4
          },
          end: {
            line: 926,
            column: 5
          }
        },
        loc: {
          start: {
            line: 926,
            column: 21
          },
          end: {
            line: 928,
            column: 5
          }
        },
        line: 926
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 932,
            column: 4
          },
          end: {
            line: 932,
            column: 5
          }
        },
        loc: {
          start: {
            line: 932,
            column: 21
          },
          end: {
            line: 934,
            column: 5
          }
        },
        line: 932
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 938,
            column: 4
          },
          end: {
            line: 938,
            column: 5
          }
        },
        loc: {
          start: {
            line: 938,
            column: 29
          },
          end: {
            line: 949,
            column: 5
          }
        },
        line: 938
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 36,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 51
          }
        }, {
          start: {
            line: 26,
            column: 57
          },
          end: {
            line: 36,
            column: 2
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 57
          },
          end: {
            line: 36,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 74
          },
          end: {
            line: 33,
            column: 1
          }
        }, {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 36,
            column: 1
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 84
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 34
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 84
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 63
          }
        }, {
          start: {
            line: 29,
            column: 67
          },
          end: {
            line: 29,
            column: 84
          }
        }],
        line: 29
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 41,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 30
          }
        }, {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 57
          }
        }, {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 41,
            column: 1
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 41,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 80
          },
          end: {
            line: 39,
            column: 1
          }
        }, {
          start: {
            line: 39,
            column: 5
          },
          end: {
            line: 41,
            column: 1
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 58,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 42,
            column: 24
          }
        }, {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 45
          }
        }, {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 58,
            column: 4
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 44,
            column: 44
          }
        }, {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 48,
            column: 9
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 15
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 33
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 54,
            column: 78
          },
          end: {
            line: 54,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 78
          },
          end: {
            line: 54,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 3
          },
          end: {
            line: 74,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 3
          },
          end: {
            line: 74,
            column: 24
          }
        }, {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 87
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 200,
            column: 48
          },
          end: {
            line: 200,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 200,
            column: 57
          },
          end: {
            line: 200,
            column: 65
          }
        }],
        line: 200
      },
      "19": {
        loc: {
          start: {
            line: 256,
            column: 23
          },
          end: {
            line: 256,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 256,
            column: 61
          }
        }, {
          start: {
            line: 256,
            column: 64
          },
          end: {
            line: 256,
            column: 77
          }
        }],
        line: 256
      },
      "20": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 298,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 298,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "21": {
        loc: {
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 296,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 296,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "22": {
        loc: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 317,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 317,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "23": {
        loc: {
          start: {
            line: 313,
            column: 38
          },
          end: {
            line: 313,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 38
          },
          end: {
            line: 313,
            column: 46
          }
        }, {
          start: {
            line: 313,
            column: 50
          },
          end: {
            line: 313,
            column: 61
          }
        }],
        line: 313
      },
      "24": {
        loc: {
          start: {
            line: 314,
            column: 41
          },
          end: {
            line: 314,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 61
          },
          end: {
            line: 314,
            column: 80
          }
        }, {
          start: {
            line: 314,
            column: 83
          },
          end: {
            line: 314,
            column: 107
          }
        }],
        line: 314
      },
      "25": {
        loc: {
          start: {
            line: 344,
            column: 24
          },
          end: {
            line: 357,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 24
          },
          end: {
            line: 357,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "26": {
        loc: {
          start: {
            line: 346,
            column: 28
          },
          end: {
            line: 356,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 28
          },
          end: {
            line: 356,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "27": {
        loc: {
          start: {
            line: 424,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: 428,
            column: 21
          },
          end: {
            line: 432,
            column: 17
          }
        }],
        line: 424
      },
      "28": {
        loc: {
          start: {
            line: 428,
            column: 21
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 21
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "29": {
        loc: {
          start: {
            line: 428,
            column: 25
          },
          end: {
            line: 430,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 25
          },
          end: {
            line: 428,
            column: 39
          }
        }, {
          start: {
            line: 428,
            column: 44
          },
          end: {
            line: 428,
            column: 70
          }
        }, {
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 429,
            column: 46
          }
        }, {
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 430,
            column: 48
          }
        }],
        line: 428
      },
      "30": {
        loc: {
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "31": {
        loc: {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 44
          }
        }, {
          start: {
            line: 445,
            column: 48
          },
          end: {
            line: 445,
            column: 81
          }
        }],
        line: 445
      },
      "32": {
        loc: {
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "33": {
        loc: {
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 458,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 458,
            column: 48
          }
        }, {
          start: {
            line: 458,
            column: 52
          },
          end: {
            line: 458,
            column: 93
          }
        }],
        line: 458
      },
      "34": {
        loc: {
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 482,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 482,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "35": {
        loc: {
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 471,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 471,
            column: 43
          }
        }, {
          start: {
            line: 471,
            column: 47
          },
          end: {
            line: 471,
            column: 79
          }
        }],
        line: 471
      },
      "36": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "37": {
        loc: {
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 484,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 484,
            column: 47
          }
        }, {
          start: {
            line: 484,
            column: 51
          },
          end: {
            line: 484,
            column: 81
          }
        }],
        line: 484
      },
      "38": {
        loc: {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "39": {
        loc: {
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 497,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 497,
            column: 12
          },
          end: {
            line: 497,
            column: 42
          }
        }, {
          start: {
            line: 497,
            column: 46
          },
          end: {
            line: 497,
            column: 77
          }
        }],
        line: 497
      },
      "40": {
        loc: {
          start: {
            line: 520,
            column: 16
          },
          end: {
            line: 530,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 16
          },
          end: {
            line: 530,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "41": {
        loc: {
          start: {
            line: 532,
            column: 16
          },
          end: {
            line: 542,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 16
          },
          end: {
            line: 542,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "42": {
        loc: {
          start: {
            line: 532,
            column: 20
          },
          end: {
            line: 532,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 532,
            column: 20
          },
          end: {
            line: 532,
            column: 51
          }
        }, {
          start: {
            line: 532,
            column: 55
          },
          end: {
            line: 532,
            column: 77
          }
        }],
        line: 532
      },
      "43": {
        loc: {
          start: {
            line: 545,
            column: 16
          },
          end: {
            line: 555,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 545,
            column: 16
          },
          end: {
            line: 555,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 545
      },
      "44": {
        loc: {
          start: {
            line: 545,
            column: 20
          },
          end: {
            line: 545,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 545,
            column: 20
          },
          end: {
            line: 545,
            column: 31
          }
        }, {
          start: {
            line: 545,
            column: 35
          },
          end: {
            line: 545,
            column: 57
          }
        }],
        line: 545
      },
      "45": {
        loc: {
          start: {
            line: 575,
            column: 20
          },
          end: {
            line: 599,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 20
          },
          end: {
            line: 599,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 575
      },
      "46": {
        loc: {
          start: {
            line: 575,
            column: 24
          },
          end: {
            line: 575,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 575,
            column: 24
          },
          end: {
            line: 575,
            column: 35
          }
        }, {
          start: {
            line: 575,
            column: 39
          },
          end: {
            line: 575,
            column: 60
          }
        }],
        line: 575
      },
      "47": {
        loc: {
          start: {
            line: 577,
            column: 24
          },
          end: {
            line: 587,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 24
          },
          end: {
            line: 587,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 577
      },
      "48": {
        loc: {
          start: {
            line: 577,
            column: 28
          },
          end: {
            line: 577,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 577,
            column: 28
          },
          end: {
            line: 577,
            column: 33
          }
        }, {
          start: {
            line: 577,
            column: 37
          },
          end: {
            line: 577,
            column: 53
          }
        }, {
          start: {
            line: 577,
            column: 57
          },
          end: {
            line: 577,
            column: 95
          }
        }],
        line: 577
      },
      "49": {
        loc: {
          start: {
            line: 588,
            column: 24
          },
          end: {
            line: 598,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 24
          },
          end: {
            line: 598,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "50": {
        loc: {
          start: {
            line: 588,
            column: 28
          },
          end: {
            line: 588,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 588,
            column: 28
          },
          end: {
            line: 588,
            column: 33
          }
        }, {
          start: {
            line: 588,
            column: 37
          },
          end: {
            line: 588,
            column: 64
          }
        }, {
          start: {
            line: 588,
            column: 68
          },
          end: {
            line: 588,
            column: 105
          }
        }],
        line: 588
      },
      "51": {
        loc: {
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 627,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 627,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "52": {
        loc: {
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 639,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 639,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "53": {
        loc: {
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 629,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 629,
            column: 39
          }
        }, {
          start: {
            line: 629,
            column: 43
          },
          end: {
            line: 629,
            column: 81
          }
        }],
        line: 629
      },
      "54": {
        loc: {
          start: {
            line: 662,
            column: 12
          },
          end: {
            line: 672,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 662,
            column: 12
          },
          end: {
            line: 672,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 662
      },
      "55": {
        loc: {
          start: {
            line: 692,
            column: 20
          },
          end: {
            line: 702,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 692,
            column: 20
          },
          end: {
            line: 702,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 692
      },
      "56": {
        loc: {
          start: {
            line: 725,
            column: 16
          },
          end: {
            line: 735,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 725,
            column: 16
          },
          end: {
            line: 735,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 725
      },
      "57": {
        loc: {
          start: {
            line: 749,
            column: 8
          },
          end: {
            line: 759,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 749,
            column: 8
          },
          end: {
            line: 759,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 749
      },
      "58": {
        loc: {
          start: {
            line: 749,
            column: 12
          },
          end: {
            line: 749,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 749,
            column: 12
          },
          end: {
            line: 749,
            column: 38
          }
        }, {
          start: {
            line: 749,
            column: 42
          },
          end: {
            line: 749,
            column: 67
          }
        }],
        line: 749
      },
      "59": {
        loc: {
          start: {
            line: 771,
            column: 12
          },
          end: {
            line: 781,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 771,
            column: 12
          },
          end: {
            line: 781,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 771
      },
      "60": {
        loc: {
          start: {
            line: 819,
            column: 12
          },
          end: {
            line: 821,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 819,
            column: 12
          },
          end: {
            line: 821,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 819
      },
      "61": {
        loc: {
          start: {
            line: 854,
            column: 8
          },
          end: {
            line: 860,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 855,
            column: 12
          },
          end: {
            line: 855,
            column: 47
          }
        }, {
          start: {
            line: 856,
            column: 12
          },
          end: {
            line: 856,
            column: 39
          }
        }, {
          start: {
            line: 857,
            column: 12
          },
          end: {
            line: 857,
            column: 45
          }
        }, {
          start: {
            line: 858,
            column: 12
          },
          end: {
            line: 858,
            column: 37
          }
        }, {
          start: {
            line: 859,
            column: 12
          },
          end: {
            line: 859,
            column: 37
          }
        }],
        line: 854
      },
      "62": {
        loc: {
          start: {
            line: 863,
            column: 8
          },
          end: {
            line: 864,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 863,
            column: 8
          },
          end: {
            line: 864,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 863
      },
      "63": {
        loc: {
          start: {
            line: 865,
            column: 8
          },
          end: {
            line: 866,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 865,
            column: 8
          },
          end: {
            line: 866,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 865
      },
      "64": {
        loc: {
          start: {
            line: 870,
            column: 8
          },
          end: {
            line: 876,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 871,
            column: 12
          },
          end: {
            line: 871,
            column: 73
          }
        }, {
          start: {
            line: 872,
            column: 12
          },
          end: {
            line: 872,
            column: 67
          }
        }, {
          start: {
            line: 873,
            column: 12
          },
          end: {
            line: 873,
            column: 66
          }
        }, {
          start: {
            line: 874,
            column: 12
          },
          end: {
            line: 874,
            column: 60
          }
        }, {
          start: {
            line: 875,
            column: 12
          },
          end: {
            line: 875,
            column: 51
          }
        }],
        line: 870
      },
      "65": {
        loc: {
          start: {
            line: 880,
            column: 8
          },
          end: {
            line: 904,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 881,
            column: 12
          },
          end: {
            line: 886,
            column: 22
          }
        }, {
          start: {
            line: 887,
            column: 12
          },
          end: {
            line: 892,
            column: 22
          }
        }, {
          start: {
            line: 893,
            column: 12
          },
          end: {
            line: 898,
            column: 22
          }
        }, {
          start: {
            line: 899,
            column: 12
          },
          end: {
            line: 903,
            column: 58
          }
        }],
        line: 880
      },
      "66": {
        loc: {
          start: {
            line: 916,
            column: 23
          },
          end: {
            line: 916,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 916,
            column: 23
          },
          end: {
            line: 916,
            column: 37
          }
        }, {
          start: {
            line: 916,
            column: 41
          },
          end: {
            line: 916,
            column: 42
          }
        }],
        line: 916
      },
      "67": {
        loc: {
          start: {
            line: 917,
            column: 8
          },
          end: {
            line: 918,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 917,
            column: 8
          },
          end: {
            line: 918,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 917
      },
      "68": {
        loc: {
          start: {
            line: 919,
            column: 8
          },
          end: {
            line: 920,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 919,
            column: 8
          },
          end: {
            line: 920,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 919
      },
      "69": {
        loc: {
          start: {
            line: 940,
            column: 8
          },
          end: {
            line: 947,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 940,
            column: 8
          },
          end: {
            line: 947,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 940
      },
      "70": {
        loc: {
          start: {
            line: 940,
            column: 12
          },
          end: {
            line: 940,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 940,
            column: 12
          },
          end: {
            line: 940,
            column: 16
          }
        }, {
          start: {
            line: 940,
            column: 20
          },
          end: {
            line: 940,
            column: 45
          }
        }],
        line: 940
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0, 0],
      "49": [0, 0],
      "50": [0, 0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0, 0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0, 0, 0, 0],
      "65": [0, 0, 0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d84dbee62551c456a405df3cb4c3cee7927e31f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fe1xfdeye = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fe1xfdeye();
var __createBinding =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[0]++,
/* istanbul ignore next */
(cov_2fe1xfdeye().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2fe1xfdeye().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2fe1xfdeye().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fe1xfdeye().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fe1xfdeye().f[0]++;
  cov_2fe1xfdeye().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().b[2][0]++;
    cov_2fe1xfdeye().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fe1xfdeye().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2fe1xfdeye().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2fe1xfdeye().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[5][1]++,
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().b[3][0]++;
    cov_2fe1xfdeye().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2fe1xfdeye().f[1]++;
        cov_2fe1xfdeye().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2fe1xfdeye().b[3][1]++;
  }
  cov_2fe1xfdeye().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2fe1xfdeye().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2fe1xfdeye().f[2]++;
  cov_2fe1xfdeye().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().b[7][0]++;
    cov_2fe1xfdeye().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2fe1xfdeye().b[7][1]++;
  }
  cov_2fe1xfdeye().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[11]++,
/* istanbul ignore next */
(cov_2fe1xfdeye().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2fe1xfdeye().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2fe1xfdeye().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2fe1xfdeye().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fe1xfdeye().f[3]++;
  cov_2fe1xfdeye().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2fe1xfdeye().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2fe1xfdeye().f[4]++;
  cov_2fe1xfdeye().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[14]++,
/* istanbul ignore next */
(cov_2fe1xfdeye().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2fe1xfdeye().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2fe1xfdeye().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2fe1xfdeye().f[5]++;
  cov_2fe1xfdeye().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[6]++;
    cov_2fe1xfdeye().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[17]++, []);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[12][0]++;
          cov_2fe1xfdeye().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2fe1xfdeye().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[8]++;
    cov_2fe1xfdeye().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[13][0]++;
      cov_2fe1xfdeye().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[26]++, {});
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[15][0]++;
      cov_2fe1xfdeye().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[16][0]++;
          cov_2fe1xfdeye().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[15][1]++;
    }
    cov_2fe1xfdeye().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2fe1xfdeye().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fe1xfdeye().s[36]++;
exports.VulnerabilityScannerService = exports.VulnerabilityScanType = void 0;
const crypto =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[37]++, __importStar(require("crypto")));
const fs =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[38]++, __importStar(require("fs/promises")));
const path =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[39]++, __importStar(require("path")));
const childProcess =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[40]++, __importStar(require("child_process")));
const util_1 =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[41]++, require("util"));
const execAsync =
/* istanbul ignore next */
(cov_2fe1xfdeye().s[42]++, (0, util_1.promisify)(childProcess.exec));
var VulnerabilityScanType;
/* istanbul ignore next */
cov_2fe1xfdeye().s[43]++;
(function (VulnerabilityScanType) {
  /* istanbul ignore next */
  cov_2fe1xfdeye().f[9]++;
  cov_2fe1xfdeye().s[44]++;
  VulnerabilityScanType["DEPENDENCY_SCAN"] = "dependency_scan";
  /* istanbul ignore next */
  cov_2fe1xfdeye().s[45]++;
  VulnerabilityScanType["CODE_ANALYSIS"] = "code_analysis";
  /* istanbul ignore next */
  cov_2fe1xfdeye().s[46]++;
  VulnerabilityScanType["CONFIGURATION_SCAN"] = "configuration_scan";
  /* istanbul ignore next */
  cov_2fe1xfdeye().s[47]++;
  VulnerabilityScanType["NETWORK_SCAN"] = "network_scan";
  /* istanbul ignore next */
  cov_2fe1xfdeye().s[48]++;
  VulnerabilityScanType["COMPREHENSIVE_SCAN"] = "comprehensive_scan";
})(
/* istanbul ignore next */
(cov_2fe1xfdeye().b[17][0]++, VulnerabilityScanType) ||
/* istanbul ignore next */
(cov_2fe1xfdeye().b[17][1]++, exports.VulnerabilityScanType = VulnerabilityScanType = {}));
class VulnerabilityScannerService {
  constructor(logger) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[10]++;
    cov_2fe1xfdeye().s[49]++;
    this.activeScans = new Map();
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[50]++;
    this.scanHistory = [];
    // Vulnerability databases and patterns
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[51]++;
    this.knownVulnerablePackages = new Map();
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[52]++;
    this.codeVulnerabilityPatterns = [];
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[53]++;
    this.configurationRules = new Map();
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[54]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[55]++;
    this.initializeVulnerabilityDatabase();
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[56]++;
    this.initializeCodeAnalysisPatterns();
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[57]++;
    this.initializeConfigurationRules();
  }
  /**
   * Initialize vulnerability database with known vulnerabilities
   */
  initializeVulnerabilityDatabase() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[11]++;
    cov_2fe1xfdeye().s[58]++;
    // Initialize with common vulnerable packages
    this.knownVulnerablePackages.set('lodash', [{
      packageName: 'lodash',
      version: '<4.17.12',
      vulnerableVersions: '<4.17.12',
      severity: 'HIGH',
      cveId: 'CVE-2019-10744',
      description: 'Prototype pollution vulnerability',
      patchedVersion: '4.17.12',
      exploitability: 8,
      impact: 7
    }]);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[59]++;
    this.knownVulnerablePackages.set('axios', [{
      packageName: 'axios',
      version: '<0.21.1',
      vulnerableVersions: '<0.21.1',
      severity: 'MEDIUM',
      cveId: 'CVE-2020-28168',
      description: 'Server-side request forgery vulnerability',
      patchedVersion: '0.21.1',
      exploitability: 6,
      impact: 5
    }]);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[60]++;
    this.knownVulnerablePackages.set('jsonwebtoken', [{
      packageName: 'jsonwebtoken',
      version: '<8.5.1',
      vulnerableVersions: '<8.5.1',
      severity: 'HIGH',
      cveId: 'CVE-2022-23529',
      description: 'JWT algorithm confusion vulnerability',
      patchedVersion: '8.5.1',
      exploitability: 7,
      impact: 8
    }]);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[61]++;
    this.logger.info('Vulnerability database initialized', {
      packageCount: this.knownVulnerablePackages.size
    });
  }
  /**
   * Initialize code analysis patterns for vulnerability detection
   */
  initializeCodeAnalysisPatterns() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[12]++;
    cov_2fe1xfdeye().s[62]++;
    this.codeVulnerabilityPatterns = [
    // SQL Injection patterns
    /query\s*\+\s*['"]/gi, /execute\s*\(\s*['"]/gi, /SELECT\s+.*\s+FROM\s+.*\s+WHERE\s+.*\+/gi,
    // XSS patterns
    /innerHTML\s*=\s*.*\+/gi, /document\.write\s*\(\s*.*\+/gi, /eval\s*\(\s*.*\+/gi,
    // Command injection patterns
    /exec\s*\(\s*.*\+/gi, /spawn\s*\(\s*.*\+/gi, /system\s*\(\s*.*\+/gi,
    // Hardcoded secrets patterns
    /password\s*=\s*['"]\w+['"]/gi, /api[_-]?key\s*=\s*['"]\w+['"]/gi, /secret\s*=\s*['"]\w+['"]/gi, /token\s*=\s*['"]\w+['"]/gi,
    // Insecure crypto patterns
    /md5\s*\(/gi, /sha1\s*\(/gi, /DES\s*\(/gi, /RC4\s*\(/gi,
    // Path traversal patterns
    /\.\.\//g, /\.\.\\\\/g, /path\.join\s*\(\s*.*\+/gi];
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[63]++;
    this.logger.info('Code analysis patterns initialized', {
      patternCount: this.codeVulnerabilityPatterns.length
    });
  }
  /**
   * Initialize configuration security rules
   */
  initializeConfigurationRules() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[13]++;
    cov_2fe1xfdeye().s[64]++;
    this.configurationRules.set('ssl', {
      minTLSVersion: '1.2',
      requireHTTPS: true,
      secureHeaders: ['X-Frame-Options', 'X-Content-Type-Options', 'X-XSS-Protection']
    });
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[65]++;
    this.configurationRules.set('authentication', {
      minPasswordLength: 12,
      requireMFA: true,
      sessionTimeout: 3600,
      maxLoginAttempts: 5
    });
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[66]++;
    this.configurationRules.set('database', {
      encryptionAtRest: true,
      encryptionInTransit: true,
      backupEncryption: true,
      accessLogging: true
    });
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[67]++;
    this.logger.info('Configuration rules initialized', {
      ruleCount: this.configurationRules.size
    });
  }
  /**
   * Execute comprehensive vulnerability scan
   */
  async executeComprehensiveVulnerabilityScan(target =
  /* istanbul ignore next */
  (cov_2fe1xfdeye().b[18][0]++, 'system')) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[14]++;
    const scanId =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[68]++, `vuln_scan_${Date.now()}_${crypto.randomBytes(4).toString('hex')}`);
    const scanner =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[69]++, {
      scanId,
      scanType: VulnerabilityScanType.COMPREHENSIVE_SCAN,
      target,
      startTime: new Date(),
      status: 'RUNNING',
      findings: [],
      summary: {
        totalFindings: 0,
        criticalCount: 0,
        highCount: 0,
        mediumCount: 0,
        lowCount: 0,
        riskScore: 0,
        complianceScore: 0,
        remediationPriority: []
      }
    });
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[70]++;
    this.activeScans.set(scanId, scanner);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[71]++;
    this.logger.info('Starting comprehensive vulnerability scan', {
      scanId,
      target
    });
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[72]++;
    try {
      // Execute all scan types
      const dependencyFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[73]++, await this.scanDependencyVulnerabilities());
      const codeFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[74]++, await this.scanCodeVulnerabilities());
      const configFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[75]++, await this.scanConfigurationVulnerabilities());
      const networkFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[76]++, await this.scanNetworkVulnerabilities());
      // Combine all findings
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[77]++;
      scanner.findings = [...dependencyFindings, ...codeFindings, ...configFindings, ...networkFindings];
      // Generate summary
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[78]++;
      scanner.summary = this.generateVulnerabilitySummary(scanner.findings);
      // Generate remediation priorities
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[79]++;
      scanner.summary.remediationPriority = this.generateRemediationPriorities(scanner.findings);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[80]++;
      scanner.status = 'COMPLETED';
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[81]++;
      scanner.endTime = new Date();
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[82]++;
      this.logger.info('Comprehensive vulnerability scan completed', {
        scanId,
        totalFindings: scanner.summary.totalFindings,
        criticalCount: scanner.summary.criticalCount,
        riskScore: scanner.summary.riskScore
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[83]++;
      scanner.status = 'FAILED';
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[84]++;
      scanner.endTime = new Date();
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[85]++;
      this.logger.error('Comprehensive vulnerability scan failed', {
        scanId,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2fe1xfdeye().b[19][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2fe1xfdeye().b[19][1]++, String(error))
      });
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[86]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[87]++;
      this.activeScans.delete(scanId);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[88]++;
      this.scanHistory.push(scanner);
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[89]++;
    return scanner;
  }
  /**
   * Scan for dependency vulnerabilities
   */
  async scanDependencyVulnerabilities() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[15]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[90]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[91]++;
    try {
      // Read package.json
      const packageJsonPath =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[92]++, path.join(process.cwd(), 'package.json'));
      const packageJsonContent =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[93]++, await fs.readFile(packageJsonPath, 'utf-8'));
      const packageJson =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[94]++, JSON.parse(packageJsonContent));
      const dependencies =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[95]++, {
        ...packageJson.dependencies,
        ...packageJson.devDependencies
      });
      // Check each dependency against vulnerability database
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[96]++;
      for (const [packageName, version] of Object.entries(dependencies)) {
        const vulnerabilities =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[97]++, this.knownVulnerablePackages.get(packageName));
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[98]++;
        if (vulnerabilities) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[20][0]++;
          cov_2fe1xfdeye().s[99]++;
          for (const vuln of vulnerabilities) {
            /* istanbul ignore next */
            cov_2fe1xfdeye().s[100]++;
            if (this.isVersionVulnerable(version, vuln.vulnerableVersions)) {
              /* istanbul ignore next */
              cov_2fe1xfdeye().b[21][0]++;
              cov_2fe1xfdeye().s[101]++;
              findings.push({
                id: crypto.randomUUID(),
                type: 'DEPENDENCY_VULNERABILITY',
                severity: vuln.severity,
                description: `${packageName}@${version}: ${vuln.description}`,
                location: 'package.json',
                evidence: `Package ${packageName} version ${version} has known vulnerability ${vuln.cveId}`,
                cveId: vuln.cveId,
                remediation: `Update ${packageName} to version ${vuln.patchedVersion} or later`
              });
            } else
            /* istanbul ignore next */
            {
              cov_2fe1xfdeye().b[21][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[20][1]++;
        }
      }
      // Run npm audit if available
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[102]++;
      try {
        const {
          stdout
        } =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[103]++, await execAsync('npm audit --json', {
          timeout: 30000
        }));
        const auditResult =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[104]++, JSON.parse(stdout));
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[105]++;
        if (auditResult.vulnerabilities) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[22][0]++;
          cov_2fe1xfdeye().s[106]++;
          for (const [packageName, vulnData] of Object.entries(auditResult.vulnerabilities)) {
            const vuln =
            /* istanbul ignore next */
            (cov_2fe1xfdeye().s[107]++, vulnData);
            /* istanbul ignore next */
            cov_2fe1xfdeye().s[108]++;
            findings.push({
              id: crypto.randomUUID(),
              type: 'DEPENDENCY_VULNERABILITY',
              severity: this.mapNpmSeverity(vuln.severity),
              description: `${packageName}: ${vuln.title}`,
              location: 'package.json',
              evidence:
              /* istanbul ignore next */
              (cov_2fe1xfdeye().b[23][0]++, vuln.url) ||
              /* istanbul ignore next */
              (cov_2fe1xfdeye().b[23][1]++, 'NPM Audit'),
              remediation: vuln.fixAvailable ?
              /* istanbul ignore next */
              (cov_2fe1xfdeye().b[24][0]++, 'Run npm audit fix') :
              /* istanbul ignore next */
              (cov_2fe1xfdeye().b[24][1]++, 'Manual update required')
            });
          }
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[22][1]++;
        }
      } catch (auditError) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[109]++;
        this.logger.warn('NPM audit failed', {
          error: auditError
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[110]++;
      this.logger.error('Dependency vulnerability scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[111]++;
    return findings;
  }
  /**
   * Scan for code vulnerabilities
   */
  async scanCodeVulnerabilities() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[16]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[112]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[113]++;
    try {
      const sourceDir =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[114]++, path.join(process.cwd(), 'src'));
      const files =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[115]++, await this.getSourceFiles(sourceDir));
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[116]++;
      for (const file of files) {
        const content =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[117]++, await fs.readFile(file, 'utf-8'));
        const lines =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[118]++, content.split('\n'));
        // Check each line against vulnerability patterns
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[119]++;
        for (let lineIndex =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[120]++, 0); lineIndex < lines.length; lineIndex++) {
          const line =
          /* istanbul ignore next */
          (cov_2fe1xfdeye().s[121]++, lines[lineIndex]);
          /* istanbul ignore next */
          cov_2fe1xfdeye().s[122]++;
          for (const pattern of this.codeVulnerabilityPatterns) {
            const matches =
            /* istanbul ignore next */
            (cov_2fe1xfdeye().s[123]++, line.match(pattern));
            /* istanbul ignore next */
            cov_2fe1xfdeye().s[124]++;
            if (matches) {
              /* istanbul ignore next */
              cov_2fe1xfdeye().b[25][0]++;
              const vulnerability =
              /* istanbul ignore next */
              (cov_2fe1xfdeye().s[125]++, this.analyzeCodeVulnerability(line, pattern, file, lineIndex + 1));
              /* istanbul ignore next */
              cov_2fe1xfdeye().s[126]++;
              if (vulnerability) {
                /* istanbul ignore next */
                cov_2fe1xfdeye().b[26][0]++;
                cov_2fe1xfdeye().s[127]++;
                findings.push({
                  id: crypto.randomUUID(),
                  type: vulnerability.type,
                  severity: vulnerability.severity,
                  description: vulnerability.description,
                  location: `${file}:${lineIndex + 1}`,
                  evidence: line.trim(),
                  remediation: vulnerability.recommendation
                });
              } else
              /* istanbul ignore next */
              {
                cov_2fe1xfdeye().b[26][1]++;
              }
            } else
            /* istanbul ignore next */
            {
              cov_2fe1xfdeye().b[25][1]++;
            }
          }
        }
      }
      // Additional static analysis checks
      const staticAnalysisFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[128]++, await this.performStaticAnalysis(files));
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[129]++;
      findings.push(...staticAnalysisFindings);
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[130]++;
      this.logger.error('Code vulnerability scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[131]++;
    return findings;
  }
  /**
   * Scan for configuration vulnerabilities
   */
  async scanConfigurationVulnerabilities() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[17]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[132]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[133]++;
    try {
      // Check environment configuration
      const envFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[134]++, await this.scanEnvironmentConfiguration());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[135]++;
      findings.push(...envFindings);
      // Check application configuration
      const appConfigFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[136]++, await this.scanApplicationConfiguration());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[137]++;
      findings.push(...appConfigFindings);
      // Check security headers configuration
      const headerFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[138]++, await this.scanSecurityHeaders());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[139]++;
      findings.push(...headerFindings);
      // Check file permissions
      const permissionFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[140]++, await this.scanFilePermissions());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[141]++;
      findings.push(...permissionFindings);
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[142]++;
      this.logger.error('Configuration vulnerability scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[143]++;
    return findings;
  }
  /**
   * Scan for network vulnerabilities
   */
  async scanNetworkVulnerabilities() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[18]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[144]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[145]++;
    try {
      // Check open ports
      const portFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[146]++, await this.scanOpenPorts());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[147]++;
      findings.push(...portFindings);
      // Check SSL/TLS configuration
      const tlsFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[148]++, await this.scanTLSConfiguration());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[149]++;
      findings.push(...tlsFindings);
      // Check network services
      const serviceFindings =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[150]++, await this.scanNetworkServices());
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[151]++;
      findings.push(...serviceFindings);
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[152]++;
      this.logger.error('Network vulnerability scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[153]++;
    return findings;
  }
  /**
   * Get all source files recursively
   */
  async getSourceFiles(dir) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[19]++;
    const files =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[154]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[155]++;
    try {
      const entries =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[156]++, await fs.readdir(dir, {
        withFileTypes: true
      }));
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[157]++;
      for (const entry of entries) {
        const fullPath =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[158]++, path.join(dir, entry.name));
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[159]++;
        if (entry.isDirectory()) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[27][0]++;
          const subFiles =
          /* istanbul ignore next */
          (cov_2fe1xfdeye().s[160]++, await this.getSourceFiles(fullPath));
          /* istanbul ignore next */
          cov_2fe1xfdeye().s[161]++;
          files.push(...subFiles);
        } else {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[27][1]++;
          cov_2fe1xfdeye().s[162]++;
          if (
          /* istanbul ignore next */
          (cov_2fe1xfdeye().b[29][0]++, entry.isFile()) && (
          /* istanbul ignore next */
          (cov_2fe1xfdeye().b[29][1]++, entry.name.endsWith('.ts')) ||
          /* istanbul ignore next */
          (cov_2fe1xfdeye().b[29][2]++, entry.name.endsWith('.js')) ||
          /* istanbul ignore next */
          (cov_2fe1xfdeye().b[29][3]++, entry.name.endsWith('.json')))) {
            /* istanbul ignore next */
            cov_2fe1xfdeye().b[28][0]++;
            cov_2fe1xfdeye().s[163]++;
            files.push(fullPath);
          } else
          /* istanbul ignore next */
          {
            cov_2fe1xfdeye().b[28][1]++;
          }
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[164]++;
      this.logger.warn('Failed to read directory', {
        dir,
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[165]++;
    return files;
  }
  /**
   * Analyze code vulnerability based on pattern match
   */
  analyzeCodeVulnerability(line, pattern, file, lineNumber) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[20]++;
    cov_2fe1xfdeye().s[166]++;
    // SQL Injection patterns
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[31][0]++, pattern.source.includes('query')) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[31][1]++, pattern.source.includes('SELECT'))) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[30][0]++;
      cov_2fe1xfdeye().s[167]++;
      return {
        file,
        line: lineNumber,
        type: 'SQL_INJECTION',
        severity: 'CRITICAL',
        description: 'Potential SQL injection vulnerability detected',
        codeSnippet: line.trim(),
        recommendation: 'Use parameterized queries or prepared statements',
        cweId: 'CWE-89'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[30][1]++;
    }
    // XSS patterns
    cov_2fe1xfdeye().s[168]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[33][0]++, pattern.source.includes('innerHTML')) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[33][1]++, pattern.source.includes('document.write'))) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[32][0]++;
      cov_2fe1xfdeye().s[169]++;
      return {
        file,
        line: lineNumber,
        type: 'XSS',
        severity: 'HIGH',
        description: 'Potential cross-site scripting vulnerability detected',
        codeSnippet: line.trim(),
        recommendation: 'Use proper output encoding and sanitization',
        cweId: 'CWE-79'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[32][1]++;
    }
    // Command injection patterns
    cov_2fe1xfdeye().s[170]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[35][0]++, pattern.source.includes('exec')) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[35][1]++, pattern.source.includes('spawn'))) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[34][0]++;
      cov_2fe1xfdeye().s[171]++;
      return {
        file,
        line: lineNumber,
        type: 'COMMAND_INJECTION',
        severity: 'CRITICAL',
        description: 'Potential command injection vulnerability detected',
        codeSnippet: line.trim(),
        recommendation: 'Avoid executing user input as commands, use input validation',
        cweId: 'CWE-78'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[34][1]++;
    }
    // Hardcoded secrets patterns
    cov_2fe1xfdeye().s[172]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[37][0]++, pattern.source.includes('password')) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[37][1]++, pattern.source.includes('api'))) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[36][0]++;
      cov_2fe1xfdeye().s[173]++;
      return {
        file,
        line: lineNumber,
        type: 'HARDCODED_SECRET',
        severity: 'HIGH',
        description: 'Potential hardcoded secret detected',
        codeSnippet: line.trim(),
        recommendation: 'Use environment variables or secure configuration management',
        cweId: 'CWE-798'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[36][1]++;
    }
    // Insecure crypto patterns
    cov_2fe1xfdeye().s[174]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[39][0]++, pattern.source.includes('md5')) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[39][1]++, pattern.source.includes('sha1'))) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[38][0]++;
      cov_2fe1xfdeye().s[175]++;
      return {
        file,
        line: lineNumber,
        type: 'WEAK_CRYPTOGRAPHY',
        severity: 'MEDIUM',
        description: 'Weak cryptographic algorithm detected',
        codeSnippet: line.trim(),
        recommendation: 'Use strong cryptographic algorithms like SHA-256 or better',
        cweId: 'CWE-327'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[38][1]++;
    }
    cov_2fe1xfdeye().s[176]++;
    return null;
  }
  /**
   * Perform static analysis on source files
   */
  async performStaticAnalysis(files) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[21]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[177]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[178]++;
    for (const file of files) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[179]++;
      try {
        const content =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[180]++, await fs.readFile(file, 'utf-8'));
        // Check for eval usage
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[181]++;
        if (content.includes('eval(')) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[40][0]++;
          cov_2fe1xfdeye().s[182]++;
          findings.push({
            id: crypto.randomUUID(),
            type: 'DANGEROUS_FUNCTION',
            severity: 'HIGH',
            description: 'Use of dangerous eval() function detected',
            location: file,
            evidence: 'eval() function call found',
            remediation: 'Avoid using eval(), use safer alternatives'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[40][1]++;
        }
        // Check for console.log in production code
        cov_2fe1xfdeye().s[183]++;
        if (
        /* istanbul ignore next */
        (cov_2fe1xfdeye().b[42][0]++, content.includes('console.log')) &&
        /* istanbul ignore next */
        (cov_2fe1xfdeye().b[42][1]++, !file.includes('test'))) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[41][0]++;
          cov_2fe1xfdeye().s[184]++;
          findings.push({
            id: crypto.randomUUID(),
            type: 'INFORMATION_DISCLOSURE',
            severity: 'LOW',
            description: 'Console logging detected in production code',
            location: file,
            evidence: 'console.log statement found',
            remediation: 'Remove console.log statements from production code'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[41][1]++;
        }
        // Check for TODO/FIXME comments
        const todoMatches =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[185]++, content.match(/TODO|FIXME|HACK/gi));
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[186]++;
        if (
        /* istanbul ignore next */
        (cov_2fe1xfdeye().b[44][0]++, todoMatches) &&
        /* istanbul ignore next */
        (cov_2fe1xfdeye().b[44][1]++, todoMatches.length > 0)) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[43][0]++;
          cov_2fe1xfdeye().s[187]++;
          findings.push({
            id: crypto.randomUUID(),
            type: 'CODE_QUALITY',
            severity: 'LOW',
            description: `${todoMatches.length} TODO/FIXME comments found`,
            location: file,
            evidence: `${todoMatches.length} unresolved comments`,
            remediation: 'Address TODO/FIXME comments before production deployment'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[43][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[188]++;
        this.logger.warn('Static analysis failed for file', {
          file,
          error
        });
      }
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[189]++;
    return findings;
  }
  /**
   * Scan environment configuration
   */
  async scanEnvironmentConfiguration() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[22]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[190]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[191]++;
    try {
      // Check .env file
      const envPath =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[192]++, path.join(process.cwd(), '.env'));
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[193]++;
      try {
        const envContent =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[194]++, await fs.readFile(envPath, 'utf-8'));
        const lines =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[195]++, envContent.split('\n'));
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[196]++;
        for (const line of lines) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().s[197]++;
          if (
          /* istanbul ignore next */
          (cov_2fe1xfdeye().b[46][0]++, line.trim()) &&
          /* istanbul ignore next */
          (cov_2fe1xfdeye().b[46][1]++, !line.startsWith('#'))) {
            /* istanbul ignore next */
            cov_2fe1xfdeye().b[45][0]++;
            const [key, value] =
            /* istanbul ignore next */
            (cov_2fe1xfdeye().s[198]++, line.split('='));
            /* istanbul ignore next */
            cov_2fe1xfdeye().s[199]++;
            if (
            /* istanbul ignore next */
            (cov_2fe1xfdeye().b[48][0]++, value) &&
            /* istanbul ignore next */
            (cov_2fe1xfdeye().b[48][1]++, value.length < 8) &&
            /* istanbul ignore next */
            (cov_2fe1xfdeye().b[48][2]++, key.toLowerCase().includes('password'))) {
              /* istanbul ignore next */
              cov_2fe1xfdeye().b[47][0]++;
              cov_2fe1xfdeye().s[200]++;
              findings.push({
                id: crypto.randomUUID(),
                type: 'WEAK_PASSWORD',
                severity: 'MEDIUM',
                description: 'Weak password detected in environment configuration',
                location: '.env',
                evidence: `${key} has weak password`,
                remediation: 'Use strong passwords with at least 12 characters'
              });
            } else
            /* istanbul ignore next */
            {
              cov_2fe1xfdeye().b[47][1]++;
            }
            cov_2fe1xfdeye().s[201]++;
            if (
            /* istanbul ignore next */
            (cov_2fe1xfdeye().b[50][0]++, value) &&
            /* istanbul ignore next */
            (cov_2fe1xfdeye().b[50][1]++, value.includes('localhost')) &&
            /* istanbul ignore next */
            (cov_2fe1xfdeye().b[50][2]++, process.env.NODE_ENV === 'production')) {
              /* istanbul ignore next */
              cov_2fe1xfdeye().b[49][0]++;
              cov_2fe1xfdeye().s[202]++;
              findings.push({
                id: crypto.randomUUID(),
                type: 'CONFIGURATION_ERROR',
                severity: 'HIGH',
                description: 'Localhost configuration in production environment',
                location: '.env',
                evidence: `${key}=${value}`,
                remediation: 'Use production-appropriate configuration values'
              });
            } else
            /* istanbul ignore next */
            {
              cov_2fe1xfdeye().b[49][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2fe1xfdeye().b[45][1]++;
          }
        }
      } catch (error) {
        // .env file might not exist, which is okay
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[203]++;
      this.logger.error('Environment configuration scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[204]++;
    return findings;
  }
  /**
   * Scan application configuration
   */
  async scanApplicationConfiguration() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[23]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[205]++, []);
    // Check if HTTPS is enforced
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[206]++;
    if (!process.env.FORCE_HTTPS) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[51][0]++;
      cov_2fe1xfdeye().s[207]++;
      findings.push({
        id: crypto.randomUUID(),
        type: 'INSECURE_TRANSPORT',
        severity: 'HIGH',
        description: 'HTTPS not enforced',
        location: 'Application Configuration',
        evidence: 'FORCE_HTTPS environment variable not set',
        remediation: 'Set FORCE_HTTPS=true to enforce HTTPS connections'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[51][1]++;
    }
    // Check session configuration
    cov_2fe1xfdeye().s[208]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[53][0]++, !process.env.SESSION_SECRET) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[53][1]++, process.env.SESSION_SECRET.length < 32)) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[52][0]++;
      cov_2fe1xfdeye().s[209]++;
      findings.push({
        id: crypto.randomUUID(),
        type: 'WEAK_SESSION_SECRET',
        severity: 'HIGH',
        description: 'Weak or missing session secret',
        location: 'Application Configuration',
        evidence: 'SESSION_SECRET is weak or missing',
        remediation: 'Use a strong, randomly generated session secret (32+ characters)'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[52][1]++;
    }
    cov_2fe1xfdeye().s[210]++;
    return findings;
  }
  /**
   * Scan security headers configuration
   */
  async scanSecurityHeaders() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[24]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[211]++, []);
    const requiredHeaders =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[212]++, ['X-Frame-Options', 'X-Content-Type-Options', 'X-XSS-Protection', 'Strict-Transport-Security', 'Content-Security-Policy']);
    // This would normally check actual HTTP responses
    // For now, we'll check if security middleware is configured
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[213]++;
    try {
      const appFiles =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[214]++, await this.getSourceFiles(path.join(process.cwd(), 'src')));
      const hasHelmet =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[215]++, appFiles.some(async file => {
        /* istanbul ignore next */
        cov_2fe1xfdeye().f[25]++;
        const content =
        /* istanbul ignore next */
        (cov_2fe1xfdeye().s[216]++, await fs.readFile(file, 'utf-8'));
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[217]++;
        return content.includes('helmet');
      }));
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[218]++;
      if (!hasHelmet) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[54][0]++;
        cov_2fe1xfdeye().s[219]++;
        findings.push({
          id: crypto.randomUUID(),
          type: 'MISSING_SECURITY_HEADERS',
          severity: 'MEDIUM',
          description: 'Security headers middleware not detected',
          location: 'Application Configuration',
          evidence: 'No helmet or security headers middleware found',
          remediation: 'Implement security headers middleware (e.g., helmet.js)'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2fe1xfdeye().b[54][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[220]++;
      this.logger.error('Security headers scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[221]++;
    return findings;
  }
  /**
   * Scan file permissions
   */
  async scanFilePermissions() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[26]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[222]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[223]++;
    try {
      const sensitiveFiles =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[224]++, ['.env', 'package.json', 'tsconfig.json']);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[225]++;
      for (const file of sensitiveFiles) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[226]++;
        try {
          const filePath =
          /* istanbul ignore next */
          (cov_2fe1xfdeye().s[227]++, path.join(process.cwd(), file));
          const stats =
          /* istanbul ignore next */
          (cov_2fe1xfdeye().s[228]++, await fs.stat(filePath));
          const mode =
          /* istanbul ignore next */
          (cov_2fe1xfdeye().s[229]++, stats.mode & parseInt('777', 8));
          // Check if file is world-readable
          /* istanbul ignore next */
          cov_2fe1xfdeye().s[230]++;
          if (mode & parseInt('004', 8)) {
            /* istanbul ignore next */
            cov_2fe1xfdeye().b[55][0]++;
            cov_2fe1xfdeye().s[231]++;
            findings.push({
              id: crypto.randomUUID(),
              type: 'INSECURE_FILE_PERMISSIONS',
              severity: 'MEDIUM',
              description: `File ${file} is world-readable`,
              location: filePath,
              evidence: `File permissions: ${mode.toString(8)}`,
              remediation: `Change file permissions: chmod 600 ${file}`
            });
          } else
          /* istanbul ignore next */
          {
            cov_2fe1xfdeye().b[55][1]++;
          }
        } catch (error) {
          // File might not exist
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[232]++;
      this.logger.error('File permissions scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[233]++;
    return findings;
  }
  /**
   * Scan for open ports
   */
  async scanOpenPorts() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[27]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[234]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[235]++;
    try {
      // This would normally use netstat or similar tools
      // For now, we'll check common ports
      const commonPorts =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[236]++, [22, 80, 443, 3000, 3001, 3002, 5432, 27017]);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[237]++;
      for (const port of commonPorts) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[238]++;
        // Simulate port scanning (in real implementation, would use actual network scanning)
        if (Math.random() > 0.8) {
          /* istanbul ignore next */
          cov_2fe1xfdeye().b[56][0]++;
          cov_2fe1xfdeye().s[239]++;
          // Simulate some ports being open
          findings.push({
            id: crypto.randomUUID(),
            type: 'OPEN_PORT',
            severity: 'MEDIUM',
            description: `Port ${port} is open`,
            location: `Network port ${port}`,
            evidence: `Port ${port} responds to connections`,
            remediation: `Close unnecessary port ${port} or implement proper access controls`
          });
        } else
        /* istanbul ignore next */
        {
          cov_2fe1xfdeye().b[56][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[240]++;
      this.logger.error('Port scan failed', {
        error
      });
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[241]++;
    return findings;
  }
  /**
   * Scan TLS configuration
   */
  async scanTLSConfiguration() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[28]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[242]++, []);
    // Check if TLS is properly configured
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[243]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[58][0]++, !process.env.TLS_CERT_PATH) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[58][1]++, !process.env.TLS_KEY_PATH)) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[57][0]++;
      cov_2fe1xfdeye().s[244]++;
      findings.push({
        id: crypto.randomUUID(),
        type: 'MISSING_TLS_CONFIG',
        severity: 'HIGH',
        description: 'TLS certificates not configured',
        location: 'Network Configuration',
        evidence: 'TLS_CERT_PATH or TLS_KEY_PATH not set',
        remediation: 'Configure proper TLS certificates for secure communication'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[57][1]++;
    }
    cov_2fe1xfdeye().s[245]++;
    return findings;
  }
  /**
   * Scan network services
   */
  async scanNetworkServices() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[29]++;
    const findings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[246]++, []);
    // Check for unnecessary services
    const unnecessaryServices =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[247]++, ['telnet', 'ftp', 'rsh', 'rlogin']);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[248]++;
    for (const service of unnecessaryServices) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[249]++;
      // Simulate service detection
      if (Math.random() > 0.9) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[59][0]++;
        cov_2fe1xfdeye().s[250]++;
        // Rarely find these services
        findings.push({
          id: crypto.randomUUID(),
          type: 'UNNECESSARY_SERVICE',
          severity: 'HIGH',
          description: `Unnecessary service ${service} detected`,
          location: 'Network Services',
          evidence: `Service ${service} is running`,
          remediation: `Disable unnecessary service ${service}`
        });
      } else
      /* istanbul ignore next */
      {
        cov_2fe1xfdeye().b[59][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[251]++;
    return findings;
  }
  /**
   * Generate vulnerability summary
   */
  generateVulnerabilitySummary(findings) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[30]++;
    const criticalCount =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[252]++, findings.filter(f => {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[31]++;
      cov_2fe1xfdeye().s[253]++;
      return f.severity === 'CRITICAL';
    }).length);
    const highCount =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[254]++, findings.filter(f => {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[32]++;
      cov_2fe1xfdeye().s[255]++;
      return f.severity === 'HIGH';
    }).length);
    const mediumCount =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[256]++, findings.filter(f => {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[33]++;
      cov_2fe1xfdeye().s[257]++;
      return f.severity === 'MEDIUM';
    }).length);
    const lowCount =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[258]++, findings.filter(f => {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[34]++;
      cov_2fe1xfdeye().s[259]++;
      return f.severity === 'LOW';
    }).length);
    // Calculate risk score (0-100)
    const riskScore =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[260]++, Math.min(100, criticalCount * 25 + highCount * 10 + mediumCount * 5 + lowCount * 1));
    // Calculate compliance score (100 - risk score)
    const complianceScore =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[261]++, Math.max(0, 100 - riskScore));
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[262]++;
    return {
      totalFindings: findings.length,
      criticalCount,
      highCount,
      mediumCount,
      lowCount,
      riskScore,
      complianceScore,
      remediationPriority: []
    };
  }
  /**
   * Generate remediation priorities
   */
  generateRemediationPriorities(findings) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[35]++;
    const remediationItems =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[263]++, []);
    // Group findings by type and severity
    const groupedFindings =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[264]++, findings.reduce((groups, finding) => {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[36]++;
      const key =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[265]++, `${finding.type}_${finding.severity}`);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[266]++;
      if (!groups[key]) {
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[60][0]++;
        cov_2fe1xfdeye().s[267]++;
        groups[key] = [];
      } else
      /* istanbul ignore next */
      {
        cov_2fe1xfdeye().b[60][1]++;
      }
      cov_2fe1xfdeye().s[268]++;
      groups[key].push(finding);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[269]++;
      return groups;
    }, {}));
    // Generate remediation items
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[270]++;
    for (const [key, groupFindings] of Object.entries(groupedFindings)) {
      const [type, severity] =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[271]++, key.split('_'));
      const priority =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[272]++, severity);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[273]++;
      remediationItems.push({
        id: crypto.randomUUID(),
        priority,
        title: `Fix ${type.replace('_', ' ')} vulnerabilities`,
        description: `Address ${groupFindings.length} ${type.replace('_', ' ')} vulnerabilities`,
        effort: this.estimateRemediationEffort(type, groupFindings.length),
        impact: this.estimateRemediationImpact(severity),
        steps: this.generateRemediationSteps(type, groupFindings),
        estimatedTime: this.estimateRemediationTime(type, groupFindings.length)
      });
    }
    // Sort by priority
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[274]++;
    return remediationItems.sort((a, b) => {
      /* istanbul ignore next */
      cov_2fe1xfdeye().f[37]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_2fe1xfdeye().s[275]++, {
        'CRITICAL': 4,
        'HIGH': 3,
        'MEDIUM': 2,
        'LOW': 1
      });
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[276]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  }
  /**
   * Helper methods
   */
  isVersionVulnerable(currentVersion, vulnerableVersions) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[38]++;
    cov_2fe1xfdeye().s[277]++;
    // Simplified version comparison - in production, use a proper semver library
    return currentVersion.includes(vulnerableVersions.replace('<', ''));
  }
  mapNpmSeverity(npmSeverity) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[39]++;
    cov_2fe1xfdeye().s[278]++;
    switch (npmSeverity.toLowerCase()) {
      case 'critical':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[61][0]++;
        cov_2fe1xfdeye().s[279]++;
        return 'CRITICAL';
      case 'high':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[61][1]++;
        cov_2fe1xfdeye().s[280]++;
        return 'HIGH';
      case 'moderate':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[61][2]++;
        cov_2fe1xfdeye().s[281]++;
        return 'MEDIUM';
      case 'low':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[61][3]++;
        cov_2fe1xfdeye().s[282]++;
        return 'LOW';
      default:
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[61][4]++;
        cov_2fe1xfdeye().s[283]++;
        return 'MEDIUM';
    }
  }
  estimateRemediationEffort(type, count) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[40]++;
    cov_2fe1xfdeye().s[284]++;
    if (count <= 2) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[62][0]++;
      cov_2fe1xfdeye().s[285]++;
      return 'LOW';
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[62][1]++;
    }
    cov_2fe1xfdeye().s[286]++;
    if (count <= 5) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[63][0]++;
      cov_2fe1xfdeye().s[287]++;
      return 'MEDIUM';
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[63][1]++;
    }
    cov_2fe1xfdeye().s[288]++;
    return 'HIGH';
  }
  estimateRemediationImpact(severity) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[41]++;
    cov_2fe1xfdeye().s[289]++;
    switch (severity) {
      case 'CRITICAL':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[64][0]++;
        cov_2fe1xfdeye().s[290]++;
        return 'Immediate security risk mitigation';
      case 'HIGH':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[64][1]++;
        cov_2fe1xfdeye().s[291]++;
        return 'Significant security improvement';
      case 'MEDIUM':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[64][2]++;
        cov_2fe1xfdeye().s[292]++;
        return 'Moderate security enhancement';
      case 'LOW':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[64][3]++;
        cov_2fe1xfdeye().s[293]++;
        return 'Minor security improvement';
      default:
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[64][4]++;
        cov_2fe1xfdeye().s[294]++;
        return 'Security improvement';
    }
  }
  generateRemediationSteps(type, findings) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[42]++;
    const steps =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[295]++, []);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[296]++;
    switch (type) {
      case 'DEPENDENCY_VULNERABILITY':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[65][0]++;
        cov_2fe1xfdeye().s[297]++;
        steps.push('Review vulnerable dependencies');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[298]++;
        steps.push('Update to patched versions');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[299]++;
        steps.push('Test application functionality');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[300]++;
        steps.push('Deploy updated dependencies');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[301]++;
        break;
      case 'SQL_INJECTION':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[65][1]++;
        cov_2fe1xfdeye().s[302]++;
        steps.push('Identify vulnerable queries');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[303]++;
        steps.push('Implement parameterized queries');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[304]++;
        steps.push('Add input validation');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[305]++;
        steps.push('Test with security tools');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[306]++;
        break;
      case 'XSS':
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[65][2]++;
        cov_2fe1xfdeye().s[307]++;
        steps.push('Identify XSS vulnerabilities');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[308]++;
        steps.push('Implement output encoding');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[309]++;
        steps.push('Add Content Security Policy');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[310]++;
        steps.push('Validate with security scanner');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[311]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2fe1xfdeye().b[65][3]++;
        cov_2fe1xfdeye().s[312]++;
        steps.push('Review security findings');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[313]++;
        steps.push('Implement recommended fixes');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[314]++;
        steps.push('Test security improvements');
        /* istanbul ignore next */
        cov_2fe1xfdeye().s[315]++;
        steps.push('Validate with security scan');
    }
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[316]++;
    return steps;
  }
  estimateRemediationTime(type, count) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[43]++;
    const baseTime =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[317]++, {
      'DEPENDENCY_VULNERABILITY': 2,
      'SQL_INJECTION': 4,
      'XSS': 3,
      'COMMAND_INJECTION': 4,
      'HARDCODED_SECRET': 1,
      'WEAK_CRYPTOGRAPHY': 3
    });
    const hours =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[318]++, (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[66][0]++, baseTime[type]) ||
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[66][1]++, 2)) * count);
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[319]++;
    if (hours <= 8) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[67][0]++;
      cov_2fe1xfdeye().s[320]++;
      return `${hours} hours`;
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[67][1]++;
    }
    cov_2fe1xfdeye().s[321]++;
    if (hours <= 40) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[68][0]++;
      cov_2fe1xfdeye().s[322]++;
      return `${Math.ceil(hours / 8)} days`;
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[68][1]++;
    }
    cov_2fe1xfdeye().s[323]++;
    return `${Math.ceil(hours / 40)} weeks`;
  }
  /**
   * Get scan history
   */
  getScanHistory() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[44]++;
    cov_2fe1xfdeye().s[324]++;
    return this.scanHistory;
  }
  /**
   * Get active scans
   */
  getActiveScans() {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[45]++;
    cov_2fe1xfdeye().s[325]++;
    return Array.from(this.activeScans.values());
  }
  /**
   * Cancel active scan
   */
  async cancelScan(scanId) {
    /* istanbul ignore next */
    cov_2fe1xfdeye().f[46]++;
    const scan =
    /* istanbul ignore next */
    (cov_2fe1xfdeye().s[326]++, this.activeScans.get(scanId));
    /* istanbul ignore next */
    cov_2fe1xfdeye().s[327]++;
    if (
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[70][0]++, scan) &&
    /* istanbul ignore next */
    (cov_2fe1xfdeye().b[70][1]++, scan.status === 'RUNNING')) {
      /* istanbul ignore next */
      cov_2fe1xfdeye().b[69][0]++;
      cov_2fe1xfdeye().s[328]++;
      scan.status = 'CANCELLED';
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[329]++;
      scan.endTime = new Date();
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[330]++;
      this.activeScans.delete(scanId);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[331]++;
      this.scanHistory.push(scan);
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[332]++;
      this.logger.info('Vulnerability scan cancelled', {
        scanId
      });
      /* istanbul ignore next */
      cov_2fe1xfdeye().s[333]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2fe1xfdeye().b[69][1]++;
    }
    cov_2fe1xfdeye().s[334]++;
    return false;
  }
}
/* istanbul ignore next */
cov_2fe1xfdeye().s[335]++;
exports.VulnerabilityScannerService = VulnerabilityScannerService;