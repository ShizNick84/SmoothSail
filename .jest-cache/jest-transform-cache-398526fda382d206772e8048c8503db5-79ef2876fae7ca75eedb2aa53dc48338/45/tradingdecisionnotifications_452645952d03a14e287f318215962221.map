{"version":3,"names":["cov_lgo4tstkw","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","logger_1","require","intel_nuc_telegram_service_1","intel_nuc_email_service_1","TradingDecisionType","exports","TradingDecisionNotifications","telegramService","emailService","isInitialized","notificationHistory","Map","constructor","IntelNucTelegramService","IntelNucEmailService","initialize","logger","info","Promise","all","error","notifyTradeExecution","data","Error","symbol","notificationId","Date","now","set","promises","channels","includes","push","sendTelegramTradeDecision","sendEmailTradeDecision","allSettled","notifyTradeRejected","rejectionData","TRADE_REJECTED","sendTelegramTradeRejection","sendEmailTradeRejection","notifySentimentShift","sentimentChange","currentSentiment","overall","previousSentiment","changeDirection","changeMagnitude","Math","abs","telegramMessage","formatSentimentShiftTelegram","id","priority","chatId","process","env","TELEGRAM_CHAT_ID","message","parseMode","timestamp","sendNotification","to","EMAIL_TO","subject","templateData","systemName","toISOString","theme","sentimentScore","description","impact","notifyStrategyPerformance","strategy","strategyName","winRateChange","currentPerformance","winRate","comparison","previousPeriod","returnChange","avgReturn","formatStrategyPerformanceTelegram","emoji","action","actionEmoji","confidenceEmoji","getConfidenceEmoji","aiReasoning","confidence","sentimentEmoji","getSentimentEmoji","marketSentiment","riskEmoji","getRiskEmoji","riskAssessment","riskLevel","quantity","price","toFixed","currentBalance","formatSentimentScore","toUpperCase","pnlProjection","expectedReturn","primaryFactors","map","factor","join","technicalAnalysis","trend","momentum","volatility","volume","bestCase","worstCase","probability","profit","positionSize","stopLossDistance","takeProfitDistance","riskRewardRatio","trim","reasoning","truncateText","marketConditions","alternativeScenarios","length","slice","forEach","scenario","systemLoad","systemEmoji","getSystemHealthEmoji","tunnelEmoji","getTunnelStatusEmoji","sshTunnelStatus","networkLatency","toLocaleString","reasonEmoji","getReasonEmoji","riskFactors","alternativeActions","alt","balance","marketAnalysis","direction","magnitude","directionEmoji","magnitudeEmoji","twitter","news","technicalIndicators","fearGreedIndex","recommendations","rec","performanceEmoji","recentChanges","performanceTrend","winRateEmoji","returnEmoji","sharpeRatio","maxDrawdown","totalTrades","profitFactor","optimizationSuggestions","sug","marketConditionSuitability","score","usage","status","reason","toLowerCase","text","maxLength","substring","getNotificationHistory","clearOldHistory","olderThanHours","cutoffTime","notification","entries","delete","getStatistics","notifications","Array","from","values","totalNotifications","notificationsByType","riskDistribution","totalConfidence","averageConfidence","stop","default"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\trading-decision-notifications.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * ENHANCED TRADING DECISION NOTIFICATIONS\r\n * =============================================================================\r\n * \r\n * Advanced notification service for detailed trading decision explanations,\r\n * market analysis summaries, sentiment analysis results, and AI reasoning\r\n * specifically optimized for Intel NUC deployment.\r\n * \r\n * Features:\r\n * - Detailed trade decision explanations with AI reasoning\r\n * - Market analysis summaries with sentiment indicators\r\n * - \"Why trade was not placed\" explanations with market conditions\r\n * - Profit/loss projections and risk assessments\r\n * - Strategy performance updates and recommendations\r\n * - Real-time market sentiment analysis integration\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 2.0.0 - Intel NUC Enhanced Trading Decisions\r\n * =============================================================================\r\n */\r\n\r\nimport { logger } from '@/core/logging/logger';\r\nimport { IntelNucTelegramService } from './intel-nuc-telegram-service';\r\nimport { IntelNucEmailService } from './intel-nuc-email-service';\r\n\r\n/**\r\n * Trading decision types for enhanced notifications\r\n */\r\nexport enum TradingDecisionType {\r\n  TRADE_EXECUTED = 'TRADE_EXECUTED',\r\n  TRADE_REJECTED = 'TRADE_REJECTED',\r\n  TRADE_DELAYED = 'TRADE_DELAYED',\r\n  POSITION_ADJUSTED = 'POSITION_ADJUSTED',\r\n  STOP_LOSS_UPDATED = 'STOP_LOSS_UPDATED',\r\n  TAKE_PROFIT_UPDATED = 'TAKE_PROFIT_UPDATED',\r\n  STRATEGY_SWITCHED = 'STRATEGY_SWITCHED',\r\n  MARKET_CONDITION_ALERT = 'MARKET_CONDITION_ALERT',\r\n  SENTIMENT_SHIFT = 'SENTIMENT_SHIFT',\r\n  RISK_THRESHOLD_EXCEEDED = 'RISK_THRESHOLD_EXCEEDED'\r\n}\r\n\r\n/**\r\n * Market sentiment analysis data\r\n */\r\nexport interface MarketSentimentData {\r\n  overall: number; // -1 to 1\r\n  twitter: number;\r\n  reddit: number;\r\n  news: number;\r\n  technicalIndicators: number;\r\n  institutionalFlow: number;\r\n  fearGreedIndex: number;\r\n  volatilityIndex: number;\r\n  trendStrength: number;\r\n  supportResistance: {\r\n    support: number;\r\n    resistance: number;\r\n    currentPrice: number;\r\n  };\r\n}\r\n\r\n/**\r\n * AI reasoning data structure\r\n */\r\nexport interface AIReasoningData {\r\n  confidence: number; // 0 to 1\r\n  primaryFactors: string[];\r\n  secondaryFactors: string[];\r\n  riskFactors: string[];\r\n  opportunityFactors: string[];\r\n  technicalAnalysis: {\r\n    trend: 'bullish' | 'bearish' | 'neutral';\r\n    momentum: 'strong' | 'moderate' | 'weak';\r\n    volatility: 'high' | 'medium' | 'low';\r\n    volume: 'high' | 'normal' | 'low';\r\n  };\r\n  fundamentalAnalysis: {\r\n    newsImpact: 'positive' | 'negative' | 'neutral';\r\n    marketEvents: string[];\r\n    economicIndicators: string[];\r\n  };\r\n  reasoning: string;\r\n  alternativeScenarios: Array<{\r\n    scenario: string;\r\n    probability: number;\r\n    impact: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Risk assessment data\r\n */\r\nexport interface RiskAssessmentData {\r\n  riskLevel: 'very_low' | 'low' | 'medium' | 'high' | 'very_high';\r\n  riskScore: number; // 0 to 100\r\n  positionSize: number;\r\n  stopLossDistance: number;\r\n  takeProfitDistance: number;\r\n  riskRewardRatio: number;\r\n  maxDrawdown: number;\r\n  portfolioImpact: number;\r\n  correlationRisk: number;\r\n  liquidityRisk: number;\r\n  volatilityRisk: number;\r\n  timeHorizon: string;\r\n  exitStrategy: string;\r\n  contingencyPlans: string[];\r\n}\r\n\r\n/**\r\n * Profit/Loss projection data\r\n */\r\nexport interface PnLProjectionData {\r\n  expectedReturn: number;\r\n  bestCase: number;\r\n  worstCase: number;\r\n  probability: {\r\n    profit: number;\r\n    loss: number;\r\n    breakeven: number;\r\n  };\r\n  timeframe: string;\r\n  keyLevels: {\r\n    entry: number;\r\n    stopLoss: number;\r\n    takeProfit: number[];\r\n  };\r\n  scenarios: Array<{\r\n    name: string;\r\n    probability: number;\r\n    expectedPnL: number;\r\n    description: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Strategy performance data\r\n */\r\nexport interface StrategyPerformanceData {\r\n  strategyName: string;\r\n  currentPerformance: {\r\n    winRate: number;\r\n    avgReturn: number;\r\n    sharpeRatio: number;\r\n    maxDrawdown: number;\r\n    totalTrades: number;\r\n    profitFactor: number;\r\n  };\r\n  recentChanges: {\r\n    winRateChange: number;\r\n    returnChange: number;\r\n    performanceTrend: 'improving' | 'declining' | 'stable';\r\n  };\r\n  recommendations: string[];\r\n  optimizationSuggestions: string[];\r\n  marketConditionSuitability: string;\r\n}\r\n\r\n/**\r\n * Enhanced trading decision notification data\r\n */\r\nexport interface TradingDecisionNotificationData {\r\n  type: TradingDecisionType;\r\n  symbol: string;\r\n  timestamp: Date;\r\n  \r\n  // Basic trade information\r\n  action?: 'BUY' | 'SELL' | 'HOLD';\r\n  quantity?: number;\r\n  price?: number;\r\n  currentBalance?: number;\r\n  \r\n  // Enhanced analysis data\r\n  aiReasoning: AIReasoningData;\r\n  marketSentiment: MarketSentimentData;\r\n  riskAssessment: RiskAssessmentData;\r\n  pnlProjection: PnLProjectionData;\r\n  strategyPerformance: StrategyPerformanceData;\r\n  \r\n  // Intel NUC system context\r\n  systemLoad?: number;\r\n  networkLatency?: number;\r\n  sshTunnelStatus?: 'healthy' | 'degraded' | 'failed';\r\n  \r\n  // Additional context\r\n  marketConditions: string;\r\n  alternativeActions: Array<{\r\n    action: string;\r\n    reasoning: string;\r\n    probability: number;\r\n  }>;\r\n  \r\n  // Notification preferences\r\n  priority: 'low' | 'normal' | 'high' | 'critical';\r\n  channels: ('telegram' | 'email')[];\r\n}\r\n\r\n/**\r\n * Enhanced trading decision notifications service\r\n */\r\nexport class TradingDecisionNotifications {\r\n  private telegramService: IntelNucTelegramService;\r\n  private emailService: IntelNucEmailService;\r\n  private isInitialized: boolean = false;\r\n  private notificationHistory: Map<string, TradingDecisionNotificationData> = new Map();\r\n\r\n  constructor() {\r\n    this.telegramService = new IntelNucTelegramService();\r\n    this.emailService = new IntelNucEmailService();\r\n  }\r\n\r\n  /**\r\n   * Initialize the trading decision notifications service\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('🧠 Initializing enhanced trading decision notifications...');\r\n\r\n      // Initialize underlying services\r\n      await Promise.all([\r\n        this.telegramService.initialize(),\r\n        this.emailService.initialize()\r\n      ]);\r\n\r\n      this.isInitialized = true;\r\n      logger.info('✅ Enhanced trading decision notifications initialized successfully');\r\n\r\n    } catch (error) {\r\n      logger.error('❌ Failed to initialize trading decision notifications:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send comprehensive trade execution notification with full analysis\r\n   */\r\n  public async notifyTradeExecution(data: TradingDecisionNotificationData): Promise<void> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('Trading decision notifications not initialized');\r\n    }\r\n\r\n    try {\r\n      logger.info(`🧠 Sending enhanced trade execution notification for ${data.symbol}`);\r\n\r\n      // Store notification in history\r\n      const notificationId = `${data.type}_${data.symbol}_${Date.now()}`;\r\n      this.notificationHistory.set(notificationId, data);\r\n\r\n      // Send through selected channels\r\n      const promises: Promise<any>[] = [];\r\n\r\n      if (data.channels.includes('telegram')) {\r\n        promises.push(this.sendTelegramTradeDecision(data));\r\n      }\r\n\r\n      if (data.channels.includes('email')) {\r\n        promises.push(this.sendEmailTradeDecision(data));\r\n      }\r\n\r\n      await Promise.allSettled(promises);\r\n      logger.info(`✅ Enhanced trade execution notification sent for ${data.symbol}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`❌ Failed to send enhanced trade execution notification:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send notification when trade is rejected with detailed explanation\r\n   */\r\n  public async notifyTradeRejected(data: TradingDecisionNotificationData): Promise<void> {\r\n    if (!this.isInitialized) return;\r\n\r\n    try {\r\n      logger.info(`🚫 Sending trade rejection notification for ${data.symbol}`);\r\n\r\n      const rejectionData = {\r\n        ...data,\r\n        type: TradingDecisionType.TRADE_REJECTED\r\n      };\r\n\r\n      // Store in history\r\n      const notificationId = `REJECTED_${data.symbol}_${Date.now()}`;\r\n      this.notificationHistory.set(notificationId, rejectionData);\r\n\r\n      // Send through selected channels\r\n      const promises: Promise<any>[] = [];\r\n\r\n      if (data.channels.includes('telegram')) {\r\n        promises.push(this.sendTelegramTradeRejection(rejectionData));\r\n      }\r\n\r\n      if (data.channels.includes('email')) {\r\n        promises.push(this.sendEmailTradeRejection(rejectionData));\r\n      }\r\n\r\n      await Promise.allSettled(promises);\r\n      logger.info(`✅ Trade rejection notification sent for ${data.symbol}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`❌ Failed to send trade rejection notification:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send market sentiment shift notification\r\n   */\r\n  public async notifySentimentShift(data: {\r\n    symbol: string;\r\n    previousSentiment: MarketSentimentData;\r\n    currentSentiment: MarketSentimentData;\r\n    impact: string;\r\n    recommendations: string[];\r\n    timestamp: Date;\r\n  }): Promise<void> {\r\n    if (!this.isInitialized) return;\r\n\r\n    try {\r\n      logger.info(`📊 Sending sentiment shift notification for ${data.symbol}`);\r\n\r\n      const sentimentChange = data.currentSentiment.overall - data.previousSentiment.overall;\r\n      const changeDirection = sentimentChange > 0 ? 'positive' : 'negative';\r\n      const changeMagnitude = Math.abs(sentimentChange);\r\n\r\n      // Send Telegram notification\r\n      const telegramMessage = this.formatSentimentShiftTelegram(data, changeDirection, changeMagnitude);\r\n      await this.telegramService['sendNotificationWithRateLimit']({\r\n        id: `sentiment_${data.symbol}_${Date.now()}`,\r\n        type: 'SENTIMENT_SHIFT',\r\n        priority: changeMagnitude > 0.3 ? 'high' : 'normal',\r\n        chatId: process.env.TELEGRAM_CHAT_ID!,\r\n        message: telegramMessage,\r\n        parseMode: 'HTML',\r\n        timestamp: new Date()\r\n      });\r\n\r\n      // Send Email notification\r\n      await this.emailService.sendNotification({\r\n        id: `sentiment_email_${data.symbol}_${Date.now()}`,\r\n        type: 'MARKET_SENTIMENT_UPDATE' as any,\r\n        priority: changeMagnitude > 0.3 ? 'high' : 'normal',\r\n        to: [process.env.EMAIL_TO!],\r\n        subject: `📊 Market Sentiment Shift: ${data.symbol} [Intel NUC]`,\r\n        templateData: {\r\n          systemName: 'AI Crypto Trading Agent - Intel NUC',\r\n          timestamp: data.timestamp.toISOString(),\r\n          theme: 'light',\r\n          symbol: data.symbol,\r\n          sentimentScore: data.currentSentiment.overall,\r\n          description: data.impact\r\n        },\r\n        timestamp: new Date()\r\n      });\r\n\r\n      logger.info(`✅ Sentiment shift notification sent for ${data.symbol}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`❌ Failed to send sentiment shift notification:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send strategy performance update notification\r\n   */\r\n  public async notifyStrategyPerformance(data: {\r\n    strategy: StrategyPerformanceData;\r\n    comparison: {\r\n      previousPeriod: StrategyPerformanceData;\r\n      benchmark: StrategyPerformanceData;\r\n    };\r\n    recommendations: string[];\r\n    timestamp: Date;\r\n  }): Promise<void> {\r\n    if (!this.isInitialized) return;\r\n\r\n    try {\r\n      logger.info(`📈 Sending strategy performance notification for ${data.strategy.strategyName}`);\r\n\r\n      // Calculate performance changes\r\n      const winRateChange = data.strategy.currentPerformance.winRate - data.comparison.previousPeriod.currentPerformance.winRate;\r\n      const returnChange = data.strategy.currentPerformance.avgReturn - data.comparison.previousPeriod.currentPerformance.avgReturn;\r\n\r\n      // Send Telegram notification\r\n      const telegramMessage = this.formatStrategyPerformanceTelegram(data, winRateChange, returnChange);\r\n      await this.telegramService['sendNotificationWithRateLimit']({\r\n        id: `strategy_${data.strategy.strategyName}_${Date.now()}`,\r\n        type: 'STRATEGY_OPTIMIZATION',\r\n        priority: 'normal',\r\n        chatId: process.env.TELEGRAM_CHAT_ID!,\r\n        message: telegramMessage,\r\n        parseMode: 'HTML',\r\n        timestamp: new Date()\r\n      });\r\n\r\n      logger.info(`✅ Strategy performance notification sent for ${data.strategy.strategyName}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`❌ Failed to send strategy performance notification:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send Telegram trade decision notification\r\n   */\r\n  private async sendTelegramTradeDecision(data: TradingDecisionNotificationData): Promise<void> {\r\n    const emoji = data.action === 'BUY' ? '🟢' : data.action === 'SELL' ? '🔴' : '⚪';\r\n    const actionEmoji = data.action === 'BUY' ? '📈' : data.action === 'SELL' ? '📉' : '⏸️';\r\n    const confidenceEmoji = this.getConfidenceEmoji(data.aiReasoning.confidence);\r\n    const sentimentEmoji = this.getSentimentEmoji(data.marketSentiment.overall);\r\n    const riskEmoji = this.getRiskEmoji(data.riskAssessment.riskLevel);\r\n\r\n    let message = `\r\n${emoji} <b>ENHANCED TRADE DECISION</b> ${actionEmoji} <i>[Intel NUC]</i>\r\n\r\n🎯 <b>Symbol:</b> ${data.symbol}\r\n⚡ <b>Action:</b> ${data.action || 'ANALYSIS'}\r\n📊 <b>Quantity:</b> ${data.quantity || 'N/A'}\r\n💵 <b>Price:</b> $${data.price?.toFixed(4) || 'N/A'}\r\n💎 <b>Balance:</b> $${data.currentBalance?.toFixed(2) || 'N/A'}\r\n\r\n🧠 <b>AI Analysis:</b>\r\n${confidenceEmoji} <b>Confidence:</b> ${(data.aiReasoning.confidence * 100).toFixed(1)}%\r\n${sentimentEmoji} <b>Market Sentiment:</b> ${this.formatSentimentScore(data.marketSentiment.overall)}\r\n${riskEmoji} <b>Risk Level:</b> ${data.riskAssessment.riskLevel.toUpperCase()}\r\n📈 <b>Expected Return:</b> ${data.pnlProjection.expectedReturn > 0 ? '+' : ''}${data.pnlProjection.expectedReturn.toFixed(2)}%\r\n\r\n🔍 <b>Primary Factors:</b>\r\n${data.aiReasoning.primaryFactors.map(factor => `• ${factor}`).join('\\n')}\r\n\r\n📊 <b>Technical Analysis:</b>\r\n• 📈 <b>Trend:</b> ${data.aiReasoning.technicalAnalysis.trend.toUpperCase()}\r\n• ⚡ <b>Momentum:</b> ${data.aiReasoning.technicalAnalysis.momentum.toUpperCase()}\r\n• 📊 <b>Volatility:</b> ${data.aiReasoning.technicalAnalysis.volatility.toUpperCase()}\r\n• 📈 <b>Volume:</b> ${data.aiReasoning.technicalAnalysis.volume.toUpperCase()}\r\n\r\n💰 <b>P&L Projection:</b>\r\n• 🎯 <b>Expected:</b> $${data.pnlProjection.expectedReturn.toFixed(2)}\r\n• 🚀 <b>Best Case:</b> $${data.pnlProjection.bestCase.toFixed(2)}\r\n• 📉 <b>Worst Case:</b> $${data.pnlProjection.worstCase.toFixed(2)}\r\n• 🎲 <b>Win Probability:</b> ${(data.pnlProjection.probability.profit * 100).toFixed(1)}%\r\n\r\n⚠️ <b>Risk Management:</b>\r\n• 🛡️ <b>Position Size:</b> ${data.riskAssessment.positionSize.toFixed(2)}%\r\n• 🚫 <b>Stop Loss:</b> ${data.riskAssessment.stopLossDistance.toFixed(2)}%\r\n• 🎯 <b>Take Profit:</b> ${data.riskAssessment.takeProfitDistance.toFixed(2)}%\r\n• ⚖️ <b>Risk/Reward:</b> 1:${data.riskAssessment.riskRewardRatio.toFixed(2)}\r\n    `.trim();\r\n\r\n    // Add AI reasoning\r\n    if (data.aiReasoning.reasoning) {\r\n      message += `\\n\\n🤖 <b>AI Reasoning:</b>\\n<i>${this.truncateText(data.aiReasoning.reasoning, 300)}</i>`;\r\n    }\r\n\r\n    // Add market conditions\r\n    if (data.marketConditions) {\r\n      message += `\\n\\n🌍 <b>Market Conditions:</b>\\n<i>${this.truncateText(data.marketConditions, 200)}</i>`;\r\n    }\r\n\r\n    // Add alternative scenarios\r\n    if (data.aiReasoning.alternativeScenarios.length > 0) {\r\n      message += `\\n\\n🔮 <b>Alternative Scenarios:</b>`;\r\n      data.aiReasoning.alternativeScenarios.slice(0, 2).forEach(scenario => {\r\n        message += `\\n• <b>${scenario.scenario}</b> (${(scenario.probability * 100).toFixed(1)}%): ${scenario.impact}`;\r\n      });\r\n    }\r\n\r\n    // Add system status\r\n    if (data.systemLoad !== undefined) {\r\n      const systemEmoji = this.getSystemHealthEmoji(data.systemLoad);\r\n      const tunnelEmoji = this.getTunnelStatusEmoji(data.sshTunnelStatus || 'healthy');\r\n      message += `\\n\\n🖥️ <b>System Status:</b>`;\r\n      message += `\\n${systemEmoji} <b>Load:</b> ${data.systemLoad.toFixed(1)}%`;\r\n      message += `\\n${tunnelEmoji} <b>SSH Tunnel:</b> ${(data.sshTunnelStatus || 'healthy').toUpperCase()}`;\r\n      message += `\\n🌐 <b>Latency:</b> ${data.networkLatency || 0}ms`;\r\n    }\r\n\r\n    message += `\\n\\n⏰ <i>${data.timestamp.toLocaleString()}</i>`;\r\n\r\n    await this.telegramService['sendNotificationWithRateLimit']({\r\n      id: `enhanced_trade_${data.symbol}_${Date.now()}`,\r\n      type: data.type,\r\n      priority: data.priority,\r\n      chatId: process.env.TELEGRAM_CHAT_ID!,\r\n      message,\r\n      parseMode: 'HTML',\r\n      timestamp: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send Telegram trade rejection notification\r\n   */\r\n  private async sendTelegramTradeRejection(data: TradingDecisionNotificationData): Promise<void> {\r\n    const reasonEmoji = this.getReasonEmoji(data.aiReasoning.riskFactors[0] || 'risk');\r\n    const sentimentEmoji = this.getSentimentEmoji(data.marketSentiment.overall);\r\n\r\n    const message = `\r\n⏸️ <b>TRADE REJECTED</b> 🚫 <i>[Intel NUC]</i>\r\n\r\n🎯 <b>Symbol:</b> ${data.symbol}\r\n${reasonEmoji} <b>Primary Reason:</b> ${data.aiReasoning.riskFactors[0] || 'Risk threshold exceeded'}\r\n${sentimentEmoji} <b>Market Sentiment:</b> ${this.formatSentimentScore(data.marketSentiment.overall)}\r\n💸 <b>Potential P&L:</b> $${data.pnlProjection.expectedReturn.toFixed(2)}\r\n\r\n🚫 <b>Risk Factors:</b>\r\n${data.aiReasoning.riskFactors.map(factor => `• ${factor}`).join('\\n')}\r\n\r\n📊 <b>Market Analysis:</b>\r\n<i>${data.marketConditions}</i>\r\n\r\n🔮 <b>Alternative Actions:</b>\r\n${data.alternativeActions.map(alt => `• <b>${alt.action}</b> (${(alt.probability * 100).toFixed(1)}%): ${alt.reasoning}`).join('\\n')}\r\n\r\n💡 <i>This rejection helps optimize future trading decisions and risk management.</i>\r\n\r\n⏰ <i>${data.timestamp.toLocaleString()}</i>\r\n    `.trim();\r\n\r\n    await this.telegramService['sendNotificationWithRateLimit']({\r\n      id: `rejected_trade_${data.symbol}_${Date.now()}`,\r\n      type: data.type,\r\n      priority: data.priority,\r\n      chatId: process.env.TELEGRAM_CHAT_ID!,\r\n      message,\r\n      parseMode: 'HTML',\r\n      timestamp: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send email trade decision notification\r\n   */\r\n  private async sendEmailTradeDecision(data: TradingDecisionNotificationData): Promise<void> {\r\n    await this.emailService.sendNotification({\r\n      id: `enhanced_trade_email_${data.symbol}_${Date.now()}`,\r\n      type: 'TRADE_EXECUTION' as any,\r\n      priority: data.priority,\r\n      to: [process.env.EMAIL_TO!],\r\n      subject: `🧠 Enhanced Trade Decision: ${data.action} ${data.symbol} [Intel NUC]`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent - Intel NUC',\r\n        timestamp: data.timestamp.toISOString(),\r\n        theme: 'light',\r\n        symbol: data.symbol,\r\n        action: data.action,\r\n        quantity: data.quantity,\r\n        price: data.price,\r\n        balance: data.currentBalance,\r\n        confidence: data.aiReasoning.confidence * 100,\r\n        sentimentScore: data.marketSentiment.overall,\r\n        reasoning: data.aiReasoning.reasoning,\r\n        marketAnalysis: data.marketConditions,\r\n        riskAssessment: `Risk Level: ${data.riskAssessment.riskLevel} | Position Size: ${data.riskAssessment.positionSize}% | R/R: 1:${data.riskAssessment.riskRewardRatio}`\r\n      },\r\n      timestamp: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send email trade rejection notification\r\n   */\r\n  private async sendEmailTradeRejection(data: TradingDecisionNotificationData): Promise<void> {\r\n    await this.emailService.sendNotification({\r\n      id: `rejected_trade_email_${data.symbol}_${Date.now()}`,\r\n      type: 'TRADE_OPPORTUNITY_MISSED' as any,\r\n      priority: data.priority,\r\n      to: [process.env.EMAIL_TO!],\r\n      subject: `🚫 Trade Rejected: ${data.symbol} - Risk Management [Intel NUC]`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent - Intel NUC',\r\n        timestamp: data.timestamp.toISOString(),\r\n        theme: 'light',\r\n        symbol: data.symbol,\r\n        reasoning: data.aiReasoning.riskFactors.join('; '),\r\n        marketAnalysis: data.marketConditions,\r\n        sentimentScore: data.marketSentiment.overall,\r\n        description: `Trade rejected due to risk management protocols. Primary factors: ${data.aiReasoning.riskFactors.slice(0, 3).join(', ')}`\r\n      },\r\n      timestamp: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Format sentiment shift Telegram message\r\n   */\r\n  private formatSentimentShiftTelegram(data: any, direction: string, magnitude: number): string {\r\n    const directionEmoji = direction === 'positive' ? '📈' : '📉';\r\n    const magnitudeEmoji = magnitude > 0.5 ? '🚨' : magnitude > 0.3 ? '⚠️' : '📊';\r\n\r\n    return `\r\n${magnitudeEmoji} <b>MARKET SENTIMENT SHIFT</b> ${directionEmoji} <i>[Intel NUC]</i>\r\n\r\n🎯 <b>Symbol:</b> ${data.symbol}\r\n📊 <b>Sentiment Change:</b> ${direction.toUpperCase()}\r\n📈 <b>Magnitude:</b> ${(magnitude * 100).toFixed(1)}%\r\n🔄 <b>Previous:</b> ${this.formatSentimentScore(data.previousSentiment.overall)}\r\n🆕 <b>Current:</b> ${this.formatSentimentScore(data.currentSentiment.overall)}\r\n\r\n📊 <b>Breakdown:</b>\r\n• 🐦 <b>Twitter:</b> ${this.formatSentimentScore(data.currentSentiment.twitter)}\r\n• 📰 <b>News:</b> ${this.formatSentimentScore(data.currentSentiment.news)}\r\n• 📈 <b>Technical:</b> ${this.formatSentimentScore(data.currentSentiment.technicalIndicators)}\r\n• 😨 <b>Fear/Greed:</b> ${data.currentSentiment.fearGreedIndex.toFixed(0)}\r\n\r\n💡 <b>Impact:</b>\r\n<i>${data.impact}</i>\r\n\r\n🎯 <b>Recommendations:</b>\r\n${data.recommendations.map((rec: string) => `• ${rec}`).join('\\n')}\r\n\r\n⏰ <i>${data.timestamp.toLocaleString()}</i>\r\n    `.trim();\r\n  }\r\n\r\n  /**\r\n   * Format strategy performance Telegram message\r\n   */\r\n  private formatStrategyPerformanceTelegram(data: any, winRateChange: number, returnChange: number): string {\r\n    const performanceEmoji = data.strategy.recentChanges.performanceTrend === 'improving' ? '📈' : \r\n                           data.strategy.recentChanges.performanceTrend === 'declining' ? '📉' : '⚖️';\r\n    const winRateEmoji = winRateChange > 0 ? '📈' : winRateChange < 0 ? '📉' : '⚖️';\r\n    const returnEmoji = returnChange > 0 ? '💰' : returnChange < 0 ? '📉' : '⚖️';\r\n\r\n    return `\r\n🧠 <b>STRATEGY PERFORMANCE UPDATE</b> ${performanceEmoji} <i>[Intel NUC]</i>\r\n\r\n🎯 <b>Strategy:</b> ${data.strategy.strategyName}\r\n📊 <b>Trend:</b> ${data.strategy.recentChanges.performanceTrend.toUpperCase()}\r\n\r\n📈 <b>Current Performance:</b>\r\n• ${winRateEmoji} <b>Win Rate:</b> ${data.strategy.currentPerformance.winRate.toFixed(1)}% (${winRateChange >= 0 ? '+' : ''}${winRateChange.toFixed(1)}%)\r\n• ${returnEmoji} <b>Avg Return:</b> ${data.strategy.currentPerformance.avgReturn.toFixed(2)}% (${returnChange >= 0 ? '+' : ''}${returnChange.toFixed(2)}%)\r\n• 📊 <b>Sharpe Ratio:</b> ${data.strategy.currentPerformance.sharpeRatio.toFixed(2)}\r\n• 📉 <b>Max Drawdown:</b> ${data.strategy.currentPerformance.maxDrawdown.toFixed(2)}%\r\n• 🎯 <b>Total Trades:</b> ${data.strategy.currentPerformance.totalTrades}\r\n• 💰 <b>Profit Factor:</b> ${data.strategy.currentPerformance.profitFactor.toFixed(2)}\r\n\r\n🎯 <b>Recommendations:</b>\r\n${data.strategy.recommendations.map((rec: string) => `• ${rec}`).join('\\n')}\r\n\r\n🔧 <b>Optimization Suggestions:</b>\r\n${data.strategy.optimizationSuggestions.map((sug: string) => `• ${sug}`).join('\\n')}\r\n\r\n🌍 <b>Market Suitability:</b>\r\n<i>${data.strategy.marketConditionSuitability}</i>\r\n\r\n⏰ <i>${data.timestamp.toLocaleString()}</i>\r\n    `.trim();\r\n  }\r\n\r\n  // Helper methods\r\n  private getConfidenceEmoji(confidence: number): string {\r\n    if (confidence >= 0.8) return '🎯';\r\n    if (confidence >= 0.6) return '✅';\r\n    if (confidence >= 0.4) return '⚖️';\r\n    return '❓';\r\n  }\r\n\r\n  private getSentimentEmoji(score: number): string {\r\n    if (score >= 0.6) return '😊';\r\n    if (score >= 0.2) return '😐';\r\n    if (score >= -0.2) return '😕';\r\n    return '😰';\r\n  }\r\n\r\n  private getRiskEmoji(riskLevel: string): string {\r\n    switch (riskLevel) {\r\n      case 'very_low': return '🟢';\r\n      case 'low': return '🟡';\r\n      case 'medium': return '🟠';\r\n      case 'high': return '🔴';\r\n      case 'very_high': return '🚨';\r\n      default: return '❓';\r\n    }\r\n  }\r\n\r\n  private getSystemHealthEmoji(usage: number): string {\r\n    if (usage < 70) return '🟢';\r\n    if (usage < 90) return '🟡';\r\n    return '🔴';\r\n  }\r\n\r\n  private getTunnelStatusEmoji(status: string): string {\r\n    switch (status) {\r\n      case 'healthy': return '🟢';\r\n      case 'degraded': return '🟡';\r\n      case 'failed': return '🔴';\r\n      default: return '❓';\r\n    }\r\n  }\r\n\r\n  private getReasonEmoji(reason: string): string {\r\n    if (reason.toLowerCase().includes('risk')) return '⚠️';\r\n    if (reason.toLowerCase().includes('sentiment')) return '📊';\r\n    if (reason.toLowerCase().includes('technical')) return '📈';\r\n    if (reason.toLowerCase().includes('system')) return '🖥️';\r\n    return '❓';\r\n  }\r\n\r\n  private formatSentimentScore(score: number): string {\r\n    if (score >= 0.6) return 'Very Positive';\r\n    if (score >= 0.2) return 'Positive';\r\n    if (score >= -0.2) return 'Neutral';\r\n    if (score >= -0.6) return 'Negative';\r\n    return 'Very Negative';\r\n  }\r\n\r\n  private truncateText(text: string, maxLength: number): string {\r\n    if (text.length <= maxLength) return text;\r\n    return text.substring(0, maxLength - 3) + '...';\r\n  }\r\n\r\n  /**\r\n   * Get notification history\r\n   */\r\n  public getNotificationHistory(): Map<string, TradingDecisionNotificationData> {\r\n    return new Map(this.notificationHistory);\r\n  }\r\n\r\n  /**\r\n   * Clear old notification history\r\n   */\r\n  public clearOldHistory(olderThanHours: number = 24): void {\r\n    const cutoffTime = new Date(Date.now() - (olderThanHours * 60 * 60 * 1000));\r\n    \r\n    for (const [id, notification] of this.notificationHistory.entries()) {\r\n      if (notification.timestamp < cutoffTime) {\r\n        this.notificationHistory.delete(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get service statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalNotifications: number;\r\n    notificationsByType: Record<string, number>;\r\n    averageConfidence: number;\r\n    riskDistribution: Record<string, number>;\r\n  } {\r\n    const notifications = Array.from(this.notificationHistory.values());\r\n    const totalNotifications = notifications.length;\r\n    \r\n    const notificationsByType: Record<string, number> = {};\r\n    const riskDistribution: Record<string, number> = {};\r\n    let totalConfidence = 0;\r\n\r\n    for (const notification of notifications) {\r\n      // Count by type\r\n      notificationsByType[notification.type] = (notificationsByType[notification.type] || 0) + 1;\r\n      \r\n      // Count by risk level\r\n      const riskLevel = notification.riskAssessment.riskLevel;\r\n      riskDistribution[riskLevel] = (riskDistribution[riskLevel] || 0) + 1;\r\n      \r\n      // Sum confidence\r\n      totalConfidence += notification.aiReasoning.confidence;\r\n    }\r\n\r\n    return {\r\n      totalNotifications,\r\n      notificationsByType,\r\n      averageConfidence: totalNotifications > 0 ? totalConfidence / totalNotifications : 0,\r\n      riskDistribution\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Stop the service\r\n   */\r\n  public async stop(): Promise<void> {\r\n    try {\r\n      await Promise.all([\r\n        this.telegramService.stop(),\r\n        // Email service doesn't need explicit stop\r\n      ]);\r\n      \r\n      this.isInitialized = false;\r\n      logger.info('🛑 Trading decision notifications service stopped');\r\n    } catch (error) {\r\n      logger.error('❌ Error stopping trading decision notifications service:', error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default TradingDecisionNotifications;"],"mappings":"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","ignoreList":[]}