{"file":"C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\news-monitor.ts","mappings":"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","names":[],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\news-monitor.ts"],"sourcesContent":["/**\r\n * News Sentiment Monitor\r\n * Implements news source integration for crypto news sentiment analysis\r\n */\r\n\r\nimport axios from 'axios';\r\nimport * as cheerio from 'cheerio';\r\nimport Sentiment from 'sentiment';\r\nimport { \r\n  SentimentScore, \r\n  NewsArticle, \r\n  NewsConfig, \r\n  SentimentAlert \r\n} from './types';\r\nimport { logger } from '../../core/logging/logger';\r\n\r\nexport class NewsSentimentMonitor {\r\n  private sentiment: Sentiment;\r\n  private logger = logger;\r\n  private isMonitoring: boolean = false;\r\n  private monitoringInterval?: NodeJS.Timeout;\r\n  private config: NewsConfig;\r\n  \r\n  // News sources configuration\r\n  private readonly newsSources = {\r\n    coindesk: {\r\n      name: 'CoinDesk',\r\n      baseUrl: 'https://www.coindesk.com',\r\n      rssUrl: 'https://www.coindesk.com/arc/outboundfeeds/rss/',\r\n      reliability: 90,\r\n      influence: 85\r\n    },\r\n    cointelegraph: {\r\n      name: 'CoinTelegraph',\r\n      baseUrl: 'https://cointelegraph.com',\r\n      rssUrl: 'https://cointelegraph.com/rss',\r\n      reliability: 85,\r\n      influence: 80\r\n    },\r\n    decrypt: {\r\n      name: 'Decrypt',\r\n      baseUrl: 'https://decrypt.co',\r\n      rssUrl: 'https://decrypt.co/feed',\r\n      reliability: 80,\r\n      influence: 75\r\n    },\r\n    theblock: {\r\n      name: 'The Block',\r\n      baseUrl: 'https://www.theblock.co',\r\n      rssUrl: 'https://www.theblock.co/rss.xml',\r\n      reliability: 88,\r\n      influence: 82\r\n    },\r\n    bitcoinmagazine: {\r\n      name: 'Bitcoin Magazine',\r\n      baseUrl: 'https://bitcoinmagazine.com',\r\n      rssUrl: 'https://bitcoinmagazine.com/feed',\r\n      reliability: 85,\r\n      influence: 78\r\n    }\r\n  };\r\n\r\n  constructor(config: NewsConfig) {\r\n    this.config = config;\r\n    this.sentiment = new Sentiment();\r\n    // Logger is initialized as class property\r\n  }\r\n\r\n  /**\r\n   * Start monitoring news sentiment\r\n   */\r\n  async startMonitoring(intervalMinutes: number = 15): Promise<void> {\r\n    if (this.isMonitoring) {\r\n      this.logger.warn('News monitoring is already running');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Starting news sentiment monitoring');\r\n    this.isMonitoring = true;\r\n\r\n    // Initial analysis\r\n    await this.performSentimentAnalysis();\r\n\r\n    // Set up periodic monitoring\r\n    this.monitoringInterval = setInterval(async () => {\r\n      try {\r\n        await this.performSentimentAnalysis();\r\n      } catch (error) {\r\n        this.logger.error('Error during news sentiment analysis:', error);\r\n      }\r\n    }, intervalMinutes * 60 * 1000);\r\n  }\r\n\r\n  /**\r\n   * Stop monitoring news sentiment\r\n   */\r\n  stopMonitoring(): void {\r\n    if (!this.isMonitoring) {\r\n      this.logger.warn('News monitoring is not running');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Stopping news sentiment monitoring');\r\n    this.isMonitoring = false;\r\n\r\n    if (this.monitoringInterval) {\r\n      clearInterval(this.monitoringInterval);\r\n      this.monitoringInterval = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform comprehensive news sentiment analysis\r\n   */\r\n  private async performSentimentAnalysis(): Promise<SentimentScore> {\r\n    try {\r\n      this.logger.info('Performing news sentiment analysis');\r\n\r\n      // Gather articles from all news sources\r\n      const allArticles = await this.gatherNewsArticles();\r\n      \r\n      if (allArticles.length === 0) {\r\n        this.logger.warn('No news articles found for sentiment analysis');\r\n        return this.createEmptySentimentScore();\r\n      }\r\n\r\n      // Analyze sentiment\r\n      const sentimentScore = this.analyzeArticlesSentiment(allArticles);\r\n      \r\n      // Detect trends and alerts\r\n      await this.detectSentimentTrends(sentimentScore);\r\n      \r\n      this.logger.info(`News sentiment analysis complete: ${sentimentScore.score.toFixed(2)}`);\r\n      return sentimentScore;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error in news sentiment analysis:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gather articles from all configured news sources\r\n   */\r\n  private async gatherNewsArticles(): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    const sourcePromises = Object.entries(this.newsSources).map(async ([key, source]) => {\r\n      try {\r\n        const sourceArticles = await this.fetchArticlesFromSource(key, source);\r\n        articles.push(...sourceArticles);\r\n      } catch (error) {\r\n        this.logger.warn(`Error fetching articles from ${source.name}:`, error);\r\n      }\r\n    });\r\n\r\n    await Promise.all(sourcePromises);\r\n    \r\n    // Remove duplicates and sort by timestamp\r\n    const uniqueArticles = this.removeDuplicateArticles(articles);\r\n    const recentArticles = uniqueArticles\r\n      .filter(article => this.isRecentArticle(article))\r\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\r\n      .slice(0, 100); // Limit to 100 most recent articles\r\n\r\n    this.logger.info(`Gathered ${recentArticles.length} news articles`);\r\n    return recentArticles;\r\n  }\r\n\r\n  /**\r\n   * Fetch articles from a specific news source\r\n   */\r\n  private async fetchArticlesFromSource(sourceKey: string, source: any): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    try {\r\n      // For this implementation, we'll use web scraping since RSS feeds might be limited\r\n      // In production, you'd want to use proper APIs where available\r\n      \r\n      if (sourceKey === 'coindesk') {\r\n        return await this.scrapeCoinDeskArticles();\r\n      } else if (sourceKey === 'cointelegraph') {\r\n        return await this.scrapeCoinTelegraphArticles();\r\n      } else if (sourceKey === 'decrypt') {\r\n        return await this.scrapeDecryptArticles();\r\n      } else if (sourceKey === 'theblock') {\r\n        return await this.scrapeTheBlockArticles();\r\n      } else if (sourceKey === 'bitcoinmagazine') {\r\n        return await this.scrapeBitcoinMagazineArticles();\r\n      }\r\n      \r\n      return articles;\r\n    } catch (error) {\r\n      this.logger.error(`Error fetching from ${source.name}:`, error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scrape CoinDesk articles\r\n   */\r\n  private async scrapeCoinDeskArticles(): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    try {\r\n      const response = await axios.get('https://www.coindesk.com/livewire/', {\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      const $ = cheerio.load(response.data);\r\n      \r\n      $('.LivewireItem').each((index, element) => {\r\n        if (index >= 20) return; // Limit to 20 articles\r\n        \r\n        const $element = $(element);\r\n        const title = $element.find('.LivewireItem-title').text().trim();\r\n        const content = $element.find('.LivewireItem-content').text().trim();\r\n        const timeStr = $element.find('.LivewireItem-time').text().trim();\r\n        \r\n        if (title && this.isCryptoRelated(title + ' ' + content)) {\r\n          articles.push({\r\n            id: `coindesk_${Date.now()}_${index}`,\r\n            title,\r\n            content,\r\n            source: 'CoinDesk',\r\n            author: 'CoinDesk',\r\n            timestamp: this.parseTimeString(timeStr) || new Date(),\r\n            url: 'https://www.coindesk.com/livewire/',\r\n            category: 'crypto'\r\n          });\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      this.logger.warn('Error scraping CoinDesk:', error);\r\n    }\r\n    \r\n    return articles;\r\n  }\r\n\r\n  /**\r\n   * Scrape CoinTelegraph articles\r\n   */\r\n  private async scrapeCoinTelegraphArticles(): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    try {\r\n      const response = await axios.get('https://cointelegraph.com/news', {\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      const $ = cheerio.load(response.data);\r\n      \r\n      $('.post-card-inline').each((index, element) => {\r\n        if (index >= 20) return; // Limit to 20 articles\r\n        \r\n        const $element = $(element);\r\n        const title = $element.find('.post-card-inline__title').text().trim();\r\n        const content = $element.find('.post-card-inline__text').text().trim();\r\n        const author = $element.find('.post-card-inline__author').text().trim();\r\n        \r\n        if (title && this.isCryptoRelated(title + ' ' + content)) {\r\n          articles.push({\r\n            id: `cointelegraph_${Date.now()}_${index}`,\r\n            title,\r\n            content,\r\n            source: 'CoinTelegraph',\r\n            author: author || 'CoinTelegraph',\r\n            timestamp: new Date(),\r\n            url: 'https://cointelegraph.com/news',\r\n            category: 'crypto'\r\n          });\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      this.logger.warn('Error scraping CoinTelegraph:', error);\r\n    }\r\n    \r\n    return articles;\r\n  }\r\n\r\n  /**\r\n   * Scrape Decrypt articles\r\n   */\r\n  private async scrapeDecryptArticles(): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    try {\r\n      const response = await axios.get('https://decrypt.co/news', {\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      const $ = cheerio.load(response.data);\r\n      \r\n      $('.PostCard').each((index, element) => {\r\n        if (index >= 15) return; // Limit to 15 articles\r\n        \r\n        const $element = $(element);\r\n        const title = $element.find('.PostCard__title').text().trim();\r\n        const content = $element.find('.PostCard__excerpt').text().trim();\r\n        const author = $element.find('.PostCard__author').text().trim();\r\n        \r\n        if (title && this.isCryptoRelated(title + ' ' + content)) {\r\n          articles.push({\r\n            id: `decrypt_${Date.now()}_${index}`,\r\n            title,\r\n            content,\r\n            source: 'Decrypt',\r\n            author: author || 'Decrypt',\r\n            timestamp: new Date(),\r\n            url: 'https://decrypt.co/news',\r\n            category: 'crypto'\r\n          });\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      this.logger.warn('Error scraping Decrypt:', error);\r\n    }\r\n    \r\n    return articles;\r\n  }\r\n\r\n  /**\r\n   * Scrape The Block articles\r\n   */\r\n  private async scrapeTheBlockArticles(): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    try {\r\n      const response = await axios.get('https://www.theblock.co/latest', {\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      const $ = cheerio.load(response.data);\r\n      \r\n      $('.storyItem').each((index, element) => {\r\n        if (index >= 15) return; // Limit to 15 articles\r\n        \r\n        const $element = $(element);\r\n        const title = $element.find('.storyItem__headline').text().trim();\r\n        const content = $element.find('.storyItem__summary').text().trim();\r\n        \r\n        if (title && this.isCryptoRelated(title + ' ' + content)) {\r\n          articles.push({\r\n            id: `theblock_${Date.now()}_${index}`,\r\n            title,\r\n            content,\r\n            source: 'The Block',\r\n            author: 'The Block',\r\n            timestamp: new Date(),\r\n            url: 'https://www.theblock.co/latest',\r\n            category: 'crypto'\r\n          });\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      this.logger.warn('Error scraping The Block:', error);\r\n    }\r\n    \r\n    return articles;\r\n  }\r\n\r\n  /**\r\n   * Scrape Bitcoin Magazine articles\r\n   */\r\n  private async scrapeBitcoinMagazineArticles(): Promise<NewsArticle[]> {\r\n    const articles: NewsArticle[] = [];\r\n    \r\n    try {\r\n      const response = await axios.get('https://bitcoinmagazine.com/articles', {\r\n        headers: {\r\n          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\r\n        },\r\n        timeout: 10000\r\n      });\r\n      \r\n      const $ = cheerio.load(response.data);\r\n      \r\n      $('.m-card').each((index, element) => {\r\n        if (index >= 15) return; // Limit to 15 articles\r\n        \r\n        const $element = $(element);\r\n        const title = $element.find('.m-card__title').text().trim();\r\n        const content = $element.find('.m-card__excerpt').text().trim();\r\n        const author = $element.find('.m-card__author').text().trim();\r\n        \r\n        if (title && this.isCryptoRelated(title + ' ' + content)) {\r\n          articles.push({\r\n            id: `bitcoinmagazine_${Date.now()}_${index}`,\r\n            title,\r\n            content,\r\n            source: 'Bitcoin Magazine',\r\n            author: author || 'Bitcoin Magazine',\r\n            timestamp: new Date(),\r\n            url: 'https://bitcoinmagazine.com/articles',\r\n            category: 'crypto'\r\n          });\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      this.logger.warn('Error scraping Bitcoin Magazine:', error);\r\n    }\r\n    \r\n    return articles;\r\n  }\r\n\r\n  /**\r\n   * Check if article content is crypto-related\r\n   */\r\n  private isCryptoRelated(text: string): boolean {\r\n    const cryptoKeywords = [\r\n      'bitcoin', 'btc', 'ethereum', 'eth', 'crypto', 'cryptocurrency',\r\n      'blockchain', 'defi', 'nft', 'altcoin', 'trading', 'exchange',\r\n      'wallet', 'mining', 'staking', 'yield', 'protocol', 'token',\r\n      'coin', 'digital asset', 'web3', 'metaverse', 'dao'\r\n    ];\r\n    \r\n    const lowerText = text.toLowerCase();\r\n    return cryptoKeywords.some(keyword => lowerText.includes(keyword));\r\n  }\r\n\r\n  /**\r\n   * Check if article is recent (within last 24 hours)\r\n   */\r\n  private isRecentArticle(article: NewsArticle): boolean {\r\n    const twentyFourHoursAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\r\n    return article.timestamp > twentyFourHoursAgo;\r\n  }\r\n\r\n  /**\r\n   * Parse time string to Date object\r\n   */\r\n  private parseTimeString(timeStr: string): Date | null {\r\n    try {\r\n      // Handle various time formats\r\n      if (timeStr.includes('ago')) {\r\n        const now = new Date();\r\n        if (timeStr.includes('minute')) {\r\n          const minutes = parseInt(timeStr.match(/\\d+/)?.[0] || '0');\r\n          return new Date(now.getTime() - minutes * 60 * 1000);\r\n        } else if (timeStr.includes('hour')) {\r\n          const hours = parseInt(timeStr.match(/\\d+/)?.[0] || '0');\r\n          return new Date(now.getTime() - hours * 60 * 60 * 1000);\r\n        }\r\n      }\r\n      return new Date(timeStr);\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove duplicate articles based on title similarity\r\n   */\r\n  private removeDuplicateArticles(articles: NewsArticle[]): NewsArticle[] {\r\n    const seen = new Set<string>();\r\n    return articles.filter(article => {\r\n      const normalizedTitle = article.title.toLowerCase().replace(/[^\\w\\s]/g, '');\r\n      if (seen.has(normalizedTitle)) {\r\n        return false;\r\n      }\r\n      seen.add(normalizedTitle);\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Analyze sentiment of collected articles\r\n   */\r\n  private analyzeArticlesSentiment(articles: NewsArticle[]): SentimentScore {\r\n    let totalScore = 0;\r\n    let totalWeight = 0;\r\n    const keyTopics: string[] = [];\r\n    const topicCounts: Record<string, number> = {};\r\n    const sourceScores: Record<string, number[]> = {};\r\n\r\n    for (const article of articles) {\r\n      // Analyze article title and content\r\n      const articleText = `${article.title} ${article.content}`;\r\n      const sentimentResult = this.sentiment.analyze(articleText);\r\n      let articleScore = sentimentResult.score;\r\n      \r\n      // Normalize to -100 to 100 scale\r\n      articleScore = Math.max(-100, Math.min(100, articleScore * 8));\r\n      \r\n      // Calculate weight based on source reliability and content length\r\n      const sourceInfo = Object.values(this.newsSources).find(s => s.name === article.source);\r\n      const reliabilityWeight = (sourceInfo?.reliability || 70) / 100;\r\n      const contentWeight = Math.min(2, Math.log10(articleText.length + 1));\r\n      const weight = reliabilityWeight * contentWeight;\r\n      \r\n      totalScore += articleScore * weight;\r\n      totalWeight += weight;\r\n      \r\n      // Track source performance\r\n      if (!sourceScores[article.source]) {\r\n        sourceScores[article.source] = [];\r\n      }\r\n      sourceScores[article.source].push(articleScore);\r\n      \r\n      // Extract topics from title and content\r\n      const topics = this.extractTopicsFromText(articleText);\r\n      topics.forEach(topic => {\r\n        topicCounts[topic] = (topicCounts[topic] || 0) + 1;\r\n      });\r\n    }\r\n\r\n    // Get top topics\r\n    const sortedTopics = Object.entries(topicCounts)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 10)\r\n      .map(([topic]) => topic);\r\n\r\n    const finalScore = totalWeight > 0 ? totalScore / totalWeight : 0;\r\n    const confidence = Math.min(100, Math.log10(articles.length + 1) * 35);\r\n\r\n    return {\r\n      source: 'news',\r\n      score: Math.round(finalScore * 100) / 100,\r\n      confidence: Math.round(confidence),\r\n      volume: articles.length,\r\n      timestamp: new Date(),\r\n      keyTopics: sortedTopics,\r\n      rawData: {\r\n        totalArticles: articles.length,\r\n        totalWeight,\r\n        sourceScores,\r\n        topicCounts\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Extract topics from text using keyword matching\r\n   */\r\n  private extractTopicsFromText(text: string): string[] {\r\n    const cryptoKeywords = [\r\n      'bitcoin', 'btc', 'ethereum', 'eth', 'crypto', 'cryptocurrency',\r\n      'blockchain', 'defi', 'nft', 'altcoin', 'trading', 'exchange',\r\n      'regulation', 'adoption', 'institutional', 'etf', 'mining',\r\n      'staking', 'yield', 'protocol', 'token', 'bull', 'bear'\r\n    ];\r\n    \r\n    const lowerText = text.toLowerCase();\r\n    return cryptoKeywords.filter(keyword => lowerText.includes(keyword));\r\n  }\r\n\r\n  /**\r\n   * Detect sentiment trends and generate alerts\r\n   */\r\n  private async detectSentimentTrends(currentScore: SentimentScore): Promise<void> {\r\n    const alerts: SentimentAlert[] = [];\r\n\r\n    // Extreme sentiment alerts\r\n    if (currentScore.score > 50) {\r\n      alerts.push({\r\n        id: `news_extreme_positive_${Date.now()}`,\r\n        type: 'EXTREME_POSITIVE',\r\n        severity: 'HIGH',\r\n        message: `Extremely positive news sentiment detected: ${currentScore.score}`,\r\n        timestamp: new Date(),\r\n        source: 'news',\r\n        data: currentScore\r\n      });\r\n    } else if (currentScore.score < -50) {\r\n      alerts.push({\r\n        id: `news_extreme_negative_${Date.now()}`,\r\n        type: 'EXTREME_NEGATIVE',\r\n        severity: 'HIGH',\r\n        message: `Extremely negative news sentiment detected: ${currentScore.score}`,\r\n        timestamp: new Date(),\r\n        source: 'news',\r\n        data: currentScore\r\n      });\r\n    }\r\n\r\n    // Volume spike alerts\r\n    if (currentScore.volume > 50) {\r\n      alerts.push({\r\n        id: `news_volume_spike_${Date.now()}`,\r\n        type: 'VOLUME_SPIKE',\r\n        severity: 'MEDIUM',\r\n        message: `High news volume detected: ${currentScore.volume} articles`,\r\n        timestamp: new Date(),\r\n        source: 'news',\r\n        data: currentScore\r\n      });\r\n    }\r\n\r\n    // Log alerts\r\n    for (const alert of alerts) {\r\n      this.logger.warn(`News Sentiment Alert: ${alert.message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create empty sentiment score for error cases\r\n   */\r\n  private createEmptySentimentScore(): SentimentScore {\r\n    return {\r\n      source: 'news',\r\n      score: 0,\r\n      confidence: 0,\r\n      volume: 0,\r\n      timestamp: new Date(),\r\n      keyTopics: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get current sentiment score\r\n   */\r\n  async getCurrentSentiment(): Promise<SentimentScore> {\r\n    return await this.performSentimentAnalysis();\r\n  }\r\n\r\n  /**\r\n   * Get monitored news sources\r\n   */\r\n  getMonitoredSources(): string[] {\r\n    return Object.values(this.newsSources).map(source => source.name);\r\n  }\r\n\r\n  /**\r\n   * Get sentiment breakdown by news source\r\n   */\r\n  async getSourceSentimentBreakdown(): Promise<Record<string, SentimentScore>> {\r\n    const breakdown: Record<string, SentimentScore> = {};\r\n    \r\n    for (const [key, source] of Object.entries(this.newsSources)) {\r\n      try {\r\n        const articles = await this.fetchArticlesFromSource(key, source);\r\n        if (articles.length > 0) {\r\n          breakdown[source.name] = this.analyzeArticlesSentiment(articles);\r\n        }\r\n      } catch (error) {\r\n        this.logger.warn(`Error getting sentiment for ${source.name}:`, error);\r\n      }\r\n    }\r\n    \r\n    return breakdown;\r\n  }\r\n}\r\n"],"version":3}