22dce18015881bfaa9df603c1337b5bb
"use strict";

/**
 * Risk Management Types
 *
 * Defines interfaces and types for the advanced risk management system
 * including position sizing, risk assessment, and capital protection.
 */
/* istanbul ignore next */
function cov_uff09u0ro() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\types.ts";
  var hash = "4767664d18a354b568ac72490ba1ce727692d730";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\types.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\types.ts",
      mappings: ";AAAA;;;;;GAKG",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\types.ts"],
      sourcesContent: ["/**\r\n * Risk Management Types\r\n * \r\n * Defines interfaces and types for the advanced risk management system\r\n * including position sizing, risk assessment, and capital protection.\r\n */\r\n\r\nexport interface RiskParameters {\r\n  /** Maximum risk per trade as percentage of account balance (2-3%) */\r\n  maxRiskPerTrade: number;\r\n  /** Minimum risk-reward ratio (1.3:1 minimum) */\r\n  minRiskRewardRatio: number;\r\n  /** Maximum drawdown threshold before emergency measures */\r\n  maxDrawdownThreshold: number;\r\n  /** Maximum correlation exposure limit */\r\n  maxCorrelationExposure: number;\r\n  /** Volatility adjustment factor */\r\n  volatilityAdjustmentFactor: number;\r\n}\r\n\r\nexport interface PositionSizeRequest {\r\n  /** Trading symbol (BTC, ETH) */\r\n  symbol: string;\r\n  /** Current account balance */\r\n  accountBalance: number;\r\n  /** Entry price for the position */\r\n  entryPrice: number;\r\n  /** Stop loss price */\r\n  stopLossPrice: number;\r\n  /** Take profit price */\r\n  takeProfitPrice: number;\r\n  /** Signal confidence score (0-100) */\r\n  confidence: number;\r\n  /** Current market volatility */\r\n  volatility: number;\r\n  /** Existing positions for correlation analysis */\r\n  existingPositions: Position[];\r\n}\r\n\r\nexport interface PositionSizeResult {\r\n  /** Recommended position size in base currency */\r\n  positionSize: number;\r\n  /** Risk amount in account currency */\r\n  riskAmount: number;\r\n  /** Risk percentage of account balance */\r\n  riskPercentage: number;\r\n  /** Risk-reward ratio */\r\n  riskRewardRatio: number;\r\n  /** Confidence-adjusted size */\r\n  confidenceAdjustedSize: number;\r\n  /** Correlation adjustment factor */\r\n  correlationAdjustment: number;\r\n  /** Approval status */\r\n  approved: boolean;\r\n  /** Rejection reasons if not approved */\r\n  rejectionReasons: string[];\r\n}\r\n\r\nexport interface Position {\r\n  /** Position ID */\r\n  id: string;\r\n  /** Trading symbol */\r\n  symbol: string;\r\n  /** Position size */\r\n  size: number;\r\n  /** Entry price */\r\n  entryPrice: number;\r\n  /** Current price */\r\n  currentPrice: number;\r\n  /** Position type */\r\n  type: 'LONG' | 'SHORT';\r\n  /** Unrealized P&L */\r\n  unrealizedPnL: number;\r\n  /** Stop loss price */\r\n  stopLoss: number;\r\n  /** Take profit price */\r\n  takeProfit: number;\r\n  /** Position timestamp */\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface TrailingStopConfig {\r\n  /** Initial stop loss percentage */\r\n  initialStopLoss: number;\r\n  /** Trailing distance percentage */\r\n  trailingDistance: number;\r\n  /** Minimum profit before trailing starts */\r\n  minProfitToTrail: number;\r\n  /** Breakeven activation threshold */\r\n  breakevenThreshold: number;\r\n  /** Volatility-based adjustment */\r\n  volatilityAdjustment: boolean;\r\n}\r\n\r\nexport interface TrailingStopResult {\r\n  /** New stop loss price */\r\n  newStopLoss: number;\r\n  /** Whether stop was updated */\r\n  updated: boolean;\r\n  /** Current trailing distance */\r\n  trailingDistance: number;\r\n  /** Breakeven status */\r\n  breakevenActive: boolean;\r\n  /** Reason for update or no update */\r\n  reason: string;\r\n}\r\n\r\nexport interface RiskAssessment {\r\n  /** Overall risk score (0-100) */\r\n  riskScore: number;\r\n  /** Risk-reward ratio */\r\n  riskRewardRatio: number;\r\n  /** Maximum potential loss */\r\n  maxLoss: number;\r\n  /** Probability of success */\r\n  probabilityOfSuccess: number;\r\n  /** Recommendation */\r\n  recommendation: 'APPROVE' | 'REJECT' | 'MODIFY';\r\n  /** Suggested modifications */\r\n  modifications: string[];\r\n  /** Risk factors identified */\r\n  riskFactors: string[];\r\n}\r\n\r\nexport interface DrawdownStatus {\r\n  /** Current drawdown percentage */\r\n  currentDrawdown: number;\r\n  /** Maximum historical drawdown */\r\n  maxDrawdown: number;\r\n  /** Drawdown duration in days */\r\n  drawdownDuration: number;\r\n  /** Recovery progress percentage */\r\n  recoveryProgress: number;\r\n  /** Emergency measures active */\r\n  emergencyMeasuresActive: boolean;\r\n  /** Risk reduction level (0-100) */\r\n  riskReductionLevel: number;\r\n}\r\n\r\nexport interface CorrelationMatrix {\r\n  /** Symbol pairs and their correlation coefficients */\r\n  correlations: Map<string, number>;\r\n  /** Overall portfolio correlation risk */\r\n  portfolioCorrelationRisk: number;\r\n  /** Diversification score */\r\n  diversificationScore: number;\r\n  /** Recommended position adjustments */\r\n  recommendations: PositionAdjustment[];\r\n}\r\n\r\nexport interface PositionAdjustment {\r\n  /** Symbol to adjust */\r\n  symbol: string;\r\n  /** Current position size */\r\n  currentSize: number;\r\n  /** Recommended new size */\r\n  recommendedSize: number;\r\n  /** Adjustment reason */\r\n  reason: string;\r\n  /** Priority level */\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n}\r\n\r\nexport interface CapitalProtectionAlert {\r\n  /** Alert ID */\r\n  id: string;\r\n  /** Alert type */\r\n  type: 'DRAWDOWN_WARNING' | 'EMERGENCY_STOP' | 'CORRELATION_RISK' | 'VOLATILITY_SPIKE';\r\n  /** Alert severity */\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Alert message */\r\n  message: string;\r\n  /** Recommended actions */\r\n  recommendedActions: string[];\r\n  /** Timestamp */\r\n  timestamp: Date;\r\n  /** Auto-executed actions */\r\n  autoExecutedActions: string[];\r\n}\r\n\r\nexport interface RiskMetrics {\r\n  /** Sharpe ratio */\r\n  sharpeRatio: number;\r\n  /** Sortino ratio */\r\n  sortinoRatio: number;\r\n  /** Maximum drawdown */\r\n  maxDrawdown: number;\r\n  /** Value at Risk (VaR) */\r\n  valueAtRisk: number;\r\n  /** Expected shortfall */\r\n  expectedShortfall: number;\r\n  /** Win rate percentage */\r\n  winRate: number;\r\n  /** Average risk-reward ratio */\r\n  avgRiskRewardRatio: number;\r\n  /** Volatility */\r\n  volatility: number;\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4767664d18a354b568ac72490ba1ce727692d730"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uff09u0ro = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uff09u0ro();
cov_uff09u0ro().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,