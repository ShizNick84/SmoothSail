126daf0acb7aac082f7edacb6f8731d7
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - INTER-COMPONENT COMMUNICATION BUS
 * =============================================================================
 *
 * This module provides a comprehensive communication bus for inter-component
 * messaging, event handling, and data sharing across the trading system.
 * It ensures loose coupling while maintaining reliable message delivery.
 *
 * CRITICAL SYSTEM NOTICE:
 * This communication bus handles critical trading events and system messages.
 * Message delivery reliability and ordering are essential for system safety
 * and financial operations.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2g7kl6bnf7() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\communication-bus.ts";
  var hash = "de61a1090a120cdf517aeb971eca1fd35dbbc593";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\communication-bus.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 127
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "5": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 58
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 68
        }
      },
      "10": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "11": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 42,
          column: 21
        }
      },
      "12": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "13": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "14": {
        start: {
          line: 45,
          column: 22
        },
        end: {
          line: 45,
          column: 24
        }
      },
      "15": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 24
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 16
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "18": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 38
        }
      },
      "19": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "20": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 80
        }
      },
      "21": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "22": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 42
        }
      },
      "23": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "24": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "25": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 61
        }
      },
      "26": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "27": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 58
        }
      },
      "28": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 102,
          column: 14
        }
      },
      "29": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 81
        }
      },
      "30": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 24
        }
      },
      "31": {
        start: {
          line: 119,
          column: 31
        },
        end: {
          line: 119,
          column: 60
        }
      },
      "32": {
        start: {
          line: 120,
          column: 29
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "33": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 61
        }
      },
      "34": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 114
        }
      },
      "35": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 30
        }
      },
      "36": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 150,
          column: 67
        }
      },
      "37": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "38": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 54
        }
      },
      "39": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 101
        }
      },
      "40": {
        start: {
          line: 165,
          column: 30
        },
        end: {
          line: 165,
          column: 58
        }
      },
      "41": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 166,
          column: 48
        }
      },
      "42": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 183,
          column: 10
        }
      },
      "43": {
        start: {
          line: 169,
          column: 36
        },
        end: {
          line: 172,
          column: 23
        }
      },
      "44": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 49
        }
      },
      "45": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 62
        }
      },
      "46": {
        start: {
          line: 173,
          column: 35
        },
        end: {
          line: 182,
          column: 14
        }
      },
      "47": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 50
        }
      },
      "48": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 53
        }
      },
      "49": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 45
        }
      },
      "50": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "51": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 31
        }
      },
      "52": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "53": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 90
        }
      },
      "54": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 205,
          column: 11
        }
      },
      "55": {
        start: {
          line: 214,
          column: 29
        },
        end: {
          line: 214,
          column: 67
        }
      },
      "56": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 35
        }
      },
      "57": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 225,
          column: 60
        }
      },
      "58": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 225,
          column: 58
        }
      },
      "59": {
        start: {
          line: 233,
          column: 37
        },
        end: {
          line: 233,
          column: 38
        }
      },
      "60": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "61": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 75
        }
      },
      "62": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 244,
          column: 10
        }
      },
      "63": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 250,
          column: 30
        }
      },
      "64": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "65": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 256,
          column: 13
        }
      },
      "66": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 85
        }
      },
      "67": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 29
        }
      },
      "68": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 24
        }
      },
      "69": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "70": {
        start: {
          line: 261,
          column: 34
        },
        end: {
          line: 261,
          column: 62
        }
      },
      "71": {
        start: {
          line: 262,
          column: 31
        },
        end: {
          line: 262,
          column: 70
        }
      },
      "72": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "73": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 266,
          column: 17
        }
      },
      "74": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 265,
          column: 58
        }
      },
      "75": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 70
        }
      },
      "76": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 34
        }
      },
      "77": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "78": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 51
        }
      },
      "79": {
        start: {
          line: 281,
          column: 37
        },
        end: {
          line: 282,
          column: 64
        }
      },
      "80": {
        start: {
          line: 282,
          column: 27
        },
        end: {
          line: 282,
          column: 63
        }
      },
      "81": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "82": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "83": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 285,
          column: 51
        }
      },
      "84": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 107
        }
      },
      "85": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 35
        }
      },
      "86": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 31
        }
      },
      "87": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 37
        }
      },
      "88": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 36
        }
      },
      "89": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 34
        }
      },
      "90": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 71
        }
      },
      "91": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 33
        }
      },
      "92": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 312,
          column: 16
        }
      },
      "93": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "94": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 48
        }
      },
      "95": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "96": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 44
        }
      },
      "97": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "98": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 19
        }
      },
      "99": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "100": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "101": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 47
        }
      },
      "102": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 65
        }
      },
      "103": {
        start: {
          line: 328,
          column: 24
        },
        end: {
          line: 328,
          column: 49
        }
      },
      "104": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "105": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 47
        }
      },
      "106": {
        start: {
          line: 340,
          column: 26
        },
        end: {
          line: 340,
          column: 36
        }
      },
      "107": {
        start: {
          line: 341,
          column: 23
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "108": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 399,
          column: 9
        }
      },
      "109": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 353,
          column: 13
        }
      },
      "110": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 74
        }
      },
      "111": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 30
        }
      },
      "112": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 49
        }
      },
      "113": {
        start: {
          line: 357,
          column: 42
        },
        end: {
          line: 357,
          column: 81
        }
      },
      "114": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 361,
          column: 13
        }
      },
      "115": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 101
        }
      },
      "116": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 30
        }
      },
      "117": {
        start: {
          line: 363,
          column: 36
        },
        end: {
          line: 363,
          column: 125
        }
      },
      "118": {
        start: {
          line: 363,
          column: 78
        },
        end: {
          line: 363,
          column: 124
        }
      },
      "119": {
        start: {
          line: 364,
          column: 35
        },
        end: {
          line: 364,
          column: 76
        }
      },
      "120": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "121": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 373,
          column: 17
        }
      },
      "122": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 42
        }
      },
      "123": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 43
        }
      },
      "124": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 89
        }
      },
      "125": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 59
        }
      },
      "126": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 382,
          column: 13
        }
      },
      "127": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 128
        }
      },
      "128": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 140
        }
      },
      "129": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 26
        }
      },
      "130": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 35
        }
      },
      "131": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 89
        }
      },
      "132": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 59
        }
      },
      "133": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 86
        }
      },
      "134": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "135": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 51
        }
      },
      "136": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 26
        }
      },
      "137": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 52
        }
      },
      "138": {
        start: {
          line: 409,
          column: 26
        },
        end: {
          line: 409,
          column: 36
        }
      },
      "139": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "140": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 50
        }
      },
      "141": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 58
        }
      },
      "142": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 417,
          column: 13
        }
      },
      "143": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 416,
          column: 23
        }
      },
      "144": {
        start: {
          line: 419,
          column: 35
        },
        end: {
          line: 419,
          column: 71
        }
      },
      "145": {
        start: {
          line: 420,
          column: 35
        },
        end: {
          line: 424,
          column: 14
        }
      },
      "146": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 423,
          column: 49
        }
      },
      "147": {
        start: {
          line: 422,
          column: 20
        },
        end: {
          line: 422,
          column: 85
        }
      },
      "148": {
        start: {
          line: 425,
          column: 27
        },
        end: {
          line: 425,
          column: 79
        }
      },
      "149": {
        start: {
          line: 427,
          column: 35
        },
        end: {
          line: 427,
          column: 57
        }
      },
      "150": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 51
        }
      },
      "151": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 431,
          column: 57
        }
      },
      "152": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 432,
          column: 26
        }
      },
      "153": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 48
        }
      },
      "154": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 100
        }
      },
      "155": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 88
        }
      },
      "156": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 24
        }
      },
      "157": {
        start: {
          line: 449,
          column: 25
        },
        end: {
          line: 449,
          column: 27
        }
      },
      "158": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "159": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 460,
          column: 13
        }
      },
      "160": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 458,
          column: 17
        }
      },
      "161": {
        start: {
          line: 454,
          column: 36
        },
        end: {
          line: 454,
          column: 101
        }
      },
      "162": {
        start: {
          line: 455,
          column: 20
        },
        end: {
          line: 457,
          column: 21
        }
      },
      "163": {
        start: {
          line: 456,
          column: 24
        },
        end: {
          line: 456,
          column: 33
        }
      },
      "164": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 44
        }
      },
      "165": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 73
        }
      },
      "166": {
        start: {
          line: 463,
          column: 32
        },
        end: {
          line: 463,
          column: 71
        }
      },
      "167": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 464,
          column: 24
        }
      },
      "168": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "169": {
        start: {
          line: 476,
          column: 33
        },
        end: {
          line: 478,
          column: 36
        }
      },
      "170": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 479,
          column: 70
        }
      },
      "171": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 46
        }
      },
      "172": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 493,
          column: 9
        }
      },
      "173": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 54
        }
      },
      "174": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 496,
          column: 9
        }
      },
      "175": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 56
        }
      },
      "176": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "177": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 58
        }
      },
      "178": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "179": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 77
        }
      },
      "180": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "181": {
        start: {
          line: 513,
          column: 37
        },
        end: {
          line: 513,
          column: 111
        }
      },
      "182": {
        start: {
          line: 513,
          column: 72
        },
        end: {
          line: 513,
          column: 110
        }
      },
      "183": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 520,
          column: 13
        }
      },
      "184": {
        start: {
          line: 515,
          column: 32
        },
        end: {
          line: 515,
          column: 80
        }
      },
      "185": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 86
        }
      },
      "186": {
        start: {
          line: 519,
          column: 16
        },
        end: {
          line: 519,
          column: 96
        }
      },
      "187": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 522,
          column: 40
        }
      },
      "188": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 78
        }
      },
      "189": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 538,
          column: 78
        }
      },
      "190": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 546,
          column: 79
        }
      },
      "191": {
        start: {
          line: 549,
          column: 0
        },
        end: {
          line: 549,
          column: 44
        }
      },
      "192": {
        start: {
          line: 553,
          column: 0
        },
        end: {
          line: 562,
          column: 2
        }
      },
      "193": {
        start: {
          line: 566,
          column: 0
        },
        end: {
          line: 566,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 1
          },
          end: {
            line: 29,
            column: 2
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 47
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 61
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 59
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 118
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 149
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 164
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 44
          },
          end: {
            line: 168,
            column: 45
          }
        },
        loc: {
          start: {
            line: 168,
            column: 65
          },
          end: {
            line: 183,
            column: 9
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 169,
            column: 47
          },
          end: {
            line: 169,
            column: 48
          }
        },
        loc: {
          start: {
            line: 169,
            column: 53
          },
          end: {
            line: 172,
            column: 13
          }
        },
        line: 169
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 177,
            column: 24
          },
          end: {
            line: 177,
            column: 25
          }
        },
        loc: {
          start: {
            line: 177,
            column: 43
          },
          end: {
            line: 181,
            column: 17
          }
        },
        line: 177
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 52
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 198
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 41
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 213
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 43
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 223
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 225,
            column: 21
          }
        },
        loc: {
          start: {
            line: 225,
            column: 27
          },
          end: {
            line: 225,
            column: 58
          }
        },
        line: 225
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 232
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 27
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 249
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 252,
            column: 53
          },
          end: {
            line: 252,
            column: 54
          }
        },
        loc: {
          start: {
            line: 252,
            column: 64
          },
          end: {
            line: 258,
            column: 9
          }
        },
        line: 252
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 21
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 273
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 21
          }
        },
        loc: {
          start: {
            line: 282,
            column: 27
          },
          end: {
            line: 282,
            column: 63
          }
        },
        line: 282
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 29
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 302
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 304,
            column: 46
          },
          end: {
            line: 304,
            column: 47
          }
        },
        loc: {
          start: {
            line: 304,
            column: 58
          },
          end: {
            line: 312,
            column: 9
          }
        },
        line: 304
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 31
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 317
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 322,
            column: 32
          }
        },
        loc: {
          start: {
            line: 322,
            column: 41
          },
          end: {
            line: 327,
            column: 9
          }
        },
        line: 322
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        loc: {
          start: {
            line: 339,
            column: 34
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 339
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 363,
            column: 62
          },
          end: {
            line: 363,
            column: 63
          }
        },
        loc: {
          start: {
            line: 363,
            column: 78
          },
          end: {
            line: 363,
            column: 124
          }
        },
        line: 363
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        loc: {
          start: {
            line: 408,
            column: 52
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 408
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 420,
            column: 47
          },
          end: {
            line: 420,
            column: 48
          }
        },
        loc: {
          start: {
            line: 420,
            column: 62
          },
          end: {
            line: 424,
            column: 13
          }
        },
        line: 420
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 421,
            column: 27
          },
          end: {
            line: 421,
            column: 28
          }
        },
        loc: {
          start: {
            line: 421,
            column: 33
          },
          end: {
            line: 423,
            column: 17
          }
        },
        line: 421
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 39
          },
          end: {
            line: 465,
            column: 5
          }
        },
        line: 448
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 463,
            column: 22
          },
          end: {
            line: 463,
            column: 23
          }
        },
        loc: {
          start: {
            line: 463,
            column: 32
          },
          end: {
            line: 463,
            column: 71
          }
        },
        line: 463
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 473,
            column: 4
          },
          end: {
            line: 473,
            column: 5
          }
        },
        loc: {
          start: {
            line: 473,
            column: 37
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 473
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 29
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 490
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 509,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        },
        loc: {
          start: {
            line: 509,
            column: 24
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 509
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 513,
            column: 65
          },
          end: {
            line: 513,
            column: 66
          }
        },
        loc: {
          start: {
            line: 513,
            column: 72
          },
          end: {
            line: 513,
            column: 110
          }
        },
        line: 513
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        loc: {
          start: {
            line: 529,
            column: 24
          },
          end: {
            line: 531,
            column: 5
          }
        },
        line: 529
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 537,
            column: 4
          },
          end: {
            line: 537,
            column: 5
          }
        },
        loc: {
          start: {
            line: 537,
            column: 29
          },
          end: {
            line: 539,
            column: 5
          }
        },
        line: 537
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        },
        loc: {
          start: {
            line: 545,
            column: 28
          },
          end: {
            line: 547,
            column: 5
          }
        },
        line: 545
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 3
          },
          end: {
            line: 35,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 3
          },
          end: {
            line: 35,
            column: 18
          }
        }, {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 69
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 43
          },
          end: {
            line: 61,
            column: 45
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 34
          }
        }, {
          start: {
            line: 67,
            column: 38
          },
          end: {
            line: 67,
            column: 47
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 38
          }
        }, {
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 64
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 118,
            column: 45
          },
          end: {
            line: 118,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 57
          }
        }],
        line: 118
      },
      "7": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "8": {
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 164,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 164,
            column: 43
          },
          end: {
            line: 164,
            column: 48
          }
        }],
        line: 164
      },
      "9": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "10": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 36
          }
        }, {
          start: {
            line: 199,
            column: 40
          },
          end: {
            line: 199,
            column: 70
          }
        }],
        line: 199
      },
      "11": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 256,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 256,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "12": {
        loc: {
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 253,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 253,
            column: 33
          }
        }, {
          start: {
            line: 253,
            column: 37
          },
          end: {
            line: 253,
            column: 60
          }
        }],
        line: 253
      },
      "13": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "14": {
        loc: {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 266,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 266,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "15": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "16": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "17": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "18": {
        loc: {
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "19": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 318,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 318,
            column: 30
          }
        }, {
          start: {
            line: 318,
            column: 34
          },
          end: {
            line: 318,
            column: 64
          }
        }],
        line: 318
      },
      "20": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "21": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "22": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 353,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 353,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "23": {
        loc: {
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 350,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 350,
            column: 33
          }
        }, {
          start: {
            line: 350,
            column: 37
          },
          end: {
            line: 350,
            column: 67
          }
        }],
        line: 350
      },
      "24": {
        loc: {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "25": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        }, {
          start: {
            line: 370,
            column: 21
          },
          end: {
            line: 373,
            column: 17
          }
        }],
        line: 367
      },
      "26": {
        loc: {
          start: {
            line: 372,
            column: 39
          },
          end: {
            line: 372,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 39
          },
          end: {
            line: 372,
            column: 68
          }
        }, {
          start: {
            line: 372,
            column: 72
          },
          end: {
            line: 372,
            column: 87
          }
        }],
        line: 372
      },
      "27": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 382,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 382,
            column: 13
          }
        }, {
          start: {
            line: 380,
            column: 17
          },
          end: {
            line: 382,
            column: 13
          }
        }],
        line: 377
      },
      "28": {
        loc: {
          start: {
            line: 387,
            column: 31
          },
          end: {
            line: 387,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 56
          },
          end: {
            line: 387,
            column: 69
          }
        }, {
          start: {
            line: 387,
            column: 72
          },
          end: {
            line: 387,
            column: 87
          }
        }],
        line: 387
      },
      "29": {
        loc: {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "30": {
        loc: {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "31": {
        loc: {
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 415,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 415,
            column: 46
          }
        }, {
          start: {
            line: 415,
            column: 50
          },
          end: {
            line: 415,
            column: 90
          }
        }],
        line: 415
      },
      "32": {
        loc: {
          start: {
            line: 437,
            column: 43
          },
          end: {
            line: 437,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 437,
            column: 68
          },
          end: {
            line: 437,
            column: 81
          }
        }, {
          start: {
            line: 437,
            column: 84
          },
          end: {
            line: 437,
            column: 99
          }
        }],
        line: 437
      },
      "33": {
        loc: {
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "34": {
        loc: {
          start: {
            line: 453,
            column: 16
          },
          end: {
            line: 458,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 16
          },
          end: {
            line: 458,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "35": {
        loc: {
          start: {
            line: 454,
            column: 36
          },
          end: {
            line: 454,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 454,
            column: 68
          },
          end: {
            line: 454,
            column: 82
          }
        }, {
          start: {
            line: 454,
            column: 85
          },
          end: {
            line: 454,
            column: 101
          }
        }],
        line: 454
      },
      "36": {
        loc: {
          start: {
            line: 455,
            column: 20
          },
          end: {
            line: 457,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 20
          },
          end: {
            line: 457,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "37": {
        loc: {
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        }, {
          start: {
            line: 481,
            column: 13
          },
          end: {
            line: 483,
            column: 9
          }
        }],
        line: 474
      },
      "38": {
        loc: {
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 493,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 493,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "39": {
        loc: {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "40": {
        loc: {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 499,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "41": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "42": {
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 29
          }
        }, {
          start: {
            line: 500,
            column: 33
          },
          end: {
            line: 500,
            column: 64
          }
        }],
        line: 500
      },
      "43": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "44": {
        loc: {
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 520,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 520,
            column: 13
          }
        }, {
          start: {
            line: 518,
            column: 17
          },
          end: {
            line: 520,
            column: 13
          }
        }],
        line: 514
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\communication-bus.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\communication-bus.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - INTER-COMPONENT COMMUNICATION BUS\r\n * =============================================================================\r\n * \r\n * This module provides a comprehensive communication bus for inter-component\r\n * messaging, event handling, and data sharing across the trading system.\r\n * It ensures loose coupling while maintaining reliable message delivery.\r\n * \r\n * CRITICAL SYSTEM NOTICE:\r\n * This communication bus handles critical trading events and system messages.\r\n * Message delivery reliability and ordering are essential for system safety\r\n * and financial operations.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\n\r\n/**\r\n * Message interface\r\n */\r\nexport interface Message {\r\n  /** Unique message identifier */\r\n  id: string;\r\n  /** Message type */\r\n  type: string;\r\n  /** Message payload */\r\n  payload: any;\r\n  /** Message metadata */\r\n  metadata: MessageMetadata;\r\n  /** Message timestamp */\r\n  timestamp: Date;\r\n  /** Message source component */\r\n  source: string;\r\n  /** Message target component(s) */\r\n  target?: string | string[];\r\n  /** Message priority */\r\n  priority: MessagePriority;\r\n  /** Message expiration time */\r\n  expiresAt?: Date;\r\n  /** Correlation ID for request/response */\r\n  correlationId?: string;\r\n  /** Reply-to address */\r\n  replyTo?: string;\r\n}\r\n\r\n/**\r\n * Message metadata\r\n */\r\nexport interface MessageMetadata {\r\n  /** Message version */\r\n  version: string;\r\n  /** Message schema */\r\n  schema?: string;\r\n  /** Message encoding */\r\n  encoding: string;\r\n  /** Message compression */\r\n  compression?: string;\r\n  /** Message encryption */\r\n  encrypted: boolean;\r\n  /** Message signature */\r\n  signature?: string;\r\n  /** Custom headers */\r\n  headers: Record<string, string>;\r\n}\r\n\r\n/**\r\n * Message priority enumeration\r\n */\r\nexport enum MessagePriority {\r\n  LOW = 0,\r\n  NORMAL = 1,\r\n  HIGH = 2,\r\n  CRITICAL = 3,\r\n  EMERGENCY = 4\r\n}\r\n\r\n/**\r\n * Message handler interface\r\n */\r\nexport interface MessageHandler {\r\n  /** Handler identifier */\r\n  id: string;\r\n  /** Message types this handler processes */\r\n  messageTypes: string[];\r\n  /** Handler function */\r\n  handle(message: Message): Promise<any>;\r\n  /** Handler priority */\r\n  priority: number;\r\n  /** Whether handler can handle message */\r\n  canHandle?(message: Message): boolean;\r\n}\r\n\r\n/**\r\n * Subscription interface\r\n */\r\nexport interface Subscription {\r\n  /** Subscription identifier */\r\n  id: string;\r\n  /** Component identifier */\r\n  componentId: string;\r\n  /** Message pattern to match */\r\n  pattern: string | RegExp;\r\n  /** Message handler */\r\n  handler: MessageHandler;\r\n  /** Subscription options */\r\n  options: SubscriptionOptions;\r\n  /** Subscription statistics */\r\n  stats: SubscriptionStats;\r\n}\r\n\r\n/**\r\n * Subscription options\r\n */\r\nexport interface SubscriptionOptions {\r\n  /** Whether to acknowledge messages */\r\n  acknowledge: boolean;\r\n  /** Maximum retry attempts */\r\n  maxRetries: number;\r\n  /** Retry delay in milliseconds */\r\n  retryDelay: number;\r\n  /** Message timeout in milliseconds */\r\n  timeout: number;\r\n  /** Whether to persist messages */\r\n  persistent: boolean;\r\n  /** Dead letter queue */\r\n  deadLetterQueue?: string;\r\n}\r\n\r\n/**\r\n * Subscription statistics\r\n */\r\nexport interface SubscriptionStats {\r\n  /** Messages received */\r\n  messagesReceived: number;\r\n  /** Messages processed successfully */\r\n  messagesProcessed: number;\r\n  /** Messages failed */\r\n  messagesFailed: number;\r\n  /** Average processing time */\r\n  averageProcessingTime: number;\r\n  /** Last message timestamp */\r\n  lastMessageAt?: Date;\r\n  /** Last error */\r\n  lastError?: string;\r\n}\r\n\r\n/**\r\n * Communication bus configuration\r\n */\r\nexport interface CommunicationBusConfig {\r\n  /** Maximum message queue size */\r\n  maxQueueSize: number;\r\n  /** Message retention time in milliseconds */\r\n  messageRetention: number;\r\n  /** Enable message persistence */\r\n  enablePersistence: boolean;\r\n  /** Enable message encryption */\r\n  enableEncryption: boolean;\r\n  /** Enable message compression */\r\n  enableCompression: boolean;\r\n  /** Default message timeout */\r\n  defaultTimeout: number;\r\n  /** Maximum concurrent handlers */\r\n  maxConcurrentHandlers: number;\r\n  /** Enable dead letter queue */\r\n  enableDeadLetterQueue: boolean;\r\n}\r\n\r\n/**\r\n * Message delivery result\r\n */\r\nexport interface DeliveryResult {\r\n  /** Whether delivery was successful */\r\n  success: boolean;\r\n  /** Delivery timestamp */\r\n  deliveredAt: Date;\r\n  /** Number of handlers that processed the message */\r\n  handlerCount: number;\r\n  /** Delivery errors */\r\n  errors: string[];\r\n  /** Processing time in milliseconds */\r\n  processingTime: number;\r\n}\r\n\r\n/**\r\n * Communication bus class\r\n */\r\nexport class CommunicationBus extends EventEmitter {\r\n  private subscriptions: Map<string, Subscription> = new Map();\r\n  private messageQueue: Message[] = [];\r\n  private processingQueue: Set<string> = new Set();\r\n  private messageHistory: Map<string, Message> = new Map();\r\n  private deadLetterQueue: Message[] = [];\r\n  private isProcessing: boolean = false;\r\n  private processingInterval?: NodeJS.Timeout;\r\n\r\n  constructor(private config: CommunicationBusConfig) {\r\n    super();\r\n    this.startMessageProcessing();\r\n  }\r\n\r\n  /**\r\n   * Publish a message to the bus\r\n   * \r\n   * @param type Message type\r\n   * @param payload Message payload\r\n   * @param options Message options\r\n   * @returns Promise<DeliveryResult>\r\n   */\r\n  public async publish(\r\n    type: string,\r\n    payload: any,\r\n    options: Partial<{\r\n      source: string;\r\n      target: string | string[];\r\n      priority: MessagePriority;\r\n      expiresAt: Date;\r\n      correlationId: string;\r\n      replyTo: string;\r\n      metadata: Partial<MessageMetadata>;\r\n    }> = {}\r\n  ): Promise<DeliveryResult> {\r\n    const message: Message = {\r\n      id: this.generateMessageId(),\r\n      type,\r\n      payload,\r\n      timestamp: new Date(),\r\n      source: options.source || 'unknown',\r\n      target: options.target,\r\n      priority: options.priority || MessagePriority.NORMAL,\r\n      expiresAt: options.expiresAt,\r\n      correlationId: options.correlationId,\r\n      replyTo: options.replyTo,\r\n      metadata: {\r\n        version: '1.0',\r\n        encoding: 'json',\r\n        encrypted: this.config.enableEncryption,\r\n        headers: {},\r\n        ...options.metadata\r\n      }\r\n    };\r\n\r\n    logger.debug(`\uD83D\uDCE4 Publishing message: ${type} (${message.id})`);\r\n\r\n    try {\r\n      // Validate message\r\n      this.validateMessage(message);\r\n\r\n      // Add to queue\r\n      this.addToQueue(message);\r\n\r\n      // Store in history\r\n      if (this.config.enablePersistence) {\r\n        this.messageHistory.set(message.id, message);\r\n      }\r\n\r\n      // Process immediately if high priority\r\n      if (message.priority >= MessagePriority.HIGH) {\r\n        return await this.processMessage(message);\r\n      }\r\n\r\n      // Return pending result for normal priority messages\r\n      return {\r\n        success: true,\r\n        deliveredAt: new Date(),\r\n        handlerCount: 0,\r\n        errors: [],\r\n        processingTime: 0\r\n      };\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to publish message ${type}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribe to messages\r\n   * \r\n   * @param componentId Component identifier\r\n   * @param pattern Message pattern\r\n   * @param handler Message handler\r\n   * @param options Subscription options\r\n   * @returns Subscription ID\r\n   */\r\n  public subscribe(\r\n    componentId: string,\r\n    pattern: string | RegExp,\r\n    handler: MessageHandler,\r\n    options: Partial<SubscriptionOptions> = {}\r\n  ): string {\r\n    const subscriptionId = this.generateSubscriptionId();\r\n    \r\n    const subscription: Subscription = {\r\n      id: subscriptionId,\r\n      componentId,\r\n      pattern,\r\n      handler,\r\n      options: {\r\n        acknowledge: true,\r\n        maxRetries: 3,\r\n        retryDelay: 1000,\r\n        timeout: 30000,\r\n        persistent: false,\r\n        ...options\r\n      },\r\n      stats: {\r\n        messagesReceived: 0,\r\n        messagesProcessed: 0,\r\n        messagesFailed: 0,\r\n        averageProcessingTime: 0\r\n      }\r\n    };\r\n\r\n    this.subscriptions.set(subscriptionId, subscription);\r\n    \r\n    logger.info(`\uD83D\uDCE5 Component ${componentId} subscribed to pattern: ${pattern} (${subscriptionId})`);\r\n    \r\n    return subscriptionId;\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from messages\r\n   * \r\n   * @param subscriptionId Subscription identifier\r\n   */\r\n  public unsubscribe(subscriptionId: string): void {\r\n    const subscription = this.subscriptions.get(subscriptionId);\r\n    if (subscription) {\r\n      this.subscriptions.delete(subscriptionId);\r\n      logger.info(`\uD83D\uDCE4 Unsubscribed: ${subscriptionId} (${subscription.componentId})`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send a request and wait for response\r\n   * \r\n   * @param type Message type\r\n   * @param payload Message payload\r\n   * @param timeout Timeout in milliseconds\r\n   * @returns Promise<any> Response payload\r\n   */\r\n  public async request(type: string, payload: any, timeout: number = 30000): Promise<any> {\r\n    const correlationId = this.generateCorrelationId();\r\n    const replyTo = `reply.${correlationId}`;\r\n\r\n    // Set up response handler\r\n    const responsePromise = new Promise((resolve, reject) => {\r\n      const responseTimeout = setTimeout(() => {\r\n        this.unsubscribe(subscriptionId);\r\n        reject(new Error(`Request timeout: ${type}`));\r\n      }, timeout);\r\n\r\n      const subscriptionId = this.subscribe(\r\n        'request-response',\r\n        replyTo,\r\n        {\r\n          id: `response-handler-${correlationId}`,\r\n          messageTypes: [replyTo],\r\n          priority: 100,\r\n          handle: async (message: Message) => {\r\n            clearTimeout(responseTimeout);\r\n            this.unsubscribe(subscriptionId);\r\n            resolve(message.payload);\r\n          }\r\n        }\r\n      );\r\n    });\r\n\r\n    // Send request\r\n    await this.publish(type, payload, {\r\n      correlationId,\r\n      replyTo,\r\n      priority: MessagePriority.HIGH\r\n    });\r\n\r\n    return responsePromise;\r\n  }\r\n\r\n  /**\r\n   * Send a response to a request\r\n   * \r\n   * @param originalMessage Original request message\r\n   * @param responsePayload Response payload\r\n   */\r\n  public async respond(originalMessage: Message, responsePayload: any): Promise<void> {\r\n    if (!originalMessage.replyTo || !originalMessage.correlationId) {\r\n      throw new Error('Cannot respond to message without replyTo or correlationId');\r\n    }\r\n\r\n    await this.publish(originalMessage.replyTo, responsePayload, {\r\n      correlationId: originalMessage.correlationId,\r\n      priority: MessagePriority.HIGH\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get subscription statistics\r\n   * \r\n   * @param subscriptionId Subscription identifier\r\n   * @returns Subscription statistics or undefined\r\n   */\r\n  public getSubscriptionStats(subscriptionId: string): SubscriptionStats | undefined {\r\n    const subscription = this.subscriptions.get(subscriptionId);\r\n    return subscription?.stats;\r\n  }\r\n\r\n  /**\r\n   * Get all subscriptions for a component\r\n   * \r\n   * @param componentId Component identifier\r\n   * @returns Array of subscriptions\r\n   */\r\n  public getComponentSubscriptions(componentId: string): Subscription[] {\r\n    return Array.from(this.subscriptions.values())\r\n      .filter(sub => sub.componentId === componentId);\r\n  }\r\n\r\n  /**\r\n   * Get bus statistics\r\n   * \r\n   * @returns Bus statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalSubscriptions: number;\r\n    queueSize: number;\r\n    processingQueueSize: number;\r\n    messageHistorySize: number;\r\n    deadLetterQueueSize: number;\r\n    totalMessagesProcessed: number;\r\n  } {\r\n    let totalMessagesProcessed = 0;\r\n    \r\n    for (const subscription of this.subscriptions.values()) {\r\n      totalMessagesProcessed += subscription.stats.messagesProcessed;\r\n    }\r\n\r\n    return {\r\n      totalSubscriptions: this.subscriptions.size,\r\n      queueSize: this.messageQueue.length,\r\n      processingQueueSize: this.processingQueue.size,\r\n      messageHistorySize: this.messageHistory.size,\r\n      deadLetterQueueSize: this.deadLetterQueue.length,\r\n      totalMessagesProcessed\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clear expired messages\r\n   */\r\n  public clearExpiredMessages(): void {\r\n    const now = new Date();\r\n    \r\n    // Clear expired messages from queue\r\n    this.messageQueue = this.messageQueue.filter(message => {\r\n      if (message.expiresAt && message.expiresAt < now) {\r\n        logger.debug(`\uD83D\uDDD1\uFE0F Removing expired message: ${message.id}`);\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    // Clear old messages from history\r\n    if (this.config.enablePersistence) {\r\n      const retentionTime = this.config.messageRetention;\r\n      const cutoffTime = new Date(now.getTime() - retentionTime);\r\n\r\n      for (const [messageId, message] of this.messageHistory) {\r\n        if (message.timestamp < cutoffTime) {\r\n          this.messageHistory.delete(messageId);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shutdown the communication bus\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    logger.info('\uD83D\uDED1 Shutting down communication bus...');\r\n\r\n    // Stop processing\r\n    this.isProcessing = false;\r\n    if (this.processingInterval) {\r\n      clearInterval(this.processingInterval);\r\n    }\r\n\r\n    // Process remaining high-priority messages\r\n    const highPriorityMessages = this.messageQueue\r\n      .filter(msg => msg.priority >= MessagePriority.HIGH);\r\n\r\n    for (const message of highPriorityMessages) {\r\n      try {\r\n        await this.processMessage(message);\r\n      } catch (error) {\r\n        logger.error(`\u274C Failed to process message during shutdown: ${message.id}`, error);\r\n      }\r\n    }\r\n\r\n    // Clear all data\r\n    this.subscriptions.clear();\r\n    this.messageQueue = [];\r\n    this.processingQueue.clear();\r\n    this.messageHistory.clear();\r\n    this.deadLetterQueue = [];\r\n\r\n    logger.info('\u2705 Communication bus shutdown completed');\r\n  }\r\n\r\n  /**\r\n   * Start message processing loop\r\n   */\r\n  private startMessageProcessing(): void {\r\n    this.isProcessing = true;\r\n    \r\n    this.processingInterval = setInterval(async () => {\r\n      if (this.messageQueue.length > 0) {\r\n        await this.processNextMessage();\r\n      }\r\n      \r\n      // Clean up expired messages periodically\r\n      if (Math.random() < 0.1) { // 10% chance each interval\r\n        this.clearExpiredMessages();\r\n      }\r\n    }, 100); // Process every 100ms\r\n  }\r\n\r\n  /**\r\n   * Process next message in queue\r\n   */\r\n  private async processNextMessage(): Promise<void> {\r\n    if (!this.isProcessing || this.messageQueue.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Sort by priority and timestamp\r\n    this.messageQueue.sort((a, b) => {\r\n      if (a.priority !== b.priority) {\r\n        return b.priority - a.priority; // Higher priority first\r\n      }\r\n      return a.timestamp.getTime() - b.timestamp.getTime(); // Older first\r\n    });\r\n\r\n    const message = this.messageQueue.shift();\r\n    if (message) {\r\n      await this.processMessage(message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process a specific message\r\n   * \r\n   * @param message Message to process\r\n   * @returns Promise<DeliveryResult>\r\n   */\r\n  private async processMessage(message: Message): Promise<DeliveryResult> {\r\n    const startTime = Date.now();\r\n    const result: DeliveryResult = {\r\n      success: true,\r\n      deliveredAt: new Date(),\r\n      handlerCount: 0,\r\n      errors: [],\r\n      processingTime: 0\r\n    };\r\n\r\n    try {\r\n      // Check if message is expired\r\n      if (message.expiresAt && message.expiresAt < new Date()) {\r\n        logger.debug(`\u23F0 Message expired: ${message.id}`);\r\n        return result;\r\n      }\r\n\r\n      // Mark as processing\r\n      this.processingQueue.add(message.id);\r\n\r\n      // Find matching subscriptions\r\n      const matchingSubscriptions = this.findMatchingSubscriptions(message);\r\n      \r\n      if (matchingSubscriptions.length === 0) {\r\n        logger.debug(`\uD83D\uDCED No handlers for message: ${message.type} (${message.id})`);\r\n        return result;\r\n      }\r\n\r\n      // Process with each matching handler\r\n      const handlerPromises = matchingSubscriptions.map(subscription => \r\n        this.processWithHandler(message, subscription)\r\n      );\r\n\r\n      const handlerResults = await Promise.allSettled(handlerPromises);\r\n      \r\n      // Collect results\r\n      for (const handlerResult of handlerResults) {\r\n        if (handlerResult.status === 'fulfilled') {\r\n          result.handlerCount++;\r\n        } else {\r\n          result.success = false;\r\n          result.errors.push(handlerResult.reason?.message || 'Unknown error');\r\n        }\r\n      }\r\n\r\n      result.processingTime = Date.now() - startTime;\r\n\r\n      // Log result\r\n      if (result.success) {\r\n        logger.debug(`\u2705 Message processed: ${message.type} (${message.id}) - ${result.handlerCount} handlers`);\r\n      } else {\r\n        logger.error(`\u274C Message processing failed: ${message.type} (${message.id}) - errors: ${result.errors.join(', ')}`);\r\n      }\r\n\r\n      return result;\r\n\r\n    } catch (error) {\r\n      result.success = false;\r\n      result.errors.push(error instanceof Error ? error.message : 'Unknown error');\r\n      result.processingTime = Date.now() - startTime;\r\n      \r\n      logger.error(`\u274C Message processing error: ${message.id}`, error);\r\n      \r\n      // Move to dead letter queue if enabled\r\n      if (this.config.enableDeadLetterQueue) {\r\n        this.deadLetterQueue.push(message);\r\n      }\r\n\r\n      return result;\r\n\r\n    } finally {\r\n      // Remove from processing queue\r\n      this.processingQueue.delete(message.id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process message with specific handler\r\n   * \r\n   * @param message Message to process\r\n   * @param subscription Subscription with handler\r\n   * @returns Promise<any>\r\n   */\r\n  private async processWithHandler(message: Message, subscription: Subscription): Promise<any> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      // Update stats\r\n      subscription.stats.messagesReceived++;\r\n      subscription.stats.lastMessageAt = new Date();\r\n\r\n      // Check if handler can handle this message\r\n      if (subscription.handler.canHandle && !subscription.handler.canHandle(message)) {\r\n        return;\r\n      }\r\n\r\n      // Process with timeout\r\n      const handlerPromise = subscription.handler.handle(message);\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => {\r\n          reject(new Error(`Handler timeout: ${subscription.handler.id}`));\r\n        }, subscription.options.timeout);\r\n      });\r\n\r\n      const result = await Promise.race([handlerPromise, timeoutPromise]);\r\n\r\n      // Update stats\r\n      const processingTime = Date.now() - startTime;\r\n      subscription.stats.messagesProcessed++;\r\n      subscription.stats.averageProcessingTime = \r\n        (subscription.stats.averageProcessingTime * (subscription.stats.messagesProcessed - 1) + processingTime) / \r\n        subscription.stats.messagesProcessed;\r\n\r\n      return result;\r\n\r\n    } catch (error) {\r\n      // Update error stats\r\n      subscription.stats.messagesFailed++;\r\n      subscription.stats.lastError = error instanceof Error ? error.message : 'Unknown error';\r\n      \r\n      logger.error(`\u274C Handler error: ${subscription.handler.id}`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find subscriptions matching a message\r\n   * \r\n   * @param message Message to match\r\n   * @returns Array of matching subscriptions\r\n   */\r\n  private findMatchingSubscriptions(message: Message): Subscription[] {\r\n    const matching: Subscription[] = [];\r\n\r\n    for (const subscription of this.subscriptions.values()) {\r\n      if (this.messageMatches(message, subscription.pattern)) {\r\n        // Check target filtering\r\n        if (message.target) {\r\n          const targets = Array.isArray(message.target) ? message.target : [message.target];\r\n          if (!targets.includes(subscription.componentId)) {\r\n            continue;\r\n          }\r\n        }\r\n\r\n        matching.push(subscription);\r\n      }\r\n    }\r\n\r\n    // Sort by handler priority\r\n    matching.sort((a, b) => b.handler.priority - a.handler.priority);\r\n\r\n    return matching;\r\n  }\r\n\r\n  /**\r\n   * Check if message matches pattern\r\n   * \r\n   * @param message Message to check\r\n   * @param pattern Pattern to match against\r\n   * @returns True if matches\r\n   */\r\n  private messageMatches(message: Message, pattern: string | RegExp): boolean {\r\n    if (typeof pattern === 'string') {\r\n      // Simple string matching with wildcards\r\n      const regexPattern = pattern\r\n        .replace(/\\*/g, '.*')\r\n        .replace(/\\?/g, '.');\r\n      return new RegExp(`^${regexPattern}$`).test(message.type);\r\n    } else {\r\n      return pattern.test(message.type);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate message format\r\n   * \r\n   * @param message Message to validate\r\n   */\r\n  private validateMessage(message: Message): void {\r\n    if (!message.id) {\r\n      throw new Error('Message ID is required');\r\n    }\r\n\r\n    if (!message.type) {\r\n      throw new Error('Message type is required');\r\n    }\r\n\r\n    if (!message.source) {\r\n      throw new Error('Message source is required');\r\n    }\r\n\r\n    if (message.expiresAt && message.expiresAt <= new Date()) {\r\n      throw new Error('Message expiration time must be in the future');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add message to queue\r\n   * \r\n   * @param message Message to add\r\n   */\r\n  private addToQueue(message: Message): void {\r\n    // Check queue size limit\r\n    if (this.messageQueue.length >= this.config.maxQueueSize) {\r\n      // Remove oldest low-priority message\r\n      const lowPriorityIndex = this.messageQueue.findIndex(msg => msg.priority <= MessagePriority.NORMAL);\r\n      if (lowPriorityIndex >= 0) {\r\n        const removed = this.messageQueue.splice(lowPriorityIndex, 1)[0];\r\n        logger.warn(`\u26A0\uFE0F Queue full, removed message: ${removed.id}`);\r\n      } else {\r\n        throw new Error('Message queue is full and no low-priority messages to remove');\r\n      }\r\n    }\r\n\r\n    this.messageQueue.push(message);\r\n  }\r\n\r\n  /**\r\n   * Generate unique message ID\r\n   * \r\n   * @returns Unique message ID\r\n   */\r\n  private generateMessageId(): string {\r\n    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Generate unique subscription ID\r\n   * \r\n   * @returns Unique subscription ID\r\n   */\r\n  private generateSubscriptionId(): string {\r\n    return `sub_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Generate unique correlation ID\r\n   * \r\n   * @returns Unique correlation ID\r\n   */\r\n  private generateCorrelationId(): string {\r\n    return `corr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Default communication bus configuration\r\n */\r\nexport const defaultCommunicationBusConfig: CommunicationBusConfig = {\r\n  maxQueueSize: 10000,\r\n  messageRetention: 24 * 60 * 60 * 1000, // 24 hours\r\n  enablePersistence: true,\r\n  enableEncryption: false,\r\n  enableCompression: false,\r\n  defaultTimeout: 30000,\r\n  maxConcurrentHandlers: 100,\r\n  enableDeadLetterQueue: true\r\n};\r\n\r\n/**\r\n * Global communication bus instance\r\n */\r\nexport const communicationBus = new CommunicationBus(defaultCommunicationBusConfig);\r\n\r\n// =============================================================================\r\n// COMMUNICATION BUS NOTES\r\n// =============================================================================\r\n// 1. Event-driven inter-component communication with message queuing\r\n// 2. Priority-based message processing with timeout handling\r\n// 3. Request/response pattern support with correlation IDs\r\n// 4. Subscription-based message routing with pattern matching\r\n// 5. Message persistence and dead letter queue for reliability\r\n// 6. Comprehensive statistics and monitoring capabilities\r\n// 7. Graceful shutdown with high-priority message processing\r\n// 8. Configurable message retention and queue size limits\r\n// =============================================================================\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de61a1090a120cdf517aeb971eca1fd35dbbc593"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g7kl6bnf7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g7kl6bnf7();
cov_2g7kl6bnf7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2g7kl6bnf7().s[1]++;
exports.communicationBus = exports.defaultCommunicationBusConfig = exports.CommunicationBus = exports.MessagePriority = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2g7kl6bnf7().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_2g7kl6bnf7().s[3]++, require("@/core/logging/logger"));
/**
 * Message priority enumeration
 */
var MessagePriority;
/* istanbul ignore next */
cov_2g7kl6bnf7().s[4]++;
(function (MessagePriority) {
  /* istanbul ignore next */
  cov_2g7kl6bnf7().f[0]++;
  cov_2g7kl6bnf7().s[5]++;
  MessagePriority[MessagePriority["LOW"] = 0] = "LOW";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[6]++;
  MessagePriority[MessagePriority["NORMAL"] = 1] = "NORMAL";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[7]++;
  MessagePriority[MessagePriority["HIGH"] = 2] = "HIGH";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[8]++;
  MessagePriority[MessagePriority["CRITICAL"] = 3] = "CRITICAL";
  /* istanbul ignore next */
  cov_2g7kl6bnf7().s[9]++;
  MessagePriority[MessagePriority["EMERGENCY"] = 4] = "EMERGENCY";
})(
/* istanbul ignore next */
(cov_2g7kl6bnf7().b[0][0]++, MessagePriority) ||
/* istanbul ignore next */
(cov_2g7kl6bnf7().b[0][1]++, exports.MessagePriority = MessagePriority = {}));
/**
 * Communication bus class
 */
class CommunicationBus extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  config;
  subscriptions =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().s[10]++, new Map());
  messageQueue =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().s[11]++, []);
  processingQueue =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().s[12]++, new Set());
  messageHistory =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().s[13]++, new Map());
  deadLetterQueue =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().s[14]++, []);
  isProcessing =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().s[15]++, false);
  processingInterval;
  constructor(config) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[1]++;
    cov_2g7kl6bnf7().s[16]++;
    super();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[17]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[18]++;
    this.startMessageProcessing();
  }
  /**
   * Publish a message to the bus
   *
   * @param type Message type
   * @param payload Message payload
   * @param options Message options
   * @returns Promise<DeliveryResult>
   */
  async publish(type, payload, options =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[2]++;
    const message =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[19]++, {
      id: this.generateMessageId(),
      type,
      payload,
      timestamp: new Date(),
      source:
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[2][0]++, options.source) ||
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[2][1]++, 'unknown'),
      target: options.target,
      priority:
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[3][0]++, options.priority) ||
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[3][1]++, MessagePriority.NORMAL),
      expiresAt: options.expiresAt,
      correlationId: options.correlationId,
      replyTo: options.replyTo,
      metadata: {
        version: '1.0',
        encoding: 'json',
        encrypted: this.config.enableEncryption,
        headers: {},
        ...options.metadata
      }
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[20]++;
    logger_1.logger.debug(`📤 Publishing message: ${type} (${message.id})`);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[21]++;
    try {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[22]++;
      // Validate message
      this.validateMessage(message);
      // Add to queue
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[23]++;
      this.addToQueue(message);
      // Store in history
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[24]++;
      if (this.config.enablePersistence) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[4][0]++;
        cov_2g7kl6bnf7().s[25]++;
        this.messageHistory.set(message.id, message);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[4][1]++;
      }
      // Process immediately if high priority
      cov_2g7kl6bnf7().s[26]++;
      if (message.priority >= MessagePriority.HIGH) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[5][0]++;
        cov_2g7kl6bnf7().s[27]++;
        return await this.processMessage(message);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[5][1]++;
      }
      // Return pending result for normal priority messages
      cov_2g7kl6bnf7().s[28]++;
      return {
        success: true,
        deliveredAt: new Date(),
        handlerCount: 0,
        errors: [],
        processingTime: 0
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[29]++;
      logger_1.logger.error(`❌ Failed to publish message ${type}:`, error);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[30]++;
      throw error;
    }
  }
  /**
   * Subscribe to messages
   *
   * @param componentId Component identifier
   * @param pattern Message pattern
   * @param handler Message handler
   * @param options Subscription options
   * @returns Subscription ID
   */
  subscribe(componentId, pattern, handler, options =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().b[6][0]++, {})) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[3]++;
    const subscriptionId =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[31]++, this.generateSubscriptionId());
    const subscription =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[32]++, {
      id: subscriptionId,
      componentId,
      pattern,
      handler,
      options: {
        acknowledge: true,
        maxRetries: 3,
        retryDelay: 1000,
        timeout: 30000,
        persistent: false,
        ...options
      },
      stats: {
        messagesReceived: 0,
        messagesProcessed: 0,
        messagesFailed: 0,
        averageProcessingTime: 0
      }
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[33]++;
    this.subscriptions.set(subscriptionId, subscription);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[34]++;
    logger_1.logger.info(`📥 Component ${componentId} subscribed to pattern: ${pattern} (${subscriptionId})`);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[35]++;
    return subscriptionId;
  }
  /**
   * Unsubscribe from messages
   *
   * @param subscriptionId Subscription identifier
   */
  unsubscribe(subscriptionId) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[4]++;
    const subscription =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[36]++, this.subscriptions.get(subscriptionId));
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[37]++;
    if (subscription) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[7][0]++;
      cov_2g7kl6bnf7().s[38]++;
      this.subscriptions.delete(subscriptionId);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[39]++;
      logger_1.logger.info(`📤 Unsubscribed: ${subscriptionId} (${subscription.componentId})`);
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[7][1]++;
    }
  }
  /**
   * Send a request and wait for response
   *
   * @param type Message type
   * @param payload Message payload
   * @param timeout Timeout in milliseconds
   * @returns Promise<any> Response payload
   */
  async request(type, payload, timeout =
  /* istanbul ignore next */
  (cov_2g7kl6bnf7().b[8][0]++, 30000)) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[5]++;
    const correlationId =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[40]++, this.generateCorrelationId());
    const replyTo =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[41]++, `reply.${correlationId}`);
    // Set up response handler
    const responsePromise =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[42]++, new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[6]++;
      const responseTimeout =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[43]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[7]++;
        cov_2g7kl6bnf7().s[44]++;
        this.unsubscribe(subscriptionId);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[45]++;
        reject(new Error(`Request timeout: ${type}`));
      }, timeout));
      const subscriptionId =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[46]++, this.subscribe('request-response', replyTo, {
        id: `response-handler-${correlationId}`,
        messageTypes: [replyTo],
        priority: 100,
        handle: async message => {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().f[8]++;
          cov_2g7kl6bnf7().s[47]++;
          clearTimeout(responseTimeout);
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[48]++;
          this.unsubscribe(subscriptionId);
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[49]++;
          resolve(message.payload);
        }
      }));
    }));
    // Send request
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[50]++;
    await this.publish(type, payload, {
      correlationId,
      replyTo,
      priority: MessagePriority.HIGH
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[51]++;
    return responsePromise;
  }
  /**
   * Send a response to a request
   *
   * @param originalMessage Original request message
   * @param responsePayload Response payload
   */
  async respond(originalMessage, responsePayload) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[9]++;
    cov_2g7kl6bnf7().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[10][0]++, !originalMessage.replyTo) ||
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[10][1]++, !originalMessage.correlationId)) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[9][0]++;
      cov_2g7kl6bnf7().s[53]++;
      throw new Error('Cannot respond to message without replyTo or correlationId');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[9][1]++;
    }
    cov_2g7kl6bnf7().s[54]++;
    await this.publish(originalMessage.replyTo, responsePayload, {
      correlationId: originalMessage.correlationId,
      priority: MessagePriority.HIGH
    });
  }
  /**
   * Get subscription statistics
   *
   * @param subscriptionId Subscription identifier
   * @returns Subscription statistics or undefined
   */
  getSubscriptionStats(subscriptionId) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[10]++;
    const subscription =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[55]++, this.subscriptions.get(subscriptionId));
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[56]++;
    return subscription?.stats;
  }
  /**
   * Get all subscriptions for a component
   *
   * @param componentId Component identifier
   * @returns Array of subscriptions
   */
  getComponentSubscriptions(componentId) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[11]++;
    cov_2g7kl6bnf7().s[57]++;
    return Array.from(this.subscriptions.values()).filter(sub => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[12]++;
      cov_2g7kl6bnf7().s[58]++;
      return sub.componentId === componentId;
    });
  }
  /**
   * Get bus statistics
   *
   * @returns Bus statistics
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[13]++;
    let totalMessagesProcessed =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[59]++, 0);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[60]++;
    for (const subscription of this.subscriptions.values()) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[61]++;
      totalMessagesProcessed += subscription.stats.messagesProcessed;
    }
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[62]++;
    return {
      totalSubscriptions: this.subscriptions.size,
      queueSize: this.messageQueue.length,
      processingQueueSize: this.processingQueue.size,
      messageHistorySize: this.messageHistory.size,
      deadLetterQueueSize: this.deadLetterQueue.length,
      totalMessagesProcessed
    };
  }
  /**
   * Clear expired messages
   */
  clearExpiredMessages() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[14]++;
    const now =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[63]++, new Date());
    // Clear expired messages from queue
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[64]++;
    this.messageQueue = this.messageQueue.filter(message => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[15]++;
      cov_2g7kl6bnf7().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[12][0]++, message.expiresAt) &&
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[12][1]++, message.expiresAt < now)) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[11][0]++;
        cov_2g7kl6bnf7().s[66]++;
        logger_1.logger.debug(`🗑️ Removing expired message: ${message.id}`);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[67]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[11][1]++;
      }
      cov_2g7kl6bnf7().s[68]++;
      return true;
    });
    // Clear old messages from history
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[69]++;
    if (this.config.enablePersistence) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[13][0]++;
      const retentionTime =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[70]++, this.config.messageRetention);
      const cutoffTime =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[71]++, new Date(now.getTime() - retentionTime));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[72]++;
      for (const [messageId, message] of this.messageHistory) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[73]++;
        if (message.timestamp < cutoffTime) {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[14][0]++;
          cov_2g7kl6bnf7().s[74]++;
          this.messageHistory.delete(messageId);
        } else
        /* istanbul ignore next */
        {
          cov_2g7kl6bnf7().b[14][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[13][1]++;
    }
  }
  /**
   * Shutdown the communication bus
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[16]++;
    cov_2g7kl6bnf7().s[75]++;
    logger_1.logger.info('🛑 Shutting down communication bus...');
    // Stop processing
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[76]++;
    this.isProcessing = false;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[77]++;
    if (this.processingInterval) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[15][0]++;
      cov_2g7kl6bnf7().s[78]++;
      clearInterval(this.processingInterval);
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[15][1]++;
    }
    // Process remaining high-priority messages
    const highPriorityMessages =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[79]++, this.messageQueue.filter(msg => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[17]++;
      cov_2g7kl6bnf7().s[80]++;
      return msg.priority >= MessagePriority.HIGH;
    }));
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[81]++;
    for (const message of highPriorityMessages) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[82]++;
      try {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[83]++;
        await this.processMessage(message);
      } catch (error) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[84]++;
        logger_1.logger.error(`❌ Failed to process message during shutdown: ${message.id}`, error);
      }
    }
    // Clear all data
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[85]++;
    this.subscriptions.clear();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[86]++;
    this.messageQueue = [];
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[87]++;
    this.processingQueue.clear();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[88]++;
    this.messageHistory.clear();
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[89]++;
    this.deadLetterQueue = [];
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[90]++;
    logger_1.logger.info('✅ Communication bus shutdown completed');
  }
  /**
   * Start message processing loop
   */
  startMessageProcessing() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[18]++;
    cov_2g7kl6bnf7().s[91]++;
    this.isProcessing = true;
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[92]++;
    this.processingInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[19]++;
      cov_2g7kl6bnf7().s[93]++;
      if (this.messageQueue.length > 0) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[16][0]++;
        cov_2g7kl6bnf7().s[94]++;
        await this.processNextMessage();
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[16][1]++;
      }
      // Clean up expired messages periodically
      cov_2g7kl6bnf7().s[95]++;
      if (Math.random() < 0.1) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[17][0]++;
        cov_2g7kl6bnf7().s[96]++;
        // 10% chance each interval
        this.clearExpiredMessages();
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[17][1]++;
      }
    }, 100); // Process every 100ms
  }
  /**
   * Process next message in queue
   */
  async processNextMessage() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[20]++;
    cov_2g7kl6bnf7().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[19][0]++, !this.isProcessing) ||
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[19][1]++, this.messageQueue.length === 0)) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[18][0]++;
      cov_2g7kl6bnf7().s[98]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[18][1]++;
    }
    // Sort by priority and timestamp
    cov_2g7kl6bnf7().s[99]++;
    this.messageQueue.sort((a, b) => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[21]++;
      cov_2g7kl6bnf7().s[100]++;
      if (a.priority !== b.priority) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[20][0]++;
        cov_2g7kl6bnf7().s[101]++;
        return b.priority - a.priority; // Higher priority first
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[20][1]++;
      }
      cov_2g7kl6bnf7().s[102]++;
      return a.timestamp.getTime() - b.timestamp.getTime(); // Older first
    });
    const message =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[103]++, this.messageQueue.shift());
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[104]++;
    if (message) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[21][0]++;
      cov_2g7kl6bnf7().s[105]++;
      await this.processMessage(message);
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[21][1]++;
    }
  }
  /**
   * Process a specific message
   *
   * @param message Message to process
   * @returns Promise<DeliveryResult>
   */
  async processMessage(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[22]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[106]++, Date.now());
    const result =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[107]++, {
      success: true,
      deliveredAt: new Date(),
      handlerCount: 0,
      errors: [],
      processingTime: 0
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[108]++;
    try {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[109]++;
      // Check if message is expired
      if (
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[23][0]++, message.expiresAt) &&
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[23][1]++, message.expiresAt < new Date())) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[22][0]++;
        cov_2g7kl6bnf7().s[110]++;
        logger_1.logger.debug(`⏰ Message expired: ${message.id}`);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[111]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[22][1]++;
      }
      // Mark as processing
      cov_2g7kl6bnf7().s[112]++;
      this.processingQueue.add(message.id);
      // Find matching subscriptions
      const matchingSubscriptions =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[113]++, this.findMatchingSubscriptions(message));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[114]++;
      if (matchingSubscriptions.length === 0) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[24][0]++;
        cov_2g7kl6bnf7().s[115]++;
        logger_1.logger.debug(`📭 No handlers for message: ${message.type} (${message.id})`);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[116]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[24][1]++;
      }
      // Process with each matching handler
      const handlerPromises =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[117]++, matchingSubscriptions.map(subscription => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[23]++;
        cov_2g7kl6bnf7().s[118]++;
        return this.processWithHandler(message, subscription);
      }));
      const handlerResults =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[119]++, await Promise.allSettled(handlerPromises));
      // Collect results
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[120]++;
      for (const handlerResult of handlerResults) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[121]++;
        if (handlerResult.status === 'fulfilled') {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[25][0]++;
          cov_2g7kl6bnf7().s[122]++;
          result.handlerCount++;
        } else {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[25][1]++;
          cov_2g7kl6bnf7().s[123]++;
          result.success = false;
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[124]++;
          result.errors.push(
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[26][0]++, handlerResult.reason?.message) ||
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[26][1]++, 'Unknown error'));
        }
      }
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[125]++;
      result.processingTime = Date.now() - startTime;
      // Log result
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[126]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[27][0]++;
        cov_2g7kl6bnf7().s[127]++;
        logger_1.logger.debug(`✅ Message processed: ${message.type} (${message.id}) - ${result.handlerCount} handlers`);
      } else {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[27][1]++;
        cov_2g7kl6bnf7().s[128]++;
        logger_1.logger.error(`❌ Message processing failed: ${message.type} (${message.id}) - errors: ${result.errors.join(', ')}`);
      }
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[129]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[130]++;
      result.success = false;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[131]++;
      result.errors.push(error instanceof Error ?
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[28][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[28][1]++, 'Unknown error'));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[132]++;
      result.processingTime = Date.now() - startTime;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[133]++;
      logger_1.logger.error(`❌ Message processing error: ${message.id}`, error);
      // Move to dead letter queue if enabled
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[134]++;
      if (this.config.enableDeadLetterQueue) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[29][0]++;
        cov_2g7kl6bnf7().s[135]++;
        this.deadLetterQueue.push(message);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[29][1]++;
      }
      cov_2g7kl6bnf7().s[136]++;
      return result;
    } finally {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[137]++;
      // Remove from processing queue
      this.processingQueue.delete(message.id);
    }
  }
  /**
   * Process message with specific handler
   *
   * @param message Message to process
   * @param subscription Subscription with handler
   * @returns Promise<any>
   */
  async processWithHandler(message, subscription) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[24]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[138]++, Date.now());
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[139]++;
    try {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[140]++;
      // Update stats
      subscription.stats.messagesReceived++;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[141]++;
      subscription.stats.lastMessageAt = new Date();
      // Check if handler can handle this message
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[142]++;
      if (
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[31][0]++, subscription.handler.canHandle) &&
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[31][1]++, !subscription.handler.canHandle(message))) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[30][0]++;
        cov_2g7kl6bnf7().s[143]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[30][1]++;
      }
      // Process with timeout
      const handlerPromise =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[144]++, subscription.handler.handle(message));
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[145]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[25]++;
        cov_2g7kl6bnf7().s[146]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().f[26]++;
          cov_2g7kl6bnf7().s[147]++;
          reject(new Error(`Handler timeout: ${subscription.handler.id}`));
        }, subscription.options.timeout);
      }));
      const result =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[148]++, await Promise.race([handlerPromise, timeoutPromise]));
      // Update stats
      const processingTime =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[149]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[150]++;
      subscription.stats.messagesProcessed++;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[151]++;
      subscription.stats.averageProcessingTime = (subscription.stats.averageProcessingTime * (subscription.stats.messagesProcessed - 1) + processingTime) / subscription.stats.messagesProcessed;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[152]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[153]++;
      // Update error stats
      subscription.stats.messagesFailed++;
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[154]++;
      subscription.stats.lastError = error instanceof Error ?
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[32][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().b[32][1]++, 'Unknown error');
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[155]++;
      logger_1.logger.error(`❌ Handler error: ${subscription.handler.id}`, error);
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[156]++;
      throw error;
    }
  }
  /**
   * Find subscriptions matching a message
   *
   * @param message Message to match
   * @returns Array of matching subscriptions
   */
  findMatchingSubscriptions(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[27]++;
    const matching =
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().s[157]++, []);
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[158]++;
    for (const subscription of this.subscriptions.values()) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[159]++;
      if (this.messageMatches(message, subscription.pattern)) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[33][0]++;
        cov_2g7kl6bnf7().s[160]++;
        // Check target filtering
        if (message.target) {
          /* istanbul ignore next */
          cov_2g7kl6bnf7().b[34][0]++;
          const targets =
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().s[161]++, Array.isArray(message.target) ?
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[35][0]++, message.target) :
          /* istanbul ignore next */
          (cov_2g7kl6bnf7().b[35][1]++, [message.target]));
          /* istanbul ignore next */
          cov_2g7kl6bnf7().s[162]++;
          if (!targets.includes(subscription.componentId)) {
            /* istanbul ignore next */
            cov_2g7kl6bnf7().b[36][0]++;
            cov_2g7kl6bnf7().s[163]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_2g7kl6bnf7().b[36][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2g7kl6bnf7().b[34][1]++;
        }
        cov_2g7kl6bnf7().s[164]++;
        matching.push(subscription);
      } else
      /* istanbul ignore next */
      {
        cov_2g7kl6bnf7().b[33][1]++;
      }
    }
    // Sort by handler priority
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[165]++;
    matching.sort((a, b) => {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().f[28]++;
      cov_2g7kl6bnf7().s[166]++;
      return b.handler.priority - a.handler.priority;
    });
    /* istanbul ignore next */
    cov_2g7kl6bnf7().s[167]++;
    return matching;
  }
  /**
   * Check if message matches pattern
   *
   * @param message Message to check
   * @param pattern Pattern to match against
   * @returns True if matches
   */
  messageMatches(message, pattern) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[29]++;
    cov_2g7kl6bnf7().s[168]++;
    if (typeof pattern === 'string') {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[37][0]++;
      // Simple string matching with wildcards
      const regexPattern =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[169]++, pattern.replace(/\*/g, '.*').replace(/\?/g, '.'));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[170]++;
      return new RegExp(`^${regexPattern}$`).test(message.type);
    } else {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[37][1]++;
      cov_2g7kl6bnf7().s[171]++;
      return pattern.test(message.type);
    }
  }
  /**
   * Validate message format
   *
   * @param message Message to validate
   */
  validateMessage(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[30]++;
    cov_2g7kl6bnf7().s[172]++;
    if (!message.id) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[38][0]++;
      cov_2g7kl6bnf7().s[173]++;
      throw new Error('Message ID is required');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[38][1]++;
    }
    cov_2g7kl6bnf7().s[174]++;
    if (!message.type) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[39][0]++;
      cov_2g7kl6bnf7().s[175]++;
      throw new Error('Message type is required');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[39][1]++;
    }
    cov_2g7kl6bnf7().s[176]++;
    if (!message.source) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[40][0]++;
      cov_2g7kl6bnf7().s[177]++;
      throw new Error('Message source is required');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[40][1]++;
    }
    cov_2g7kl6bnf7().s[178]++;
    if (
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[42][0]++, message.expiresAt) &&
    /* istanbul ignore next */
    (cov_2g7kl6bnf7().b[42][1]++, message.expiresAt <= new Date())) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[41][0]++;
      cov_2g7kl6bnf7().s[179]++;
      throw new Error('Message expiration time must be in the future');
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[41][1]++;
    }
  }
  /**
   * Add message to queue
   *
   * @param message Message to add
   */
  addToQueue(message) {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[31]++;
    cov_2g7kl6bnf7().s[180]++;
    // Check queue size limit
    if (this.messageQueue.length >= this.config.maxQueueSize) {
      /* istanbul ignore next */
      cov_2g7kl6bnf7().b[43][0]++;
      // Remove oldest low-priority message
      const lowPriorityIndex =
      /* istanbul ignore next */
      (cov_2g7kl6bnf7().s[181]++, this.messageQueue.findIndex(msg => {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().f[32]++;
        cov_2g7kl6bnf7().s[182]++;
        return msg.priority <= MessagePriority.NORMAL;
      }));
      /* istanbul ignore next */
      cov_2g7kl6bnf7().s[183]++;
      if (lowPriorityIndex >= 0) {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[44][0]++;
        const removed =
        /* istanbul ignore next */
        (cov_2g7kl6bnf7().s[184]++, this.messageQueue.splice(lowPriorityIndex, 1)[0]);
        /* istanbul ignore next */
        cov_2g7kl6bnf7().s[185]++;
        logger_1.logger.warn(`⚠️ Queue full, removed message: ${removed.id}`);
      } else {
        /* istanbul ignore next */
        cov_2g7kl6bnf7().b[44][1]++;
        cov_2g7kl6bnf7().s[186]++;
        throw new Error('Message queue is full and no low-priority messages to remove');
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g7kl6bnf7().b[43][1]++;
    }
    cov_2g7kl6bnf7().s[187]++;
    this.messageQueue.push(message);
  }
  /**
   * Generate unique message ID
   *
   * @returns Unique message ID
   */
  generateMessageId() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[33]++;
    cov_2g7kl6bnf7().s[188]++;
    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Generate unique subscription ID
   *
   * @returns Unique subscription ID
   */
  generateSubscriptionId() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[34]++;
    cov_2g7kl6bnf7().s[189]++;
    return `sub_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Generate unique correlation ID
   *
   * @returns Unique correlation ID
   */
  generateCorrelationId() {
    /* istanbul ignore next */
    cov_2g7kl6bnf7().f[35]++;
    cov_2g7kl6bnf7().s[190]++;
    return `corr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
}
/* istanbul ignore next */
cov_2g7kl6bnf7().s[191]++;
exports.CommunicationBus = CommunicationBus;
/**
 * Default communication bus configuration
 */
/* istanbul ignore next */
cov_2g7kl6bnf7().s[192]++;
exports.defaultCommunicationBusConfig = {
  maxQueueSize: 10000,
  messageRetention: 24 * 60 * 60 * 1000,
  // 24 hours
  enablePersistence: true,
  enableEncryption: false,
  enableCompression: false,
  defaultTimeout: 30000,
  maxConcurrentHandlers: 100,
  enableDeadLetterQueue: true
};
/**
 * Global communication bus instance
 */
/* istanbul ignore next */
cov_2g7kl6bnf7().s[193]++;
exports.communicationBus = new CommunicationBus(exports.defaultCommunicationBusConfig);
// =============================================================================
// COMMUNICATION BUS NOTES
// =============================================================================
// 1. Event-driven inter-component communication with message queuing
// 2. Priority-based message processing with timeout handling
// 3. Request/response pattern support with correlation IDs
// 4. Subscription-based message routing with pattern matching
// 5. Message persistence and dead letter queue for reliability
// 6. Comprehensive statistics and monitoring capabilities
// 7. Graceful shutdown with high-priority message processing
// 8. Configurable message retention and queue size limits
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,