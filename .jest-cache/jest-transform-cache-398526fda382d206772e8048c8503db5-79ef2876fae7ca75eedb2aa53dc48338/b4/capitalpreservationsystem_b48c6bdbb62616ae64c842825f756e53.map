{"version":3,"names":["cov_2i2u7rvvp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","CapitalPreservationSystem","config","accountSnapshots","drawdownPeriods","emergencyActions","alerts","consecutiveLosses","emergencyModeActive","tradingHalted","constructor","monitorCapitalPreservation","currentBalance","positions","dailyPnL","weeklyPnL","monthlyPnL","snapshot","takeAccountSnapshot","drawdownStatus","calculateDrawdownStatus","lossLimits","checkLossLimits","newAlerts","generateCapitalProtectionAlerts","executeEmergencyActions","tradingAllowed","shouldAllowTrading","unrealizedPnL","reduce","sum","pos","portfolioValue","balance","timestamp","Date","realizedPnL","openPositions","length","push","splice","currentSnapshot","currentDrawdown","maxDrawdown","drawdownDuration","recoveryProgress","emergencyMeasuresActive","riskReductionLevel","peakBalance","Math","max","map","currentDrawdownPeriod","getCurrentDrawdownPeriod","startDate","endDate","troughBalance","maxDrawdownPercent","durationDays","emergencyMeasuresActivated","min","floor","getTime","recoveredAmount","totalDrawdownAmount","d","calculateRiskReductionLevel","find","warningDrawdownThreshold","maxDrawdownThreshold","progress","criticalDrawdownThreshold","now","daily","limit","dailyLossLimit","current","abs","remaining","resetTime","getFullYear","getMonth","getDate","weekly","weeklyLossLimit","getDay","monthly","monthlyLossLimit","id","severity","message","toFixed","recommendedActions","autoExecutedActions","correlationRisk","calculateCorrelationRisk","btcPositions","filter","p","symbol","ethPositions","totalExposure","size","currentPrice","correlatedExposure","actions","action","activateEmergencyStop","haltDailyTrading","reducePositionSizes","description","executedAt","affectedPositions","result","details","reason","positionsCount","resumeTime","reductionLevel","reductionFactor","positionsAffected","calculatePositionSizeAdjustment","basePositionSize","checkRecoveryConditions","recoveryThreshold","resumeNormalOperations","getCapitalPreservationStats","completedDrawdowns","averageDrawdownDuration","maxHistoricalDrawdown","emergencyActivations","recoveryRate","currentStatus","totalDrawdownPeriods","getRecentAlerts","slice","clearOldAlerts","olderThanDays","cutoffDate","alert","updateConfig","newConfig","getConfig","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\capital-preservation-system.ts"],"sourcesContent":["/**\r\n * Capital Preservation System\r\n * \r\n * Implements sophisticated capital protection with:\r\n * - Drawdown monitoring and protection\r\n * - Emergency stop loss mechanisms\r\n * - Position size reduction during adverse conditions\r\n * - Capital protection alerts and notifications\r\n */\r\n\r\nimport { \r\n  DrawdownStatus, \r\n  CapitalProtectionAlert, \r\n  Position, \r\n  RiskMetrics \r\n} from './types.js';\r\n\r\nexport interface CapitalProtectionConfig {\r\n  /** Maximum allowed drawdown before emergency measures (%) */\r\n  maxDrawdownThreshold: number;\r\n  /** Warning drawdown threshold (%) */\r\n  warningDrawdownThreshold: number;\r\n  /** Critical drawdown threshold for emergency stop (%) */\r\n  criticalDrawdownThreshold: number;\r\n  /** Consecutive loss limit before position size reduction */\r\n  consecutiveLossLimit: number;\r\n  /** Position size reduction factor during adverse conditions */\r\n  positionSizeReductionFactor: number;\r\n  /** Recovery threshold to resume normal operations (%) */\r\n  recoveryThreshold: number;\r\n  /** Daily loss limit as percentage of account balance */\r\n  dailyLossLimit: number;\r\n  /** Weekly loss limit as percentage of account balance */\r\n  weeklyLossLimit: number;\r\n  /** Monthly loss limit as percentage of account balance */\r\n  monthlyLossLimit: number;\r\n}\r\n\r\nexport interface AccountSnapshot {\r\n  /** Account balance at snapshot time */\r\n  balance: number;\r\n  /** Timestamp of snapshot */\r\n  timestamp: Date;\r\n  /** Unrealized P&L at snapshot time */\r\n  unrealizedPnL: number;\r\n  /** Realized P&L for the period */\r\n  realizedPnL: number;\r\n  /** Number of open positions */\r\n  openPositions: number;\r\n  /** Total portfolio value */\r\n  portfolioValue: number;\r\n}\r\n\r\nexport interface DrawdownPeriod {\r\n  /** Start date of drawdown */\r\n  startDate: Date;\r\n  /** End date of drawdown (null if ongoing) */\r\n  endDate: Date | null;\r\n  /** Peak balance before drawdown */\r\n  peakBalance: number;\r\n  /** Lowest balance during drawdown */\r\n  troughBalance: number;\r\n  /** Maximum drawdown percentage */\r\n  maxDrawdownPercent: number;\r\n  /** Duration in days */\r\n  durationDays: number;\r\n  /** Recovery progress (0-100%) */\r\n  recoveryProgress: number;\r\n  /** Whether emergency measures were activated */\r\n  emergencyMeasuresActivated: boolean;\r\n}\r\n\r\nexport interface EmergencyAction {\r\n  /** Action type */\r\n  type: 'CLOSE_ALL_POSITIONS' | 'REDUCE_POSITION_SIZES' | 'HALT_TRADING' | 'INCREASE_STOP_LOSSES';\r\n  /** Action description */\r\n  description: string;\r\n  /** Execution timestamp */\r\n  executedAt: Date;\r\n  /** Positions affected */\r\n  affectedPositions: string[];\r\n  /** Result of the action */\r\n  result: 'SUCCESS' | 'PARTIAL' | 'FAILED';\r\n  /** Additional details */\r\n  details: Record<string, any>;\r\n}\r\n\r\nexport interface LossLimits {\r\n  /** Daily loss tracking */\r\n  daily: {\r\n    limit: number;\r\n    current: number;\r\n    remaining: number;\r\n    resetTime: Date;\r\n  };\r\n  /** Weekly loss tracking */\r\n  weekly: {\r\n    limit: number;\r\n    current: number;\r\n    remaining: number;\r\n    resetTime: Date;\r\n  };\r\n  /** Monthly loss tracking */\r\n  monthly: {\r\n    limit: number;\r\n    current: number;\r\n    remaining: number;\r\n    resetTime: Date;\r\n  };\r\n}\r\n\r\nexport class CapitalPreservationSystem {\r\n  private config: CapitalProtectionConfig;\r\n  private accountSnapshots: AccountSnapshot[] = [];\r\n  private drawdownPeriods: DrawdownPeriod[] = [];\r\n  private emergencyActions: EmergencyAction[] = [];\r\n  private alerts: CapitalProtectionAlert[] = [];\r\n  private consecutiveLosses: number = 0;\r\n  private emergencyModeActive: boolean = false;\r\n  private tradingHalted: boolean = false;\r\n\r\n  constructor(config: CapitalProtectionConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Monitor account and update capital preservation status\r\n   */\r\n  async monitorCapitalPreservation(\r\n    currentBalance: number,\r\n    positions: Position[],\r\n    dailyPnL: number,\r\n    weeklyPnL: number,\r\n    monthlyPnL: number\r\n  ): Promise<{\r\n    drawdownStatus: DrawdownStatus;\r\n    alerts: CapitalProtectionAlert[];\r\n    emergencyActions: EmergencyAction[];\r\n    lossLimits: LossLimits;\r\n    tradingAllowed: boolean;\r\n  }> {\r\n    // Take account snapshot\r\n    const snapshot = this.takeAccountSnapshot(currentBalance, positions, dailyPnL);\r\n    \r\n    // Calculate drawdown status\r\n    const drawdownStatus = this.calculateDrawdownStatus(snapshot);\r\n    \r\n    // Check loss limits\r\n    const lossLimits = this.checkLossLimits(currentBalance, dailyPnL, weeklyPnL, monthlyPnL);\r\n    \r\n    // Generate alerts\r\n    const newAlerts = this.generateCapitalProtectionAlerts(drawdownStatus, lossLimits, positions);\r\n    \r\n    // Execute emergency actions if needed\r\n    const emergencyActions = await this.executeEmergencyActions(drawdownStatus, lossLimits, positions);\r\n    \r\n    // Determine if trading should be allowed\r\n    const tradingAllowed = this.shouldAllowTrading(drawdownStatus, lossLimits);\r\n\r\n    return {\r\n      drawdownStatus,\r\n      alerts: newAlerts,\r\n      emergencyActions,\r\n      lossLimits,\r\n      tradingAllowed\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Take snapshot of current account state\r\n   */\r\n  private takeAccountSnapshot(\r\n    currentBalance: number,\r\n    positions: Position[],\r\n    dailyPnL: number\r\n  ): AccountSnapshot {\r\n    const unrealizedPnL = positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\r\n    const portfolioValue = currentBalance + unrealizedPnL;\r\n\r\n    const snapshot: AccountSnapshot = {\r\n      balance: currentBalance,\r\n      timestamp: new Date(),\r\n      unrealizedPnL,\r\n      realizedPnL: dailyPnL,\r\n      openPositions: positions.length,\r\n      portfolioValue\r\n    };\r\n\r\n    this.accountSnapshots.push(snapshot);\r\n\r\n    // Keep only last 1000 snapshots\r\n    if (this.accountSnapshots.length > 1000) {\r\n      this.accountSnapshots.splice(0, this.accountSnapshots.length - 1000);\r\n    }\r\n\r\n    return snapshot;\r\n  }\r\n\r\n  /**\r\n   * Calculate current drawdown status\r\n   */\r\n  private calculateDrawdownStatus(currentSnapshot: AccountSnapshot): DrawdownStatus {\r\n    if (this.accountSnapshots.length < 2) {\r\n      return {\r\n        currentDrawdown: 0,\r\n        maxDrawdown: 0,\r\n        drawdownDuration: 0,\r\n        recoveryProgress: 100,\r\n        emergencyMeasuresActive: this.emergencyModeActive,\r\n        riskReductionLevel: 0\r\n      };\r\n    }\r\n\r\n    // Find peak balance in recent history\r\n    const peakBalance = Math.max(...this.accountSnapshots.map(s => s.portfolioValue));\r\n    const currentBalance = currentSnapshot.portfolioValue;\r\n\r\n    // Calculate current drawdown\r\n    const currentDrawdown = peakBalance > 0 ? ((peakBalance - currentBalance) / peakBalance) * 100 : 0;\r\n\r\n    // Find or update current drawdown period\r\n    let currentDrawdownPeriod = this.getCurrentDrawdownPeriod();\r\n    \r\n    if (currentDrawdown > 0.1) { // 0.1% minimum to consider a drawdown\r\n      if (!currentDrawdownPeriod) {\r\n        // Start new drawdown period\r\n        currentDrawdownPeriod = {\r\n          startDate: currentSnapshot.timestamp,\r\n          endDate: null,\r\n          peakBalance,\r\n          troughBalance: currentBalance,\r\n          maxDrawdownPercent: currentDrawdown,\r\n          durationDays: 0,\r\n          recoveryProgress: 0,\r\n          emergencyMeasuresActivated: false\r\n        };\r\n        this.drawdownPeriods.push(currentDrawdownPeriod);\r\n      } else {\r\n        // Update existing drawdown period\r\n        currentDrawdownPeriod.troughBalance = Math.min(currentDrawdownPeriod.troughBalance, currentBalance);\r\n        currentDrawdownPeriod.maxDrawdownPercent = Math.max(currentDrawdownPeriod.maxDrawdownPercent, currentDrawdown);\r\n        currentDrawdownPeriod.durationDays = Math.floor(\r\n          (currentSnapshot.timestamp.getTime() - currentDrawdownPeriod.startDate.getTime()) / (1000 * 60 * 60 * 24)\r\n        );\r\n      }\r\n    } else if (currentDrawdownPeriod && !currentDrawdownPeriod.endDate) {\r\n      // End current drawdown period\r\n      currentDrawdownPeriod.endDate = currentSnapshot.timestamp;\r\n      currentDrawdownPeriod.recoveryProgress = 100;\r\n    }\r\n\r\n    // Calculate recovery progress\r\n    let recoveryProgress = 100;\r\n    if (currentDrawdownPeriod && !currentDrawdownPeriod.endDate) {\r\n      const recoveredAmount = currentBalance - currentDrawdownPeriod.troughBalance;\r\n      const totalDrawdownAmount = currentDrawdownPeriod.peakBalance - currentDrawdownPeriod.troughBalance;\r\n      recoveryProgress = totalDrawdownAmount > 0 ? (recoveredAmount / totalDrawdownAmount) * 100 : 0;\r\n    }\r\n\r\n    // Calculate maximum historical drawdown\r\n    const maxDrawdown = Math.max(...this.drawdownPeriods.map(d => d.maxDrawdownPercent), currentDrawdown);\r\n\r\n    // Calculate risk reduction level\r\n    const riskReductionLevel = this.calculateRiskReductionLevel(currentDrawdown);\r\n\r\n    return {\r\n      currentDrawdown,\r\n      maxDrawdown,\r\n      drawdownDuration: currentDrawdownPeriod?.durationDays || 0,\r\n      recoveryProgress,\r\n      emergencyMeasuresActive: this.emergencyModeActive,\r\n      riskReductionLevel\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get current active drawdown period\r\n   */\r\n  private getCurrentDrawdownPeriod(): DrawdownPeriod | null {\r\n    return this.drawdownPeriods.find(d => d.endDate === null) || null;\r\n  }\r\n\r\n  /**\r\n   * Calculate risk reduction level based on drawdown\r\n   */\r\n  private calculateRiskReductionLevel(currentDrawdown: number): number {\r\n    if (currentDrawdown < this.config.warningDrawdownThreshold) {\r\n      return 0; // No risk reduction\r\n    } else if (currentDrawdown < this.config.maxDrawdownThreshold) {\r\n      // Linear scaling from 0 to 50% risk reduction\r\n      const progress = (currentDrawdown - this.config.warningDrawdownThreshold) / \r\n                      (this.config.maxDrawdownThreshold - this.config.warningDrawdownThreshold);\r\n      return progress * 50;\r\n    } else if (currentDrawdown < this.config.criticalDrawdownThreshold) {\r\n      // Linear scaling from 50% to 80% risk reduction\r\n      const progress = (currentDrawdown - this.config.maxDrawdownThreshold) / \r\n                      (this.config.criticalDrawdownThreshold - this.config.maxDrawdownThreshold);\r\n      return 50 + (progress * 30);\r\n    } else {\r\n      return 100; // Maximum risk reduction (halt trading)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check loss limits for different time periods\r\n   */\r\n  private checkLossLimits(\r\n    currentBalance: number,\r\n    dailyPnL: number,\r\n    weeklyPnL: number,\r\n    monthlyPnL: number\r\n  ): LossLimits {\r\n    const now = new Date();\r\n\r\n    return {\r\n      daily: {\r\n        limit: currentBalance * (this.config.dailyLossLimit / 100),\r\n        current: Math.abs(Math.min(0, dailyPnL)),\r\n        remaining: Math.max(0, (currentBalance * (this.config.dailyLossLimit / 100)) - Math.abs(Math.min(0, dailyPnL))),\r\n        resetTime: new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1)\r\n      },\r\n      weekly: {\r\n        limit: currentBalance * (this.config.weeklyLossLimit / 100),\r\n        current: Math.abs(Math.min(0, weeklyPnL)),\r\n        remaining: Math.max(0, (currentBalance * (this.config.weeklyLossLimit / 100)) - Math.abs(Math.min(0, weeklyPnL))),\r\n        resetTime: new Date(now.getTime() + (7 - now.getDay()) * 24 * 60 * 60 * 1000)\r\n      },\r\n      monthly: {\r\n        limit: currentBalance * (this.config.monthlyLossLimit / 100),\r\n        current: Math.abs(Math.min(0, monthlyPnL)),\r\n        remaining: Math.max(0, (currentBalance * (this.config.monthlyLossLimit / 100)) - Math.abs(Math.min(0, monthlyPnL))),\r\n        resetTime: new Date(now.getFullYear(), now.getMonth() + 1, 1)\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate capital protection alerts\r\n   */\r\n  private generateCapitalProtectionAlerts(\r\n    drawdownStatus: DrawdownStatus,\r\n    lossLimits: LossLimits,\r\n    positions: Position[]\r\n  ): CapitalProtectionAlert[] {\r\n    const newAlerts: CapitalProtectionAlert[] = [];\r\n\r\n    // Drawdown alerts\r\n    if (drawdownStatus.currentDrawdown >= this.config.criticalDrawdownThreshold) {\r\n      newAlerts.push({\r\n        id: `drawdown-critical-${Date.now()}`,\r\n        type: 'EMERGENCY_STOP',\r\n        severity: 'CRITICAL',\r\n        message: `Critical drawdown of ${drawdownStatus.currentDrawdown.toFixed(2)}% reached. Emergency measures activated.`,\r\n        recommendedActions: ['Halt all trading', 'Close all positions', 'Review risk management'],\r\n        timestamp: new Date(),\r\n        autoExecutedActions: ['Emergency stop activated']\r\n      });\r\n    } else if (drawdownStatus.currentDrawdown >= this.config.maxDrawdownThreshold) {\r\n      newAlerts.push({\r\n        id: `drawdown-high-${Date.now()}`,\r\n        type: 'DRAWDOWN_WARNING',\r\n        severity: 'HIGH',\r\n        message: `High drawdown of ${drawdownStatus.currentDrawdown.toFixed(2)}% detected. Risk reduction measures active.`,\r\n        recommendedActions: ['Reduce position sizes', 'Tighten stop losses', 'Review strategy performance'],\r\n        timestamp: new Date(),\r\n        autoExecutedActions: [`Risk reduction level: ${drawdownStatus.riskReductionLevel.toFixed(0)}%`]\r\n      });\r\n    } else if (drawdownStatus.currentDrawdown >= this.config.warningDrawdownThreshold) {\r\n      newAlerts.push({\r\n        id: `drawdown-warning-${Date.now()}`,\r\n        type: 'DRAWDOWN_WARNING',\r\n        severity: 'MEDIUM',\r\n        message: `Drawdown warning: ${drawdownStatus.currentDrawdown.toFixed(2)}% drawdown detected.`,\r\n        recommendedActions: ['Monitor closely', 'Consider reducing risk'],\r\n        timestamp: new Date(),\r\n        autoExecutedActions: []\r\n      });\r\n    }\r\n\r\n    // Loss limit alerts\r\n    if (lossLimits.daily.remaining <= 0) {\r\n      newAlerts.push({\r\n        id: `daily-limit-${Date.now()}`,\r\n        type: 'EMERGENCY_STOP',\r\n        severity: 'CRITICAL',\r\n        message: `Daily loss limit of ${lossLimits.daily.limit.toFixed(2)} exceeded.`,\r\n        recommendedActions: ['Halt trading for today', 'Review trading strategy'],\r\n        timestamp: new Date(),\r\n        autoExecutedActions: ['Daily trading halted']\r\n      });\r\n    }\r\n\r\n    if (lossLimits.weekly.remaining <= lossLimits.weekly.limit * 0.1) {\r\n      newAlerts.push({\r\n        id: `weekly-limit-warning-${Date.now()}`,\r\n        type: 'DRAWDOWN_WARNING',\r\n        severity: 'HIGH',\r\n        message: `Weekly loss limit nearly reached: ${lossLimits.weekly.current.toFixed(2)} of ${lossLimits.weekly.limit.toFixed(2)}`,\r\n        recommendedActions: ['Reduce trading activity', 'Review weekly performance'],\r\n        timestamp: new Date(),\r\n        autoExecutedActions: []\r\n      });\r\n    }\r\n\r\n    // Correlation risk alerts\r\n    const correlationRisk = this.calculateCorrelationRisk(positions);\r\n    if (correlationRisk > 0.8) {\r\n      newAlerts.push({\r\n        id: `correlation-risk-${Date.now()}`,\r\n        type: 'CORRELATION_RISK',\r\n        severity: 'MEDIUM',\r\n        message: `High correlation risk detected: ${(correlationRisk * 100).toFixed(0)}%`,\r\n        recommendedActions: ['Diversify positions', 'Reduce correlated exposures'],\r\n        timestamp: new Date(),\r\n        autoExecutedActions: []\r\n      });\r\n    }\r\n\r\n    this.alerts.push(...newAlerts);\r\n    return newAlerts;\r\n  }\r\n\r\n  /**\r\n   * Calculate correlation risk across positions\r\n   */\r\n  private calculateCorrelationRisk(positions: Position[]): number {\r\n    if (positions.length <= 1) return 0;\r\n\r\n    // For crypto, BTC and ETH have high correlation\r\n    const btcPositions = positions.filter(p => p.symbol === 'BTC');\r\n    const ethPositions = positions.filter(p => p.symbol === 'ETH');\r\n\r\n    if (btcPositions.length > 0 && ethPositions.length > 0) {\r\n      const totalExposure = positions.reduce((sum, p) => sum + Math.abs(p.size * p.currentPrice), 0);\r\n      const correlatedExposure = [...btcPositions, ...ethPositions]\r\n        .reduce((sum, p) => sum + Math.abs(p.size * p.currentPrice), 0);\r\n      \r\n      return correlatedExposure / totalExposure;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Execute emergency actions if needed\r\n   */\r\n  private async executeEmergencyActions(\r\n    drawdownStatus: DrawdownStatus,\r\n    lossLimits: LossLimits,\r\n    positions: Position[]\r\n  ): Promise<EmergencyAction[]> {\r\n    const actions: EmergencyAction[] = [];\r\n\r\n    // Critical drawdown - emergency stop\r\n    if (drawdownStatus.currentDrawdown >= this.config.criticalDrawdownThreshold && !this.emergencyModeActive) {\r\n      const action = await this.activateEmergencyStop(positions);\r\n      actions.push(action);\r\n    }\r\n\r\n    // Daily loss limit exceeded - halt trading\r\n    if (lossLimits.daily.remaining <= 0 && !this.tradingHalted) {\r\n      const action = await this.haltDailyTrading();\r\n      actions.push(action);\r\n    }\r\n\r\n    // High drawdown - reduce position sizes\r\n    if (drawdownStatus.currentDrawdown >= this.config.maxDrawdownThreshold && \r\n        drawdownStatus.riskReductionLevel > 0) {\r\n      const action = await this.reducePositionSizes(positions, drawdownStatus.riskReductionLevel);\r\n      actions.push(action);\r\n    }\r\n\r\n    this.emergencyActions.push(...actions);\r\n    return actions;\r\n  }\r\n\r\n  /**\r\n   * Activate emergency stop\r\n   */\r\n  private async activateEmergencyStop(positions: Position[]): Promise<EmergencyAction> {\r\n    this.emergencyModeActive = true;\r\n    this.tradingHalted = true;\r\n\r\n    // Mark current drawdown period as having emergency measures\r\n    const currentDrawdown = this.getCurrentDrawdownPeriod();\r\n    if (currentDrawdown) {\r\n      currentDrawdown.emergencyMeasuresActivated = true;\r\n    }\r\n\r\n    return {\r\n      type: 'HALT_TRADING',\r\n      description: 'Emergency stop activated due to critical drawdown',\r\n      executedAt: new Date(),\r\n      affectedPositions: positions.map(p => p.id),\r\n      result: 'SUCCESS',\r\n      details: {\r\n        reason: 'Critical drawdown threshold exceeded',\r\n        positionsCount: positions.length,\r\n        emergencyModeActive: true\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Halt daily trading\r\n   */\r\n  private async haltDailyTrading(): Promise<EmergencyAction> {\r\n    this.tradingHalted = true;\r\n\r\n    return {\r\n      type: 'HALT_TRADING',\r\n      description: 'Daily trading halted due to loss limit exceeded',\r\n      executedAt: new Date(),\r\n      affectedPositions: [],\r\n      result: 'SUCCESS',\r\n      details: {\r\n        reason: 'Daily loss limit exceeded',\r\n        resumeTime: new Date(Date.now() + 24 * 60 * 60 * 1000) // Resume tomorrow\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reduce position sizes\r\n   */\r\n  private async reducePositionSizes(positions: Position[], reductionLevel: number): Promise<EmergencyAction> {\r\n    const reductionFactor = 1 - (reductionLevel / 100);\r\n    \r\n    return {\r\n      type: 'REDUCE_POSITION_SIZES',\r\n      description: `Position sizes reduced by ${reductionLevel.toFixed(0)}% due to drawdown`,\r\n      executedAt: new Date(),\r\n      affectedPositions: positions.map(p => p.id),\r\n      result: 'SUCCESS',\r\n      details: {\r\n        reductionLevel,\r\n        reductionFactor,\r\n        positionsAffected: positions.length\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determine if trading should be allowed\r\n   */\r\n  private shouldAllowTrading(drawdownStatus: DrawdownStatus, lossLimits: LossLimits): boolean {\r\n    // Trading halted by emergency measures\r\n    if (this.tradingHalted || this.emergencyModeActive) {\r\n      return false;\r\n    }\r\n\r\n    // Critical drawdown\r\n    if (drawdownStatus.currentDrawdown >= this.config.criticalDrawdownThreshold) {\r\n      return false;\r\n    }\r\n\r\n    // Daily loss limit exceeded\r\n    if (lossLimits.daily.remaining <= 0) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Calculate recommended position size adjustment\r\n   */\r\n  calculatePositionSizeAdjustment(basePositionSize: number, drawdownStatus: DrawdownStatus): number {\r\n    if (drawdownStatus.riskReductionLevel === 0) {\r\n      return basePositionSize;\r\n    }\r\n\r\n    const reductionFactor = 1 - (drawdownStatus.riskReductionLevel / 100);\r\n    return basePositionSize * reductionFactor;\r\n  }\r\n\r\n  /**\r\n   * Check if recovery conditions are met to resume normal operations\r\n   */\r\n  checkRecoveryConditions(drawdownStatus: DrawdownStatus): boolean {\r\n    if (!this.emergencyModeActive) {\r\n      return true;\r\n    }\r\n\r\n    // Recovery conditions:\r\n    // 1. Drawdown below recovery threshold\r\n    // 2. Recovery progress above threshold\r\n    return drawdownStatus.currentDrawdown < this.config.recoveryThreshold &&\r\n           drawdownStatus.recoveryProgress > 80;\r\n  }\r\n\r\n  /**\r\n   * Resume normal operations after recovery\r\n   */\r\n  resumeNormalOperations(): void {\r\n    this.emergencyModeActive = false;\r\n    this.tradingHalted = false;\r\n    this.consecutiveLosses = 0;\r\n\r\n    // Add recovery alert\r\n    this.alerts.push({\r\n      id: `recovery-${Date.now()}`,\r\n      type: 'DRAWDOWN_WARNING',\r\n      severity: 'LOW',\r\n      message: 'Recovery conditions met. Normal operations resumed.',\r\n      recommendedActions: ['Monitor performance closely'],\r\n      timestamp: new Date(),\r\n      autoExecutedActions: ['Emergency mode deactivated', 'Trading resumed']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get capital preservation statistics\r\n   */\r\n  getCapitalPreservationStats(): {\r\n    totalDrawdownPeriods: number;\r\n    averageDrawdownDuration: number;\r\n    maxHistoricalDrawdown: number;\r\n    emergencyActivations: number;\r\n    recoveryRate: number;\r\n    currentStatus: string;\r\n  } {\r\n    const completedDrawdowns = this.drawdownPeriods.filter(d => d.endDate !== null);\r\n    const averageDrawdownDuration = completedDrawdowns.length > 0\r\n      ? completedDrawdowns.reduce((sum, d) => sum + d.durationDays, 0) / completedDrawdowns.length\r\n      : 0;\r\n\r\n    const maxHistoricalDrawdown = Math.max(...this.drawdownPeriods.map(d => d.maxDrawdownPercent), 0);\r\n    const emergencyActivations = this.drawdownPeriods.filter(d => d.emergencyMeasuresActivated).length;\r\n    const recoveryRate = completedDrawdowns.length > 0 ? (completedDrawdowns.length / this.drawdownPeriods.length) * 100 : 100;\r\n\r\n    let currentStatus = 'NORMAL';\r\n    if (this.emergencyModeActive) {\r\n      currentStatus = 'EMERGENCY';\r\n    } else if (this.tradingHalted) {\r\n      currentStatus = 'HALTED';\r\n    }\r\n\r\n    return {\r\n      totalDrawdownPeriods: this.drawdownPeriods.length,\r\n      averageDrawdownDuration,\r\n      maxHistoricalDrawdown,\r\n      emergencyActivations,\r\n      recoveryRate,\r\n      currentStatus\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get recent alerts\r\n   */\r\n  getRecentAlerts(limit: number = 10): CapitalProtectionAlert[] {\r\n    return this.alerts.slice(-limit);\r\n  }\r\n\r\n  /**\r\n   * Clear old alerts\r\n   */\r\n  clearOldAlerts(olderThanDays: number = 7): void {\r\n    const cutoffDate = new Date(Date.now() - olderThanDays * 24 * 60 * 60 * 1000);\r\n    this.alerts = this.alerts.filter(alert => alert.timestamp > cutoffDate);\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  updateConfig(newConfig: Partial<CapitalProtectionConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   */\r\n  getConfig(): CapitalProtectionConfig {\r\n    return { ...this.config };\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}