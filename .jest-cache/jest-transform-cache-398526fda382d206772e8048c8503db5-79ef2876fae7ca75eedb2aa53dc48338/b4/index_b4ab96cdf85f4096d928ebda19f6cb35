a4150b4c2d2c806f1ad7a6b754658381
"use strict";

/**
 * =============================================================================
 * RATE LIMITING SYSTEM - MAIN EXPORTS
 * =============================================================================
 *
 * This module exports all rate limiting components for the AI Crypto Trading
 * Agent with comprehensive API, AI/LLM, and notification rate limiting.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_aol513xon() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\rate-limiting\\index.ts";
  var hash = "e6e152eb1ba3c6cacd7eec21f10dd5243f4337fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\rate-limiting\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 405
        }
      },
      "2": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 139
        }
      },
      "4": {
        start: {
          line: 19,
          column: 92
        },
        end: {
          line: 19,
          column: 133
        }
      },
      "5": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 133
        }
      },
      "6": {
        start: {
          line: 20,
          column: 89
        },
        end: {
          line: 20,
          column: 127
        }
      },
      "7": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "8": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 135
        }
      },
      "9": {
        start: {
          line: 23,
          column: 88
        },
        end: {
          line: 23,
          column: 129
        }
      },
      "10": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 147
        }
      },
      "11": {
        start: {
          line: 24,
          column: 94
        },
        end: {
          line: 24,
          column: 141
        }
      },
      "12": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 143
        }
      },
      "13": {
        start: {
          line: 25,
          column: 92
        },
        end: {
          line: 25,
          column: 137
        }
      },
      "14": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 145
        }
      },
      "15": {
        start: {
          line: 26,
          column: 93
        },
        end: {
          line: 26,
          column: 139
        }
      },
      "16": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "17": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 132
        }
      },
      "18": {
        start: {
          line: 29,
          column: 87
        },
        end: {
          line: 29,
          column: 126
        }
      },
      "19": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 128
        }
      },
      "20": {
        start: {
          line: 30,
          column: 85
        },
        end: {
          line: 30,
          column: 122
        }
      },
      "21": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "22": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 162
        }
      },
      "23": {
        start: {
          line: 33,
          column: 97
        },
        end: {
          line: 33,
          column: 156
        }
      },
      "24": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 148
        }
      },
      "25": {
        start: {
          line: 34,
          column: 90
        },
        end: {
          line: 34,
          column: 142
        }
      },
      "26": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 156
        }
      },
      "27": {
        start: {
          line: 35,
          column: 94
        },
        end: {
          line: 35,
          column: 150
        }
      },
      "28": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 64
        }
      },
      "29": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 150
        }
      },
      "30": {
        start: {
          line: 38,
          column: 93
        },
        end: {
          line: 38,
          column: 144
        }
      },
      "31": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 48
        }
      },
      "32": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "33": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 44,
          column: 54
        }
      },
      "34": {
        start: {
          line: 45,
          column: 36
        },
        end: {
          line: 45,
          column: 74
        }
      },
      "35": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "36": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "37": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "38": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 35
        }
      },
      "39": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 74
        }
      },
      "40": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "41": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 93
        }
      },
      "42": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 105
        }
      },
      "43": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 101
        }
      },
      "44": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 103
        }
      },
      "45": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 90
        }
      },
      "46": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 120
        }
      },
      "47": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 128
        }
      },
      "48": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "49": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 91
        }
      },
      "50": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "51": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "52": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "53": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 55
        }
      },
      "54": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 56
        }
      },
      "55": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "56": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 60
        }
      },
      "57": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 56
        }
      },
      "58": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 38
        }
      },
      "59": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 85
        }
      },
      "60": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 90
        }
      },
      "61": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "62": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 41
        }
      },
      "63": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 39
        }
      },
      "64": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 40
        }
      },
      "65": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 34
        }
      },
      "66": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 44
        }
      },
      "67": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 40
        }
      },
      "68": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 39
        }
      },
      "69": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "70": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 69
        }
      },
      "71": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "72": {
        start: {
          line: 153,
          column: 23
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "73": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "74": {
        start: {
          line: 166,
          column: 30
        },
        end: {
          line: 166,
          column: 69
        }
      },
      "75": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 71
        }
      },
      "76": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 63
        }
      },
      "77": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 66
        }
      },
      "78": {
        start: {
          line: 172,
          column: 38
        },
        end: {
          line: 172,
          column: 82
        }
      },
      "79": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 86
        }
      },
      "80": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 93
        }
      },
      "81": {
        start: {
          line: 175,
          column: 77
        },
        end: {
          line: 175,
          column: 91
        }
      },
      "82": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 83
        }
      },
      "83": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 37
        }
      },
      "84": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 22
        }
      },
      "85": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 74
        }
      },
      "86": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "87": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 54
        }
      },
      "88": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 58
        }
      },
      "89": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 48
        }
      },
      "90": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "91": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 39
        }
      },
      "92": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 79
        }
      },
      "93": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 91
        }
      },
      "94": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 24
        }
      },
      "95": {
        start: {
          line: 204,
          column: 0
        },
        end: {
          line: 204,
          column: 50
        }
      },
      "96": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 206,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 78
          },
          end: {
            line: 19,
            column: 79
          }
        },
        loc: {
          start: {
            line: 19,
            column: 90
          },
          end: {
            line: 19,
            column: 135
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 75
          },
          end: {
            line: 20,
            column: 76
          }
        },
        loc: {
          start: {
            line: 20,
            column: 87
          },
          end: {
            line: 20,
            column: 129
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 74
          },
          end: {
            line: 23,
            column: 75
          }
        },
        loc: {
          start: {
            line: 23,
            column: 86
          },
          end: {
            line: 23,
            column: 131
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 80
          },
          end: {
            line: 24,
            column: 81
          }
        },
        loc: {
          start: {
            line: 24,
            column: 92
          },
          end: {
            line: 24,
            column: 143
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 78
          },
          end: {
            line: 25,
            column: 79
          }
        },
        loc: {
          start: {
            line: 25,
            column: 90
          },
          end: {
            line: 25,
            column: 139
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 79
          },
          end: {
            line: 26,
            column: 80
          }
        },
        loc: {
          start: {
            line: 26,
            column: 91
          },
          end: {
            line: 26,
            column: 141
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 73
          },
          end: {
            line: 29,
            column: 74
          }
        },
        loc: {
          start: {
            line: 29,
            column: 85
          },
          end: {
            line: 29,
            column: 128
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 71
          },
          end: {
            line: 30,
            column: 72
          }
        },
        loc: {
          start: {
            line: 30,
            column: 83
          },
          end: {
            line: 30,
            column: 124
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 83
          },
          end: {
            line: 33,
            column: 84
          }
        },
        loc: {
          start: {
            line: 33,
            column: 95
          },
          end: {
            line: 33,
            column: 158
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 34,
            column: 76
          },
          end: {
            line: 34,
            column: 77
          }
        },
        loc: {
          start: {
            line: 34,
            column: 88
          },
          end: {
            line: 34,
            column: 144
          }
        },
        line: 34
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 35,
            column: 80
          },
          end: {
            line: 35,
            column: 81
          }
        },
        loc: {
          start: {
            line: 35,
            column: 92
          },
          end: {
            line: 35,
            column: 152
          }
        },
        line: 35
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 38,
            column: 79
          },
          end: {
            line: 38,
            column: 80
          }
        },
        loc: {
          start: {
            line: 38,
            column: 91
          },
          end: {
            line: 38,
            column: 146
          }
        },
        line: 38
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 18
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 67
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 97
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 103
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 109
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 115
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 121
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 127
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 39
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 133
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 152
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 175,
            column: 67
          },
          end: {
            line: 175,
            column: 68
          }
        },
        loc: {
          start: {
            line: 175,
            column: 77
          },
          end: {
            line: 175,
            column: 91
          }
        },
        line: 175
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 21
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 186
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e6e152eb1ba3c6cacd7eec21f10dd5243f4337fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_aol513xon = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_aol513xon();
cov_aol513xon().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_aol513xon().s[1]++;
exports.rateLimitingManager = exports.RateLimitingManager = exports.AdaptiveRateLimiter = exports.NotificationPriority = exports.NotificationType = exports.NotificationRateLimiter = exports.AIModelType = exports.AIRateLimiter = exports.DatabaseRateLimiter = exports.NewsAPIRateLimiter = exports.GateIOAPIRateLimiter = exports.APIRateLimiter = exports.RateLimiterType = exports.RateLimitingSystem = void 0;
// Core rate limiting system
var rate_limiter_1 =
/* istanbul ignore next */
(cov_aol513xon().s[2]++, require("./rate-limiter"));
/* istanbul ignore next */
cov_aol513xon().s[3]++;
Object.defineProperty(exports, "RateLimitingSystem", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[0]++;
    cov_aol513xon().s[4]++;
    return rate_limiter_1.RateLimitingSystem;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[5]++;
Object.defineProperty(exports, "RateLimiterType", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[1]++;
    cov_aol513xon().s[6]++;
    return rate_limiter_1.RateLimiterType;
  }
});
// API rate limiting
var api_rate_limiter_1 =
/* istanbul ignore next */
(cov_aol513xon().s[7]++, require("./api-rate-limiter"));
/* istanbul ignore next */
cov_aol513xon().s[8]++;
Object.defineProperty(exports, "APIRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[2]++;
    cov_aol513xon().s[9]++;
    return api_rate_limiter_1.APIRateLimiter;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[10]++;
Object.defineProperty(exports, "GateIOAPIRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[3]++;
    cov_aol513xon().s[11]++;
    return api_rate_limiter_1.GateIOAPIRateLimiter;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[12]++;
Object.defineProperty(exports, "NewsAPIRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[4]++;
    cov_aol513xon().s[13]++;
    return api_rate_limiter_1.NewsAPIRateLimiter;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[14]++;
Object.defineProperty(exports, "DatabaseRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[5]++;
    cov_aol513xon().s[15]++;
    return api_rate_limiter_1.DatabaseRateLimiter;
  }
});
// AI/LLM rate limiting
var ai_rate_limiter_1 =
/* istanbul ignore next */
(cov_aol513xon().s[16]++, require("./ai-rate-limiter"));
/* istanbul ignore next */
cov_aol513xon().s[17]++;
Object.defineProperty(exports, "AIRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[6]++;
    cov_aol513xon().s[18]++;
    return ai_rate_limiter_1.AIRateLimiter;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[19]++;
Object.defineProperty(exports, "AIModelType", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[7]++;
    cov_aol513xon().s[20]++;
    return ai_rate_limiter_1.AIModelType;
  }
});
// Notification rate limiting
var notification_rate_limiter_1 =
/* istanbul ignore next */
(cov_aol513xon().s[21]++, require("./notification-rate-limiter"));
/* istanbul ignore next */
cov_aol513xon().s[22]++;
Object.defineProperty(exports, "NotificationRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[8]++;
    cov_aol513xon().s[23]++;
    return notification_rate_limiter_1.NotificationRateLimiter;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[24]++;
Object.defineProperty(exports, "NotificationType", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[9]++;
    cov_aol513xon().s[25]++;
    return notification_rate_limiter_1.NotificationType;
  }
});
/* istanbul ignore next */
cov_aol513xon().s[26]++;
Object.defineProperty(exports, "NotificationPriority", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[10]++;
    cov_aol513xon().s[27]++;
    return notification_rate_limiter_1.NotificationPriority;
  }
});
// Adaptive rate limiting
var adaptive_rate_limiter_1 =
/* istanbul ignore next */
(cov_aol513xon().s[28]++, require("./adaptive-rate-limiter"));
/* istanbul ignore next */
cov_aol513xon().s[29]++;
Object.defineProperty(exports, "AdaptiveRateLimiter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_aol513xon().f[11]++;
    cov_aol513xon().s[30]++;
    return adaptive_rate_limiter_1.AdaptiveRateLimiter;
  }
});
/**
 * Rate limiting manager that coordinates all rate limiting systems
 */
const rate_limiter_2 =
/* istanbul ignore next */
(cov_aol513xon().s[31]++, require("./rate-limiter"));
const api_rate_limiter_2 =
/* istanbul ignore next */
(cov_aol513xon().s[32]++, require("./api-rate-limiter"));
const ai_rate_limiter_2 =
/* istanbul ignore next */
(cov_aol513xon().s[33]++, require("./ai-rate-limiter"));
const notification_rate_limiter_2 =
/* istanbul ignore next */
(cov_aol513xon().s[34]++, require("./notification-rate-limiter"));
const adaptive_rate_limiter_2 =
/* istanbul ignore next */
(cov_aol513xon().s[35]++, require("./adaptive-rate-limiter"));
const system_monitor_1 =
/* istanbul ignore next */
(cov_aol513xon().s[36]++, require("@/infrastructure/system-monitor"));
const logger_1 =
/* istanbul ignore next */
(cov_aol513xon().s[37]++, require("@/core/logging/logger"));
class RateLimitingManager {
  constructor() {
    /* istanbul ignore next */
    cov_aol513xon().f[12]++;
    cov_aol513xon().s[38]++;
    this.isInitialized = false;
    // Initialize core system
    /* istanbul ignore next */
    cov_aol513xon().s[39]++;
    this.rateLimitingSystem = new rate_limiter_2.RateLimitingSystem();
    /* istanbul ignore next */
    cov_aol513xon().s[40]++;
    this.systemMonitor = new system_monitor_1.SystemMonitor();
    // Initialize specialized rate limiters
    /* istanbul ignore next */
    cov_aol513xon().s[41]++;
    this.apiRateLimiter = new api_rate_limiter_2.APIRateLimiter(this.rateLimitingSystem);
    /* istanbul ignore next */
    cov_aol513xon().s[42]++;
    this.gateIOAPIRateLimiter = new api_rate_limiter_2.GateIOAPIRateLimiter(this.rateLimitingSystem);
    /* istanbul ignore next */
    cov_aol513xon().s[43]++;
    this.newsAPIRateLimiter = new api_rate_limiter_2.NewsAPIRateLimiter(this.rateLimitingSystem);
    /* istanbul ignore next */
    cov_aol513xon().s[44]++;
    this.databaseRateLimiter = new api_rate_limiter_2.DatabaseRateLimiter(this.rateLimitingSystem);
    /* istanbul ignore next */
    cov_aol513xon().s[45]++;
    this.aiRateLimiter = new ai_rate_limiter_2.AIRateLimiter(this.rateLimitingSystem);
    /* istanbul ignore next */
    cov_aol513xon().s[46]++;
    this.notificationRateLimiter = new notification_rate_limiter_2.NotificationRateLimiter(this.rateLimitingSystem);
    /* istanbul ignore next */
    cov_aol513xon().s[47]++;
    this.adaptiveRateLimiter = new adaptive_rate_limiter_2.AdaptiveRateLimiter(this.rateLimitingSystem, this.systemMonitor);
  }
  /**
   * Initialize all rate limiting systems
   */
  async initialize() {
    /* istanbul ignore next */
    cov_aol513xon().f[13]++;
    cov_aol513xon().s[48]++;
    try {
      /* istanbul ignore next */
      cov_aol513xon().s[49]++;
      logger_1.logger.info('🚦 Initializing comprehensive rate limiting manager...');
      // Initialize core system first
      /* istanbul ignore next */
      cov_aol513xon().s[50]++;
      await this.rateLimitingSystem.initialize();
      // Initialize specialized rate limiters
      /* istanbul ignore next */
      cov_aol513xon().s[51]++;
      await this.apiRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[52]++;
      await this.gateIOAPIRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[53]++;
      await this.newsAPIRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[54]++;
      await this.databaseRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[55]++;
      await this.aiRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[56]++;
      await this.notificationRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[57]++;
      await this.adaptiveRateLimiter.initialize();
      /* istanbul ignore next */
      cov_aol513xon().s[58]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_aol513xon().s[59]++;
      logger_1.logger.info('✅ Rate limiting manager initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_aol513xon().s[60]++;
      logger_1.logger.error('❌ Failed to initialize rate limiting manager:', error);
      /* istanbul ignore next */
      cov_aol513xon().s[61]++;
      throw error;
    }
  }
  /**
   * Get Gate.io API rate limiter
   */
  getGateIOAPIRateLimiter() {
    /* istanbul ignore next */
    cov_aol513xon().f[14]++;
    cov_aol513xon().s[62]++;
    return this.gateIOAPIRateLimiter;
  }
  /**
   * Get news API rate limiter
   */
  getNewsAPIRateLimiter() {
    /* istanbul ignore next */
    cov_aol513xon().f[15]++;
    cov_aol513xon().s[63]++;
    return this.newsAPIRateLimiter;
  }
  /**
   * Get database rate limiter
   */
  getDatabaseRateLimiter() {
    /* istanbul ignore next */
    cov_aol513xon().f[16]++;
    cov_aol513xon().s[64]++;
    return this.databaseRateLimiter;
  }
  /**
   * Get AI rate limiter
   */
  getAIRateLimiter() {
    /* istanbul ignore next */
    cov_aol513xon().f[17]++;
    cov_aol513xon().s[65]++;
    return this.aiRateLimiter;
  }
  /**
   * Get notification rate limiter
   */
  getNotificationRateLimiter() {
    /* istanbul ignore next */
    cov_aol513xon().f[18]++;
    cov_aol513xon().s[66]++;
    return this.notificationRateLimiter;
  }
  /**
   * Get adaptive rate limiter
   */
  getAdaptiveRateLimiter() {
    /* istanbul ignore next */
    cov_aol513xon().f[19]++;
    cov_aol513xon().s[67]++;
    return this.adaptiveRateLimiter;
  }
  /**
   * Get core rate limiting system
   */
  getRateLimitingSystem() {
    /* istanbul ignore next */
    cov_aol513xon().f[20]++;
    cov_aol513xon().s[68]++;
    return this.rateLimitingSystem;
  }
  /**
   * Get comprehensive statistics from all rate limiters
   */
  async getComprehensiveStatistics() {
    /* istanbul ignore next */
    cov_aol513xon().f[21]++;
    cov_aol513xon().s[69]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_aol513xon().b[0][0]++;
      cov_aol513xon().s[70]++;
      throw new Error('Rate limiting manager not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_aol513xon().b[0][1]++;
    }
    cov_aol513xon().s[71]++;
    return {
      timestamp: new Date(),
      core: this.rateLimitingSystem.getStatistics(),
      ai: this.aiRateLimiter.getModelMetrics(),
      notifications: this.notificationRateLimiter.getStatistics(),
      adaptive: this.adaptiveRateLimiter.getAdaptationStatistics(),
      queueStatus: {
        ai: this.aiRateLimiter.getQueueStatus(),
        notifications: this.notificationRateLimiter.getStatistics()
      }
    };
  }
  /**
   * Health check for all rate limiting systems
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_aol513xon().f[22]++;
    const health =
    /* istanbul ignore next */
    (cov_aol513xon().s[72]++, {
      isHealthy: true,
      systems: {
        core: {
          initialized: this.isInitialized,
          healthy: true
        },
        api: {
          initialized: true,
          healthy: true
        },
        ai: {
          initialized: true,
          healthy: true
        },
        notifications: {
          initialized: true,
          healthy: true
        },
        adaptive: {
          initialized: true,
          healthy: true
        }
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_aol513xon().s[73]++;
    try {
      // Check core system
      const coreStats =
      /* istanbul ignore next */
      (cov_aol513xon().s[74]++, this.rateLimitingSystem.getStatistics());
      /* istanbul ignore next */
      cov_aol513xon().s[75]++;
      health.systems.core.healthy = coreStats.activeLimiters > 0;
      // Check AI system
      const aiQueue =
      /* istanbul ignore next */
      (cov_aol513xon().s[76]++, this.aiRateLimiter.getQueueStatus());
      /* istanbul ignore next */
      cov_aol513xon().s[77]++;
      health.systems.ai.healthy = aiQueue.queueLength < 100; // Arbitrary threshold
      // Check notification system
      const notificationStats =
      /* istanbul ignore next */
      (cov_aol513xon().s[78]++, this.notificationRateLimiter.getStatistics());
      /* istanbul ignore next */
      cov_aol513xon().s[79]++;
      health.systems.notifications.healthy = notificationStats.queueLength < 50;
      // Overall health
      /* istanbul ignore next */
      cov_aol513xon().s[80]++;
      health.isHealthy = Object.values(health.systems).every(system => {
        /* istanbul ignore next */
        cov_aol513xon().f[23]++;
        cov_aol513xon().s[81]++;
        return system.healthy;
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_aol513xon().s[82]++;
      logger_1.logger.error('❌ Error in rate limiting health check:', error);
      /* istanbul ignore next */
      cov_aol513xon().s[83]++;
      health.isHealthy = false;
    }
    /* istanbul ignore next */
    cov_aol513xon().s[84]++;
    return health;
  }
  /**
   * Shutdown all rate limiting systems
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_aol513xon().f[24]++;
    cov_aol513xon().s[85]++;
    logger_1.logger.info('🛑 Shutting down rate limiting manager...');
    /* istanbul ignore next */
    cov_aol513xon().s[86]++;
    try {
      /* istanbul ignore next */
      cov_aol513xon().s[87]++;
      // Shutdown in reverse order
      await this.adaptiveRateLimiter.shutdown();
      /* istanbul ignore next */
      cov_aol513xon().s[88]++;
      await this.notificationRateLimiter.shutdown();
      /* istanbul ignore next */
      cov_aol513xon().s[89]++;
      await this.aiRateLimiter.shutdown();
      // API rate limiters don't need explicit shutdown
      /* istanbul ignore next */
      cov_aol513xon().s[90]++;
      await this.rateLimitingSystem.shutdown();
      /* istanbul ignore next */
      cov_aol513xon().s[91]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_aol513xon().s[92]++;
      logger_1.logger.info('✅ Rate limiting manager shutdown completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_aol513xon().s[93]++;
      logger_1.logger.error('❌ Error during rate limiting manager shutdown:', error);
      /* istanbul ignore next */
      cov_aol513xon().s[94]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_aol513xon().s[95]++;
exports.RateLimitingManager = RateLimitingManager;
// Export singleton instance
/* istanbul ignore next */
cov_aol513xon().s[96]++;
exports.rateLimitingManager = new RateLimitingManager();