8c2a5a0d331bc21a1b2d7834f8495907
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - GRACEFUL SHUTDOWN HANDLER
 * =============================================================================
 *
 * This module provides comprehensive graceful shutdown capabilities for the
 * AI crypto trading agent. It ensures all trading positions are safely closed,
 * data is preserved, and system resources are properly cleaned up.
 *
 * CRITICAL SAFETY NOTICE:
 * This system handles the safe termination of trading operations. Improper
 * shutdown could result in open positions, data loss, or financial exposure.
 * All shutdown procedures are logged and audited.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1ejy8xhn1q() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\shutdown\\graceful-shutdown.ts";
  var hash = "21b0a47bdd37933ce706e5a52222c6daf815af19";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\shutdown\\graceful-shutdown.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "2": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "5": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "6": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "7": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "8": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "9": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 67
        }
      },
      "10": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "11": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "12": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "13": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 97
        }
      },
      "14": {
        start: {
          line: 71,
          column: 32
        },
        end: {
          line: 71,
          column: 88
        }
      },
      "15": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "16": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "17": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 34
        }
      },
      "18": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "19": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 103
        }
      },
      "20": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 50
        }
      },
      "21": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "22": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 68
        }
      },
      "23": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 48
        }
      },
      "24": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "25": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 49
        }
      },
      "26": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "27": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 90
        }
      },
      "28": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 91
        }
      },
      "29": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "30": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 22
        }
      },
      "31": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 49
        }
      },
      "32": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 85
        }
      },
      "33": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 83
        }
      },
      "34": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "35": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "36": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 64
        }
      },
      "37": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 44
        }
      },
      "38": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 91
        }
      },
      "39": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 83
        }
      },
      "40": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 22
        }
      },
      "41": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "42": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 71
        }
      },
      "43": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 49
        }
      },
      "44": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "45": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 77
        }
      },
      "46": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 67
        }
      },
      "47": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "48": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 76
        }
      },
      "49": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 54
        }
      },
      "50": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "51": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 82
        }
      },
      "52": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 61
        }
      },
      "53": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 72
        }
      },
      "54": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 50
        }
      },
      "55": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 61
        }
      },
      "56": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 51
        }
      },
      "57": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 77
        }
      },
      "58": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 70
        }
      },
      "59": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 85
        }
      },
      "60": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 20
        }
      },
      "61": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "62": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 50
        }
      },
      "63": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "64": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "65": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 91
        }
      },
      "66": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 76
        }
      },
      "67": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 96
        }
      },
      "68": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "69": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 83
        }
      },
      "70": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "71": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "72": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 81
        }
      },
      "73": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 76
        }
      },
      "74": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 96
        }
      },
      "75": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 72
        }
      },
      "76": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 83
        }
      },
      "77": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 73
        }
      },
      "78": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 60
        }
      },
      "79": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "80": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 73
        }
      },
      "81": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 229,
          column: 29
        }
      },
      "82": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 236,
          column: 10
        }
      },
      "83": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 235,
          column: 21
        }
      },
      "84": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 84
        }
      },
      "85": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 26
        }
      },
      "86": {
        start: {
          line: 237,
          column: 31
        },
        end: {
          line: 241,
          column: 10
        }
      },
      "87": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 24
        }
      },
      "88": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 62
        }
      },
      "89": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 59
        }
      },
      "90": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 61
        }
      },
      "91": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 77
        }
      },
      "92": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 57
        }
      },
      "93": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "94": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "95": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 70
        }
      },
      "96": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 40
        }
      },
      "97": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 42
        }
      },
      "98": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 33
        }
      },
      "99": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 41
        }
      },
      "100": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 65
        }
      },
      "101": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 74
        }
      },
      "102": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 52
        }
      },
      "103": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "104": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 58
        }
      },
      "105": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 64
        }
      },
      "106": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 70
        }
      },
      "107": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 60
        }
      },
      "108": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 60
        }
      },
      "109": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "110": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 59
        }
      },
      "111": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 65
        }
      },
      "112": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 71
        }
      },
      "113": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 61
        }
      },
      "114": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 61
        }
      },
      "115": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "116": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 50
        }
      },
      "117": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 56
        }
      },
      "118": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 62
        }
      },
      "119": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 52
        }
      },
      "120": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 52
        }
      },
      "121": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "122": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 59
        }
      },
      "123": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 65
        }
      },
      "124": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 71
        }
      },
      "125": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 61
        }
      },
      "126": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 61
        }
      },
      "127": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 371,
          column: 5
        }
      },
      "128": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 69
        }
      },
      "129": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 64
        }
      },
      "130": {
        start: {
          line: 363,
          column: 37
        },
        end: {
          line: 363,
          column: 62
        }
      },
      "131": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 62
        }
      },
      "132": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 67
        }
      },
      "133": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 81
        }
      },
      "134": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 63
        }
      },
      "135": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 63
        }
      },
      "136": {
        start: {
          line: 382,
          column: 26
        },
        end: {
          line: 387,
          column: 5
        }
      },
      "137": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "138": {
        start: {
          line: 389,
          column: 26
        },
        end: {
          line: 389,
          column: 48
        }
      },
      "139": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "140": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 401,
          column: 13
        }
      },
      "141": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 78
        }
      },
      "142": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 393,
          column: 43
        }
      },
      "143": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 83
        }
      },
      "144": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 65
        }
      },
      "145": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 89
        }
      },
      "146": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 61
        }
      },
      "147": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 400,
          column: 66
        }
      },
      "148": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "149": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 63
        }
      },
      "150": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 64
        }
      },
      "151": {
        start: {
          line: 419,
          column: 37
        },
        end: {
          line: 419,
          column: 62
        }
      },
      "152": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 58
        }
      },
      "153": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 58
        }
      },
      "154": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 64
        }
      },
      "155": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 54
        }
      },
      "156": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 54
        }
      },
      "157": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "158": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 76
        }
      },
      "159": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "160": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "161": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 446,
          column: 17
        }
      },
      "162": {
        start: {
          line: 443,
          column: 20
        },
        end: {
          line: 443,
          column: 68
        }
      },
      "163": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 90
        }
      },
      "164": {
        start: {
          line: 445,
          column: 20
        },
        end: {
          line: 445,
          column: 81
        }
      },
      "165": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 92
        }
      },
      "166": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 73
        }
      },
      "167": {
        start: {
          line: 454,
          column: 27
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "168": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "169": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 475,
          column: 13
        }
      },
      "170": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 474,
          column: 17
        }
      },
      "171": {
        start: {
          line: 462,
          column: 20
        },
        end: {
          line: 467,
          column: 21
        }
      },
      "172": {
        start: {
          line: 463,
          column: 24
        },
        end: {
          line: 463,
          column: 60
        }
      },
      "173": {
        start: {
          line: 466,
          column: 24
        },
        end: {
          line: 466,
          column: 51
        }
      },
      "174": {
        start: {
          line: 468,
          column: 20
        },
        end: {
          line: 468,
          column: 96
        }
      },
      "175": {
        start: {
          line: 469,
          column: 20
        },
        end: {
          line: 469,
          column: 84
        }
      },
      "176": {
        start: {
          line: 472,
          column: 20
        },
        end: {
          line: 472,
          column: 102
        }
      },
      "177": {
        start: {
          line: 473,
          column: 20
        },
        end: {
          line: 473,
          column: 80
        }
      },
      "178": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "179": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 479,
          column: 71
        }
      },
      "180": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 65
        }
      },
      "181": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 79
        }
      },
      "182": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 61
        }
      },
      "183": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 486,
          column: 76
        }
      },
      "184": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 80
        }
      },
      "185": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 59
        }
      },
      "186": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 506,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "gracefulShutdown",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 31
          }
        },
        loc: {
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 65,
            column: 43
          },
          end: {
            line: 65,
            column: 44
          }
        },
        loc: {
          start: {
            line: 65,
            column: 58
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 65
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 66,
            column: 24
          }
        },
        loc: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 66
      },
      "3": {
        name: "performShutdownSequence",
        decl: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 38
          }
        },
        loc: {
          start: {
            line: 141,
            column: 64
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 141
      },
      "4": {
        name: "stopNewOperations",
        decl: {
          start: {
            line: 182,
            column: 15
          },
          end: {
            line: 182,
            column: 32
          }
        },
        loc: {
          start: {
            line: 182,
            column: 50
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 182
      },
      "5": {
        name: "closeAllPositions",
        decl: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 32
          }
        },
        loc: {
          start: {
            line: 224,
            column: 56
          },
          end: {
            line: 252,
            column: 1
          }
        },
        line: 224
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 230,
            column: 41
          },
          end: {
            line: 230,
            column: 42
          }
        },
        loc: {
          start: {
            line: 230,
            column: 54
          },
          end: {
            line: 236,
            column: 9
          }
        },
        line: 230
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 232,
            column: 23
          },
          end: {
            line: 232,
            column: 24
          }
        },
        loc: {
          start: {
            line: 232,
            column: 29
          },
          end: {
            line: 235,
            column: 13
          }
        },
        line: 232
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 237,
            column: 43
          },
          end: {
            line: 237,
            column: 44
          }
        },
        loc: {
          start: {
            line: 237,
            column: 58
          },
          end: {
            line: 241,
            column: 9
          }
        },
        line: 237
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 24
          }
        },
        loc: {
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 240,
            column: 13
          }
        },
        line: 238
      },
      "10": {
        name: "backupCriticalData",
        decl: {
          start: {
            line: 260,
            column: 15
          },
          end: {
            line: 260,
            column: 33
          }
        },
        loc: {
          start: {
            line: 260,
            column: 51
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 260
      },
      "11": {
        name: "backupTradingData",
        decl: {
          start: {
            line: 285,
            column: 15
          },
          end: {
            line: 285,
            column: 32
          }
        },
        loc: {
          start: {
            line: 285,
            column: 41
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 285
      },
      "12": {
        name: "backupConfiguration",
        decl: {
          start: {
            line: 303,
            column: 15
          },
          end: {
            line: 303,
            column: 34
          }
        },
        loc: {
          start: {
            line: 303,
            column: 43
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 303
      },
      "13": {
        name: "backupLogs",
        decl: {
          start: {
            line: 321,
            column: 15
          },
          end: {
            line: 321,
            column: 25
          }
        },
        loc: {
          start: {
            line: 321,
            column: 34
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 321
      },
      "14": {
        name: "backupSecurityData",
        decl: {
          start: {
            line: 339,
            column: 15
          },
          end: {
            line: 339,
            column: 33
          }
        },
        loc: {
          start: {
            line: 339,
            column: 42
          },
          end: {
            line: 350,
            column: 1
          }
        },
        line: 339
      },
      "15": {
        name: "sendShutdownNotifications",
        decl: {
          start: {
            line: 358,
            column: 15
          },
          end: {
            line: 358,
            column: 40
          }
        },
        loc: {
          start: {
            line: 358,
            column: 58
          },
          end: {
            line: 372,
            column: 1
          }
        },
        line: 358
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 363,
            column: 26
          },
          end: {
            line: 363,
            column: 27
          }
        },
        loc: {
          start: {
            line: 363,
            column: 37
          },
          end: {
            line: 363,
            column: 62
          }
        },
        line: 363
      },
      "17": {
        name: "shutdownComponents",
        decl: {
          start: {
            line: 380,
            column: 15
          },
          end: {
            line: 380,
            column: 33
          }
        },
        loc: {
          start: {
            line: 380,
            column: 51
          },
          end: {
            line: 404,
            column: 1
          }
        },
        line: 380
      },
      "18": {
        name: "performFinalCleanup",
        decl: {
          start: {
            line: 412,
            column: 15
          },
          end: {
            line: 412,
            column: 34
          }
        },
        loc: {
          start: {
            line: 412,
            column: 52
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 412
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 419,
            column: 26
          },
          end: {
            line: 419,
            column: 27
          }
        },
        loc: {
          start: {
            line: 419,
            column: 37
          },
          end: {
            line: 419,
            column: 62
          }
        },
        line: 419
      },
      "20": {
        name: "performEmergencyShutdown",
        decl: {
          start: {
            line: 436,
            column: 15
          },
          end: {
            line: 436,
            column: 39
          }
        },
        loc: {
          start: {
            line: 436,
            column: 57
          },
          end: {
            line: 492,
            column: 1
          }
        },
        line: 436
      },
      "21": {
        name: "createShutdownHandler",
        decl: {
          start: {
            line: 501,
            column: 9
          },
          end: {
            line: 501,
            column: 30
          }
        },
        loc: {
          start: {
            line: 501,
            column: 70
          },
          end: {
            line: 507,
            column: 1
          }
        },
        line: 501
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 33,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 33,
            column: 52
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: 85,
            column: 17
          },
          end: {
            line: 87,
            column: 13
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 38
          }
        }, {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 77,
            column: 75
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: 94,
            column: 13
          },
          end: {
            line: 96,
            column: 9
          }
        }],
        line: 91
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 46
          }
        }, {
          start: {
            line: 104,
            column: 49
          },
          end: {
            line: 104,
            column: 58
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 117,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 52
          },
          end: {
            line: 117,
            column: 65
          }
        }, {
          start: {
            line: 117,
            column: 68
          },
          end: {
            line: 117,
            column: 83
          }
        }],
        line: 117
      },
      "7": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "8": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "9": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 33
          }
        }, {
          start: {
            line: 147,
            column: 37
          },
          end: {
            line: 147,
            column: 58
          }
        }],
        line: 147
      },
      "10": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "11": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "12": {
        loc: {
          start: {
            line: 171,
            column: 27
          },
          end: {
            line: 171,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 52
          },
          end: {
            line: 171,
            column: 65
          }
        }, {
          start: {
            line: 171,
            column: 68
          },
          end: {
            line: 171,
            column: 83
          }
        }],
        line: 171
      },
      "13": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "14": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "15": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "16": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "17": {
        loc: {
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 446,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 446,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "18": {
        loc: {
          start: {
            line: 460,
            column: 12
          },
          end: {
            line: 475,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 12
          },
          end: {
            line: 475,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "19": {
        loc: {
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 467,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 467,
            column: 21
          }
        }, {
          start: {
            line: 465,
            column: 25
          },
          end: {
            line: 467,
            column: 21
          }
        }],
        line: 462
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "21b0a47bdd37933ce706e5a52222c6daf815af19"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ejy8xhn1q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ejy8xhn1q();
cov_1ejy8xhn1q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ejy8xhn1q().s[1]++;
exports.gracefulShutdown = gracefulShutdown;
/* istanbul ignore next */
cov_1ejy8xhn1q().s[2]++;
exports.createShutdownHandler = createShutdownHandler;
const logger_1 =
/* istanbul ignore next */
(cov_1ejy8xhn1q().s[3]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_1ejy8xhn1q().s[4]++, require("@/security/audit-service"));
/**
 * Perform graceful shutdown of all system components
 *
 * @param context Shutdown context with components
 * @param config Shutdown configuration
 * @returns Promise<ShutdownResult> Shutdown result
 */
async function gracefulShutdown(context, config =
/* istanbul ignore next */
(cov_1ejy8xhn1q().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[0]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1ejy8xhn1q().s[5]++, Date.now());
  const shutdownConfig =
  /* istanbul ignore next */
  (cov_1ejy8xhn1q().s[6]++, {
    timeout: 30000,
    // 30 seconds default
    closePositions: true,
    backupData: true,
    sendNotifications: true,
    emergencyOnTimeout: true,
    ...config
  });
  const result =
  /* istanbul ignore next */
  (cov_1ejy8xhn1q().s[7]++, {
    success: false,
    duration: 0,
    successfulComponents: [],
    failedComponents: [],
    errors: [],
    emergencyUsed: false
  });
  /* istanbul ignore next */
  cov_1ejy8xhn1q().s[8]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[9]++;
    logger_1.logger.info('🛑 Initiating graceful shutdown...');
    // Create audit entry for shutdown initiation
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[10]++;
    await audit_service_1.auditService.createAuditEntry({
      auditId: `graceful_shutdown_start_${Date.now()}`,
      eventType: 'GRACEFUL_SHUTDOWN_INITIATED',
      actor: 'SYSTEM',
      resource: 'SHUTDOWN_HANDLER',
      action: 'INITIATE_SHUTDOWN',
      result: 'SUCCESS',
      timestamp: new Date(),
      auditData: {
        config: shutdownConfig
      }
    });
    // Set up timeout handler
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[11]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().f[1]++;
      cov_1ejy8xhn1q().s[12]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().f[2]++;
        cov_1ejy8xhn1q().s[13]++;
        reject(new Error(`Graceful shutdown timeout after ${shutdownConfig.timeout}ms`));
      }, shutdownConfig.timeout);
    }));
    // Perform shutdown with timeout
    const shutdownPromise =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[14]++, performShutdownSequence(context, shutdownConfig, result));
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[15]++;
    try {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[16]++;
      await Promise.race([shutdownPromise, timeoutPromise]);
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[17]++;
      result.success = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_1ejy8xhn1q().b[2][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_1ejy8xhn1q().b[2][1]++, error.message.includes('timeout'))) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().b[1][0]++;
        cov_1ejy8xhn1q().s[19]++;
        logger_1.logger.error('❌ Graceful shutdown timeout - initiating emergency procedures');
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[20]++;
        result.errors.push(error.message);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[21]++;
        if (shutdownConfig.emergencyOnTimeout) {
          /* istanbul ignore next */
          cov_1ejy8xhn1q().b[3][0]++;
          cov_1ejy8xhn1q().s[22]++;
          await performEmergencyShutdown(context, result);
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[23]++;
          result.emergencyUsed = true;
        } else
        /* istanbul ignore next */
        {
          cov_1ejy8xhn1q().b[3][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().b[1][1]++;
        cov_1ejy8xhn1q().s[24]++;
        throw error;
      }
    }
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[25]++;
    result.duration = Date.now() - startTime;
    // Log final result
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[26]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[4][0]++;
      cov_1ejy8xhn1q().s[27]++;
      logger_1.logger.info(`✅ Graceful shutdown completed in ${result.duration}ms`);
    } else {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[4][1]++;
      cov_1ejy8xhn1q().s[28]++;
      logger_1.logger.error(`❌ Graceful shutdown failed after ${result.duration}ms`);
    }
    // Create final audit entry
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[29]++;
    await audit_service_1.auditService.createAuditEntry({
      auditId: `graceful_shutdown_complete_${Date.now()}`,
      eventType: 'GRACEFUL_SHUTDOWN_COMPLETED',
      actor: 'SYSTEM',
      resource: 'SHUTDOWN_HANDLER',
      action: 'COMPLETE_SHUTDOWN',
      result: result.success ?
      /* istanbul ignore next */
      (cov_1ejy8xhn1q().b[5][0]++, 'SUCCESS') :
      /* istanbul ignore next */
      (cov_1ejy8xhn1q().b[5][1]++, 'FAILURE'),
      timestamp: new Date(),
      auditData: {
        duration: result.duration,
        successfulComponents: result.successfulComponents,
        failedComponents: result.failedComponents,
        emergencyUsed: result.emergencyUsed
      }
    });
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[30]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[31]++;
    result.duration = Date.now() - startTime;
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[32]++;
    result.errors.push(error instanceof Error ?
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().b[6][0]++, error.message) :
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().b[6][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[33]++;
    logger_1.logger.error('❌ Critical error during graceful shutdown:', error);
    // Attempt emergency shutdown as last resort
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[34]++;
    if (shutdownConfig.emergencyOnTimeout) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[7][0]++;
      cov_1ejy8xhn1q().s[35]++;
      try {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[36]++;
        await performEmergencyShutdown(context, result);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[37]++;
        result.emergencyUsed = true;
      } catch (emergencyError) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[38]++;
        logger_1.logger.error('❌ Emergency shutdown also failed:', emergencyError);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[39]++;
        result.errors.push(`Emergency shutdown failed: ${emergencyError}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[7][1]++;
    }
    cov_1ejy8xhn1q().s[40]++;
    return result;
  }
}
/**
 * Perform the main shutdown sequence
 *
 * @param context Shutdown context
 * @param config Shutdown configuration
 * @param result Shutdown result to update
 * @returns Promise<void>
 */
async function performShutdownSequence(context, config, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[3]++;
  cov_1ejy8xhn1q().s[41]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[42]++;
    // Phase 1: Stop accepting new operations
    logger_1.logger.info('📋 Phase 1: Stopping new operations...');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[43]++;
    await stopNewOperations(context, result);
    // Phase 2: Close trading positions (if enabled)
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().b[9][0]++, config.closePositions) &&
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().b[9][1]++, context.tradingEngine)) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[8][0]++;
      cov_1ejy8xhn1q().s[45]++;
      logger_1.logger.info('💹 Phase 2: Closing trading positions...');
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[46]++;
      await closeAllPositions(context.tradingEngine, result);
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[8][1]++;
    }
    // Phase 3: Backup critical data (if enabled)
    cov_1ejy8xhn1q().s[47]++;
    if (config.backupData) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[10][0]++;
      cov_1ejy8xhn1q().s[48]++;
      logger_1.logger.info('💾 Phase 3: Backing up critical data...');
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[49]++;
      await backupCriticalData(context, result);
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[10][1]++;
    }
    // Phase 4: Send shutdown notifications (if enabled)
    cov_1ejy8xhn1q().s[50]++;
    if (config.sendNotifications) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[11][0]++;
      cov_1ejy8xhn1q().s[51]++;
      logger_1.logger.info('📧 Phase 4: Sending shutdown notifications...');
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[52]++;
      await sendShutdownNotifications(context, result);
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[11][1]++;
    }
    // Phase 5: Shutdown components in proper order
    cov_1ejy8xhn1q().s[53]++;
    logger_1.logger.info('🔄 Phase 5: Shutting down components...');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[54]++;
    await shutdownComponents(context, result);
    // Phase 6: Final cleanup
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[55]++;
    logger_1.logger.info('🧹 Phase 6: Final cleanup...');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[56]++;
    await performFinalCleanup(context, result);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[57]++;
    logger_1.logger.info('✅ All shutdown phases completed successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[58]++;
    logger_1.logger.error('❌ Error in shutdown sequence:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[59]++;
    result.errors.push(error instanceof Error ?
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().b[12][0]++, error.message) :
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().b[12][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[60]++;
    throw error;
  }
}
/**
 * Stop accepting new operations
 *
 * @param context Shutdown context
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function stopNewOperations(context, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[4]++;
  cov_1ejy8xhn1q().s[61]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[62]++;
    // Set global shutdown flag
    process.env.SYSTEM_SHUTTING_DOWN = 'true';
    // Stop trading engine from accepting new trades
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[63]++;
    if (context.tradingEngine) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[13][0]++;
      cov_1ejy8xhn1q().s[64]++;
      try {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[65]++;
        // This would call a method to stop accepting new operations
        logger_1.logger.info('🛑 Trading engine stopped accepting new operations');
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[66]++;
        result.successfulComponents.push('trading-engine-stop-new');
      } catch (error) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[67]++;
        logger_1.logger.error('❌ Failed to stop trading engine new operations:', error);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[68]++;
        result.failedComponents.push('trading-engine-stop-new');
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[69]++;
        result.errors.push(`Trading engine stop new operations: ${error}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[13][1]++;
    }
    // Stop system monitor from starting new scans
    cov_1ejy8xhn1q().s[70]++;
    if (context.systemMonitor) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[14][0]++;
      cov_1ejy8xhn1q().s[71]++;
      try {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[72]++;
        logger_1.logger.info('🛑 System monitor stopped new operations');
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[73]++;
        result.successfulComponents.push('system-monitor-stop-new');
      } catch (error) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[74]++;
        logger_1.logger.error('❌ Failed to stop system monitor new operations:', error);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[75]++;
        result.failedComponents.push('system-monitor-stop-new');
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[76]++;
        result.errors.push(`System monitor stop new operations: ${error}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[14][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[77]++;
    logger_1.logger.error('❌ Failed to stop new operations:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[78]++;
    result.errors.push(`Stop new operations: ${error}`);
  }
}
/**
 * Close all trading positions
 *
 * @param tradingEngine Trading engine component
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function closeAllPositions(tradingEngine, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[5]++;
  cov_1ejy8xhn1q().s[79]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[80]++;
    logger_1.logger.info('💹 Closing all open trading positions...');
    // This would call trading engine methods to close positions
    // For now, we'll simulate the process
    const timeout =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[81]++, 15000); // 15 seconds for position closure
    const closePromise =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[82]++, new Promise(resolve => {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().f[6]++;
      cov_1ejy8xhn1q().s[83]++;
      // Simulate position closure
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().f[7]++;
        cov_1ejy8xhn1q().s[84]++;
        logger_1.logger.info('✅ All trading positions closed successfully');
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[85]++;
        resolve();
      }, 2000);
    }));
    const timeoutPromise =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[86]++, new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().f[8]++;
      cov_1ejy8xhn1q().s[87]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().f[9]++;
        cov_1ejy8xhn1q().s[88]++;
        reject(new Error('Position closure timeout'));
      }, timeout);
    }));
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[89]++;
    await Promise.race([closePromise, timeoutPromise]);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[90]++;
    result.successfulComponents.push('position-closure');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[91]++;
    logger_1.logger.error('❌ Failed to close trading positions:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[92]++;
    result.failedComponents.push('position-closure');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[93]++;
    result.errors.push(`Position closure: ${error}`);
    // Continue with shutdown even if position closure fails
    // This is critical for system safety
  }
}
/**
 * Backup critical data
 *
 * @param context Shutdown context
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function backupCriticalData(context, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[10]++;
  cov_1ejy8xhn1q().s[94]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[95]++;
    logger_1.logger.info('💾 Backing up critical system data...');
    // Backup trading data
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[96]++;
    await backupTradingData(result);
    // Backup configuration
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[97]++;
    await backupConfiguration(result);
    // Backup logs
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[98]++;
    await backupLogs(result);
    // Backup security data
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[99]++;
    await backupSecurityData(result);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[100]++;
    logger_1.logger.info('✅ Critical data backup completed');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[101]++;
    logger_1.logger.error('❌ Failed to backup critical data:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[102]++;
    result.errors.push(`Data backup: ${error}`);
    // Continue with shutdown even if backup fails
  }
}
/**
 * Backup trading data
 *
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function backupTradingData(result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[11]++;
  cov_1ejy8xhn1q().s[103]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[104]++;
    // This would backup trading positions, orders, and performance data
    logger_1.logger.info('💹 Trading data backed up');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[105]++;
    result.successfulComponents.push('trading-data-backup');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[106]++;
    logger_1.logger.error('❌ Trading data backup failed:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[107]++;
    result.failedComponents.push('trading-data-backup');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[108]++;
    result.errors.push(`Trading data backup: ${error}`);
  }
}
/**
 * Backup configuration
 *
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function backupConfiguration(result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[12]++;
  cov_1ejy8xhn1q().s[109]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[110]++;
    // This would backup system configuration and settings
    logger_1.logger.info('⚙️ Configuration backed up');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[111]++;
    result.successfulComponents.push('configuration-backup');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[112]++;
    logger_1.logger.error('❌ Configuration backup failed:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[113]++;
    result.failedComponents.push('configuration-backup');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[114]++;
    result.errors.push(`Configuration backup: ${error}`);
  }
}
/**
 * Backup logs
 *
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function backupLogs(result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[13]++;
  cov_1ejy8xhn1q().s[115]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[116]++;
    // This would backup recent log files
    logger_1.logger.info('📝 Logs backed up');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[117]++;
    result.successfulComponents.push('logs-backup');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[118]++;
    logger_1.logger.error('❌ Logs backup failed:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[119]++;
    result.failedComponents.push('logs-backup');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[120]++;
    result.errors.push(`Logs backup: ${error}`);
  }
}
/**
 * Backup security data
 *
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function backupSecurityData(result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[14]++;
  cov_1ejy8xhn1q().s[121]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[122]++;
    // This would backup security audit trails and incident data
    logger_1.logger.info('🔒 Security data backed up');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[123]++;
    result.successfulComponents.push('security-data-backup');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[124]++;
    logger_1.logger.error('❌ Security data backup failed:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[125]++;
    result.failedComponents.push('security-data-backup');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[126]++;
    result.errors.push(`Security data backup: ${error}`);
  }
}
/**
 * Send shutdown notifications
 *
 * @param context Shutdown context
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function sendShutdownNotifications(context, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[15]++;
  cov_1ejy8xhn1q().s[127]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[128]++;
    logger_1.logger.info('📧 Sending shutdown notifications...');
    // This would integrate with notification service to send alerts
    // For now, we'll simulate the process
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[129]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().f[16]++;
      cov_1ejy8xhn1q().s[130]++;
      return setTimeout(resolve, 1000);
    });
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[131]++;
    logger_1.logger.info('✅ Shutdown notifications sent');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[132]++;
    result.successfulComponents.push('shutdown-notifications');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[133]++;
    logger_1.logger.error('❌ Failed to send shutdown notifications:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[134]++;
    result.failedComponents.push('shutdown-notifications');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[135]++;
    result.errors.push(`Shutdown notifications: ${error}`);
  }
}
/**
 * Shutdown components in proper order
 *
 * @param context Shutdown context
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function shutdownComponents(context, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[17]++;
  // Define shutdown order (reverse of startup order)
  const shutdownOrder =
  /* istanbul ignore next */
  (cov_1ejy8xhn1q().s[136]++, ['tradingEngine', 'systemMonitor', 'tunnelManager', 'securityManager']);
  /* istanbul ignore next */
  cov_1ejy8xhn1q().s[137]++;
  for (const componentName of shutdownOrder) {
    const component =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[138]++, context[componentName]);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[139]++;
    if (component) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[15][0]++;
      cov_1ejy8xhn1q().s[140]++;
      try {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[141]++;
        logger_1.logger.info(`🔄 Shutting down ${component.name}...`);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[142]++;
        await component.shutdown();
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[143]++;
        logger_1.logger.info(`✅ ${component.name} shut down successfully`);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[144]++;
        result.successfulComponents.push(component.name);
      } catch (error) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[145]++;
        logger_1.logger.error(`❌ Failed to shut down ${component.name}:`, error);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[146]++;
        result.failedComponents.push(component.name);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[147]++;
        result.errors.push(`${component.name}: ${error}`);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[15][1]++;
    }
  }
}
/**
 * Perform final cleanup
 *
 * @param context Shutdown context
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function performFinalCleanup(context, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[18]++;
  cov_1ejy8xhn1q().s[148]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[149]++;
    logger_1.logger.info('🧹 Performing final cleanup...');
    // Clear any remaining timers or intervals
    // Close any remaining connections
    // Clean up temporary files
    // Flush logs
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[150]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().f[19]++;
      cov_1ejy8xhn1q().s[151]++;
      return setTimeout(resolve, 1000);
    });
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[152]++;
    logger_1.logger.info('✅ Final cleanup completed');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[153]++;
    result.successfulComponents.push('final-cleanup');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[154]++;
    logger_1.logger.error('❌ Final cleanup failed:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[155]++;
    result.failedComponents.push('final-cleanup');
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[156]++;
    result.errors.push(`Final cleanup: ${error}`);
  }
}
/**
 * Perform emergency shutdown procedures
 *
 * @param context Shutdown context
 * @param result Shutdown result
 * @returns Promise<void>
 */
async function performEmergencyShutdown(context, result) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[20]++;
  cov_1ejy8xhn1q().s[157]++;
  try {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[158]++;
    logger_1.logger.error('🚨 EMERGENCY SHUTDOWN PROCEDURES INITIATED');
    // Force close all positions immediately
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[159]++;
    if (context.tradingEngine) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().b[16][0]++;
      cov_1ejy8xhn1q().s[160]++;
      try {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[161]++;
        if (context.tradingEngine.emergencyShutdown) {
          /* istanbul ignore next */
          cov_1ejy8xhn1q().b[17][0]++;
          cov_1ejy8xhn1q().s[162]++;
          await context.tradingEngine.emergencyShutdown();
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[163]++;
          logger_1.logger.info('✅ Emergency trading engine shutdown completed');
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[164]++;
          result.successfulComponents.push('emergency-trading-engine');
        } else
        /* istanbul ignore next */
        {
          cov_1ejy8xhn1q().b[17][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[165]++;
        logger_1.logger.error('❌ Emergency trading engine shutdown failed:', error);
        /* istanbul ignore next */
        cov_1ejy8xhn1q().s[166]++;
        result.failedComponents.push('emergency-trading-engine');
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ejy8xhn1q().b[16][1]++;
    }
    // Emergency shutdown other components
    const components =
    /* istanbul ignore next */
    (cov_1ejy8xhn1q().s[167]++, [context.systemMonitor, context.tunnelManager, context.securityManager]);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[168]++;
    for (const component of components) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[169]++;
      if (component) {
        /* istanbul ignore next */
        cov_1ejy8xhn1q().b[18][0]++;
        cov_1ejy8xhn1q().s[170]++;
        try {
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[171]++;
          if (component.emergencyShutdown) {
            /* istanbul ignore next */
            cov_1ejy8xhn1q().b[19][0]++;
            cov_1ejy8xhn1q().s[172]++;
            await component.emergencyShutdown();
          } else {
            /* istanbul ignore next */
            cov_1ejy8xhn1q().b[19][1]++;
            cov_1ejy8xhn1q().s[173]++;
            await component.shutdown();
          }
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[174]++;
          logger_1.logger.info(`✅ Emergency shutdown of ${component.name} completed`);
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[175]++;
          result.successfulComponents.push(`emergency-${component.name}`);
        } catch (error) {
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[176]++;
          logger_1.logger.error(`❌ Emergency shutdown of ${component.name} failed:`, error);
          /* istanbul ignore next */
          cov_1ejy8xhn1q().s[177]++;
          result.failedComponents.push(`emergency-${component.name}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1ejy8xhn1q().b[18][1]++;
      }
    }
    // Send emergency alerts
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[178]++;
    try {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[179]++;
      logger_1.logger.error('🚨 EMERGENCY SHUTDOWN ALERTS SENT');
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[180]++;
      result.successfulComponents.push('emergency-alerts');
    } catch (error) {
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[181]++;
      logger_1.logger.error('❌ Failed to send emergency alerts:', error);
      /* istanbul ignore next */
      cov_1ejy8xhn1q().s[182]++;
      result.failedComponents.push('emergency-alerts');
    }
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[183]++;
    logger_1.logger.error('🚨 Emergency shutdown procedures completed');
  } catch (error) {
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[184]++;
    logger_1.logger.error('❌ Emergency shutdown procedures failed:', error);
    /* istanbul ignore next */
    cov_1ejy8xhn1q().s[185]++;
    result.errors.push(`Emergency shutdown: ${error}`);
  }
}
/**
 * Create a shutdown handler for a component
 *
 * @param name Component name
 * @param shutdownFn Shutdown function
 * @param emergencyShutdownFn Optional emergency shutdown function
 * @returns ShutdownableComponent
 */
function createShutdownHandler(name, shutdownFn, emergencyShutdownFn) {
  /* istanbul ignore next */
  cov_1ejy8xhn1q().f[21]++;
  cov_1ejy8xhn1q().s[186]++;
  return {
    name,
    shutdown: shutdownFn,
    emergencyShutdown: emergencyShutdownFn
  };
}
// =============================================================================
// GRACEFUL SHUTDOWN NOTES
// =============================================================================
// 1. Multi-phase shutdown process with proper sequencing
// 2. Trading position closure before system termination
// 3. Critical data backup and preservation
// 4. Component shutdown in reverse dependency order
// 5. Emergency procedures for timeout scenarios
// 6. Comprehensive logging and audit trails
// 7. Notification system integration for shutdown alerts
// 8. Timeout handling with fallback to emergency procedures
// =============================================================================