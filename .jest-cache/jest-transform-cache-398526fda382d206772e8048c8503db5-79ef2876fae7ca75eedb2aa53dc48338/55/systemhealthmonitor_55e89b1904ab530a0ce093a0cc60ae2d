dca6a964c6638dcc7a234b6947c57f34
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SYSTEM HEALTH MONITOR
 * =============================================================================
 *
 * This module provides comprehensive system health monitoring and status
 * reporting for all components in the trading system. It tracks component
 * health, system metrics, and provides early warning for potential issues.
 *
 * CRITICAL SYSTEM NOTICE:
 * System health monitoring is essential for maintaining 24/7 trading
 * operations. Early detection of issues prevents financial losses and
 * ensures system reliability.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_7n4m2jwp1() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-health-monitor.ts";
  var hash = "99c7a5385a310219b334463e4e1ab0a7ff497daa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-health-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 103
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "5": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 36,
          column: 81
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 46
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 48
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "11": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "12": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "13": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 24
        }
      },
      "14": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 52
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 16
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 34
        }
      },
      "18": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "19": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 73
        }
      },
      "20": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "21": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 72
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 45
        }
      },
      "25": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "26": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "29": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "30": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 67
        }
      },
      "31": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "32": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "33": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 72
        }
      },
      "34": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "36": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 51
        }
      },
      "37": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "38": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "39": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "40": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "41": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "42": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 67
        }
      },
      "43": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 96
        }
      },
      "44": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "45": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 58
        }
      },
      "46": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 94
        }
      },
      "47": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "48": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 55
        }
      },
      "49": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 101
        }
      },
      "50": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 58
        }
      },
      "51": {
        start: {
          line: 157,
          column: 32
        },
        end: {
          line: 157,
          column: 33
        }
      },
      "52": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 26
        }
      },
      "53": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "54": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "55": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 36
        }
      },
      "56": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 54
        }
      },
      "57": {
        start: {
          line: 165,
          column: 29
        },
        end: {
          line: 165,
          column: 83
        }
      },
      "58": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 174,
          column: 10
        }
      },
      "59": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 63
        }
      },
      "60": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 38
        }
      },
      "61": {
        start: {
          line: 194,
          column: 24
        },
        end: {
          line: 194,
          column: 63
        }
      },
      "62": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "63": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 22
        }
      },
      "64": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 51
        }
      },
      "65": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 63
        }
      },
      "66": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "67": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 72
        }
      },
      "68": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 63
        }
      },
      "69": {
        start: {
          line: 219,
          column: 27
        },
        end: {
          line: 219,
          column: 29
        }
      },
      "70": {
        start: {
          line: 220,
          column: 31
        },
        end: {
          line: 220,
          column: 33
        }
      },
      "71": {
        start: {
          line: 221,
          column: 32
        },
        end: {
          line: 221,
          column: 41
        }
      },
      "72": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "73": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "74": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "75": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "76": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 47
        }
      },
      "77": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 233,
          column: 13
        }
      },
      "78": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 52
        }
      },
      "79": {
        start: {
          line: 235,
          column: 29
        },
        end: {
          line: 235,
          column: 57
        }
      },
      "80": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 244,
          column: 10
        }
      },
      "81": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "82": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 19
        }
      },
      "83": {
        start: {
          line: 253,
          column: 36
        },
        end: {
          line: 253,
          column: 38
        }
      },
      "84": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "85": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 259,
          column: 16
        }
      },
      "86": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 99
        }
      },
      "87": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 54
        }
      },
      "88": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 41
        }
      },
      "89": {
        start: {
          line: 272,
          column: 26
        },
        end: {
          line: 272,
          column: 36
        }
      },
      "90": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "91": {
        start: {
          line: 275,
          column: 39
        },
        end: {
          line: 275,
          column: 70
        }
      },
      "92": {
        start: {
          line: 276,
          column: 35
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "93": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 279,
          column: 45
        }
      },
      "94": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 62
        }
      },
      "95": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 92
        }
      },
      "96": {
        start: {
          line: 282,
          column: 33
        },
        end: {
          line: 282,
          column: 55
        }
      },
      "97": {
        start: {
          line: 284,
          column: 27
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "98": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 63
        }
      },
      "99": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 57
        }
      },
      "100": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 301,
          column: 13
        }
      },
      "101": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 69
        }
      },
      "102": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 26
        }
      },
      "103": {
        start: {
          line: 305,
          column: 33
        },
        end: {
          line: 305,
          column: 55
        }
      },
      "104": {
        start: {
          line: 306,
          column: 27
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "105": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 57
        }
      },
      "106": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 65
        }
      },
      "107": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 26
        }
      },
      "108": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 39
        }
      },
      "109": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 43
        }
      },
      "110": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "111": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 95
        }
      },
      "112": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "113": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 35
        }
      },
      "114": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 37
        }
      },
      "115": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 35
        }
      },
      "116": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 37
        }
      },
      "117": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 59
        }
      },
      "118": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 76
        }
      },
      "119": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "120": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 28
        }
      },
      "121": {
        start: {
          line: 370,
          column: 23
        },
        end: {
          line: 370,
          column: 54
        }
      },
      "122": {
        start: {
          line: 371,
          column: 23
        },
        end: {
          line: 371,
          column: 47
        }
      },
      "123": {
        start: {
          line: 371,
          column: 39
        },
        end: {
          line: 371,
          column: 46
        }
      },
      "124": {
        start: {
          line: 372,
          column: 27
        },
        end: {
          line: 372,
          column: 36
        }
      },
      "125": {
        start: {
          line: 373,
          column: 26
        },
        end: {
          line: 373,
          column: 51
        }
      },
      "126": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "127": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 31
        }
      },
      "128": {
        start: {
          line: 377,
          column: 13
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "129": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 31
        }
      },
      "130": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 28
        }
      },
      "131": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "132": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 403,
          column: 15
        }
      },
      "133": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "134": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 57
        }
      },
      "135": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 416,
          column: 30
        }
      },
      "136": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "137": {
        start: {
          line: 419,
          column: 42
        },
        end: {
          line: 419,
          column: 95
        }
      },
      "138": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 422,
          column: 13
        }
      },
      "139": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 23
        }
      },
      "140": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 104
        }
      },
      "141": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 42
        }
      },
      "142": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "143": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 435,
          column: 15
        }
      },
      "144": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 99
        }
      },
      "145": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 107
        }
      },
      "146": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "147": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 486,
          column: 14
        }
      },
      "148": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 43
        }
      },
      "149": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 80
        }
      },
      "150": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "151": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 19
        }
      },
      "152": {
        start: {
          line: 501,
          column: 23
        },
        end: {
          line: 501,
          column: 25
        }
      },
      "153": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "154": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 87
        }
      },
      "155": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 509,
          column: 9
        }
      },
      "156": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 93
        }
      },
      "157": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 513,
          column: 9
        }
      },
      "158": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 89
        }
      },
      "159": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 524,
          column: 9
        }
      },
      "160": {
        start: {
          line: 516,
          column: 12
        },
        end: {
          line: 523,
          column: 15
        }
      },
      "161": {
        start: {
          line: 530,
          column: 34
        },
        end: {
          line: 531,
          column: 57
        }
      },
      "162": {
        start: {
          line: 531,
          column: 28
        },
        end: {
          line: 531,
          column: 56
        }
      },
      "163": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 535,
          column: 9
        }
      },
      "164": {
        start: {
          line: 533,
          column: 12
        },
        end: {
          line: 533,
          column: 66
        }
      },
      "165": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 19
        }
      },
      "166": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "167": {
        start: {
          line: 537,
          column: 45
        },
        end: {
          line: 537,
          column: 82
        }
      },
      "168": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 538,
          column: 66
        }
      },
      "169": {
        start: {
          line: 540,
          column: 13
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "170": {
        start: {
          line: 540,
          column: 50
        },
        end: {
          line: 540,
          column: 88
        }
      },
      "171": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 67
        }
      },
      "172": {
        start: {
          line: 543,
          column: 13
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "173": {
        start: {
          line: 543,
          column: 50
        },
        end: {
          line: 543,
          column: 88
        }
      },
      "174": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 544,
          column: 67
        }
      },
      "175": {
        start: {
          line: 546,
          column: 13
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "176": {
        start: {
          line: 546,
          column: 50
        },
        end: {
          line: 546,
          column: 87
        }
      },
      "177": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 66
        }
      },
      "178": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 550,
          column: 66
        }
      },
      "179": {
        start: {
          line: 561,
          column: 34
        },
        end: {
          line: 561,
          column: 92
        }
      },
      "180": {
        start: {
          line: 561,
          column: 62
        },
        end: {
          line: 561,
          column: 91
        }
      },
      "181": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 564,
          column: 9
        }
      },
      "182": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 47
        }
      },
      "183": {
        start: {
          line: 566,
          column: 30
        },
        end: {
          line: 566,
          column: 84
        }
      },
      "184": {
        start: {
          line: 566,
          column: 58
        },
        end: {
          line: 566,
          column: 83
        }
      },
      "185": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 569,
          column: 9
        }
      },
      "186": {
        start: {
          line: 568,
          column: 12
        },
        end: {
          line: 568,
          column: 47
        }
      },
      "187": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 582,
          column: 9
        }
      },
      "188": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 46
        }
      },
      "189": {
        start: {
          line: 574,
          column: 13
        },
        end: {
          line: 582,
          column: 9
        }
      },
      "190": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 575,
          column: 46
        }
      },
      "191": {
        start: {
          line: 577,
          column: 13
        },
        end: {
          line: 582,
          column: 9
        }
      },
      "192": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 578,
          column: 47
        }
      },
      "193": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 581,
          column: 47
        }
      },
      "194": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 599,
          column: 12
        }
      },
      "195": {
        start: {
          line: 591,
          column: 36
        },
        end: {
          line: 599,
          column: 9
        }
      },
      "196": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 607,
          column: 11
        }
      },
      "197": {
        start: {
          line: 606,
          column: 12
        },
        end: {
          line: 606,
          column: 118
        }
      },
      "198": {
        start: {
          line: 610,
          column: 0
        },
        end: {
          line: 610,
          column: 50
        }
      },
      "199": {
        start: {
          line: 614,
          column: 0
        },
        end: {
          line: 629,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 1
          },
          end: {
            line: 30,
            column: 2
          }
        },
        loc: {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 46
          },
          end: {
            line: 64,
            column: 47
          }
        },
        loc: {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 68,
            column: 43
          },
          end: {
            line: 68,
            column: 44
          }
        },
        loc: {
          start: {
            line: 68,
            column: 55
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 68
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 87
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 117
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 37
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 144
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 155
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 36
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 182
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 56
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 193
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 40
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 206
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 22
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 218
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 32
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 249
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 23
          }
        },
        loc: {
          start: {
            line: 256,
            column: 28
          },
          end: {
            line: 256,
            column: 31
          }
        },
        line: 256
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 257,
            column: 23
          },
          end: {
            line: 257,
            column: 24
          }
        },
        loc: {
          start: {
            line: 257,
            column: 32
          },
          end: {
            line: 259,
            column: 13
          }
        },
        line: 257
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 47
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 271
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 276,
            column: 47
          },
          end: {
            line: 276,
            column: 48
          }
        },
        loc: {
          start: {
            line: 276,
            column: 62
          },
          end: {
            line: 280,
            column: 13
          }
        },
        line: 276
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 277,
            column: 27
          },
          end: {
            line: 277,
            column: 28
          }
        },
        loc: {
          start: {
            line: 277,
            column: 33
          },
          end: {
            line: 279,
            column: 17
          }
        },
        line: 277
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 44
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 337
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 34
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 366
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 371,
            column: 34
          },
          end: {
            line: 371,
            column: 35
          }
        },
        loc: {
          start: {
            line: 371,
            column: 39
          },
          end: {
            line: 371,
            column: 46
          }
        },
        line: 371
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 52
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 390
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        loc: {
          start: {
            line: 415,
            column: 44
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 415
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 33
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 445
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 30
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 497
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        loc: {
          start: {
            line: 529,
            column: 32
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 529
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 531,
            column: 17
          },
          end: {
            line: 531,
            column: 18
          }
        },
        loc: {
          start: {
            line: 531,
            column: 28
          },
          end: {
            line: 531,
            column: 56
          }
        },
        line: 531
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 537,
            column: 35
          },
          end: {
            line: 537,
            column: 36
          }
        },
        loc: {
          start: {
            line: 537,
            column: 45
          },
          end: {
            line: 537,
            column: 82
          }
        },
        line: 537
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 540,
            column: 40
          },
          end: {
            line: 540,
            column: 41
          }
        },
        loc: {
          start: {
            line: 540,
            column: 50
          },
          end: {
            line: 540,
            column: 88
          }
        },
        line: 540
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 543,
            column: 40
          },
          end: {
            line: 543,
            column: 41
          }
        },
        loc: {
          start: {
            line: 543,
            column: 50
          },
          end: {
            line: 543,
            column: 88
          }
        },
        line: 543
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 546,
            column: 40
          },
          end: {
            line: 546,
            column: 41
          }
        },
        loc: {
          start: {
            line: 546,
            column: 50
          },
          end: {
            line: 546,
            column: 87
          }
        },
        line: 546
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 559,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        loc: {
          start: {
            line: 559,
            column: 34
          },
          end: {
            line: 583,
            column: 5
          }
        },
        line: 559
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 561,
            column: 53
          },
          end: {
            line: 561,
            column: 54
          }
        },
        loc: {
          start: {
            line: 561,
            column: 62
          },
          end: {
            line: 561,
            column: 91
          }
        },
        line: 561
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 566,
            column: 49
          },
          end: {
            line: 566,
            column: 50
          }
        },
        loc: {
          start: {
            line: 566,
            column: 58
          },
          end: {
            line: 566,
            column: 83
          }
        },
        line: 566
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 590,
            column: 4
          },
          end: {
            line: 590,
            column: 5
          }
        },
        loc: {
          start: {
            line: 590,
            column: 34
          },
          end: {
            line: 600,
            column: 5
          }
        },
        line: 590
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 591,
            column: 26
          },
          end: {
            line: 591,
            column: 27
          }
        },
        loc: {
          start: {
            line: 591,
            column: 36
          },
          end: {
            line: 599,
            column: 9
          }
        },
        line: 591
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 604,
            column: 4
          },
          end: {
            line: 604,
            column: 5
          }
        },
        loc: {
          start: {
            line: 604,
            column: 25
          },
          end: {
            line: 608,
            column: 5
          }
        },
        line: 604
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 605,
            column: 44
          },
          end: {
            line: 605,
            column: 45
          }
        },
        loc: {
          start: {
            line: 605,
            column: 69
          },
          end: {
            line: 607,
            column: 9
          }
        },
        line: 605
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 21
          }
        }, {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 78
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "5": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "6": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "7": {
        loc: {
          start: {
            line: 165,
            column: 29
          },
          end: {
            line: 165,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 50
          },
          end: {
            line: 165,
            column: 77
          }
        }, {
          start: {
            line: 165,
            column: 80
          },
          end: {
            line: 165,
            column: 83
          }
        }],
        line: 165
      },
      "8": {
        loc: {
          start: {
            line: 193,
            column: 43
          },
          end: {
            line: 193,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 51
          },
          end: {
            line: 193,
            column: 54
          }
        }],
        line: 193
      },
      "9": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "10": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "11": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "12": {
        loc: {
          start: {
            line: 226,
            column: 20
          },
          end: {
            line: 226,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 20
          },
          end: {
            line: 226,
            column: 49
          }
        }, {
          start: {
            line: 226,
            column: 53
          },
          end: {
            line: 226,
            column: 78
          }
        }],
        line: 226
      },
      "13": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "14": {
        loc: {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 286,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 50
          },
          end: {
            line: 286,
            column: 76
          }
        }, {
          start: {
            line: 286,
            column: 79
          },
          end: {
            line: 286,
            column: 106
          }
        }],
        line: 286
      },
      "15": {
        loc: {
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "16": {
        loc: {
          start: {
            line: 312,
            column: 34
          },
          end: {
            line: 312,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 59
          },
          end: {
            line: 312,
            column: 72
          }
        }, {
          start: {
            line: 312,
            column: 75
          },
          end: {
            line: 312,
            column: 90
          }
        }],
        line: 312
      },
      "17": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "18": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: 351,
            column: 13
          },
          end: {
            line: 354,
            column: 9
          }
        }],
        line: 347
      },
      "19": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "20": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        }],
        line: 374
      },
      "21": {
        loc: {
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: 380,
            column: 13
          },
          end: {
            line: 382,
            column: 9
          }
        }],
        line: 377
      },
      "22": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 404,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "23": {
        loc: {
          start: {
            line: 401,
            column: 26
          },
          end: {
            line: 401,
            column: 161
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 74
          },
          end: {
            line: 401,
            column: 118
          }
        }, {
          start: {
            line: 401,
            column: 121
          },
          end: {
            line: 401,
            column: 161
          }
        }],
        line: 401
      },
      "24": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "25": {
        loc: {
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 406,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 406,
            column: 36
          }
        }, {
          start: {
            line: 406,
            column: 40
          },
          end: {
            line: 406,
            column: 92
          }
        }],
        line: 406
      },
      "26": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "27": {
        loc: {
          start: {
            line: 420,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "28": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "29": {
        loc: {
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 498,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 498,
            column: 31
          }
        }, {
          start: {
            line: 498,
            column: 35
          },
          end: {
            line: 498,
            column: 60
          }
        }],
        line: 498
      },
      "30": {
        loc: {
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "31": {
        loc: {
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "32": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "33": {
        loc: {
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "34": {
        loc: {
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "35": {
        loc: {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }],
        line: 537
      },
      "36": {
        loc: {
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: 543,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }],
        line: 540
      },
      "37": {
        loc: {
          start: {
            line: 543,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: 546,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }],
        line: 543
      },
      "38": {
        loc: {
          start: {
            line: 546,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: 549,
            column: 13
          },
          end: {
            line: 551,
            column: 9
          }
        }],
        line: 546
      },
      "39": {
        loc: {
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 564,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      },
      "40": {
        loc: {
          start: {
            line: 567,
            column: 8
          },
          end: {
            line: 569,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 567,
            column: 8
          },
          end: {
            line: 569,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 567
      },
      "41": {
        loc: {
          start: {
            line: 571,
            column: 8
          },
          end: {
            line: 582,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 8
          },
          end: {
            line: 582,
            column: 9
          }
        }, {
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        }],
        line: 571
      },
      "42": {
        loc: {
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        }, {
          start: {
            line: 577,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        }],
        line: 574
      },
      "43": {
        loc: {
          start: {
            line: 577,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        }, {
          start: {
            line: 580,
            column: 13
          },
          end: {
            line: 582,
            column: 9
          }
        }],
        line: 577
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-health-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-health-monitor.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - SYSTEM HEALTH MONITOR\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive system health monitoring and status\r\n * reporting for all components in the trading system. It tracks component\r\n * health, system metrics, and provides early warning for potential issues.\r\n * \r\n * CRITICAL SYSTEM NOTICE:\r\n * System health monitoring is essential for maintaining 24/7 trading\r\n * operations. Early detection of issues prevents financial losses and\r\n * ensures system reliability.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\nimport { SystemComponent, ComponentHealth, ComponentStatus } from './system-orchestrator';\r\nimport { communicationBus, MessagePriority } from './communication-bus';\r\n\r\n/**\r\n * System health status enumeration\r\n */\r\nexport enum SystemHealthStatus {\r\n  HEALTHY = 'HEALTHY',\r\n  WARNING = 'WARNING',\r\n  CRITICAL = 'CRITICAL',\r\n  DEGRADED = 'DEGRADED',\r\n  OFFLINE = 'OFFLINE'\r\n}\r\n\r\n/**\r\n * Health check result interface\r\n */\r\nexport interface HealthCheckResult {\r\n  /** Component identifier */\r\n  componentId: string;\r\n  /** Health status */\r\n  status: SystemHealthStatus;\r\n  /** Health score (0-100) */\r\n  score: number;\r\n  /** Check timestamp */\r\n  timestamp: Date;\r\n  /** Response time in milliseconds */\r\n  responseTime: number;\r\n  /** Health details */\r\n  details: Record<string, any>;\r\n  /** Issues found */\r\n  issues: HealthIssue[];\r\n  /** Recommendations */\r\n  recommendations: string[];\r\n}\r\n\r\n/**\r\n * Health issue interface\r\n */\r\nexport interface HealthIssue {\r\n  /** Issue severity */\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Issue category */\r\n  category: string;\r\n  /** Issue description */\r\n  description: string;\r\n  /** Issue code */\r\n  code: string;\r\n  /** Affected metrics */\r\n  affectedMetrics: string[];\r\n  /** Suggested actions */\r\n  suggestedActions: string[];\r\n  /** Issue timestamp */\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * System metrics interface\r\n */\r\nexport interface SystemMetrics {\r\n  /** CPU metrics */\r\n  cpu: {\r\n    usage: number;\r\n    temperature: number;\r\n    loadAverage: number[];\r\n    processes: number;\r\n  };\r\n  /** Memory metrics */\r\n  memory: {\r\n    total: number;\r\n    used: number;\r\n    free: number;\r\n    usage: number;\r\n    swapUsed: number;\r\n  };\r\n  /** Disk metrics */\r\n  disk: {\r\n    total: number;\r\n    used: number;\r\n    free: number;\r\n    usage: number;\r\n    ioRead: number;\r\n    ioWrite: number;\r\n  };\r\n  /** Network metrics */\r\n  network: {\r\n    bytesIn: number;\r\n    bytesOut: number;\r\n    packetsIn: number;\r\n    packetsOut: number;\r\n    errors: number;\r\n    latency: number;\r\n  };\r\n  /** Application metrics */\r\n  application: {\r\n    uptime: number;\r\n    memoryUsage: number;\r\n    activeConnections: number;\r\n    requestsPerSecond: number;\r\n    errorRate: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Health monitoring configuration\r\n */\r\nexport interface HealthMonitorConfig {\r\n  /** Health check interval in milliseconds */\r\n  checkInterval: number;\r\n  /** Health check timeout in milliseconds */\r\n  checkTimeout: number;\r\n  /** Number of failed checks before marking as unhealthy */\r\n  failureThreshold: number;\r\n  /** Number of successful checks to recover */\r\n  recoveryThreshold: number;\r\n  /** Enable automatic recovery attempts */\r\n  autoRecovery: boolean;\r\n  /** Recovery cooldown period in milliseconds */\r\n  recoveryCooldown: number;\r\n  /** Health history retention count */\r\n  historyRetention: number;\r\n  /** Enable health alerts */\r\n  enableAlerts: boolean;\r\n  /** Alert thresholds */\r\n  alertThresholds: {\r\n    cpu: number;\r\n    memory: number;\r\n    disk: number;\r\n    responseTime: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Component health tracker\r\n */\r\ninterface ComponentHealthTracker {\r\n  /** Component reference */\r\n  component: SystemComponent;\r\n  /** Current health status */\r\n  currentHealth: HealthCheckResult;\r\n  /** Health history */\r\n  healthHistory: HealthCheckResult[];\r\n  /** Consecutive failure count */\r\n  failureCount: number;\r\n  /** Consecutive success count */\r\n  successCount: number;\r\n  /** Last recovery attempt */\r\n  lastRecoveryAttempt?: Date;\r\n  /** Health trend */\r\n  trend: 'IMPROVING' | 'STABLE' | 'DEGRADING';\r\n}\r\n\r\n/**\r\n * System health monitor class\r\n */\r\nexport class SystemHealthMonitor extends EventEmitter {\r\n  private componentTrackers: Map<string, ComponentHealthTracker> = new Map();\r\n  private systemMetrics: SystemMetrics | null = null;\r\n  private monitoringInterval?: NodeJS.Timeout;\r\n  private metricsInterval?: NodeJS.Timeout;\r\n  private isMonitoring: boolean = false;\r\n  private overallHealthStatus: SystemHealthStatus = SystemHealthStatus.HEALTHY;\r\n\r\n  constructor(private config: HealthMonitorConfig) {\r\n    super();\r\n    this.setupEventHandlers();\r\n  }\r\n\r\n  /**\r\n   * Start health monitoring\r\n   */\r\n  public async startMonitoring(): Promise<void> {\r\n    if (this.isMonitoring) {\r\n      logger.warn('\u26A0\uFE0F Health monitoring already running');\r\n      return;\r\n    }\r\n\r\n    logger.info('\uD83C\uDFE5 Starting system health monitoring...');\r\n\r\n    this.isMonitoring = true;\r\n\r\n    // Start component health checks\r\n    this.monitoringInterval = setInterval(async () => {\r\n      await this.performHealthChecks();\r\n    }, this.config.checkInterval);\r\n\r\n    // Start system metrics collection\r\n    this.metricsInterval = setInterval(async () => {\r\n      await this.collectSystemMetrics();\r\n    }, 5000); // Collect metrics every 5 seconds\r\n\r\n    // Initial health check\r\n    await this.performHealthChecks();\r\n    await this.collectSystemMetrics();\r\n\r\n    // Send startup notification\r\n    await communicationBus.publish('system.health.monitoring.started', {\r\n      timestamp: new Date(),\r\n      config: this.config\r\n    }, {\r\n      priority: MessagePriority.HIGH,\r\n      source: 'system-health-monitor'\r\n    });\r\n\r\n    logger.info('\u2705 System health monitoring started');\r\n  }\r\n\r\n  /**\r\n   * Stop health monitoring\r\n   */\r\n  public async stopMonitoring(): Promise<void> {\r\n    if (!this.isMonitoring) {\r\n      return;\r\n    }\r\n\r\n    logger.info('\uD83D\uDED1 Stopping system health monitoring...');\r\n\r\n    this.isMonitoring = false;\r\n\r\n    // Clear intervals\r\n    if (this.monitoringInterval) {\r\n      clearInterval(this.monitoringInterval);\r\n      this.monitoringInterval = undefined;\r\n    }\r\n\r\n    if (this.metricsInterval) {\r\n      clearInterval(this.metricsInterval);\r\n      this.metricsInterval = undefined;\r\n    }\r\n\r\n    // Send shutdown notification\r\n    await communicationBus.publish('system.health.monitoring.stopped', {\r\n      timestamp: new Date(),\r\n      finalStatus: this.overallHealthStatus\r\n    }, {\r\n      priority: MessagePriority.HIGH,\r\n      source: 'system-health-monitor'\r\n    });\r\n\r\n    logger.info('\u2705 System health monitoring stopped');\r\n  }\r\n\r\n  /**\r\n   * Register component for health monitoring\r\n   * \r\n   * @param component System component to monitor\r\n   */\r\n  public registerComponent(component: SystemComponent): void {\r\n    logger.info(`\uD83D\uDCCB Registering component for health monitoring: ${component.id}`);\r\n\r\n    const tracker: ComponentHealthTracker = {\r\n      component,\r\n      currentHealth: {\r\n        componentId: component.id,\r\n        status: SystemHealthStatus.HEALTHY,\r\n        score: 100,\r\n        timestamp: new Date(),\r\n        responseTime: 0,\r\n        details: {},\r\n        issues: [],\r\n        recommendations: []\r\n      },\r\n      healthHistory: [],\r\n      failureCount: 0,\r\n      successCount: 0,\r\n      trend: 'STABLE'\r\n    };\r\n\r\n    this.componentTrackers.set(component.id, tracker);\r\n\r\n    logger.info(`\u2705 Component registered for health monitoring: ${component.id}`);\r\n  }\r\n\r\n  /**\r\n   * Unregister component from health monitoring\r\n   * \r\n   * @param componentId Component identifier\r\n   */\r\n  public unregisterComponent(componentId: string): void {\r\n    if (this.componentTrackers.has(componentId)) {\r\n      this.componentTrackers.delete(componentId);\r\n      logger.info(`\uD83D\uDCE4 Component unregistered from health monitoring: ${componentId}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current system health status\r\n   * \r\n   * @returns System health status\r\n   */\r\n  public getSystemHealthStatus(): {\r\n    overallStatus: SystemHealthStatus;\r\n    overallScore: number;\r\n    componentCount: number;\r\n    healthyComponents: number;\r\n    unhealthyComponents: number;\r\n    systemMetrics: SystemMetrics | null;\r\n    lastUpdate: Date;\r\n  } {\r\n    const componentCount = this.componentTrackers.size;\r\n    let healthyComponents = 0;\r\n    let totalScore = 0;\r\n\r\n    for (const tracker of this.componentTrackers.values()) {\r\n      if (tracker.currentHealth.status === SystemHealthStatus.HEALTHY) {\r\n        healthyComponents++;\r\n      }\r\n      totalScore += tracker.currentHealth.score;\r\n    }\r\n\r\n    const overallScore = componentCount > 0 ? totalScore / componentCount : 100;\r\n\r\n    return {\r\n      overallStatus: this.overallHealthStatus,\r\n      overallScore,\r\n      componentCount,\r\n      healthyComponents,\r\n      unhealthyComponents: componentCount - healthyComponents,\r\n      systemMetrics: this.systemMetrics,\r\n      lastUpdate: new Date()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get component health status\r\n   * \r\n   * @param componentId Component identifier\r\n   * @returns Component health status or undefined\r\n   */\r\n  public getComponentHealth(componentId: string): HealthCheckResult | undefined {\r\n    const tracker = this.componentTrackers.get(componentId);\r\n    return tracker?.currentHealth;\r\n  }\r\n\r\n  /**\r\n   * Get component health history\r\n   * \r\n   * @param componentId Component identifier\r\n   * @param limit Maximum number of history entries\r\n   * @returns Array of health check results\r\n   */\r\n  public getComponentHealthHistory(componentId: string, limit: number = 100): HealthCheckResult[] {\r\n    const tracker = this.componentTrackers.get(componentId);\r\n    if (!tracker) {\r\n      return [];\r\n    }\r\n\r\n    return tracker.healthHistory.slice(-limit);\r\n  }\r\n\r\n  /**\r\n   * Force health check for specific component\r\n   * \r\n   * @param componentId Component identifier\r\n   * @returns Promise<HealthCheckResult>\r\n   */\r\n  public async forceHealthCheck(componentId: string): Promise<HealthCheckResult> {\r\n    const tracker = this.componentTrackers.get(componentId);\r\n    if (!tracker) {\r\n      throw new Error(`Component not registered: ${componentId}`);\r\n    }\r\n\r\n    return await this.performComponentHealthCheck(tracker);\r\n  }\r\n\r\n  /**\r\n   * Get system health report\r\n   * \r\n   * @returns Comprehensive health report\r\n   */\r\n  public getHealthReport(): {\r\n    timestamp: Date;\r\n    overallStatus: SystemHealthStatus;\r\n    overallScore: number;\r\n    systemMetrics: SystemMetrics | null;\r\n    components: HealthCheckResult[];\r\n    criticalIssues: HealthIssue[];\r\n    recommendations: string[];\r\n  } {\r\n    const components: HealthCheckResult[] = [];\r\n    const criticalIssues: HealthIssue[] = [];\r\n    const recommendations: Set<string> = new Set();\r\n\r\n    for (const tracker of this.componentTrackers.values()) {\r\n      components.push(tracker.currentHealth);\r\n\r\n      // Collect critical issues\r\n      for (const issue of tracker.currentHealth.issues) {\r\n        if (issue.severity === 'CRITICAL' || issue.severity === 'HIGH') {\r\n          criticalIssues.push(issue);\r\n        }\r\n      }\r\n\r\n      // Collect recommendations\r\n      for (const recommendation of tracker.currentHealth.recommendations) {\r\n        recommendations.add(recommendation);\r\n      }\r\n    }\r\n\r\n    const systemStatus = this.getSystemHealthStatus();\r\n\r\n    return {\r\n      timestamp: new Date(),\r\n      overallStatus: systemStatus.overallStatus,\r\n      overallScore: systemStatus.overallScore,\r\n      systemMetrics: this.systemMetrics,\r\n      components,\r\n      criticalIssues,\r\n      recommendations: Array.from(recommendations)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Perform health checks on all registered components\r\n   */\r\n  private async performHealthChecks(): Promise<void> {\r\n    if (!this.isMonitoring) {\r\n      return;\r\n    }\r\n\r\n    const healthCheckPromises: Promise<void>[] = [];\r\n\r\n    for (const tracker of this.componentTrackers.values()) {\r\n      healthCheckPromises.push(\r\n        this.performComponentHealthCheck(tracker)\r\n          .then(() => {}) // Convert to void\r\n          .catch(error => {\r\n            logger.error(`\u274C Health check failed for ${tracker.component.id}:`, error);\r\n          })\r\n      );\r\n    }\r\n\r\n    await Promise.allSettled(healthCheckPromises);\r\n\r\n    // Update overall system health\r\n    this.updateOverallHealthStatus();\r\n  }\r\n\r\n  /**\r\n   * Perform health check for specific component\r\n   * \r\n   * @param tracker Component health tracker\r\n   * @returns Promise<HealthCheckResult>\r\n   */\r\n  private async performComponentHealthCheck(tracker: ComponentHealthTracker): Promise<HealthCheckResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      // Perform health check with timeout\r\n      const healthCheckPromise = tracker.component.healthCheck();\r\n      const timeoutPromise = new Promise<ComponentHealth>((_, reject) => {\r\n        setTimeout(() => {\r\n          reject(new Error('Health check timeout'));\r\n        }, this.config.checkTimeout);\r\n      });\r\n\r\n      const componentHealth = await Promise.race([healthCheckPromise, timeoutPromise]);\r\n      const responseTime = Date.now() - startTime;\r\n\r\n      // Convert to health check result\r\n      const result: HealthCheckResult = {\r\n        componentId: tracker.component.id,\r\n        status: componentHealth.healthy ? SystemHealthStatus.HEALTHY : SystemHealthStatus.CRITICAL,\r\n        score: componentHealth.score,\r\n        timestamp: new Date(),\r\n        responseTime,\r\n        details: componentHealth.details,\r\n        issues: this.convertToHealthIssues(componentHealth.issues),\r\n        recommendations: componentHealth.recommendations\r\n      };\r\n\r\n      // Determine status based on score and issues\r\n      result.status = this.determineHealthStatus(result);\r\n\r\n      // Update tracker\r\n      this.updateComponentTracker(tracker, result);\r\n\r\n      // Handle unhealthy components\r\n      if (result.status !== SystemHealthStatus.HEALTHY) {\r\n        await this.handleUnhealthyComponent(tracker, result);\r\n      }\r\n\r\n      return result;\r\n\r\n    } catch (error) {\r\n      const responseTime = Date.now() - startTime;\r\n      \r\n      const result: HealthCheckResult = {\r\n        componentId: tracker.component.id,\r\n        status: SystemHealthStatus.OFFLINE,\r\n        score: 0,\r\n        timestamp: new Date(),\r\n        responseTime,\r\n        details: { error: error instanceof Error ? error.message : 'Unknown error' },\r\n        issues: [{\r\n          severity: 'CRITICAL',\r\n          category: 'CONNECTIVITY',\r\n          description: 'Component health check failed',\r\n          code: 'HEALTH_CHECK_FAILED',\r\n          affectedMetrics: ['availability'],\r\n          suggestedActions: ['Restart component', 'Check component logs'],\r\n          timestamp: new Date()\r\n        }],\r\n        recommendations: ['Investigate component failure', 'Check system resources']\r\n      };\r\n\r\n      // Update tracker\r\n      this.updateComponentTracker(tracker, result);\r\n\r\n      // Handle failed health check\r\n      await this.handleUnhealthyComponent(tracker, result);\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update component tracker with new health result\r\n   * \r\n   * @param tracker Component health tracker\r\n   * @param result Health check result\r\n   */\r\n  private updateComponentTracker(tracker: ComponentHealthTracker, result: HealthCheckResult): void {\r\n    // Update current health\r\n    tracker.currentHealth = result;\r\n\r\n    // Add to history\r\n    tracker.healthHistory.push(result);\r\n\r\n    // Maintain history size\r\n    if (tracker.healthHistory.length > this.config.historyRetention) {\r\n      tracker.healthHistory = tracker.healthHistory.slice(-this.config.historyRetention);\r\n    }\r\n\r\n    // Update failure/success counts\r\n    if (result.status === SystemHealthStatus.HEALTHY) {\r\n      tracker.successCount++;\r\n      tracker.failureCount = 0;\r\n    } else {\r\n      tracker.failureCount++;\r\n      tracker.successCount = 0;\r\n    }\r\n\r\n    // Update trend\r\n    tracker.trend = this.calculateHealthTrend(tracker);\r\n\r\n    // Emit health change event\r\n    this.emit('component:health-changed', tracker.component.id, result);\r\n  }\r\n\r\n  /**\r\n   * Calculate health trend for component\r\n   * \r\n   * @param tracker Component health tracker\r\n   * @returns Health trend\r\n   */\r\n  private calculateHealthTrend(tracker: ComponentHealthTracker): 'IMPROVING' | 'STABLE' | 'DEGRADING' {\r\n    if (tracker.healthHistory.length < 3) {\r\n      return 'STABLE';\r\n    }\r\n\r\n    const recent = tracker.healthHistory.slice(-3);\r\n    const scores = recent.map(h => h.score);\r\n\r\n    const firstScore = scores[0];\r\n    const lastScore = scores[scores.length - 1];\r\n\r\n    if (lastScore > firstScore + 10) {\r\n      return 'IMPROVING';\r\n    } else if (lastScore < firstScore - 10) {\r\n      return 'DEGRADING';\r\n    } else {\r\n      return 'STABLE';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle unhealthy component\r\n   * \r\n   * @param tracker Component health tracker\r\n   * @param result Health check result\r\n   */\r\n  private async handleUnhealthyComponent(\r\n    tracker: ComponentHealthTracker,\r\n    result: HealthCheckResult\r\n  ): Promise<void> {\r\n    // Send health alert\r\n    if (this.config.enableAlerts) {\r\n      await communicationBus.publish('system.health.component.unhealthy', {\r\n        componentId: tracker.component.id,\r\n        status: result.status,\r\n        score: result.score,\r\n        issues: result.issues,\r\n        recommendations: result.recommendations,\r\n        timestamp: result.timestamp\r\n      }, {\r\n        priority: result.status === SystemHealthStatus.CRITICAL ? MessagePriority.CRITICAL : MessagePriority.HIGH,\r\n        source: 'system-health-monitor'\r\n      });\r\n    }\r\n\r\n    // Attempt recovery if enabled\r\n    if (this.config.autoRecovery && tracker.failureCount >= this.config.failureThreshold) {\r\n      await this.attemptComponentRecovery(tracker);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt to recover unhealthy component\r\n   * \r\n   * @param tracker Component health tracker\r\n   */\r\n  private async attemptComponentRecovery(tracker: ComponentHealthTracker): Promise<void> {\r\n    const now = new Date();\r\n    \r\n    // Check cooldown period\r\n    if (tracker.lastRecoveryAttempt) {\r\n      const timeSinceLastRecovery = now.getTime() - tracker.lastRecoveryAttempt.getTime();\r\n      if (timeSinceLastRecovery < this.config.recoveryCooldown) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    logger.warn(`\uD83D\uDD04 Attempting recovery for unhealthy component: ${tracker.component.id}`);\r\n    tracker.lastRecoveryAttempt = now;\r\n\r\n    try {\r\n      // Send recovery request\r\n      await communicationBus.publish('system.component.recovery.request', {\r\n        componentId: tracker.component.id,\r\n        reason: 'HEALTH_CHECK_FAILURE',\r\n        timestamp: now\r\n      }, {\r\n        priority: MessagePriority.HIGH,\r\n        source: 'system-health-monitor'\r\n      });\r\n\r\n      logger.info(`\u2705 Recovery request sent for component: ${tracker.component.id}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to send recovery request for ${tracker.component.id}:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect system metrics\r\n   */\r\n  private async collectSystemMetrics(): Promise<void> {\r\n    try {\r\n      // This would integrate with system monitoring tools\r\n      // For now, we'll create mock metrics\r\n      this.systemMetrics = {\r\n        cpu: {\r\n          usage: Math.random() * 100,\r\n          temperature: 45 + Math.random() * 20,\r\n          loadAverage: [1.2, 1.5, 1.8],\r\n          processes: 150 + Math.floor(Math.random() * 50)\r\n        },\r\n        memory: {\r\n          total: 12 * 1024 * 1024 * 1024, // 12GB\r\n          used: 8 * 1024 * 1024 * 1024,   // 8GB\r\n          free: 4 * 1024 * 1024 * 1024,   // 4GB\r\n          usage: 66.7,\r\n          swapUsed: 0\r\n        },\r\n        disk: {\r\n          total: 256 * 1024 * 1024 * 1024, // 256GB\r\n          used: 128 * 1024 * 1024 * 1024,  // 128GB\r\n          free: 128 * 1024 * 1024 * 1024,  // 128GB\r\n          usage: 50,\r\n          ioRead: 1000,\r\n          ioWrite: 500\r\n        },\r\n        network: {\r\n          bytesIn: 1000000,\r\n          bytesOut: 500000,\r\n          packetsIn: 1000,\r\n          packetsOut: 800,\r\n          errors: 0,\r\n          latency: 10\r\n        },\r\n        application: {\r\n          uptime: process.uptime() * 1000,\r\n          memoryUsage: process.memoryUsage().heapUsed,\r\n          activeConnections: 10,\r\n          requestsPerSecond: 50,\r\n          errorRate: 0.1\r\n        }\r\n      };\r\n\r\n      // Check for metric alerts\r\n      await this.checkMetricAlerts();\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to collect system metrics:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check for metric-based alerts\r\n   */\r\n  private async checkMetricAlerts(): Promise<void> {\r\n    if (!this.systemMetrics || !this.config.enableAlerts) {\r\n      return;\r\n    }\r\n\r\n    const alerts: string[] = [];\r\n\r\n    // Check CPU usage\r\n    if (this.systemMetrics.cpu.usage > this.config.alertThresholds.cpu) {\r\n      alerts.push(`High CPU usage: ${this.systemMetrics.cpu.usage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Check memory usage\r\n    if (this.systemMetrics.memory.usage > this.config.alertThresholds.memory) {\r\n      alerts.push(`High memory usage: ${this.systemMetrics.memory.usage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Check disk usage\r\n    if (this.systemMetrics.disk.usage > this.config.alertThresholds.disk) {\r\n      alerts.push(`High disk usage: ${this.systemMetrics.disk.usage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Send alerts if any\r\n    if (alerts.length > 0) {\r\n      await communicationBus.publish('system.health.metrics.alert', {\r\n        alerts,\r\n        metrics: this.systemMetrics,\r\n        timestamp: new Date()\r\n      }, {\r\n        priority: MessagePriority.HIGH,\r\n        source: 'system-health-monitor'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update overall system health status\r\n   */\r\n  private updateOverallHealthStatus(): void {\r\n    const componentStatuses = Array.from(this.componentTrackers.values())\r\n      .map(tracker => tracker.currentHealth.status);\r\n\r\n    if (componentStatuses.length === 0) {\r\n      this.overallHealthStatus = SystemHealthStatus.HEALTHY;\r\n      return;\r\n    }\r\n\r\n    // Determine overall status based on component statuses\r\n    if (componentStatuses.some(status => status === SystemHealthStatus.OFFLINE)) {\r\n      this.overallHealthStatus = SystemHealthStatus.OFFLINE;\r\n    } else if (componentStatuses.some(status => status === SystemHealthStatus.CRITICAL)) {\r\n      this.overallHealthStatus = SystemHealthStatus.CRITICAL;\r\n    } else if (componentStatuses.some(status => status === SystemHealthStatus.DEGRADED)) {\r\n      this.overallHealthStatus = SystemHealthStatus.DEGRADED;\r\n    } else if (componentStatuses.some(status => status === SystemHealthStatus.WARNING)) {\r\n      this.overallHealthStatus = SystemHealthStatus.WARNING;\r\n    } else {\r\n      this.overallHealthStatus = SystemHealthStatus.HEALTHY;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine health status based on score and issues\r\n   * \r\n   * @param result Health check result\r\n   * @returns System health status\r\n   */\r\n  private determineHealthStatus(result: HealthCheckResult): SystemHealthStatus {\r\n    // Check for critical issues\r\n    const hasCriticalIssues = result.issues.some(issue => issue.severity === 'CRITICAL');\r\n    if (hasCriticalIssues) {\r\n      return SystemHealthStatus.CRITICAL;\r\n    }\r\n\r\n    // Check for high severity issues\r\n    const hasHighIssues = result.issues.some(issue => issue.severity === 'HIGH');\r\n    if (hasHighIssues) {\r\n      return SystemHealthStatus.DEGRADED;\r\n    }\r\n\r\n    // Check score thresholds\r\n    if (result.score >= 90) {\r\n      return SystemHealthStatus.HEALTHY;\r\n    } else if (result.score >= 70) {\r\n      return SystemHealthStatus.WARNING;\r\n    } else if (result.score >= 50) {\r\n      return SystemHealthStatus.DEGRADED;\r\n    } else {\r\n      return SystemHealthStatus.CRITICAL;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert component issues to health issues\r\n   * \r\n   * @param issues Component issues\r\n   * @returns Array of health issues\r\n   */\r\n  private convertToHealthIssues(issues: string[]): HealthIssue[] {\r\n    return issues.map(issue => ({\r\n      severity: 'MEDIUM' as const,\r\n      category: 'GENERAL',\r\n      description: issue,\r\n      code: 'COMPONENT_ISSUE',\r\n      affectedMetrics: [],\r\n      suggestedActions: ['Investigate issue'],\r\n      timestamp: new Date()\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Setup event handlers\r\n   */\r\n  private setupEventHandlers(): void {\r\n    this.on('component:health-changed', (componentId: string, health: HealthCheckResult) => {\r\n      logger.debug(`\uD83C\uDFE5 Component health changed: ${componentId} - ${health.status} (${health.score})`);\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Default health monitoring configuration\r\n */\r\nexport const defaultHealthMonitorConfig: HealthMonitorConfig = {\r\n  checkInterval: 30000,        // 30 seconds\r\n  checkTimeout: 10000,         // 10 seconds\r\n  failureThreshold: 3,         // 3 consecutive failures\r\n  recoveryThreshold: 2,        // 2 consecutive successes\r\n  autoRecovery: true,\r\n  recoveryCooldown: 300000,    // 5 minutes\r\n  historyRetention: 100,       // Keep last 100 health checks\r\n  enableAlerts: true,\r\n  alertThresholds: {\r\n    cpu: 80,                   // 80% CPU usage\r\n    memory: 85,                // 85% memory usage\r\n    disk: 90,                  // 90% disk usage\r\n    responseTime: 5000         // 5 second response time\r\n  }\r\n};\r\n\r\n// =============================================================================\r\n// SYSTEM HEALTH MONITORING NOTES\r\n// =============================================================================\r\n// 1. Comprehensive component health monitoring with configurable intervals\r\n// 2. System metrics collection and threshold-based alerting\r\n// 3. Health trend analysis and predictive issue detection\r\n// 4. Automatic recovery attempts with cooldown periods\r\n// 5. Health history tracking for performance analysis\r\n// 6. Event-driven health status changes and notifications\r\n// 7. Integration with communication bus for system-wide alerts\r\n// 8. Configurable thresholds and monitoring parameters\r\n// ============================================================================="],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99c7a5385a310219b334463e4e1ab0a7ff497daa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7n4m2jwp1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7n4m2jwp1();
cov_7n4m2jwp1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7n4m2jwp1().s[1]++;
exports.defaultHealthMonitorConfig = exports.SystemHealthMonitor = exports.SystemHealthStatus = void 0;
const events_1 =
/* istanbul ignore next */
(cov_7n4m2jwp1().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_7n4m2jwp1().s[3]++, require("@/core/logging/logger"));
const communication_bus_1 =
/* istanbul ignore next */
(cov_7n4m2jwp1().s[4]++, require("./communication-bus"));
/**
 * System health status enumeration
 */
var SystemHealthStatus;
/* istanbul ignore next */
cov_7n4m2jwp1().s[5]++;
(function (SystemHealthStatus) {
  /* istanbul ignore next */
  cov_7n4m2jwp1().f[0]++;
  cov_7n4m2jwp1().s[6]++;
  SystemHealthStatus["HEALTHY"] = "HEALTHY";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[7]++;
  SystemHealthStatus["WARNING"] = "WARNING";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[8]++;
  SystemHealthStatus["CRITICAL"] = "CRITICAL";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[9]++;
  SystemHealthStatus["DEGRADED"] = "DEGRADED";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[10]++;
  SystemHealthStatus["OFFLINE"] = "OFFLINE";
})(
/* istanbul ignore next */
(cov_7n4m2jwp1().b[0][0]++, SystemHealthStatus) ||
/* istanbul ignore next */
(cov_7n4m2jwp1().b[0][1]++, exports.SystemHealthStatus = SystemHealthStatus = {}));
/**
 * System health monitor class
 */
class SystemHealthMonitor extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  config;
  componentTrackers =
  /* istanbul ignore next */
  (cov_7n4m2jwp1().s[11]++, new Map());
  systemMetrics =
  /* istanbul ignore next */
  (cov_7n4m2jwp1().s[12]++, null);
  monitoringInterval;
  metricsInterval;
  isMonitoring =
  /* istanbul ignore next */
  (cov_7n4m2jwp1().s[13]++, false);
  overallHealthStatus =
  /* istanbul ignore next */
  (cov_7n4m2jwp1().s[14]++, SystemHealthStatus.HEALTHY);
  constructor(config) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[1]++;
    cov_7n4m2jwp1().s[15]++;
    super();
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[16]++;
    this.config = config;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[17]++;
    this.setupEventHandlers();
  }
  /**
   * Start health monitoring
   */
  async startMonitoring() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[2]++;
    cov_7n4m2jwp1().s[18]++;
    if (this.isMonitoring) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[1][0]++;
      cov_7n4m2jwp1().s[19]++;
      logger_1.logger.warn('⚠️ Health monitoring already running');
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[1][1]++;
    }
    cov_7n4m2jwp1().s[21]++;
    logger_1.logger.info('🏥 Starting system health monitoring...');
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[22]++;
    this.isMonitoring = true;
    // Start component health checks
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[23]++;
    this.monitoringInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[3]++;
      cov_7n4m2jwp1().s[24]++;
      await this.performHealthChecks();
    }, this.config.checkInterval);
    // Start system metrics collection
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[25]++;
    this.metricsInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[4]++;
      cov_7n4m2jwp1().s[26]++;
      await this.collectSystemMetrics();
    }, 5000); // Collect metrics every 5 seconds
    // Initial health check
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[27]++;
    await this.performHealthChecks();
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[28]++;
    await this.collectSystemMetrics();
    // Send startup notification
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[29]++;
    await communication_bus_1.communicationBus.publish('system.health.monitoring.started', {
      timestamp: new Date(),
      config: this.config
    }, {
      priority: communication_bus_1.MessagePriority.HIGH,
      source: 'system-health-monitor'
    });
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[30]++;
    logger_1.logger.info('✅ System health monitoring started');
  }
  /**
   * Stop health monitoring
   */
  async stopMonitoring() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[5]++;
    cov_7n4m2jwp1().s[31]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[2][0]++;
      cov_7n4m2jwp1().s[32]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[2][1]++;
    }
    cov_7n4m2jwp1().s[33]++;
    logger_1.logger.info('🛑 Stopping system health monitoring...');
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[34]++;
    this.isMonitoring = false;
    // Clear intervals
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[35]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[3][0]++;
      cov_7n4m2jwp1().s[36]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[37]++;
      this.monitoringInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[3][1]++;
    }
    cov_7n4m2jwp1().s[38]++;
    if (this.metricsInterval) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[4][0]++;
      cov_7n4m2jwp1().s[39]++;
      clearInterval(this.metricsInterval);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[40]++;
      this.metricsInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[4][1]++;
    }
    // Send shutdown notification
    cov_7n4m2jwp1().s[41]++;
    await communication_bus_1.communicationBus.publish('system.health.monitoring.stopped', {
      timestamp: new Date(),
      finalStatus: this.overallHealthStatus
    }, {
      priority: communication_bus_1.MessagePriority.HIGH,
      source: 'system-health-monitor'
    });
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[42]++;
    logger_1.logger.info('✅ System health monitoring stopped');
  }
  /**
   * Register component for health monitoring
   *
   * @param component System component to monitor
   */
  registerComponent(component) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[6]++;
    cov_7n4m2jwp1().s[43]++;
    logger_1.logger.info(`📋 Registering component for health monitoring: ${component.id}`);
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[44]++, {
      component,
      currentHealth: {
        componentId: component.id,
        status: SystemHealthStatus.HEALTHY,
        score: 100,
        timestamp: new Date(),
        responseTime: 0,
        details: {},
        issues: [],
        recommendations: []
      },
      healthHistory: [],
      failureCount: 0,
      successCount: 0,
      trend: 'STABLE'
    });
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[45]++;
    this.componentTrackers.set(component.id, tracker);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[46]++;
    logger_1.logger.info(`✅ Component registered for health monitoring: ${component.id}`);
  }
  /**
   * Unregister component from health monitoring
   *
   * @param componentId Component identifier
   */
  unregisterComponent(componentId) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[7]++;
    cov_7n4m2jwp1().s[47]++;
    if (this.componentTrackers.has(componentId)) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[5][0]++;
      cov_7n4m2jwp1().s[48]++;
      this.componentTrackers.delete(componentId);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[49]++;
      logger_1.logger.info(`📤 Component unregistered from health monitoring: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[5][1]++;
    }
  }
  /**
   * Get current system health status
   *
   * @returns System health status
   */
  getSystemHealthStatus() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[8]++;
    const componentCount =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[50]++, this.componentTrackers.size);
    let healthyComponents =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[51]++, 0);
    let totalScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[52]++, 0);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[53]++;
    for (const tracker of this.componentTrackers.values()) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[54]++;
      if (tracker.currentHealth.status === SystemHealthStatus.HEALTHY) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[6][0]++;
        cov_7n4m2jwp1().s[55]++;
        healthyComponents++;
      } else
      /* istanbul ignore next */
      {
        cov_7n4m2jwp1().b[6][1]++;
      }
      cov_7n4m2jwp1().s[56]++;
      totalScore += tracker.currentHealth.score;
    }
    const overallScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[57]++, componentCount > 0 ?
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[7][0]++, totalScore / componentCount) :
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[7][1]++, 100));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[58]++;
    return {
      overallStatus: this.overallHealthStatus,
      overallScore,
      componentCount,
      healthyComponents,
      unhealthyComponents: componentCount - healthyComponents,
      systemMetrics: this.systemMetrics,
      lastUpdate: new Date()
    };
  }
  /**
   * Get component health status
   *
   * @param componentId Component identifier
   * @returns Component health status or undefined
   */
  getComponentHealth(componentId) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[9]++;
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[59]++, this.componentTrackers.get(componentId));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[60]++;
    return tracker?.currentHealth;
  }
  /**
   * Get component health history
   *
   * @param componentId Component identifier
   * @param limit Maximum number of history entries
   * @returns Array of health check results
   */
  getComponentHealthHistory(componentId, limit =
  /* istanbul ignore next */
  (cov_7n4m2jwp1().b[8][0]++, 100)) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[10]++;
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[61]++, this.componentTrackers.get(componentId));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[62]++;
    if (!tracker) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[9][0]++;
      cov_7n4m2jwp1().s[63]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[9][1]++;
    }
    cov_7n4m2jwp1().s[64]++;
    return tracker.healthHistory.slice(-limit);
  }
  /**
   * Force health check for specific component
   *
   * @param componentId Component identifier
   * @returns Promise<HealthCheckResult>
   */
  async forceHealthCheck(componentId) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[11]++;
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[65]++, this.componentTrackers.get(componentId));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[66]++;
    if (!tracker) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[10][0]++;
      cov_7n4m2jwp1().s[67]++;
      throw new Error(`Component not registered: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[10][1]++;
    }
    cov_7n4m2jwp1().s[68]++;
    return await this.performComponentHealthCheck(tracker);
  }
  /**
   * Get system health report
   *
   * @returns Comprehensive health report
   */
  getHealthReport() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[12]++;
    const components =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[69]++, []);
    const criticalIssues =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[70]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[71]++, new Set());
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[72]++;
    for (const tracker of this.componentTrackers.values()) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[73]++;
      components.push(tracker.currentHealth);
      // Collect critical issues
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[74]++;
      for (const issue of tracker.currentHealth.issues) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().s[75]++;
        if (
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[12][0]++, issue.severity === 'CRITICAL') ||
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[12][1]++, issue.severity === 'HIGH')) {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[11][0]++;
          cov_7n4m2jwp1().s[76]++;
          criticalIssues.push(issue);
        } else
        /* istanbul ignore next */
        {
          cov_7n4m2jwp1().b[11][1]++;
        }
      }
      // Collect recommendations
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[77]++;
      for (const recommendation of tracker.currentHealth.recommendations) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().s[78]++;
        recommendations.add(recommendation);
      }
    }
    const systemStatus =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[79]++, this.getSystemHealthStatus());
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[80]++;
    return {
      timestamp: new Date(),
      overallStatus: systemStatus.overallStatus,
      overallScore: systemStatus.overallScore,
      systemMetrics: this.systemMetrics,
      components,
      criticalIssues,
      recommendations: Array.from(recommendations)
    };
  }
  /**
   * Perform health checks on all registered components
   */
  async performHealthChecks() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[13]++;
    cov_7n4m2jwp1().s[81]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[13][0]++;
      cov_7n4m2jwp1().s[82]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[13][1]++;
    }
    const healthCheckPromises =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[83]++, []);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[84]++;
    for (const tracker of this.componentTrackers.values()) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[85]++;
      healthCheckPromises.push(this.performComponentHealthCheck(tracker).then(() => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[14]++;
      }) // Convert to void
      .catch(error => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[15]++;
        cov_7n4m2jwp1().s[86]++;
        logger_1.logger.error(`❌ Health check failed for ${tracker.component.id}:`, error);
      }));
    }
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[87]++;
    await Promise.allSettled(healthCheckPromises);
    // Update overall system health
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[88]++;
    this.updateOverallHealthStatus();
  }
  /**
   * Perform health check for specific component
   *
   * @param tracker Component health tracker
   * @returns Promise<HealthCheckResult>
   */
  async performComponentHealthCheck(tracker) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[16]++;
    const startTime =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[89]++, Date.now());
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[90]++;
    try {
      // Perform health check with timeout
      const healthCheckPromise =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[91]++, tracker.component.healthCheck());
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[92]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[17]++;
        cov_7n4m2jwp1().s[93]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_7n4m2jwp1().f[18]++;
          cov_7n4m2jwp1().s[94]++;
          reject(new Error('Health check timeout'));
        }, this.config.checkTimeout);
      }));
      const componentHealth =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[95]++, await Promise.race([healthCheckPromise, timeoutPromise]));
      const responseTime =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[96]++, Date.now() - startTime);
      // Convert to health check result
      const result =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[97]++, {
        componentId: tracker.component.id,
        status: componentHealth.healthy ?
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[14][0]++, SystemHealthStatus.HEALTHY) :
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[14][1]++, SystemHealthStatus.CRITICAL),
        score: componentHealth.score,
        timestamp: new Date(),
        responseTime,
        details: componentHealth.details,
        issues: this.convertToHealthIssues(componentHealth.issues),
        recommendations: componentHealth.recommendations
      });
      // Determine status based on score and issues
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[98]++;
      result.status = this.determineHealthStatus(result);
      // Update tracker
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[99]++;
      this.updateComponentTracker(tracker, result);
      // Handle unhealthy components
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[100]++;
      if (result.status !== SystemHealthStatus.HEALTHY) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[15][0]++;
        cov_7n4m2jwp1().s[101]++;
        await this.handleUnhealthyComponent(tracker, result);
      } else
      /* istanbul ignore next */
      {
        cov_7n4m2jwp1().b[15][1]++;
      }
      cov_7n4m2jwp1().s[102]++;
      return result;
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[103]++, Date.now() - startTime);
      const result =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[104]++, {
        componentId: tracker.component.id,
        status: SystemHealthStatus.OFFLINE,
        score: 0,
        timestamp: new Date(),
        responseTime,
        details: {
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_7n4m2jwp1().b[16][0]++, error.message) :
          /* istanbul ignore next */
          (cov_7n4m2jwp1().b[16][1]++, 'Unknown error')
        },
        issues: [{
          severity: 'CRITICAL',
          category: 'CONNECTIVITY',
          description: 'Component health check failed',
          code: 'HEALTH_CHECK_FAILED',
          affectedMetrics: ['availability'],
          suggestedActions: ['Restart component', 'Check component logs'],
          timestamp: new Date()
        }],
        recommendations: ['Investigate component failure', 'Check system resources']
      });
      // Update tracker
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[105]++;
      this.updateComponentTracker(tracker, result);
      // Handle failed health check
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[106]++;
      await this.handleUnhealthyComponent(tracker, result);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[107]++;
      return result;
    }
  }
  /**
   * Update component tracker with new health result
   *
   * @param tracker Component health tracker
   * @param result Health check result
   */
  updateComponentTracker(tracker, result) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[19]++;
    cov_7n4m2jwp1().s[108]++;
    // Update current health
    tracker.currentHealth = result;
    // Add to history
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[109]++;
    tracker.healthHistory.push(result);
    // Maintain history size
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[110]++;
    if (tracker.healthHistory.length > this.config.historyRetention) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[17][0]++;
      cov_7n4m2jwp1().s[111]++;
      tracker.healthHistory = tracker.healthHistory.slice(-this.config.historyRetention);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[17][1]++;
    }
    // Update failure/success counts
    cov_7n4m2jwp1().s[112]++;
    if (result.status === SystemHealthStatus.HEALTHY) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[18][0]++;
      cov_7n4m2jwp1().s[113]++;
      tracker.successCount++;
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[114]++;
      tracker.failureCount = 0;
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[18][1]++;
      cov_7n4m2jwp1().s[115]++;
      tracker.failureCount++;
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[116]++;
      tracker.successCount = 0;
    }
    // Update trend
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[117]++;
    tracker.trend = this.calculateHealthTrend(tracker);
    // Emit health change event
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[118]++;
    this.emit('component:health-changed', tracker.component.id, result);
  }
  /**
   * Calculate health trend for component
   *
   * @param tracker Component health tracker
   * @returns Health trend
   */
  calculateHealthTrend(tracker) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[20]++;
    cov_7n4m2jwp1().s[119]++;
    if (tracker.healthHistory.length < 3) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[19][0]++;
      cov_7n4m2jwp1().s[120]++;
      return 'STABLE';
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[19][1]++;
    }
    const recent =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[121]++, tracker.healthHistory.slice(-3));
    const scores =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[122]++, recent.map(h => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[21]++;
      cov_7n4m2jwp1().s[123]++;
      return h.score;
    }));
    const firstScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[124]++, scores[0]);
    const lastScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[125]++, scores[scores.length - 1]);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[126]++;
    if (lastScore > firstScore + 10) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[20][0]++;
      cov_7n4m2jwp1().s[127]++;
      return 'IMPROVING';
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[20][1]++;
      cov_7n4m2jwp1().s[128]++;
      if (lastScore < firstScore - 10) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[21][0]++;
        cov_7n4m2jwp1().s[129]++;
        return 'DEGRADING';
      } else {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[21][1]++;
        cov_7n4m2jwp1().s[130]++;
        return 'STABLE';
      }
    }
  }
  /**
   * Handle unhealthy component
   *
   * @param tracker Component health tracker
   * @param result Health check result
   */
  async handleUnhealthyComponent(tracker, result) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[22]++;
    cov_7n4m2jwp1().s[131]++;
    // Send health alert
    if (this.config.enableAlerts) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[22][0]++;
      cov_7n4m2jwp1().s[132]++;
      await communication_bus_1.communicationBus.publish('system.health.component.unhealthy', {
        componentId: tracker.component.id,
        status: result.status,
        score: result.score,
        issues: result.issues,
        recommendations: result.recommendations,
        timestamp: result.timestamp
      }, {
        priority: result.status === SystemHealthStatus.CRITICAL ?
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[23][0]++, communication_bus_1.MessagePriority.CRITICAL) :
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[23][1]++, communication_bus_1.MessagePriority.HIGH),
        source: 'system-health-monitor'
      });
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[22][1]++;
    }
    // Attempt recovery if enabled
    cov_7n4m2jwp1().s[133]++;
    if (
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[25][0]++, this.config.autoRecovery) &&
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[25][1]++, tracker.failureCount >= this.config.failureThreshold)) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[24][0]++;
      cov_7n4m2jwp1().s[134]++;
      await this.attemptComponentRecovery(tracker);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[24][1]++;
    }
  }
  /**
   * Attempt to recover unhealthy component
   *
   * @param tracker Component health tracker
   */
  async attemptComponentRecovery(tracker) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[23]++;
    const now =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[135]++, new Date());
    // Check cooldown period
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[136]++;
    if (tracker.lastRecoveryAttempt) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[26][0]++;
      const timeSinceLastRecovery =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[137]++, now.getTime() - tracker.lastRecoveryAttempt.getTime());
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[138]++;
      if (timeSinceLastRecovery < this.config.recoveryCooldown) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[27][0]++;
        cov_7n4m2jwp1().s[139]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_7n4m2jwp1().b[27][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[26][1]++;
    }
    cov_7n4m2jwp1().s[140]++;
    logger_1.logger.warn(`🔄 Attempting recovery for unhealthy component: ${tracker.component.id}`);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[141]++;
    tracker.lastRecoveryAttempt = now;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[142]++;
    try {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[143]++;
      // Send recovery request
      await communication_bus_1.communicationBus.publish('system.component.recovery.request', {
        componentId: tracker.component.id,
        reason: 'HEALTH_CHECK_FAILURE',
        timestamp: now
      }, {
        priority: communication_bus_1.MessagePriority.HIGH,
        source: 'system-health-monitor'
      });
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[144]++;
      logger_1.logger.info(`✅ Recovery request sent for component: ${tracker.component.id}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[145]++;
      logger_1.logger.error(`❌ Failed to send recovery request for ${tracker.component.id}:`, error);
    }
  }
  /**
   * Collect system metrics
   */
  async collectSystemMetrics() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[24]++;
    cov_7n4m2jwp1().s[146]++;
    try {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[147]++;
      // This would integrate with system monitoring tools
      // For now, we'll create mock metrics
      this.systemMetrics = {
        cpu: {
          usage: Math.random() * 100,
          temperature: 45 + Math.random() * 20,
          loadAverage: [1.2, 1.5, 1.8],
          processes: 150 + Math.floor(Math.random() * 50)
        },
        memory: {
          total: 12 * 1024 * 1024 * 1024,
          // 12GB
          used: 8 * 1024 * 1024 * 1024,
          // 8GB
          free: 4 * 1024 * 1024 * 1024,
          // 4GB
          usage: 66.7,
          swapUsed: 0
        },
        disk: {
          total: 256 * 1024 * 1024 * 1024,
          // 256GB
          used: 128 * 1024 * 1024 * 1024,
          // 128GB
          free: 128 * 1024 * 1024 * 1024,
          // 128GB
          usage: 50,
          ioRead: 1000,
          ioWrite: 500
        },
        network: {
          bytesIn: 1000000,
          bytesOut: 500000,
          packetsIn: 1000,
          packetsOut: 800,
          errors: 0,
          latency: 10
        },
        application: {
          uptime: process.uptime() * 1000,
          memoryUsage: process.memoryUsage().heapUsed,
          activeConnections: 10,
          requestsPerSecond: 50,
          errorRate: 0.1
        }
      };
      // Check for metric alerts
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[148]++;
      await this.checkMetricAlerts();
    } catch (error) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[149]++;
      logger_1.logger.error('❌ Failed to collect system metrics:', error);
    }
  }
  /**
   * Check for metric-based alerts
   */
  async checkMetricAlerts() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[25]++;
    cov_7n4m2jwp1().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[29][0]++, !this.systemMetrics) ||
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[29][1]++, !this.config.enableAlerts)) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[28][0]++;
      cov_7n4m2jwp1().s[151]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[28][1]++;
    }
    const alerts =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[152]++, []);
    // Check CPU usage
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[153]++;
    if (this.systemMetrics.cpu.usage > this.config.alertThresholds.cpu) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[30][0]++;
      cov_7n4m2jwp1().s[154]++;
      alerts.push(`High CPU usage: ${this.systemMetrics.cpu.usage.toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[30][1]++;
    }
    // Check memory usage
    cov_7n4m2jwp1().s[155]++;
    if (this.systemMetrics.memory.usage > this.config.alertThresholds.memory) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[31][0]++;
      cov_7n4m2jwp1().s[156]++;
      alerts.push(`High memory usage: ${this.systemMetrics.memory.usage.toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[31][1]++;
    }
    // Check disk usage
    cov_7n4m2jwp1().s[157]++;
    if (this.systemMetrics.disk.usage > this.config.alertThresholds.disk) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[32][0]++;
      cov_7n4m2jwp1().s[158]++;
      alerts.push(`High disk usage: ${this.systemMetrics.disk.usage.toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[32][1]++;
    }
    // Send alerts if any
    cov_7n4m2jwp1().s[159]++;
    if (alerts.length > 0) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[33][0]++;
      cov_7n4m2jwp1().s[160]++;
      await communication_bus_1.communicationBus.publish('system.health.metrics.alert', {
        alerts,
        metrics: this.systemMetrics,
        timestamp: new Date()
      }, {
        priority: communication_bus_1.MessagePriority.HIGH,
        source: 'system-health-monitor'
      });
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[33][1]++;
    }
  }
  /**
   * Update overall system health status
   */
  updateOverallHealthStatus() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[26]++;
    const componentStatuses =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[161]++, Array.from(this.componentTrackers.values()).map(tracker => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[27]++;
      cov_7n4m2jwp1().s[162]++;
      return tracker.currentHealth.status;
    }));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[163]++;
    if (componentStatuses.length === 0) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[34][0]++;
      cov_7n4m2jwp1().s[164]++;
      this.overallHealthStatus = SystemHealthStatus.HEALTHY;
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[165]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[34][1]++;
    }
    // Determine overall status based on component statuses
    cov_7n4m2jwp1().s[166]++;
    if (componentStatuses.some(status => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[28]++;
      cov_7n4m2jwp1().s[167]++;
      return status === SystemHealthStatus.OFFLINE;
    })) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[35][0]++;
      cov_7n4m2jwp1().s[168]++;
      this.overallHealthStatus = SystemHealthStatus.OFFLINE;
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[35][1]++;
      cov_7n4m2jwp1().s[169]++;
      if (componentStatuses.some(status => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[29]++;
        cov_7n4m2jwp1().s[170]++;
        return status === SystemHealthStatus.CRITICAL;
      })) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[36][0]++;
        cov_7n4m2jwp1().s[171]++;
        this.overallHealthStatus = SystemHealthStatus.CRITICAL;
      } else {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[36][1]++;
        cov_7n4m2jwp1().s[172]++;
        if (componentStatuses.some(status => {
          /* istanbul ignore next */
          cov_7n4m2jwp1().f[30]++;
          cov_7n4m2jwp1().s[173]++;
          return status === SystemHealthStatus.DEGRADED;
        })) {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[37][0]++;
          cov_7n4m2jwp1().s[174]++;
          this.overallHealthStatus = SystemHealthStatus.DEGRADED;
        } else {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[37][1]++;
          cov_7n4m2jwp1().s[175]++;
          if (componentStatuses.some(status => {
            /* istanbul ignore next */
            cov_7n4m2jwp1().f[31]++;
            cov_7n4m2jwp1().s[176]++;
            return status === SystemHealthStatus.WARNING;
          })) {
            /* istanbul ignore next */
            cov_7n4m2jwp1().b[38][0]++;
            cov_7n4m2jwp1().s[177]++;
            this.overallHealthStatus = SystemHealthStatus.WARNING;
          } else {
            /* istanbul ignore next */
            cov_7n4m2jwp1().b[38][1]++;
            cov_7n4m2jwp1().s[178]++;
            this.overallHealthStatus = SystemHealthStatus.HEALTHY;
          }
        }
      }
    }
  }
  /**
   * Determine health status based on score and issues
   *
   * @param result Health check result
   * @returns System health status
   */
  determineHealthStatus(result) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[32]++;
    // Check for critical issues
    const hasCriticalIssues =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[179]++, result.issues.some(issue => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[33]++;
      cov_7n4m2jwp1().s[180]++;
      return issue.severity === 'CRITICAL';
    }));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[181]++;
    if (hasCriticalIssues) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[39][0]++;
      cov_7n4m2jwp1().s[182]++;
      return SystemHealthStatus.CRITICAL;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[39][1]++;
    }
    // Check for high severity issues
    const hasHighIssues =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[183]++, result.issues.some(issue => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[34]++;
      cov_7n4m2jwp1().s[184]++;
      return issue.severity === 'HIGH';
    }));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[185]++;
    if (hasHighIssues) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[40][0]++;
      cov_7n4m2jwp1().s[186]++;
      return SystemHealthStatus.DEGRADED;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[40][1]++;
    }
    // Check score thresholds
    cov_7n4m2jwp1().s[187]++;
    if (result.score >= 90) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[41][0]++;
      cov_7n4m2jwp1().s[188]++;
      return SystemHealthStatus.HEALTHY;
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[41][1]++;
      cov_7n4m2jwp1().s[189]++;
      if (result.score >= 70) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[42][0]++;
        cov_7n4m2jwp1().s[190]++;
        return SystemHealthStatus.WARNING;
      } else {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[42][1]++;
        cov_7n4m2jwp1().s[191]++;
        if (result.score >= 50) {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[43][0]++;
          cov_7n4m2jwp1().s[192]++;
          return SystemHealthStatus.DEGRADED;
        } else {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[43][1]++;
          cov_7n4m2jwp1().s[193]++;
          return SystemHealthStatus.CRITICAL;
        }
      }
    }
  }
  /**
   * Convert component issues to health issues
   *
   * @param issues Component issues
   * @returns Array of health issues
   */
  convertToHealthIssues(issues) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[35]++;
    cov_7n4m2jwp1().s[194]++;
    return issues.map(issue => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[36]++;
      cov_7n4m2jwp1().s[195]++;
      return {
        severity: 'MEDIUM',
        category: 'GENERAL',
        description: issue,
        code: 'COMPONENT_ISSUE',
        affectedMetrics: [],
        suggestedActions: ['Investigate issue'],
        timestamp: new Date()
      };
    });
  }
  /**
   * Setup event handlers
   */
  setupEventHandlers() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[37]++;
    cov_7n4m2jwp1().s[196]++;
    this.on('component:health-changed', (componentId, health) => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[38]++;
      cov_7n4m2jwp1().s[197]++;
      logger_1.logger.debug(`🏥 Component health changed: ${componentId} - ${health.status} (${health.score})`);
    });
  }
}
/* istanbul ignore next */
cov_7n4m2jwp1().s[198]++;
exports.SystemHealthMonitor = SystemHealthMonitor;
/**
 * Default health monitoring configuration
 */
/* istanbul ignore next */
cov_7n4m2jwp1().s[199]++;
exports.defaultHealthMonitorConfig = {
  checkInterval: 30000,
  // 30 seconds
  checkTimeout: 10000,
  // 10 seconds
  failureThreshold: 3,
  // 3 consecutive failures
  recoveryThreshold: 2,
  // 2 consecutive successes
  autoRecovery: true,
  recoveryCooldown: 300000,
  // 5 minutes
  historyRetention: 100,
  // Keep last 100 health checks
  enableAlerts: true,
  alertThresholds: {
    cpu: 80,
    // 80% CPU usage
    memory: 85,
    // 85% memory usage
    disk: 90,
    // 90% disk usage
    responseTime: 5000 // 5 second response time
  }
};
// =============================================================================
// SYSTEM HEALTH MONITORING NOTES
// =============================================================================
// 1. Comprehensive component health monitoring with configurable intervals
// 2. System metrics collection and threshold-based alerting
// 3. Health trend analysis and predictive issue detection
// 4. Automatic recovery attempts with cooldown periods
// 5. Health history tracking for performance analysis
// 6. Event-driven health status changes and notifications
// 7. Integration with communication bus for system-wide alerts
// 8. Configurable thresholds and monitoring parameters
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,