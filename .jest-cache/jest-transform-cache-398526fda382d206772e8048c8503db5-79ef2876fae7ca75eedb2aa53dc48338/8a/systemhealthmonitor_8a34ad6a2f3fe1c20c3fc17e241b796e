f41aa48898034096601d86f57927cd01
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SYSTEM HEALTH MONITOR
 * =============================================================================
 *
 * This module provides comprehensive system health monitoring and status
 * reporting for all components in the trading system. It tracks component
 * health, system metrics, and provides early warning for potential issues.
 *
 * CRITICAL SYSTEM NOTICE:
 * System health monitoring is essential for maintaining 24/7 trading
 * operations. Early detection of issues prevents financial losses and
 * ensures system reliability.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_7n4m2jwp1() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-health-monitor.ts";
  var hash = "8e023da8d220fb53de86e60ae17095d5f8cf7c0f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-health-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 103
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "5": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 36,
          column: 81
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 46
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 48
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "11": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "12": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 29
        }
      },
      "13": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 43
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 34
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 34
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "19": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 73
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "21": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 72
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 33
        }
      },
      "23": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 45
        }
      },
      "25": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "26": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 46
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 42
        }
      },
      "29": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "30": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 67
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "32": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 34
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "36": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "37": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "38": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "39": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "40": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 45
        }
      },
      "41": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "42": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 67
        }
      },
      "43": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 96
        }
      },
      "44": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "45": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 58
        }
      },
      "46": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 94
        }
      },
      "47": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "48": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 55
        }
      },
      "49": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 101
        }
      },
      "50": {
        start: {
          line: 153,
          column: 31
        },
        end: {
          line: 153,
          column: 58
        }
      },
      "51": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 33
        }
      },
      "52": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 155,
          column: 26
        }
      },
      "53": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "54": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "55": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 36
        }
      },
      "56": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 54
        }
      },
      "57": {
        start: {
          line: 162,
          column: 29
        },
        end: {
          line: 162,
          column: 83
        }
      },
      "58": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 171,
          column: 10
        }
      },
      "59": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 63
        }
      },
      "60": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 38
        }
      },
      "61": {
        start: {
          line: 191,
          column: 24
        },
        end: {
          line: 191,
          column: 63
        }
      },
      "62": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "63": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "64": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 51
        }
      },
      "65": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "66": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "67": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 72
        }
      },
      "68": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 63
        }
      },
      "69": {
        start: {
          line: 216,
          column: 27
        },
        end: {
          line: 216,
          column: 29
        }
      },
      "70": {
        start: {
          line: 217,
          column: 31
        },
        end: {
          line: 217,
          column: 33
        }
      },
      "71": {
        start: {
          line: 218,
          column: 32
        },
        end: {
          line: 218,
          column: 41
        }
      },
      "72": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "73": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 51
        }
      },
      "74": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "75": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 225,
          column: 17
        }
      },
      "76": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 47
        }
      },
      "77": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 230,
          column: 13
        }
      },
      "78": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 52
        }
      },
      "79": {
        start: {
          line: 232,
          column: 29
        },
        end: {
          line: 232,
          column: 57
        }
      },
      "80": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 241,
          column: 10
        }
      },
      "81": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "82": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 19
        }
      },
      "83": {
        start: {
          line: 250,
          column: 36
        },
        end: {
          line: 250,
          column: 38
        }
      },
      "84": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "85": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 256,
          column: 16
        }
      },
      "86": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 99
        }
      },
      "87": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 54
        }
      },
      "88": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 41
        }
      },
      "89": {
        start: {
          line: 269,
          column: 26
        },
        end: {
          line: 269,
          column: 36
        }
      },
      "90": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "91": {
        start: {
          line: 272,
          column: 39
        },
        end: {
          line: 272,
          column: 70
        }
      },
      "92": {
        start: {
          line: 273,
          column: 35
        },
        end: {
          line: 277,
          column: 14
        }
      },
      "93": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 276,
          column: 45
        }
      },
      "94": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 62
        }
      },
      "95": {
        start: {
          line: 278,
          column: 36
        },
        end: {
          line: 278,
          column: 92
        }
      },
      "96": {
        start: {
          line: 279,
          column: 33
        },
        end: {
          line: 279,
          column: 55
        }
      },
      "97": {
        start: {
          line: 281,
          column: 27
        },
        end: {
          line: 290,
          column: 13
        }
      },
      "98": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 63
        }
      },
      "99": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 57
        }
      },
      "100": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "101": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 69
        }
      },
      "102": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 26
        }
      },
      "103": {
        start: {
          line: 302,
          column: 33
        },
        end: {
          line: 302,
          column: 55
        }
      },
      "104": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 320,
          column: 13
        }
      },
      "105": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 57
        }
      },
      "106": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 65
        }
      },
      "107": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 26
        }
      },
      "108": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 39
        }
      },
      "109": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 43
        }
      },
      "110": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "111": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 95
        }
      },
      "112": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "113": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 35
        }
      },
      "114": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 37
        }
      },
      "115": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 35
        }
      },
      "116": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 37
        }
      },
      "117": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 59
        }
      },
      "118": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 76
        }
      },
      "119": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "120": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 28
        }
      },
      "121": {
        start: {
          line: 367,
          column: 23
        },
        end: {
          line: 367,
          column: 54
        }
      },
      "122": {
        start: {
          line: 368,
          column: 23
        },
        end: {
          line: 368,
          column: 47
        }
      },
      "123": {
        start: {
          line: 368,
          column: 39
        },
        end: {
          line: 368,
          column: 46
        }
      },
      "124": {
        start: {
          line: 369,
          column: 27
        },
        end: {
          line: 369,
          column: 36
        }
      },
      "125": {
        start: {
          line: 370,
          column: 26
        },
        end: {
          line: 370,
          column: 51
        }
      },
      "126": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "127": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 31
        }
      },
      "128": {
        start: {
          line: 374,
          column: 13
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "129": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 31
        }
      },
      "130": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 28
        }
      },
      "131": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "132": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 400,
          column: 15
        }
      },
      "133": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "134": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 57
        }
      },
      "135": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 30
        }
      },
      "136": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "137": {
        start: {
          line: 416,
          column: 42
        },
        end: {
          line: 416,
          column: 95
        }
      },
      "138": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 419,
          column: 13
        }
      },
      "139": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 23
        }
      },
      "140": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 104
        }
      },
      "141": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 42
        }
      },
      "142": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "143": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 432,
          column: 15
        }
      },
      "144": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 99
        }
      },
      "145": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 107
        }
      },
      "146": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "147": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 483,
          column: 14
        }
      },
      "148": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 43
        }
      },
      "149": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 80
        }
      },
      "150": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "151": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 19
        }
      },
      "152": {
        start: {
          line: 498,
          column: 23
        },
        end: {
          line: 498,
          column: 25
        }
      },
      "153": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "154": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 87
        }
      },
      "155": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "156": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 93
        }
      },
      "157": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "158": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 89
        }
      },
      "159": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "160": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 520,
          column: 15
        }
      },
      "161": {
        start: {
          line: 527,
          column: 34
        },
        end: {
          line: 528,
          column: 57
        }
      },
      "162": {
        start: {
          line: 528,
          column: 28
        },
        end: {
          line: 528,
          column: 56
        }
      },
      "163": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 532,
          column: 9
        }
      },
      "164": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 66
        }
      },
      "165": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 19
        }
      },
      "166": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "167": {
        start: {
          line: 534,
          column: 45
        },
        end: {
          line: 534,
          column: 82
        }
      },
      "168": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 66
        }
      },
      "169": {
        start: {
          line: 537,
          column: 13
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "170": {
        start: {
          line: 537,
          column: 50
        },
        end: {
          line: 537,
          column: 88
        }
      },
      "171": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 538,
          column: 67
        }
      },
      "172": {
        start: {
          line: 540,
          column: 13
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "173": {
        start: {
          line: 540,
          column: 50
        },
        end: {
          line: 540,
          column: 88
        }
      },
      "174": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 67
        }
      },
      "175": {
        start: {
          line: 543,
          column: 13
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "176": {
        start: {
          line: 543,
          column: 50
        },
        end: {
          line: 543,
          column: 87
        }
      },
      "177": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 544,
          column: 66
        }
      },
      "178": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 66
        }
      },
      "179": {
        start: {
          line: 558,
          column: 34
        },
        end: {
          line: 558,
          column: 92
        }
      },
      "180": {
        start: {
          line: 558,
          column: 62
        },
        end: {
          line: 558,
          column: 91
        }
      },
      "181": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "182": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 560,
          column: 47
        }
      },
      "183": {
        start: {
          line: 563,
          column: 30
        },
        end: {
          line: 563,
          column: 84
        }
      },
      "184": {
        start: {
          line: 563,
          column: 58
        },
        end: {
          line: 563,
          column: 83
        }
      },
      "185": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 566,
          column: 9
        }
      },
      "186": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 47
        }
      },
      "187": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "188": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 569,
          column: 46
        }
      },
      "189": {
        start: {
          line: 571,
          column: 13
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "190": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 46
        }
      },
      "191": {
        start: {
          line: 574,
          column: 13
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "192": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 575,
          column: 47
        }
      },
      "193": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 578,
          column: 47
        }
      },
      "194": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 596,
          column: 12
        }
      },
      "195": {
        start: {
          line: 588,
          column: 36
        },
        end: {
          line: 596,
          column: 9
        }
      },
      "196": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 604,
          column: 11
        }
      },
      "197": {
        start: {
          line: 603,
          column: 12
        },
        end: {
          line: 603,
          column: 118
        }
      },
      "198": {
        start: {
          line: 607,
          column: 0
        },
        end: {
          line: 607,
          column: 50
        }
      },
      "199": {
        start: {
          line: 611,
          column: 0
        },
        end: {
          line: 626,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 1
          },
          end: {
            line: 30,
            column: 2
          }
        },
        loc: {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 41
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 53
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 46
          },
          end: {
            line: 61,
            column: 47
          }
        },
        loc: {
          start: {
            line: 61,
            column: 58
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 43
          },
          end: {
            line: 65,
            column: 44
          }
        },
        loc: {
          start: {
            line: 65,
            column: 55
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 84
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 114
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 37
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 141
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 28
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 36
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 179
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 56
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 190
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 40
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 203
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 22
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 215
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 246
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 253,
            column: 22
          },
          end: {
            line: 253,
            column: 23
          }
        },
        loc: {
          start: {
            line: 253,
            column: 28
          },
          end: {
            line: 253,
            column: 31
          }
        },
        line: 253
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 254,
            column: 23
          },
          end: {
            line: 254,
            column: 24
          }
        },
        loc: {
          start: {
            line: 254,
            column: 32
          },
          end: {
            line: 256,
            column: 13
          }
        },
        line: 254
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        loc: {
          start: {
            line: 268,
            column: 47
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 268
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 273,
            column: 47
          },
          end: {
            line: 273,
            column: 48
          }
        },
        loc: {
          start: {
            line: 273,
            column: 62
          },
          end: {
            line: 277,
            column: 13
          }
        },
        line: 273
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 274,
            column: 27
          },
          end: {
            line: 274,
            column: 28
          }
        },
        loc: {
          start: {
            line: 274,
            column: 33
          },
          end: {
            line: 276,
            column: 17
          }
        },
        line: 274
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 44
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 334
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 34
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 363
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 368,
            column: 34
          },
          end: {
            line: 368,
            column: 35
          }
        },
        loc: {
          start: {
            line: 368,
            column: 39
          },
          end: {
            line: 368,
            column: 46
          }
        },
        line: 368
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        loc: {
          start: {
            line: 387,
            column: 52
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 387
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        },
        loc: {
          start: {
            line: 412,
            column: 44
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 412
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        loc: {
          start: {
            line: 442,
            column: 33
          },
          end: {
            line: 490,
            column: 5
          }
        },
        line: 442
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 494,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        },
        loc: {
          start: {
            line: 494,
            column: 30
          },
          end: {
            line: 522,
            column: 5
          }
        },
        line: 494
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 526,
            column: 4
          },
          end: {
            line: 526,
            column: 5
          }
        },
        loc: {
          start: {
            line: 526,
            column: 32
          },
          end: {
            line: 549,
            column: 5
          }
        },
        line: 526
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 528,
            column: 17
          },
          end: {
            line: 528,
            column: 18
          }
        },
        loc: {
          start: {
            line: 528,
            column: 28
          },
          end: {
            line: 528,
            column: 56
          }
        },
        line: 528
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 534,
            column: 35
          },
          end: {
            line: 534,
            column: 36
          }
        },
        loc: {
          start: {
            line: 534,
            column: 45
          },
          end: {
            line: 534,
            column: 82
          }
        },
        line: 534
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 537,
            column: 40
          },
          end: {
            line: 537,
            column: 41
          }
        },
        loc: {
          start: {
            line: 537,
            column: 50
          },
          end: {
            line: 537,
            column: 88
          }
        },
        line: 537
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 540,
            column: 40
          },
          end: {
            line: 540,
            column: 41
          }
        },
        loc: {
          start: {
            line: 540,
            column: 50
          },
          end: {
            line: 540,
            column: 88
          }
        },
        line: 540
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 543,
            column: 40
          },
          end: {
            line: 543,
            column: 41
          }
        },
        loc: {
          start: {
            line: 543,
            column: 50
          },
          end: {
            line: 543,
            column: 87
          }
        },
        line: 543
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 556,
            column: 4
          },
          end: {
            line: 556,
            column: 5
          }
        },
        loc: {
          start: {
            line: 556,
            column: 34
          },
          end: {
            line: 580,
            column: 5
          }
        },
        line: 556
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 558,
            column: 53
          },
          end: {
            line: 558,
            column: 54
          }
        },
        loc: {
          start: {
            line: 558,
            column: 62
          },
          end: {
            line: 558,
            column: 91
          }
        },
        line: 558
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 563,
            column: 49
          },
          end: {
            line: 563,
            column: 50
          }
        },
        loc: {
          start: {
            line: 563,
            column: 58
          },
          end: {
            line: 563,
            column: 83
          }
        },
        line: 563
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 587,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        },
        loc: {
          start: {
            line: 587,
            column: 34
          },
          end: {
            line: 597,
            column: 5
          }
        },
        line: 587
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 588,
            column: 26
          },
          end: {
            line: 588,
            column: 27
          }
        },
        loc: {
          start: {
            line: 588,
            column: 36
          },
          end: {
            line: 596,
            column: 9
          }
        },
        line: 588
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 601,
            column: 4
          },
          end: {
            line: 601,
            column: 5
          }
        },
        loc: {
          start: {
            line: 601,
            column: 25
          },
          end: {
            line: 605,
            column: 5
          }
        },
        line: 601
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 602,
            column: 44
          },
          end: {
            line: 602,
            column: 45
          }
        },
        loc: {
          start: {
            line: 602,
            column: 69
          },
          end: {
            line: 604,
            column: 9
          }
        },
        line: 602
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 21
          }
        }, {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 78
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "6": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "7": {
        loc: {
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 50
          },
          end: {
            line: 162,
            column: 77
          }
        }, {
          start: {
            line: 162,
            column: 80
          },
          end: {
            line: 162,
            column: 83
          }
        }],
        line: 162
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 43
          },
          end: {
            line: 190,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 190,
            column: 51
          },
          end: {
            line: 190,
            column: 54
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "10": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "11": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 225,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "12": {
        loc: {
          start: {
            line: 223,
            column: 20
          },
          end: {
            line: 223,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 20
          },
          end: {
            line: 223,
            column: 49
          }
        }, {
          start: {
            line: 223,
            column: 53
          },
          end: {
            line: 223,
            column: 78
          }
        }],
        line: 223
      },
      "13": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "14": {
        loc: {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 283,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 283,
            column: 50
          },
          end: {
            line: 283,
            column: 76
          }
        }, {
          start: {
            line: 283,
            column: 79
          },
          end: {
            line: 283,
            column: 106
          }
        }],
        line: 283
      },
      "15": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "16": {
        loc: {
          start: {
            line: 309,
            column: 34
          },
          end: {
            line: 309,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 309,
            column: 59
          },
          end: {
            line: 309,
            column: 72
          }
        }, {
          start: {
            line: 309,
            column: 75
          },
          end: {
            line: 309,
            column: 90
          }
        }],
        line: 309
      },
      "17": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "18": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        }, {
          start: {
            line: 348,
            column: 13
          },
          end: {
            line: 351,
            column: 9
          }
        }],
        line: 344
      },
      "19": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "20": {
        loc: {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        }, {
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 379,
            column: 9
          }
        }],
        line: 371
      },
      "21": {
        loc: {
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 379,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 379,
            column: 9
          }
        }, {
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 379,
            column: 9
          }
        }],
        line: 374
      },
      "22": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "23": {
        loc: {
          start: {
            line: 398,
            column: 26
          },
          end: {
            line: 398,
            column: 161
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 398,
            column: 74
          },
          end: {
            line: 398,
            column: 118
          }
        }, {
          start: {
            line: 398,
            column: 121
          },
          end: {
            line: 398,
            column: 161
          }
        }],
        line: 398
      },
      "24": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "25": {
        loc: {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 403,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 403,
            column: 36
          }
        }, {
          start: {
            line: 403,
            column: 40
          },
          end: {
            line: 403,
            column: 92
          }
        }],
        line: 403
      },
      "26": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "27": {
        loc: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "28": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "29": {
        loc: {
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 495,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 495,
            column: 31
          }
        }, {
          start: {
            line: 495,
            column: 35
          },
          end: {
            line: 495,
            column: 60
          }
        }],
        line: 495
      },
      "30": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "31": {
        loc: {
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 504
      },
      "32": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "33": {
        loc: {
          start: {
            line: 512,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 512
      },
      "34": {
        loc: {
          start: {
            line: 529,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 529,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 529
      },
      "35": {
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 537,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 534
      },
      "36": {
        loc: {
          start: {
            line: 537,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 537
      },
      "37": {
        loc: {
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 540,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 543,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 540
      },
      "38": {
        loc: {
          start: {
            line: 543,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 546,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 543
      },
      "39": {
        loc: {
          start: {
            line: 559,
            column: 8
          },
          end: {
            line: 561,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 559,
            column: 8
          },
          end: {
            line: 561,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 559
      },
      "40": {
        loc: {
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 566,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 566,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 564
      },
      "41": {
        loc: {
          start: {
            line: 568,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 568,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        }, {
          start: {
            line: 571,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        }],
        line: 568
      },
      "42": {
        loc: {
          start: {
            line: 571,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        }, {
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        }],
        line: 571
      },
      "43": {
        loc: {
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        }, {
          start: {
            line: 577,
            column: 13
          },
          end: {
            line: 579,
            column: 9
          }
        }],
        line: 574
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8e023da8d220fb53de86e60ae17095d5f8cf7c0f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7n4m2jwp1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7n4m2jwp1();
cov_7n4m2jwp1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7n4m2jwp1().s[1]++;
exports.defaultHealthMonitorConfig = exports.SystemHealthMonitor = exports.SystemHealthStatus = void 0;
const events_1 =
/* istanbul ignore next */
(cov_7n4m2jwp1().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_7n4m2jwp1().s[3]++, require("@/core/logging/logger"));
const communication_bus_1 =
/* istanbul ignore next */
(cov_7n4m2jwp1().s[4]++, require("./communication-bus"));
/**
 * System health status enumeration
 */
var SystemHealthStatus;
/* istanbul ignore next */
cov_7n4m2jwp1().s[5]++;
(function (SystemHealthStatus) {
  /* istanbul ignore next */
  cov_7n4m2jwp1().f[0]++;
  cov_7n4m2jwp1().s[6]++;
  SystemHealthStatus["HEALTHY"] = "HEALTHY";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[7]++;
  SystemHealthStatus["WARNING"] = "WARNING";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[8]++;
  SystemHealthStatus["CRITICAL"] = "CRITICAL";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[9]++;
  SystemHealthStatus["DEGRADED"] = "DEGRADED";
  /* istanbul ignore next */
  cov_7n4m2jwp1().s[10]++;
  SystemHealthStatus["OFFLINE"] = "OFFLINE";
})(
/* istanbul ignore next */
(cov_7n4m2jwp1().b[0][0]++, SystemHealthStatus) ||
/* istanbul ignore next */
(cov_7n4m2jwp1().b[0][1]++, exports.SystemHealthStatus = SystemHealthStatus = {}));
/**
 * System health monitor class
 */
class SystemHealthMonitor extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(config) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[1]++;
    cov_7n4m2jwp1().s[11]++;
    super();
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[12]++;
    this.config = config;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[13]++;
    this.componentTrackers = new Map();
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[14]++;
    this.systemMetrics = null;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[15]++;
    this.isMonitoring = false;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[16]++;
    this.overallHealthStatus = SystemHealthStatus.HEALTHY;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[17]++;
    this.setupEventHandlers();
  }
  /**
   * Start health monitoring
   */
  async startMonitoring() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[2]++;
    cov_7n4m2jwp1().s[18]++;
    if (this.isMonitoring) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[1][0]++;
      cov_7n4m2jwp1().s[19]++;
      logger_1.logger.warn('⚠️ Health monitoring already running');
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[1][1]++;
    }
    cov_7n4m2jwp1().s[21]++;
    logger_1.logger.info('🏥 Starting system health monitoring...');
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[22]++;
    this.isMonitoring = true;
    // Start component health checks
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[23]++;
    this.monitoringInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[3]++;
      cov_7n4m2jwp1().s[24]++;
      await this.performHealthChecks();
    }, this.config.checkInterval);
    // Start system metrics collection
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[25]++;
    this.metricsInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[4]++;
      cov_7n4m2jwp1().s[26]++;
      await this.collectSystemMetrics();
    }, 5000); // Collect metrics every 5 seconds
    // Initial health check
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[27]++;
    await this.performHealthChecks();
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[28]++;
    await this.collectSystemMetrics();
    // Send startup notification
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[29]++;
    await communication_bus_1.communicationBus.publish('system.health.monitoring.started', {
      timestamp: new Date(),
      config: this.config
    }, {
      priority: communication_bus_1.MessagePriority.HIGH,
      source: 'system-health-monitor'
    });
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[30]++;
    logger_1.logger.info('✅ System health monitoring started');
  }
  /**
   * Stop health monitoring
   */
  async stopMonitoring() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[5]++;
    cov_7n4m2jwp1().s[31]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[2][0]++;
      cov_7n4m2jwp1().s[32]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[2][1]++;
    }
    cov_7n4m2jwp1().s[33]++;
    logger_1.logger.info('🛑 Stopping system health monitoring...');
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[34]++;
    this.isMonitoring = false;
    // Clear intervals
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[35]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[3][0]++;
      cov_7n4m2jwp1().s[36]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[37]++;
      this.monitoringInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[3][1]++;
    }
    cov_7n4m2jwp1().s[38]++;
    if (this.metricsInterval) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[4][0]++;
      cov_7n4m2jwp1().s[39]++;
      clearInterval(this.metricsInterval);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[40]++;
      this.metricsInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[4][1]++;
    }
    // Send shutdown notification
    cov_7n4m2jwp1().s[41]++;
    await communication_bus_1.communicationBus.publish('system.health.monitoring.stopped', {
      timestamp: new Date(),
      finalStatus: this.overallHealthStatus
    }, {
      priority: communication_bus_1.MessagePriority.HIGH,
      source: 'system-health-monitor'
    });
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[42]++;
    logger_1.logger.info('✅ System health monitoring stopped');
  }
  /**
   * Register component for health monitoring
   *
   * @param component System component to monitor
   */
  registerComponent(component) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[6]++;
    cov_7n4m2jwp1().s[43]++;
    logger_1.logger.info(`📋 Registering component for health monitoring: ${component.id}`);
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[44]++, {
      component,
      currentHealth: {
        componentId: component.id,
        status: SystemHealthStatus.HEALTHY,
        score: 100,
        timestamp: new Date(),
        responseTime: 0,
        details: {},
        issues: [],
        recommendations: []
      },
      healthHistory: [],
      failureCount: 0,
      successCount: 0,
      trend: 'STABLE'
    });
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[45]++;
    this.componentTrackers.set(component.id, tracker);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[46]++;
    logger_1.logger.info(`✅ Component registered for health monitoring: ${component.id}`);
  }
  /**
   * Unregister component from health monitoring
   *
   * @param componentId Component identifier
   */
  unregisterComponent(componentId) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[7]++;
    cov_7n4m2jwp1().s[47]++;
    if (this.componentTrackers.has(componentId)) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[5][0]++;
      cov_7n4m2jwp1().s[48]++;
      this.componentTrackers.delete(componentId);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[49]++;
      logger_1.logger.info(`📤 Component unregistered from health monitoring: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[5][1]++;
    }
  }
  /**
   * Get current system health status
   *
   * @returns System health status
   */
  getSystemHealthStatus() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[8]++;
    const componentCount =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[50]++, this.componentTrackers.size);
    let healthyComponents =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[51]++, 0);
    let totalScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[52]++, 0);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[53]++;
    for (const tracker of this.componentTrackers.values()) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[54]++;
      if (tracker.currentHealth.status === SystemHealthStatus.HEALTHY) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[6][0]++;
        cov_7n4m2jwp1().s[55]++;
        healthyComponents++;
      } else
      /* istanbul ignore next */
      {
        cov_7n4m2jwp1().b[6][1]++;
      }
      cov_7n4m2jwp1().s[56]++;
      totalScore += tracker.currentHealth.score;
    }
    const overallScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[57]++, componentCount > 0 ?
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[7][0]++, totalScore / componentCount) :
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[7][1]++, 100));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[58]++;
    return {
      overallStatus: this.overallHealthStatus,
      overallScore,
      componentCount,
      healthyComponents,
      unhealthyComponents: componentCount - healthyComponents,
      systemMetrics: this.systemMetrics,
      lastUpdate: new Date()
    };
  }
  /**
   * Get component health status
   *
   * @param componentId Component identifier
   * @returns Component health status or undefined
   */
  getComponentHealth(componentId) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[9]++;
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[59]++, this.componentTrackers.get(componentId));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[60]++;
    return tracker?.currentHealth;
  }
  /**
   * Get component health history
   *
   * @param componentId Component identifier
   * @param limit Maximum number of history entries
   * @returns Array of health check results
   */
  getComponentHealthHistory(componentId, limit =
  /* istanbul ignore next */
  (cov_7n4m2jwp1().b[8][0]++, 100)) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[10]++;
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[61]++, this.componentTrackers.get(componentId));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[62]++;
    if (!tracker) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[9][0]++;
      cov_7n4m2jwp1().s[63]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[9][1]++;
    }
    cov_7n4m2jwp1().s[64]++;
    return tracker.healthHistory.slice(-limit);
  }
  /**
   * Force health check for specific component
   *
   * @param componentId Component identifier
   * @returns Promise<HealthCheckResult>
   */
  async forceHealthCheck(componentId) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[11]++;
    const tracker =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[65]++, this.componentTrackers.get(componentId));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[66]++;
    if (!tracker) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[10][0]++;
      cov_7n4m2jwp1().s[67]++;
      throw new Error(`Component not registered: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[10][1]++;
    }
    cov_7n4m2jwp1().s[68]++;
    return await this.performComponentHealthCheck(tracker);
  }
  /**
   * Get system health report
   *
   * @returns Comprehensive health report
   */
  getHealthReport() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[12]++;
    const components =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[69]++, []);
    const criticalIssues =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[70]++, []);
    const recommendations =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[71]++, new Set());
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[72]++;
    for (const tracker of this.componentTrackers.values()) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[73]++;
      components.push(tracker.currentHealth);
      // Collect critical issues
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[74]++;
      for (const issue of tracker.currentHealth.issues) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().s[75]++;
        if (
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[12][0]++, issue.severity === 'CRITICAL') ||
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[12][1]++, issue.severity === 'HIGH')) {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[11][0]++;
          cov_7n4m2jwp1().s[76]++;
          criticalIssues.push(issue);
        } else
        /* istanbul ignore next */
        {
          cov_7n4m2jwp1().b[11][1]++;
        }
      }
      // Collect recommendations
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[77]++;
      for (const recommendation of tracker.currentHealth.recommendations) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().s[78]++;
        recommendations.add(recommendation);
      }
    }
    const systemStatus =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[79]++, this.getSystemHealthStatus());
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[80]++;
    return {
      timestamp: new Date(),
      overallStatus: systemStatus.overallStatus,
      overallScore: systemStatus.overallScore,
      systemMetrics: this.systemMetrics,
      components,
      criticalIssues,
      recommendations: Array.from(recommendations)
    };
  }
  /**
   * Perform health checks on all registered components
   */
  async performHealthChecks() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[13]++;
    cov_7n4m2jwp1().s[81]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[13][0]++;
      cov_7n4m2jwp1().s[82]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[13][1]++;
    }
    const healthCheckPromises =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[83]++, []);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[84]++;
    for (const tracker of this.componentTrackers.values()) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[85]++;
      healthCheckPromises.push(this.performComponentHealthCheck(tracker).then(() => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[14]++;
      }) // Convert to void
      .catch(error => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[15]++;
        cov_7n4m2jwp1().s[86]++;
        logger_1.logger.error(`❌ Health check failed for ${tracker.component.id}:`, error);
      }));
    }
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[87]++;
    await Promise.allSettled(healthCheckPromises);
    // Update overall system health
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[88]++;
    this.updateOverallHealthStatus();
  }
  /**
   * Perform health check for specific component
   *
   * @param tracker Component health tracker
   * @returns Promise<HealthCheckResult>
   */
  async performComponentHealthCheck(tracker) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[16]++;
    const startTime =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[89]++, Date.now());
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[90]++;
    try {
      // Perform health check with timeout
      const healthCheckPromise =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[91]++, tracker.component.healthCheck());
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[92]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[17]++;
        cov_7n4m2jwp1().s[93]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_7n4m2jwp1().f[18]++;
          cov_7n4m2jwp1().s[94]++;
          reject(new Error('Health check timeout'));
        }, this.config.checkTimeout);
      }));
      const componentHealth =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[95]++, await Promise.race([healthCheckPromise, timeoutPromise]));
      const responseTime =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[96]++, Date.now() - startTime);
      // Convert to health check result
      const result =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[97]++, {
        componentId: tracker.component.id,
        status: componentHealth.healthy ?
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[14][0]++, SystemHealthStatus.HEALTHY) :
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[14][1]++, SystemHealthStatus.CRITICAL),
        score: componentHealth.score,
        timestamp: new Date(),
        responseTime,
        details: componentHealth.details,
        issues: this.convertToHealthIssues(componentHealth.issues),
        recommendations: componentHealth.recommendations
      });
      // Determine status based on score and issues
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[98]++;
      result.status = this.determineHealthStatus(result);
      // Update tracker
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[99]++;
      this.updateComponentTracker(tracker, result);
      // Handle unhealthy components
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[100]++;
      if (result.status !== SystemHealthStatus.HEALTHY) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[15][0]++;
        cov_7n4m2jwp1().s[101]++;
        await this.handleUnhealthyComponent(tracker, result);
      } else
      /* istanbul ignore next */
      {
        cov_7n4m2jwp1().b[15][1]++;
      }
      cov_7n4m2jwp1().s[102]++;
      return result;
    } catch (error) {
      const responseTime =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[103]++, Date.now() - startTime);
      const result =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[104]++, {
        componentId: tracker.component.id,
        status: SystemHealthStatus.OFFLINE,
        score: 0,
        timestamp: new Date(),
        responseTime,
        details: {
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_7n4m2jwp1().b[16][0]++, error.message) :
          /* istanbul ignore next */
          (cov_7n4m2jwp1().b[16][1]++, 'Unknown error')
        },
        issues: [{
          severity: 'CRITICAL',
          category: 'CONNECTIVITY',
          description: 'Component health check failed',
          code: 'HEALTH_CHECK_FAILED',
          affectedMetrics: ['availability'],
          suggestedActions: ['Restart component', 'Check component logs'],
          timestamp: new Date()
        }],
        recommendations: ['Investigate component failure', 'Check system resources']
      });
      // Update tracker
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[105]++;
      this.updateComponentTracker(tracker, result);
      // Handle failed health check
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[106]++;
      await this.handleUnhealthyComponent(tracker, result);
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[107]++;
      return result;
    }
  }
  /**
   * Update component tracker with new health result
   *
   * @param tracker Component health tracker
   * @param result Health check result
   */
  updateComponentTracker(tracker, result) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[19]++;
    cov_7n4m2jwp1().s[108]++;
    // Update current health
    tracker.currentHealth = result;
    // Add to history
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[109]++;
    tracker.healthHistory.push(result);
    // Maintain history size
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[110]++;
    if (tracker.healthHistory.length > this.config.historyRetention) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[17][0]++;
      cov_7n4m2jwp1().s[111]++;
      tracker.healthHistory = tracker.healthHistory.slice(-this.config.historyRetention);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[17][1]++;
    }
    // Update failure/success counts
    cov_7n4m2jwp1().s[112]++;
    if (result.status === SystemHealthStatus.HEALTHY) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[18][0]++;
      cov_7n4m2jwp1().s[113]++;
      tracker.successCount++;
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[114]++;
      tracker.failureCount = 0;
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[18][1]++;
      cov_7n4m2jwp1().s[115]++;
      tracker.failureCount++;
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[116]++;
      tracker.successCount = 0;
    }
    // Update trend
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[117]++;
    tracker.trend = this.calculateHealthTrend(tracker);
    // Emit health change event
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[118]++;
    this.emit('component:health-changed', tracker.component.id, result);
  }
  /**
   * Calculate health trend for component
   *
   * @param tracker Component health tracker
   * @returns Health trend
   */
  calculateHealthTrend(tracker) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[20]++;
    cov_7n4m2jwp1().s[119]++;
    if (tracker.healthHistory.length < 3) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[19][0]++;
      cov_7n4m2jwp1().s[120]++;
      return 'STABLE';
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[19][1]++;
    }
    const recent =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[121]++, tracker.healthHistory.slice(-3));
    const scores =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[122]++, recent.map(h => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[21]++;
      cov_7n4m2jwp1().s[123]++;
      return h.score;
    }));
    const firstScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[124]++, scores[0]);
    const lastScore =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[125]++, scores[scores.length - 1]);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[126]++;
    if (lastScore > firstScore + 10) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[20][0]++;
      cov_7n4m2jwp1().s[127]++;
      return 'IMPROVING';
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[20][1]++;
      cov_7n4m2jwp1().s[128]++;
      if (lastScore < firstScore - 10) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[21][0]++;
        cov_7n4m2jwp1().s[129]++;
        return 'DEGRADING';
      } else {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[21][1]++;
        cov_7n4m2jwp1().s[130]++;
        return 'STABLE';
      }
    }
  }
  /**
   * Handle unhealthy component
   *
   * @param tracker Component health tracker
   * @param result Health check result
   */
  async handleUnhealthyComponent(tracker, result) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[22]++;
    cov_7n4m2jwp1().s[131]++;
    // Send health alert
    if (this.config.enableAlerts) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[22][0]++;
      cov_7n4m2jwp1().s[132]++;
      await communication_bus_1.communicationBus.publish('system.health.component.unhealthy', {
        componentId: tracker.component.id,
        status: result.status,
        score: result.score,
        issues: result.issues,
        recommendations: result.recommendations,
        timestamp: result.timestamp
      }, {
        priority: result.status === SystemHealthStatus.CRITICAL ?
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[23][0]++, communication_bus_1.MessagePriority.CRITICAL) :
        /* istanbul ignore next */
        (cov_7n4m2jwp1().b[23][1]++, communication_bus_1.MessagePriority.HIGH),
        source: 'system-health-monitor'
      });
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[22][1]++;
    }
    // Attempt recovery if enabled
    cov_7n4m2jwp1().s[133]++;
    if (
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[25][0]++, this.config.autoRecovery) &&
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[25][1]++, tracker.failureCount >= this.config.failureThreshold)) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[24][0]++;
      cov_7n4m2jwp1().s[134]++;
      await this.attemptComponentRecovery(tracker);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[24][1]++;
    }
  }
  /**
   * Attempt to recover unhealthy component
   *
   * @param tracker Component health tracker
   */
  async attemptComponentRecovery(tracker) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[23]++;
    const now =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[135]++, new Date());
    // Check cooldown period
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[136]++;
    if (tracker.lastRecoveryAttempt) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[26][0]++;
      const timeSinceLastRecovery =
      /* istanbul ignore next */
      (cov_7n4m2jwp1().s[137]++, now.getTime() - tracker.lastRecoveryAttempt.getTime());
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[138]++;
      if (timeSinceLastRecovery < this.config.recoveryCooldown) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[27][0]++;
        cov_7n4m2jwp1().s[139]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_7n4m2jwp1().b[27][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[26][1]++;
    }
    cov_7n4m2jwp1().s[140]++;
    logger_1.logger.warn(`🔄 Attempting recovery for unhealthy component: ${tracker.component.id}`);
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[141]++;
    tracker.lastRecoveryAttempt = now;
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[142]++;
    try {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[143]++;
      // Send recovery request
      await communication_bus_1.communicationBus.publish('system.component.recovery.request', {
        componentId: tracker.component.id,
        reason: 'HEALTH_CHECK_FAILURE',
        timestamp: now
      }, {
        priority: communication_bus_1.MessagePriority.HIGH,
        source: 'system-health-monitor'
      });
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[144]++;
      logger_1.logger.info(`✅ Recovery request sent for component: ${tracker.component.id}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[145]++;
      logger_1.logger.error(`❌ Failed to send recovery request for ${tracker.component.id}:`, error);
    }
  }
  /**
   * Collect system metrics
   */
  async collectSystemMetrics() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[24]++;
    cov_7n4m2jwp1().s[146]++;
    try {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[147]++;
      // This would integrate with system monitoring tools
      // For now, we'll create mock metrics
      this.systemMetrics = {
        cpu: {
          usage: Math.random() * 100,
          temperature: 45 + Math.random() * 20,
          loadAverage: [1.2, 1.5, 1.8],
          processes: 150 + Math.floor(Math.random() * 50)
        },
        memory: {
          total: 12 * 1024 * 1024 * 1024,
          // 12GB
          used: 8 * 1024 * 1024 * 1024,
          // 8GB
          free: 4 * 1024 * 1024 * 1024,
          // 4GB
          usage: 66.7,
          swapUsed: 0
        },
        disk: {
          total: 256 * 1024 * 1024 * 1024,
          // 256GB
          used: 128 * 1024 * 1024 * 1024,
          // 128GB
          free: 128 * 1024 * 1024 * 1024,
          // 128GB
          usage: 50,
          ioRead: 1000,
          ioWrite: 500
        },
        network: {
          bytesIn: 1000000,
          bytesOut: 500000,
          packetsIn: 1000,
          packetsOut: 800,
          errors: 0,
          latency: 10
        },
        application: {
          uptime: process.uptime() * 1000,
          memoryUsage: process.memoryUsage().heapUsed,
          activeConnections: 10,
          requestsPerSecond: 50,
          errorRate: 0.1
        }
      };
      // Check for metric alerts
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[148]++;
      await this.checkMetricAlerts();
    } catch (error) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[149]++;
      logger_1.logger.error('❌ Failed to collect system metrics:', error);
    }
  }
  /**
   * Check for metric-based alerts
   */
  async checkMetricAlerts() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[25]++;
    cov_7n4m2jwp1().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[29][0]++, !this.systemMetrics) ||
    /* istanbul ignore next */
    (cov_7n4m2jwp1().b[29][1]++, !this.config.enableAlerts)) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[28][0]++;
      cov_7n4m2jwp1().s[151]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[28][1]++;
    }
    const alerts =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[152]++, []);
    // Check CPU usage
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[153]++;
    if (this.systemMetrics.cpu.usage > this.config.alertThresholds.cpu) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[30][0]++;
      cov_7n4m2jwp1().s[154]++;
      alerts.push(`High CPU usage: ${this.systemMetrics.cpu.usage.toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[30][1]++;
    }
    // Check memory usage
    cov_7n4m2jwp1().s[155]++;
    if (this.systemMetrics.memory.usage > this.config.alertThresholds.memory) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[31][0]++;
      cov_7n4m2jwp1().s[156]++;
      alerts.push(`High memory usage: ${this.systemMetrics.memory.usage.toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[31][1]++;
    }
    // Check disk usage
    cov_7n4m2jwp1().s[157]++;
    if (this.systemMetrics.disk.usage > this.config.alertThresholds.disk) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[32][0]++;
      cov_7n4m2jwp1().s[158]++;
      alerts.push(`High disk usage: ${this.systemMetrics.disk.usage.toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[32][1]++;
    }
    // Send alerts if any
    cov_7n4m2jwp1().s[159]++;
    if (alerts.length > 0) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[33][0]++;
      cov_7n4m2jwp1().s[160]++;
      await communication_bus_1.communicationBus.publish('system.health.metrics.alert', {
        alerts,
        metrics: this.systemMetrics,
        timestamp: new Date()
      }, {
        priority: communication_bus_1.MessagePriority.HIGH,
        source: 'system-health-monitor'
      });
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[33][1]++;
    }
  }
  /**
   * Update overall system health status
   */
  updateOverallHealthStatus() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[26]++;
    const componentStatuses =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[161]++, Array.from(this.componentTrackers.values()).map(tracker => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[27]++;
      cov_7n4m2jwp1().s[162]++;
      return tracker.currentHealth.status;
    }));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[163]++;
    if (componentStatuses.length === 0) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[34][0]++;
      cov_7n4m2jwp1().s[164]++;
      this.overallHealthStatus = SystemHealthStatus.HEALTHY;
      /* istanbul ignore next */
      cov_7n4m2jwp1().s[165]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[34][1]++;
    }
    // Determine overall status based on component statuses
    cov_7n4m2jwp1().s[166]++;
    if (componentStatuses.some(status => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[28]++;
      cov_7n4m2jwp1().s[167]++;
      return status === SystemHealthStatus.OFFLINE;
    })) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[35][0]++;
      cov_7n4m2jwp1().s[168]++;
      this.overallHealthStatus = SystemHealthStatus.OFFLINE;
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[35][1]++;
      cov_7n4m2jwp1().s[169]++;
      if (componentStatuses.some(status => {
        /* istanbul ignore next */
        cov_7n4m2jwp1().f[29]++;
        cov_7n4m2jwp1().s[170]++;
        return status === SystemHealthStatus.CRITICAL;
      })) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[36][0]++;
        cov_7n4m2jwp1().s[171]++;
        this.overallHealthStatus = SystemHealthStatus.CRITICAL;
      } else {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[36][1]++;
        cov_7n4m2jwp1().s[172]++;
        if (componentStatuses.some(status => {
          /* istanbul ignore next */
          cov_7n4m2jwp1().f[30]++;
          cov_7n4m2jwp1().s[173]++;
          return status === SystemHealthStatus.DEGRADED;
        })) {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[37][0]++;
          cov_7n4m2jwp1().s[174]++;
          this.overallHealthStatus = SystemHealthStatus.DEGRADED;
        } else {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[37][1]++;
          cov_7n4m2jwp1().s[175]++;
          if (componentStatuses.some(status => {
            /* istanbul ignore next */
            cov_7n4m2jwp1().f[31]++;
            cov_7n4m2jwp1().s[176]++;
            return status === SystemHealthStatus.WARNING;
          })) {
            /* istanbul ignore next */
            cov_7n4m2jwp1().b[38][0]++;
            cov_7n4m2jwp1().s[177]++;
            this.overallHealthStatus = SystemHealthStatus.WARNING;
          } else {
            /* istanbul ignore next */
            cov_7n4m2jwp1().b[38][1]++;
            cov_7n4m2jwp1().s[178]++;
            this.overallHealthStatus = SystemHealthStatus.HEALTHY;
          }
        }
      }
    }
  }
  /**
   * Determine health status based on score and issues
   *
   * @param result Health check result
   * @returns System health status
   */
  determineHealthStatus(result) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[32]++;
    // Check for critical issues
    const hasCriticalIssues =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[179]++, result.issues.some(issue => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[33]++;
      cov_7n4m2jwp1().s[180]++;
      return issue.severity === 'CRITICAL';
    }));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[181]++;
    if (hasCriticalIssues) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[39][0]++;
      cov_7n4m2jwp1().s[182]++;
      return SystemHealthStatus.CRITICAL;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[39][1]++;
    }
    // Check for high severity issues
    const hasHighIssues =
    /* istanbul ignore next */
    (cov_7n4m2jwp1().s[183]++, result.issues.some(issue => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[34]++;
      cov_7n4m2jwp1().s[184]++;
      return issue.severity === 'HIGH';
    }));
    /* istanbul ignore next */
    cov_7n4m2jwp1().s[185]++;
    if (hasHighIssues) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[40][0]++;
      cov_7n4m2jwp1().s[186]++;
      return SystemHealthStatus.DEGRADED;
    } else
    /* istanbul ignore next */
    {
      cov_7n4m2jwp1().b[40][1]++;
    }
    // Check score thresholds
    cov_7n4m2jwp1().s[187]++;
    if (result.score >= 90) {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[41][0]++;
      cov_7n4m2jwp1().s[188]++;
      return SystemHealthStatus.HEALTHY;
    } else {
      /* istanbul ignore next */
      cov_7n4m2jwp1().b[41][1]++;
      cov_7n4m2jwp1().s[189]++;
      if (result.score >= 70) {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[42][0]++;
        cov_7n4m2jwp1().s[190]++;
        return SystemHealthStatus.WARNING;
      } else {
        /* istanbul ignore next */
        cov_7n4m2jwp1().b[42][1]++;
        cov_7n4m2jwp1().s[191]++;
        if (result.score >= 50) {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[43][0]++;
          cov_7n4m2jwp1().s[192]++;
          return SystemHealthStatus.DEGRADED;
        } else {
          /* istanbul ignore next */
          cov_7n4m2jwp1().b[43][1]++;
          cov_7n4m2jwp1().s[193]++;
          return SystemHealthStatus.CRITICAL;
        }
      }
    }
  }
  /**
   * Convert component issues to health issues
   *
   * @param issues Component issues
   * @returns Array of health issues
   */
  convertToHealthIssues(issues) {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[35]++;
    cov_7n4m2jwp1().s[194]++;
    return issues.map(issue => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[36]++;
      cov_7n4m2jwp1().s[195]++;
      return {
        severity: 'MEDIUM',
        category: 'GENERAL',
        description: issue,
        code: 'COMPONENT_ISSUE',
        affectedMetrics: [],
        suggestedActions: ['Investigate issue'],
        timestamp: new Date()
      };
    });
  }
  /**
   * Setup event handlers
   */
  setupEventHandlers() {
    /* istanbul ignore next */
    cov_7n4m2jwp1().f[37]++;
    cov_7n4m2jwp1().s[196]++;
    this.on('component:health-changed', (componentId, health) => {
      /* istanbul ignore next */
      cov_7n4m2jwp1().f[38]++;
      cov_7n4m2jwp1().s[197]++;
      logger_1.logger.debug(`🏥 Component health changed: ${componentId} - ${health.status} (${health.score})`);
    });
  }
}
/* istanbul ignore next */
cov_7n4m2jwp1().s[198]++;
exports.SystemHealthMonitor = SystemHealthMonitor;
/**
 * Default health monitoring configuration
 */
/* istanbul ignore next */
cov_7n4m2jwp1().s[199]++;
exports.defaultHealthMonitorConfig = {
  checkInterval: 30000,
  // 30 seconds
  checkTimeout: 10000,
  // 10 seconds
  failureThreshold: 3,
  // 3 consecutive failures
  recoveryThreshold: 2,
  // 2 consecutive successes
  autoRecovery: true,
  recoveryCooldown: 300000,
  // 5 minutes
  historyRetention: 100,
  // Keep last 100 health checks
  enableAlerts: true,
  alertThresholds: {
    cpu: 80,
    // 80% CPU usage
    memory: 85,
    // 85% memory usage
    disk: 90,
    // 90% disk usage
    responseTime: 5000 // 5 second response time
  }
};
// =============================================================================
// SYSTEM HEALTH MONITORING NOTES
// =============================================================================
// 1. Comprehensive component health monitoring with configurable intervals
// 2. System metrics collection and threshold-based alerting
// 3. Health trend analysis and predictive issue detection
// 4. Automatic recovery attempts with cooldown periods
// 5. Health history tracking for performance analysis
// 6. Event-driven health status changes and notifications
// 7. Integration with communication bus for system-wide alerts
// 8. Configurable thresholds and monitoring parameters
// =============================================================================