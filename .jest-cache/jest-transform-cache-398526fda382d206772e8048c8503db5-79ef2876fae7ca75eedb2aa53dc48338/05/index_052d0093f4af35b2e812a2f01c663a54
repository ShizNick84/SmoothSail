226b70ce3c12564dfce9f01bf8c3bef7
"use strict";

/**
 * =============================================================================
 * BACKTESTING MODULE EXPORTS
 * =============================================================================
 *
 * This module exports all backtesting components for easy import and use
 * throughout the trading system. The backtesting system provides comprehensive
 * strategy validation using real historical market data only.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_tmbfutv79() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\index.ts";
  var hash = "26d87c9108e0f10eb9b8041d143826d84175019f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "1": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "2": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "3": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "4": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "5": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 68
        }
      },
      "6": {
        start: {
          line: 20,
          column: 51
        },
        end: {
          line: 20,
          column: 63
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "9": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 17
        }
      },
      "11": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 126
        }
      },
      "13": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 126
        }
      },
      "14": {
        start: {
          line: 28,
          column: 95
        },
        end: {
          line: 28,
          column: 126
        }
      },
      "15": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 62
        }
      },
      "16": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 133
        }
      },
      "17": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 58
        }
      },
      "18": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 143
        }
      },
      "19": {
        start: {
          line: 34,
          column: 91
        },
        end: {
          line: 34,
          column: 137
        }
      },
      "20": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "21": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 156
        }
      },
      "22": {
        start: {
          line: 37,
          column: 95
        },
        end: {
          line: 37,
          column: 150
        }
      },
      "23": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 39,
          column: 66
        }
      },
      "24": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 155
        }
      },
      "25": {
        start: {
          line: 40,
          column: 95
        },
        end: {
          line: 40,
          column: 149
        }
      },
      "26": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 54
        }
      },
      "27": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 153
        }
      },
      "28": {
        start: {
          line: 43,
          column: 97
        },
        end: {
          line: 43,
          column: 147
        }
      },
      "29": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 74
          },
          end: {
            line: 16,
            column: 75
          }
        },
        loc: {
          start: {
            line: 16,
            column: 96
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 38
          },
          end: {
            line: 20,
            column: 39
          }
        },
        loc: {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 65
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 23,
            column: 7
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 50
          },
          end: {
            line: 27,
            column: 51
          }
        },
        loc: {
          start: {
            line: 27,
            column: 71
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 77
          },
          end: {
            line: 34,
            column: 78
          }
        },
        loc: {
          start: {
            line: 34,
            column: 89
          },
          end: {
            line: 34,
            column: 139
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 81
          },
          end: {
            line: 37,
            column: 82
          }
        },
        loc: {
          start: {
            line: 37,
            column: 93
          },
          end: {
            line: 37,
            column: 152
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 81
          },
          end: {
            line: 40,
            column: 82
          }
        },
        loc: {
          start: {
            line: 40,
            column: 93
          },
          end: {
            line: 40,
            column: 151
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 83
          },
          end: {
            line: 43,
            column: 84
          }
        },
        loc: {
          start: {
            line: 43,
            column: 95
          },
          end: {
            line: 43,
            column: 149
          }
        },
        line: 43
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 26,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 27
          }
        }, {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: 16,
            column: 57
          },
          end: {
            line: 26,
            column: 2
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 57
          },
          end: {
            line: 26,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 74
          },
          end: {
            line: 23,
            column: 1
          }
        }, {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 26,
            column: 1
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 13
          }
        }, {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 84
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 19,
            column: 47
          }
        }, {
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 19,
            column: 84
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 19,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 19,
            column: 63
          }
        }, {
          start: {
            line: 19,
            column: 67
          },
          end: {
            line: 19,
            column: 84
          }
        }],
        line: 19
      },
      "7": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 29,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 24
          }
        }, {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 50
          },
          end: {
            line: 29,
            column: 1
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 126
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 126
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "10": {
        loc: {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 28,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 28,
            column: 40
          }
        }, {
          start: {
            line: 28,
            column: 44
          },
          end: {
            line: 28,
            column: 93
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "26d87c9108e0f10eb9b8041d143826d84175019f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_tmbfutv79 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_tmbfutv79();
var __createBinding =
/* istanbul ignore next */
(cov_tmbfutv79().s[0]++,
/* istanbul ignore next */
(cov_tmbfutv79().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_tmbfutv79().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_tmbfutv79().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_tmbfutv79().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_tmbfutv79().f[0]++;
  cov_tmbfutv79().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_tmbfutv79().b[2][0]++;
    cov_tmbfutv79().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_tmbfutv79().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_tmbfutv79().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_tmbfutv79().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_tmbfutv79().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_tmbfutv79().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_tmbfutv79().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_tmbfutv79().b[5][1]++,
  /* istanbul ignore next */
  (cov_tmbfutv79().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_tmbfutv79().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_tmbfutv79().b[3][0]++;
    cov_tmbfutv79().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_tmbfutv79().f[1]++;
        cov_tmbfutv79().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_tmbfutv79().b[3][1]++;
  }
  cov_tmbfutv79().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_tmbfutv79().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_tmbfutv79().f[2]++;
  cov_tmbfutv79().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_tmbfutv79().b[7][0]++;
    cov_tmbfutv79().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_tmbfutv79().b[7][1]++;
  }
  cov_tmbfutv79().s[10]++;
  o[k2] = m[k];
})));
var __exportStar =
/* istanbul ignore next */
(cov_tmbfutv79().s[11]++,
/* istanbul ignore next */
(cov_tmbfutv79().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_tmbfutv79().b[8][1]++, this.__exportStar) ||
/* istanbul ignore next */
(cov_tmbfutv79().b[8][2]++, function (m, exports) {
  /* istanbul ignore next */
  cov_tmbfutv79().f[3]++;
  cov_tmbfutv79().s[12]++;
  for (var p in m) {
    /* istanbul ignore next */
    cov_tmbfutv79().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_tmbfutv79().b[10][0]++, p !== "default") &&
    /* istanbul ignore next */
    (cov_tmbfutv79().b[10][1]++, !Object.prototype.hasOwnProperty.call(exports, p))) {
      /* istanbul ignore next */
      cov_tmbfutv79().b[9][0]++;
      cov_tmbfutv79().s[14]++;
      __createBinding(exports, m, p);
    } else
    /* istanbul ignore next */
    {
      cov_tmbfutv79().b[9][1]++;
    }
  }
}));
/* istanbul ignore next */
cov_tmbfutv79().s[15]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_tmbfutv79().s[16]++;
exports.BacktestReportGenerator = exports.PerformanceCalculator = exports.HistoricalDataFetcher = exports.BacktestingEngine = void 0;
// Core backtesting engine
var backtesting_engine_1 =
/* istanbul ignore next */
(cov_tmbfutv79().s[17]++, require("./backtesting-engine"));
/* istanbul ignore next */
cov_tmbfutv79().s[18]++;
Object.defineProperty(exports, "BacktestingEngine", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_tmbfutv79().f[4]++;
    cov_tmbfutv79().s[19]++;
    return backtesting_engine_1.BacktestingEngine;
  }
});
// Historical data fetching with validation
var historical_data_fetcher_1 =
/* istanbul ignore next */
(cov_tmbfutv79().s[20]++, require("./historical-data-fetcher"));
/* istanbul ignore next */
cov_tmbfutv79().s[21]++;
Object.defineProperty(exports, "HistoricalDataFetcher", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_tmbfutv79().f[5]++;
    cov_tmbfutv79().s[22]++;
    return historical_data_fetcher_1.HistoricalDataFetcher;
  }
});
// Performance metrics calculation
var performance_calculator_1 =
/* istanbul ignore next */
(cov_tmbfutv79().s[23]++, require("./performance-calculator"));
/* istanbul ignore next */
cov_tmbfutv79().s[24]++;
Object.defineProperty(exports, "PerformanceCalculator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_tmbfutv79().f[6]++;
    cov_tmbfutv79().s[25]++;
    return performance_calculator_1.PerformanceCalculator;
  }
});
// Report generation
var report_generator_1 =
/* istanbul ignore next */
(cov_tmbfutv79().s[26]++, require("./report-generator"));
/* istanbul ignore next */
cov_tmbfutv79().s[27]++;
Object.defineProperty(exports, "BacktestReportGenerator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_tmbfutv79().f[7]++;
    cov_tmbfutv79().s[28]++;
    return report_generator_1.BacktestReportGenerator;
  }
});
// Type definitions
/* istanbul ignore next */
cov_tmbfutv79().s[29]++;
__exportStar(require("./types"), exports);