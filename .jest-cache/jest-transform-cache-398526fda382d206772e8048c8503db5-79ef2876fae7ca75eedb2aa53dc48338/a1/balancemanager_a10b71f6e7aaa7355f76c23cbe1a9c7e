ba8f8b108327783db9deb6665f784509
"use strict";

/**
 * =============================================================================
 * ACCOUNT AND BALANCE MANAGEMENT SYSTEM
 * =============================================================================
 *
 * This module implements comprehensive account and balance management for
 * Gate.io cryptocurrency trading with real-time monitoring, validation,
 * discrepancy detection, and comprehensive audit logging.
 *
 * SECURITY FEATURES:
 * - Real-time balance monitoring and validation
 * - Automatic discrepancy detection and alerting
 * - Transaction history tracking and reconciliation
 * - Balance threshold alerts and notifications
 * - Comprehensive audit logging for all balance operations
 * - Emergency balance protection mechanisms
 *
 * CRITICAL FINANCIAL NOTICE:
 * This system handles real financial assets and account balances.
 * All balance operations must be validated and logged for audit compliance.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_27b1lx3rb0() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\account\\balance-manager.ts";
  var hash = "1112d0cd45d900e88725571a3c5972ed0dee0f78";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\account\\balance-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "1": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "2": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "3": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "4": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "5": {
        start: {
          line: 40,
          column: 22
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "6": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 41,
          column: 23
        }
      },
      "7": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 29
        }
      },
      "8": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "9": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "10": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "11": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "12": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 16
        }
      },
      "13": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 41
        }
      },
      "14": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 63
        }
      },
      "15": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "16": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "17": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 93
        }
      },
      "18": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "19": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "20": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "21": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "22": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "23": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "24": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "25": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "26": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 47
        }
      },
      "27": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "28": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "29": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "30": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 79
        }
      },
      "31": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 24
        }
      },
      "32": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 84
        }
      },
      "33": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "34": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 25
        }
      },
      "35": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "36": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "37": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 49
        }
      },
      "38": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 49
        }
      },
      "39": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 78
        }
      },
      "40": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 24
        }
      },
      "41": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "42": {
        start: {
          line: 155,
          column: 29
        },
        end: {
          line: 155,
          column: 72
        }
      },
      "43": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "44": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 85
        }
      },
      "45": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 24
        }
      },
      "46": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "47": {
        start: {
          line: 170,
          column: 29
        },
        end: {
          line: 170,
          column: 60
        }
      },
      "48": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 30
        }
      },
      "49": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "50": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 180,
          column: 17
        }
      },
      "51": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 60
        }
      },
      "52": {
        start: {
          line: 178,
          column: 34
        },
        end: {
          line: 178,
          column: 71
        }
      },
      "53": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 68
        }
      },
      "54": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 30
        }
      },
      "55": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 89
        }
      },
      "56": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 21
        }
      },
      "57": {
        start: {
          line: 196,
          column: 26
        },
        end: {
          line: 196,
          column: 36
        }
      },
      "58": {
        start: {
          line: 197,
          column: 30
        },
        end: {
          line: 197,
          column: 32
        }
      },
      "59": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "60": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 99
        }
      },
      "61": {
        start: {
          line: 201,
          column: 37
        },
        end: {
          line: 201,
          column: 75
        }
      },
      "62": {
        start: {
          line: 203,
          column: 41
        },
        end: {
          line: 205,
          column: 57
        }
      },
      "63": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "64": {
        start: {
          line: 207,
          column: 38
        },
        end: {
          line: 207,
          column: 68
        }
      },
      "65": {
        start: {
          line: 208,
          column: 40
        },
        end: {
          line: 208,
          column: 66
        }
      },
      "66": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 224,
          column: 17
        }
      },
      "67": {
        start: {
          line: 210,
          column: 40
        },
        end: {
          line: 210,
          column: 94
        }
      },
      "68": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 223,
          column: 21
        }
      },
      "69": {
        start: {
          line: 212,
          column: 24
        },
        end: {
          line: 212,
          column: 56
        }
      },
      "70": {
        start: {
          line: 213,
          column: 24
        },
        end: {
          line: 213,
          column: 59
        }
      },
      "71": {
        start: {
          line: 215,
          column: 24
        },
        end: {
          line: 218,
          column: 27
        }
      },
      "72": {
        start: {
          line: 220,
          column: 24
        },
        end: {
          line: 222,
          column: 25
        }
      },
      "73": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 221,
          column: 93
        }
      },
      "74": {
        start: {
          line: 227,
          column: 35
        },
        end: {
          line: 227,
          column: 57
        }
      },
      "75": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 74
        }
      },
      "76": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "77": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 95
        }
      },
      "78": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 76
        }
      },
      "79": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 33
        }
      },
      "80": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 75
        }
      },
      "81": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 24
        }
      },
      "82": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "83": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 104
        }
      },
      "84": {
        start: {
          line: 251,
          column: 28
        },
        end: {
          line: 251,
          column: 30
        }
      },
      "85": {
        start: {
          line: 252,
          column: 42
        },
        end: {
          line: 254,
          column: 57
        }
      },
      "86": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "87": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 77
        }
      },
      "88": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 37
        }
      },
      "89": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 260,
          column: 17
        }
      },
      "90": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 150
        }
      },
      "91": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 50
        }
      },
      "92": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 49
        }
      },
      "93": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 268,
          column: 15
        }
      },
      "94": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 108
        }
      },
      "95": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 27
        }
      },
      "96": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 80
        }
      },
      "97": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 24
        }
      },
      "98": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "99": {
        start: {
          line: 284,
          column: 29
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "100": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 47
        }
      },
      "101": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 45
        }
      },
      "102": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 299,
          column: 15
        }
      },
      "103": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 88
        }
      },
      "104": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 28
        }
      },
      "105": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 81
        }
      },
      "106": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 24
        }
      },
      "107": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 317,
          column: 29
        }
      },
      "108": {
        start: {
          line: 316,
          column: 28
        },
        end: {
          line: 316,
          column: 73
        }
      },
      "109": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "110": {
        start: {
          line: 329,
          column: 27
        },
        end: {
          line: 329,
          column: 65
        }
      },
      "111": {
        start: {
          line: 331,
          column: 35
        },
        end: {
          line: 331,
          column: 88
        }
      },
      "112": {
        start: {
          line: 331,
          column: 58
        },
        end: {
          line: 331,
          column: 87
        }
      },
      "113": {
        start: {
          line: 333,
          column: 29
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "114": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 42
        }
      },
      "115": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 61
        }
      },
      "116": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 99
        }
      },
      "117": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 24
        }
      },
      "118": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 75
        }
      },
      "119": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 25
        }
      },
      "120": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "121": {
        start: {
          line: 360,
          column: 27
        },
        end: {
          line: 360,
          column: 65
        }
      },
      "122": {
        start: {
          line: 361,
          column: 35
        },
        end: {
          line: 361,
          column: 88
        }
      },
      "123": {
        start: {
          line: 361,
          column: 58
        },
        end: {
          line: 361,
          column: 87
        }
      },
      "124": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "125": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 65
        }
      },
      "126": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 91
        }
      },
      "127": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 28
        }
      },
      "128": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 25
        }
      },
      "129": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 78
        }
      },
      "130": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 25
        }
      },
      "131": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 54
        }
      },
      "132": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "133": {
        start: {
          line: 390,
          column: 33
        },
        end: {
          line: 390,
          column: 68
        }
      },
      "134": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "135": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 29
        }
      },
      "136": {
        start: {
          line: 395,
          column: 30
        },
        end: {
          line: 395,
          column: 72
        }
      },
      "137": {
        start: {
          line: 396,
          column: 39
        },
        end: {
          line: 398,
          column: 81
        }
      },
      "138": {
        start: {
          line: 397,
          column: 36
        },
        end: {
          line: 397,
          column: 67
        }
      },
      "139": {
        start: {
          line: 398,
          column: 32
        },
        end: {
          line: 398,
          column: 77
        }
      },
      "140": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 401,
          column: 13
        }
      },
      "141": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 400,
          column: 29
        }
      },
      "142": {
        start: {
          line: 402,
          column: 36
        },
        end: {
          line: 402,
          column: 68
        }
      },
      "143": {
        start: {
          line: 403,
          column: 32
        },
        end: {
          line: 403,
          column: 90
        }
      },
      "144": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 425,
          column: 13
        }
      },
      "145": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 121
        }
      },
      "146": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 416,
          column: 19
        }
      },
      "147": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 423,
          column: 19
        }
      },
      "148": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 424,
          column: 28
        }
      },
      "149": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 25
        }
      },
      "150": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 78
        }
      },
      "151": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 25
        }
      },
      "152": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "153": {
        start: {
          line: 438,
          column: 29
        },
        end: {
          line: 438,
          column: 67
        }
      },
      "154": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 44
        }
      },
      "155": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 54
        }
      },
      "156": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 44
        }
      },
      "157": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 446,
          column: 13
        }
      },
      "158": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 445,
          column: 51
        }
      },
      "159": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 450,
          column: 13
        }
      },
      "160": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 48
        }
      },
      "161": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 82
        }
      },
      "162": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 79
        }
      },
      "163": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 24
        }
      },
      "164": {
        start: {
          line: 462,
          column: 29
        },
        end: {
          line: 465,
          column: 10
        }
      },
      "165": {
        start: {
          line: 466,
          column: 27
        },
        end: {
          line: 466,
          column: 36
        }
      },
      "166": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "167": {
        start: {
          line: 468,
          column: 28
        },
        end: {
          line: 474,
          column: 13
        }
      },
      "168": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 54
        }
      },
      "169": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 26
        }
      },
      "170": {
        start: {
          line: 483,
          column: 28
        },
        end: {
          line: 483,
          column: 59
        }
      },
      "171": {
        start: {
          line: 484,
          column: 30
        },
        end: {
          line: 484,
          column: 63
        }
      },
      "172": {
        start: {
          line: 485,
          column: 27
        },
        end: {
          line: 485,
          column: 64
        }
      },
      "173": {
        start: {
          line: 486,
          column: 34
        },
        end: {
          line: 486,
          column: 88
        }
      },
      "174": {
        start: {
          line: 487,
          column: 31
        },
        end: {
          line: 487,
          column: 83
        }
      },
      "175": {
        start: {
          line: 488,
          column: 23
        },
        end: {
          line: 488,
          column: 28
        }
      },
      "176": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 494,
          column: 32
        }
      },
      "177": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 34
        }
      },
      "178": {
        start: {
          line: 491,
          column: 13
        },
        end: {
          line: 494,
          column: 32
        }
      },
      "179": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 30
        }
      },
      "180": {
        start: {
          line: 493,
          column: 13
        },
        end: {
          line: 494,
          column: 32
        }
      },
      "181": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 32
        }
      },
      "182": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 504,
          column: 10
        }
      },
      "183": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 567,
          column: 9
        }
      },
      "184": {
        start: {
          line: 512,
          column: 35
        },
        end: {
          line: 512,
          column: 69
        }
      },
      "185": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 515,
          column: 13
        }
      },
      "186": {
        start: {
          line: 514,
          column: 16
        },
        end: {
          line: 514,
          column: 79
        }
      },
      "187": {
        start: {
          line: 517,
          column: 33
        },
        end: {
          line: 517,
          column: 76
        }
      },
      "188": {
        start: {
          line: 519,
          column: 34
        },
        end: {
          line: 519,
          column: 35
        }
      },
      "189": {
        start: {
          line: 520,
          column: 43
        },
        end: {
          line: 520,
          column: 45
        }
      },
      "190": {
        start: {
          line: 521,
          column: 45
        },
        end: {
          line: 521,
          column: 47
        }
      },
      "191": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 537,
          column: 13
        }
      },
      "192": {
        start: {
          line: 523,
          column: 16
        },
        end: {
          line: 536,
          column: 17
        }
      },
      "193": {
        start: {
          line: 524,
          column: 35
        },
        end: {
          line: 524,
          column: 65
        }
      },
      "194": {
        start: {
          line: 525,
          column: 32
        },
        end: {
          line: 525,
          column: 59
        }
      },
      "195": {
        start: {
          line: 526,
          column: 20
        },
        end: {
          line: 531,
          column: 21
        }
      },
      "196": {
        start: {
          line: 527,
          column: 24
        },
        end: {
          line: 527,
          column: 56
        }
      },
      "197": {
        start: {
          line: 530,
          column: 24
        },
        end: {
          line: 530,
          column: 56
        }
      },
      "198": {
        start: {
          line: 532,
          column: 20
        },
        end: {
          line: 532,
          column: 61
        }
      },
      "199": {
        start: {
          line: 535,
          column: 20
        },
        end: {
          line: 535,
          column: 63
        }
      },
      "200": {
        start: {
          line: 538,
          column: 34
        },
        end: {
          line: 538,
          column: 66
        }
      },
      "201": {
        start: {
          line: 539,
          column: 33
        },
        end: {
          line: 539,
          column: 84
        }
      },
      "202": {
        start: {
          line: 540,
          column: 34
        },
        end: {
          line: 540,
          column: 36
        }
      },
      "203": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 552,
          column: 13
        }
      },
      "204": {
        start: {
          line: 542,
          column: 16
        },
        end: {
          line: 551,
          column: 19
        }
      },
      "205": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 562,
          column: 14
        }
      },
      "206": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 96
        }
      },
      "207": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 566,
          column: 24
        }
      },
      "208": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 597,
          column: 9
        }
      },
      "209": {
        start: {
          line: 575,
          column: 31
        },
        end: {
          line: 575,
          column: 70
        }
      },
      "210": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 592,
          column: 13
        }
      },
      "211": {
        start: {
          line: 577,
          column: 16
        },
        end: {
          line: 591,
          column: 17
        }
      },
      "212": {
        start: {
          line: 578,
          column: 35
        },
        end: {
          line: 585,
          column: 22
        }
      },
      "213": {
        start: {
          line: 586,
          column: 20
        },
        end: {
          line: 586,
          column: 66
        }
      },
      "214": {
        start: {
          line: 590,
          column: 20
        },
        end: {
          line: 590,
          column: 84
        }
      },
      "215": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 593,
          column: 113
        }
      },
      "216": {
        start: {
          line: 596,
          column: 12
        },
        end: {
          line: 596,
          column: 82
        }
      },
      "217": {
        start: {
          line: 604,
          column: 32
        },
        end: {
          line: 604,
          column: 54
        }
      },
      "218": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 607,
          column: 9
        }
      },
      "219": {
        start: {
          line: 606,
          column: 12
        },
        end: {
          line: 606,
          column: 65
        }
      },
      "220": {
        start: {
          line: 608,
          column: 8
        },
        end: {
          line: 608,
          column: 70
        }
      },
      "221": {
        start: {
          line: 614,
          column: 8
        },
        end: {
          line: 622,
          column: 43
        }
      },
      "222": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 621,
          column: 13
        }
      },
      "223": {
        start: {
          line: 616,
          column: 16
        },
        end: {
          line: 616,
          column: 49
        }
      },
      "224": {
        start: {
          line: 617,
          column: 16
        },
        end: {
          line: 617,
          column: 48
        }
      },
      "225": {
        start: {
          line: 620,
          column: 16
        },
        end: {
          line: 620,
          column: 79
        }
      },
      "226": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 623,
          column: 73
        }
      },
      "227": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 636,
          column: 47
        }
      },
      "228": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 635,
          column: 13
        }
      },
      "229": {
        start: {
          line: 631,
          column: 16
        },
        end: {
          line: 631,
          column: 51
        }
      },
      "230": {
        start: {
          line: 634,
          column: 16
        },
        end: {
          line: 634,
          column: 87
        }
      },
      "231": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 637,
          column: 70
        }
      },
      "232": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 655,
          column: 9
        }
      },
      "233": {
        start: {
          line: 644,
          column: 28
        },
        end: {
          line: 644,
          column: 62
        }
      },
      "234": {
        start: {
          line: 645,
          column: 12
        },
        end: {
          line: 646,
          column: 25
        }
      },
      "235": {
        start: {
          line: 646,
          column: 16
        },
        end: {
          line: 646,
          column: 25
        }
      },
      "236": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 654,
          column: 13
        }
      },
      "237": {
        start: {
          line: 648,
          column: 16
        },
        end: {
          line: 649,
          column: 29
        }
      },
      "238": {
        start: {
          line: 649,
          column: 20
        },
        end: {
          line: 649,
          column: 29
        }
      },
      "239": {
        start: {
          line: 650,
          column: 38
        },
        end: {
          line: 650,
          column: 83
        }
      },
      "240": {
        start: {
          line: 651,
          column: 16
        },
        end: {
          line: 653,
          column: 17
        }
      },
      "241": {
        start: {
          line: 652,
          column: 20
        },
        end: {
          line: 652,
          column: 85
        }
      },
      "242": {
        start: {
          line: 661,
          column: 29
        },
        end: {
          line: 661,
          column: 54
        }
      },
      "243": {
        start: {
          line: 662,
          column: 8
        },
        end: {
          line: 674,
          column: 9
        }
      },
      "244": {
        start: {
          line: 664,
          column: 16
        },
        end: {
          line: 664,
          column: 54
        }
      },
      "245": {
        start: {
          line: 666,
          column: 16
        },
        end: {
          line: 666,
          column: 54
        }
      },
      "246": {
        start: {
          line: 669,
          column: 16
        },
        end: {
          line: 669,
          column: 29
        }
      },
      "247": {
        start: {
          line: 671,
          column: 16
        },
        end: {
          line: 671,
          column: 29
        }
      },
      "248": {
        start: {
          line: 673,
          column: 16
        },
        end: {
          line: 673,
          column: 29
        }
      },
      "249": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 706,
          column: 9
        }
      },
      "250": {
        start: {
          line: 682,
          column: 27
        },
        end: {
          line: 682,
          column: 65
        }
      },
      "251": {
        start: {
          line: 683,
          column: 26
        },
        end: {
          line: 683,
          column: 69
        }
      },
      "252": {
        start: {
          line: 683,
          column: 43
        },
        end: {
          line: 683,
          column: 68
        }
      },
      "253": {
        start: {
          line: 684,
          column: 12
        },
        end: {
          line: 687,
          column: 13
        }
      },
      "254": {
        start: {
          line: 685,
          column: 16
        },
        end: {
          line: 685,
          column: 49
        }
      },
      "255": {
        start: {
          line: 686,
          column: 16
        },
        end: {
          line: 686,
          column: 37
        }
      },
      "256": {
        start: {
          line: 688,
          column: 12
        },
        end: {
          line: 688,
          column: 41
        }
      },
      "257": {
        start: {
          line: 690,
          column: 12
        },
        end: {
          line: 694,
          column: 15
        }
      },
      "258": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 701,
          column: 15
        }
      },
      "259": {
        start: {
          line: 702,
          column: 12
        },
        end: {
          line: 702,
          column: 89
        }
      },
      "260": {
        start: {
          line: 705,
          column: 12
        },
        end: {
          line: 705,
          column: 79
        }
      },
      "261": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 713,
          column: 24
        }
      },
      "262": {
        start: {
          line: 713,
          column: 12
        },
        end: {
          line: 713,
          column: 24
        }
      },
      "263": {
        start: {
          line: 714,
          column: 32
        },
        end: {
          line: 714,
          column: 83
        }
      },
      "264": {
        start: {
          line: 715,
          column: 8
        },
        end: {
          line: 715,
          column: 64
        }
      },
      "265": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 722,
          column: 24
        }
      },
      "266": {
        start: {
          line: 722,
          column: 12
        },
        end: {
          line: 722,
          column: 24
        }
      },
      "267": {
        start: {
          line: 723,
          column: 29
        },
        end: {
          line: 723,
          column: 80
        }
      },
      "268": {
        start: {
          line: 724,
          column: 29
        },
        end: {
          line: 724,
          column: 64
        }
      },
      "269": {
        start: {
          line: 725,
          column: 30
        },
        end: {
          line: 725,
          column: 118
        }
      },
      "270": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 726,
          column: 33
        }
      },
      "271": {
        start: {
          line: 732,
          column: 8
        },
        end: {
          line: 745,
          column: 9
        }
      },
      "272": {
        start: {
          line: 733,
          column: 12
        },
        end: {
          line: 734,
          column: 25
        }
      },
      "273": {
        start: {
          line: 734,
          column: 16
        },
        end: {
          line: 734,
          column: 25
        }
      },
      "274": {
        start: {
          line: 735,
          column: 27
        },
        end: {
          line: 739,
          column: 14
        }
      },
      "275": {
        start: {
          line: 740,
          column: 12
        },
        end: {
          line: 740,
          column: 54
        }
      },
      "276": {
        start: {
          line: 743,
          column: 12
        },
        end: {
          line: 743,
          column: 83
        }
      },
      "277": {
        start: {
          line: 744,
          column: 12
        },
        end: {
          line: 744,
          column: 21
        }
      },
      "278": {
        start: {
          line: 752,
          column: 22
        },
        end: {
          line: 752,
          column: 25
        }
      },
      "279": {
        start: {
          line: 753,
          column: 8
        },
        end: {
          line: 754,
          column: 90
        }
      },
      "280": {
        start: {
          line: 756,
          column: 28
        },
        end: {
          line: 756,
          column: 57
        }
      },
      "281": {
        start: {
          line: 757,
          column: 35
        },
        end: {
          line: 757,
          column: 67
        }
      },
      "282": {
        start: {
          line: 758,
          column: 8
        },
        end: {
          line: 758,
          column: 118
        }
      },
      "283": {
        start: {
          line: 764,
          column: 27
        },
        end: {
          line: 764,
          column: 107
        }
      },
      "284": {
        start: {
          line: 765,
          column: 29
        },
        end: {
          line: 765,
          column: 55
        }
      },
      "285": {
        start: {
          line: 766,
          column: 8
        },
        end: {
          line: 766,
          column: 102
        }
      },
      "286": {
        start: {
          line: 766,
          column: 69
        },
        end: {
          line: 766,
          column: 100
        }
      },
      "287": {
        start: {
          line: 767,
          column: 29
        },
        end: {
          line: 767,
          column: 70
        }
      },
      "288": {
        start: {
          line: 768,
          column: 8
        },
        end: {
          line: 770,
          column: 9
        }
      },
      "289": {
        start: {
          line: 769,
          column: 12
        },
        end: {
          line: 769,
          column: 88
        }
      },
      "290": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 776,
          column: 83
        }
      },
      "291": {
        start: {
          line: 782,
          column: 8
        },
        end: {
          line: 787,
          column: 11
        }
      },
      "292": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 793,
          column: 33
        }
      },
      "293": {
        start: {
          line: 799,
          column: 8
        },
        end: {
          line: 799,
          column: 34
        }
      },
      "294": {
        start: {
          line: 805,
          column: 8
        },
        end: {
          line: 805,
          column: 52
        }
      },
      "295": {
        start: {
          line: 807,
          column: 8
        },
        end: {
          line: 810,
          column: 9
        }
      },
      "296": {
        start: {
          line: 808,
          column: 12
        },
        end: {
          line: 808,
          column: 48
        }
      },
      "297": {
        start: {
          line: 809,
          column: 12
        },
        end: {
          line: 809,
          column: 43
        }
      },
      "298": {
        start: {
          line: 812,
          column: 8
        },
        end: {
          line: 815,
          column: 9
        }
      },
      "299": {
        start: {
          line: 813,
          column: 12
        },
        end: {
          line: 813,
          column: 52
        }
      },
      "300": {
        start: {
          line: 814,
          column: 12
        },
        end: {
          line: 814,
          column: 39
        }
      },
      "301": {
        start: {
          line: 816,
          column: 8
        },
        end: {
          line: 816,
          column: 76
        }
      },
      "302": {
        start: {
          line: 822,
          column: 8
        },
        end: {
          line: 822,
          column: 68
        }
      },
      "303": {
        start: {
          line: 824,
          column: 8
        },
        end: {
          line: 827,
          column: 9
        }
      },
      "304": {
        start: {
          line: 825,
          column: 12
        },
        end: {
          line: 825,
          column: 48
        }
      },
      "305": {
        start: {
          line: 826,
          column: 12
        },
        end: {
          line: 826,
          column: 40
        }
      },
      "306": {
        start: {
          line: 828,
          column: 8
        },
        end: {
          line: 831,
          column: 9
        }
      },
      "307": {
        start: {
          line: 829,
          column: 12
        },
        end: {
          line: 829,
          column: 52
        }
      },
      "308": {
        start: {
          line: 830,
          column: 12
        },
        end: {
          line: 830,
          column: 44
        }
      },
      "309": {
        start: {
          line: 833,
          column: 8
        },
        end: {
          line: 833,
          column: 43
        }
      },
      "310": {
        start: {
          line: 835,
          column: 8
        },
        end: {
          line: 844,
          column: 11
        }
      },
      "311": {
        start: {
          line: 845,
          column: 8
        },
        end: {
          line: 845,
          column: 69
        }
      },
      "312": {
        start: {
          line: 848,
          column: 0
        },
        end: {
          line: 848,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 30
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 51
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 84
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 134
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 53
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 153
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 35
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 168
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 37
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 195
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 42
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 248
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 34
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 282
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 35
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 314
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 316,
            column: 18
          },
          end: {
            line: 316,
            column: 19
          }
        },
        loc: {
          start: {
            line: 316,
            column: 28
          },
          end: {
            line: 316,
            column: 73
          }
        },
        line: 316
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        loc: {
          start: {
            line: 327,
            column: 52
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 327
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 331,
            column: 49
          },
          end: {
            line: 331,
            column: 50
          }
        },
        loc: {
          start: {
            line: 331,
            column: 58
          },
          end: {
            line: 331,
            column: 87
          }
        },
        line: 331
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 44
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 358
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 361,
            column: 49
          },
          end: {
            line: 361,
            column: 50
          }
        },
        loc: {
          start: {
            line: 361,
            column: 58
          },
          end: {
            line: 361,
            column: 87
          }
        },
        line: 361
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 31
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 380
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 31
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 388
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 397,
            column: 24
          },
          end: {
            line: 397,
            column: 25
          }
        },
        loc: {
          start: {
            line: 397,
            column: 36
          },
          end: {
            line: 397,
            column: 67
          }
        },
        line: 397
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 398,
            column: 22
          },
          end: {
            line: 398,
            column: 23
          }
        },
        loc: {
          start: {
            line: 398,
            column: 32
          },
          end: {
            line: 398,
            column: 77
          }
        },
        line: 398
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 32
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 436
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        loc: {
          start: {
            line: 461,
            column: 38
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 461
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 54
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 482
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 509,
            column: 4
          },
          end: {
            line: 509,
            column: 5
          }
        },
        loc: {
          start: {
            line: 509,
            column: 50
          },
          end: {
            line: 568,
            column: 5
          }
        },
        line: 509
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 572,
            column: 4
          },
          end: {
            line: 572,
            column: 5
          }
        },
        loc: {
          start: {
            line: 572,
            column: 35
          },
          end: {
            line: 598,
            column: 5
          }
        },
        line: 572
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 602,
            column: 4
          },
          end: {
            line: 602,
            column: 5
          }
        },
        loc: {
          start: {
            line: 602,
            column: 30
          },
          end: {
            line: 609,
            column: 5
          }
        },
        line: 602
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 613,
            column: 4
          },
          end: {
            line: 613,
            column: 5
          }
        },
        loc: {
          start: {
            line: 613,
            column: 30
          },
          end: {
            line: 624,
            column: 5
          }
        },
        line: 613
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 614,
            column: 43
          },
          end: {
            line: 614,
            column: 44
          }
        },
        loc: {
          start: {
            line: 614,
            column: 55
          },
          end: {
            line: 622,
            column: 9
          }
        },
        line: 614
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 628,
            column: 4
          },
          end: {
            line: 628,
            column: 5
          }
        },
        loc: {
          start: {
            line: 628,
            column: 26
          },
          end: {
            line: 638,
            column: 5
          }
        },
        line: 628
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 629,
            column: 47
          },
          end: {
            line: 629,
            column: 48
          }
        },
        loc: {
          start: {
            line: 629,
            column: 59
          },
          end: {
            line: 636,
            column: 9
          }
        },
        line: 629
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 642,
            column: 4
          },
          end: {
            line: 642,
            column: 5
          }
        },
        loc: {
          start: {
            line: 642,
            column: 31
          },
          end: {
            line: 656,
            column: 5
          }
        },
        line: 642
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 660,
            column: 4
          },
          end: {
            line: 660,
            column: 5
          }
        },
        loc: {
          start: {
            line: 660,
            column: 45
          },
          end: {
            line: 675,
            column: 5
          }
        },
        line: 660
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 679,
            column: 4
          },
          end: {
            line: 679,
            column: 5
          }
        },
        loc: {
          start: {
            line: 679,
            column: 62
          },
          end: {
            line: 707,
            column: 5
          }
        },
        line: 679
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 683,
            column: 38
          },
          end: {
            line: 683,
            column: 39
          }
        },
        loc: {
          start: {
            line: 683,
            column: 43
          },
          end: {
            line: 683,
            column: 68
          }
        },
        line: 683
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 711,
            column: 4
          },
          end: {
            line: 711,
            column: 5
          }
        },
        loc: {
          start: {
            line: 711,
            column: 28
          },
          end: {
            line: 716,
            column: 5
          }
        },
        line: 711
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 720,
            column: 4
          },
          end: {
            line: 720,
            column: 5
          }
        },
        loc: {
          start: {
            line: 720,
            column: 40
          },
          end: {
            line: 727,
            column: 5
          }
        },
        line: 720
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 731,
            column: 4
          },
          end: {
            line: 731,
            column: 5
          }
        },
        loc: {
          start: {
            line: 731,
            column: 37
          },
          end: {
            line: 746,
            column: 5
          }
        },
        line: 731
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 750,
            column: 4
          },
          end: {
            line: 750,
            column: 5
          }
        },
        loc: {
          start: {
            line: 750,
            column: 57
          },
          end: {
            line: 759,
            column: 5
          }
        },
        line: 750
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 763,
            column: 4
          },
          end: {
            line: 763,
            column: 5
          }
        },
        loc: {
          start: {
            line: 763,
            column: 32
          },
          end: {
            line: 771,
            column: 5
          }
        },
        line: 763
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 766,
            column: 57
          },
          end: {
            line: 766,
            column: 58
          }
        },
        loc: {
          start: {
            line: 766,
            column: 69
          },
          end: {
            line: 766,
            column: 100
          }
        },
        line: 766
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 775,
            column: 4
          },
          end: {
            line: 775,
            column: 5
          }
        },
        loc: {
          start: {
            line: 775,
            column: 25
          },
          end: {
            line: 777,
            column: 5
          }
        },
        line: 775
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 781,
            column: 4
          },
          end: {
            line: 781,
            column: 5
          }
        },
        loc: {
          start: {
            line: 781,
            column: 48
          },
          end: {
            line: 788,
            column: 5
          }
        },
        line: 781
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 792,
            column: 4
          },
          end: {
            line: 792,
            column: 5
          }
        },
        loc: {
          start: {
            line: 792,
            column: 22
          },
          end: {
            line: 794,
            column: 5
          }
        },
        line: 792
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 798,
            column: 4
          },
          end: {
            line: 798,
            column: 5
          }
        },
        loc: {
          start: {
            line: 798,
            column: 16
          },
          end: {
            line: 800,
            column: 5
          }
        },
        line: 798
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 804,
            column: 4
          },
          end: {
            line: 804,
            column: 5
          }
        },
        loc: {
          start: {
            line: 804,
            column: 25
          },
          end: {
            line: 817,
            column: 5
          }
        },
        line: 804
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 821,
            column: 4
          },
          end: {
            line: 821,
            column: 5
          }
        },
        loc: {
          start: {
            line: 821,
            column: 21
          },
          end: {
            line: 846,
            column: 5
          }
        },
        line: 821
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "1": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 134,
            column: 29
          },
          end: {
            line: 134,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 44
          },
          end: {
            line: 134,
            column: 49
          }
        }],
        line: 134
      },
      "4": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 28
          }
        }, {
          start: {
            line: 136,
            column: 32
          },
          end: {
            line: 136,
            column: 60
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 46
          },
          end: {
            line: 153,
            column: 51
          }
        }],
        line: 153
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 41
          }
        }, {
          start: {
            line: 156,
            column: 45
          },
          end: {
            line: 156,
            column: 49
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        }, {
          start: {
            line: 176,
            column: 21
          },
          end: {
            line: 180,
            column: 17
          }
        }],
        line: 173
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 39
          }
        }, {
          start: {
            line: 173,
            column: 43
          },
          end: {
            line: 173,
            column: 61
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 199,
            column: 58
          },
          end: {
            line: 199,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 69
          },
          end: {
            line: 199,
            column: 87
          }
        }, {
          start: {
            line: 199,
            column: 90
          },
          end: {
            line: 199,
            column: 92
          }
        }],
        line: 199
      },
      "11": {
        loc: {
          start: {
            line: 203,
            column: 41
          },
          end: {
            line: 205,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 18
          },
          end: {
            line: 204,
            column: 28
          }
        }, {
          start: {
            line: 205,
            column: 18
          },
          end: {
            line: 205,
            column: 57
          }
        }],
        line: 203
      },
      "12": {
        loc: {
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 224,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 224,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "13": {
        loc: {
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 33
          }
        }, {
          start: {
            line: 209,
            column: 37
          },
          end: {
            line: 209,
            column: 52
          }
        }],
        line: 209
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 20
          },
          end: {
            line: 223,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 20
          },
          end: {
            line: 223,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 220,
            column: 24
          },
          end: {
            line: 222,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 24
          },
          end: {
            line: 222,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "16": {
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: 232,
            column: 17
          },
          end: {
            line: 234,
            column: 13
          }
        }],
        line: 229
      },
      "17": {
        loc: {
          start: {
            line: 250,
            column: 63
          },
          end: {
            line: 250,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 74
          },
          end: {
            line: 250,
            column: 92
          }
        }, {
          start: {
            line: 250,
            column: 95
          },
          end: {
            line: 250,
            column: 97
          }
        }],
        line: 250
      },
      "18": {
        loc: {
          start: {
            line: 252,
            column: 42
          },
          end: {
            line: 254,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 18
          },
          end: {
            line: 253,
            column: 28
          }
        }, {
          start: {
            line: 254,
            column: 18
          },
          end: {
            line: 254,
            column: 57
          }
        }],
        line: 252
      },
      "19": {
        loc: {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 260,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 260,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "20": {
        loc: {
          start: {
            line: 314,
            column: 22
          },
          end: {
            line: 314,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 314,
            column: 30
          },
          end: {
            line: 314,
            column: 33
          }
        }],
        line: 314
      },
      "21": {
        loc: {
          start: {
            line: 329,
            column: 27
          },
          end: {
            line: 329,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 27
          },
          end: {
            line: 329,
            column: 59
          }
        }, {
          start: {
            line: 329,
            column: 63
          },
          end: {
            line: 329,
            column: 65
          }
        }],
        line: 329
      },
      "22": {
        loc: {
          start: {
            line: 360,
            column: 27
          },
          end: {
            line: 360,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 27
          },
          end: {
            line: 360,
            column: 59
          }
        }, {
          start: {
            line: 360,
            column: 63
          },
          end: {
            line: 360,
            column: 65
          }
        }],
        line: 360
      },
      "23": {
        loc: {
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "24": {
        loc: {
          start: {
            line: 381,
            column: 15
          },
          end: {
            line: 381,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 15
          },
          end: {
            line: 381,
            column: 47
          }
        }, {
          start: {
            line: 381,
            column: 51
          },
          end: {
            line: 381,
            column: 53
          }
        }],
        line: 381
      },
      "25": {
        loc: {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "26": {
        loc: {
          start: {
            line: 399,
            column: 12
          },
          end: {
            line: 401,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 12
          },
          end: {
            line: 401,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "27": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 425,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 425,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "28": {
        loc: {
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 446,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 446,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "29": {
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 450,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 450,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "30": {
        loc: {
          start: {
            line: 486,
            column: 34
          },
          end: {
            line: 486,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 486,
            column: 52
          },
          end: {
            line: 486,
            column: 84
          }
        }, {
          start: {
            line: 486,
            column: 87
          },
          end: {
            line: 486,
            column: 88
          }
        }],
        line: 486
      },
      "31": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 494,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 494,
            column: 32
          }
        }, {
          start: {
            line: 491,
            column: 13
          },
          end: {
            line: 494,
            column: 32
          }
        }],
        line: 489
      },
      "32": {
        loc: {
          start: {
            line: 491,
            column: 13
          },
          end: {
            line: 494,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 13
          },
          end: {
            line: 494,
            column: 32
          }
        }, {
          start: {
            line: 493,
            column: 13
          },
          end: {
            line: 494,
            column: 32
          }
        }],
        line: 491
      },
      "33": {
        loc: {
          start: {
            line: 493,
            column: 13
          },
          end: {
            line: 494,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 13
          },
          end: {
            line: 494,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "34": {
        loc: {
          start: {
            line: 513,
            column: 12
          },
          end: {
            line: 515,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 12
          },
          end: {
            line: 515,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "35": {
        loc: {
          start: {
            line: 517,
            column: 33
          },
          end: {
            line: 517,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 33
          },
          end: {
            line: 517,
            column: 70
          }
        }, {
          start: {
            line: 517,
            column: 74
          },
          end: {
            line: 517,
            column: 76
          }
        }],
        line: 517
      },
      "36": {
        loc: {
          start: {
            line: 526,
            column: 20
          },
          end: {
            line: 531,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 526,
            column: 20
          },
          end: {
            line: 531,
            column: 21
          }
        }, {
          start: {
            line: 529,
            column: 25
          },
          end: {
            line: 531,
            column: 21
          }
        }],
        line: 526
      },
      "37": {
        loc: {
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 552,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 552,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "38": {
        loc: {
          start: {
            line: 548,
            column: 39
          },
          end: {
            line: 548,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 548,
            column: 61
          },
          end: {
            line: 548,
            column: 128
          }
        }, {
          start: {
            line: 548,
            column: 131
          },
          end: {
            line: 548,
            column: 132
          }
        }],
        line: 548
      },
      "39": {
        loc: {
          start: {
            line: 645,
            column: 12
          },
          end: {
            line: 646,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 645,
            column: 12
          },
          end: {
            line: 646,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 645
      },
      "40": {
        loc: {
          start: {
            line: 648,
            column: 16
          },
          end: {
            line: 649,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 648,
            column: 16
          },
          end: {
            line: 649,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 648
      },
      "41": {
        loc: {
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 653,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 653,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 651
      },
      "42": {
        loc: {
          start: {
            line: 662,
            column: 8
          },
          end: {
            line: 674,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 663,
            column: 12
          },
          end: {
            line: 664,
            column: 54
          }
        }, {
          start: {
            line: 665,
            column: 12
          },
          end: {
            line: 666,
            column: 54
          }
        }, {
          start: {
            line: 667,
            column: 12
          },
          end: {
            line: 669,
            column: 29
          }
        }, {
          start: {
            line: 670,
            column: 12
          },
          end: {
            line: 671,
            column: 29
          }
        }, {
          start: {
            line: 672,
            column: 12
          },
          end: {
            line: 673,
            column: 29
          }
        }],
        line: 662
      },
      "43": {
        loc: {
          start: {
            line: 682,
            column: 27
          },
          end: {
            line: 682,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 682,
            column: 27
          },
          end: {
            line: 682,
            column: 59
          }
        }, {
          start: {
            line: 682,
            column: 63
          },
          end: {
            line: 682,
            column: 65
          }
        }],
        line: 682
      },
      "44": {
        loc: {
          start: {
            line: 684,
            column: 12
          },
          end: {
            line: 687,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 684,
            column: 12
          },
          end: {
            line: 687,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 684
      },
      "45": {
        loc: {
          start: {
            line: 712,
            column: 8
          },
          end: {
            line: 713,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 712,
            column: 8
          },
          end: {
            line: 713,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 712
      },
      "46": {
        loc: {
          start: {
            line: 721,
            column: 8
          },
          end: {
            line: 722,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 721,
            column: 8
          },
          end: {
            line: 722,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 721
      },
      "47": {
        loc: {
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 734,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 734,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 733
      },
      "48": {
        loc: {
          start: {
            line: 733,
            column: 16
          },
          end: {
            line: 733,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 733,
            column: 16
          },
          end: {
            line: 733,
            column: 35
          }
        }, {
          start: {
            line: 733,
            column: 39
          },
          end: {
            line: 733,
            column: 57
          }
        }],
        line: 733
      },
      "49": {
        loc: {
          start: {
            line: 740,
            column: 30
          },
          end: {
            line: 740,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 740,
            column: 30
          },
          end: {
            line: 740,
            column: 45
          }
        }, {
          start: {
            line: 740,
            column: 49
          },
          end: {
            line: 740,
            column: 52
          }
        }],
        line: 740
      },
      "50": {
        loc: {
          start: {
            line: 758,
            column: 37
          },
          end: {
            line: 758,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 758,
            column: 55
          },
          end: {
            line: 758,
            column: 111
          }
        }, {
          start: {
            line: 758,
            column: 114
          },
          end: {
            line: 758,
            column: 117
          }
        }],
        line: 758
      },
      "51": {
        loc: {
          start: {
            line: 768,
            column: 8
          },
          end: {
            line: 770,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 768,
            column: 8
          },
          end: {
            line: 770,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 768
      },
      "52": {
        loc: {
          start: {
            line: 807,
            column: 8
          },
          end: {
            line: 810,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 807,
            column: 8
          },
          end: {
            line: 810,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 807
      },
      "53": {
        loc: {
          start: {
            line: 807,
            column: 12
          },
          end: {
            line: 807,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 807,
            column: 12
          },
          end: {
            line: 807,
            column: 37
          }
        }, {
          start: {
            line: 807,
            column: 41
          },
          end: {
            line: 807,
            column: 61
          }
        }],
        line: 807
      },
      "54": {
        loc: {
          start: {
            line: 812,
            column: 8
          },
          end: {
            line: 815,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 812,
            column: 8
          },
          end: {
            line: 815,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 812
      },
      "55": {
        loc: {
          start: {
            line: 812,
            column: 12
          },
          end: {
            line: 812,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 812,
            column: 12
          },
          end: {
            line: 812,
            column: 41
          }
        }, {
          start: {
            line: 812,
            column: 45
          },
          end: {
            line: 812,
            column: 69
          }
        }],
        line: 812
      },
      "56": {
        loc: {
          start: {
            line: 824,
            column: 8
          },
          end: {
            line: 827,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 824,
            column: 8
          },
          end: {
            line: 827,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 824
      },
      "57": {
        loc: {
          start: {
            line: 828,
            column: 8
          },
          end: {
            line: 831,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 828,
            column: 8
          },
          end: {
            line: 831,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 828
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0, 0, 0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\account\\balance-manager.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\account\\balance-manager.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * ACCOUNT AND BALANCE MANAGEMENT SYSTEM\r\n * =============================================================================\r\n * \r\n * This module implements comprehensive account and balance management for\r\n * Gate.io cryptocurrency trading with real-time monitoring, validation,\r\n * discrepancy detection, and comprehensive audit logging.\r\n * \r\n * SECURITY FEATURES:\r\n * - Real-time balance monitoring and validation\r\n * - Automatic discrepancy detection and alerting\r\n * - Transaction history tracking and reconciliation\r\n * - Balance threshold alerts and notifications\r\n * - Comprehensive audit logging for all balance operations\r\n * - Emergency balance protection mechanisms\r\n * \r\n * CRITICAL FINANCIAL NOTICE:\r\n * This system handles real financial assets and account balances.\r\n * All balance operations must be validated and logged for audit compliance.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { AuditService } from '@/security/audit-service';\r\nimport { GateIOClient } from '../api/gate-io-client';\r\nimport { AccountBalance, SpotAccount, TradeHistory } from '../api/types';\r\n\r\n/**\r\n * Balance snapshot for historical tracking\r\n */\r\ninterface BalanceSnapshot {\r\n  timestamp: Date;\r\n  balances: Map<string, AccountBalance>;\r\n  totalValueUSD: number;\r\n  snapshotId: string;\r\n}\r\n\r\n/**\r\n * Balance discrepancy detection result\r\n */\r\ninterface DiscrepancyResult {\r\n  hasDiscrepancy: boolean;\r\n  currency: string;\r\n  expectedBalance: number;\r\n  actualBalance: number;\r\n  difference: number;\r\n  differencePercent: number;\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Balance alert configuration\r\n */\r\ninterface BalanceAlert {\r\n  currency: string;\r\n  alertType: 'LOW_BALANCE' | 'HIGH_BALANCE' | 'RAPID_CHANGE' | 'DISCREPANCY';\r\n  threshold: number;\r\n  enabled: boolean;\r\n  lastTriggered: Date | null;\r\n  triggerCount: number;\r\n}\r\n\r\n/**\r\n * Transaction reconciliation result\r\n */\r\ninterface ReconciliationResult {\r\n  isReconciled: boolean;\r\n  currency: string;\r\n  expectedBalance: number;\r\n  actualBalance: number;\r\n  reconciledTransactions: number;\r\n  unreconciledTransactions: TradeHistory[];\r\n  discrepancies: DiscrepancyResult[];\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Balance management statistics\r\n */\r\ninterface BalanceStats {\r\n  totalBalanceChecks: number;\r\n  discrepanciesDetected: number;\r\n  alertsTriggered: number;\r\n  reconciliationsPerformed: number;\r\n  lastBalanceUpdate: Date | null;\r\n  averageBalanceCheckTime: number;\r\n  balanceAccuracy: number; // Percentage\r\n}\r\n\r\n/**\r\n * Balance management configuration\r\n */\r\ninterface BalanceConfig {\r\n  enableRealTimeMonitoring: boolean;\r\n  monitoringInterval: number; // milliseconds\r\n  discrepancyThreshold: number; // percentage\r\n  enableAlerts: boolean;\r\n  enableReconciliation: boolean;\r\n  reconciliationInterval: number; // milliseconds\r\n  snapshotRetentionDays: number;\r\n  emergencyStopThreshold: number; // percentage loss\r\n}\r\n\r\n/**\r\n * Account and Balance Management System\r\n * Handles comprehensive balance monitoring, validation, and reconciliation\r\n */\r\nexport class BalanceManager extends EventEmitter {\r\n  private gateIOClient: GateIOClient;\r\n  private auditService: AuditService;\r\n  private currentBalances: Map<string, AccountBalance> = new Map();\r\n  private balanceHistory: BalanceSnapshot[] = [];\r\n  private balanceAlerts: Map<string, BalanceAlert[]> = new Map();\r\n  private stats: BalanceStats;\r\n  private config: BalanceConfig;\r\n  \r\n  // Monitoring intervals\r\n  private monitoringTimer: NodeJS.Timeout | null = null;\r\n  private reconciliationTimer: NodeJS.Timeout | null = null;\r\n  \r\n  // Transaction tracking\r\n  private transactionHistory: Map<string, TradeHistory[]> = new Map();\r\n  private lastReconciliation: Date | null = null;\r\n\r\n  constructor(gateIOClient: GateIOClient) {\r\n    super();\r\n    \r\n    this.gateIOClient = gateIOClient;\r\n    this.auditService = new AuditService();\r\n    \r\n    // Initialize statistics\r\n    this.stats = {\r\n      totalBalanceChecks: 0,\r\n      discrepanciesDetected: 0,\r\n      alertsTriggered: 0,\r\n      reconciliationsPerformed: 0,\r\n      lastBalanceUpdate: null,\r\n      averageBalanceCheckTime: 0,\r\n      balanceAccuracy: 100,\r\n    };\r\n    \r\n    // Default configuration\r\n    this.config = {\r\n      enableRealTimeMonitoring: true,\r\n      monitoringInterval: 30000, // 30 seconds\r\n      discrepancyThreshold: 0.01, // 1%\r\n      enableAlerts: true,\r\n      enableReconciliation: true,\r\n      reconciliationInterval: 300000, // 5 minutes\r\n      snapshotRetentionDays: 30,\r\n      emergencyStopThreshold: 10, // 10% loss\r\n    };\r\n    \r\n    logger.info('\uD83D\uDCB0 Balance Manager initialized with comprehensive monitoring');\r\n  }\r\n\r\n  /**\r\n   * Initialize balance manager with configuration\r\n   * \r\n   * @param config - Balance management configuration\r\n   * @returns Promise<boolean> - Success status\r\n   */\r\n  public async initialize(config?: Partial<BalanceConfig>): Promise<boolean> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Initializing Balance Manager...');\r\n      \r\n      // Update configuration\r\n      if (config) {\r\n        this.config = { ...this.config, ...config };\r\n      }\r\n      \r\n      // Load initial balances\r\n      await this.loadCurrentBalances();\r\n      \r\n      // Initialize balance alerts\r\n      this.initializeBalanceAlerts();\r\n      \r\n      // Load transaction history\r\n      await this.loadTransactionHistory();\r\n      \r\n      // Start monitoring if enabled\r\n      if (this.config.enableRealTimeMonitoring) {\r\n        this.startRealTimeMonitoring();\r\n      }\r\n      \r\n      // Start reconciliation if enabled\r\n      if (this.config.enableReconciliation) {\r\n        this.startReconciliation();\r\n      }\r\n      \r\n      await this.auditService.logSecurityEvent({\r\n        type: 'BALANCE_MANAGER_INITIALIZED',\r\n        severity: 'INFO',\r\n        details: { \r\n          config: this.config,\r\n          initialBalanceCount: this.currentBalances.size \r\n        },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.info('\u2705 Balance Manager initialized successfully');\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize Balance Manager:', error);\r\n      await this.auditService.logSecurityEvent({\r\n        type: 'BALANCE_MANAGER_INIT_FAILED',\r\n        severity: 'ERROR',\r\n        details: { error: error.message },\r\n        timestamp: new Date(),\r\n      });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current account balances with real-time updates\r\n   * \r\n   * @param forceRefresh - Force refresh from exchange\r\n   * @returns Promise<Map<string, AccountBalance>> - Current balances\r\n   */\r\n  public async getCurrentBalances(forceRefresh: boolean = false): Promise<Map<string, AccountBalance>> {\r\n    try {\r\n      if (forceRefresh || this.shouldRefreshBalances()) {\r\n        await this.loadCurrentBalances();\r\n      }\r\n      \r\n      return new Map(this.currentBalances);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to get current balances:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get balance for specific currency\r\n   * \r\n   * @param currency - Currency symbol\r\n   * @param forceRefresh - Force refresh from exchange\r\n   * @returns Promise<AccountBalance | null> - Balance or null if not found\r\n   */\r\n  public async getBalance(currency: string, forceRefresh: boolean = false): Promise<AccountBalance | null> {\r\n    try {\r\n      const balances = await this.getCurrentBalances(forceRefresh);\r\n      return balances.get(currency) || null;\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to get balance for ${currency}:`, error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get total portfolio value in USD\r\n   * \r\n   * @returns Promise<number> - Total portfolio value\r\n   */\r\n  public async getTotalPortfolioValue(): Promise<number> {\r\n    try {\r\n      const balances = await this.getCurrentBalances();\r\n      let totalValue = 0;\r\n      \r\n      for (const [currency, balance] of balances) {\r\n        if (currency === 'USDT' || currency === 'USD') {\r\n          totalValue += parseFloat(balance.total);\r\n        } else {\r\n          // Get current price and calculate value\r\n          const price = await this.getCurrencyPrice(currency);\r\n          totalValue += parseFloat(balance.total) * price;\r\n        }\r\n      }\r\n      \r\n      return totalValue;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to calculate total portfolio value:', error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate balance consistency and detect discrepancies\r\n   * \r\n   * @param currency - Currency to validate (optional, validates all if not specified)\r\n   * @returns Promise<DiscrepancyResult[]> - Discrepancy results\r\n   */\r\n  public async validateBalances(currency?: string): Promise<DiscrepancyResult[]> {\r\n    const startTime = Date.now();\r\n    const discrepancies: DiscrepancyResult[] = [];\r\n    \r\n    try {\r\n      logger.info(`\uD83D\uDD0D Validating balances${currency ? ` for ${currency}` : ''}...`);\r\n      \r\n      // Get current balances from exchange\r\n      const exchangeBalances = await this.fetchBalancesFromExchange();\r\n      \r\n      // Get currencies to validate\r\n      const currenciesToValidate = currency \r\n        ? [currency] \r\n        : Array.from(this.currentBalances.keys());\r\n      \r\n      for (const curr of currenciesToValidate) {\r\n        const cachedBalance = this.currentBalances.get(curr);\r\n        const exchangeBalance = exchangeBalances.get(curr);\r\n        \r\n        if (cachedBalance && exchangeBalance) {\r\n          const discrepancy = this.detectDiscrepancy(cachedBalance, exchangeBalance);\r\n          if (discrepancy.hasDiscrepancy) {\r\n            discrepancies.push(discrepancy);\r\n            this.stats.discrepanciesDetected++;\r\n            \r\n            // Log discrepancy\r\n            await this.logBalanceEvent('BALANCE_DISCREPANCY_DETECTED', {\r\n              currency: curr,\r\n              discrepancy,\r\n            });\r\n            \r\n            // Trigger alert if enabled\r\n            if (this.config.enableAlerts) {\r\n              await this.triggerBalanceAlert(curr, 'DISCREPANCY', discrepancy);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Update statistics\r\n      const validationTime = Date.now() - startTime;\r\n      this.updateBalanceStats(validationTime, discrepancies.length);\r\n      \r\n      if (discrepancies.length > 0) {\r\n        logger.warn(`\u26A0\uFE0F Found ${discrepancies.length} balance discrepancies`);\r\n      } else {\r\n        logger.info('\u2705 No balance discrepancies detected');\r\n      }\r\n      \r\n      return discrepancies;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to validate balances:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reconcile transactions and balances\r\n   * \r\n   * @param currency - Currency to reconcile (optional, reconciles all if not specified)\r\n   * @returns Promise<ReconciliationResult[]> - Reconciliation results\r\n   */\r\n  public async reconcileTransactions(currency?: string): Promise<ReconciliationResult[]> {\r\n    try {\r\n      logger.info(`\uD83D\uDD04 Reconciling transactions${currency ? ` for ${currency}` : ''}...`);\r\n      \r\n      const results: ReconciliationResult[] = [];\r\n      const currenciesToReconcile = currency \r\n        ? [currency] \r\n        : Array.from(this.currentBalances.keys());\r\n      \r\n      for (const curr of currenciesToReconcile) {\r\n        const result = await this.reconcileCurrencyTransactions(curr);\r\n        results.push(result);\r\n        \r\n        if (!result.isReconciled) {\r\n          logger.warn(`\u26A0\uFE0F Reconciliation failed for ${curr}: ${result.unreconciledTransactions.length} unreconciled transactions`);\r\n        }\r\n      }\r\n      \r\n      this.stats.reconciliationsPerformed++;\r\n      this.lastReconciliation = new Date();\r\n      \r\n      // Log reconciliation results\r\n      await this.logBalanceEvent('TRANSACTION_RECONCILIATION_COMPLETED', {\r\n        results,\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.info(`\u2705 Transaction reconciliation completed for ${results.length} currencies`);\r\n      return results;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to reconcile transactions:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create balance snapshot for historical tracking\r\n   * \r\n   * @returns Promise<BalanceSnapshot> - Balance snapshot\r\n   */\r\n  public async createBalanceSnapshot(): Promise<BalanceSnapshot> {\r\n    try {\r\n      const snapshot: BalanceSnapshot = {\r\n        timestamp: new Date(),\r\n        balances: new Map(this.currentBalances),\r\n        totalValueUSD: await this.getTotalPortfolioValue(),\r\n        snapshotId: this.generateSnapshotId(),\r\n      };\r\n      \r\n      // Store snapshot\r\n      this.balanceHistory.push(snapshot);\r\n      \r\n      // Clean up old snapshots\r\n      await this.cleanupOldSnapshots();\r\n      \r\n      // Log snapshot creation\r\n      await this.logBalanceEvent('BALANCE_SNAPSHOT_CREATED', {\r\n        snapshotId: snapshot.snapshotId,\r\n        totalValueUSD: snapshot.totalValueUSD,\r\n        balanceCount: snapshot.balances.size,\r\n      });\r\n      \r\n      logger.info(`\uD83D\uDCF8 Balance snapshot created: ${snapshot.snapshotId}`);\r\n      return snapshot;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to create balance snapshot:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get balance history snapshots\r\n   * \r\n   * @param limit - Maximum number of snapshots to return\r\n   * @returns BalanceSnapshot[] - Historical snapshots\r\n   */\r\n  public getBalanceHistory(limit: number = 100): BalanceSnapshot[] {\r\n    return this.balanceHistory\r\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\r\n      .slice(0, limit);\r\n  }\r\n\r\n  /**\r\n   * Set balance alert for currency\r\n   * \r\n   * @param currency - Currency symbol\r\n   * @param alertType - Type of alert\r\n   * @param threshold - Alert threshold\r\n   * @returns boolean - Success status\r\n   */\r\n  public setBalanceAlert(\r\n    currency: string, \r\n    alertType: BalanceAlert['alertType'], \r\n    threshold: number\r\n  ): boolean {\r\n    try {\r\n      const alerts = this.balanceAlerts.get(currency) || [];\r\n      \r\n      // Remove existing alert of same type\r\n      const filteredAlerts = alerts.filter(alert => alert.alertType !== alertType);\r\n      \r\n      // Add new alert\r\n      const newAlert: BalanceAlert = {\r\n        currency,\r\n        alertType,\r\n        threshold,\r\n        enabled: true,\r\n        lastTriggered: null,\r\n        triggerCount: 0,\r\n      };\r\n      \r\n      filteredAlerts.push(newAlert);\r\n      this.balanceAlerts.set(currency, filteredAlerts);\r\n      \r\n      logger.info(`\uD83D\uDD14 Balance alert set: ${currency} ${alertType} at ${threshold}`);\r\n      return true;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to set balance alert:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove balance alert\r\n   * \r\n   * @param currency - Currency symbol\r\n   * @param alertType - Type of alert to remove\r\n   * @returns boolean - Success status\r\n   */\r\n  public removeBalanceAlert(currency: string, alertType: BalanceAlert['alertType']): boolean {\r\n    try {\r\n      const alerts = this.balanceAlerts.get(currency) || [];\r\n      const filteredAlerts = alerts.filter(alert => alert.alertType !== alertType);\r\n      \r\n      if (filteredAlerts.length < alerts.length) {\r\n        this.balanceAlerts.set(currency, filteredAlerts);\r\n        logger.info(`\uD83D\uDD15 Balance alert removed: ${currency} ${alertType}`);\r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to remove balance alert:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get balance alerts for currency\r\n   * \r\n   * @param currency - Currency symbol\r\n   * @returns BalanceAlert[] - Active alerts\r\n   */\r\n  public getBalanceAlerts(currency: string): BalanceAlert[] {\r\n    return this.balanceAlerts.get(currency) || [];\r\n  }\r\n\r\n  /**\r\n   * Emergency balance protection - stop trading if significant loss detected\r\n   * \r\n   * @returns Promise<boolean> - True if emergency stop triggered\r\n   */\r\n  public async checkEmergencyStop(): Promise<boolean> {\r\n    try {\r\n      const currentValue = await this.getTotalPortfolioValue();\r\n      \r\n      if (this.balanceHistory.length === 0) {\r\n        return false; // No historical data to compare\r\n      }\r\n      \r\n      // Get the most recent snapshot from 24 hours ago\r\n      const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\r\n      const historicalSnapshot = this.balanceHistory\r\n        .filter(snapshot => snapshot.timestamp <= oneDayAgo)\r\n        .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())[0];\r\n      \r\n      if (!historicalSnapshot) {\r\n        return false; // No historical data old enough\r\n      }\r\n      \r\n      const historicalValue = historicalSnapshot.totalValueUSD;\r\n      const lossPercent = ((historicalValue - currentValue) / historicalValue) * 100;\r\n      \r\n      if (lossPercent >= this.config.emergencyStopThreshold) {\r\n        logger.error(`\uD83D\uDEA8 EMERGENCY STOP TRIGGERED: ${lossPercent.toFixed(2)}% portfolio loss detected`);\r\n        \r\n        await this.auditService.logSecurityEvent({\r\n          type: 'EMERGENCY_BALANCE_STOP',\r\n          severity: 'CRITICAL',\r\n          details: {\r\n            currentValue,\r\n            historicalValue,\r\n            lossPercent,\r\n            threshold: this.config.emergencyStopThreshold,\r\n          },\r\n          timestamp: new Date(),\r\n        });\r\n        \r\n        // Emit emergency stop event\r\n        this.emit('emergencyStop', {\r\n          reason: 'SIGNIFICANT_BALANCE_LOSS',\r\n          lossPercent,\r\n          currentValue,\r\n          historicalValue,\r\n        });\r\n        \r\n        return true;\r\n      }\r\n      \r\n      return false;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to check emergency stop:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load current balances from exchange\r\n   */\r\n  private async loadCurrentBalances(): Promise<void> {\r\n    try {\r\n      const balances = await this.fetchBalancesFromExchange();\r\n      \r\n      // Update current balances\r\n      this.currentBalances = balances;\r\n      this.stats.lastBalanceUpdate = new Date();\r\n      this.stats.totalBalanceChecks++;\r\n      \r\n      // Create snapshot if significant change detected\r\n      if (await this.hasSignificantBalanceChange()) {\r\n        await this.createBalanceSnapshot();\r\n      }\r\n      \r\n      // Check for alerts\r\n      if (this.config.enableAlerts) {\r\n        await this.checkBalanceAlerts();\r\n      }\r\n      \r\n      logger.debug(`\uD83D\uDCB0 Loaded ${balances.size} currency balances`);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to load current balances:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch balances from Gate.io exchange\r\n   */\r\n  private async fetchBalancesFromExchange(): Promise<Map<string, AccountBalance>> {\r\n    const spotAccounts = await this.gateIOClient.makeRequest<SpotAccount[]>({\r\n      method: 'GET',\r\n      url: '/spot/accounts',\r\n    });\r\n    \r\n    const balanceMap = new Map<string, AccountBalance>();\r\n    \r\n    for (const account of spotAccounts) {\r\n      const balance: AccountBalance = {\r\n        currency: account.currency,\r\n        available: account.available,\r\n        locked: account.locked,\r\n        total: (parseFloat(account.available) + parseFloat(account.locked)).toString(),\r\n        update_time: Date.now(),\r\n      };\r\n      \r\n      balanceMap.set(account.currency, balance);\r\n    }\r\n    \r\n    return balanceMap;\r\n  }\r\n\r\n  /**\r\n   * Detect discrepancy between cached and exchange balances\r\n   */\r\n  private detectDiscrepancy(\r\n    cachedBalance: AccountBalance, \r\n    exchangeBalance: AccountBalance\r\n  ): DiscrepancyResult {\r\n    const cachedTotal = parseFloat(cachedBalance.total);\r\n    const exchangeTotal = parseFloat(exchangeBalance.total);\r\n    const difference = Math.abs(cachedTotal - exchangeTotal);\r\n    const differencePercent = cachedTotal > 0 ? (difference / cachedTotal) * 100 : 0;\r\n    \r\n    const hasDiscrepancy = differencePercent > this.config.discrepancyThreshold;\r\n    \r\n    let severity: DiscrepancyResult['severity'] = 'LOW';\r\n    if (differencePercent > 10) severity = 'CRITICAL';\r\n    else if (differencePercent > 5) severity = 'HIGH';\r\n    else if (differencePercent > 1) severity = 'MEDIUM';\r\n    \r\n    return {\r\n      hasDiscrepancy,\r\n      currency: cachedBalance.currency,\r\n      expectedBalance: cachedTotal,\r\n      actualBalance: exchangeTotal,\r\n      difference,\r\n      differencePercent,\r\n      severity,\r\n      timestamp: new Date(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reconcile transactions for specific currency\r\n   */\r\n  private async reconcileCurrencyTransactions(currency: string): Promise<ReconciliationResult> {\r\n    try {\r\n      // Get current balance\r\n      const currentBalance = this.currentBalances.get(currency);\r\n      if (!currentBalance) {\r\n        throw new Error(`Balance not found for currency: ${currency}`);\r\n      }\r\n      \r\n      // Get transaction history\r\n      const transactions = this.transactionHistory.get(currency) || [];\r\n      \r\n      // Calculate expected balance from transactions\r\n      let expectedBalance = 0;\r\n      const reconciledTransactions: TradeHistory[] = [];\r\n      const unreconciledTransactions: TradeHistory[] = [];\r\n      \r\n      for (const transaction of transactions) {\r\n        try {\r\n          const amount = parseFloat(transaction.amount);\r\n          const fee = parseFloat(transaction.fee);\r\n          \r\n          if (transaction.side === 'buy') {\r\n            expectedBalance += amount - fee;\r\n          } else {\r\n            expectedBalance -= amount + fee;\r\n          }\r\n          \r\n          reconciledTransactions.push(transaction);\r\n        } catch (error) {\r\n          unreconciledTransactions.push(transaction);\r\n        }\r\n      }\r\n      \r\n      const actualBalance = parseFloat(currentBalance.total);\r\n      const isReconciled = Math.abs(expectedBalance - actualBalance) < 0.00001; // Small tolerance for floating point\r\n      \r\n      const discrepancies: DiscrepancyResult[] = [];\r\n      if (!isReconciled) {\r\n        discrepancies.push({\r\n          hasDiscrepancy: true,\r\n          currency,\r\n          expectedBalance,\r\n          actualBalance,\r\n          difference: Math.abs(expectedBalance - actualBalance),\r\n          differencePercent: expectedBalance > 0 ? (Math.abs(expectedBalance - actualBalance) / expectedBalance) * 100 : 0,\r\n          severity: 'MEDIUM',\r\n          timestamp: new Date(),\r\n        });\r\n      }\r\n      \r\n      return {\r\n        isReconciled,\r\n        currency,\r\n        expectedBalance,\r\n        actualBalance,\r\n        reconciledTransactions: reconciledTransactions.length,\r\n        unreconciledTransactions,\r\n        discrepancies,\r\n        timestamp: new Date(),\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to reconcile transactions for ${currency}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load transaction history from exchange\r\n   */\r\n  private async loadTransactionHistory(): Promise<void> {\r\n    try {\r\n      // Load trade history for each currency\r\n      const currencies = Array.from(this.currentBalances.keys());\r\n      \r\n      for (const currency of currencies) {\r\n        try {\r\n          const trades = await this.gateIOClient.makeRequest<TradeHistory[]>({\r\n            method: 'GET',\r\n            url: '/spot/my_trades',\r\n            params: {\r\n              currency_pair: `${currency}_USDT`,\r\n              limit: 100,\r\n            },\r\n          });\r\n          \r\n          this.transactionHistory.set(currency, trades);\r\n        } catch (error) {\r\n          // Some currencies might not have trading pairs, skip silently\r\n          logger.debug(`No trade history found for ${currency}`);\r\n        }\r\n      }\r\n      \r\n      logger.info(`\uD83D\uDCCB Loaded transaction history for ${this.transactionHistory.size} currencies`);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to load transaction history:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize default balance alerts\r\n   */\r\n  private initializeBalanceAlerts(): void {\r\n    // Set default low balance alerts for major currencies\r\n    const majorCurrencies = ['BTC', 'ETH', 'USDT'];\r\n    \r\n    for (const currency of majorCurrencies) {\r\n      this.setBalanceAlert(currency, 'LOW_BALANCE', 0.001); // Very low threshold\r\n    }\r\n    \r\n    logger.info('\uD83D\uDD14 Default balance alerts initialized');\r\n  }\r\n\r\n  /**\r\n   * Start real-time balance monitoring\r\n   */\r\n  private startRealTimeMonitoring(): void {\r\n    this.monitoringTimer = setInterval(async () => {\r\n      try {\r\n        await this.loadCurrentBalances();\r\n        await this.checkEmergencyStop();\r\n      } catch (error) {\r\n        logger.error('\u274C Error in balance monitoring:', error);\r\n      }\r\n    }, this.config.monitoringInterval);\r\n    \r\n    logger.info('\uD83D\uDC41\uFE0F Started real-time balance monitoring');\r\n  }\r\n\r\n  /**\r\n   * Start transaction reconciliation\r\n   */\r\n  private startReconciliation(): void {\r\n    this.reconciliationTimer = setInterval(async () => {\r\n      try {\r\n        await this.reconcileTransactions();\r\n      } catch (error) {\r\n        logger.error('\u274C Error in transaction reconciliation:', error);\r\n      }\r\n    }, this.config.reconciliationInterval);\r\n    \r\n    logger.info('\uD83D\uDD04 Started transaction reconciliation');\r\n  }\r\n\r\n  /**\r\n   * Check balance alerts\r\n   */\r\n  private async checkBalanceAlerts(): Promise<void> {\r\n    for (const [currency, alerts] of this.balanceAlerts) {\r\n      const balance = this.currentBalances.get(currency);\r\n      if (!balance) continue;\r\n      \r\n      for (const alert of alerts) {\r\n        if (!alert.enabled) continue;\r\n        \r\n        const shouldTrigger = await this.shouldTriggerAlert(balance, alert);\r\n        if (shouldTrigger) {\r\n          await this.triggerBalanceAlert(currency, alert.alertType, alert);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if alert should be triggered\r\n   */\r\n  private async shouldTriggerAlert(balance: AccountBalance, alert: BalanceAlert): Promise<boolean> {\r\n    const totalBalance = parseFloat(balance.total);\r\n    \r\n    switch (alert.alertType) {\r\n      case 'LOW_BALANCE':\r\n        return totalBalance < alert.threshold;\r\n      case 'HIGH_BALANCE':\r\n        return totalBalance > alert.threshold;\r\n      case 'RAPID_CHANGE':\r\n        // Check for rapid balance changes (simplified)\r\n        return false; // Would need historical comparison\r\n      case 'DISCREPANCY':\r\n        return false; // Handled separately in validation\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger balance alert\r\n   */\r\n  private async triggerBalanceAlert(\r\n    currency: string, \r\n    alertType: BalanceAlert['alertType'], \r\n    alertData: any\r\n  ): Promise<void> {\r\n    try {\r\n      // Update alert statistics\r\n      const alerts = this.balanceAlerts.get(currency) || [];\r\n      const alert = alerts.find(a => a.alertType === alertType);\r\n      if (alert) {\r\n        alert.lastTriggered = new Date();\r\n        alert.triggerCount++;\r\n      }\r\n      \r\n      this.stats.alertsTriggered++;\r\n      \r\n      // Log alert\r\n      await this.logBalanceEvent('BALANCE_ALERT_TRIGGERED', {\r\n        currency,\r\n        alertType,\r\n        alertData,\r\n      });\r\n      \r\n      // Emit alert event\r\n      this.emit('balanceAlert', {\r\n        currency,\r\n        alertType,\r\n        alertData,\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      logger.warn(`\uD83D\uDD14 Balance alert triggered: ${currency} ${alertType}`);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to trigger balance alert:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if balances should be refreshed\r\n   */\r\n  private shouldRefreshBalances(): boolean {\r\n    if (!this.stats.lastBalanceUpdate) return true;\r\n    \r\n    const timeSinceUpdate = Date.now() - this.stats.lastBalanceUpdate.getTime();\r\n    return timeSinceUpdate > this.config.monitoringInterval;\r\n  }\r\n\r\n  /**\r\n   * Check if there's a significant balance change\r\n   */\r\n  private async hasSignificantBalanceChange(): Promise<boolean> {\r\n    if (this.balanceHistory.length === 0) return true;\r\n    \r\n    const lastSnapshot = this.balanceHistory[this.balanceHistory.length - 1];\r\n    const currentValue = await this.getTotalPortfolioValue();\r\n    const changePercent = Math.abs((currentValue - lastSnapshot.totalValueUSD) / lastSnapshot.totalValueUSD) * 100;\r\n    \r\n    return changePercent > 1; // 1% change threshold\r\n  }\r\n\r\n  /**\r\n   * Get currency price in USD\r\n   */\r\n  private async getCurrencyPrice(currency: string): Promise<number> {\r\n    try {\r\n      if (currency === 'USDT' || currency === 'USD') return 1;\r\n      \r\n      const ticker = await this.gateIOClient.makeRequest({\r\n        method: 'GET',\r\n        url: '/spot/tickers',\r\n        params: { currency_pair: `${currency}_USDT` },\r\n      });\r\n      \r\n      return parseFloat(ticker[0]?.last || '0');\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to get price for ${currency}:`, error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update balance statistics\r\n   */\r\n  private updateBalanceStats(validationTime: number, discrepancyCount: number): void {\r\n    // Update average validation time\r\n    const alpha = 0.1;\r\n    this.stats.averageBalanceCheckTime = \r\n      (alpha * validationTime) + ((1 - alpha) * this.stats.averageBalanceCheckTime);\r\n    \r\n    // Update balance accuracy\r\n    const totalChecks = this.stats.totalBalanceChecks;\r\n    const totalDiscrepancies = this.stats.discrepanciesDetected;\r\n    this.stats.balanceAccuracy = totalChecks > 0 ? ((totalChecks - totalDiscrepancies) / totalChecks) * 100 : 100;\r\n  }\r\n\r\n  /**\r\n   * Clean up old snapshots\r\n   */\r\n  private async cleanupOldSnapshots(): Promise<void> {\r\n    const cutoffDate = new Date(Date.now() - (this.config.snapshotRetentionDays * 24 * 60 * 60 * 1000));\r\n    \r\n    const initialCount = this.balanceHistory.length;\r\n    this.balanceHistory = this.balanceHistory.filter(\r\n      snapshot => snapshot.timestamp > cutoffDate\r\n    );\r\n    \r\n    const removedCount = initialCount - this.balanceHistory.length;\r\n    if (removedCount > 0) {\r\n      logger.info(`\uD83E\uDDF9 Cleaned up ${removedCount} old balance snapshots`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate unique snapshot ID\r\n   */\r\n  private generateSnapshotId(): string {\r\n    return `snapshot_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Log balance event for audit trail\r\n   */\r\n  private async logBalanceEvent(eventType: string, eventData: any): Promise<void> {\r\n    await this.auditService.logSecurityEvent({\r\n      type: eventType,\r\n      severity: 'INFO',\r\n      details: eventData,\r\n      timestamp: new Date(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get balance management statistics\r\n   */\r\n  public getBalanceStats(): BalanceStats {\r\n    return { ...this.stats };\r\n  }\r\n\r\n  /**\r\n   * Get balance management configuration\r\n   */\r\n  public getConfig(): BalanceConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update balance management configuration\r\n   */\r\n  public updateConfig(config: Partial<BalanceConfig>): void {\r\n    this.config = { ...this.config, ...config };\r\n    \r\n    // Restart monitoring if interval changed\r\n    if (config.monitoringInterval && this.monitoringTimer) {\r\n      clearInterval(this.monitoringTimer);\r\n      this.startRealTimeMonitoring();\r\n    }\r\n    \r\n    // Restart reconciliation if interval changed\r\n    if (config.reconciliationInterval && this.reconciliationTimer) {\r\n      clearInterval(this.reconciliationTimer);\r\n      this.startReconciliation();\r\n    }\r\n    \r\n    logger.info('\u2699\uFE0F Balance management configuration updated');\r\n  }\r\n\r\n  /**\r\n   * Graceful shutdown\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    logger.info('\uD83D\uDED1 Shutting down Balance Manager...');\r\n    \r\n    // Stop monitoring timers\r\n    if (this.monitoringTimer) {\r\n      clearInterval(this.monitoringTimer);\r\n      this.monitoringTimer = null;\r\n    }\r\n    \r\n    if (this.reconciliationTimer) {\r\n      clearInterval(this.reconciliationTimer);\r\n      this.reconciliationTimer = null;\r\n    }\r\n    \r\n    // Create final snapshot\r\n    await this.createBalanceSnapshot();\r\n    \r\n    // Log final statistics\r\n    await this.auditService.logSecurityEvent({\r\n      type: 'BALANCE_MANAGER_SHUTDOWN',\r\n      severity: 'INFO',\r\n      details: { \r\n        stats: this.stats,\r\n        balanceCount: this.currentBalances.size,\r\n        snapshotCount: this.balanceHistory.length \r\n      },\r\n      timestamp: new Date(),\r\n    });\r\n    \r\n    logger.info('\u2705 Balance Manager shutdown completed');\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  BalanceSnapshot,\r\n  DiscrepancyResult,\r\n  BalanceAlert,\r\n  ReconciliationResult,\r\n  BalanceStats,\r\n  BalanceConfig,\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1112d0cd45d900e88725571a3c5972ed0dee0f78"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27b1lx3rb0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27b1lx3rb0();
cov_27b1lx3rb0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27b1lx3rb0().s[1]++;
exports.BalanceManager = void 0;
const events_1 =
/* istanbul ignore next */
(cov_27b1lx3rb0().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_27b1lx3rb0().s[3]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_27b1lx3rb0().s[4]++, require("@/security/audit-service"));
/**
 * Account and Balance Management System
 * Handles comprehensive balance monitoring, validation, and reconciliation
 */
class BalanceManager extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  gateIOClient;
  auditService;
  currentBalances =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[5]++, new Map());
  balanceHistory =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[6]++, []);
  balanceAlerts =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[7]++, new Map());
  stats;
  config;
  // Monitoring intervals
  monitoringTimer =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[8]++, null);
  reconciliationTimer =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[9]++, null);
  // Transaction tracking
  transactionHistory =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[10]++, new Map());
  lastReconciliation =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().s[11]++, null);
  constructor(gateIOClient) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[0]++;
    cov_27b1lx3rb0().s[12]++;
    super();
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[13]++;
    this.gateIOClient = gateIOClient;
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[14]++;
    this.auditService = new audit_service_1.AuditService();
    // Initialize statistics
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[15]++;
    this.stats = {
      totalBalanceChecks: 0,
      discrepanciesDetected: 0,
      alertsTriggered: 0,
      reconciliationsPerformed: 0,
      lastBalanceUpdate: null,
      averageBalanceCheckTime: 0,
      balanceAccuracy: 100
    };
    // Default configuration
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[16]++;
    this.config = {
      enableRealTimeMonitoring: true,
      monitoringInterval: 30000,
      // 30 seconds
      discrepancyThreshold: 0.01,
      // 1%
      enableAlerts: true,
      enableReconciliation: true,
      reconciliationInterval: 300000,
      // 5 minutes
      snapshotRetentionDays: 30,
      emergencyStopThreshold: 10 // 10% loss
    };
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[17]++;
    logger_1.logger.info('💰 Balance Manager initialized with comprehensive monitoring');
  }
  /**
   * Initialize balance manager with configuration
   *
   * @param config - Balance management configuration
   * @returns Promise<boolean> - Success status
   */
  async initialize(config) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[1]++;
    cov_27b1lx3rb0().s[18]++;
    try {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[19]++;
      logger_1.logger.info('🚀 Initializing Balance Manager...');
      // Update configuration
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[20]++;
      if (config) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[0][0]++;
        cov_27b1lx3rb0().s[21]++;
        this.config = {
          ...this.config,
          ...config
        };
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[0][1]++;
      }
      // Load initial balances
      cov_27b1lx3rb0().s[22]++;
      await this.loadCurrentBalances();
      // Initialize balance alerts
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[23]++;
      this.initializeBalanceAlerts();
      // Load transaction history
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[24]++;
      await this.loadTransactionHistory();
      // Start monitoring if enabled
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[25]++;
      if (this.config.enableRealTimeMonitoring) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[1][0]++;
        cov_27b1lx3rb0().s[26]++;
        this.startRealTimeMonitoring();
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[1][1]++;
      }
      // Start reconciliation if enabled
      cov_27b1lx3rb0().s[27]++;
      if (this.config.enableReconciliation) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[2][0]++;
        cov_27b1lx3rb0().s[28]++;
        this.startReconciliation();
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[2][1]++;
      }
      cov_27b1lx3rb0().s[29]++;
      await this.auditService.logSecurityEvent({
        type: 'BALANCE_MANAGER_INITIALIZED',
        severity: 'INFO',
        details: {
          config: this.config,
          initialBalanceCount: this.currentBalances.size
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[30]++;
      logger_1.logger.info('✅ Balance Manager initialized successfully');
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[31]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[32]++;
      logger_1.logger.error('❌ Failed to initialize Balance Manager:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[33]++;
      await this.auditService.logSecurityEvent({
        type: 'BALANCE_MANAGER_INIT_FAILED',
        severity: 'ERROR',
        details: {
          error: error.message
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[34]++;
      return false;
    }
  }
  /**
   * Get current account balances with real-time updates
   *
   * @param forceRefresh - Force refresh from exchange
   * @returns Promise<Map<string, AccountBalance>> - Current balances
   */
  async getCurrentBalances(forceRefresh =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().b[3][0]++, false)) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[2]++;
    cov_27b1lx3rb0().s[35]++;
    try {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[5][0]++, forceRefresh) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[5][1]++, this.shouldRefreshBalances())) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[4][0]++;
        cov_27b1lx3rb0().s[37]++;
        await this.loadCurrentBalances();
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[4][1]++;
      }
      cov_27b1lx3rb0().s[38]++;
      return new Map(this.currentBalances);
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[39]++;
      logger_1.logger.error('❌ Failed to get current balances:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[40]++;
      throw error;
    }
  }
  /**
   * Get balance for specific currency
   *
   * @param currency - Currency symbol
   * @param forceRefresh - Force refresh from exchange
   * @returns Promise<AccountBalance | null> - Balance or null if not found
   */
  async getBalance(currency, forceRefresh =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().b[6][0]++, false)) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[3]++;
    cov_27b1lx3rb0().s[41]++;
    try {
      const balances =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[42]++, await this.getCurrentBalances(forceRefresh));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[43]++;
      return /* istanbul ignore next */(cov_27b1lx3rb0().b[7][0]++, balances.get(currency)) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[7][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[44]++;
      logger_1.logger.error(`❌ Failed to get balance for ${currency}:`, error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[45]++;
      return null;
    }
  }
  /**
   * Get total portfolio value in USD
   *
   * @returns Promise<number> - Total portfolio value
   */
  async getTotalPortfolioValue() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[4]++;
    cov_27b1lx3rb0().s[46]++;
    try {
      const balances =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[47]++, await this.getCurrentBalances());
      let totalValue =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[48]++, 0);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[49]++;
      for (const [currency, balance] of balances) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[50]++;
        if (
        /* istanbul ignore next */
        (cov_27b1lx3rb0().b[9][0]++, currency === 'USDT') ||
        /* istanbul ignore next */
        (cov_27b1lx3rb0().b[9][1]++, currency === 'USD')) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[8][0]++;
          cov_27b1lx3rb0().s[51]++;
          totalValue += parseFloat(balance.total);
        } else {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[8][1]++;
          // Get current price and calculate value
          const price =
          /* istanbul ignore next */
          (cov_27b1lx3rb0().s[52]++, await this.getCurrencyPrice(currency));
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[53]++;
          totalValue += parseFloat(balance.total) * price;
        }
      }
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[54]++;
      return totalValue;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[55]++;
      logger_1.logger.error('❌ Failed to calculate total portfolio value:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[56]++;
      return 0;
    }
  }
  /**
   * Validate balance consistency and detect discrepancies
   *
   * @param currency - Currency to validate (optional, validates all if not specified)
   * @returns Promise<DiscrepancyResult[]> - Discrepancy results
   */
  async validateBalances(currency) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[5]++;
    const startTime =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[57]++, Date.now());
    const discrepancies =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[58]++, []);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[59]++;
    try {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[60]++;
      logger_1.logger.info(`🔍 Validating balances${currency ?
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[10][0]++, ` for ${currency}`) :
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[10][1]++, '')}...`);
      // Get current balances from exchange
      const exchangeBalances =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[61]++, await this.fetchBalancesFromExchange());
      // Get currencies to validate
      const currenciesToValidate =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[62]++, currency ?
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[11][0]++, [currency]) :
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[11][1]++, Array.from(this.currentBalances.keys())));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[63]++;
      for (const curr of currenciesToValidate) {
        const cachedBalance =
        /* istanbul ignore next */
        (cov_27b1lx3rb0().s[64]++, this.currentBalances.get(curr));
        const exchangeBalance =
        /* istanbul ignore next */
        (cov_27b1lx3rb0().s[65]++, exchangeBalances.get(curr));
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[66]++;
        if (
        /* istanbul ignore next */
        (cov_27b1lx3rb0().b[13][0]++, cachedBalance) &&
        /* istanbul ignore next */
        (cov_27b1lx3rb0().b[13][1]++, exchangeBalance)) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[12][0]++;
          const discrepancy =
          /* istanbul ignore next */
          (cov_27b1lx3rb0().s[67]++, this.detectDiscrepancy(cachedBalance, exchangeBalance));
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[68]++;
          if (discrepancy.hasDiscrepancy) {
            /* istanbul ignore next */
            cov_27b1lx3rb0().b[14][0]++;
            cov_27b1lx3rb0().s[69]++;
            discrepancies.push(discrepancy);
            /* istanbul ignore next */
            cov_27b1lx3rb0().s[70]++;
            this.stats.discrepanciesDetected++;
            // Log discrepancy
            /* istanbul ignore next */
            cov_27b1lx3rb0().s[71]++;
            await this.logBalanceEvent('BALANCE_DISCREPANCY_DETECTED', {
              currency: curr,
              discrepancy
            });
            // Trigger alert if enabled
            /* istanbul ignore next */
            cov_27b1lx3rb0().s[72]++;
            if (this.config.enableAlerts) {
              /* istanbul ignore next */
              cov_27b1lx3rb0().b[15][0]++;
              cov_27b1lx3rb0().s[73]++;
              await this.triggerBalanceAlert(curr, 'DISCREPANCY', discrepancy);
            } else
            /* istanbul ignore next */
            {
              cov_27b1lx3rb0().b[15][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_27b1lx3rb0().b[14][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_27b1lx3rb0().b[12][1]++;
        }
      }
      // Update statistics
      const validationTime =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[74]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[75]++;
      this.updateBalanceStats(validationTime, discrepancies.length);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[76]++;
      if (discrepancies.length > 0) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[16][0]++;
        cov_27b1lx3rb0().s[77]++;
        logger_1.logger.warn(`⚠️ Found ${discrepancies.length} balance discrepancies`);
      } else {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[16][1]++;
        cov_27b1lx3rb0().s[78]++;
        logger_1.logger.info('✅ No balance discrepancies detected');
      }
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[79]++;
      return discrepancies;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[80]++;
      logger_1.logger.error('❌ Failed to validate balances:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[81]++;
      throw error;
    }
  }
  /**
   * Reconcile transactions and balances
   *
   * @param currency - Currency to reconcile (optional, reconciles all if not specified)
   * @returns Promise<ReconciliationResult[]> - Reconciliation results
   */
  async reconcileTransactions(currency) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[6]++;
    cov_27b1lx3rb0().s[82]++;
    try {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[83]++;
      logger_1.logger.info(`🔄 Reconciling transactions${currency ?
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[17][0]++, ` for ${currency}`) :
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[17][1]++, '')}...`);
      const results =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[84]++, []);
      const currenciesToReconcile =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[85]++, currency ?
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[18][0]++, [currency]) :
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[18][1]++, Array.from(this.currentBalances.keys())));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[86]++;
      for (const curr of currenciesToReconcile) {
        const result =
        /* istanbul ignore next */
        (cov_27b1lx3rb0().s[87]++, await this.reconcileCurrencyTransactions(curr));
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[88]++;
        results.push(result);
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[89]++;
        if (!result.isReconciled) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[19][0]++;
          cov_27b1lx3rb0().s[90]++;
          logger_1.logger.warn(`⚠️ Reconciliation failed for ${curr}: ${result.unreconciledTransactions.length} unreconciled transactions`);
        } else
        /* istanbul ignore next */
        {
          cov_27b1lx3rb0().b[19][1]++;
        }
      }
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[91]++;
      this.stats.reconciliationsPerformed++;
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[92]++;
      this.lastReconciliation = new Date();
      // Log reconciliation results
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[93]++;
      await this.logBalanceEvent('TRANSACTION_RECONCILIATION_COMPLETED', {
        results,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[94]++;
      logger_1.logger.info(`✅ Transaction reconciliation completed for ${results.length} currencies`);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[95]++;
      return results;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[96]++;
      logger_1.logger.error('❌ Failed to reconcile transactions:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[97]++;
      throw error;
    }
  }
  /**
   * Create balance snapshot for historical tracking
   *
   * @returns Promise<BalanceSnapshot> - Balance snapshot
   */
  async createBalanceSnapshot() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[7]++;
    cov_27b1lx3rb0().s[98]++;
    try {
      const snapshot =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[99]++, {
        timestamp: new Date(),
        balances: new Map(this.currentBalances),
        totalValueUSD: await this.getTotalPortfolioValue(),
        snapshotId: this.generateSnapshotId()
      });
      // Store snapshot
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[100]++;
      this.balanceHistory.push(snapshot);
      // Clean up old snapshots
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[101]++;
      await this.cleanupOldSnapshots();
      // Log snapshot creation
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[102]++;
      await this.logBalanceEvent('BALANCE_SNAPSHOT_CREATED', {
        snapshotId: snapshot.snapshotId,
        totalValueUSD: snapshot.totalValueUSD,
        balanceCount: snapshot.balances.size
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[103]++;
      logger_1.logger.info(`📸 Balance snapshot created: ${snapshot.snapshotId}`);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[104]++;
      return snapshot;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[105]++;
      logger_1.logger.error('❌ Failed to create balance snapshot:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[106]++;
      throw error;
    }
  }
  /**
   * Get balance history snapshots
   *
   * @param limit - Maximum number of snapshots to return
   * @returns BalanceSnapshot[] - Historical snapshots
   */
  getBalanceHistory(limit =
  /* istanbul ignore next */
  (cov_27b1lx3rb0().b[20][0]++, 100)) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[8]++;
    cov_27b1lx3rb0().s[107]++;
    return this.balanceHistory.sort((a, b) => {
      /* istanbul ignore next */
      cov_27b1lx3rb0().f[9]++;
      cov_27b1lx3rb0().s[108]++;
      return b.timestamp.getTime() - a.timestamp.getTime();
    }).slice(0, limit);
  }
  /**
   * Set balance alert for currency
   *
   * @param currency - Currency symbol
   * @param alertType - Type of alert
   * @param threshold - Alert threshold
   * @returns boolean - Success status
   */
  setBalanceAlert(currency, alertType, threshold) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[10]++;
    cov_27b1lx3rb0().s[109]++;
    try {
      const alerts =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[110]++,
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[21][0]++, this.balanceAlerts.get(currency)) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[21][1]++, []));
      // Remove existing alert of same type
      const filteredAlerts =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[111]++, alerts.filter(alert => {
        /* istanbul ignore next */
        cov_27b1lx3rb0().f[11]++;
        cov_27b1lx3rb0().s[112]++;
        return alert.alertType !== alertType;
      }));
      // Add new alert
      const newAlert =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[113]++, {
        currency,
        alertType,
        threshold,
        enabled: true,
        lastTriggered: null,
        triggerCount: 0
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[114]++;
      filteredAlerts.push(newAlert);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[115]++;
      this.balanceAlerts.set(currency, filteredAlerts);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[116]++;
      logger_1.logger.info(`🔔 Balance alert set: ${currency} ${alertType} at ${threshold}`);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[117]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[118]++;
      logger_1.logger.error('❌ Failed to set balance alert:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[119]++;
      return false;
    }
  }
  /**
   * Remove balance alert
   *
   * @param currency - Currency symbol
   * @param alertType - Type of alert to remove
   * @returns boolean - Success status
   */
  removeBalanceAlert(currency, alertType) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[12]++;
    cov_27b1lx3rb0().s[120]++;
    try {
      const alerts =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[121]++,
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[22][0]++, this.balanceAlerts.get(currency)) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[22][1]++, []));
      const filteredAlerts =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[122]++, alerts.filter(alert => {
        /* istanbul ignore next */
        cov_27b1lx3rb0().f[13]++;
        cov_27b1lx3rb0().s[123]++;
        return alert.alertType !== alertType;
      }));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[124]++;
      if (filteredAlerts.length < alerts.length) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[23][0]++;
        cov_27b1lx3rb0().s[125]++;
        this.balanceAlerts.set(currency, filteredAlerts);
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[126]++;
        logger_1.logger.info(`🔕 Balance alert removed: ${currency} ${alertType}`);
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[127]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[23][1]++;
      }
      cov_27b1lx3rb0().s[128]++;
      return false;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[129]++;
      logger_1.logger.error('❌ Failed to remove balance alert:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[130]++;
      return false;
    }
  }
  /**
   * Get balance alerts for currency
   *
   * @param currency - Currency symbol
   * @returns BalanceAlert[] - Active alerts
   */
  getBalanceAlerts(currency) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[14]++;
    cov_27b1lx3rb0().s[131]++;
    return /* istanbul ignore next */(cov_27b1lx3rb0().b[24][0]++, this.balanceAlerts.get(currency)) ||
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[24][1]++, []);
  }
  /**
   * Emergency balance protection - stop trading if significant loss detected
   *
   * @returns Promise<boolean> - True if emergency stop triggered
   */
  async checkEmergencyStop() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[15]++;
    cov_27b1lx3rb0().s[132]++;
    try {
      const currentValue =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[133]++, await this.getTotalPortfolioValue());
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[134]++;
      if (this.balanceHistory.length === 0) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[25][0]++;
        cov_27b1lx3rb0().s[135]++;
        return false; // No historical data to compare
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[25][1]++;
      }
      // Get the most recent snapshot from 24 hours ago
      const oneDayAgo =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[136]++, new Date(Date.now() - 24 * 60 * 60 * 1000));
      const historicalSnapshot =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[137]++, this.balanceHistory.filter(snapshot => {
        /* istanbul ignore next */
        cov_27b1lx3rb0().f[16]++;
        cov_27b1lx3rb0().s[138]++;
        return snapshot.timestamp <= oneDayAgo;
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_27b1lx3rb0().f[17]++;
        cov_27b1lx3rb0().s[139]++;
        return b.timestamp.getTime() - a.timestamp.getTime();
      })[0]);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[140]++;
      if (!historicalSnapshot) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[26][0]++;
        cov_27b1lx3rb0().s[141]++;
        return false; // No historical data old enough
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[26][1]++;
      }
      const historicalValue =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[142]++, historicalSnapshot.totalValueUSD);
      const lossPercent =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[143]++, (historicalValue - currentValue) / historicalValue * 100);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[144]++;
      if (lossPercent >= this.config.emergencyStopThreshold) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[27][0]++;
        cov_27b1lx3rb0().s[145]++;
        logger_1.logger.error(`🚨 EMERGENCY STOP TRIGGERED: ${lossPercent.toFixed(2)}% portfolio loss detected`);
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[146]++;
        await this.auditService.logSecurityEvent({
          type: 'EMERGENCY_BALANCE_STOP',
          severity: 'CRITICAL',
          details: {
            currentValue,
            historicalValue,
            lossPercent,
            threshold: this.config.emergencyStopThreshold
          },
          timestamp: new Date()
        });
        // Emit emergency stop event
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[147]++;
        this.emit('emergencyStop', {
          reason: 'SIGNIFICANT_BALANCE_LOSS',
          lossPercent,
          currentValue,
          historicalValue
        });
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[148]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[27][1]++;
      }
      cov_27b1lx3rb0().s[149]++;
      return false;
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[150]++;
      logger_1.logger.error('❌ Failed to check emergency stop:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[151]++;
      return false;
    }
  }
  /**
   * Load current balances from exchange
   */
  async loadCurrentBalances() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[18]++;
    cov_27b1lx3rb0().s[152]++;
    try {
      const balances =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[153]++, await this.fetchBalancesFromExchange());
      // Update current balances
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[154]++;
      this.currentBalances = balances;
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[155]++;
      this.stats.lastBalanceUpdate = new Date();
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[156]++;
      this.stats.totalBalanceChecks++;
      // Create snapshot if significant change detected
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[157]++;
      if (await this.hasSignificantBalanceChange()) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[28][0]++;
        cov_27b1lx3rb0().s[158]++;
        await this.createBalanceSnapshot();
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[28][1]++;
      }
      // Check for alerts
      cov_27b1lx3rb0().s[159]++;
      if (this.config.enableAlerts) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[29][0]++;
        cov_27b1lx3rb0().s[160]++;
        await this.checkBalanceAlerts();
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[29][1]++;
      }
      cov_27b1lx3rb0().s[161]++;
      logger_1.logger.debug(`💰 Loaded ${balances.size} currency balances`);
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[162]++;
      logger_1.logger.error('❌ Failed to load current balances:', error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[163]++;
      throw error;
    }
  }
  /**
   * Fetch balances from Gate.io exchange
   */
  async fetchBalancesFromExchange() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[19]++;
    const spotAccounts =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[164]++, await this.gateIOClient.makeRequest({
      method: 'GET',
      url: '/spot/accounts'
    }));
    const balanceMap =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[165]++, new Map());
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[166]++;
    for (const account of spotAccounts) {
      const balance =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[167]++, {
        currency: account.currency,
        available: account.available,
        locked: account.locked,
        total: (parseFloat(account.available) + parseFloat(account.locked)).toString(),
        update_time: Date.now()
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[168]++;
      balanceMap.set(account.currency, balance);
    }
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[169]++;
    return balanceMap;
  }
  /**
   * Detect discrepancy between cached and exchange balances
   */
  detectDiscrepancy(cachedBalance, exchangeBalance) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[20]++;
    const cachedTotal =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[170]++, parseFloat(cachedBalance.total));
    const exchangeTotal =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[171]++, parseFloat(exchangeBalance.total));
    const difference =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[172]++, Math.abs(cachedTotal - exchangeTotal));
    const differencePercent =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[173]++, cachedTotal > 0 ?
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[30][0]++, difference / cachedTotal * 100) :
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[30][1]++, 0));
    const hasDiscrepancy =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[174]++, differencePercent > this.config.discrepancyThreshold);
    let severity =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[175]++, 'LOW');
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[176]++;
    if (differencePercent > 10) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[31][0]++;
      cov_27b1lx3rb0().s[177]++;
      severity = 'CRITICAL';
    } else {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[31][1]++;
      cov_27b1lx3rb0().s[178]++;
      if (differencePercent > 5) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[32][0]++;
        cov_27b1lx3rb0().s[179]++;
        severity = 'HIGH';
      } else {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[32][1]++;
        cov_27b1lx3rb0().s[180]++;
        if (differencePercent > 1) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[33][0]++;
          cov_27b1lx3rb0().s[181]++;
          severity = 'MEDIUM';
        } else
        /* istanbul ignore next */
        {
          cov_27b1lx3rb0().b[33][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[182]++;
    return {
      hasDiscrepancy,
      currency: cachedBalance.currency,
      expectedBalance: cachedTotal,
      actualBalance: exchangeTotal,
      difference,
      differencePercent,
      severity,
      timestamp: new Date()
    };
  }
  /**
   * Reconcile transactions for specific currency
   */
  async reconcileCurrencyTransactions(currency) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[21]++;
    cov_27b1lx3rb0().s[183]++;
    try {
      // Get current balance
      const currentBalance =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[184]++, this.currentBalances.get(currency));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[185]++;
      if (!currentBalance) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[34][0]++;
        cov_27b1lx3rb0().s[186]++;
        throw new Error(`Balance not found for currency: ${currency}`);
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[34][1]++;
      }
      // Get transaction history
      const transactions =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[187]++,
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[35][0]++, this.transactionHistory.get(currency)) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[35][1]++, []));
      // Calculate expected balance from transactions
      let expectedBalance =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[188]++, 0);
      const reconciledTransactions =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[189]++, []);
      const unreconciledTransactions =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[190]++, []);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[191]++;
      for (const transaction of transactions) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[192]++;
        try {
          const amount =
          /* istanbul ignore next */
          (cov_27b1lx3rb0().s[193]++, parseFloat(transaction.amount));
          const fee =
          /* istanbul ignore next */
          (cov_27b1lx3rb0().s[194]++, parseFloat(transaction.fee));
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[195]++;
          if (transaction.side === 'buy') {
            /* istanbul ignore next */
            cov_27b1lx3rb0().b[36][0]++;
            cov_27b1lx3rb0().s[196]++;
            expectedBalance += amount - fee;
          } else {
            /* istanbul ignore next */
            cov_27b1lx3rb0().b[36][1]++;
            cov_27b1lx3rb0().s[197]++;
            expectedBalance -= amount + fee;
          }
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[198]++;
          reconciledTransactions.push(transaction);
        } catch (error) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[199]++;
          unreconciledTransactions.push(transaction);
        }
      }
      const actualBalance =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[200]++, parseFloat(currentBalance.total));
      const isReconciled =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[201]++, Math.abs(expectedBalance - actualBalance) < 0.00001); // Small tolerance for floating point
      const discrepancies =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[202]++, []);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[203]++;
      if (!isReconciled) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[37][0]++;
        cov_27b1lx3rb0().s[204]++;
        discrepancies.push({
          hasDiscrepancy: true,
          currency,
          expectedBalance,
          actualBalance,
          difference: Math.abs(expectedBalance - actualBalance),
          differencePercent: expectedBalance > 0 ?
          /* istanbul ignore next */
          (cov_27b1lx3rb0().b[38][0]++, Math.abs(expectedBalance - actualBalance) / expectedBalance * 100) :
          /* istanbul ignore next */
          (cov_27b1lx3rb0().b[38][1]++, 0),
          severity: 'MEDIUM',
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[37][1]++;
      }
      cov_27b1lx3rb0().s[205]++;
      return {
        isReconciled,
        currency,
        expectedBalance,
        actualBalance,
        reconciledTransactions: reconciledTransactions.length,
        unreconciledTransactions,
        discrepancies,
        timestamp: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[206]++;
      logger_1.logger.error(`❌ Failed to reconcile transactions for ${currency}:`, error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[207]++;
      throw error;
    }
  }
  /**
   * Load transaction history from exchange
   */
  async loadTransactionHistory() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[22]++;
    cov_27b1lx3rb0().s[208]++;
    try {
      // Load trade history for each currency
      const currencies =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[209]++, Array.from(this.currentBalances.keys()));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[210]++;
      for (const currency of currencies) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[211]++;
        try {
          const trades =
          /* istanbul ignore next */
          (cov_27b1lx3rb0().s[212]++, await this.gateIOClient.makeRequest({
            method: 'GET',
            url: '/spot/my_trades',
            params: {
              currency_pair: `${currency}_USDT`,
              limit: 100
            }
          }));
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[213]++;
          this.transactionHistory.set(currency, trades);
        } catch (error) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().s[214]++;
          // Some currencies might not have trading pairs, skip silently
          logger_1.logger.debug(`No trade history found for ${currency}`);
        }
      }
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[215]++;
      logger_1.logger.info(`📋 Loaded transaction history for ${this.transactionHistory.size} currencies`);
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[216]++;
      logger_1.logger.error('❌ Failed to load transaction history:', error);
    }
  }
  /**
   * Initialize default balance alerts
   */
  initializeBalanceAlerts() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[23]++;
    // Set default low balance alerts for major currencies
    const majorCurrencies =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[217]++, ['BTC', 'ETH', 'USDT']);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[218]++;
    for (const currency of majorCurrencies) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[219]++;
      this.setBalanceAlert(currency, 'LOW_BALANCE', 0.001); // Very low threshold
    }
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[220]++;
    logger_1.logger.info('🔔 Default balance alerts initialized');
  }
  /**
   * Start real-time balance monitoring
   */
  startRealTimeMonitoring() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[24]++;
    cov_27b1lx3rb0().s[221]++;
    this.monitoringTimer = setInterval(async () => {
      /* istanbul ignore next */
      cov_27b1lx3rb0().f[25]++;
      cov_27b1lx3rb0().s[222]++;
      try {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[223]++;
        await this.loadCurrentBalances();
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[224]++;
        await this.checkEmergencyStop();
      } catch (error) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[225]++;
        logger_1.logger.error('❌ Error in balance monitoring:', error);
      }
    }, this.config.monitoringInterval);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[226]++;
    logger_1.logger.info('👁️ Started real-time balance monitoring');
  }
  /**
   * Start transaction reconciliation
   */
  startReconciliation() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[26]++;
    cov_27b1lx3rb0().s[227]++;
    this.reconciliationTimer = setInterval(async () => {
      /* istanbul ignore next */
      cov_27b1lx3rb0().f[27]++;
      cov_27b1lx3rb0().s[228]++;
      try {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[229]++;
        await this.reconcileTransactions();
      } catch (error) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[230]++;
        logger_1.logger.error('❌ Error in transaction reconciliation:', error);
      }
    }, this.config.reconciliationInterval);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[231]++;
    logger_1.logger.info('🔄 Started transaction reconciliation');
  }
  /**
   * Check balance alerts
   */
  async checkBalanceAlerts() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[28]++;
    cov_27b1lx3rb0().s[232]++;
    for (const [currency, alerts] of this.balanceAlerts) {
      const balance =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[233]++, this.currentBalances.get(currency));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[234]++;
      if (!balance) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[39][0]++;
        cov_27b1lx3rb0().s[235]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[39][1]++;
      }
      cov_27b1lx3rb0().s[236]++;
      for (const alert of alerts) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[237]++;
        if (!alert.enabled) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[40][0]++;
          cov_27b1lx3rb0().s[238]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_27b1lx3rb0().b[40][1]++;
        }
        const shouldTrigger =
        /* istanbul ignore next */
        (cov_27b1lx3rb0().s[239]++, await this.shouldTriggerAlert(balance, alert));
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[240]++;
        if (shouldTrigger) {
          /* istanbul ignore next */
          cov_27b1lx3rb0().b[41][0]++;
          cov_27b1lx3rb0().s[241]++;
          await this.triggerBalanceAlert(currency, alert.alertType, alert);
        } else
        /* istanbul ignore next */
        {
          cov_27b1lx3rb0().b[41][1]++;
        }
      }
    }
  }
  /**
   * Determine if alert should be triggered
   */
  async shouldTriggerAlert(balance, alert) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[29]++;
    const totalBalance =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[242]++, parseFloat(balance.total));
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[243]++;
    switch (alert.alertType) {
      case 'LOW_BALANCE':
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[42][0]++;
        cov_27b1lx3rb0().s[244]++;
        return totalBalance < alert.threshold;
      case 'HIGH_BALANCE':
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[42][1]++;
        cov_27b1lx3rb0().s[245]++;
        return totalBalance > alert.threshold;
      case 'RAPID_CHANGE':
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[42][2]++;
        cov_27b1lx3rb0().s[246]++;
        // Check for rapid balance changes (simplified)
        return false;
      // Would need historical comparison
      case 'DISCREPANCY':
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[42][3]++;
        cov_27b1lx3rb0().s[247]++;
        return false;
      // Handled separately in validation
      default:
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[42][4]++;
        cov_27b1lx3rb0().s[248]++;
        return false;
    }
  }
  /**
   * Trigger balance alert
   */
  async triggerBalanceAlert(currency, alertType, alertData) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[30]++;
    cov_27b1lx3rb0().s[249]++;
    try {
      // Update alert statistics
      const alerts =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[250]++,
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[43][0]++, this.balanceAlerts.get(currency)) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[43][1]++, []));
      const alert =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[251]++, alerts.find(a => {
        /* istanbul ignore next */
        cov_27b1lx3rb0().f[31]++;
        cov_27b1lx3rb0().s[252]++;
        return a.alertType === alertType;
      }));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[253]++;
      if (alert) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[44][0]++;
        cov_27b1lx3rb0().s[254]++;
        alert.lastTriggered = new Date();
        /* istanbul ignore next */
        cov_27b1lx3rb0().s[255]++;
        alert.triggerCount++;
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[44][1]++;
      }
      cov_27b1lx3rb0().s[256]++;
      this.stats.alertsTriggered++;
      // Log alert
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[257]++;
      await this.logBalanceEvent('BALANCE_ALERT_TRIGGERED', {
        currency,
        alertType,
        alertData
      });
      // Emit alert event
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[258]++;
      this.emit('balanceAlert', {
        currency,
        alertType,
        alertData,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[259]++;
      logger_1.logger.warn(`🔔 Balance alert triggered: ${currency} ${alertType}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[260]++;
      logger_1.logger.error('❌ Failed to trigger balance alert:', error);
    }
  }
  /**
   * Check if balances should be refreshed
   */
  shouldRefreshBalances() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[32]++;
    cov_27b1lx3rb0().s[261]++;
    if (!this.stats.lastBalanceUpdate) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[45][0]++;
      cov_27b1lx3rb0().s[262]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[45][1]++;
    }
    const timeSinceUpdate =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[263]++, Date.now() - this.stats.lastBalanceUpdate.getTime());
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[264]++;
    return timeSinceUpdate > this.config.monitoringInterval;
  }
  /**
   * Check if there's a significant balance change
   */
  async hasSignificantBalanceChange() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[33]++;
    cov_27b1lx3rb0().s[265]++;
    if (this.balanceHistory.length === 0) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[46][0]++;
      cov_27b1lx3rb0().s[266]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[46][1]++;
    }
    const lastSnapshot =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[267]++, this.balanceHistory[this.balanceHistory.length - 1]);
    const currentValue =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[268]++, await this.getTotalPortfolioValue());
    const changePercent =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[269]++, Math.abs((currentValue - lastSnapshot.totalValueUSD) / lastSnapshot.totalValueUSD) * 100);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[270]++;
    return changePercent > 1; // 1% change threshold
  }
  /**
   * Get currency price in USD
   */
  async getCurrencyPrice(currency) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[34]++;
    cov_27b1lx3rb0().s[271]++;
    try {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[272]++;
      if (
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[48][0]++, currency === 'USDT') ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[48][1]++, currency === 'USD')) {
        /* istanbul ignore next */
        cov_27b1lx3rb0().b[47][0]++;
        cov_27b1lx3rb0().s[273]++;
        return 1;
      } else
      /* istanbul ignore next */
      {
        cov_27b1lx3rb0().b[47][1]++;
      }
      const ticker =
      /* istanbul ignore next */
      (cov_27b1lx3rb0().s[274]++, await this.gateIOClient.makeRequest({
        method: 'GET',
        url: '/spot/tickers',
        params: {
          currency_pair: `${currency}_USDT`
        }
      }));
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[275]++;
      return parseFloat(
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[49][0]++, ticker[0]?.last) ||
      /* istanbul ignore next */
      (cov_27b1lx3rb0().b[49][1]++, '0'));
    } catch (error) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[276]++;
      logger_1.logger.error(`❌ Failed to get price for ${currency}:`, error);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[277]++;
      return 0;
    }
  }
  /**
   * Update balance statistics
   */
  updateBalanceStats(validationTime, discrepancyCount) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[35]++;
    // Update average validation time
    const alpha =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[278]++, 0.1);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[279]++;
    this.stats.averageBalanceCheckTime = alpha * validationTime + (1 - alpha) * this.stats.averageBalanceCheckTime;
    // Update balance accuracy
    const totalChecks =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[280]++, this.stats.totalBalanceChecks);
    const totalDiscrepancies =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[281]++, this.stats.discrepanciesDetected);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[282]++;
    this.stats.balanceAccuracy = totalChecks > 0 ?
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[50][0]++, (totalChecks - totalDiscrepancies) / totalChecks * 100) :
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[50][1]++, 100);
  }
  /**
   * Clean up old snapshots
   */
  async cleanupOldSnapshots() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[36]++;
    const cutoffDate =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[283]++, new Date(Date.now() - this.config.snapshotRetentionDays * 24 * 60 * 60 * 1000));
    const initialCount =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[284]++, this.balanceHistory.length);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[285]++;
    this.balanceHistory = this.balanceHistory.filter(snapshot => {
      /* istanbul ignore next */
      cov_27b1lx3rb0().f[37]++;
      cov_27b1lx3rb0().s[286]++;
      return snapshot.timestamp > cutoffDate;
    });
    const removedCount =
    /* istanbul ignore next */
    (cov_27b1lx3rb0().s[287]++, initialCount - this.balanceHistory.length);
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[288]++;
    if (removedCount > 0) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[51][0]++;
      cov_27b1lx3rb0().s[289]++;
      logger_1.logger.info(`🧹 Cleaned up ${removedCount} old balance snapshots`);
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[51][1]++;
    }
  }
  /**
   * Generate unique snapshot ID
   */
  generateSnapshotId() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[38]++;
    cov_27b1lx3rb0().s[290]++;
    return `snapshot_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Log balance event for audit trail
   */
  async logBalanceEvent(eventType, eventData) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[39]++;
    cov_27b1lx3rb0().s[291]++;
    await this.auditService.logSecurityEvent({
      type: eventType,
      severity: 'INFO',
      details: eventData,
      timestamp: new Date()
    });
  }
  /**
   * Get balance management statistics
   */
  getBalanceStats() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[40]++;
    cov_27b1lx3rb0().s[292]++;
    return {
      ...this.stats
    };
  }
  /**
   * Get balance management configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[41]++;
    cov_27b1lx3rb0().s[293]++;
    return {
      ...this.config
    };
  }
  /**
   * Update balance management configuration
   */
  updateConfig(config) {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[42]++;
    cov_27b1lx3rb0().s[294]++;
    this.config = {
      ...this.config,
      ...config
    };
    // Restart monitoring if interval changed
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[295]++;
    if (
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[53][0]++, config.monitoringInterval) &&
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[53][1]++, this.monitoringTimer)) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[52][0]++;
      cov_27b1lx3rb0().s[296]++;
      clearInterval(this.monitoringTimer);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[297]++;
      this.startRealTimeMonitoring();
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[52][1]++;
    }
    // Restart reconciliation if interval changed
    cov_27b1lx3rb0().s[298]++;
    if (
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[55][0]++, config.reconciliationInterval) &&
    /* istanbul ignore next */
    (cov_27b1lx3rb0().b[55][1]++, this.reconciliationTimer)) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[54][0]++;
      cov_27b1lx3rb0().s[299]++;
      clearInterval(this.reconciliationTimer);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[300]++;
      this.startReconciliation();
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[54][1]++;
    }
    cov_27b1lx3rb0().s[301]++;
    logger_1.logger.info('⚙️ Balance management configuration updated');
  }
  /**
   * Graceful shutdown
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_27b1lx3rb0().f[43]++;
    cov_27b1lx3rb0().s[302]++;
    logger_1.logger.info('🛑 Shutting down Balance Manager...');
    // Stop monitoring timers
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[303]++;
    if (this.monitoringTimer) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[56][0]++;
      cov_27b1lx3rb0().s[304]++;
      clearInterval(this.monitoringTimer);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[305]++;
      this.monitoringTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[56][1]++;
    }
    cov_27b1lx3rb0().s[306]++;
    if (this.reconciliationTimer) {
      /* istanbul ignore next */
      cov_27b1lx3rb0().b[57][0]++;
      cov_27b1lx3rb0().s[307]++;
      clearInterval(this.reconciliationTimer);
      /* istanbul ignore next */
      cov_27b1lx3rb0().s[308]++;
      this.reconciliationTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_27b1lx3rb0().b[57][1]++;
    }
    // Create final snapshot
    cov_27b1lx3rb0().s[309]++;
    await this.createBalanceSnapshot();
    // Log final statistics
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[310]++;
    await this.auditService.logSecurityEvent({
      type: 'BALANCE_MANAGER_SHUTDOWN',
      severity: 'INFO',
      details: {
        stats: this.stats,
        balanceCount: this.currentBalances.size,
        snapshotCount: this.balanceHistory.length
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_27b1lx3rb0().s[311]++;
    logger_1.logger.info('✅ Balance Manager shutdown completed');
  }
}
/* istanbul ignore next */
cov_27b1lx3rb0().s[312]++;
exports.BalanceManager = BalanceManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,