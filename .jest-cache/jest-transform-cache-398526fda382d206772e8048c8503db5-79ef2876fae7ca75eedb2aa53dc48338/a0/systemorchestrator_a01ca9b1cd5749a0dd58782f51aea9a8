bade1e816b4a5478146adbd1f9e481cb
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SYSTEM ORCHESTRATOR
 * =============================================================================
 *
 * This module provides comprehensive system orchestration for the AI crypto
 * trading agent. It manages component lifecycle, dependency resolution,
 * startup/shutdown sequencing, and inter-component communication.
 *
 * CRITICAL SYSTEM NOTICE:
 * This orchestrator manages the entire trading system lifecycle. Proper
 * initialization order and dependency management are essential for system
 * stability and financial safety.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2bytyo6fy8() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-orchestrator.ts";
  var hash = "ba2296a12372887c736a2ae49bd1f915a070aeb7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-orchestrator.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 99
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "3": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "4": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "5": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 72
        }
      },
      "6": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 45
        }
      },
      "11": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "12": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "13": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "14": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "15": {
        start: {
          line: 46,
          column: 22
        },
        end: {
          line: 46,
          column: 31
        }
      },
      "16": {
        start: {
          line: 48,
          column: 21
        },
        end: {
          line: 48,
          column: 26
        }
      },
      "17": {
        start: {
          line: 49,
          column: 21
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "18": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 50,
          column: 35
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 16
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 29
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 34
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 74
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "25": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 45
        }
      },
      "26": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 49
        }
      },
      "27": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 72
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "30": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "31": {
        start: {
          line: 93,
          column: 33
        },
        end: {
          line: 93,
          column: 59
        }
      },
      "32": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 91
        }
      },
      "33": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "34": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 55
        }
      },
      "35": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 41
        }
      },
      "36": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 38
        }
      },
      "37": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 94
        }
      },
      "38": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 69
        }
      },
      "39": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 45
        }
      },
      "40": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "41": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "42": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 75
        }
      },
      "43": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 19
        }
      },
      "44": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 35
        }
      },
      "45": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 65
        }
      },
      "46": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "47": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "48": {
        start: {
          line: 127,
          column: 36
        },
        end: {
          line: 127,
          column: 38
        }
      },
      "49": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "50": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 48
        }
      },
      "51": {
        start: {
          line: 132,
          column: 35
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "52": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "53": {
        start: {
          line: 141,
          column: 34
        },
        end: {
          line: 141,
          column: 66
        }
      },
      "54": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "55": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 63
        }
      },
      "56": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 41
        }
      },
      "57": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "58": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 81
        }
      },
      "59": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 105
        }
      },
      "60": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 70
        }
      },
      "61": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 45
        }
      },
      "62": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 24
        }
      },
      "63": {
        start: {
          line: 167,
          column: 32
        },
        end: {
          line: 167,
          column: 52
        }
      },
      "64": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 168,
          column: 33
        }
      },
      "65": {
        start: {
          line: 169,
          column: 30
        },
        end: {
          line: 169,
          column: 31
        }
      },
      "66": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 32
        }
      },
      "67": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "68": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "69": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 36
        }
      },
      "70": {
        start: {
          line: 175,
          column: 17
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "71": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 34
        }
      },
      "72": {
        start: {
          line: 179,
          column: 29
        },
        end: {
          line: 179,
          column: 89
        }
      },
      "73": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 46
        }
      },
      "74": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "75": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 48
        }
      },
      "76": {
        start: {
          line: 205,
          column: 26
        },
        end: {
          line: 205,
          column: 58
        }
      },
      "77": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "78": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 67
        }
      },
      "79": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 72
        }
      },
      "80": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "81": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 56
        }
      },
      "82": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 39
        }
      },
      "83": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 55
        }
      },
      "84": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 51
        }
      },
      "85": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 87
        }
      },
      "86": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 90
        }
      },
      "87": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 53
        }
      },
      "88": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 59
        }
      },
      "89": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 24
        }
      },
      "90": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "91": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 57
        }
      },
      "92": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "93": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 77
        }
      },
      "94": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "95": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 88
        }
      },
      "96": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "97": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 84
        }
      },
      "98": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "99": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 62
        }
      },
      "100": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "101": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 67
        }
      },
      "102": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 264,
          column: 33
        }
      },
      "103": {
        start: {
          line: 265,
          column: 25
        },
        end: {
          line: 265,
          column: 34
        }
      },
      "104": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 24
        }
      },
      "105": {
        start: {
          line: 267,
          column: 22
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "106": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 270,
          column: 13
        }
      },
      "107": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 80
        }
      },
      "108": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "109": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 23
        }
      },
      "110": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 38
        }
      },
      "111": {
        start: {
          line: 275,
          column: 33
        },
        end: {
          line: 275,
          column: 83
        }
      },
      "112": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "113": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 279,
          column: 17
        }
      },
      "114": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 103
        }
      },
      "115": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 34
        }
      },
      "116": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 41
        }
      },
      "117": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 37
        }
      },
      "118": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 36
        }
      },
      "119": {
        start: {
          line: 287,
          column: 33
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "120": {
        start: {
          line: 288,
          column: 28
        },
        end: {
          line: 288,
          column: 51
        }
      },
      "121": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "122": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 32
        }
      },
      "123": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 21
        }
      },
      "124": {
        start: {
          line: 301,
          column: 26
        },
        end: {
          line: 301,
          column: 58
        }
      },
      "125": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "126": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 67
        }
      },
      "127": {
        start: {
          line: 305,
          column: 27
        },
        end: {
          line: 305,
          column: 68
        }
      },
      "128": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "129": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 102
        }
      },
      "130": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 60
        }
      },
      "131": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 58
        }
      },
      "132": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 54
        }
      },
      "133": {
        start: {
          line: 313,
          column: 32
        },
        end: {
          line: 313,
          column: 54
        }
      },
      "134": {
        start: {
          line: 314,
          column: 35
        },
        end: {
          line: 318,
          column: 14
        }
      },
      "135": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 317,
          column: 47
        }
      },
      "136": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 90
        }
      },
      "137": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 62
        }
      },
      "138": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 55
        }
      },
      "139": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 54
        }
      },
      "140": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 52
        }
      },
      "141": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 85
        }
      },
      "142": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 88
        }
      },
      "143": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 53
        }
      },
      "144": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 59
        }
      },
      "145": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 341,
          column: 13
        }
      },
      "146": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 69
        }
      },
      "147": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 139
        }
      },
      "148": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 91
        }
      },
      "149": {
        start: {
          line: 336,
          column: 45
        },
        end: {
          line: 336,
          column: 89
        }
      },
      "150": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 56
        }
      },
      "151": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 123
        }
      },
      "152": {
        start: {
          line: 351,
          column: 29
        },
        end: {
          line: 351,
          column: 51
        }
      },
      "153": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "154": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 19
        }
      },
      "155": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 87
        }
      },
      "156": {
        start: {
          line: 356,
          column: 26
        },
        end: {
          line: 356,
          column: 36
        }
      },
      "157": {
        start: {
          line: 357,
          column: 24
        },
        end: {
          line: 357,
          column: 53
        }
      },
      "158": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "159": {
        start: {
          line: 359,
          column: 27
        },
        end: {
          line: 359,
          column: 31
        }
      },
      "160": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "161": {
        start: {
          line: 361,
          column: 35
        },
        end: {
          line: 361,
          column: 68
        }
      },
      "162": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 365,
          column: 17
        }
      },
      "163": {
        start: {
          line: 363,
          column: 20
        },
        end: {
          line: 363,
          column: 37
        }
      },
      "164": {
        start: {
          line: 364,
          column: 20
        },
        end: {
          line: 364,
          column: 26
        }
      },
      "165": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 370,
          column: 13
        }
      },
      "166": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 86
        }
      },
      "167": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 23
        }
      },
      "168": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 68
        }
      },
      "169": {
        start: {
          line: 372,
          column: 41
        },
        end: {
          line: 372,
          column: 66
        }
      },
      "170": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 77
        }
      },
      "171": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "172": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 19
        }
      },
      "173": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 72
        }
      },
      "174": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 44
        }
      },
      "175": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 45
        }
      },
      "176": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "177": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 52
        }
      },
      "178": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 49
        }
      },
      "179": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 65
        }
      },
      "180": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "181": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 417,
          column: 13
        }
      },
      "182": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 416,
          column: 17
        }
      },
      "183": {
        start: {
          line: 405,
          column: 35
        },
        end: {
          line: 405,
          column: 64
        }
      },
      "184": {
        start: {
          line: 406,
          column: 20
        },
        end: {
          line: 406,
          column: 77
        }
      },
      "185": {
        start: {
          line: 408,
          column: 20
        },
        end: {
          line: 410,
          column: 21
        }
      },
      "186": {
        start: {
          line: 409,
          column: 24
        },
        end: {
          line: 409,
          column: 79
        }
      },
      "187": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 95
        }
      },
      "188": {
        start: {
          line: 414,
          column: 20
        },
        end: {
          line: 414,
          column: 61
        }
      },
      "189": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 415,
          column: 67
        }
      },
      "190": {
        start: {
          line: 427,
          column: 29
        },
        end: {
          line: 427,
          column: 76
        }
      },
      "191": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 428,
          column: 30
        }
      },
      "192": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "193": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 19
        }
      },
      "194": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 93
        }
      },
      "195": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 75
        }
      },
      "196": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "197": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 60
        }
      },
      "198": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 54
        }
      },
      "199": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 85
        }
      },
      "200": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 89
        }
      },
      "201": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 450,
          column: 11
        }
      },
      "202": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 77
        }
      },
      "203": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 455,
          column: 11
        }
      },
      "204": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 454,
          column: 13
        }
      },
      "205": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 453,
          column: 108
        }
      },
      "206": {
        start: {
          line: 458,
          column: 0
        },
        end: {
          line: 458,
          column: 48
        }
      },
      "207": {
        start: {
          line: 462,
          column: 0
        },
        end: {
          line: 469,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 1
          },
          end: {
            line: 31,
            column: 2
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 61
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 24
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 78
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 23
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 22
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 166
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 36
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 195
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 40
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 204
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 33
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 231
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 36
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 250
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 26
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 263
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 23
          }
        },
        loc: {
          start: {
            line: 267,
            column: 39
          },
          end: {
            line: 285,
            column: 9
          }
        },
        line: 267
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 288,
            column: 18
          },
          end: {
            line: 288,
            column: 19
          }
        },
        loc: {
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 51
          }
        },
        line: 288
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 38
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 300
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 314,
            column: 47
          },
          end: {
            line: 314,
            column: 48
          }
        },
        loc: {
          start: {
            line: 314,
            column: 62
          },
          end: {
            line: 318,
            column: 13
          }
        },
        line: 314
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 315,
            column: 27
          },
          end: {
            line: 315,
            column: 28
          }
        },
        loc: {
          start: {
            line: 315,
            column: 33
          },
          end: {
            line: 317,
            column: 17
          }
        },
        line: 315
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 336,
            column: 34
          },
          end: {
            line: 336,
            column: 35
          }
        },
        loc: {
          start: {
            line: 336,
            column: 45
          },
          end: {
            line: 336,
            column: 89
          }
        },
        line: 336
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 41
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 350
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 372,
            column: 30
          },
          end: {
            line: 372,
            column: 31
          }
        },
        loc: {
          start: {
            line: 372,
            column: 41
          },
          end: {
            line: 372,
            column: 66
          }
        },
        line: 372
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 28
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 379
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 384,
            column: 47
          },
          end: {
            line: 384,
            column: 48
          }
        },
        loc: {
          start: {
            line: 384,
            column: 59
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 384
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 391,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        loc: {
          start: {
            line: 391,
            column: 27
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 391
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        loc: {
          start: {
            line: 401,
            column: 32
          },
          end: {
            line: 419,
            column: 5
          }
        },
        line: 401
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 54
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 426
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 447,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        loc: {
          start: {
            line: 447,
            column: 25
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 447
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 448,
            column: 35
          },
          end: {
            line: 448,
            column: 36
          }
        },
        loc: {
          start: {
            line: 448,
            column: 57
          },
          end: {
            line: 450,
            column: 9
          }
        },
        line: 448
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 451,
            column: 44
          },
          end: {
            line: 451,
            column: 45
          }
        },
        loc: {
          start: {
            line: 451,
            column: 67
          },
          end: {
            line: 455,
            column: 9
          }
        },
        line: 451
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 3
          },
          end: {
            line: 39,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 3
          },
          end: {
            line: 39,
            column: 18
          }
        }, {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 69
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "2": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "3": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        }, {
          start: {
            line: 151,
            column: 17
          },
          end: {
            line: 153,
            column: 13
          }
        }],
        line: 148
      },
      "4": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: 175,
            column: 17
          },
          end: {
            line: 177,
            column: 13
          }
        }],
        line: 172
      },
      "5": {
        loc: {
          start: {
            line: 175,
            column: 17
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 17
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "6": {
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 179,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 51
          },
          end: {
            line: 179,
            column: 85
          }
        }, {
          start: {
            line: 179,
            column: 88
          },
          end: {
            line: 179,
            column: 89
          }
        }],
        line: 179
      },
      "7": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "8": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "9": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "10": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "11": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "12": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "13": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "14": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "15": {
        loc: {
          start: {
            line: 275,
            column: 33
          },
          end: {
            line: 275,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 33
          },
          end: {
            line: 275,
            column: 70
          }
        }, {
          start: {
            line: 275,
            column: 74
          },
          end: {
            line: 275,
            column: 83
          }
        }],
        line: 275
      },
      "16": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "17": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "18": {
        loc: {
          start: {
            line: 305,
            column: 27
          },
          end: {
            line: 305,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 27
          },
          end: {
            line: 305,
            column: 63
          }
        }, {
          start: {
            line: 305,
            column: 67
          },
          end: {
            line: 305,
            column: 68
          }
        }],
        line: 305
      },
      "19": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        }, {
          start: {
            line: 339,
            column: 17
          },
          end: {
            line: 341,
            column: 13
          }
        }],
        line: 332
      },
      "20": {
        loc: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "21": {
        loc: {
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 365,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 365,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "22": {
        loc: {
          start: {
            line: 362,
            column: 20
          },
          end: {
            line: 362,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 20
          },
          end: {
            line: 362,
            column: 31
          }
        }, {
          start: {
            line: 362,
            column: 35
          },
          end: {
            line: 362,
            column: 80
          }
        }],
        line: 362
      },
      "23": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 370,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 370,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "24": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "25": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "26": {
        loc: {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "27": {
        loc: {
          start: {
            line: 408,
            column: 20
          },
          end: {
            line: 410,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 20
          },
          end: {
            line: 410,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "28": {
        loc: {
          start: {
            line: 408,
            column: 24
          },
          end: {
            line: 408,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 24
          },
          end: {
            line: 408,
            column: 39
          }
        }, {
          start: {
            line: 408,
            column: 43
          },
          end: {
            line: 408,
            column: 67
          }
        }],
        line: 408
      },
      "29": {
        loc: {
          start: {
            line: 427,
            column: 29
          },
          end: {
            line: 427,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 29
          },
          end: {
            line: 427,
            column: 71
          }
        }, {
          start: {
            line: 427,
            column: 75
          },
          end: {
            line: 427,
            column: 76
          }
        }],
        line: 427
      },
      "30": {
        loc: {
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "31": {
        loc: {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 454,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 454,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-orchestrator.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\system-orchestrator.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - SYSTEM ORCHESTRATOR\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive system orchestration for the AI crypto\r\n * trading agent. It manages component lifecycle, dependency resolution,\r\n * startup/shutdown sequencing, and inter-component communication.\r\n * \r\n * CRITICAL SYSTEM NOTICE:\r\n * This orchestrator manages the entire trading system lifecycle. Proper\r\n * initialization order and dependency management are essential for system\r\n * stability and financial safety.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\nimport { gracefulShutdown, ShutdownableComponent } from '@/core/shutdown/graceful-shutdown';\r\n\r\n/**\r\n * System component interface with lifecycle management\r\n */\r\nexport interface SystemComponent extends ShutdownableComponent {\r\n  /** Component identifier */\r\n  id: string;\r\n  /** Component dependencies */\r\n  dependencies: string[];\r\n  /** Component priority (lower = higher priority) */\r\n  priority: number;\r\n  /** Component status */\r\n  status: ComponentStatus;\r\n  /** Initialize component */\r\n  initialize(): Promise<void>;\r\n  /** Health check */\r\n  healthCheck(): Promise<ComponentHealth>;\r\n  /** Get component metrics */\r\n  getMetrics?(): ComponentMetrics;\r\n}\r\n\r\n/**\r\n * Component status enumeration\r\n */\r\nexport enum ComponentStatus {\r\n  UNINITIALIZED = 'UNINITIALIZED',\r\n  INITIALIZING = 'INITIALIZING',\r\n  RUNNING = 'RUNNING',\r\n  STOPPING = 'STOPPING',\r\n  STOPPED = 'STOPPED',\r\n  ERROR = 'ERROR',\r\n  MAINTENANCE = 'MAINTENANCE'\r\n}\r\n\r\n/**\r\n * Component health interface\r\n */\r\nexport interface ComponentHealth {\r\n  /** Overall health status */\r\n  healthy: boolean;\r\n  /** Health score (0-100) */\r\n  score: number;\r\n  /** Health details */\r\n  details: Record<string, any>;\r\n  /** Last health check timestamp */\r\n  lastCheck: Date;\r\n  /** Issues found */\r\n  issues: string[];\r\n  /** Recommendations */\r\n  recommendations: string[];\r\n}\r\n\r\n/**\r\n * Component metrics interface\r\n */\r\nexport interface ComponentMetrics {\r\n  /** CPU usage percentage */\r\n  cpuUsage: number;\r\n  /** Memory usage in MB */\r\n  memoryUsage: number;\r\n  /** Uptime in milliseconds */\r\n  uptime: number;\r\n  /** Request count */\r\n  requestCount: number;\r\n  /** Error count */\r\n  errorCount: number;\r\n  /** Custom metrics */\r\n  custom: Record<string, number>;\r\n}\r\n\r\n/**\r\n * System orchestration configuration\r\n */\r\nexport interface OrchestrationConfig {\r\n  /** Startup timeout per component (ms) */\r\n  startupTimeout: number;\r\n  /** Health check interval (ms) */\r\n  healthCheckInterval: number;\r\n  /** Dependency resolution timeout (ms) */\r\n  dependencyTimeout: number;\r\n  /** Maximum startup retries */\r\n  maxStartupRetries: number;\r\n  /** Enable automatic recovery */\r\n  autoRecovery: boolean;\r\n  /** Recovery cooldown period (ms) */\r\n  recoveryCooldown: number;\r\n}\r\n\r\n/**\r\n * System orchestration events\r\n */\r\nexport interface OrchestrationEvents {\r\n  'component:initialized': (component: SystemComponent) => void;\r\n  'component:started': (component: SystemComponent) => void;\r\n  'component:stopped': (component: SystemComponent) => void;\r\n  'component:error': (component: SystemComponent, error: Error) => void;\r\n  'component:health-changed': (component: SystemComponent, health: ComponentHealth) => void;\r\n  'system:ready': () => void;\r\n  'system:shutdown': () => void;\r\n  'system:error': (error: Error) => void;\r\n}\r\n\r\n/**\r\n * System orchestrator class\r\n */\r\nexport class SystemOrchestrator extends EventEmitter {\r\n  private components: Map<string, SystemComponent> = new Map();\r\n  private dependencyGraph: Map<string, Set<string>> = new Map();\r\n  private healthCheckInterval?: NodeJS.Timeout;\r\n  private isShuttingDown: boolean = false;\r\n  private startupRetries: Map<string, number> = new Map();\r\n  private lastRecoveryAttempt: Map<string, number> = new Map();\r\n\r\n  constructor(private config: OrchestrationConfig) {\r\n    super();\r\n    this.setupEventHandlers();\r\n  }\r\n\r\n  /**\r\n   * Register a system component\r\n   * \r\n   * @param component System component to register\r\n   */\r\n  public registerComponent(component: SystemComponent): void {\r\n    logger.info(`\uD83D\uDCCB Registering component: ${component.id}`);\r\n    \r\n    // Validate component\r\n    this.validateComponent(component);\r\n    \r\n    // Register component\r\n    this.components.set(component.id, component);\r\n    \r\n    // Build dependency graph\r\n    this.buildDependencyGraph(component);\r\n    \r\n    // Initialize retry counter\r\n    this.startupRetries.set(component.id, 0);\r\n    \r\n    logger.info(`\u2705 Component registered: ${component.id}`);\r\n  }\r\n\r\n  /**\r\n   * Start all system components in dependency order\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async startSystem(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Starting system orchestration...');\r\n      \r\n      // Create audit entry\r\n      await auditService.createAuditEntry({\r\n        auditId: `system_start_${Date.now()}`,\r\n        eventType: 'SYSTEM_STARTUP_INITIATED',\r\n        actor: 'SYSTEM_ORCHESTRATOR',\r\n        resource: 'SYSTEM',\r\n        action: 'START_SYSTEM',\r\n        result: 'SUCCESS',\r\n        timestamp: new Date(),\r\n        auditData: { componentCount: this.components.size }\r\n      });\r\n\r\n      // Resolve startup order\r\n      const startupOrder = this.resolveStartupOrder();\r\n      logger.info(`\uD83D\uDCCB Startup order resolved: ${startupOrder.join(' \u2192 ')}`);\r\n\r\n      // Start components in order\r\n      for (const componentId of startupOrder) {\r\n        await this.startComponent(componentId);\r\n      }\r\n\r\n      // Start health monitoring\r\n      this.startHealthMonitoring();\r\n\r\n      // System is ready\r\n      this.emit('system:ready');\r\n      logger.info('\u2705 System orchestration completed - all components running');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C System startup failed:', error);\r\n      this.emit('system:error', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop all system components gracefully\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async stopSystem(): Promise<void> {\r\n    if (this.isShuttingDown) {\r\n      logger.warn('\u26A0\uFE0F System shutdown already in progress');\r\n      return;\r\n    }\r\n\r\n    this.isShuttingDown = true;\r\n    logger.info('\uD83D\uDED1 Initiating system shutdown...');\r\n\r\n    try {\r\n      // Stop health monitoring\r\n      this.stopHealthMonitoring();\r\n\r\n      // Create shutdown context\r\n      const shutdownContext: Record<string, ShutdownableComponent> = {};\r\n      for (const [id, component] of this.components) {\r\n        shutdownContext[id] = component;\r\n      }\r\n\r\n      // Perform graceful shutdown\r\n      const shutdownResult = await gracefulShutdown(shutdownContext, {\r\n        timeout: 60000, // 60 seconds\r\n        closePositions: true,\r\n        backupData: true,\r\n        sendNotifications: true,\r\n        emergencyOnTimeout: true\r\n      });\r\n\r\n      // Update component statuses\r\n      for (const componentId of shutdownResult.successfulComponents) {\r\n        const component = this.components.get(componentId);\r\n        if (component) {\r\n          component.status = ComponentStatus.STOPPED;\r\n        }\r\n      }\r\n\r\n      // Emit shutdown event\r\n      this.emit('system:shutdown');\r\n      \r\n      if (shutdownResult.success) {\r\n        logger.info('\u2705 System shutdown completed successfully');\r\n      } else {\r\n        logger.error('\u274C System shutdown completed with errors:', shutdownResult.errors);\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C System shutdown failed:', error);\r\n      this.emit('system:error', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get system status\r\n   * \r\n   * @returns System status information\r\n   */\r\n  public getSystemStatus(): {\r\n    totalComponents: number;\r\n    runningComponents: number;\r\n    errorComponents: number;\r\n    systemHealth: number;\r\n    uptime: number;\r\n  } {\r\n    const totalComponents = this.components.size;\r\n    let runningComponents = 0;\r\n    let errorComponents = 0;\r\n    let totalHealthScore = 0;\r\n\r\n    for (const component of this.components.values()) {\r\n      if (component.status === ComponentStatus.RUNNING) {\r\n        runningComponents++;\r\n      } else if (component.status === ComponentStatus.ERROR) {\r\n        errorComponents++;\r\n      }\r\n    }\r\n\r\n    const systemHealth = totalComponents > 0 ? totalHealthScore / totalComponents : 0;\r\n    const uptime = process.uptime() * 1000;\r\n\r\n    return {\r\n      totalComponents,\r\n      runningComponents,\r\n      errorComponents,\r\n      systemHealth,\r\n      uptime\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get component status\r\n   * \r\n   * @param componentId Component identifier\r\n   * @returns Component status or undefined if not found\r\n   */\r\n  public getComponentStatus(componentId: string): SystemComponent | undefined {\r\n    return this.components.get(componentId);\r\n  }\r\n\r\n  /**\r\n   * Restart a specific component\r\n   * \r\n   * @param componentId Component identifier\r\n   * @returns Promise<void>\r\n   */\r\n  public async restartComponent(componentId: string): Promise<void> {\r\n    const component = this.components.get(componentId);\r\n    if (!component) {\r\n      throw new Error(`Component not found: ${componentId}`);\r\n    }\r\n\r\n    logger.info(`\uD83D\uDD04 Restarting component: ${componentId}`);\r\n\r\n    try {\r\n      // Stop component\r\n      component.status = ComponentStatus.STOPPING;\r\n      await component.shutdown();\r\n      component.status = ComponentStatus.STOPPED;\r\n\r\n      // Start component\r\n      await this.startComponent(componentId);\r\n\r\n      logger.info(`\u2705 Component restarted successfully: ${componentId}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to restart component ${componentId}:`, error);\r\n      component.status = ComponentStatus.ERROR;\r\n      this.emit('component:error', component, error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate component configuration\r\n   * \r\n   * @param component Component to validate\r\n   */\r\n  private validateComponent(component: SystemComponent): void {\r\n    if (!component.id) {\r\n      throw new Error('Component must have an ID');\r\n    }\r\n\r\n    if (this.components.has(component.id)) {\r\n      throw new Error(`Component already registered: ${component.id}`);\r\n    }\r\n\r\n    if (!Array.isArray(component.dependencies)) {\r\n      throw new Error(`Component dependencies must be an array: ${component.id}`);\r\n    }\r\n\r\n    if (typeof component.priority !== 'number') {\r\n      throw new Error(`Component priority must be a number: ${component.id}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build dependency graph for component\r\n   * \r\n   * @param component Component to build graph for\r\n   */\r\n  private buildDependencyGraph(component: SystemComponent): void {\r\n    if (!this.dependencyGraph.has(component.id)) {\r\n      this.dependencyGraph.set(component.id, new Set());\r\n    }\r\n\r\n    for (const dependency of component.dependencies) {\r\n      this.dependencyGraph.get(component.id)!.add(dependency);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resolve startup order based on dependencies and priorities\r\n   * \r\n   * @returns Array of component IDs in startup order\r\n   */\r\n  private resolveStartupOrder(): string[] {\r\n    const visited = new Set<string>();\r\n    const visiting = new Set<string>();\r\n    const order: string[] = [];\r\n\r\n    const visit = (componentId: string): void => {\r\n      if (visiting.has(componentId)) {\r\n        throw new Error(`Circular dependency detected: ${componentId}`);\r\n      }\r\n\r\n      if (visited.has(componentId)) {\r\n        return;\r\n      }\r\n\r\n      visiting.add(componentId);\r\n\r\n      const dependencies = this.dependencyGraph.get(componentId) || new Set();\r\n      for (const dependency of dependencies) {\r\n        if (!this.components.has(dependency)) {\r\n          throw new Error(`Missing dependency: ${dependency} for component: ${componentId}`);\r\n        }\r\n        visit(dependency);\r\n      }\r\n\r\n      visiting.delete(componentId);\r\n      visited.add(componentId);\r\n      order.push(componentId);\r\n    };\r\n\r\n    // Sort components by priority first\r\n    const sortedComponents = Array.from(this.components.values())\r\n      .sort((a, b) => a.priority - b.priority);\r\n\r\n    for (const component of sortedComponents) {\r\n      visit(component.id);\r\n    }\r\n\r\n    return order;\r\n  }\r\n\r\n  /**\r\n   * Start a specific component\r\n   * \r\n   * @param componentId Component identifier\r\n   * @returns Promise<void>\r\n   */\r\n  private async startComponent(componentId: string): Promise<void> {\r\n    const component = this.components.get(componentId);\r\n    if (!component) {\r\n      throw new Error(`Component not found: ${componentId}`);\r\n    }\r\n\r\n    const retryCount = this.startupRetries.get(componentId) || 0;\r\n    \r\n    try {\r\n      logger.info(`\uD83D\uDE80 Starting component: ${componentId} (attempt ${retryCount + 1})`);\r\n      \r\n      component.status = ComponentStatus.INITIALIZING;\r\n      this.emit('component:initialized', component);\r\n\r\n      // Wait for dependencies\r\n      await this.waitForDependencies(component);\r\n\r\n      // Initialize component with timeout\r\n      const initPromise = component.initialize();\r\n      const timeoutPromise = new Promise<never>((_, reject) => {\r\n        setTimeout(() => {\r\n          reject(new Error(`Component initialization timeout: ${componentId}`));\r\n        }, this.config.startupTimeout);\r\n      });\r\n\r\n      await Promise.race([initPromise, timeoutPromise]);\r\n\r\n      // Update status\r\n      component.status = ComponentStatus.RUNNING;\r\n      this.emit('component:started', component);\r\n\r\n      // Reset retry counter\r\n      this.startupRetries.set(componentId, 0);\r\n\r\n      logger.info(`\u2705 Component started successfully: ${componentId}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to start component ${componentId}:`, error);\r\n      \r\n      component.status = ComponentStatus.ERROR;\r\n      this.emit('component:error', component, error as Error);\r\n\r\n      // Handle retries\r\n      if (retryCount < this.config.maxStartupRetries) {\r\n        this.startupRetries.set(componentId, retryCount + 1);\r\n        logger.info(`\uD83D\uDD04 Retrying component startup: ${componentId} (${retryCount + 1}/${this.config.maxStartupRetries})`);\r\n        \r\n        // Wait before retry\r\n        await new Promise(resolve => setTimeout(resolve, 2000 * (retryCount + 1)));\r\n        \r\n        return this.startComponent(componentId);\r\n      } else {\r\n        throw new Error(`Component startup failed after ${this.config.maxStartupRetries} retries: ${componentId}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wait for component dependencies to be ready\r\n   * \r\n   * @param component Component to wait for dependencies\r\n   * @returns Promise<void>\r\n   */\r\n  private async waitForDependencies(component: SystemComponent): Promise<void> {\r\n    const dependencies = component.dependencies;\r\n    if (dependencies.length === 0) {\r\n      return;\r\n    }\r\n\r\n    logger.info(`\u23F3 Waiting for dependencies: ${dependencies.join(', ')}`);\r\n\r\n    const startTime = Date.now();\r\n    const timeout = this.config.dependencyTimeout;\r\n\r\n    while (Date.now() - startTime < timeout) {\r\n      let allReady = true;\r\n\r\n      for (const dependencyId of dependencies) {\r\n        const dependency = this.components.get(dependencyId);\r\n        if (!dependency || dependency.status !== ComponentStatus.RUNNING) {\r\n          allReady = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (allReady) {\r\n        logger.info(`\u2705 All dependencies ready for: ${component.id}`);\r\n        return;\r\n      }\r\n\r\n      // Wait before checking again\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n    }\r\n\r\n    throw new Error(`Dependency timeout for component: ${component.id}`);\r\n  }\r\n\r\n  /**\r\n   * Start health monitoring for all components\r\n   */\r\n  private startHealthMonitoring(): void {\r\n    if (this.healthCheckInterval) {\r\n      return;\r\n    }\r\n\r\n    logger.info('\uD83C\uDFE5 Starting system health monitoring...');\r\n\r\n    this.healthCheckInterval = setInterval(async () => {\r\n      await this.performHealthChecks();\r\n    }, this.config.healthCheckInterval);\r\n  }\r\n\r\n  /**\r\n   * Stop health monitoring\r\n   */\r\n  private stopHealthMonitoring(): void {\r\n    if (this.healthCheckInterval) {\r\n      clearInterval(this.healthCheckInterval);\r\n      this.healthCheckInterval = undefined;\r\n      logger.info('\uD83C\uDFE5 Health monitoring stopped');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform health checks on all components\r\n   */\r\n  private async performHealthChecks(): Promise<void> {\r\n    for (const component of this.components.values()) {\r\n      if (component.status === ComponentStatus.RUNNING) {\r\n        try {\r\n          const health = await component.healthCheck();\r\n          this.emit('component:health-changed', component, health);\r\n\r\n          // Handle unhealthy components\r\n          if (!health.healthy && this.config.autoRecovery) {\r\n            await this.handleUnhealthyComponent(component, health);\r\n          }\r\n\r\n        } catch (error) {\r\n          logger.error(`\u274C Health check failed for ${component.id}:`, error);\r\n          component.status = ComponentStatus.ERROR;\r\n          this.emit('component:error', component, error as Error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle unhealthy component with recovery attempts\r\n   * \r\n   * @param component Unhealthy component\r\n   * @param health Health status\r\n   */\r\n  private async handleUnhealthyComponent(\r\n    component: SystemComponent,\r\n    health: ComponentHealth\r\n  ): Promise<void> {\r\n    const lastRecovery = this.lastRecoveryAttempt.get(component.id) || 0;\r\n    const now = Date.now();\r\n\r\n    // Check cooldown period\r\n    if (now - lastRecovery < this.config.recoveryCooldown) {\r\n      return;\r\n    }\r\n\r\n    logger.warn(`\u26A0\uFE0F Component unhealthy, attempting recovery: ${component.id}`);\r\n    logger.warn(`Health issues: ${health.issues.join(', ')}`);\r\n\r\n    try {\r\n      this.lastRecoveryAttempt.set(component.id, now);\r\n      await this.restartComponent(component.id);\r\n      logger.info(`\u2705 Component recovery successful: ${component.id}`);\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Component recovery failed: ${component.id}`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup event handlers\r\n   */\r\n  private setupEventHandlers(): void {\r\n    this.on('component:error', (component, error) => {\r\n      logger.error(`Component error: ${component.id}`, error);\r\n    });\r\n\r\n    this.on('component:health-changed', (component, health) => {\r\n      if (!health.healthy) {\r\n        logger.warn(`Component health degraded: ${component.id} (score: ${health.score})`);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Default orchestration configuration\r\n */\r\nexport const defaultOrchestrationConfig: OrchestrationConfig = {\r\n  startupTimeout: 30000,        // 30 seconds\r\n  healthCheckInterval: 30000,   // 30 seconds\r\n  dependencyTimeout: 60000,     // 60 seconds\r\n  maxStartupRetries: 3,\r\n  autoRecovery: true,\r\n  recoveryCooldown: 300000      // 5 minutes\r\n};\r\n\r\n// =============================================================================\r\n// SYSTEM ORCHESTRATION NOTES\r\n// =============================================================================\r\n// 1. Dependency-aware component startup sequencing\r\n// 2. Comprehensive health monitoring and auto-recovery\r\n// 3. Graceful shutdown with proper cleanup procedures\r\n// 4. Event-driven architecture for system coordination\r\n// 5. Retry logic with exponential backoff for resilience\r\n// 6. Audit logging for all orchestration activities\r\n// 7. Timeout handling for startup and dependency resolution\r\n// 8. Component lifecycle management with status tracking\r\n// =============================================================================\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba2296a12372887c736a2ae49bd1f915a070aeb7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bytyo6fy8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bytyo6fy8();
cov_2bytyo6fy8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2bytyo6fy8().s[1]++;
exports.defaultOrchestrationConfig = exports.SystemOrchestrator = exports.ComponentStatus = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[3]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[4]++, require("@/security/audit-service"));
const graceful_shutdown_1 =
/* istanbul ignore next */
(cov_2bytyo6fy8().s[5]++, require("@/core/shutdown/graceful-shutdown"));
/**
 * Component status enumeration
 */
var ComponentStatus;
/* istanbul ignore next */
cov_2bytyo6fy8().s[6]++;
(function (ComponentStatus) {
  /* istanbul ignore next */
  cov_2bytyo6fy8().f[0]++;
  cov_2bytyo6fy8().s[7]++;
  ComponentStatus["UNINITIALIZED"] = "UNINITIALIZED";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[8]++;
  ComponentStatus["INITIALIZING"] = "INITIALIZING";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[9]++;
  ComponentStatus["RUNNING"] = "RUNNING";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[10]++;
  ComponentStatus["STOPPING"] = "STOPPING";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[11]++;
  ComponentStatus["STOPPED"] = "STOPPED";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[12]++;
  ComponentStatus["ERROR"] = "ERROR";
  /* istanbul ignore next */
  cov_2bytyo6fy8().s[13]++;
  ComponentStatus["MAINTENANCE"] = "MAINTENANCE";
})(
/* istanbul ignore next */
(cov_2bytyo6fy8().b[0][0]++, ComponentStatus) ||
/* istanbul ignore next */
(cov_2bytyo6fy8().b[0][1]++, exports.ComponentStatus = ComponentStatus = {}));
/**
 * System orchestrator class
 */
class SystemOrchestrator extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  config;
  components =
  /* istanbul ignore next */
  (cov_2bytyo6fy8().s[14]++, new Map());
  dependencyGraph =
  /* istanbul ignore next */
  (cov_2bytyo6fy8().s[15]++, new Map());
  healthCheckInterval;
  isShuttingDown =
  /* istanbul ignore next */
  (cov_2bytyo6fy8().s[16]++, false);
  startupRetries =
  /* istanbul ignore next */
  (cov_2bytyo6fy8().s[17]++, new Map());
  lastRecoveryAttempt =
  /* istanbul ignore next */
  (cov_2bytyo6fy8().s[18]++, new Map());
  constructor(config) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[1]++;
    cov_2bytyo6fy8().s[19]++;
    super();
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[20]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[21]++;
    this.setupEventHandlers();
  }
  /**
   * Register a system component
   *
   * @param component System component to register
   */
  registerComponent(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[2]++;
    cov_2bytyo6fy8().s[22]++;
    logger_1.logger.info(`📋 Registering component: ${component.id}`);
    // Validate component
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[23]++;
    this.validateComponent(component);
    // Register component
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[24]++;
    this.components.set(component.id, component);
    // Build dependency graph
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[25]++;
    this.buildDependencyGraph(component);
    // Initialize retry counter
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[26]++;
    this.startupRetries.set(component.id, 0);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[27]++;
    logger_1.logger.info(`✅ Component registered: ${component.id}`);
  }
  /**
   * Start all system components in dependency order
   *
   * @returns Promise<void>
   */
  async startSystem() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[3]++;
    cov_2bytyo6fy8().s[28]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[29]++;
      logger_1.logger.info('🚀 Starting system orchestration...');
      // Create audit entry
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[30]++;
      await audit_service_1.auditService.createAuditEntry({
        auditId: `system_start_${Date.now()}`,
        eventType: 'SYSTEM_STARTUP_INITIATED',
        actor: 'SYSTEM_ORCHESTRATOR',
        resource: 'SYSTEM',
        action: 'START_SYSTEM',
        result: 'SUCCESS',
        timestamp: new Date(),
        auditData: {
          componentCount: this.components.size
        }
      });
      // Resolve startup order
      const startupOrder =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[31]++, this.resolveStartupOrder());
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[32]++;
      logger_1.logger.info(`📋 Startup order resolved: ${startupOrder.join(' → ')}`);
      // Start components in order
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[33]++;
      for (const componentId of startupOrder) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[34]++;
        await this.startComponent(componentId);
      }
      // Start health monitoring
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[35]++;
      this.startHealthMonitoring();
      // System is ready
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[36]++;
      this.emit('system:ready');
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[37]++;
      logger_1.logger.info('✅ System orchestration completed - all components running');
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[38]++;
      logger_1.logger.error('❌ System startup failed:', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[39]++;
      this.emit('system:error', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[40]++;
      throw error;
    }
  }
  /**
   * Stop all system components gracefully
   *
   * @returns Promise<void>
   */
  async stopSystem() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[4]++;
    cov_2bytyo6fy8().s[41]++;
    if (this.isShuttingDown) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[1][0]++;
      cov_2bytyo6fy8().s[42]++;
      logger_1.logger.warn('⚠️ System shutdown already in progress');
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[1][1]++;
    }
    cov_2bytyo6fy8().s[44]++;
    this.isShuttingDown = true;
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[45]++;
    logger_1.logger.info('🛑 Initiating system shutdown...');
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[46]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[47]++;
      // Stop health monitoring
      this.stopHealthMonitoring();
      // Create shutdown context
      const shutdownContext =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[48]++, {});
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[49]++;
      for (const [id, component] of this.components) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[50]++;
        shutdownContext[id] = component;
      }
      // Perform graceful shutdown
      const shutdownResult =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[51]++, await (0, graceful_shutdown_1.gracefulShutdown)(shutdownContext, {
        timeout: 60000,
        // 60 seconds
        closePositions: true,
        backupData: true,
        sendNotifications: true,
        emergencyOnTimeout: true
      }));
      // Update component statuses
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[52]++;
      for (const componentId of shutdownResult.successfulComponents) {
        const component =
        /* istanbul ignore next */
        (cov_2bytyo6fy8().s[53]++, this.components.get(componentId));
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[54]++;
        if (component) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[2][0]++;
          cov_2bytyo6fy8().s[55]++;
          component.status = ComponentStatus.STOPPED;
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[2][1]++;
        }
      }
      // Emit shutdown event
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[56]++;
      this.emit('system:shutdown');
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[57]++;
      if (shutdownResult.success) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[3][0]++;
        cov_2bytyo6fy8().s[58]++;
        logger_1.logger.info('✅ System shutdown completed successfully');
      } else {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[3][1]++;
        cov_2bytyo6fy8().s[59]++;
        logger_1.logger.error('❌ System shutdown completed with errors:', shutdownResult.errors);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[60]++;
      logger_1.logger.error('❌ System shutdown failed:', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[61]++;
      this.emit('system:error', error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[62]++;
      throw error;
    }
  }
  /**
   * Get system status
   *
   * @returns System status information
   */
  getSystemStatus() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[5]++;
    const totalComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[63]++, this.components.size);
    let runningComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[64]++, 0);
    let errorComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[65]++, 0);
    let totalHealthScore =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[66]++, 0);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[67]++;
    for (const component of this.components.values()) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[68]++;
      if (component.status === ComponentStatus.RUNNING) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[4][0]++;
        cov_2bytyo6fy8().s[69]++;
        runningComponents++;
      } else {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[4][1]++;
        cov_2bytyo6fy8().s[70]++;
        if (component.status === ComponentStatus.ERROR) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[5][0]++;
          cov_2bytyo6fy8().s[71]++;
          errorComponents++;
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[5][1]++;
        }
      }
    }
    const systemHealth =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[72]++, totalComponents > 0 ?
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[6][0]++, totalHealthScore / totalComponents) :
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[6][1]++, 0));
    const uptime =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[73]++, process.uptime() * 1000);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[74]++;
    return {
      totalComponents,
      runningComponents,
      errorComponents,
      systemHealth,
      uptime
    };
  }
  /**
   * Get component status
   *
   * @param componentId Component identifier
   * @returns Component status or undefined if not found
   */
  getComponentStatus(componentId) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[6]++;
    cov_2bytyo6fy8().s[75]++;
    return this.components.get(componentId);
  }
  /**
   * Restart a specific component
   *
   * @param componentId Component identifier
   * @returns Promise<void>
   */
  async restartComponent(componentId) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[7]++;
    const component =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[76]++, this.components.get(componentId));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[77]++;
    if (!component) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[7][0]++;
      cov_2bytyo6fy8().s[78]++;
      throw new Error(`Component not found: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[7][1]++;
    }
    cov_2bytyo6fy8().s[79]++;
    logger_1.logger.info(`🔄 Restarting component: ${componentId}`);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[80]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[81]++;
      // Stop component
      component.status = ComponentStatus.STOPPING;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[82]++;
      await component.shutdown();
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[83]++;
      component.status = ComponentStatus.STOPPED;
      // Start component
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[84]++;
      await this.startComponent(componentId);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[85]++;
      logger_1.logger.info(`✅ Component restarted successfully: ${componentId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[86]++;
      logger_1.logger.error(`❌ Failed to restart component ${componentId}:`, error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[87]++;
      component.status = ComponentStatus.ERROR;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[88]++;
      this.emit('component:error', component, error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[89]++;
      throw error;
    }
  }
  /**
   * Validate component configuration
   *
   * @param component Component to validate
   */
  validateComponent(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[8]++;
    cov_2bytyo6fy8().s[90]++;
    if (!component.id) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[8][0]++;
      cov_2bytyo6fy8().s[91]++;
      throw new Error('Component must have an ID');
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[8][1]++;
    }
    cov_2bytyo6fy8().s[92]++;
    if (this.components.has(component.id)) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[9][0]++;
      cov_2bytyo6fy8().s[93]++;
      throw new Error(`Component already registered: ${component.id}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[9][1]++;
    }
    cov_2bytyo6fy8().s[94]++;
    if (!Array.isArray(component.dependencies)) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[10][0]++;
      cov_2bytyo6fy8().s[95]++;
      throw new Error(`Component dependencies must be an array: ${component.id}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[10][1]++;
    }
    cov_2bytyo6fy8().s[96]++;
    if (typeof component.priority !== 'number') {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[11][0]++;
      cov_2bytyo6fy8().s[97]++;
      throw new Error(`Component priority must be a number: ${component.id}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[11][1]++;
    }
  }
  /**
   * Build dependency graph for component
   *
   * @param component Component to build graph for
   */
  buildDependencyGraph(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[9]++;
    cov_2bytyo6fy8().s[98]++;
    if (!this.dependencyGraph.has(component.id)) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[12][0]++;
      cov_2bytyo6fy8().s[99]++;
      this.dependencyGraph.set(component.id, new Set());
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[12][1]++;
    }
    cov_2bytyo6fy8().s[100]++;
    for (const dependency of component.dependencies) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[101]++;
      this.dependencyGraph.get(component.id).add(dependency);
    }
  }
  /**
   * Resolve startup order based on dependencies and priorities
   *
   * @returns Array of component IDs in startup order
   */
  resolveStartupOrder() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[10]++;
    const visited =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[102]++, new Set());
    const visiting =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[103]++, new Set());
    const order =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[104]++, []);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[105]++;
    const visit = componentId => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[11]++;
      cov_2bytyo6fy8().s[106]++;
      if (visiting.has(componentId)) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[13][0]++;
        cov_2bytyo6fy8().s[107]++;
        throw new Error(`Circular dependency detected: ${componentId}`);
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[13][1]++;
      }
      cov_2bytyo6fy8().s[108]++;
      if (visited.has(componentId)) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[14][0]++;
        cov_2bytyo6fy8().s[109]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[14][1]++;
      }
      cov_2bytyo6fy8().s[110]++;
      visiting.add(componentId);
      const dependencies =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[111]++,
      /* istanbul ignore next */
      (cov_2bytyo6fy8().b[15][0]++, this.dependencyGraph.get(componentId)) ||
      /* istanbul ignore next */
      (cov_2bytyo6fy8().b[15][1]++, new Set()));
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[112]++;
      for (const dependency of dependencies) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[113]++;
        if (!this.components.has(dependency)) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[16][0]++;
          cov_2bytyo6fy8().s[114]++;
          throw new Error(`Missing dependency: ${dependency} for component: ${componentId}`);
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[16][1]++;
        }
        cov_2bytyo6fy8().s[115]++;
        visit(dependency);
      }
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[116]++;
      visiting.delete(componentId);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[117]++;
      visited.add(componentId);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[118]++;
      order.push(componentId);
    };
    // Sort components by priority first
    const sortedComponents =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[119]++, Array.from(this.components.values()).sort((a, b) => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[12]++;
      cov_2bytyo6fy8().s[120]++;
      return a.priority - b.priority;
    }));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[121]++;
    for (const component of sortedComponents) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[122]++;
      visit(component.id);
    }
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[123]++;
    return order;
  }
  /**
   * Start a specific component
   *
   * @param componentId Component identifier
   * @returns Promise<void>
   */
  async startComponent(componentId) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[13]++;
    const component =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[124]++, this.components.get(componentId));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[125]++;
    if (!component) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[17][0]++;
      cov_2bytyo6fy8().s[126]++;
      throw new Error(`Component not found: ${componentId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[17][1]++;
    }
    const retryCount =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[127]++,
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[18][0]++, this.startupRetries.get(componentId)) ||
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[18][1]++, 0));
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[128]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[129]++;
      logger_1.logger.info(`🚀 Starting component: ${componentId} (attempt ${retryCount + 1})`);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[130]++;
      component.status = ComponentStatus.INITIALIZING;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[131]++;
      this.emit('component:initialized', component);
      // Wait for dependencies
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[132]++;
      await this.waitForDependencies(component);
      // Initialize component with timeout
      const initPromise =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[133]++, component.initialize());
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[134]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2bytyo6fy8().f[14]++;
        cov_2bytyo6fy8().s[135]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2bytyo6fy8().f[15]++;
          cov_2bytyo6fy8().s[136]++;
          reject(new Error(`Component initialization timeout: ${componentId}`));
        }, this.config.startupTimeout);
      }));
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[137]++;
      await Promise.race([initPromise, timeoutPromise]);
      // Update status
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[138]++;
      component.status = ComponentStatus.RUNNING;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[139]++;
      this.emit('component:started', component);
      // Reset retry counter
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[140]++;
      this.startupRetries.set(componentId, 0);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[141]++;
      logger_1.logger.info(`✅ Component started successfully: ${componentId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[142]++;
      logger_1.logger.error(`❌ Failed to start component ${componentId}:`, error);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[143]++;
      component.status = ComponentStatus.ERROR;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[144]++;
      this.emit('component:error', component, error);
      // Handle retries
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[145]++;
      if (retryCount < this.config.maxStartupRetries) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[19][0]++;
        cov_2bytyo6fy8().s[146]++;
        this.startupRetries.set(componentId, retryCount + 1);
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[147]++;
        logger_1.logger.info(`🔄 Retrying component startup: ${componentId} (${retryCount + 1}/${this.config.maxStartupRetries})`);
        // Wait before retry
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[148]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_2bytyo6fy8().f[16]++;
          cov_2bytyo6fy8().s[149]++;
          return setTimeout(resolve, 2000 * (retryCount + 1));
        });
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[150]++;
        return this.startComponent(componentId);
      } else {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[19][1]++;
        cov_2bytyo6fy8().s[151]++;
        throw new Error(`Component startup failed after ${this.config.maxStartupRetries} retries: ${componentId}`);
      }
    }
  }
  /**
   * Wait for component dependencies to be ready
   *
   * @param component Component to wait for dependencies
   * @returns Promise<void>
   */
  async waitForDependencies(component) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[17]++;
    const dependencies =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[152]++, component.dependencies);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[153]++;
    if (dependencies.length === 0) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[20][0]++;
      cov_2bytyo6fy8().s[154]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[20][1]++;
    }
    cov_2bytyo6fy8().s[155]++;
    logger_1.logger.info(`⏳ Waiting for dependencies: ${dependencies.join(', ')}`);
    const startTime =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[156]++, Date.now());
    const timeout =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[157]++, this.config.dependencyTimeout);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[158]++;
    while (Date.now() - startTime < timeout) {
      let allReady =
      /* istanbul ignore next */
      (cov_2bytyo6fy8().s[159]++, true);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[160]++;
      for (const dependencyId of dependencies) {
        const dependency =
        /* istanbul ignore next */
        (cov_2bytyo6fy8().s[161]++, this.components.get(dependencyId));
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[162]++;
        if (
        /* istanbul ignore next */
        (cov_2bytyo6fy8().b[22][0]++, !dependency) ||
        /* istanbul ignore next */
        (cov_2bytyo6fy8().b[22][1]++, dependency.status !== ComponentStatus.RUNNING)) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().b[21][0]++;
          cov_2bytyo6fy8().s[163]++;
          allReady = false;
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[164]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_2bytyo6fy8().b[21][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[165]++;
      if (allReady) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[23][0]++;
        cov_2bytyo6fy8().s[166]++;
        logger_1.logger.info(`✅ All dependencies ready for: ${component.id}`);
        /* istanbul ignore next */
        cov_2bytyo6fy8().s[167]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[23][1]++;
      }
      // Wait before checking again
      cov_2bytyo6fy8().s[168]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2bytyo6fy8().f[18]++;
        cov_2bytyo6fy8().s[169]++;
        return setTimeout(resolve, 1000);
      });
    }
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[170]++;
    throw new Error(`Dependency timeout for component: ${component.id}`);
  }
  /**
   * Start health monitoring for all components
   */
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[19]++;
    cov_2bytyo6fy8().s[171]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[24][0]++;
      cov_2bytyo6fy8().s[172]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[24][1]++;
    }
    cov_2bytyo6fy8().s[173]++;
    logger_1.logger.info('🏥 Starting system health monitoring...');
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[174]++;
    this.healthCheckInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[20]++;
      cov_2bytyo6fy8().s[175]++;
      await this.performHealthChecks();
    }, this.config.healthCheckInterval);
  }
  /**
   * Stop health monitoring
   */
  stopHealthMonitoring() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[21]++;
    cov_2bytyo6fy8().s[176]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[25][0]++;
      cov_2bytyo6fy8().s[177]++;
      clearInterval(this.healthCheckInterval);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[178]++;
      this.healthCheckInterval = undefined;
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[179]++;
      logger_1.logger.info('🏥 Health monitoring stopped');
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[25][1]++;
    }
  }
  /**
   * Perform health checks on all components
   */
  async performHealthChecks() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[22]++;
    cov_2bytyo6fy8().s[180]++;
    for (const component of this.components.values()) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[181]++;
      if (component.status === ComponentStatus.RUNNING) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[26][0]++;
        cov_2bytyo6fy8().s[182]++;
        try {
          const health =
          /* istanbul ignore next */
          (cov_2bytyo6fy8().s[183]++, await component.healthCheck());
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[184]++;
          this.emit('component:health-changed', component, health);
          // Handle unhealthy components
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[185]++;
          if (
          /* istanbul ignore next */
          (cov_2bytyo6fy8().b[28][0]++, !health.healthy) &&
          /* istanbul ignore next */
          (cov_2bytyo6fy8().b[28][1]++, this.config.autoRecovery)) {
            /* istanbul ignore next */
            cov_2bytyo6fy8().b[27][0]++;
            cov_2bytyo6fy8().s[186]++;
            await this.handleUnhealthyComponent(component, health);
          } else
          /* istanbul ignore next */
          {
            cov_2bytyo6fy8().b[27][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[187]++;
          logger_1.logger.error(`❌ Health check failed for ${component.id}:`, error);
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[188]++;
          component.status = ComponentStatus.ERROR;
          /* istanbul ignore next */
          cov_2bytyo6fy8().s[189]++;
          this.emit('component:error', component, error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[26][1]++;
      }
    }
  }
  /**
   * Handle unhealthy component with recovery attempts
   *
   * @param component Unhealthy component
   * @param health Health status
   */
  async handleUnhealthyComponent(component, health) {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[23]++;
    const lastRecovery =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[190]++,
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[29][0]++, this.lastRecoveryAttempt.get(component.id)) ||
    /* istanbul ignore next */
    (cov_2bytyo6fy8().b[29][1]++, 0));
    const now =
    /* istanbul ignore next */
    (cov_2bytyo6fy8().s[191]++, Date.now());
    // Check cooldown period
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[192]++;
    if (now - lastRecovery < this.config.recoveryCooldown) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().b[30][0]++;
      cov_2bytyo6fy8().s[193]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2bytyo6fy8().b[30][1]++;
    }
    cov_2bytyo6fy8().s[194]++;
    logger_1.logger.warn(`⚠️ Component unhealthy, attempting recovery: ${component.id}`);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[195]++;
    logger_1.logger.warn(`Health issues: ${health.issues.join(', ')}`);
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[196]++;
    try {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[197]++;
      this.lastRecoveryAttempt.set(component.id, now);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[198]++;
      await this.restartComponent(component.id);
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[199]++;
      logger_1.logger.info(`✅ Component recovery successful: ${component.id}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2bytyo6fy8().s[200]++;
      logger_1.logger.error(`❌ Component recovery failed: ${component.id}`, error);
    }
  }
  /**
   * Setup event handlers
   */
  setupEventHandlers() {
    /* istanbul ignore next */
    cov_2bytyo6fy8().f[24]++;
    cov_2bytyo6fy8().s[201]++;
    this.on('component:error', (component, error) => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[25]++;
      cov_2bytyo6fy8().s[202]++;
      logger_1.logger.error(`Component error: ${component.id}`, error);
    });
    /* istanbul ignore next */
    cov_2bytyo6fy8().s[203]++;
    this.on('component:health-changed', (component, health) => {
      /* istanbul ignore next */
      cov_2bytyo6fy8().f[26]++;
      cov_2bytyo6fy8().s[204]++;
      if (!health.healthy) {
        /* istanbul ignore next */
        cov_2bytyo6fy8().b[31][0]++;
        cov_2bytyo6fy8().s[205]++;
        logger_1.logger.warn(`Component health degraded: ${component.id} (score: ${health.score})`);
      } else
      /* istanbul ignore next */
      {
        cov_2bytyo6fy8().b[31][1]++;
      }
    });
  }
}
/* istanbul ignore next */
cov_2bytyo6fy8().s[206]++;
exports.SystemOrchestrator = SystemOrchestrator;
/**
 * Default orchestration configuration
 */
/* istanbul ignore next */
cov_2bytyo6fy8().s[207]++;
exports.defaultOrchestrationConfig = {
  startupTimeout: 30000,
  // 30 seconds
  healthCheckInterval: 30000,
  // 30 seconds
  dependencyTimeout: 60000,
  // 60 seconds
  maxStartupRetries: 3,
  autoRecovery: true,
  recoveryCooldown: 300000 // 5 minutes
};
// =============================================================================
// SYSTEM ORCHESTRATION NOTES
// =============================================================================
// 1. Dependency-aware component startup sequencing
// 2. Comprehensive health monitoring and auto-recovery
// 3. Graceful shutdown with proper cleanup procedures
// 4. Event-driven architecture for system coordination
// 5. Retry logic with exponential backoff for resilience
// 6. Audit logging for all orchestration activities
// 7. Timeout handling for startup and dependency resolution
// 8. Component lifecycle management with status tracking
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,