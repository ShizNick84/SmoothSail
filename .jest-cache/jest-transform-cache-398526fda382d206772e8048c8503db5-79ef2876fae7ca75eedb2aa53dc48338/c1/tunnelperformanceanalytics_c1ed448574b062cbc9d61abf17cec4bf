551f2f00fcc7ea152140224170d3ebd2
"use strict";

/* istanbul ignore next */
function cov_ynqe030dn() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\tunnel-performance-analytics.ts";
  var hash = "048cec8909fa6d73f0a7ea2ee0523d7d819e146f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\tunnel-performance-analytics.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 65
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "5": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "6": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "7": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "8": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "9": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "10": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 66
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 16
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 35
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 82
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 79
        }
      },
      "26": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 19
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 33
        }
      },
      "28": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 65
        }
      },
      "29": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 66,
          column: 66
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "31": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "33": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 38
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 39
        }
      },
      "35": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "36": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 75
        }
      },
      "37": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "38": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 34
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "40": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "41": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 36
        }
      },
      "42": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "43": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "44": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 47
        }
      },
      "45": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 39
        }
      },
      "46": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 39
        }
      },
      "47": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "48": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 89
        }
      },
      "49": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "50": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 97
        }
      },
      "51": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 51
        }
      },
      "52": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 119,
          column: 42
        }
      },
      "53": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "54": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 64
        }
      },
      "55": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 110
        }
      },
      "56": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 61
        }
      },
      "57": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 74
        }
      },
      "58": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "59": {
        start: {
          line: 130,
          column: 25
        },
        end: {
          line: 130,
          column: 67
        }
      },
      "60": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "61": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 36
        }
      },
      "62": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 58
        }
      },
      "63": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 100
        }
      },
      "64": {
        start: {
          line: 146,
          column: 19
        },
        end: {
          line: 146,
          column: 63
        }
      },
      "65": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "66": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 73
        }
      },
      "67": {
        start: {
          line: 149,
          column: 40
        },
        end: {
          line: 149,
          column: 71
        }
      },
      "68": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "69": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 112
        }
      },
      "70": {
        start: {
          line: 153,
          column: 40
        },
        end: {
          line: 153,
          column: 110
        }
      },
      "71": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 25
        }
      },
      "72": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "73": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 24
        }
      },
      "74": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 30
        }
      },
      "75": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "76": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "77": {
        start: {
          line: 175,
          column: 21
        },
        end: {
          line: 175,
          column: 77
        }
      },
      "78": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "79": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 24
        }
      },
      "80": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 53
        }
      },
      "81": {
        start: {
          line: 180,
          column: 41
        },
        end: {
          line: 180,
          column: 52
        }
      },
      "82": {
        start: {
          line: 181,
          column: 27
        },
        end: {
          line: 181,
          column: 71
        }
      },
      "83": {
        start: {
          line: 181,
          column: 45
        },
        end: {
          line: 181,
          column: 70
        }
      },
      "84": {
        start: {
          line: 182,
          column: 22
        },
        end: {
          line: 182,
          column: 61
        }
      },
      "85": {
        start: {
          line: 183,
          column: 22
        },
        end: {
          line: 183,
          column: 54
        }
      },
      "86": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "87": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 30
        }
      },
      "88": {
        start: {
          line: 207,
          column: 33
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "89": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 211,
          column: 51
        }
      },
      "90": {
        start: {
          line: 212,
          column: 23
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "91": {
        start: {
          line: 224,
          column: 25
        },
        end: {
          line: 224,
          column: 26
        }
      },
      "92": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 225,
          column: 27
        }
      },
      "93": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "94": {
        start: {
          line: 228,
          column: 25
        },
        end: {
          line: 228,
          column: 81
        }
      },
      "95": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 230,
          column: 25
        }
      },
      "96": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 25
        }
      },
      "97": {
        start: {
          line: 231,
          column: 26
        },
        end: {
          line: 231,
          column: 76
        }
      },
      "98": {
        start: {
          line: 232,
          column: 33
        },
        end: {
          line: 232,
          column: 60
        }
      },
      "99": {
        start: {
          line: 233,
          column: 33
        },
        end: {
          line: 233,
          column: 96
        }
      },
      "100": {
        start: {
          line: 233,
          column: 61
        },
        end: {
          line: 233,
          column: 78
        }
      },
      "101": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 234,
          column: 79
        }
      },
      "102": {
        start: {
          line: 235,
          column: 36
        },
        end: {
          line: 235,
          column: 97
        }
      },
      "103": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 242,
          column: 14
        }
      },
      "104": {
        start: {
          line: 244,
          column: 32
        },
        end: {
          line: 244,
          column: 83
        }
      },
      "105": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 38
        }
      },
      "106": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 26
        }
      },
      "107": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "108": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 91
        }
      },
      "109": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 92
        }
      },
      "110": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 68
        }
      },
      "111": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 77
        }
      },
      "112": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "113": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 45
        }
      },
      "114": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 22
        }
      },
      "115": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 40
        }
      },
      "116": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 51
        }
      },
      "117": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 87
        }
      },
      "118": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 61
        }
      },
      "119": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "120": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "121": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 65
        }
      },
      "122": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "123": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 60
        }
      },
      "124": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 358,
          column: 11
        }
      },
      "125": {
        start: {
          line: 366,
          column: 27
        },
        end: {
          line: 366,
          column: 73
        }
      },
      "126": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 368,
          column: 19
        }
      },
      "127": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 19
        }
      },
      "128": {
        start: {
          line: 369,
          column: 26
        },
        end: {
          line: 369,
          column: 36
        }
      },
      "129": {
        start: {
          line: 370,
          column: 27
        },
        end: {
          line: 370,
          column: 29
        }
      },
      "130": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "131": {
        start: {
          line: 373,
          column: 34
        },
        end: {
          line: 373,
          column: 83
        }
      },
      "132": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 394,
          column: 13
        }
      },
      "133": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 393,
          column: 19
        }
      },
      "134": {
        start: {
          line: 396,
          column: 31
        },
        end: {
          line: 396,
          column: 76
        }
      },
      "135": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 423,
          column: 13
        }
      },
      "136": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 410,
          column: 19
        }
      },
      "137": {
        start: {
          line: 412,
          column: 38
        },
        end: {
          line: 412,
          column: 67
        }
      },
      "138": {
        start: {
          line: 413,
          column: 34
        },
        end: {
          line: 415,
          column: 23
        }
      },
      "139": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 422,
          column: 19
        }
      },
      "140": {
        start: {
          line: 425,
          column: 35
        },
        end: {
          line: 425,
          column: 79
        }
      },
      "141": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 47
        }
      },
      "142": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 46
        }
      },
      "143": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "144": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 431,
          column: 56
        }
      },
      "145": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 106
        }
      },
      "146": {
        start: {
          line: 444,
          column: 21
        },
        end: {
          line: 444,
          column: 59
        }
      },
      "147": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 446,
          column: 19
        }
      },
      "148": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 19
        }
      },
      "149": {
        start: {
          line: 447,
          column: 27
        },
        end: {
          line: 447,
          column: 67
        }
      },
      "150": {
        start: {
          line: 448,
          column: 29
        },
        end: {
          line: 448,
          column: 89
        }
      },
      "151": {
        start: {
          line: 448,
          column: 50
        },
        end: {
          line: 448,
          column: 88
        }
      },
      "152": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 61
        }
      },
      "153": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 507,
          column: 9
        }
      },
      "154": {
        start: {
          line: 458,
          column: 30
        },
        end: {
          line: 458,
          column: 79
        }
      },
      "155": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 460,
          column: 25
        }
      },
      "156": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 25
        }
      },
      "157": {
        start: {
          line: 461,
          column: 33
        },
        end: {
          line: 461,
          column: 38
        }
      },
      "158": {
        start: {
          line: 462,
          column: 31
        },
        end: {
          line: 462,
          column: 33
        }
      },
      "159": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 490,
          column: 13
        }
      },
      "160": {
        start: {
          line: 466,
          column: 20
        },
        end: {
          line: 469,
          column: 21
        }
      },
      "161": {
        start: {
          line: 467,
          column: 24
        },
        end: {
          line: 467,
          column: 46
        }
      },
      "162": {
        start: {
          line: 468,
          column: 24
        },
        end: {
          line: 468,
          column: 121
        }
      },
      "163": {
        start: {
          line: 470,
          column: 20
        },
        end: {
          line: 470,
          column: 26
        }
      },
      "164": {
        start: {
          line: 473,
          column: 20
        },
        end: {
          line: 476,
          column: 21
        }
      },
      "165": {
        start: {
          line: 474,
          column: 24
        },
        end: {
          line: 474,
          column: 46
        }
      },
      "166": {
        start: {
          line: 475,
          column: 24
        },
        end: {
          line: 475,
          column: 121
        }
      },
      "167": {
        start: {
          line: 477,
          column: 20
        },
        end: {
          line: 477,
          column: 26
        }
      },
      "168": {
        start: {
          line: 479,
          column: 20
        },
        end: {
          line: 482,
          column: 21
        }
      },
      "169": {
        start: {
          line: 480,
          column: 24
        },
        end: {
          line: 480,
          column: 46
        }
      },
      "170": {
        start: {
          line: 481,
          column: 24
        },
        end: {
          line: 481,
          column: 120
        }
      },
      "171": {
        start: {
          line: 483,
          column: 20
        },
        end: {
          line: 483,
          column: 26
        }
      },
      "172": {
        start: {
          line: 485,
          column: 20
        },
        end: {
          line: 488,
          column: 21
        }
      },
      "173": {
        start: {
          line: 486,
          column: 24
        },
        end: {
          line: 486,
          column: 46
        }
      },
      "174": {
        start: {
          line: 487,
          column: 24
        },
        end: {
          line: 487,
          column: 120
        }
      },
      "175": {
        start: {
          line: 489,
          column: 20
        },
        end: {
          line: 489,
          column: 26
        }
      },
      "176": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 506,
          column: 13
        }
      },
      "177": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 497,
          column: 19
        }
      },
      "178": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 505,
          column: 19
        }
      },
      "179": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "180": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 79
        }
      },
      "181": {
        start: {
          line: 521,
          column: 18
        },
        end: {
          line: 521,
          column: 31
        }
      },
      "182": {
        start: {
          line: 522,
          column: 21
        },
        end: {
          line: 522,
          column: 62
        }
      },
      "183": {
        start: {
          line: 522,
          column: 51
        },
        end: {
          line: 522,
          column: 58
        }
      },
      "184": {
        start: {
          line: 523,
          column: 21
        },
        end: {
          line: 523,
          column: 58
        }
      },
      "185": {
        start: {
          line: 523,
          column: 47
        },
        end: {
          line: 523,
          column: 54
        }
      },
      "186": {
        start: {
          line: 524,
          column: 22
        },
        end: {
          line: 524,
          column: 78
        }
      },
      "187": {
        start: {
          line: 524,
          column: 55
        },
        end: {
          line: 524,
          column: 74
        }
      },
      "188": {
        start: {
          line: 525,
          column: 22
        },
        end: {
          line: 525,
          column: 67
        }
      },
      "189": {
        start: {
          line: 525,
          column: 52
        },
        end: {
          line: 525,
          column: 63
        }
      },
      "190": {
        start: {
          line: 526,
          column: 22
        },
        end: {
          line: 526,
          column: 75
        }
      },
      "191": {
        start: {
          line: 527,
          column: 26
        },
        end: {
          line: 527,
          column: 51
        }
      },
      "192": {
        start: {
          line: 529,
          column: 22
        },
        end: {
          line: 529,
          column: 30
        }
      },
      "193": {
        start: {
          line: 530,
          column: 22
        },
        end: {
          line: 533,
          column: 13
        }
      },
      "194": {
        start: {
          line: 531,
          column: 30
        },
        end: {
          line: 531,
          column: 63
        }
      },
      "195": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 532,
          column: 52
        }
      },
      "196": {
        start: {
          line: 534,
          column: 22
        },
        end: {
          line: 534,
          column: 80
        }
      },
      "197": {
        start: {
          line: 534,
          column: 48
        },
        end: {
          line: 534,
          column: 76
        }
      },
      "198": {
        start: {
          line: 535,
          column: 25
        },
        end: {
          line: 535,
          column: 44
        }
      },
      "199": {
        start: {
          line: 537,
          column: 27
        },
        end: {
          line: 537,
          column: 36
        }
      },
      "200": {
        start: {
          line: 538,
          column: 26
        },
        end: {
          line: 538,
          column: 51
        }
      },
      "201": {
        start: {
          line: 539,
          column: 33
        },
        end: {
          line: 539,
          column: 101
        }
      },
      "202": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 549,
          column: 9
        }
      },
      "203": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 33
        }
      },
      "204": {
        start: {
          line: 544,
          column: 13
        },
        end: {
          line: 549,
          column: 9
        }
      },
      "205": {
        start: {
          line: 545,
          column: 12
        },
        end: {
          line: 545,
          column: 36
        }
      },
      "206": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 36
        }
      },
      "207": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 554,
          column: 10
        }
      },
      "208": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 565,
          column: 9
        }
      },
      "209": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 69
        }
      },
      "210": {
        start: {
          line: 566,
          column: 21
        },
        end: {
          line: 566,
          column: 74
        }
      },
      "211": {
        start: {
          line: 566,
          column: 47
        },
        end: {
          line: 566,
          column: 54
        }
      },
      "212": {
        start: {
          line: 567,
          column: 20
        },
        end: {
          line: 567,
          column: 39
        }
      },
      "213": {
        start: {
          line: 568,
          column: 20
        },
        end: {
          line: 568,
          column: 39
        }
      },
      "214": {
        start: {
          line: 569,
          column: 25
        },
        end: {
          line: 569,
          column: 98
        }
      },
      "215": {
        start: {
          line: 569,
          column: 51
        },
        end: {
          line: 569,
          column: 78
        }
      },
      "216": {
        start: {
          line: 570,
          column: 34
        },
        end: {
          line: 570,
          column: 53
        }
      },
      "217": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 571,
          column: 53
        }
      },
      "218": {
        start: {
          line: 581,
          column: 26
        },
        end: {
          line: 581,
          column: 57
        }
      },
      "219": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 583,
          column: 32
        }
      },
      "220": {
        start: {
          line: 583,
          column: 12
        },
        end: {
          line: 583,
          column: 32
        }
      },
      "221": {
        start: {
          line: 585,
          column: 30
        },
        end: {
          line: 585,
          column: 125
        }
      },
      "222": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 604,
          column: 9
        }
      },
      "223": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 588,
          column: 35
        }
      },
      "224": {
        start: {
          line: 588,
          column: 16
        },
        end: {
          line: 588,
          column: 35
        }
      },
      "225": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 590,
          column: 30
        }
      },
      "226": {
        start: {
          line: 590,
          column: 16
        },
        end: {
          line: 590,
          column: 30
        }
      },
      "227": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 592,
          column: 36
        }
      },
      "228": {
        start: {
          line: 592,
          column: 16
        },
        end: {
          line: 592,
          column: 36
        }
      },
      "229": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 593,
          column: 26
        }
      },
      "230": {
        start: {
          line: 597,
          column: 12
        },
        end: {
          line: 598,
          column: 35
        }
      },
      "231": {
        start: {
          line: 598,
          column: 16
        },
        end: {
          line: 598,
          column: 35
        }
      },
      "232": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 600,
          column: 30
        }
      },
      "233": {
        start: {
          line: 600,
          column: 16
        },
        end: {
          line: 600,
          column: 30
        }
      },
      "234": {
        start: {
          line: 601,
          column: 12
        },
        end: {
          line: 602,
          column: 36
        }
      },
      "235": {
        start: {
          line: 602,
          column: 16
        },
        end: {
          line: 602,
          column: 36
        }
      },
      "236": {
        start: {
          line: 603,
          column: 12
        },
        end: {
          line: 603,
          column: 26
        }
      },
      "237": {
        start: {
          line: 614,
          column: 23
        },
        end: {
          line: 614,
          column: 65
        }
      },
      "238": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 621,
          column: 9
        }
      },
      "239": {
        start: {
          line: 616,
          column: 30
        },
        end: {
          line: 616,
          column: 41
        }
      },
      "240": {
        start: {
          line: 617,
          column: 25
        },
        end: {
          line: 617,
          column: 35
        }
      },
      "241": {
        start: {
          line: 618,
          column: 31
        },
        end: {
          line: 618,
          column: 41
        }
      },
      "242": {
        start: {
          line: 619,
          column: 25
        },
        end: {
          line: 619,
          column: 35
        }
      },
      "243": {
        start: {
          line: 620,
          column: 21
        },
        end: {
          line: 620,
          column: 31
        }
      },
      "244": {
        start: {
          line: 632,
          column: 32
        },
        end: {
          line: 632,
          column: 34
        }
      },
      "245": {
        start: {
          line: 633,
          column: 23
        },
        end: {
          line: 633,
          column: 65
        }
      },
      "246": {
        start: {
          line: 634,
          column: 8
        },
        end: {
          line: 655,
          column: 9
        }
      },
      "247": {
        start: {
          line: 635,
          column: 12
        },
        end: {
          line: 654,
          column: 13
        }
      },
      "248": {
        start: {
          line: 637,
          column: 20
        },
        end: {
          line: 637,
          column: 112
        }
      },
      "249": {
        start: {
          line: 638,
          column: 20
        },
        end: {
          line: 638,
          column: 26
        }
      },
      "250": {
        start: {
          line: 640,
          column: 20
        },
        end: {
          line: 640,
          column: 98
        }
      },
      "251": {
        start: {
          line: 641,
          column: 20
        },
        end: {
          line: 641,
          column: 26
        }
      },
      "252": {
        start: {
          line: 643,
          column: 20
        },
        end: {
          line: 643,
          column: 107
        }
      },
      "253": {
        start: {
          line: 644,
          column: 20
        },
        end: {
          line: 644,
          column: 26
        }
      },
      "254": {
        start: {
          line: 646,
          column: 20
        },
        end: {
          line: 646,
          column: 102
        }
      },
      "255": {
        start: {
          line: 647,
          column: 20
        },
        end: {
          line: 647,
          column: 26
        }
      },
      "256": {
        start: {
          line: 649,
          column: 20
        },
        end: {
          line: 649,
          column: 105
        }
      },
      "257": {
        start: {
          line: 650,
          column: 20
        },
        end: {
          line: 650,
          column: 26
        }
      },
      "258": {
        start: {
          line: 652,
          column: 20
        },
        end: {
          line: 652,
          column: 98
        }
      },
      "259": {
        start: {
          line: 653,
          column: 20
        },
        end: {
          line: 653,
          column: 26
        }
      },
      "260": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 658,
          column: 9
        }
      },
      "261": {
        start: {
          line: 657,
          column: 12
        },
        end: {
          line: 657,
          column: 109
        }
      },
      "262": {
        start: {
          line: 659,
          column: 8
        },
        end: {
          line: 659,
          column: 31
        }
      },
      "263": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 667,
          column: 9
        }
      },
      "264": {
        start: {
          line: 666,
          column: 12
        },
        end: {
          line: 666,
          column: 47
        }
      },
      "265": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 679,
          column: 39
        }
      },
      "266": {
        start: {
          line: 669,
          column: 32
        },
        end: {
          line: 669,
          column: 70
        }
      },
      "267": {
        start: {
          line: 670,
          column: 12
        },
        end: {
          line: 678,
          column: 13
        }
      },
      "268": {
        start: {
          line: 671,
          column: 16
        },
        end: {
          line: 677,
          column: 17
        }
      },
      "269": {
        start: {
          line: 672,
          column: 35
        },
        end: {
          line: 672,
          column: 69
        }
      },
      "270": {
        start: {
          line: 673,
          column: 20
        },
        end: {
          line: 673,
          column: 57
        }
      },
      "271": {
        start: {
          line: 676,
          column: 20
        },
        end: {
          line: 676,
          column: 116
        }
      },
      "272": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 68
        }
      },
      "273": {
        start: {
          line: 686,
          column: 8
        },
        end: {
          line: 686,
          column: 30
        }
      },
      "274": {
        start: {
          line: 687,
          column: 8
        },
        end: {
          line: 687,
          column: 37
        }
      },
      "275": {
        start: {
          line: 688,
          column: 8
        },
        end: {
          line: 688,
          column: 75
        }
      },
      "276": {
        start: {
          line: 691,
          column: 0
        },
        end: {
          line: 691,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 1
          },
          end: {
            line: 9,
            column: 2
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 76
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 21
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 79
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 47
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 103
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 38
          }
        },
        loc: {
          start: {
            line: 112,
            column: 49
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 112
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 122,
            column: 20
          }
        },
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 66
          }
        },
        line: 122
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 46
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 129
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 60
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 145
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 149,
            column: 31
          },
          end: {
            line: 149,
            column: 32
          }
        },
        loc: {
          start: {
            line: 149,
            column: 40
          },
          end: {
            line: 149,
            column: 71
          }
        },
        line: 149
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 32
          }
        },
        loc: {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 110
          }
        },
        line: 153
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 165
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 180,
            column: 33
          }
        },
        loc: {
          start: {
            line: 180,
            column: 41
          },
          end: {
            line: 180,
            column: 52
          }
        },
        line: 180
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 181,
            column: 36
          },
          end: {
            line: 181,
            column: 37
          }
        },
        loc: {
          start: {
            line: 181,
            column: 45
          },
          end: {
            line: 181,
            column: 70
          }
        },
        line: 181
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 44
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 205
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 233,
            column: 45
          },
          end: {
            line: 233,
            column: 46
          }
        },
        loc: {
          start: {
            line: 233,
            column: 61
          },
          end: {
            line: 233,
            column: 78
          }
        },
        line: 233
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 270
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 43
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 279
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 26
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 287
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 289,
            column: 49
          },
          end: {
            line: 289,
            column: 50
          }
        },
        loc: {
          start: {
            line: 289,
            column: 65
          },
          end: {
            line: 293,
            column: 9
          }
        },
        line: 289
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 295,
            column: 52
          },
          end: {
            line: 295,
            column: 53
          }
        },
        loc: {
          start: {
            line: 295,
            column: 68
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 295
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 27
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 302
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 47
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 365
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 33
          },
          end: {
            line: 450,
            column: 5
          }
        },
        line: 443
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 448,
            column: 41
          },
          end: {
            line: 448,
            column: 42
          }
        },
        loc: {
          start: {
            line: 448,
            column: 50
          },
          end: {
            line: 448,
            column: 88
          }
        },
        line: 448
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 39
          },
          end: {
            line: 508,
            column: 5
          }
        },
        line: 456
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 39
          },
          end: {
            line: 555,
            column: 5
          }
        },
        line: 516
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 522,
            column: 39
          },
          end: {
            line: 522,
            column: 40
          }
        },
        loc: {
          start: {
            line: 522,
            column: 51
          },
          end: {
            line: 522,
            column: 58
          }
        },
        line: 522
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 523,
            column: 35
          },
          end: {
            line: 523,
            column: 36
          }
        },
        loc: {
          start: {
            line: 523,
            column: 47
          },
          end: {
            line: 523,
            column: 54
          }
        },
        line: 523
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 524,
            column: 40
          },
          end: {
            line: 524,
            column: 41
          }
        },
        loc: {
          start: {
            line: 524,
            column: 55
          },
          end: {
            line: 524,
            column: 74
          }
        },
        line: 524
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 525,
            column: 40
          },
          end: {
            line: 525,
            column: 41
          }
        },
        loc: {
          start: {
            line: 525,
            column: 52
          },
          end: {
            line: 525,
            column: 63
          }
        },
        line: 525
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 530,
            column: 36
          },
          end: {
            line: 530,
            column: 37
          }
        },
        loc: {
          start: {
            line: 530,
            column: 51
          },
          end: {
            line: 533,
            column: 9
          }
        },
        line: 530
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 534,
            column: 36
          },
          end: {
            line: 534,
            column: 37
          }
        },
        loc: {
          start: {
            line: 534,
            column: 48
          },
          end: {
            line: 534,
            column: 76
          }
        },
        line: 534
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 562,
            column: 4
          },
          end: {
            line: 562,
            column: 5
          }
        },
        loc: {
          start: {
            line: 562,
            column: 32
          },
          end: {
            line: 572,
            column: 5
          }
        },
        line: 562
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 566,
            column: 35
          },
          end: {
            line: 566,
            column: 36
          }
        },
        loc: {
          start: {
            line: 566,
            column: 47
          },
          end: {
            line: 566,
            column: 54
          }
        },
        line: 566
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 569,
            column: 39
          },
          end: {
            line: 569,
            column: 40
          }
        },
        loc: {
          start: {
            line: 569,
            column: 51
          },
          end: {
            line: 569,
            column: 78
          }
        },
        line: 569
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 580,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        },
        loc: {
          start: {
            line: 580,
            column: 42
          },
          end: {
            line: 605,
            column: 5
          }
        },
        line: 580
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 613,
            column: 4
          },
          end: {
            line: 613,
            column: 5
          }
        },
        loc: {
          start: {
            line: 613,
            column: 44
          },
          end: {
            line: 622,
            column: 5
          }
        },
        line: 613
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 631,
            column: 4
          },
          end: {
            line: 631,
            column: 5
          }
        },
        loc: {
          start: {
            line: 631,
            column: 54
          },
          end: {
            line: 660,
            column: 5
          }
        },
        line: 631
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 664,
            column: 4
          },
          end: {
            line: 664,
            column: 5
          }
        },
        loc: {
          start: {
            line: 664,
            column: 25
          },
          end: {
            line: 681,
            column: 5
          }
        },
        line: 664
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 668,
            column: 42
          },
          end: {
            line: 668,
            column: 43
          }
        },
        loc: {
          start: {
            line: 668,
            column: 48
          },
          end: {
            line: 679,
            column: 9
          }
        },
        line: 668
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 685,
            column: 4
          },
          end: {
            line: 685,
            column: 5
          }
        },
        loc: {
          start: {
            line: 685,
            column: 14
          },
          end: {
            line: 689,
            column: 5
          }
        },
        line: 685
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 3
          },
          end: {
            line: 17,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 3
          },
          end: {
            line: 17,
            column: 13
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 54
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "7": {
        loc: {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 146,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 146,
            column: 57
          }
        }, {
          start: {
            line: 146,
            column: 61
          },
          end: {
            line: 146,
            column: 63
          }
        }],
        line: 146
      },
      "8": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "9": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 74
          }
        }, {
          start: {
            line: 153,
            column: 78
          },
          end: {
            line: 153,
            column: 110
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "12": {
        loc: {
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 174,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 22
          },
          end: {
            line: 174,
            column: 31
          }
        }, {
          start: {
            line: 174,
            column: 35
          },
          end: {
            line: 174,
            column: 51
          }
        }],
        line: 174
      },
      "13": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 31
          }
        }, {
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 211,
            column: 51
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 230,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 12
          },
          end: {
            line: 230,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "16": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: 251,
            column: 17
          },
          end: {
            line: 253,
            column: 13
          }
        }],
        line: 248
      },
      "17": {
        loc: {
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 248,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 248,
            column: 41
          }
        }, {
          start: {
            line: 248,
            column: 45
          },
          end: {
            line: 248,
            column: 65
          }
        }],
        line: 248
      },
      "18": {
        loc: {
          start: {
            line: 257,
            column: 30
          },
          end: {
            line: 257,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 48
          },
          end: {
            line: 257,
            column: 72
          }
        }, {
          start: {
            line: 257,
            column: 75
          },
          end: {
            line: 257,
            column: 76
          }
        }],
        line: 257
      },
      "19": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 292,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 292,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "20": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 368,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 368,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "21": {
        loc: {
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 394,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 394,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "22": {
        loc: {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "23": {
        loc: {
          start: {
            line: 413,
            column: 34
          },
          end: {
            line: 415,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 414,
            column: 22
          },
          end: {
            line: 414,
            column: 74
          }
        }, {
          start: {
            line: 415,
            column: 22
          },
          end: {
            line: 415,
            column: 23
          }
        }],
        line: 413
      },
      "24": {
        loc: {
          start: {
            line: 425,
            column: 35
          },
          end: {
            line: 425,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 35
          },
          end: {
            line: 425,
            column: 73
          }
        }, {
          start: {
            line: 425,
            column: 77
          },
          end: {
            line: 425,
            column: 79
          }
        }],
        line: 425
      },
      "25": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "26": {
        loc: {
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 446,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 446,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "27": {
        loc: {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 460,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 460,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "28": {
        loc: {
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 490,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 464,
            column: 16
          },
          end: {
            line: 464,
            column: 40
          }
        }, {
          start: {
            line: 465,
            column: 16
          },
          end: {
            line: 470,
            column: 26
          }
        }, {
          start: {
            line: 471,
            column: 16
          },
          end: {
            line: 471,
            column: 44
          }
        }, {
          start: {
            line: 472,
            column: 16
          },
          end: {
            line: 477,
            column: 26
          }
        }, {
          start: {
            line: 478,
            column: 16
          },
          end: {
            line: 483,
            column: 26
          }
        }, {
          start: {
            line: 484,
            column: 16
          },
          end: {
            line: 489,
            column: 26
          }
        }],
        line: 463
      },
      "29": {
        loc: {
          start: {
            line: 466,
            column: 20
          },
          end: {
            line: 469,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 20
          },
          end: {
            line: 469,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "30": {
        loc: {
          start: {
            line: 473,
            column: 20
          },
          end: {
            line: 476,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 20
          },
          end: {
            line: 476,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "31": {
        loc: {
          start: {
            line: 479,
            column: 20
          },
          end: {
            line: 482,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 20
          },
          end: {
            line: 482,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "32": {
        loc: {
          start: {
            line: 485,
            column: 20
          },
          end: {
            line: 488,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 20
          },
          end: {
            line: 488,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 485
      },
      "33": {
        loc: {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 506,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 506,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "34": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "35": {
        loc: {
          start: {
            line: 539,
            column: 33
          },
          end: {
            line: 539,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 539,
            column: 52
          },
          end: {
            line: 539,
            column: 97
          }
        }, {
          start: {
            line: 539,
            column: 100
          },
          end: {
            line: 539,
            column: 101
          }
        }],
        line: 539
      },
      "36": {
        loc: {
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 549,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 549,
            column: 9
          }
        }, {
          start: {
            line: 544,
            column: 13
          },
          end: {
            line: 549,
            column: 9
          }
        }],
        line: 541
      },
      "37": {
        loc: {
          start: {
            line: 544,
            column: 13
          },
          end: {
            line: 549,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 13
          },
          end: {
            line: 549,
            column: 9
          }
        }, {
          start: {
            line: 547,
            column: 13
          },
          end: {
            line: 549,
            column: 9
          }
        }],
        line: 544
      },
      "38": {
        loc: {
          start: {
            line: 563,
            column: 8
          },
          end: {
            line: 565,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 563,
            column: 8
          },
          end: {
            line: 565,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 563
      },
      "39": {
        loc: {
          start: {
            line: 582,
            column: 8
          },
          end: {
            line: 583,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 8
          },
          end: {
            line: 583,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 582
      },
      "40": {
        loc: {
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 604,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 604,
            column: 9
          }
        }, {
          start: {
            line: 595,
            column: 13
          },
          end: {
            line: 604,
            column: 9
          }
        }],
        line: 586
      },
      "41": {
        loc: {
          start: {
            line: 587,
            column: 12
          },
          end: {
            line: 588,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 587,
            column: 12
          },
          end: {
            line: 588,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 587
      },
      "42": {
        loc: {
          start: {
            line: 589,
            column: 12
          },
          end: {
            line: 590,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 589,
            column: 12
          },
          end: {
            line: 590,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 589
      },
      "43": {
        loc: {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 592,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 592,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 591
      },
      "44": {
        loc: {
          start: {
            line: 597,
            column: 12
          },
          end: {
            line: 598,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 12
          },
          end: {
            line: 598,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "45": {
        loc: {
          start: {
            line: 599,
            column: 12
          },
          end: {
            line: 600,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 599,
            column: 12
          },
          end: {
            line: 600,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 599
      },
      "46": {
        loc: {
          start: {
            line: 601,
            column: 12
          },
          end: {
            line: 602,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 12
          },
          end: {
            line: 602,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "47": {
        loc: {
          start: {
            line: 615,
            column: 8
          },
          end: {
            line: 621,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 616,
            column: 12
          },
          end: {
            line: 616,
            column: 41
          }
        }, {
          start: {
            line: 617,
            column: 12
          },
          end: {
            line: 617,
            column: 35
          }
        }, {
          start: {
            line: 618,
            column: 12
          },
          end: {
            line: 618,
            column: 41
          }
        }, {
          start: {
            line: 619,
            column: 12
          },
          end: {
            line: 619,
            column: 35
          }
        }, {
          start: {
            line: 620,
            column: 12
          },
          end: {
            line: 620,
            column: 31
          }
        }],
        line: 615
      },
      "48": {
        loc: {
          start: {
            line: 634,
            column: 8
          },
          end: {
            line: 655,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 634,
            column: 8
          },
          end: {
            line: 655,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 634
      },
      "49": {
        loc: {
          start: {
            line: 634,
            column: 12
          },
          end: {
            line: 634,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 634,
            column: 12
          },
          end: {
            line: 634,
            column: 29
          }
        }, {
          start: {
            line: 634,
            column: 33
          },
          end: {
            line: 634,
            column: 56
          }
        }],
        line: 634
      },
      "50": {
        loc: {
          start: {
            line: 635,
            column: 12
          },
          end: {
            line: 654,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 636,
            column: 16
          },
          end: {
            line: 638,
            column: 26
          }
        }, {
          start: {
            line: 639,
            column: 16
          },
          end: {
            line: 641,
            column: 26
          }
        }, {
          start: {
            line: 642,
            column: 16
          },
          end: {
            line: 644,
            column: 26
          }
        }, {
          start: {
            line: 645,
            column: 16
          },
          end: {
            line: 647,
            column: 26
          }
        }, {
          start: {
            line: 648,
            column: 16
          },
          end: {
            line: 650,
            column: 26
          }
        }, {
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 653,
            column: 26
          }
        }],
        line: 635
      },
      "51": {
        loc: {
          start: {
            line: 656,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 656,
            column: 8
          },
          end: {
            line: 658,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 656
      },
      "52": {
        loc: {
          start: {
            line: 656,
            column: 12
          },
          end: {
            line: 656,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 656,
            column: 12
          },
          end: {
            line: 656,
            column: 17
          }
        }, {
          start: {
            line: 656,
            column: 21
          },
          end: {
            line: 656,
            column: 48
          }
        }, {
          start: {
            line: 656,
            column: 52
          },
          end: {
            line: 656,
            column: 73
          }
        }],
        line: 656
      },
      "53": {
        loc: {
          start: {
            line: 665,
            column: 8
          },
          end: {
            line: 667,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 665,
            column: 8
          },
          end: {
            line: 667,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 665
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0, 0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0, 0, 0, 0, 0],
      "51": [0, 0],
      "52": [0, 0, 0],
      "53": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "048cec8909fa6d73f0a7ea2ee0523d7d819e146f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ynqe030dn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ynqe030dn();
cov_ynqe030dn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ynqe030dn().s[1]++;
exports.TunnelPerformanceAnalytics = exports.MetricType = void 0;
const events_1 =
/* istanbul ignore next */
(cov_ynqe030dn().s[2]++, require("events"));
/**
 * Performance metric types
 */
var MetricType;
/* istanbul ignore next */
cov_ynqe030dn().s[3]++;
(function (MetricType) {
  /* istanbul ignore next */
  cov_ynqe030dn().f[0]++;
  cov_ynqe030dn().s[4]++;
  MetricType["LATENCY"] = "LATENCY";
  /* istanbul ignore next */
  cov_ynqe030dn().s[5]++;
  MetricType["THROUGHPUT"] = "THROUGHPUT";
  /* istanbul ignore next */
  cov_ynqe030dn().s[6]++;
  MetricType["PACKET_LOSS"] = "PACKET_LOSS";
  /* istanbul ignore next */
  cov_ynqe030dn().s[7]++;
  MetricType["CONNECTION_TIME"] = "CONNECTION_TIME";
  /* istanbul ignore next */
  cov_ynqe030dn().s[8]++;
  MetricType["UPTIME"] = "UPTIME";
  /* istanbul ignore next */
  cov_ynqe030dn().s[9]++;
  MetricType["ERROR_RATE"] = "ERROR_RATE";
  /* istanbul ignore next */
  cov_ynqe030dn().s[10]++;
  MetricType["BANDWIDTH_UTILIZATION"] = "BANDWIDTH_UTILIZATION";
})(
/* istanbul ignore next */
(cov_ynqe030dn().b[0][0]++, MetricType) ||
/* istanbul ignore next */
(cov_ynqe030dn().b[0][1]++, exports.MetricType = MetricType = {}));
/**
 * Tunnel Performance Analytics
 * Collects, analyzes, and reports on SSH tunnel performance metrics
 */
class TunnelPerformanceAnalytics extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(logger, tunnelManager, healthMonitor, stateTracker, config) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[1]++;
    cov_ynqe030dn().s[11]++;
    super();
    /* istanbul ignore next */
    cov_ynqe030dn().s[12]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_ynqe030dn().s[13]++;
    this.tunnelManager = tunnelManager;
    /* istanbul ignore next */
    cov_ynqe030dn().s[14]++;
    this.healthMonitor = healthMonitor;
    /* istanbul ignore next */
    cov_ynqe030dn().s[15]++;
    this.stateTracker = stateTracker;
    /* istanbul ignore next */
    cov_ynqe030dn().s[16]++;
    this.performanceData = new Map();
    /* istanbul ignore next */
    cov_ynqe030dn().s[17]++;
    this.collectionIntervals = new Map();
    /* istanbul ignore next */
    cov_ynqe030dn().s[18]++;
    this.reportingTimer = null;
    /* istanbul ignore next */
    cov_ynqe030dn().s[19]++;
    this.isCollecting = false;
    // Default configuration
    /* istanbul ignore next */
    cov_ynqe030dn().s[20]++;
    this.config = {
      collectionInterval: 60000,
      // 1 minute
      retentionPeriod: 7 * 24 * 60 * 60 * 1000,
      // 7 days
      enableTrendAnalysis: true,
      trendAnalysisWindow: 24 * 60 * 60 * 1000,
      // 24 hours
      enablePerformanceAlerts: true,
      alertThresholds: {
        [MetricType.LATENCY]: 1000,
        // 1 second
        [MetricType.PACKET_LOSS]: 5,
        // 5%
        [MetricType.ERROR_RATE]: 10,
        // 10%
        [MetricType.THROUGHPUT]: 1024 // 1 KB/s minimum
      },
      enableAutoReporting: true,
      reportInterval: 24 * 60 * 60 * 1000,
      // 24 hours
      ...config
    };
    // Initialize performance benchmarks
    /* istanbul ignore next */
    cov_ynqe030dn().s[21]++;
    this.initializeBenchmarks();
    /* istanbul ignore next */
    cov_ynqe030dn().s[22]++;
    this.setupEventListeners();
    /* istanbul ignore next */
    cov_ynqe030dn().s[23]++;
    this.logger.info('Tunnel Performance Analytics initialized', this.config);
  }
  /**
   * Start performance data collection
   */
  startCollection() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[2]++;
    cov_ynqe030dn().s[24]++;
    if (this.isCollecting) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[1][0]++;
      cov_ynqe030dn().s[25]++;
      this.logger.warn('Performance data collection is already running');
      /* istanbul ignore next */
      cov_ynqe030dn().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[1][1]++;
    }
    cov_ynqe030dn().s[27]++;
    this.isCollecting = true;
    /* istanbul ignore next */
    cov_ynqe030dn().s[28]++;
    this.logger.info('Starting performance data collection');
    // Start collecting for existing connections
    const connections =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[29]++, this.tunnelManager.getAllConnections());
    /* istanbul ignore next */
    cov_ynqe030dn().s[30]++;
    for (const connection of connections) {
      /* istanbul ignore next */
      cov_ynqe030dn().s[31]++;
      this.startCollectionForConnection(connection.id);
    }
    // Start automatic reporting if enabled
    /* istanbul ignore next */
    cov_ynqe030dn().s[32]++;
    if (this.config.enableAutoReporting) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[2][0]++;
      cov_ynqe030dn().s[33]++;
      this.startAutoReporting();
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[2][1]++;
    }
    cov_ynqe030dn().s[34]++;
    this.emit('collectionStarted');
  }
  /**
   * Stop performance data collection
   */
  stopCollection() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[3]++;
    cov_ynqe030dn().s[35]++;
    if (!this.isCollecting) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[3][0]++;
      cov_ynqe030dn().s[36]++;
      this.logger.warn('Performance data collection is not running');
      /* istanbul ignore next */
      cov_ynqe030dn().s[37]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[3][1]++;
    }
    cov_ynqe030dn().s[38]++;
    this.isCollecting = false;
    /* istanbul ignore next */
    cov_ynqe030dn().s[39]++;
    this.logger.info('Stopping performance data collection');
    // Clear all collection intervals
    /* istanbul ignore next */
    cov_ynqe030dn().s[40]++;
    for (const [connectionId, interval] of this.collectionIntervals.entries()) {
      /* istanbul ignore next */
      cov_ynqe030dn().s[41]++;
      clearInterval(interval);
      /* istanbul ignore next */
      cov_ynqe030dn().s[42]++;
      this.collectionIntervals.delete(connectionId);
    }
    // Stop automatic reporting
    /* istanbul ignore next */
    cov_ynqe030dn().s[43]++;
    if (this.reportingTimer) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[4][0]++;
      cov_ynqe030dn().s[44]++;
      clearInterval(this.reportingTimer);
      /* istanbul ignore next */
      cov_ynqe030dn().s[45]++;
      this.reportingTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[4][1]++;
    }
    cov_ynqe030dn().s[46]++;
    this.emit('collectionStopped');
  }
  /**
   * Start data collection for a specific connection
   *
   * @param connectionId - Connection identifier
   */
  startCollectionForConnection(connectionId) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[4]++;
    cov_ynqe030dn().s[47]++;
    if (this.collectionIntervals.has(connectionId)) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[5][0]++;
      cov_ynqe030dn().s[48]++;
      this.logger.debug(`Already collecting data for connection: ${connectionId}`);
      /* istanbul ignore next */
      cov_ynqe030dn().s[49]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[5][1]++;
    }
    cov_ynqe030dn().s[50]++;
    this.logger.info(`Starting performance data collection for connection: ${connectionId}`);
    // Initialize data storage
    /* istanbul ignore next */
    cov_ynqe030dn().s[51]++;
    this.performanceData.set(connectionId, []);
    // Start periodic data collection
    const interval =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[52]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[5]++;
      cov_ynqe030dn().s[53]++;
      try {
        /* istanbul ignore next */
        cov_ynqe030dn().s[54]++;
        await this.collectPerformanceData(connectionId);
      } catch (error) {
        /* istanbul ignore next */
        cov_ynqe030dn().s[55]++;
        this.logger.error(`Performance data collection failed for connection ${connectionId}`, error);
      }
    }, this.config.collectionInterval));
    /* istanbul ignore next */
    cov_ynqe030dn().s[56]++;
    this.collectionIntervals.set(connectionId, interval);
    // Perform initial data collection
    /* istanbul ignore next */
    cov_ynqe030dn().s[57]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[6]++;
      cov_ynqe030dn().s[58]++;
      return this.collectPerformanceData(connectionId);
    }, 1000);
  }
  /**
   * Stop data collection for a specific connection
   *
   * @param connectionId - Connection identifier
   */
  stopCollectionForConnection(connectionId) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[7]++;
    const interval =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[59]++, this.collectionIntervals.get(connectionId));
    /* istanbul ignore next */
    cov_ynqe030dn().s[60]++;
    if (interval) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[6][0]++;
      cov_ynqe030dn().s[61]++;
      clearInterval(interval);
      /* istanbul ignore next */
      cov_ynqe030dn().s[62]++;
      this.collectionIntervals.delete(connectionId);
      /* istanbul ignore next */
      cov_ynqe030dn().s[63]++;
      this.logger.info(`Stopped performance data collection for connection: ${connectionId}`);
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[6][1]++;
    }
  }
  /**
   * Get performance data for a connection
   *
   * @param connectionId - Connection identifier
   * @param metricType - Optional metric type filter
   * @param timeRange - Optional time range filter
   * @returns Array of performance data points
   */
  getPerformanceData(connectionId, metricType, timeRange) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[8]++;
    let data =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[64]++,
    /* istanbul ignore next */
    (cov_ynqe030dn().b[7][0]++, this.performanceData.get(connectionId)) ||
    /* istanbul ignore next */
    (cov_ynqe030dn().b[7][1]++, []));
    // Apply metric type filter
    /* istanbul ignore next */
    cov_ynqe030dn().s[65]++;
    if (metricType) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[8][0]++;
      cov_ynqe030dn().s[66]++;
      data = data.filter(point => {
        /* istanbul ignore next */
        cov_ynqe030dn().f[9]++;
        cov_ynqe030dn().s[67]++;
        return point.metricType === metricType;
      });
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[8][1]++;
    }
    // Apply time range filter
    cov_ynqe030dn().s[68]++;
    if (timeRange) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[9][0]++;
      cov_ynqe030dn().s[69]++;
      data = data.filter(point => {
        /* istanbul ignore next */
        cov_ynqe030dn().f[10]++;
        cov_ynqe030dn().s[70]++;
        return /* istanbul ignore next */(cov_ynqe030dn().b[10][0]++, point.timestamp >= timeRange.start) &&
        /* istanbul ignore next */
        (cov_ynqe030dn().b[10][1]++, point.timestamp <= timeRange.end);
      });
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[9][1]++;
    }
    cov_ynqe030dn().s[71]++;
    return [...data];
  }
  /**
   * Analyze performance trends
   *
   * @param connectionId - Connection identifier
   * @param metricType - Metric type to analyze
   * @param timeRange - Optional time range (defaults to trend analysis window)
   * @returns Performance trend analysis
   */
  analyzeTrend(connectionId, metricType, timeRange) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[11]++;
    cov_ynqe030dn().s[72]++;
    if (!this.config.enableTrendAnalysis) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[11][0]++;
      cov_ynqe030dn().s[73]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[11][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[74]++, new Date());
    const defaultTimeRange =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[75]++, {
      start: new Date(now.getTime() - this.config.trendAnalysisWindow),
      end: now
    });
    const range =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[76]++,
    /* istanbul ignore next */
    (cov_ynqe030dn().b[12][0]++, timeRange) ||
    /* istanbul ignore next */
    (cov_ynqe030dn().b[12][1]++, defaultTimeRange));
    const data =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[77]++, this.getPerformanceData(connectionId, metricType, range));
    /* istanbul ignore next */
    cov_ynqe030dn().s[78]++;
    if (data.length < 2) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[13][0]++;
      cov_ynqe030dn().s[79]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[13][1]++;
    }
    // Calculate trend statistics
    const values =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[80]++, data.map(point => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[12]++;
      cov_ynqe030dn().s[81]++;
      return point.value;
    }));
    const timestamps =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[82]++, data.map(point => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[13]++;
      cov_ynqe030dn().s[83]++;
      return point.timestamp.getTime();
    }));
    const trend =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[84]++, this.calculateTrend(values, timestamps));
    const stats =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[85]++, this.calculateStatistics(values));
    /* istanbul ignore next */
    cov_ynqe030dn().s[86]++;
    return {
      metricType,
      connectionId,
      timeRange: range,
      trend: trend.direction,
      changePercentage: trend.changePercentage,
      confidence: trend.confidence,
      dataPoints: data.length,
      averageValue: stats.mean,
      minValue: stats.min,
      maxValue: stats.max,
      standardDeviation: stats.standardDeviation
    };
  }
  /**
   * Generate performance report
   *
   * @param connectionId - Connection identifier
   * @param timeRange - Optional time range
   * @returns Performance report
   */
  generateReport(connectionId, timeRange) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[14]++;
    const now =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[87]++, new Date());
    const defaultTimeRange =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[88]++, {
      start: new Date(now.getTime() - 24 * 60 * 60 * 1000),
      // Last 24 hours
      end: now
    });
    const range =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[89]++,
    /* istanbul ignore next */
    (cov_ynqe030dn().b[14][0]++, timeRange) ||
    /* istanbul ignore next */
    (cov_ynqe030dn().b[14][1]++, defaultTimeRange));
    const report =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[90]++, {
      connectionId,
      generatedAt: now,
      timeRange: range,
      overallScore: 0,
      metrics: {},
      summary: {
        strengths: [],
        weaknesses: [],
        recommendations: []
      }
    });
    let totalScore =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[91]++, 0);
    let metricCount =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[92]++, 0);
    // Analyze each metric type
    /* istanbul ignore next */
    cov_ynqe030dn().s[93]++;
    for (const metricType of Object.values(MetricType)) {
      const data =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[94]++, this.getPerformanceData(connectionId, metricType, range));
      /* istanbul ignore next */
      cov_ynqe030dn().s[95]++;
      if (data.length === 0) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[15][0]++;
        cov_ynqe030dn().s[96]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[15][1]++;
      }
      const trend =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[97]++, this.analyzeTrend(connectionId, metricType, range));
      const currentValue =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[98]++, data[data.length - 1].value);
      const averageValue =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[99]++, data.reduce((sum, point) => {
        /* istanbul ignore next */
        cov_ynqe030dn().f[15]++;
        cov_ynqe030dn().s[100]++;
        return sum + point.value;
      }, 0) / data.length);
      const benchmark =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[101]++, this.getBenchmarkRating(metricType, currentValue));
      const recommendations =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[102]++, this.generateRecommendations(metricType, currentValue, trend));
      /* istanbul ignore next */
      cov_ynqe030dn().s[103]++;
      report.metrics[metricType] = {
        current: currentValue,
        average: averageValue,
        trend: trend,
        benchmark,
        recommendations
      };
      // Calculate metric score
      const metricScore =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[104]++, this.calculateMetricScore(metricType, currentValue));
      /* istanbul ignore next */
      cov_ynqe030dn().s[105]++;
      totalScore += metricScore;
      /* istanbul ignore next */
      cov_ynqe030dn().s[106]++;
      metricCount++;
      // Add to summary
      /* istanbul ignore next */
      cov_ynqe030dn().s[107]++;
      if (
      /* istanbul ignore next */
      (cov_ynqe030dn().b[17][0]++, benchmark === 'EXCELLENT') ||
      /* istanbul ignore next */
      (cov_ynqe030dn().b[17][1]++, benchmark === 'GOOD')) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[16][0]++;
        cov_ynqe030dn().s[108]++;
        report.summary.strengths.push(`${metricType}: ${benchmark.toLowerCase()}`);
      } else {
        /* istanbul ignore next */
        cov_ynqe030dn().b[16][1]++;
        cov_ynqe030dn().s[109]++;
        report.summary.weaknesses.push(`${metricType}: ${benchmark.toLowerCase()}`);
      }
      /* istanbul ignore next */
      cov_ynqe030dn().s[110]++;
      report.summary.recommendations.push(...recommendations);
    }
    // Calculate overall score
    /* istanbul ignore next */
    cov_ynqe030dn().s[111]++;
    report.overallScore = metricCount > 0 ?
    /* istanbul ignore next */
    (cov_ynqe030dn().b[18][0]++, totalScore / metricCount) :
    /* istanbul ignore next */
    (cov_ynqe030dn().b[18][1]++, 0);
    /* istanbul ignore next */
    cov_ynqe030dn().s[112]++;
    this.logger.info(`Generated performance report for connection: ${connectionId}`, {
      overallScore: report.overallScore,
      timeRange: range
    });
    /* istanbul ignore next */
    cov_ynqe030dn().s[113]++;
    this.emit('reportGenerated', report);
    /* istanbul ignore next */
    cov_ynqe030dn().s[114]++;
    return report;
  }
  /**
   * Get performance benchmarks
   *
   * @returns Map of performance benchmarks
   */
  getBenchmarks() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[16]++;
    cov_ynqe030dn().s[115]++;
    return new Map(this.benchmarks);
  }
  /**
   * Update performance benchmark
   *
   * @param metricType - Metric type
   * @param benchmark - New benchmark values
   */
  updateBenchmark(metricType, benchmark) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[17]++;
    cov_ynqe030dn().s[116]++;
    this.benchmarks.set(metricType, benchmark);
    /* istanbul ignore next */
    cov_ynqe030dn().s[117]++;
    this.logger.info(`Updated performance benchmark for ${metricType}`, benchmark);
    /* istanbul ignore next */
    cov_ynqe030dn().s[118]++;
    this.emit('benchmarkUpdated', metricType, benchmark);
  }
  /**
   * Setup event listeners
   */
  setupEventListeners() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[18]++;
    cov_ynqe030dn().s[119]++;
    // Listen for new tunnel connections
    this.tunnelManager.on('tunnelConnected', connection => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[19]++;
      cov_ynqe030dn().s[120]++;
      if (this.isCollecting) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[19][0]++;
        cov_ynqe030dn().s[121]++;
        this.startCollectionForConnection(connection.id);
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[19][1]++;
      }
    });
    // Listen for tunnel disconnections
    /* istanbul ignore next */
    cov_ynqe030dn().s[122]++;
    this.tunnelManager.on('tunnelDisconnected', connection => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[20]++;
      cov_ynqe030dn().s[123]++;
      this.stopCollectionForConnection(connection.id);
    });
  }
  /**
   * Initialize performance benchmarks
   */
  initializeBenchmarks() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[21]++;
    cov_ynqe030dn().s[124]++;
    this.benchmarks = new Map([[MetricType.LATENCY, {
      metricType: MetricType.LATENCY,
      excellent: 50,
      good: 100,
      acceptable: 500,
      poor: 1000,
      unit: 'ms',
      description: 'Connection latency'
    }], [MetricType.THROUGHPUT, {
      metricType: MetricType.THROUGHPUT,
      excellent: 10240,
      // 10 KB/s
      good: 5120,
      // 5 KB/s
      acceptable: 1024,
      // 1 KB/s
      poor: 512,
      // 512 B/s
      unit: 'bytes/s',
      description: 'Data throughput'
    }], [MetricType.PACKET_LOSS, {
      metricType: MetricType.PACKET_LOSS,
      excellent: 0,
      good: 1,
      acceptable: 5,
      poor: 10,
      unit: '%',
      description: 'Packet loss percentage'
    }], [MetricType.CONNECTION_TIME, {
      metricType: MetricType.CONNECTION_TIME,
      excellent: 1000,
      // 1 second
      good: 3000,
      // 3 seconds
      acceptable: 10000,
      // 10 seconds
      poor: 30000,
      // 30 seconds
      unit: 'ms',
      description: 'Time to establish connection'
    }], [MetricType.UPTIME, {
      metricType: MetricType.UPTIME,
      excellent: 99.9,
      good: 99.5,
      acceptable: 99.0,
      poor: 95.0,
      unit: '%',
      description: 'Connection uptime percentage'
    }], [MetricType.ERROR_RATE, {
      metricType: MetricType.ERROR_RATE,
      excellent: 0,
      good: 1,
      acceptable: 5,
      poor: 10,
      unit: '%',
      description: 'Error rate percentage'
    }]]);
  }
  /**
   * Collect performance data for a connection
   *
   * @param connectionId - Connection identifier
   */
  async collectPerformanceData(connectionId) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[22]++;
    const connection =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[125]++, this.tunnelManager.getConnection(connectionId));
    /* istanbul ignore next */
    cov_ynqe030dn().s[126]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[20][0]++;
      cov_ynqe030dn().s[127]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[20][1]++;
    }
    const timestamp =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[128]++, new Date());
    const dataPoints =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[129]++, []);
    /* istanbul ignore next */
    cov_ynqe030dn().s[130]++;
    try {
      // Get health metrics
      const healthMetrics =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[131]++, this.healthMonitor.getHealthMetrics(connectionId));
      /* istanbul ignore next */
      cov_ynqe030dn().s[132]++;
      if (healthMetrics) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[21][0]++;
        cov_ynqe030dn().s[133]++;
        dataPoints.push({
          timestamp,
          connectionId,
          metricType: MetricType.LATENCY,
          value: healthMetrics.latency,
          unit: 'ms'
        }, {
          timestamp,
          connectionId,
          metricType: MetricType.THROUGHPUT,
          value: healthMetrics.throughput,
          unit: 'bytes/s'
        }, {
          timestamp,
          connectionId,
          metricType: MetricType.PACKET_LOSS,
          value: healthMetrics.packetLoss,
          unit: '%'
        });
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[21][1]++;
      }
      // Get state statistics
      const stateStats =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[134]++, this.stateTracker.getStatistics(connectionId));
      /* istanbul ignore next */
      cov_ynqe030dn().s[135]++;
      if (stateStats) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[22][0]++;
        cov_ynqe030dn().s[136]++;
        dataPoints.push({
          timestamp,
          connectionId,
          metricType: MetricType.UPTIME,
          value: stateStats.reliability,
          unit: '%'
        }, {
          timestamp,
          connectionId,
          metricType: MetricType.CONNECTION_TIME,
          value: stateStats.averageConnectionTime,
          unit: 'ms'
        });
        // Calculate error rate
        const totalAttempts =
        /* istanbul ignore next */
        (cov_ynqe030dn().s[137]++, stateStats.connectionAttempts);
        const errorRate =
        /* istanbul ignore next */
        (cov_ynqe030dn().s[138]++, totalAttempts > 0 ?
        /* istanbul ignore next */
        (cov_ynqe030dn().b[23][0]++, stateStats.failedConnections / totalAttempts * 100) :
        /* istanbul ignore next */
        (cov_ynqe030dn().b[23][1]++, 0));
        /* istanbul ignore next */
        cov_ynqe030dn().s[139]++;
        dataPoints.push({
          timestamp,
          connectionId,
          metricType: MetricType.ERROR_RATE,
          value: errorRate,
          unit: '%'
        });
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[22][1]++;
      }
      // Store data points
      const connectionData =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[140]++,
      /* istanbul ignore next */
      (cov_ynqe030dn().b[24][0]++, this.performanceData.get(connectionId)) ||
      /* istanbul ignore next */
      (cov_ynqe030dn().b[24][1]++, []));
      /* istanbul ignore next */
      cov_ynqe030dn().s[141]++;
      connectionData.push(...dataPoints);
      // Clean up old data
      /* istanbul ignore next */
      cov_ynqe030dn().s[142]++;
      this.cleanupOldData(connectionId);
      // Check for performance alerts
      /* istanbul ignore next */
      cov_ynqe030dn().s[143]++;
      if (this.config.enablePerformanceAlerts) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[25][0]++;
        cov_ynqe030dn().s[144]++;
        this.checkPerformanceAlerts(dataPoints);
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[25][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_ynqe030dn().s[145]++;
      this.logger.error(`Failed to collect performance data for connection ${connectionId}`, error);
    }
  }
  /**
   * Clean up old performance data
   *
   * @param connectionId - Connection identifier
   */
  cleanupOldData(connectionId) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[23]++;
    const data =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[146]++, this.performanceData.get(connectionId));
    /* istanbul ignore next */
    cov_ynqe030dn().s[147]++;
    if (!data) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[26][0]++;
      cov_ynqe030dn().s[148]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[26][1]++;
    }
    const cutoffTime =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[149]++, Date.now() - this.config.retentionPeriod);
    const filteredData =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[150]++, data.filter(point => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[24]++;
      cov_ynqe030dn().s[151]++;
      return point.timestamp.getTime() > cutoffTime;
    }));
    /* istanbul ignore next */
    cov_ynqe030dn().s[152]++;
    this.performanceData.set(connectionId, filteredData);
  }
  /**
   * Check for performance alerts
   *
   * @param dataPoints - Performance data points to check
   */
  checkPerformanceAlerts(dataPoints) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[25]++;
    cov_ynqe030dn().s[153]++;
    for (const dataPoint of dataPoints) {
      const threshold =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[154]++, this.config.alertThresholds[dataPoint.metricType]);
      /* istanbul ignore next */
      cov_ynqe030dn().s[155]++;
      if (threshold === undefined) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[27][0]++;
        cov_ynqe030dn().s[156]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[27][1]++;
      }
      let alertTriggered =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[157]++, false);
      let alertMessage =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[158]++, '');
      /* istanbul ignore next */
      cov_ynqe030dn().s[159]++;
      switch (dataPoint.metricType) {
        case MetricType.LATENCY:
          /* istanbul ignore next */
          cov_ynqe030dn().b[28][0]++;
        case MetricType.CONNECTION_TIME:
          /* istanbul ignore next */
          cov_ynqe030dn().b[28][1]++;
          cov_ynqe030dn().s[160]++;
          if (dataPoint.value > threshold) {
            /* istanbul ignore next */
            cov_ynqe030dn().b[29][0]++;
            cov_ynqe030dn().s[161]++;
            alertTriggered = true;
            /* istanbul ignore next */
            cov_ynqe030dn().s[162]++;
            alertMessage = `High ${dataPoint.metricType.toLowerCase()}: ${dataPoint.value}${dataPoint.unit}`;
          } else
          /* istanbul ignore next */
          {
            cov_ynqe030dn().b[29][1]++;
          }
          cov_ynqe030dn().s[163]++;
          break;
        case MetricType.PACKET_LOSS:
          /* istanbul ignore next */
          cov_ynqe030dn().b[28][2]++;
        case MetricType.ERROR_RATE:
          /* istanbul ignore next */
          cov_ynqe030dn().b[28][3]++;
          cov_ynqe030dn().s[164]++;
          if (dataPoint.value > threshold) {
            /* istanbul ignore next */
            cov_ynqe030dn().b[30][0]++;
            cov_ynqe030dn().s[165]++;
            alertTriggered = true;
            /* istanbul ignore next */
            cov_ynqe030dn().s[166]++;
            alertMessage = `High ${dataPoint.metricType.toLowerCase()}: ${dataPoint.value}${dataPoint.unit}`;
          } else
          /* istanbul ignore next */
          {
            cov_ynqe030dn().b[30][1]++;
          }
          cov_ynqe030dn().s[167]++;
          break;
        case MetricType.THROUGHPUT:
          /* istanbul ignore next */
          cov_ynqe030dn().b[28][4]++;
          cov_ynqe030dn().s[168]++;
          if (dataPoint.value < threshold) {
            /* istanbul ignore next */
            cov_ynqe030dn().b[31][0]++;
            cov_ynqe030dn().s[169]++;
            alertTriggered = true;
            /* istanbul ignore next */
            cov_ynqe030dn().s[170]++;
            alertMessage = `Low ${dataPoint.metricType.toLowerCase()}: ${dataPoint.value}${dataPoint.unit}`;
          } else
          /* istanbul ignore next */
          {
            cov_ynqe030dn().b[31][1]++;
          }
          cov_ynqe030dn().s[171]++;
          break;
        case MetricType.UPTIME:
          /* istanbul ignore next */
          cov_ynqe030dn().b[28][5]++;
          cov_ynqe030dn().s[172]++;
          if (dataPoint.value < threshold) {
            /* istanbul ignore next */
            cov_ynqe030dn().b[32][0]++;
            cov_ynqe030dn().s[173]++;
            alertTriggered = true;
            /* istanbul ignore next */
            cov_ynqe030dn().s[174]++;
            alertMessage = `Low ${dataPoint.metricType.toLowerCase()}: ${dataPoint.value}${dataPoint.unit}`;
          } else
          /* istanbul ignore next */
          {
            cov_ynqe030dn().b[32][1]++;
          }
          cov_ynqe030dn().s[175]++;
          break;
      }
      /* istanbul ignore next */
      cov_ynqe030dn().s[176]++;
      if (alertTriggered) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[33][0]++;
        cov_ynqe030dn().s[177]++;
        this.logger.warn(`Performance alert: ${alertMessage}`, {
          connectionId: dataPoint.connectionId,
          metricType: dataPoint.metricType,
          value: dataPoint.value,
          threshold
        });
        /* istanbul ignore next */
        cov_ynqe030dn().s[178]++;
        this.emit('performanceAlert', {
          connectionId: dataPoint.connectionId,
          metricType: dataPoint.metricType,
          value: dataPoint.value,
          threshold,
          message: alertMessage,
          timestamp: dataPoint.timestamp
        });
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[33][1]++;
      }
    }
  }
  /**
   * Calculate trend direction and statistics
   *
   * @param values - Array of values
   * @param timestamps - Array of timestamps
   * @returns Trend analysis
   */
  calculateTrend(values, timestamps) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[26]++;
    cov_ynqe030dn().s[179]++;
    if (values.length < 2) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[34][0]++;
      cov_ynqe030dn().s[180]++;
      return {
        direction: 'STABLE',
        changePercentage: 0,
        confidence: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[34][1]++;
    }
    // Calculate linear regression
    const n =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[181]++, values.length);
    const sumX =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[182]++, timestamps.reduce((sum, t) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[27]++;
      cov_ynqe030dn().s[183]++;
      return sum + t;
    }, 0));
    const sumY =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[184]++, values.reduce((sum, v) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[28]++;
      cov_ynqe030dn().s[185]++;
      return sum + v;
    }, 0));
    const sumXY =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[186]++, timestamps.reduce((sum, t, i) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[29]++;
      cov_ynqe030dn().s[187]++;
      return sum + t * values[i];
    }, 0));
    const sumXX =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[188]++, timestamps.reduce((sum, t) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[30]++;
      cov_ynqe030dn().s[189]++;
      return sum + t * t;
    }, 0));
    const slope =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[190]++, (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX));
    const intercept =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[191]++, (sumY - slope * sumX) / n);
    // Calculate R-squared for confidence
    const meanY =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[192]++, sumY / n);
    const ssRes =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[193]++, values.reduce((sum, v, i) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[31]++;
      const predicted =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[194]++, slope * timestamps[i] + intercept);
      /* istanbul ignore next */
      cov_ynqe030dn().s[195]++;
      return sum + Math.pow(v - predicted, 2);
    }, 0));
    const ssTot =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[196]++, values.reduce((sum, v) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[32]++;
      cov_ynqe030dn().s[197]++;
      return sum + Math.pow(v - meanY, 2);
    }, 0));
    const rSquared =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[198]++, 1 - ssRes / ssTot);
    // Determine trend direction
    const firstValue =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[199]++, values[0]);
    const lastValue =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[200]++, values[values.length - 1]);
    const changePercentage =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[201]++, firstValue !== 0 ?
    /* istanbul ignore next */
    (cov_ynqe030dn().b[35][0]++, (lastValue - firstValue) / firstValue * 100) :
    /* istanbul ignore next */
    (cov_ynqe030dn().b[35][1]++, 0));
    let direction;
    /* istanbul ignore next */
    cov_ynqe030dn().s[202]++;
    if (Math.abs(changePercentage) < 5) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[36][0]++;
      cov_ynqe030dn().s[203]++;
      direction = 'STABLE';
    } else {
      /* istanbul ignore next */
      cov_ynqe030dn().b[36][1]++;
      cov_ynqe030dn().s[204]++;
      if (changePercentage > 0) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[37][0]++;
        cov_ynqe030dn().s[205]++;
        direction = 'IMPROVING';
      } else {
        /* istanbul ignore next */
        cov_ynqe030dn().b[37][1]++;
        cov_ynqe030dn().s[206]++;
        direction = 'DEGRADING';
      }
    }
    /* istanbul ignore next */
    cov_ynqe030dn().s[207]++;
    return {
      direction,
      changePercentage: Math.abs(changePercentage),
      confidence: Math.max(0, Math.min(100, rSquared * 100))
    };
  }
  /**
   * Calculate basic statistics
   *
   * @param values - Array of values
   * @returns Statistical measures
   */
  calculateStatistics(values) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[33]++;
    cov_ynqe030dn().s[208]++;
    if (values.length === 0) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[38][0]++;
      cov_ynqe030dn().s[209]++;
      return {
        mean: 0,
        min: 0,
        max: 0,
        standardDeviation: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[38][1]++;
    }
    const mean =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[210]++, values.reduce((sum, v) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[34]++;
      cov_ynqe030dn().s[211]++;
      return sum + v;
    }, 0) / values.length);
    const min =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[212]++, Math.min(...values));
    const max =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[213]++, Math.max(...values));
    const variance =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[214]++, values.reduce((sum, v) => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[35]++;
      cov_ynqe030dn().s[215]++;
      return sum + Math.pow(v - mean, 2);
    }, 0) / values.length);
    const standardDeviation =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[216]++, Math.sqrt(variance));
    /* istanbul ignore next */
    cov_ynqe030dn().s[217]++;
    return {
      mean,
      min,
      max,
      standardDeviation
    };
  }
  /**
   * Get benchmark rating for a metric value
   *
   * @param metricType - Metric type
   * @param value - Metric value
   * @returns Benchmark rating
   */
  getBenchmarkRating(metricType, value) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[36]++;
    const benchmark =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[218]++, this.benchmarks.get(metricType));
    /* istanbul ignore next */
    cov_ynqe030dn().s[219]++;
    if (!benchmark) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[39][0]++;
      cov_ynqe030dn().s[220]++;
      return 'ACCEPTABLE';
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[39][1]++;
    }
    // For metrics where lower is better (latency, packet loss, error rate)
    const lowerIsBetter =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[221]++, [MetricType.LATENCY, MetricType.PACKET_LOSS, MetricType.ERROR_RATE, MetricType.CONNECTION_TIME]);
    /* istanbul ignore next */
    cov_ynqe030dn().s[222]++;
    if (lowerIsBetter.includes(metricType)) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[40][0]++;
      cov_ynqe030dn().s[223]++;
      if (value <= benchmark.excellent) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[41][0]++;
        cov_ynqe030dn().s[224]++;
        return 'EXCELLENT';
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[41][1]++;
      }
      cov_ynqe030dn().s[225]++;
      if (value <= benchmark.good) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[42][0]++;
        cov_ynqe030dn().s[226]++;
        return 'GOOD';
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[42][1]++;
      }
      cov_ynqe030dn().s[227]++;
      if (value <= benchmark.acceptable) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[43][0]++;
        cov_ynqe030dn().s[228]++;
        return 'ACCEPTABLE';
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[43][1]++;
      }
      cov_ynqe030dn().s[229]++;
      return 'POOR';
    } else {
      /* istanbul ignore next */
      cov_ynqe030dn().b[40][1]++;
      cov_ynqe030dn().s[230]++;
      // For metrics where higher is better (throughput, uptime)
      if (value >= benchmark.excellent) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[44][0]++;
        cov_ynqe030dn().s[231]++;
        return 'EXCELLENT';
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[44][1]++;
      }
      cov_ynqe030dn().s[232]++;
      if (value >= benchmark.good) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[45][0]++;
        cov_ynqe030dn().s[233]++;
        return 'GOOD';
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[45][1]++;
      }
      cov_ynqe030dn().s[234]++;
      if (value >= benchmark.acceptable) {
        /* istanbul ignore next */
        cov_ynqe030dn().b[46][0]++;
        cov_ynqe030dn().s[235]++;
        return 'ACCEPTABLE';
      } else
      /* istanbul ignore next */
      {
        cov_ynqe030dn().b[46][1]++;
      }
      cov_ynqe030dn().s[236]++;
      return 'POOR';
    }
  }
  /**
   * Calculate metric score (0-100)
   *
   * @param metricType - Metric type
   * @param value - Metric value
   * @returns Score (0-100)
   */
  calculateMetricScore(metricType, value) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[37]++;
    const rating =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[237]++, this.getBenchmarkRating(metricType, value));
    /* istanbul ignore next */
    cov_ynqe030dn().s[238]++;
    switch (rating) {
      case 'EXCELLENT':
        /* istanbul ignore next */
        cov_ynqe030dn().b[47][0]++;
        cov_ynqe030dn().s[239]++;
        return 100;
      case 'GOOD':
        /* istanbul ignore next */
        cov_ynqe030dn().b[47][1]++;
        cov_ynqe030dn().s[240]++;
        return 80;
      case 'ACCEPTABLE':
        /* istanbul ignore next */
        cov_ynqe030dn().b[47][2]++;
        cov_ynqe030dn().s[241]++;
        return 60;
      case 'POOR':
        /* istanbul ignore next */
        cov_ynqe030dn().b[47][3]++;
        cov_ynqe030dn().s[242]++;
        return 30;
      default:
        /* istanbul ignore next */
        cov_ynqe030dn().b[47][4]++;
        cov_ynqe030dn().s[243]++;
        return 50;
    }
  }
  /**
   * Generate recommendations based on metric performance
   *
   * @param metricType - Metric type
   * @param value - Current value
   * @param trend - Performance trend
   * @returns Array of recommendations
   */
  generateRecommendations(metricType, value, trend) {
    /* istanbul ignore next */
    cov_ynqe030dn().f[38]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[244]++, []);
    const rating =
    /* istanbul ignore next */
    (cov_ynqe030dn().s[245]++, this.getBenchmarkRating(metricType, value));
    /* istanbul ignore next */
    cov_ynqe030dn().s[246]++;
    if (
    /* istanbul ignore next */
    (cov_ynqe030dn().b[49][0]++, rating === 'POOR') ||
    /* istanbul ignore next */
    (cov_ynqe030dn().b[49][1]++, rating === 'ACCEPTABLE')) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[48][0]++;
      cov_ynqe030dn().s[247]++;
      switch (metricType) {
        case MetricType.LATENCY:
          /* istanbul ignore next */
          cov_ynqe030dn().b[50][0]++;
          cov_ynqe030dn().s[248]++;
          recommendations.push('Consider optimizing network routing or switching to a closer server');
          /* istanbul ignore next */
          cov_ynqe030dn().s[249]++;
          break;
        case MetricType.THROUGHPUT:
          /* istanbul ignore next */
          cov_ynqe030dn().b[50][1]++;
          cov_ynqe030dn().s[250]++;
          recommendations.push('Check for bandwidth limitations or network congestion');
          /* istanbul ignore next */
          cov_ynqe030dn().s[251]++;
          break;
        case MetricType.PACKET_LOSS:
          /* istanbul ignore next */
          cov_ynqe030dn().b[50][2]++;
          cov_ynqe030dn().s[252]++;
          recommendations.push('Investigate network stability and consider alternative routing');
          /* istanbul ignore next */
          cov_ynqe030dn().s[253]++;
          break;
        case MetricType.CONNECTION_TIME:
          /* istanbul ignore next */
          cov_ynqe030dn().b[50][3]++;
          cov_ynqe030dn().s[254]++;
          recommendations.push('Optimize SSH configuration or check server responsiveness');
          /* istanbul ignore next */
          cov_ynqe030dn().s[255]++;
          break;
        case MetricType.UPTIME:
          /* istanbul ignore next */
          cov_ynqe030dn().b[50][4]++;
          cov_ynqe030dn().s[256]++;
          recommendations.push('Implement better connection monitoring and auto-reconnection');
          /* istanbul ignore next */
          cov_ynqe030dn().s[257]++;
          break;
        case MetricType.ERROR_RATE:
          /* istanbul ignore next */
          cov_ynqe030dn().b[50][5]++;
          cov_ynqe030dn().s[258]++;
          recommendations.push('Review error logs and implement better error handling');
          /* istanbul ignore next */
          cov_ynqe030dn().s[259]++;
          break;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[48][1]++;
    }
    cov_ynqe030dn().s[260]++;
    if (
    /* istanbul ignore next */
    (cov_ynqe030dn().b[52][0]++, trend) &&
    /* istanbul ignore next */
    (cov_ynqe030dn().b[52][1]++, trend.trend === 'DEGRADING') &&
    /* istanbul ignore next */
    (cov_ynqe030dn().b[52][2]++, trend.confidence > 70)) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[51][0]++;
      cov_ynqe030dn().s[261]++;
      recommendations.push(`Performance is degrading (${trend.changePercentage.toFixed(1)}% decline)`);
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[51][1]++;
    }
    cov_ynqe030dn().s[262]++;
    return recommendations;
  }
  /**
   * Start automatic report generation
   */
  startAutoReporting() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[39]++;
    cov_ynqe030dn().s[263]++;
    if (this.reportingTimer) {
      /* istanbul ignore next */
      cov_ynqe030dn().b[53][0]++;
      cov_ynqe030dn().s[264]++;
      clearInterval(this.reportingTimer);
    } else
    /* istanbul ignore next */
    {
      cov_ynqe030dn().b[53][1]++;
    }
    cov_ynqe030dn().s[265]++;
    this.reportingTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_ynqe030dn().f[40]++;
      const connections =
      /* istanbul ignore next */
      (cov_ynqe030dn().s[266]++, this.tunnelManager.getAllConnections());
      /* istanbul ignore next */
      cov_ynqe030dn().s[267]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_ynqe030dn().s[268]++;
        try {
          const report =
          /* istanbul ignore next */
          (cov_ynqe030dn().s[269]++, this.generateReport(connection.id));
          /* istanbul ignore next */
          cov_ynqe030dn().s[270]++;
          this.emit('automaticReport', report);
        } catch (error) {
          /* istanbul ignore next */
          cov_ynqe030dn().s[271]++;
          this.logger.error(`Failed to generate automatic report for connection ${connection.id}`, error);
        }
      }
    }, this.config.reportInterval);
    /* istanbul ignore next */
    cov_ynqe030dn().s[272]++;
    this.logger.info('Started automatic performance reporting');
  }
  /**
   * Cleanup analytics resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_ynqe030dn().f[41]++;
    cov_ynqe030dn().s[273]++;
    this.stopCollection();
    /* istanbul ignore next */
    cov_ynqe030dn().s[274]++;
    this.performanceData.clear();
    /* istanbul ignore next */
    cov_ynqe030dn().s[275]++;
    this.logger.info('Tunnel performance analytics cleanup completed');
  }
}
/* istanbul ignore next */
cov_ynqe030dn().s[276]++;
exports.TunnelPerformanceAnalytics = TunnelPerformanceAnalytics;