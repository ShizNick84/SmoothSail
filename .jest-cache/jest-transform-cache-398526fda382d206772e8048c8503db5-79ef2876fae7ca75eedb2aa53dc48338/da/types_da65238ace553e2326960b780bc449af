0cc0e6d8e135ecfd5c6f76188211fd26
"use strict";

/**
 * Sentiment Analysis Types
 * Defines interfaces and types for the sentiment analysis engine
 */
/* istanbul ignore next */
function cov_1k6r1kvvy5() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\types.ts";
  var hash = "79e942968047862f0668890ab2bb2a1e37fbd1c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\types.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\types.ts",
      mappings: ";AAAA;;;GAGG",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\types.ts"],
      sourcesContent: ["/**\r\n * Sentiment Analysis Types\r\n * Defines interfaces and types for the sentiment analysis engine\r\n */\r\n\r\nexport interface SentimentScore {\r\n  source: string;\r\n  score: number; // -100 to 100\r\n  confidence: number; // 0 to 100\r\n  volume: number;\r\n  timestamp: Date;\r\n  keyTopics: string[];\r\n  rawData?: any;\r\n}\r\n\r\nexport interface WeightedSentiment {\r\n  aggregatedScore: number; // -100 to 100\r\n  confidence: number;\r\n  sources: SentimentScore[];\r\n  weights: Record<string, number>;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface SentimentTrend {\r\n  direction: 'BULLISH' | 'BEARISH' | 'NEUTRAL';\r\n  strength: number; // 0 to 100\r\n  duration: number; // minutes\r\n  changeRate: number; // sentiment change per hour\r\n  significantEvents: string[];\r\n}\r\n\r\nexport interface SentimentReport {\r\n  overall: WeightedSentiment;\r\n  trends: SentimentTrend[];\r\n  sources: {\r\n    twitter: SentimentScore;\r\n    reddit: SentimentScore;\r\n    news: SentimentScore;\r\n  };\r\n  alerts: SentimentAlert[];\r\n  recommendations: string[];\r\n}\r\n\r\nexport interface SentimentAlert {\r\n  id: string;\r\n  type: 'EXTREME_POSITIVE' | 'EXTREME_NEGATIVE' | 'RAPID_CHANGE' | 'VOLUME_SPIKE';\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  message: string;\r\n  timestamp: Date;\r\n  source: string;\r\n  data: any;\r\n}\r\n\r\nexport interface TwitterConfig {\r\n  apiKey: string;\r\n  apiSecret: string;\r\n  accessToken: string;\r\n  accessTokenSecret: string;\r\n  bearerToken: string;\r\n}\r\n\r\nexport interface RedditConfig {\r\n  clientId: string;\r\n  clientSecret: string;\r\n  username: string;\r\n  password: string;\r\n  userAgent: string;\r\n}\r\n\r\nexport interface NewsConfig {\r\n  sources: string[];\r\n  apiKeys: Record<string, string>;\r\n  updateInterval: number;\r\n}\r\n\r\nexport interface SentimentConfig {\r\n  twitter: TwitterConfig;\r\n  reddit: RedditConfig;\r\n  news: NewsConfig;\r\n  weights: {\r\n    twitter: number;\r\n    reddit: number;\r\n    news: number;\r\n  };\r\n  thresholds: {\r\n    extremePositive: number;\r\n    extremeNegative: number;\r\n    rapidChange: number;\r\n    volumeSpike: number;\r\n  };\r\n}\r\n\r\nexport interface TweetData {\r\n  id: string;\r\n  text: string;\r\n  author: string;\r\n  followers: number;\r\n  retweets: number;\r\n  likes: number;\r\n  timestamp: Date;\r\n  hashtags: string[];\r\n  mentions: string[];\r\n}\r\n\r\nexport interface RedditPost {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  author: string;\r\n  subreddit: string;\r\n  upvotes: number;\r\n  downvotes: number;\r\n  comments: number;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface NewsArticle {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  source: string;\r\n  author: string;\r\n  timestamp: Date;\r\n  url: string;\r\n  category: string;\r\n}\r\n\r\nexport interface InfluentialAccount {\r\n  username: string;\r\n  platform: 'twitter' | 'reddit';\r\n  followers: number;\r\n  influence: number; // 0 to 100\r\n  reliability: number; // 0 to 100\r\n  specialization: string[];\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "79e942968047862f0668890ab2bb2a1e37fbd1c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1k6r1kvvy5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1k6r1kvvy5();
cov_1k6r1kvvy5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWs2cjFrdnZ5NSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlja1xcRGVza3RvcFxcU21vb3RoU2FpbFxcc3JjXFxhaVxcc2VudGltZW50XFx0eXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogU2VudGltZW50IEFuYWx5c2lzIFR5cGVzXHJcbiAqIERlZmluZXMgaW50ZXJmYWNlcyBhbmQgdHlwZXMgZm9yIHRoZSBzZW50aW1lbnQgYW5hbHlzaXMgZW5naW5lXHJcbiAqL1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTZW50aW1lbnRTY29yZSB7XHJcbiAgc291cmNlOiBzdHJpbmc7XHJcbiAgc2NvcmU6IG51bWJlcjsgLy8gLTEwMCB0byAxMDBcclxuICBjb25maWRlbmNlOiBudW1iZXI7IC8vIDAgdG8gMTAwXHJcbiAgdm9sdW1lOiBudW1iZXI7XHJcbiAgdGltZXN0YW1wOiBEYXRlO1xyXG4gIGtleVRvcGljczogc3RyaW5nW107XHJcbiAgcmF3RGF0YT86IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBXZWlnaHRlZFNlbnRpbWVudCB7XHJcbiAgYWdncmVnYXRlZFNjb3JlOiBudW1iZXI7IC8vIC0xMDAgdG8gMTAwXHJcbiAgY29uZmlkZW5jZTogbnVtYmVyO1xyXG4gIHNvdXJjZXM6IFNlbnRpbWVudFNjb3JlW107XHJcbiAgd2VpZ2h0czogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU2VudGltZW50VHJlbmQge1xyXG4gIGRpcmVjdGlvbjogJ0JVTExJU0gnIHwgJ0JFQVJJU0gnIHwgJ05FVVRSQUwnO1xyXG4gIHN0cmVuZ3RoOiBudW1iZXI7IC8vIDAgdG8gMTAwXHJcbiAgZHVyYXRpb246IG51bWJlcjsgLy8gbWludXRlc1xyXG4gIGNoYW5nZVJhdGU6IG51bWJlcjsgLy8gc2VudGltZW50IGNoYW5nZSBwZXIgaG91clxyXG4gIHNpZ25pZmljYW50RXZlbnRzOiBzdHJpbmdbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTZW50aW1lbnRSZXBvcnQge1xyXG4gIG92ZXJhbGw6IFdlaWdodGVkU2VudGltZW50O1xyXG4gIHRyZW5kczogU2VudGltZW50VHJlbmRbXTtcclxuICBzb3VyY2VzOiB7XHJcbiAgICB0d2l0dGVyOiBTZW50aW1lbnRTY29yZTtcclxuICAgIHJlZGRpdDogU2VudGltZW50U2NvcmU7XHJcbiAgICBuZXdzOiBTZW50aW1lbnRTY29yZTtcclxuICB9O1xyXG4gIGFsZXJ0czogU2VudGltZW50QWxlcnRbXTtcclxuICByZWNvbW1lbmRhdGlvbnM6IHN0cmluZ1tdO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNlbnRpbWVudEFsZXJ0IHtcclxuICBpZDogc3RyaW5nO1xyXG4gIHR5cGU6ICdFWFRSRU1FX1BPU0lUSVZFJyB8ICdFWFRSRU1FX05FR0FUSVZFJyB8ICdSQVBJRF9DSEFOR0UnIHwgJ1ZPTFVNRV9TUElLRSc7XHJcbiAgc2V2ZXJpdHk6ICdMT1cnIHwgJ01FRElVTScgfCAnSElHSCcgfCAnQ1JJVElDQUwnO1xyXG4gIG1lc3NhZ2U6IHN0cmluZztcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcbiAgc291cmNlOiBzdHJpbmc7XHJcbiAgZGF0YTogYW55O1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFR3aXR0ZXJDb25maWcge1xyXG4gIGFwaUtleTogc3RyaW5nO1xyXG4gIGFwaVNlY3JldDogc3RyaW5nO1xyXG4gIGFjY2Vzc1Rva2VuOiBzdHJpbmc7XHJcbiAgYWNjZXNzVG9rZW5TZWNyZXQ6IHN0cmluZztcclxuICBiZWFyZXJUb2tlbjogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJlZGRpdENvbmZpZyB7XHJcbiAgY2xpZW50SWQ6IHN0cmluZztcclxuICBjbGllbnRTZWNyZXQ6IHN0cmluZztcclxuICB1c2VybmFtZTogc3RyaW5nO1xyXG4gIHBhc3N3b3JkOiBzdHJpbmc7XHJcbiAgdXNlckFnZW50OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmV3c0NvbmZpZyB7XHJcbiAgc291cmNlczogc3RyaW5nW107XHJcbiAgYXBpS2V5czogUmVjb3JkPHN0cmluZywgc3RyaW5nPjtcclxuICB1cGRhdGVJbnRlcnZhbDogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNlbnRpbWVudENvbmZpZyB7XHJcbiAgdHdpdHRlcjogVHdpdHRlckNvbmZpZztcclxuICByZWRkaXQ6IFJlZGRpdENvbmZpZztcclxuICBuZXdzOiBOZXdzQ29uZmlnO1xyXG4gIHdlaWdodHM6IHtcclxuICAgIHR3aXR0ZXI6IG51bWJlcjtcclxuICAgIHJlZGRpdDogbnVtYmVyO1xyXG4gICAgbmV3czogbnVtYmVyO1xyXG4gIH07XHJcbiAgdGhyZXNob2xkczoge1xyXG4gICAgZXh0cmVtZVBvc2l0aXZlOiBudW1iZXI7XHJcbiAgICBleHRyZW1lTmVnYXRpdmU6IG51bWJlcjtcclxuICAgIHJhcGlkQ2hhbmdlOiBudW1iZXI7XHJcbiAgICB2b2x1bWVTcGlrZTogbnVtYmVyO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHdlZXREYXRhIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIHRleHQ6IHN0cmluZztcclxuICBhdXRob3I6IHN0cmluZztcclxuICBmb2xsb3dlcnM6IG51bWJlcjtcclxuICByZXR3ZWV0czogbnVtYmVyO1xyXG4gIGxpa2VzOiBudW1iZXI7XHJcbiAgdGltZXN0YW1wOiBEYXRlO1xyXG4gIGhhc2h0YWdzOiBzdHJpbmdbXTtcclxuICBtZW50aW9uczogc3RyaW5nW107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVkZGl0UG9zdCB7XHJcbiAgaWQ6IHN0cmluZztcclxuICB0aXRsZTogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICBhdXRob3I6IHN0cmluZztcclxuICBzdWJyZWRkaXQ6IHN0cmluZztcclxuICB1cHZvdGVzOiBudW1iZXI7XHJcbiAgZG93bnZvdGVzOiBudW1iZXI7XHJcbiAgY29tbWVudHM6IG51bWJlcjtcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmV3c0FydGljbGUge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgdGl0bGU6IHN0cmluZztcclxuICBjb250ZW50OiBzdHJpbmc7XHJcbiAgc291cmNlOiBzdHJpbmc7XHJcbiAgYXV0aG9yOiBzdHJpbmc7XHJcbiAgdGltZXN0YW1wOiBEYXRlO1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIGNhdGVnb3J5OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW5mbHVlbnRpYWxBY2NvdW50IHtcclxuICB1c2VybmFtZTogc3RyaW5nO1xyXG4gIHBsYXRmb3JtOiAndHdpdHRlcicgfCAncmVkZGl0JztcclxuICBmb2xsb3dlcnM6IG51bWJlcjtcclxuICBpbmZsdWVuY2U6IG51bWJlcjsgLy8gMCB0byAxMDBcclxuICByZWxpYWJpbGl0eTogbnVtYmVyOyAvLyAwIHRvIDEwMFxyXG4gIHNwZWNpYWxpemF0aW9uOiBzdHJpbmdbXTtcclxufVxyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtJQUFBQyxTQUFBO0lBQUFDLENBQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7SUFBQUMsQ0FBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBdEIsSUFBQTtFQUFBO0VBQUEsSUFBQXVCLFFBQUEsR0FBQXRCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBb0IsUUFBQSxDQUFBeEIsSUFBQSxLQUFBd0IsUUFBQSxDQUFBeEIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQXVCLFFBQUEsQ0FBQXhCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQW9CLGNBQUEsR0FBQUQsUUFBQSxDQUFBeEIsSUFBQTtFQUFBIiwiaWdub3JlTGlzdCI6W119