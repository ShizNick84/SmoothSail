{"version":3,"names":["cov_1j16w45b8z","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","fs_1","require","path_1","logger_1","encryption_service_1","ConfigurationManager","encryptionService","configPath","backupPath","constructor","EncryptionService","join","process","cwd","validateConfiguration","logger","info","errors","warnings","existsSync","push","valid","envContent","readFileSync","envVars","parseEnvFile","templates","getValidationTemplates","template","categoryResult","validateCategory","securityResult","validateSecurity","length","error","message","createConfiguration","environment","getConfigurationTemplate","backupConfiguration","writeFileSync","chmodSync","updateConfiguration","key","value","encrypt","Error","keyPattern","RegExp","test","replace","timestamp","Date","toISOString","backupFile","mkdirSync","recursive","content","restoreConfiguration","category","rules","required","pattern","description","minLength","rule","trim","typeValidation","validateType","maxLength","isNaN","Number","includes","toLowerCase","JSON","parse","URL","emailPattern","secrets","secret","sshKeyPath","stats","statSync","permissions","mode","parseInt","toString","lines","split","trimmed","startsWith","valueParts","development","staging","production","exports","configurationManager"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\configuration-manager.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - CONFIGURATION MANAGEMENT\r\n * =============================================================================\r\n * \r\n * This module handles configuration validation, environment setup, and\r\n * secure configuration management for production deployment.\r\n */\r\n\r\nimport { existsSync, readFileSync, writeFileSync, chmodSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { logger } from '../core/logger';\r\nimport { EncryptionService } from '../security/encryption-service';\r\n\r\ninterface ConfigValidationRule {\r\n  key: string;\r\n  required: boolean;\r\n  type: 'string' | 'number' | 'boolean' | 'json' | 'url' | 'email' | 'path';\r\n  pattern?: RegExp;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  description: string;\r\n}\r\n\r\ninterface ConfigurationTemplate {\r\n  category: string;\r\n  rules: ConfigValidationRule[];\r\n}\r\n\r\nexport class ConfigurationManager {\r\n  private encryptionService: EncryptionService;\r\n  private configPath: string;\r\n  private backupPath: string;\r\n\r\n  constructor() {\r\n    this.encryptionService = new EncryptionService();\r\n    this.configPath = join(process.cwd(), '.env');\r\n    this.backupPath = join(process.cwd(), 'backups', 'config');\r\n  }\r\n\r\n  /**\r\n   * Validate all configuration settings\r\n   */\r\n  async validateConfiguration(): Promise<{ valid: boolean; errors: string[]; warnings: string[] }> {\r\n    logger.info('üîç Validating configuration...');\r\n\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n\r\n    try {\r\n      // Check if .env file exists\r\n      if (!existsSync(this.configPath)) {\r\n        errors.push('.env file not found');\r\n        return { valid: false, errors, warnings };\r\n      }\r\n\r\n      // Load environment variables\r\n      const envContent = readFileSync(this.configPath, 'utf-8');\r\n      const envVars = this.parseEnvFile(envContent);\r\n\r\n      // Get validation templates\r\n      const templates = this.getValidationTemplates();\r\n\r\n      // Validate each category\r\n      for (const template of templates) {\r\n        const categoryResult = this.validateCategory(template, envVars);\r\n        errors.push(...categoryResult.errors);\r\n        warnings.push(...categoryResult.warnings);\r\n      }\r\n\r\n      // Additional security validations\r\n      const securityResult = await this.validateSecurity(envVars);\r\n      errors.push(...securityResult.errors);\r\n      warnings.push(...securityResult.warnings);\r\n\r\n      const valid = errors.length === 0;\r\n\r\n      if (valid) {\r\n        logger.info('‚úÖ Configuration validation passed');\r\n      } else {\r\n        logger.error(`‚ùå Configuration validation failed with ${errors.length} errors`);\r\n      }\r\n\r\n      return { valid, errors, warnings };\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Configuration validation error:', error);\r\n      errors.push(`Validation error: ${error.message}`);\r\n      return { valid: false, errors, warnings };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create configuration from template\r\n   */\r\n  async createConfiguration(environment: 'development' | 'staging' | 'production'): Promise<void> {\r\n    logger.info(`üìù Creating ${environment} configuration...`);\r\n\r\n    const template = this.getConfigurationTemplate(environment);\r\n    \r\n    // Check if .env already exists\r\n    if (existsSync(this.configPath)) {\r\n      // Create backup\r\n      await this.backupConfiguration();\r\n    }\r\n\r\n    // Write new configuration\r\n    writeFileSync(this.configPath, template);\r\n    chmodSync(this.configPath, 0o600); // Secure permissions\r\n\r\n    logger.info(`‚úÖ Configuration created for ${environment} environment`);\r\n  }\r\n\r\n  /**\r\n   * Update configuration value\r\n   */\r\n  async updateConfiguration(key: string, value: string, encrypt: boolean = false): Promise<void> {\r\n    logger.info(`üîß Updating configuration: ${key}`);\r\n\r\n    if (!existsSync(this.configPath)) {\r\n      throw new Error('.env file not found');\r\n    }\r\n\r\n    let envContent = readFileSync(this.configPath, 'utf-8');\r\n    const envVars = this.parseEnvFile(envContent);\r\n\r\n    // Encrypt value if requested\r\n    if (encrypt) {\r\n      value = await this.encryptionService.encrypt(value);\r\n    }\r\n\r\n    // Update or add the key\r\n    const keyPattern = new RegExp(`^${key}=.*$`, 'm');\r\n    if (keyPattern.test(envContent)) {\r\n      envContent = envContent.replace(keyPattern, `${key}=${value}`);\r\n    } else {\r\n      envContent += `\\n${key}=${value}`;\r\n    }\r\n\r\n    // Write updated configuration\r\n    writeFileSync(this.configPath, envContent);\r\n    chmodSync(this.configPath, 0o600);\r\n\r\n    logger.info(`‚úÖ Configuration updated: ${key}`);\r\n  }\r\n\r\n  /**\r\n   * Backup current configuration\r\n   */\r\n  async backupConfiguration(): Promise<string> {\r\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n    const backupFile = join(this.backupPath, `env-backup-${timestamp}.env`);\r\n\r\n    if (!existsSync(this.backupPath)) {\r\n      require('fs').mkdirSync(this.backupPath, { recursive: true });\r\n    }\r\n\r\n    if (existsSync(this.configPath)) {\r\n      const content = readFileSync(this.configPath, 'utf-8');\r\n      writeFileSync(backupFile, content);\r\n      chmodSync(backupFile, 0o600);\r\n      \r\n      logger.info(`üíæ Configuration backed up to: ${backupFile}`);\r\n      return backupFile;\r\n    }\r\n\r\n    throw new Error('No configuration file to backup');\r\n  }\r\n\r\n  /**\r\n   * Restore configuration from backup\r\n   */\r\n  async restoreConfiguration(backupFile: string): Promise<void> {\r\n    if (!existsSync(backupFile)) {\r\n      throw new Error(`Backup file not found: ${backupFile}`);\r\n    }\r\n\r\n    const content = readFileSync(backupFile, 'utf-8');\r\n    writeFileSync(this.configPath, content);\r\n    chmodSync(this.configPath, 0o600);\r\n\r\n    logger.info(`üì• Configuration restored from: ${backupFile}`);\r\n  }\r\n\r\n  /**\r\n   * Get validation templates for different configuration categories\r\n   */\r\n  private getValidationTemplates(): ConfigurationTemplate[] {\r\n    return [\r\n      {\r\n        category: 'Environment',\r\n        rules: [\r\n          {\r\n            key: 'NODE_ENV',\r\n            required: true,\r\n            type: 'string',\r\n            pattern: /^(development|staging|production)$/,\r\n            description: 'Application environment'\r\n          },\r\n          {\r\n            key: 'PORT',\r\n            required: true,\r\n            type: 'number',\r\n            description: 'Application port'\r\n          },\r\n          {\r\n            key: 'LOG_LEVEL',\r\n            required: true,\r\n            type: 'string',\r\n            pattern: /^(error|warn|info|debug)$/,\r\n            description: 'Logging level'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        category: 'Gate.io API',\r\n        rules: [\r\n          {\r\n            key: 'GATEIO_API_KEY',\r\n            required: true,\r\n            type: 'string',\r\n            minLength: 20,\r\n            description: 'Gate.io API key'\r\n          },\r\n          {\r\n            key: 'GATEIO_API_SECRET',\r\n            required: true,\r\n            type: 'string',\r\n            minLength: 20,\r\n            description: 'Gate.io API secret'\r\n          },\r\n          {\r\n            key: 'GATEIO_API_URL',\r\n            required: true,\r\n            type: 'url',\r\n            description: 'Gate.io API base URL'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        category: 'Oracle SSH Tunnel',\r\n        rules: [\r\n          {\r\n            key: 'ORACLE_HOST',\r\n            required: true,\r\n            type: 'string',\r\n            pattern: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/,\r\n            description: 'Oracle Free Tier IP address'\r\n          },\r\n          {\r\n            key: 'ORACLE_USER',\r\n            required: true,\r\n            type: 'string',\r\n            description: 'Oracle instance username'\r\n          },\r\n          {\r\n            key: 'ORACLE_SSH_KEY_PATH',\r\n            required: true,\r\n            type: 'path',\r\n            description: 'Path to Oracle SSH private key'\r\n          },\r\n          {\r\n            key: 'ORACLE_SSH_PORT',\r\n            required: false,\r\n            type: 'number',\r\n            description: 'Oracle SSH port (default: 22)'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        category: 'Security',\r\n        rules: [\r\n          {\r\n            key: 'JWT_SECRET',\r\n            required: true,\r\n            type: 'string',\r\n            minLength: 32,\r\n            description: 'JWT signing secret'\r\n          },\r\n          {\r\n            key: 'ENCRYPTION_KEY',\r\n            required: true,\r\n            type: 'string',\r\n            minLength: 32,\r\n            description: 'Data encryption key'\r\n          },\r\n          {\r\n            key: 'SESSION_SECRET',\r\n            required: true,\r\n            type: 'string',\r\n            minLength: 32,\r\n            description: 'Session encryption secret'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        category: 'Notifications',\r\n        rules: [\r\n          {\r\n            key: 'EMAIL_HOST',\r\n            required: false,\r\n            type: 'string',\r\n            description: 'SMTP server host'\r\n          },\r\n          {\r\n            key: 'EMAIL_PORT',\r\n            required: false,\r\n            type: 'number',\r\n            description: 'SMTP server port'\r\n          },\r\n          {\r\n            key: 'EMAIL_USER',\r\n            required: false,\r\n            type: 'email',\r\n            description: 'SMTP username'\r\n          },\r\n          {\r\n            key: 'EMAIL_PASS',\r\n            required: false,\r\n            type: 'string',\r\n            description: 'SMTP password'\r\n          },\r\n          {\r\n            key: 'TELEGRAM_BOT_TOKEN',\r\n            required: false,\r\n            type: 'string',\r\n            description: 'Telegram bot token'\r\n          },\r\n          {\r\n            key: 'TELEGRAM_CHAT_ID',\r\n            required: false,\r\n            type: 'string',\r\n            description: 'Telegram chat ID'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        category: 'Database',\r\n        rules: [\r\n          {\r\n            key: 'DATABASE_PATH',\r\n            required: false,\r\n            type: 'path',\r\n            description: 'SQLite database file path'\r\n          },\r\n          {\r\n            key: 'DATABASE_BACKUP_INTERVAL',\r\n            required: false,\r\n            type: 'number',\r\n            description: 'Database backup interval in hours'\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Validate a specific configuration category\r\n   */\r\n  private validateCategory(\r\n    template: ConfigurationTemplate, \r\n    envVars: Record<string, string>\r\n  ): { errors: string[]; warnings: string[] } {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n\r\n    for (const rule of template.rules) {\r\n      const value = envVars[rule.key];\r\n\r\n      // Check if required value is present\r\n      if (rule.required && (!value || value.trim() === '')) {\r\n        errors.push(`${template.category}: ${rule.key} is required - ${rule.description}`);\r\n        continue;\r\n      }\r\n\r\n      // Skip validation if value is not present and not required\r\n      if (!value) {\r\n        continue;\r\n      }\r\n\r\n      // Type validation\r\n      const typeValidation = this.validateType(rule.key, value, rule.type);\r\n      if (!typeValidation.valid) {\r\n        errors.push(`${template.category}: ${rule.key} - ${typeValidation.error}`);\r\n        continue;\r\n      }\r\n\r\n      // Pattern validation\r\n      if (rule.pattern && !rule.pattern.test(value)) {\r\n        errors.push(`${template.category}: ${rule.key} does not match required pattern`);\r\n      }\r\n\r\n      // Length validation\r\n      if (rule.minLength && value.length < rule.minLength) {\r\n        errors.push(`${template.category}: ${rule.key} must be at least ${rule.minLength} characters`);\r\n      }\r\n\r\n      if (rule.maxLength && value.length > rule.maxLength) {\r\n        errors.push(`${template.category}: ${rule.key} must be no more than ${rule.maxLength} characters`);\r\n      }\r\n    }\r\n\r\n    return { errors, warnings };\r\n  }\r\n\r\n  /**\r\n   * Validate value type\r\n   */\r\n  private validateType(key: string, value: string, type: string): { valid: boolean; error?: string } {\r\n    switch (type) {\r\n      case 'number':\r\n        if (isNaN(Number(value))) {\r\n          return { valid: false, error: 'must be a valid number' };\r\n        }\r\n        break;\r\n\r\n      case 'boolean':\r\n        if (!['true', 'false', '1', '0'].includes(value.toLowerCase())) {\r\n          return { valid: false, error: 'must be a boolean value (true/false)' };\r\n        }\r\n        break;\r\n\r\n      case 'json':\r\n        try {\r\n          JSON.parse(value);\r\n        } catch {\r\n          return { valid: false, error: 'must be valid JSON' };\r\n        }\r\n        break;\r\n\r\n      case 'url':\r\n        try {\r\n          new URL(value);\r\n        } catch {\r\n          return { valid: false, error: 'must be a valid URL' };\r\n        }\r\n        break;\r\n\r\n      case 'email':\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!emailPattern.test(value)) {\r\n          return { valid: false, error: 'must be a valid email address' };\r\n        }\r\n        break;\r\n\r\n      case 'path':\r\n        if (!existsSync(value)) {\r\n          return { valid: false, error: 'path does not exist' };\r\n        }\r\n        break;\r\n    }\r\n\r\n    return { valid: true };\r\n  }\r\n\r\n  /**\r\n   * Validate security-specific configurations\r\n   */\r\n  private async validateSecurity(envVars: Record<string, string>): Promise<{ errors: string[]; warnings: string[] }> {\r\n    const errors: string[] = [];\r\n    const warnings: string[] = [];\r\n\r\n    // Check for weak secrets\r\n    const secrets = ['JWT_SECRET', 'ENCRYPTION_KEY', 'SESSION_SECRET'];\r\n    for (const secret of secrets) {\r\n      const value = envVars[secret];\r\n      if (value) {\r\n        if (value.length < 32) {\r\n          errors.push(`Security: ${secret} should be at least 32 characters for security`);\r\n        }\r\n        \r\n        // Check for common weak patterns\r\n        if (/^(password|secret|key|123|abc)/i.test(value)) {\r\n          warnings.push(`Security: ${secret} appears to use a weak pattern`);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Check SSH key permissions\r\n    const sshKeyPath = envVars['ORACLE_SSH_KEY_PATH'];\r\n    if (sshKeyPath && existsSync(sshKeyPath)) {\r\n      try {\r\n        const stats = require('fs').statSync(sshKeyPath);\r\n        const permissions = (stats.mode & parseInt('777', 8)).toString(8);\r\n        if (permissions !== '600') {\r\n          warnings.push(`Security: SSH key ${sshKeyPath} should have 600 permissions (currently ${permissions})`);\r\n        }\r\n      } catch (error) {\r\n        warnings.push(`Security: Could not check SSH key permissions: ${error.message}`);\r\n      }\r\n    }\r\n\r\n    return { errors, warnings };\r\n  }\r\n\r\n  /**\r\n   * Parse .env file content\r\n   */\r\n  private parseEnvFile(content: string): Record<string, string> {\r\n    const envVars: Record<string, string> = {};\r\n    \r\n    const lines = content.split('\\n');\r\n    for (const line of lines) {\r\n      const trimmed = line.trim();\r\n      if (trimmed && !trimmed.startsWith('#')) {\r\n        const [key, ...valueParts] = trimmed.split('=');\r\n        if (key && valueParts.length > 0) {\r\n          const value = valueParts.join('=').replace(/^[\"']|[\"']$/g, '');\r\n          envVars[key.trim()] = value;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return envVars;\r\n  }\r\n\r\n  /**\r\n   * Get configuration template for environment\r\n   */\r\n  private getConfigurationTemplate(environment: string): string {\r\n    const templates = {\r\n      development: `# AI Crypto Trading Agent - Development Configuration\r\n# Generated on ${new Date().toISOString()}\r\n\r\n# Environment\r\nNODE_ENV=development\r\nPORT=3001\r\nLOG_LEVEL=debug\r\n\r\n# Gate.io API (Development/Testnet)\r\nGATEIO_API_KEY=your_development_api_key_here\r\nGATEIO_API_SECRET=your_development_api_secret_here\r\nGATEIO_API_URL=https://api.gateio.ws/api/v4\r\n\r\n# Oracle Free Tier SSH Tunnel\r\nORACLE_HOST=168.138.104.117\r\nORACLE_USER=ubuntu\r\nORACLE_SSH_KEY_PATH=/home/user/.ssh/oracle_key\r\nORACLE_SSH_PORT=22\r\n\r\n# Security (Generate strong secrets!)\r\nJWT_SECRET=your_jwt_secret_here_minimum_32_characters\r\nENCRYPTION_KEY=your_encryption_key_here_minimum_32_characters\r\nSESSION_SECRET=your_session_secret_here_minimum_32_characters\r\n\r\n# Database\r\nDATABASE_PATH=data/trading-dev.db\r\nDATABASE_BACKUP_INTERVAL=24\r\n\r\n# Notifications (Optional)\r\nEMAIL_HOST=smtp.gmail.com\r\nEMAIL_PORT=587\r\nEMAIL_USER=your_email@gmail.com\r\nEMAIL_PASS=your_app_password\r\nTELEGRAM_BOT_TOKEN=your_telegram_bot_token\r\nTELEGRAM_CHAT_ID=your_telegram_chat_id\r\n\r\n# Trading Settings\r\nTRADING_ENABLED=false\r\nRISK_PER_TRADE=0.01\r\nSTOP_LOSS_PERCENTAGE=0.01\r\nMIN_RISK_REWARD_RATIO=1.3\r\n\r\n# AI Settings\r\nSENTIMENT_WEIGHT=0.3\r\nTECHNICAL_WEIGHT=0.7\r\n`,\r\n\r\n      staging: `# AI Crypto Trading Agent - Staging Configuration\r\n# Generated on ${new Date().toISOString()}\r\n\r\n# Environment\r\nNODE_ENV=staging\r\nPORT=3001\r\nLOG_LEVEL=info\r\n\r\n# Gate.io API (Staging)\r\nGATEIO_API_KEY=your_staging_api_key_here\r\nGATEIO_API_SECRET=your_staging_api_secret_here\r\nGATEIO_API_URL=https://api.gateio.ws/api/v4\r\n\r\n# Oracle Free Tier SSH Tunnel\r\nORACLE_HOST=168.138.104.117\r\nORACLE_USER=ubuntu\r\nORACLE_SSH_KEY_PATH=/opt/ai-crypto-trading/.ssh/oracle_key\r\nORACLE_SSH_PORT=22\r\n\r\n# Security (Generate strong secrets!)\r\nJWT_SECRET=your_jwt_secret_here_minimum_32_characters\r\nENCRYPTION_KEY=your_encryption_key_here_minimum_32_characters\r\nSESSION_SECRET=your_session_secret_here_minimum_32_characters\r\n\r\n# Database\r\nDATABASE_PATH=data/trading-staging.db\r\nDATABASE_BACKUP_INTERVAL=12\r\n\r\n# Notifications\r\nEMAIL_HOST=smtp.gmail.com\r\nEMAIL_PORT=587\r\nEMAIL_USER=your_email@gmail.com\r\nEMAIL_PASS=your_app_password\r\nTELEGRAM_BOT_TOKEN=your_telegram_bot_token\r\nTELEGRAM_CHAT_ID=your_telegram_chat_id\r\n\r\n# Trading Settings\r\nTRADING_ENABLED=false\r\nRISK_PER_TRADE=0.01\r\nSTOP_LOSS_PERCENTAGE=0.01\r\nMIN_RISK_REWARD_RATIO=1.3\r\n\r\n# AI Settings\r\nSENTIMENT_WEIGHT=0.3\r\nTECHNICAL_WEIGHT=0.7\r\n`,\r\n\r\n      production: `# AI Crypto Trading Agent - Production Configuration\r\n# Generated on ${new Date().toISOString()}\r\n# WARNING: This file contains sensitive information. Keep secure!\r\n\r\n# Environment\r\nNODE_ENV=production\r\nPORT=3001\r\nLOG_LEVEL=info\r\n\r\n# Gate.io API (Production)\r\nGATEIO_API_KEY=your_production_api_key_here\r\nGATEIO_API_SECRET=your_production_api_secret_here\r\nGATEIO_API_URL=https://api.gateio.ws/api/v4\r\n\r\n# Oracle Free Tier SSH Tunnel\r\nORACLE_HOST=168.138.104.117\r\nORACLE_USER=ubuntu\r\nORACLE_SSH_KEY_PATH=/opt/ai-crypto-trading/.ssh/oracle_key\r\nORACLE_SSH_PORT=22\r\n\r\n# Security (MUST be strong secrets in production!)\r\nJWT_SECRET=CHANGE_THIS_TO_STRONG_SECRET_MINIMUM_32_CHARS\r\nENCRYPTION_KEY=CHANGE_THIS_TO_STRONG_SECRET_MINIMUM_32_CHARS\r\nSESSION_SECRET=CHANGE_THIS_TO_STRONG_SECRET_MINIMUM_32_CHARS\r\n\r\n# Database\r\nDATABASE_PATH=data/trading.db\r\nDATABASE_BACKUP_INTERVAL=6\r\n\r\n# Notifications\r\nEMAIL_HOST=smtp.gmail.com\r\nEMAIL_PORT=587\r\nEMAIL_USER=your_email@gmail.com\r\nEMAIL_PASS=your_app_password\r\nTELEGRAM_BOT_TOKEN=your_telegram_bot_token\r\nTELEGRAM_CHAT_ID=your_telegram_chat_id\r\n\r\n# Trading Settings (Start with conservative settings)\r\nTRADING_ENABLED=false\r\nRISK_PER_TRADE=0.02\r\nSTOP_LOSS_PERCENTAGE=0.01\r\nMIN_RISK_REWARD_RATIO=1.3\r\n\r\n# AI Settings\r\nSENTIMENT_WEIGHT=0.3\r\nTECHNICAL_WEIGHT=0.7\r\n\r\n# Security Headers\r\nSECURITY_HEADERS_ENABLED=true\r\nRATE_LIMIT_ENABLED=true\r\nCORS_ENABLED=true\r\n`\r\n    };\r\n\r\n    return templates[environment] || templates.production;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const configurationManager = new ConfigurationManager();\r\n"],"mappings":"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","ignoreList":[]}