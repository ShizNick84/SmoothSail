d7f7f118f1fba27b36dfb4f6922d59ae
"use strict";

/**
 * =============================================================================
 * FALLBACK MANAGER - LLM FAILOVER AND RECOVERY SYSTEM
 * =============================================================================
 *
 * This module implements comprehensive fallback mechanisms for LLM operations
 * on Intel NUC hardware. It handles model failures, resource constraints,
 * and provides graceful degradation to ensure continuous trading operations.
 *
 * Key Features:
 * - Automatic model switching on failures
 * - Graceful degradation strategies
 * - Circuit breaker patterns for stability
 * - Emergency fallback to rule-based systems
 * - Performance-based model selection
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1txzwp6zc9() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\fallback-manager.ts";
  var hash = "2a4e27a8faa9ca53cfc730a196ccfbb98aee7147";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\fallback-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 62
        }
      },
      "1": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "2": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "3": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "4": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "5": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 31
        }
      },
      "6": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 25
        }
      },
      "7": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 38,
          column: 24
        }
      },
      "8": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "9": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "10": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 16
        }
      },
      "11": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 47
        }
      },
      "13": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "14": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 43
        }
      },
      "15": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 35
        }
      },
      "16": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 69
        }
      },
      "17": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 204,
          column: 10
        }
      },
      "18": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 102
        }
      },
      "19": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "20": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 106
        }
      },
      "21": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "22": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 71
        }
      },
      "23": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 11
        }
      },
      "24": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 62
        }
      },
      "25": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "26": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 64
        }
      },
      "27": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 82
        }
      },
      "28": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "29": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 76
        }
      },
      "30": {
        start: {
          line: 234,
          column: 36
        },
        end: {
          line: 234,
          column: 74
        }
      },
      "31": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "32": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 57
        }
      },
      "33": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "34": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 84
        }
      },
      "35": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 37
        }
      },
      "36": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 89
        }
      },
      "37": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 24
        }
      },
      "38": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "39": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 87
        }
      },
      "40": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "41": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 88
        }
      },
      "42": {
        start: {
          line: 269,
          column: 41
        },
        end: {
          line: 269,
          column: 88
        }
      },
      "43": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "44": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 83
        }
      },
      "45": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 23
        }
      },
      "46": {
        start: {
          line: 275,
          column: 29
        },
        end: {
          line: 275,
          column: 52
        }
      },
      "47": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 79
        }
      },
      "48": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 77
        }
      },
      "49": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "50": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 85
        }
      },
      "51": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 48
        }
      },
      "52": {
        start: {
          line: 291,
          column: 41
        },
        end: {
          line: 291,
          column: 88
        }
      },
      "53": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "54": {
        start: {
          line: 293,
          column: 33
        },
        end: {
          line: 293,
          column: 56
        }
      },
      "55": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 98
        }
      },
      "56": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 85
        }
      },
      "57": {
        start: {
          line: 305,
          column: 27
        },
        end: {
          line: 318,
          column: 10
        }
      },
      "58": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 317,
          column: 15
        }
      },
      "59": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 308,
          column: 33
        }
      },
      "60": {
        start: {
          line: 308,
          column: 20
        },
        end: {
          line: 308,
          column: 33
        }
      },
      "61": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 316,
          column: 17
        }
      },
      "62": {
        start: {
          line: 310,
          column: 31
        },
        end: {
          line: 310,
          column: 66
        }
      },
      "63": {
        start: {
          line: 311,
          column: 31
        },
        end: {
          line: 311,
          column: 66
        }
      },
      "64": {
        start: {
          line: 312,
          column: 31
        },
        end: {
          line: 312,
          column: 68
        }
      },
      "65": {
        start: {
          line: 313,
          column: 32
        },
        end: {
          line: 313,
          column: 68
        }
      },
      "66": {
        start: {
          line: 314,
          column: 32
        },
        end: {
          line: 314,
          column: 68
        }
      },
      "67": {
        start: {
          line: 315,
          column: 29
        },
        end: {
          line: 315,
          column: 42
        }
      },
      "68": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 66
        }
      },
      "69": {
        start: {
          line: 320,
          column: 41
        },
        end: {
          line: 320,
          column: 64
        }
      },
      "70": {
        start: {
          line: 326,
          column: 26
        },
        end: {
          line: 326,
          column: 36
        }
      },
      "71": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "72": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 85
        }
      },
      "73": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 341,
          column: 13
        }
      },
      "74": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 90
        }
      },
      "75": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 340,
          column: 18
        }
      },
      "76": {
        start: {
          line: 343,
          column: 27
        },
        end: {
          line: 343,
          column: 77
        }
      },
      "77": {
        start: {
          line: 344,
          column: 35
        },
        end: {
          line: 352,
          column: 13
        }
      },
      "78": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 54
        }
      },
      "79": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "80": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 99
        }
      },
      "81": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 61
        }
      },
      "82": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 100
        }
      },
      "83": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 61
        }
      },
      "84": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 34
        }
      },
      "85": {
        start: {
          line: 366,
          column: 35
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "86": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 54
        }
      },
      "87": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 98
        }
      },
      "88": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 34
        }
      },
      "89": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "90": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 398,
          column: 13
        }
      },
      "91": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 85
        }
      },
      "92": {
        start: {
          line: 389,
          column: 20
        },
        end: {
          line: 389,
          column: 90
        }
      },
      "93": {
        start: {
          line: 391,
          column: 20
        },
        end: {
          line: 391,
          column: 83
        }
      },
      "94": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 393,
          column: 87
        }
      },
      "95": {
        start: {
          line: 395,
          column: 20
        },
        end: {
          line: 395,
          column: 86
        }
      },
      "96": {
        start: {
          line: 397,
          column: 20
        },
        end: {
          line: 397,
          column: 75
        }
      },
      "97": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 405,
          column: 14
        }
      },
      "98": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "99": {
        start: {
          line: 413,
          column: 33
        },
        end: {
          line: 413,
          column: 74
        }
      },
      "100": {
        start: {
          line: 414,
          column: 30
        },
        end: {
          line: 414,
          column: 34
        }
      },
      "101": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "102": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 72
        }
      },
      "103": {
        start: {
          line: 419,
          column: 17
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "104": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 71
        }
      },
      "105": {
        start: {
          line: 422,
          column: 17
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "106": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 77
        }
      },
      "107": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "108": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 430,
          column: 18
        }
      },
      "109": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 439,
          column: 13
        }
      },
      "110": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 438,
          column: 18
        }
      },
      "111": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 59
        }
      },
      "112": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 100
        }
      },
      "113": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 450,
          column: 14
        }
      },
      "114": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 457,
          column: 14
        }
      },
      "115": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "116": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 78
        }
      },
      "117": {
        start: {
          line: 468,
          column: 32
        },
        end: {
          line: 471,
          column: 13
        }
      },
      "118": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 478,
          column: 14
        }
      },
      "119": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 485,
          column: 14
        }
      },
      "120": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "121": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 87
        }
      },
      "122": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 503,
          column: 14
        }
      },
      "123": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 510,
          column: 14
        }
      },
      "124": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 542,
          column: 9
        }
      },
      "125": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 64
        }
      },
      "126": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 525,
          column: 14
        }
      },
      "127": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 527,
          column: 59
        }
      },
      "128": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 534,
          column: 14
        }
      },
      "129": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 541,
          column: 14
        }
      },
      "130": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 580,
          column: 9
        }
      },
      "131": {
        start: {
          line: 549,
          column: 33
        },
        end: {
          line: 549,
          column: 74
        }
      },
      "132": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 556,
          column: 13
        }
      },
      "133": {
        start: {
          line: 551,
          column: 16
        },
        end: {
          line: 555,
          column: 18
        }
      },
      "134": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 557,
          column: 73
        }
      },
      "135": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 559,
          column: 62
        }
      },
      "136": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 563,
          column: 13
        }
      },
      "137": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 562,
          column: 64
        }
      },
      "138": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 60
        }
      },
      "139": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 572,
          column: 14
        }
      },
      "140": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 579,
          column: 14
        }
      },
      "141": {
        start: {
          line: 586,
          column: 32
        },
        end: {
          line: 586,
          column: 70
        }
      },
      "142": {
        start: {
          line: 588,
          column: 27
        },
        end: {
          line: 592,
          column: 9
        }
      },
      "143": {
        start: {
          line: 593,
          column: 28
        },
        end: {
          line: 593,
          column: 83
        }
      },
      "144": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 599,
          column: 9
        }
      },
      "145": {
        start: {
          line: 595,
          column: 30
        },
        end: {
          line: 595,
          column: 52
        }
      },
      "146": {
        start: {
          line: 596,
          column: 12
        },
        end: {
          line: 598,
          column: 13
        }
      },
      "147": {
        start: {
          line: 597,
          column: 16
        },
        end: {
          line: 597,
          column: 29
        }
      },
      "148": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 600,
          column: 20
        }
      },
      "149": {
        start: {
          line: 607,
          column: 35
        },
        end: {
          line: 607,
          column: 81
        }
      },
      "150": {
        start: {
          line: 608,
          column: 27
        },
        end: {
          line: 608,
          column: 31
        }
      },
      "151": {
        start: {
          line: 609,
          column: 26
        },
        end: {
          line: 609,
          column: 34
        }
      },
      "152": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 617,
          column: 9
        }
      },
      "153": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 616,
          column: 13
        }
      },
      "154": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 614,
          column: 53
        }
      },
      "155": {
        start: {
          line: 615,
          column: 16
        },
        end: {
          line: 615,
          column: 63
        }
      },
      "156": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 618,
          column: 28
        }
      },
      "157": {
        start: {
          line: 625,
          column: 35
        },
        end: {
          line: 625,
          column: 81
        }
      },
      "158": {
        start: {
          line: 626,
          column: 32
        },
        end: {
          line: 626,
          column: 36
        }
      },
      "159": {
        start: {
          line: 627,
          column: 30
        },
        end: {
          line: 627,
          column: 31
        }
      },
      "160": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 635,
          column: 9
        }
      },
      "161": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 634,
          column: 13
        }
      },
      "162": {
        start: {
          line: 632,
          column: 16
        },
        end: {
          line: 632,
          column: 58
        }
      },
      "163": {
        start: {
          line: 633,
          column: 16
        },
        end: {
          line: 633,
          column: 62
        }
      },
      "164": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 33
        }
      },
      "165": {
        start: {
          line: 642,
          column: 31
        },
        end: {
          line: 642,
          column: 66
        }
      },
      "166": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "167": {
        start: {
          line: 644,
          column: 12
        },
        end: {
          line: 644,
          column: 24
        }
      },
      "168": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "169": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 647,
          column: 24
        }
      },
      "170": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 657,
          column: 9
        }
      },
      "171": {
        start: {
          line: 651,
          column: 12
        },
        end: {
          line: 655,
          column: 13
        }
      },
      "172": {
        start: {
          line: 652,
          column: 16
        },
        end: {
          line: 652,
          column: 51
        }
      },
      "173": {
        start: {
          line: 653,
          column: 16
        },
        end: {
          line: 653,
          column: 48
        }
      },
      "174": {
        start: {
          line: 654,
          column: 16
        },
        end: {
          line: 654,
          column: 28
        }
      },
      "175": {
        start: {
          line: 656,
          column: 12
        },
        end: {
          line: 656,
          column: 25
        }
      },
      "176": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 660,
          column: 9
        }
      },
      "177": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 659,
          column: 24
        }
      },
      "178": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 21
        }
      },
      "179": {
        start: {
          line: 667,
          column: 31
        },
        end: {
          line: 667,
          column: 66
        }
      },
      "180": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 671,
          column: 9
        }
      },
      "181": {
        start: {
          line: 669,
          column: 12
        },
        end: {
          line: 669,
          column: 53
        }
      },
      "182": {
        start: {
          line: 670,
          column: 12
        },
        end: {
          line: 670,
          column: 19
        }
      },
      "183": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 672,
          column: 38
        }
      },
      "184": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 673,
          column: 52
        }
      },
      "185": {
        start: {
          line: 674,
          column: 8
        },
        end: {
          line: 674,
          column: 39
        }
      },
      "186": {
        start: {
          line: 676,
          column: 8
        },
        end: {
          line: 681,
          column: 9
        }
      },
      "187": {
        start: {
          line: 677,
          column: 12
        },
        end: {
          line: 677,
          column: 42
        }
      },
      "188": {
        start: {
          line: 678,
          column: 12
        },
        end: {
          line: 678,
          column: 102
        }
      },
      "189": {
        start: {
          line: 679,
          column: 12
        },
        end: {
          line: 679,
          column: 86
        }
      },
      "190": {
        start: {
          line: 680,
          column: 12
        },
        end: {
          line: 680,
          column: 77
        }
      },
      "191": {
        start: {
          line: 687,
          column: 31
        },
        end: {
          line: 687,
          column: 66
        }
      },
      "192": {
        start: {
          line: 688,
          column: 8
        },
        end: {
          line: 690,
          column: 9
        }
      },
      "193": {
        start: {
          line: 689,
          column: 12
        },
        end: {
          line: 689,
          column: 19
        }
      },
      "194": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 691,
          column: 38
        }
      },
      "195": {
        start: {
          line: 692,
          column: 8
        },
        end: {
          line: 692,
          column: 39
        }
      },
      "196": {
        start: {
          line: 693,
          column: 8
        },
        end: {
          line: 700,
          column: 9
        }
      },
      "197": {
        start: {
          line: 694,
          column: 12
        },
        end: {
          line: 699,
          column: 13
        }
      },
      "198": {
        start: {
          line: 695,
          column: 16
        },
        end: {
          line: 695,
          column: 48
        }
      },
      "199": {
        start: {
          line: 696,
          column: 16
        },
        end: {
          line: 696,
          column: 48
        }
      },
      "200": {
        start: {
          line: 697,
          column: 16
        },
        end: {
          line: 697,
          column: 90
        }
      },
      "201": {
        start: {
          line: 698,
          column: 16
        },
        end: {
          line: 698,
          column: 81
        }
      },
      "202": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 708,
          column: 21
        }
      },
      "203": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 714,
          column: 42
        }
      },
      "204": {
        start: {
          line: 715,
          column: 8
        },
        end: {
          line: 717,
          column: 9
        }
      },
      "205": {
        start: {
          line: 716,
          column: 12
        },
        end: {
          line: 716,
          column: 84
        }
      },
      "206": {
        start: {
          line: 723,
          column: 8
        },
        end: {
          line: 725,
          column: 9
        }
      },
      "207": {
        start: {
          line: 724,
          column: 12
        },
        end: {
          line: 724,
          column: 54
        }
      },
      "208": {
        start: {
          line: 726,
          column: 8
        },
        end: {
          line: 726,
          column: 41
        }
      },
      "209": {
        start: {
          line: 732,
          column: 8
        },
        end: {
          line: 732,
          column: 45
        }
      },
      "210": {
        start: {
          line: 738,
          column: 8
        },
        end: {
          line: 738,
          column: 41
        }
      },
      "211": {
        start: {
          line: 744,
          column: 8
        },
        end: {
          line: 744,
          column: 58
        }
      },
      "212": {
        start: {
          line: 745,
          column: 8
        },
        end: {
          line: 751,
          column: 10
        }
      },
      "213": {
        start: {
          line: 752,
          column: 8
        },
        end: {
          line: 752,
          column: 41
        }
      },
      "214": {
        start: {
          line: 758,
          column: 25
        },
        end: {
          line: 758,
          column: 83
        }
      },
      "215": {
        start: {
          line: 758,
          column: 59
        },
        end: {
          line: 758,
          column: 82
        }
      },
      "216": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 761,
          column: 9
        }
      },
      "217": {
        start: {
          line: 760,
          column: 12
        },
        end: {
          line: 760,
          column: 76
        }
      },
      "218": {
        start: {
          line: 762,
          column: 8
        },
        end: {
          line: 762,
          column: 69
        }
      },
      "219": {
        start: {
          line: 768,
          column: 8
        },
        end: {
          line: 768,
          column: 47
        }
      },
      "220": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 769,
          column: 72
        }
      },
      "221": {
        start: {
          line: 769,
          column: 47
        },
        end: {
          line: 769,
          column: 70
        }
      },
      "222": {
        start: {
          line: 770,
          column: 8
        },
        end: {
          line: 770,
          column: 83
        }
      },
      "223": {
        start: {
          line: 776,
          column: 22
        },
        end: {
          line: 776,
          column: 85
        }
      },
      "224": {
        start: {
          line: 776,
          column: 61
        },
        end: {
          line: 776,
          column: 84
        }
      },
      "225": {
        start: {
          line: 777,
          column: 8
        },
        end: {
          line: 781,
          column: 9
        }
      },
      "226": {
        start: {
          line: 778,
          column: 12
        },
        end: {
          line: 778,
          column: 53
        }
      },
      "227": {
        start: {
          line: 779,
          column: 12
        },
        end: {
          line: 779,
          column: 81
        }
      },
      "228": {
        start: {
          line: 780,
          column: 12
        },
        end: {
          line: 780,
          column: 24
        }
      },
      "229": {
        start: {
          line: 782,
          column: 8
        },
        end: {
          line: 782,
          column: 21
        }
      },
      "230": {
        start: {
          line: 788,
          column: 8
        },
        end: {
          line: 788,
          column: 44
        }
      },
      "231": {
        start: {
          line: 794,
          column: 8
        },
        end: {
          line: 806,
          column: 9
        }
      },
      "232": {
        start: {
          line: 795,
          column: 12
        },
        end: {
          line: 795,
          column: 77
        }
      },
      "233": {
        start: {
          line: 797,
          column: 12
        },
        end: {
          line: 797,
          column: 41
        }
      },
      "234": {
        start: {
          line: 798,
          column: 12
        },
        end: {
          line: 798,
          column: 38
        }
      },
      "235": {
        start: {
          line: 799,
          column: 12
        },
        end: {
          line: 799,
          column: 41
        }
      },
      "236": {
        start: {
          line: 800,
          column: 12
        },
        end: {
          line: 800,
          column: 39
        }
      },
      "237": {
        start: {
          line: 801,
          column: 12
        },
        end: {
          line: 801,
          column: 78
        }
      },
      "238": {
        start: {
          line: 804,
          column: 12
        },
        end: {
          line: 804,
          column: 90
        }
      },
      "239": {
        start: {
          line: 805,
          column: 12
        },
        end: {
          line: 805,
          column: 24
        }
      },
      "240": {
        start: {
          line: 809,
          column: 0
        },
        end: {
          line: 809,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 47
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 34
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 66
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 26
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 210
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 212,
            column: 58
          },
          end: {
            line: 212,
            column: 59
          }
        },
        loc: {
          start: {
            line: 212,
            column: 71
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 212
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 215,
            column: 52
          },
          end: {
            line: 215,
            column: 53
          }
        },
        loc: {
          start: {
            line: 215,
            column: 65
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 215
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 218,
            column: 53
          },
          end: {
            line: 218,
            column: 54
          }
        },
        loc: {
          start: {
            line: 218,
            column: 66
          },
          end: {
            line: 220,
            column: 9
          }
        },
        line: 218
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 222,
            column: 43
          },
          end: {
            line: 222,
            column: 44
          }
        },
        loc: {
          start: {
            line: 222,
            column: 54
          },
          end: {
            line: 224,
            column: 9
          }
        },
        line: 222
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 23
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 230
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 40
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 250
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 48
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 265
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 45
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 285
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 47
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 304
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 305,
            column: 58
          },
          end: {
            line: 305,
            column: 59
          }
        },
        loc: {
          start: {
            line: 305,
            column: 70
          },
          end: {
            line: 318,
            column: 9
          }
        },
        line: 305
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 306,
            column: 44
          },
          end: {
            line: 306,
            column: 45
          }
        },
        loc: {
          start: {
            line: 306,
            column: 57
          },
          end: {
            line: 317,
            column: 13
          }
        },
        line: 306
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 320,
            column: 31
          },
          end: {
            line: 320,
            column: 32
          }
        },
        loc: {
          start: {
            line: 320,
            column: 41
          },
          end: {
            line: 320,
            column: 64
          }
        },
        line: 320
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 53
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 325
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        },
        loc: {
          start: {
            line: 383,
            column: 41
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 383
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 50
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 411
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        loc: {
          start: {
            line: 463,
            column: 55
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 463
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 491,
            column: 4
          },
          end: {
            line: 491,
            column: 5
          }
        },
        loc: {
          start: {
            line: 491,
            column: 48
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 491
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 52
          },
          end: {
            line: 543,
            column: 5
          }
        },
        line: 516
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 547,
            column: 4
          },
          end: {
            line: 547,
            column: 5
          }
        },
        loc: {
          start: {
            line: 547,
            column: 51
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 547
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 585,
            column: 4
          },
          end: {
            line: 585,
            column: 5
          }
        },
        loc: {
          start: {
            line: 585,
            column: 41
          },
          end: {
            line: 601,
            column: 5
          }
        },
        line: 585
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 605,
            column: 4
          },
          end: {
            line: 605,
            column: 5
          }
        },
        loc: {
          start: {
            line: 605,
            column: 40
          },
          end: {
            line: 619,
            column: 5
          }
        },
        line: 605
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 623,
            column: 4
          },
          end: {
            line: 623,
            column: 5
          }
        },
        loc: {
          start: {
            line: 623,
            column: 46
          },
          end: {
            line: 637,
            column: 5
          }
        },
        line: 623
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 641,
            column: 4
          },
          end: {
            line: 641,
            column: 5
          }
        },
        loc: {
          start: {
            line: 641,
            column: 27
          },
          end: {
            line: 662,
            column: 5
          }
        },
        line: 641
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 666,
            column: 4
          },
          end: {
            line: 666,
            column: 5
          }
        },
        loc: {
          start: {
            line: 666,
            column: 35
          },
          end: {
            line: 682,
            column: 5
          }
        },
        line: 666
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 686,
            column: 4
          },
          end: {
            line: 686,
            column: 5
          }
        },
        loc: {
          start: {
            line: 686,
            column: 35
          },
          end: {
            line: 701,
            column: 5
          }
        },
        line: 686
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 705,
            column: 4
          },
          end: {
            line: 705,
            column: 5
          }
        },
        loc: {
          start: {
            line: 705,
            column: 33
          },
          end: {
            line: 709,
            column: 5
          }
        },
        line: 705
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 713,
            column: 4
          },
          end: {
            line: 713,
            column: 5
          }
        },
        loc: {
          start: {
            line: 713,
            column: 33
          },
          end: {
            line: 718,
            column: 5
          }
        },
        line: 713
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 722,
            column: 4
          },
          end: {
            line: 722,
            column: 5
          }
        },
        loc: {
          start: {
            line: 722,
            column: 30
          },
          end: {
            line: 727,
            column: 5
          }
        },
        line: 722
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 731,
            column: 4
          },
          end: {
            line: 731,
            column: 5
          }
        },
        loc: {
          start: {
            line: 731,
            column: 30
          },
          end: {
            line: 733,
            column: 5
          }
        },
        line: 731
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 737,
            column: 4
          },
          end: {
            line: 737,
            column: 5
          }
        },
        loc: {
          start: {
            line: 737,
            column: 29
          },
          end: {
            line: 739,
            column: 5
          }
        },
        line: 737
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 743,
            column: 4
          },
          end: {
            line: 743,
            column: 5
          }
        },
        loc: {
          start: {
            line: 743,
            column: 30
          },
          end: {
            line: 753,
            column: 5
          }
        },
        line: 743
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 757,
            column: 4
          },
          end: {
            line: 757,
            column: 5
          }
        },
        loc: {
          start: {
            line: 757,
            column: 54
          },
          end: {
            line: 763,
            column: 5
          }
        },
        line: 757
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 758,
            column: 54
          },
          end: {
            line: 758,
            column: 55
          }
        },
        loc: {
          start: {
            line: 758,
            column: 59
          },
          end: {
            line: 758,
            column: 82
          }
        },
        line: 758
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 767,
            column: 4
          },
          end: {
            line: 767,
            column: 5
          }
        },
        loc: {
          start: {
            line: 767,
            column: 34
          },
          end: {
            line: 771,
            column: 5
          }
        },
        line: 767
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 769,
            column: 37
          },
          end: {
            line: 769,
            column: 38
          }
        },
        loc: {
          start: {
            line: 769,
            column: 47
          },
          end: {
            line: 769,
            column: 70
          }
        },
        line: 769
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 775,
            column: 4
          },
          end: {
            line: 775,
            column: 5
          }
        },
        loc: {
          start: {
            line: 775,
            column: 41
          },
          end: {
            line: 783,
            column: 5
          }
        },
        line: 775
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 776,
            column: 56
          },
          end: {
            line: 776,
            column: 57
          }
        },
        loc: {
          start: {
            line: 776,
            column: 61
          },
          end: {
            line: 776,
            column: 84
          }
        },
        line: 776
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 787,
            column: 4
          },
          end: {
            line: 787,
            column: 5
          }
        },
        loc: {
          start: {
            line: 787,
            column: 28
          },
          end: {
            line: 789,
            column: 5
          }
        },
        line: 787
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 793,
            column: 4
          },
          end: {
            line: 793,
            column: 5
          }
        },
        loc: {
          start: {
            line: 793,
            column: 21
          },
          end: {
            line: 807,
            column: 5
          }
        },
        line: 793
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 213,
            column: 56
          },
          end: {
            line: 213,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 96
          },
          end: {
            line: 213,
            column: 99
          }
        }, {
          start: {
            line: 213,
            column: 102
          },
          end: {
            line: 213,
            column: 104
          }
        }],
        line: 213
      },
      "1": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "2": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "3": {
        loc: {
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 308,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 308,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "4": {
        loc: {
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 316,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 310,
            column: 20
          },
          end: {
            line: 310,
            column: 66
          }
        }, {
          start: {
            line: 311,
            column: 20
          },
          end: {
            line: 311,
            column: 66
          }
        }, {
          start: {
            line: 312,
            column: 20
          },
          end: {
            line: 312,
            column: 68
          }
        }, {
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 313,
            column: 68
          }
        }, {
          start: {
            line: 314,
            column: 20
          },
          end: {
            line: 314,
            column: 68
          }
        }, {
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 315,
            column: 42
          }
        }],
        line: 309
      },
      "5": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "6": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        }, {
          start: {
            line: 359,
            column: 17
          },
          end: {
            line: 362,
            column: 13
          }
        }],
        line: 355
      },
      "7": {
        loc: {
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 398,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 386,
            column: 16
          },
          end: {
            line: 387,
            column: 85
          }
        }, {
          start: {
            line: 388,
            column: 16
          },
          end: {
            line: 389,
            column: 90
          }
        }, {
          start: {
            line: 390,
            column: 16
          },
          end: {
            line: 391,
            column: 83
          }
        }, {
          start: {
            line: 392,
            column: 16
          },
          end: {
            line: 393,
            column: 87
          }
        }, {
          start: {
            line: 394,
            column: 16
          },
          end: {
            line: 395,
            column: 86
          }
        }, {
          start: {
            line: 396,
            column: 16
          },
          end: {
            line: 397,
            column: 75
          }
        }],
        line: 385
      },
      "8": {
        loc: {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }],
        line: 416
      },
      "9": {
        loc: {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: 422,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }],
        line: 419
      },
      "10": {
        loc: {
          start: {
            line: 422,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "11": {
        loc: {
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "12": {
        loc: {
          start: {
            line: 433,
            column: 12
          },
          end: {
            line: 439,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 12
          },
          end: {
            line: 439,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "13": {
        loc: {
          start: {
            line: 469,
            column: 28
          },
          end: {
            line: 469,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 469,
            column: 73
          },
          end: {
            line: 469,
            column: 89
          }
        }, {
          start: {
            line: 469,
            column: 92
          },
          end: {
            line: 469,
            column: 102
          }
        }],
        line: 469
      },
      "14": {
        loc: {
          start: {
            line: 470,
            column: 27
          },
          end: {
            line: 470,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 470,
            column: 77
          },
          end: {
            line: 470,
            column: 93
          }
        }, {
          start: {
            line: 470,
            column: 96
          },
          end: {
            line: 470,
            column: 106
          }
        }],
        line: 470
      },
      "15": {
        loc: {
          start: {
            line: 521,
            column: 27
          },
          end: {
            line: 521,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 27
          },
          end: {
            line: 521,
            column: 44
          }
        }, {
          start: {
            line: 521,
            column: 48
          },
          end: {
            line: 521,
            column: 57
          }
        }],
        line: 521
      },
      "16": {
        loc: {
          start: {
            line: 523,
            column: 31
          },
          end: {
            line: 523,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 31
          },
          end: {
            line: 523,
            column: 55
          }
        }, {
          start: {
            line: 523,
            column: 59
          },
          end: {
            line: 523,
            column: 68
          }
        }],
        line: 523
      },
      "17": {
        loc: {
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 556,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 556,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "18": {
        loc: {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "19": {
        loc: {
          start: {
            line: 593,
            column: 28
          },
          end: {
            line: 593,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 593,
            column: 43
          },
          end: {
            line: 593,
            column: 72
          }
        }, {
          start: {
            line: 593,
            column: 75
          },
          end: {
            line: 593,
            column: 83
          }
        }],
        line: 593
      },
      "20": {
        loc: {
          start: {
            line: 593,
            column: 43
          },
          end: {
            line: 593,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 593,
            column: 43
          },
          end: {
            line: 593,
            column: 67
          }
        }, {
          start: {
            line: 593,
            column: 71
          },
          end: {
            line: 593,
            column: 72
          }
        }],
        line: 593
      },
      "21": {
        loc: {
          start: {
            line: 595,
            column: 30
          },
          end: {
            line: 595,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 595,
            column: 30
          },
          end: {
            line: 595,
            column: 47
          }
        }, {
          start: {
            line: 595,
            column: 51
          },
          end: {
            line: 595,
            column: 52
          }
        }],
        line: 595
      },
      "22": {
        loc: {
          start: {
            line: 596,
            column: 12
          },
          end: {
            line: 598,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 596,
            column: 12
          },
          end: {
            line: 598,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 596
      },
      "23": {
        loc: {
          start: {
            line: 596,
            column: 16
          },
          end: {
            line: 596,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 596,
            column: 16
          },
          end: {
            line: 596,
            column: 39
          }
        }, {
          start: {
            line: 596,
            column: 43
          },
          end: {
            line: 596,
            column: 66
          }
        }],
        line: 596
      },
      "24": {
        loc: {
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 616,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 616,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "25": {
        loc: {
          start: {
            line: 611,
            column: 16
          },
          end: {
            line: 613,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 611,
            column: 16
          },
          end: {
            line: 611,
            column: 54
          }
        }, {
          start: {
            line: 612,
            column: 16
          },
          end: {
            line: 612,
            column: 62
          }
        }, {
          start: {
            line: 613,
            column: 16
          },
          end: {
            line: 613,
            column: 55
          }
        }],
        line: 611
      },
      "26": {
        loc: {
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 634,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 634,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "27": {
        loc: {
          start: {
            line: 629,
            column: 16
          },
          end: {
            line: 631,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 629,
            column: 16
          },
          end: {
            line: 629,
            column: 54
          }
        }, {
          start: {
            line: 630,
            column: 16
          },
          end: {
            line: 630,
            column: 61
          }
        }, {
          start: {
            line: 631,
            column: 16
          },
          end: {
            line: 631,
            column: 55
          }
        }],
        line: 629
      },
      "28": {
        loc: {
          start: {
            line: 643,
            column: 8
          },
          end: {
            line: 645,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 643,
            column: 8
          },
          end: {
            line: 645,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 643
      },
      "29": {
        loc: {
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 648,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 646
      },
      "30": {
        loc: {
          start: {
            line: 649,
            column: 8
          },
          end: {
            line: 657,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 649,
            column: 8
          },
          end: {
            line: 657,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 649
      },
      "31": {
        loc: {
          start: {
            line: 651,
            column: 12
          },
          end: {
            line: 655,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 651,
            column: 12
          },
          end: {
            line: 655,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 651
      },
      "32": {
        loc: {
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 651,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 651,
            column: 16
          },
          end: {
            line: 651,
            column: 44
          }
        }, {
          start: {
            line: 651,
            column: 48
          },
          end: {
            line: 651,
            column: 90
          }
        }],
        line: 651
      },
      "33": {
        loc: {
          start: {
            line: 658,
            column: 8
          },
          end: {
            line: 660,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 658,
            column: 8
          },
          end: {
            line: 660,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 658
      },
      "34": {
        loc: {
          start: {
            line: 668,
            column: 8
          },
          end: {
            line: 671,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 668,
            column: 8
          },
          end: {
            line: 671,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 668
      },
      "35": {
        loc: {
          start: {
            line: 676,
            column: 8
          },
          end: {
            line: 681,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 8
          },
          end: {
            line: 681,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "36": {
        loc: {
          start: {
            line: 688,
            column: 8
          },
          end: {
            line: 690,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 688,
            column: 8
          },
          end: {
            line: 690,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 688
      },
      "37": {
        loc: {
          start: {
            line: 693,
            column: 8
          },
          end: {
            line: 700,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 693,
            column: 8
          },
          end: {
            line: 700,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 693
      },
      "38": {
        loc: {
          start: {
            line: 694,
            column: 12
          },
          end: {
            line: 699,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 694,
            column: 12
          },
          end: {
            line: 699,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 694
      },
      "39": {
        loc: {
          start: {
            line: 715,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 715,
            column: 8
          },
          end: {
            line: 717,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 715
      },
      "40": {
        loc: {
          start: {
            line: 723,
            column: 8
          },
          end: {
            line: 725,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 723,
            column: 8
          },
          end: {
            line: 725,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 723
      },
      "41": {
        loc: {
          start: {
            line: 757,
            column: 40
          },
          end: {
            line: 757,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 757,
            column: 50
          },
          end: {
            line: 757,
            column: 52
          }
        }],
        line: 757
      },
      "42": {
        loc: {
          start: {
            line: 759,
            column: 8
          },
          end: {
            line: 761,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 759,
            column: 8
          },
          end: {
            line: 761,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 759
      },
      "43": {
        loc: {
          start: {
            line: 777,
            column: 8
          },
          end: {
            line: 781,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 777,
            column: 8
          },
          end: {
            line: 781,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 777
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\fallback-manager.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\fallback-manager.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * FALLBACK MANAGER - LLM FAILOVER AND RECOVERY SYSTEM\r\n * =============================================================================\r\n * \r\n * This module implements comprehensive fallback mechanisms for LLM operations\r\n * on Intel NUC hardware. It handles model failures, resource constraints,\r\n * and provides graceful degradation to ensure continuous trading operations.\r\n * \r\n * Key Features:\r\n * - Automatic model switching on failures\r\n * - Graceful degradation strategies\r\n * - Circuit breaker patterns for stability\r\n * - Emergency fallback to rule-based systems\r\n * - Performance-based model selection\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { ModelManager } from './model-manager';\r\nimport { LLMResourceMonitor } from './resource-monitor';\r\nimport type { LLMModelConfig } from './llm-engine';\r\n\r\n/**\r\n * Interface for fallback strategy configuration\r\n */\r\ninterface FallbackStrategy {\r\n  name: string;\r\n  priority: number; // 1-10, higher is preferred\r\n  conditions: FallbackCondition[];\r\n  action: FallbackAction;\r\n  maxRetries: number;\r\n  cooldownPeriod: number; // milliseconds\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Interface for fallback conditions\r\n */\r\ninterface FallbackCondition {\r\n  type: 'MEMORY_PRESSURE' | 'CPU_OVERLOAD' | 'THERMAL_THROTTLING' | 'MODEL_ERROR' | 'TIMEOUT' | 'ACCURACY_DROP';\r\n  threshold: number;\r\n  operator: 'GT' | 'LT' | 'EQ' | 'GTE' | 'LTE';\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Interface for fallback actions\r\n */\r\ninterface FallbackAction {\r\n  type: 'SWITCH_MODEL' | 'REDUCE_PARAMETERS' | 'DISABLE_AI' | 'EMERGENCY_MODE' | 'RESTART_MODEL';\r\n  parameters: Record<string, any>;\r\n  description: string;\r\n}\r\n\r\n/**\r\n * Interface for circuit breaker state\r\n */\r\ninterface CircuitBreakerState {\r\n  modelName: string;\r\n  state: 'CLOSED' | 'OPEN' | 'HALF_OPEN';\r\n  failureCount: number;\r\n  lastFailureTime: Date | null;\r\n  nextRetryTime: Date | null;\r\n  successCount: number;\r\n  totalRequests: number;\r\n}\r\n\r\n/**\r\n * Interface for fallback execution result\r\n */\r\ninterface FallbackResult {\r\n  success: boolean;\r\n  strategyUsed: string;\r\n  actionTaken: string;\r\n  previousState: any;\r\n  newState: any;\r\n  executionTime: number;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Interface for emergency mode configuration\r\n */\r\ninterface EmergencyModeConfig {\r\n  enabled: boolean;\r\n  triggers: string[];\r\n  actions: string[];\r\n  tradingImpact: 'NONE' | 'REDUCED' | 'SUSPENDED';\r\n  notificationLevel: 'INFO' | 'WARNING' | 'CRITICAL';\r\n}\r\n\r\n/**\r\n * Fallback Manager class for LLM operations\r\n * Provides comprehensive failover and recovery mechanisms\r\n */\r\nexport class LLMFallbackManager extends EventEmitter {\r\n  private modelManager: ModelManager;\r\n  private resourceMonitor: LLMResourceMonitor;\r\n  private fallbackStrategies: FallbackStrategy[] = [];\r\n  private circuitBreakers: Map<string, CircuitBreakerState> = new Map();\r\n  private emergencyMode: EmergencyModeConfig;\r\n  private isInitialized: boolean = false;\r\n  private fallbackHistory: FallbackResult[] = [];\r\n  private maxHistorySize: number = 100;\r\n\r\n  // Circuit breaker thresholds\r\n  private readonly CIRCUIT_BREAKER_CONFIG = {\r\n    failureThreshold: 5, // Open circuit after 5 failures\r\n    successThreshold: 3, // Close circuit after 3 successes in half-open state\r\n    timeout: 60000, // 1 minute timeout before trying half-open\r\n    monitoringWindow: 300000 // 5 minutes monitoring window\r\n  };\r\n\r\n  constructor(modelManager: ModelManager, resourceMonitor: LLMResourceMonitor) {\r\n    super();\r\n    this.modelManager = modelManager;\r\n    this.resourceMonitor = resourceMonitor;\r\n    \r\n    // Default emergency mode configuration\r\n    this.emergencyMode = {\r\n      enabled: false,\r\n      triggers: [],\r\n      actions: [],\r\n      tradingImpact: 'NONE',\r\n      notificationLevel: 'INFO'\r\n    };\r\n\r\n    this.initializeDefaultStrategies();\r\n    this.setupEventListeners();\r\n\r\n    logger.info('\uD83D\uDEE1\uFE0F LLM Fallback Manager initialized');\r\n  }\r\n\r\n  /**\r\n   * Initialize default fallback strategies\r\n   */\r\n  private initializeDefaultStrategies(): void {\r\n    this.fallbackStrategies = [\r\n      // Memory pressure fallback\r\n      {\r\n        name: 'memory_pressure_model_switch',\r\n        priority: 9,\r\n        conditions: [\r\n          {\r\n            type: 'MEMORY_PRESSURE',\r\n            threshold: 80, // 80% memory usage\r\n            operator: 'GT',\r\n            description: 'Memory usage above 80%'\r\n          }\r\n        ],\r\n        action: {\r\n          type: 'SWITCH_MODEL',\r\n          parameters: { targetType: 'smaller' },\r\n          description: 'Switch to smaller model'\r\n        },\r\n        maxRetries: 3,\r\n        cooldownPeriod: 30000, // 30 seconds\r\n        description: 'Switch to smaller model when memory pressure is high'\r\n      },\r\n\r\n      // CPU overload fallback\r\n      {\r\n        name: 'cpu_overload_parameter_reduction',\r\n        priority: 8,\r\n        conditions: [\r\n          {\r\n            type: 'CPU_OVERLOAD',\r\n            threshold: 90, // 90% CPU usage\r\n            operator: 'GT',\r\n            description: 'CPU usage above 90%'\r\n          }\r\n        ],\r\n        action: {\r\n          type: 'REDUCE_PARAMETERS',\r\n          parameters: { \r\n            cpuThreads: 'reduce_by_half',\r\n            maxTokens: 'reduce_by_25_percent'\r\n          },\r\n          description: 'Reduce CPU threads and token limits'\r\n        },\r\n        maxRetries: 2,\r\n        cooldownPeriod: 15000, // 15 seconds\r\n        description: 'Reduce model parameters when CPU is overloaded'\r\n      },\r\n\r\n      // Thermal throttling fallback\r\n      {\r\n        name: 'thermal_throttling_emergency',\r\n        priority: 10,\r\n        conditions: [\r\n          {\r\n            type: 'THERMAL_THROTTLING',\r\n            threshold: 1, // Any thermal throttling\r\n            operator: 'GTE',\r\n            description: 'Thermal throttling detected'\r\n          }\r\n        ],\r\n        action: {\r\n          type: 'EMERGENCY_MODE',\r\n          parameters: { \r\n            disableAI: true,\r\n            notifyAdmin: true,\r\n            tradingImpact: 'REDUCED'\r\n          },\r\n          description: 'Enter emergency mode due to thermal issues'\r\n        },\r\n        maxRetries: 1,\r\n        cooldownPeriod: 120000, // 2 minutes\r\n        description: 'Emergency response to thermal throttling'\r\n      },\r\n\r\n      // Model error fallback\r\n      {\r\n        name: 'model_error_restart',\r\n        priority: 7,\r\n        conditions: [\r\n          {\r\n            type: 'MODEL_ERROR',\r\n            threshold: 3, // 3 consecutive errors\r\n            operator: 'GTE',\r\n            description: 'Multiple model errors detected'\r\n          }\r\n        ],\r\n        action: {\r\n          type: 'RESTART_MODEL',\r\n          parameters: { \r\n            clearCache: true,\r\n            validateIntegrity: true\r\n          },\r\n          description: 'Restart model with cache clearing'\r\n        },\r\n        maxRetries: 2,\r\n        cooldownPeriod: 60000, // 1 minute\r\n        description: 'Restart model after multiple errors'\r\n      },\r\n\r\n      // Timeout fallback\r\n      {\r\n        name: 'timeout_model_switch',\r\n        priority: 6,\r\n        conditions: [\r\n          {\r\n            type: 'TIMEOUT',\r\n            threshold: 10000, // 10 seconds\r\n            operator: 'GT',\r\n            description: 'Inference timeout exceeded'\r\n          }\r\n        ],\r\n        action: {\r\n          type: 'SWITCH_MODEL',\r\n          parameters: { targetType: 'faster' },\r\n          description: 'Switch to faster model'\r\n        },\r\n        maxRetries: 2,\r\n        cooldownPeriod: 45000, // 45 seconds\r\n        description: 'Switch to faster model on timeout'\r\n      },\r\n\r\n      // Accuracy drop fallback\r\n      {\r\n        name: 'accuracy_drop_model_switch',\r\n        priority: 5,\r\n        conditions: [\r\n          {\r\n            type: 'ACCURACY_DROP',\r\n            threshold: 70, // Below 70% accuracy\r\n            operator: 'LT',\r\n            description: 'Model accuracy below acceptable threshold'\r\n          }\r\n        ],\r\n        action: {\r\n          type: 'SWITCH_MODEL',\r\n          parameters: { targetType: 'more_accurate' },\r\n          description: 'Switch to more accurate model'\r\n        },\r\n        maxRetries: 2,\r\n        cooldownPeriod: 300000, // 5 minutes\r\n        description: 'Switch to more accurate model when performance drops'\r\n      }\r\n    ];\r\n\r\n    logger.info(`\uD83D\uDEE1\uFE0F Initialized ${this.fallbackStrategies.length} fallback strategies`);\r\n  }\r\n\r\n  /**\r\n   * Set up event listeners for monitoring systems\r\n   */\r\n  private setupEventListeners(): void {\r\n    // Listen to resource monitor events\r\n    this.resourceMonitor.on('criticalMemoryPressure', (metrics) => {\r\n      this.handleResourceEvent('MEMORY_PRESSURE', metrics.memoryPressure === 'CRITICAL' ? 100 : 80);\r\n    });\r\n\r\n    this.resourceMonitor.on('criticalCpuUsage', (metrics) => {\r\n      this.handleResourceEvent('CPU_OVERLOAD', metrics.cpuUsage);\r\n    });\r\n\r\n    this.resourceMonitor.on('thermalThrottling', (metrics) => {\r\n      this.handleResourceEvent('THERMAL_THROTTLING', 1);\r\n    });\r\n\r\n    // Listen to model manager events\r\n    this.modelManager.on('modelError', (error) => {\r\n      this.handleModelError(error.modelName, error.error);\r\n    });\r\n\r\n    logger.info('\uD83D\uDD17 Event listeners set up for fallback management');\r\n  }\r\n\r\n  /**\r\n   * Initialize the fallback manager\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Initializing LLM Fallback Manager...');\r\n\r\n      // Initialize circuit breakers for available models\r\n      const availableModels = this.modelManager.getAvailableModels();\r\n      for (const modelName of availableModels) {\r\n        this.initializeCircuitBreaker(modelName);\r\n      }\r\n\r\n      this.isInitialized = true;\r\n      logger.info('\u2705 LLM Fallback Manager initialized successfully');\r\n\r\n      this.emit('initialized');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize LLM Fallback Manager:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize circuit breaker for a model\r\n   */\r\n  private initializeCircuitBreaker(modelName: string): void {\r\n    this.circuitBreakers.set(modelName, {\r\n      modelName,\r\n      state: 'CLOSED',\r\n      failureCount: 0,\r\n      lastFailureTime: null,\r\n      nextRetryTime: null,\r\n      successCount: 0,\r\n      totalRequests: 0\r\n    });\r\n\r\n    logger.info(`\uD83D\uDD0C Circuit breaker initialized for model: ${modelName}`);\r\n  }\r\n\r\n  /**\r\n   * Handle resource-related events\r\n   */\r\n  private async handleResourceEvent(eventType: string, value: number): Promise<void> {\r\n    try {\r\n      logger.info(`\u26A0\uFE0F Resource event detected: ${eventType} = ${value}`);\r\n\r\n      // Find applicable fallback strategies\r\n      const applicableStrategies = this.findApplicableStrategies(eventType as any, value);\r\n\r\n      if (applicableStrategies.length === 0) {\r\n        logger.info('\u2139\uFE0F No applicable fallback strategies found');\r\n        return;\r\n      }\r\n\r\n      // Execute the highest priority strategy\r\n      const strategy = applicableStrategies[0];\r\n      await this.executeFallbackStrategy(strategy, { eventType, value });\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error handling resource event:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle model errors\r\n   */\r\n  private async handleModelError(modelName: string, error: Error): Promise<void> {\r\n    try {\r\n      logger.error(`\u274C Model error detected for ${modelName}:`, error);\r\n\r\n      // Update circuit breaker\r\n      await this.recordFailure(modelName);\r\n\r\n      // Find applicable fallback strategies\r\n      const applicableStrategies = this.findApplicableStrategies('MODEL_ERROR', 1);\r\n\r\n      if (applicableStrategies.length > 0) {\r\n        const strategy = applicableStrategies[0];\r\n        await this.executeFallbackStrategy(strategy, { modelName, error: error.message });\r\n      }\r\n\r\n    } catch (fallbackError) {\r\n      logger.error('\u274C Error in model error handling:', fallbackError);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find applicable fallback strategies for given conditions\r\n   */\r\n  private findApplicableStrategies(eventType: FallbackCondition['type'], value: number): FallbackStrategy[] {\r\n    const applicable = this.fallbackStrategies.filter(strategy => {\r\n      return strategy.conditions.some(condition => {\r\n        if (condition.type !== eventType) return false;\r\n\r\n        switch (condition.operator) {\r\n          case 'GT': return value > condition.threshold;\r\n          case 'LT': return value < condition.threshold;\r\n          case 'EQ': return value === condition.threshold;\r\n          case 'GTE': return value >= condition.threshold;\r\n          case 'LTE': return value <= condition.threshold;\r\n          default: return false;\r\n        }\r\n      });\r\n    });\r\n\r\n    // Sort by priority (highest first)\r\n    return applicable.sort((a, b) => b.priority - a.priority);\r\n  }\r\n\r\n  /**\r\n   * Execute a fallback strategy\r\n   */\r\n  private async executeFallbackStrategy(\r\n    strategy: FallbackStrategy, \r\n    context: Record<string, any>\r\n  ): Promise<FallbackResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      logger.info(`\uD83D\uDD04 Executing fallback strategy: ${strategy.name}`);\r\n\r\n      // Check cooldown period\r\n      if (await this.isInCooldown(strategy)) {\r\n        logger.info(`\u23F3 Strategy ${strategy.name} is in cooldown period`);\r\n        return {\r\n          success: false,\r\n          strategyUsed: strategy.name,\r\n          actionTaken: 'SKIPPED_COOLDOWN',\r\n          previousState: context,\r\n          newState: context,\r\n          executionTime: Date.now() - startTime,\r\n          error: 'Strategy in cooldown period'\r\n        };\r\n      }\r\n\r\n      // Execute the action\r\n      const result = await this.executeAction(strategy.action, context);\r\n\r\n      const fallbackResult: FallbackResult = {\r\n        success: result.success,\r\n        strategyUsed: strategy.name,\r\n        actionTaken: strategy.action.type,\r\n        previousState: context,\r\n        newState: result.newState,\r\n        executionTime: Date.now() - startTime,\r\n        error: result.error\r\n      };\r\n\r\n      // Record the result\r\n      this.recordFallbackResult(fallbackResult);\r\n\r\n      if (result.success) {\r\n        logger.info(`\u2705 Fallback strategy ${strategy.name} executed successfully`);\r\n        this.emit('fallbackSuccess', fallbackResult);\r\n      } else {\r\n        logger.error(`\u274C Fallback strategy ${strategy.name} failed:`, result.error);\r\n        this.emit('fallbackFailure', fallbackResult);\r\n      }\r\n\r\n      return fallbackResult;\r\n\r\n    } catch (error) {\r\n      const fallbackResult: FallbackResult = {\r\n        success: false,\r\n        strategyUsed: strategy.name,\r\n        actionTaken: strategy.action.type,\r\n        previousState: context,\r\n        newState: context,\r\n        executionTime: Date.now() - startTime,\r\n        error: error.message\r\n      };\r\n\r\n      this.recordFallbackResult(fallbackResult);\r\n      logger.error(`\u274C Error executing fallback strategy ${strategy.name}:`, error);\r\n      \r\n      return fallbackResult;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute a specific fallback action\r\n   */\r\n  private async executeAction(action: FallbackAction, context: Record<string, any>): Promise<{\r\n    success: boolean;\r\n    newState: any;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      switch (action.type) {\r\n        case 'SWITCH_MODEL':\r\n          return await this.executeSwitchModel(action.parameters, context);\r\n          \r\n        case 'REDUCE_PARAMETERS':\r\n          return await this.executeReduceParameters(action.parameters, context);\r\n          \r\n        case 'DISABLE_AI':\r\n          return await this.executeDisableAI(action.parameters, context);\r\n          \r\n        case 'EMERGENCY_MODE':\r\n          return await this.executeEmergencyMode(action.parameters, context);\r\n          \r\n        case 'RESTART_MODEL':\r\n          return await this.executeRestartModel(action.parameters, context);\r\n          \r\n        default:\r\n          throw new Error(`Unknown action type: ${action.type}`);\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        newState: context,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute model switching action\r\n   */\r\n  private async executeSwitchModel(parameters: any, context: any): Promise<{\r\n    success: boolean;\r\n    newState: any;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      const currentModel = this.modelManager.getCurrentActiveModel();\r\n      let targetModel: string | null = null;\r\n\r\n      // Determine target model based on parameters\r\n      if (parameters.targetType === 'smaller') {\r\n        targetModel = await this.findSmallerModel(currentModel);\r\n      } else if (parameters.targetType === 'faster') {\r\n        targetModel = await this.findFasterModel(currentModel);\r\n      } else if (parameters.targetType === 'more_accurate') {\r\n        targetModel = await this.findMoreAccurateModel(currentModel);\r\n      }\r\n\r\n      if (!targetModel) {\r\n        return {\r\n          success: false,\r\n          newState: context,\r\n          error: 'No suitable alternative model found'\r\n        };\r\n      }\r\n\r\n      // Check circuit breaker for target model\r\n      if (!this.canUseModel(targetModel)) {\r\n        return {\r\n          success: false,\r\n          newState: context,\r\n          error: `Target model ${targetModel} circuit breaker is open`\r\n        };\r\n      }\r\n\r\n      // Perform the switch\r\n      await this.modelManager.loadModel(targetModel);\r\n\r\n      logger.info(`\uD83D\uDD04 Successfully switched from ${currentModel} to ${targetModel}`);\r\n\r\n      return {\r\n        success: true,\r\n        newState: {\r\n          ...context,\r\n          previousModel: currentModel,\r\n          newModel: targetModel\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        newState: context,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute parameter reduction action\r\n   */\r\n  private async executeReduceParameters(parameters: any, context: any): Promise<{\r\n    success: boolean;\r\n    newState: any;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      // This would adjust model parameters in production\r\n      logger.info('\uD83D\uDD27 Reducing model parameters:', parameters);\r\n\r\n      // Mock implementation - in production, this would actually adjust parameters\r\n      const adjustments = {\r\n        cpuThreads: parameters.cpuThreads === 'reduce_by_half' ? 'reduced by 50%' : 'adjusted',\r\n        maxTokens: parameters.maxTokens === 'reduce_by_25_percent' ? 'reduced by 25%' : 'adjusted'\r\n      };\r\n\r\n      return {\r\n        success: true,\r\n        newState: {\r\n          ...context,\r\n          parameterAdjustments: adjustments\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        newState: context,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute disable AI action\r\n   */\r\n  private async executeDisableAI(parameters: any, context: any): Promise<{\r\n    success: boolean;\r\n    newState: any;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      logger.warn('\u26A0\uFE0F Disabling AI operations due to fallback trigger');\r\n\r\n      // This would disable AI operations in production\r\n      // For now, just log the action\r\n      \r\n      return {\r\n        success: true,\r\n        newState: {\r\n          ...context,\r\n          aiDisabled: true,\r\n          disableReason: 'Fallback trigger'\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        newState: context,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute emergency mode action\r\n   */\r\n  private async executeEmergencyMode(parameters: any, context: any): Promise<{\r\n    success: boolean;\r\n    newState: any;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      logger.error('\uD83D\uDEA8 ENTERING EMERGENCY MODE');\r\n\r\n      this.emergencyMode = {\r\n        enabled: true,\r\n        triggers: [context.eventType || 'unknown'],\r\n        actions: ['AI_DISABLED', 'TRADING_REDUCED'],\r\n        tradingImpact: parameters.tradingImpact || 'REDUCED',\r\n        notificationLevel: 'CRITICAL'\r\n      };\r\n\r\n      // Emit emergency mode event\r\n      this.emit('emergencyMode', this.emergencyMode);\r\n\r\n      return {\r\n        success: true,\r\n        newState: {\r\n          ...context,\r\n          emergencyMode: this.emergencyMode\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        newState: context,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute model restart action\r\n   */\r\n  private async executeRestartModel(parameters: any, context: any): Promise<{\r\n    success: boolean;\r\n    newState: any;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      const currentModel = this.modelManager.getCurrentActiveModel();\r\n      \r\n      if (!currentModel) {\r\n        return {\r\n          success: false,\r\n          newState: context,\r\n          error: 'No active model to restart'\r\n        };\r\n      }\r\n\r\n      logger.info(`\uD83D\uDD04 Restarting model: ${currentModel}`);\r\n\r\n      // Unload and reload the model\r\n      await this.modelManager.unloadModel(currentModel);\r\n      \r\n      if (parameters.clearCache) {\r\n        // Clear any cached data\r\n        logger.info('\uD83E\uDDF9 Clearing model cache');\r\n      }\r\n\r\n      await this.modelManager.loadModel(currentModel);\r\n\r\n      return {\r\n        success: true,\r\n        newState: {\r\n          ...context,\r\n          modelRestarted: currentModel,\r\n          cacheCleared: parameters.clearCache\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        newState: context,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find a smaller model than the current one\r\n   */\r\n  private async findSmallerModel(currentModel: string | null): Promise<string | null> {\r\n    const availableModels = this.modelManager.getAvailableModels();\r\n    \r\n    // Mock implementation - in production, this would check actual model sizes\r\n    const modelSizes = {\r\n      'phi-3-mini-4k-instruct-q4': 2048,\r\n      'llama-3.2-1b-instruct-q8': 1536,\r\n      'tinyllama-1.1b-chat-q4': 768\r\n    };\r\n\r\n    const currentSize = currentModel ? modelSizes[currentModel] || 0 : Infinity;\r\n    \r\n    for (const model of availableModels) {\r\n      const modelSize = modelSizes[model] || 0;\r\n      if (modelSize < currentSize && this.canUseModel(model)) {\r\n        return model;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Find a faster model than the current one\r\n   */\r\n  private async findFasterModel(currentModel: string | null): Promise<string | null> {\r\n    // Mock implementation - in production, this would check actual performance metrics\r\n    const performanceHistory = this.modelManager.getModelPerformanceHistory();\r\n    \r\n    let fastestModel = null;\r\n    let fastestTime = Infinity;\r\n\r\n    for (const performance of performanceHistory) {\r\n      if (performance.modelName !== currentModel && \r\n          performance.averageInferenceTime < fastestTime &&\r\n          this.canUseModel(performance.modelName)) {\r\n        fastestModel = performance.modelName;\r\n        fastestTime = performance.averageInferenceTime;\r\n      }\r\n    }\r\n\r\n    return fastestModel;\r\n  }\r\n\r\n  /**\r\n   * Find a more accurate model than the current one\r\n   */\r\n  private async findMoreAccurateModel(currentModel: string | null): Promise<string | null> {\r\n    // Mock implementation - in production, this would check actual accuracy metrics\r\n    const performanceHistory = this.modelManager.getModelPerformanceHistory();\r\n    \r\n    let mostAccurateModel = null;\r\n    let highestAccuracy = 0;\r\n\r\n    for (const performance of performanceHistory) {\r\n      if (performance.modelName !== currentModel && \r\n          performance.averageAccuracy > highestAccuracy &&\r\n          this.canUseModel(performance.modelName)) {\r\n        mostAccurateModel = performance.modelName;\r\n        highestAccuracy = performance.averageAccuracy;\r\n      }\r\n    }\r\n\r\n    return mostAccurateModel;\r\n  }\r\n\r\n  /**\r\n   * Check if a model can be used (circuit breaker check)\r\n   */\r\n  private canUseModel(modelName: string): boolean {\r\n    const circuitBreaker = this.circuitBreakers.get(modelName);\r\n    \r\n    if (!circuitBreaker) {\r\n      return true; // No circuit breaker, assume it's usable\r\n    }\r\n\r\n    if (circuitBreaker.state === 'CLOSED') {\r\n      return true;\r\n    }\r\n\r\n    if (circuitBreaker.state === 'OPEN') {\r\n      // Check if we can try half-open\r\n      if (circuitBreaker.nextRetryTime && new Date() >= circuitBreaker.nextRetryTime) {\r\n        circuitBreaker.state = 'HALF_OPEN';\r\n        circuitBreaker.successCount = 0;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (circuitBreaker.state === 'HALF_OPEN') {\r\n      return true; // Allow limited requests in half-open state\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Record a failure for circuit breaker\r\n   */\r\n  private async recordFailure(modelName: string): Promise<void> {\r\n    const circuitBreaker = this.circuitBreakers.get(modelName);\r\n    \r\n    if (!circuitBreaker) {\r\n      this.initializeCircuitBreaker(modelName);\r\n      return;\r\n    }\r\n\r\n    circuitBreaker.failureCount++;\r\n    circuitBreaker.lastFailureTime = new Date();\r\n    circuitBreaker.totalRequests++;\r\n\r\n    // Check if we should open the circuit\r\n    if (circuitBreaker.failureCount >= this.CIRCUIT_BREAKER_CONFIG.failureThreshold) {\r\n      circuitBreaker.state = 'OPEN';\r\n      circuitBreaker.nextRetryTime = new Date(Date.now() + this.CIRCUIT_BREAKER_CONFIG.timeout);\r\n      \r\n      logger.warn(`\uD83D\uDD0C Circuit breaker OPENED for model: ${modelName}`);\r\n      this.emit('circuitBreakerOpened', { modelName, circuitBreaker });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Record a success for circuit breaker\r\n   */\r\n  private async recordSuccess(modelName: string): Promise<void> {\r\n    const circuitBreaker = this.circuitBreakers.get(modelName);\r\n    \r\n    if (!circuitBreaker) {\r\n      return;\r\n    }\r\n\r\n    circuitBreaker.successCount++;\r\n    circuitBreaker.totalRequests++;\r\n\r\n    if (circuitBreaker.state === 'HALF_OPEN') {\r\n      if (circuitBreaker.successCount >= this.CIRCUIT_BREAKER_CONFIG.successThreshold) {\r\n        circuitBreaker.state = 'CLOSED';\r\n        circuitBreaker.failureCount = 0;\r\n        \r\n        logger.info(`\uD83D\uDD0C Circuit breaker CLOSED for model: ${modelName}`);\r\n        this.emit('circuitBreakerClosed', { modelName, circuitBreaker });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a strategy is in cooldown period\r\n   */\r\n  private async isInCooldown(strategy: FallbackStrategy): Promise<boolean> {\r\n    // This would check actual cooldown state in production\r\n    // For now, return false (no cooldown)\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Record fallback result in history\r\n   */\r\n  private recordFallbackResult(result: FallbackResult): void {\r\n    this.fallbackHistory.push(result);\r\n    \r\n    if (this.fallbackHistory.length > this.maxHistorySize) {\r\n      this.fallbackHistory = this.fallbackHistory.slice(-this.maxHistorySize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get fallback history\r\n   */\r\n  public getFallbackHistory(limit?: number): FallbackResult[] {\r\n    if (limit) {\r\n      return this.fallbackHistory.slice(-limit);\r\n    }\r\n    return [...this.fallbackHistory];\r\n  }\r\n\r\n  /**\r\n   * Get circuit breaker states\r\n   */\r\n  public getCircuitBreakerStates(): Map<string, CircuitBreakerState> {\r\n    return new Map(this.circuitBreakers);\r\n  }\r\n\r\n  /**\r\n   * Get emergency mode status\r\n   */\r\n  public getEmergencyModeStatus(): EmergencyModeConfig {\r\n    return { ...this.emergencyMode };\r\n  }\r\n\r\n  /**\r\n   * Exit emergency mode\r\n   */\r\n  public async exitEmergencyMode(): Promise<void> {\r\n    logger.info('\uD83D\uDD04 Exiting emergency mode');\r\n    \r\n    this.emergencyMode = {\r\n      enabled: false,\r\n      triggers: [],\r\n      actions: [],\r\n      tradingImpact: 'NONE',\r\n      notificationLevel: 'INFO'\r\n    };\r\n\r\n    this.emit('emergencyModeExited');\r\n  }\r\n\r\n  /**\r\n   * Manually trigger a fallback strategy\r\n   */\r\n  public async triggerFallback(strategyName: string, context: Record<string, any> = {}): Promise<FallbackResult> {\r\n    const strategy = this.fallbackStrategies.find(s => s.name === strategyName);\r\n    \r\n    if (!strategy) {\r\n      throw new Error(`Fallback strategy not found: ${strategyName}`);\r\n    }\r\n\r\n    return await this.executeFallbackStrategy(strategy, context);\r\n  }\r\n\r\n  /**\r\n   * Add custom fallback strategy\r\n   */\r\n  public addFallbackStrategy(strategy: FallbackStrategy): void {\r\n    this.fallbackStrategies.push(strategy);\r\n    this.fallbackStrategies.sort((a, b) => b.priority - a.priority);\r\n    \r\n    logger.info(`\u2795 Added custom fallback strategy: ${strategy.name}`);\r\n  }\r\n\r\n  /**\r\n   * Remove fallback strategy\r\n   */\r\n  public removeFallbackStrategy(strategyName: string): boolean {\r\n    const index = this.fallbackStrategies.findIndex(s => s.name === strategyName);\r\n    \r\n    if (index >= 0) {\r\n      this.fallbackStrategies.splice(index, 1);\r\n      logger.info(`\u2796 Removed fallback strategy: ${strategyName}`);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get all fallback strategies\r\n   */\r\n  public getFallbackStrategies(): FallbackStrategy[] {\r\n    return [...this.fallbackStrategies];\r\n  }\r\n\r\n  /**\r\n   * Shutdown the fallback manager\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDED1 Shutting down LLM Fallback Manager...');\r\n\r\n      // Clear all data\r\n      this.circuitBreakers.clear();\r\n      this.fallbackHistory = [];\r\n      this.fallbackStrategies = [];\r\n\r\n      this.isInitialized = false;\r\n      \r\n      logger.info('\u2705 LLM Fallback Manager shutdown completed');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error during LLM Fallback Manager shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  FallbackStrategy,\r\n  FallbackCondition,\r\n  FallbackAction,\r\n  CircuitBreakerState,\r\n  FallbackResult,\r\n  EmergencyModeConfig\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2a4e27a8faa9ca53cfc730a196ccfbb98aee7147"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1txzwp6zc9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1txzwp6zc9();
cov_1txzwp6zc9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1txzwp6zc9().s[1]++;
exports.LLMFallbackManager = void 0;
const events_1 =
/* istanbul ignore next */
(cov_1txzwp6zc9().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_1txzwp6zc9().s[3]++, require("@/core/logging/logger"));
/**
 * Fallback Manager class for LLM operations
 * Provides comprehensive failover and recovery mechanisms
 */
class LLMFallbackManager extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  modelManager;
  resourceMonitor;
  fallbackStrategies =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().s[4]++, []);
  circuitBreakers =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().s[5]++, new Map());
  emergencyMode;
  isInitialized =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().s[6]++, false);
  fallbackHistory =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().s[7]++, []);
  maxHistorySize =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().s[8]++, 100);
  // Circuit breaker thresholds
  CIRCUIT_BREAKER_CONFIG =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().s[9]++, {
    failureThreshold: 5,
    // Open circuit after 5 failures
    successThreshold: 3,
    // Close circuit after 3 successes in half-open state
    timeout: 60000,
    // 1 minute timeout before trying half-open
    monitoringWindow: 300000 // 5 minutes monitoring window
  });
  constructor(modelManager, resourceMonitor) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[0]++;
    cov_1txzwp6zc9().s[10]++;
    super();
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[11]++;
    this.modelManager = modelManager;
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[12]++;
    this.resourceMonitor = resourceMonitor;
    // Default emergency mode configuration
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[13]++;
    this.emergencyMode = {
      enabled: false,
      triggers: [],
      actions: [],
      tradingImpact: 'NONE',
      notificationLevel: 'INFO'
    };
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[14]++;
    this.initializeDefaultStrategies();
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[15]++;
    this.setupEventListeners();
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[16]++;
    logger_1.logger.info('🛡️ LLM Fallback Manager initialized');
  }
  /**
   * Initialize default fallback strategies
   */
  initializeDefaultStrategies() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[1]++;
    cov_1txzwp6zc9().s[17]++;
    this.fallbackStrategies = [
    // Memory pressure fallback
    {
      name: 'memory_pressure_model_switch',
      priority: 9,
      conditions: [{
        type: 'MEMORY_PRESSURE',
        threshold: 80,
        // 80% memory usage
        operator: 'GT',
        description: 'Memory usage above 80%'
      }],
      action: {
        type: 'SWITCH_MODEL',
        parameters: {
          targetType: 'smaller'
        },
        description: 'Switch to smaller model'
      },
      maxRetries: 3,
      cooldownPeriod: 30000,
      // 30 seconds
      description: 'Switch to smaller model when memory pressure is high'
    },
    // CPU overload fallback
    {
      name: 'cpu_overload_parameter_reduction',
      priority: 8,
      conditions: [{
        type: 'CPU_OVERLOAD',
        threshold: 90,
        // 90% CPU usage
        operator: 'GT',
        description: 'CPU usage above 90%'
      }],
      action: {
        type: 'REDUCE_PARAMETERS',
        parameters: {
          cpuThreads: 'reduce_by_half',
          maxTokens: 'reduce_by_25_percent'
        },
        description: 'Reduce CPU threads and token limits'
      },
      maxRetries: 2,
      cooldownPeriod: 15000,
      // 15 seconds
      description: 'Reduce model parameters when CPU is overloaded'
    },
    // Thermal throttling fallback
    {
      name: 'thermal_throttling_emergency',
      priority: 10,
      conditions: [{
        type: 'THERMAL_THROTTLING',
        threshold: 1,
        // Any thermal throttling
        operator: 'GTE',
        description: 'Thermal throttling detected'
      }],
      action: {
        type: 'EMERGENCY_MODE',
        parameters: {
          disableAI: true,
          notifyAdmin: true,
          tradingImpact: 'REDUCED'
        },
        description: 'Enter emergency mode due to thermal issues'
      },
      maxRetries: 1,
      cooldownPeriod: 120000,
      // 2 minutes
      description: 'Emergency response to thermal throttling'
    },
    // Model error fallback
    {
      name: 'model_error_restart',
      priority: 7,
      conditions: [{
        type: 'MODEL_ERROR',
        threshold: 3,
        // 3 consecutive errors
        operator: 'GTE',
        description: 'Multiple model errors detected'
      }],
      action: {
        type: 'RESTART_MODEL',
        parameters: {
          clearCache: true,
          validateIntegrity: true
        },
        description: 'Restart model with cache clearing'
      },
      maxRetries: 2,
      cooldownPeriod: 60000,
      // 1 minute
      description: 'Restart model after multiple errors'
    },
    // Timeout fallback
    {
      name: 'timeout_model_switch',
      priority: 6,
      conditions: [{
        type: 'TIMEOUT',
        threshold: 10000,
        // 10 seconds
        operator: 'GT',
        description: 'Inference timeout exceeded'
      }],
      action: {
        type: 'SWITCH_MODEL',
        parameters: {
          targetType: 'faster'
        },
        description: 'Switch to faster model'
      },
      maxRetries: 2,
      cooldownPeriod: 45000,
      // 45 seconds
      description: 'Switch to faster model on timeout'
    },
    // Accuracy drop fallback
    {
      name: 'accuracy_drop_model_switch',
      priority: 5,
      conditions: [{
        type: 'ACCURACY_DROP',
        threshold: 70,
        // Below 70% accuracy
        operator: 'LT',
        description: 'Model accuracy below acceptable threshold'
      }],
      action: {
        type: 'SWITCH_MODEL',
        parameters: {
          targetType: 'more_accurate'
        },
        description: 'Switch to more accurate model'
      },
      maxRetries: 2,
      cooldownPeriod: 300000,
      // 5 minutes
      description: 'Switch to more accurate model when performance drops'
    }];
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[18]++;
    logger_1.logger.info(`🛡️ Initialized ${this.fallbackStrategies.length} fallback strategies`);
  }
  /**
   * Set up event listeners for monitoring systems
   */
  setupEventListeners() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[2]++;
    cov_1txzwp6zc9().s[19]++;
    // Listen to resource monitor events
    this.resourceMonitor.on('criticalMemoryPressure', metrics => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[3]++;
      cov_1txzwp6zc9().s[20]++;
      this.handleResourceEvent('MEMORY_PRESSURE', metrics.memoryPressure === 'CRITICAL' ?
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[0][0]++, 100) :
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[0][1]++, 80));
    });
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[21]++;
    this.resourceMonitor.on('criticalCpuUsage', metrics => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[4]++;
      cov_1txzwp6zc9().s[22]++;
      this.handleResourceEvent('CPU_OVERLOAD', metrics.cpuUsage);
    });
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[23]++;
    this.resourceMonitor.on('thermalThrottling', metrics => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[5]++;
      cov_1txzwp6zc9().s[24]++;
      this.handleResourceEvent('THERMAL_THROTTLING', 1);
    });
    // Listen to model manager events
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[25]++;
    this.modelManager.on('modelError', error => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[6]++;
      cov_1txzwp6zc9().s[26]++;
      this.handleModelError(error.modelName, error.error);
    });
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[27]++;
    logger_1.logger.info('🔗 Event listeners set up for fallback management');
  }
  /**
   * Initialize the fallback manager
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[7]++;
    cov_1txzwp6zc9().s[28]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[29]++;
      logger_1.logger.info('🚀 Initializing LLM Fallback Manager...');
      // Initialize circuit breakers for available models
      const availableModels =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[30]++, this.modelManager.getAvailableModels());
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[31]++;
      for (const modelName of availableModels) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[32]++;
        this.initializeCircuitBreaker(modelName);
      }
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[33]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[34]++;
      logger_1.logger.info('✅ LLM Fallback Manager initialized successfully');
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[35]++;
      this.emit('initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[36]++;
      logger_1.logger.error('❌ Failed to initialize LLM Fallback Manager:', error);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[37]++;
      throw error;
    }
  }
  /**
   * Initialize circuit breaker for a model
   */
  initializeCircuitBreaker(modelName) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[8]++;
    cov_1txzwp6zc9().s[38]++;
    this.circuitBreakers.set(modelName, {
      modelName,
      state: 'CLOSED',
      failureCount: 0,
      lastFailureTime: null,
      nextRetryTime: null,
      successCount: 0,
      totalRequests: 0
    });
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[39]++;
    logger_1.logger.info(`🔌 Circuit breaker initialized for model: ${modelName}`);
  }
  /**
   * Handle resource-related events
   */
  async handleResourceEvent(eventType, value) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[9]++;
    cov_1txzwp6zc9().s[40]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[41]++;
      logger_1.logger.info(`⚠️ Resource event detected: ${eventType} = ${value}`);
      // Find applicable fallback strategies
      const applicableStrategies =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[42]++, this.findApplicableStrategies(eventType, value));
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[43]++;
      if (applicableStrategies.length === 0) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[1][0]++;
        cov_1txzwp6zc9().s[44]++;
        logger_1.logger.info('ℹ️ No applicable fallback strategies found');
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[45]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[1][1]++;
      }
      // Execute the highest priority strategy
      const strategy =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[46]++, applicableStrategies[0]);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[47]++;
      await this.executeFallbackStrategy(strategy, {
        eventType,
        value
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[48]++;
      logger_1.logger.error('❌ Error handling resource event:', error);
    }
  }
  /**
   * Handle model errors
   */
  async handleModelError(modelName, error) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[10]++;
    cov_1txzwp6zc9().s[49]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[50]++;
      logger_1.logger.error(`❌ Model error detected for ${modelName}:`, error);
      // Update circuit breaker
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[51]++;
      await this.recordFailure(modelName);
      // Find applicable fallback strategies
      const applicableStrategies =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[52]++, this.findApplicableStrategies('MODEL_ERROR', 1));
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[53]++;
      if (applicableStrategies.length > 0) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[2][0]++;
        const strategy =
        /* istanbul ignore next */
        (cov_1txzwp6zc9().s[54]++, applicableStrategies[0]);
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[55]++;
        await this.executeFallbackStrategy(strategy, {
          modelName,
          error: error.message
        });
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[2][1]++;
      }
    } catch (fallbackError) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[56]++;
      logger_1.logger.error('❌ Error in model error handling:', fallbackError);
    }
  }
  /**
   * Find applicable fallback strategies for given conditions
   */
  findApplicableStrategies(eventType, value) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[11]++;
    const applicable =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[57]++, this.fallbackStrategies.filter(strategy => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[12]++;
      cov_1txzwp6zc9().s[58]++;
      return strategy.conditions.some(condition => {
        /* istanbul ignore next */
        cov_1txzwp6zc9().f[13]++;
        cov_1txzwp6zc9().s[59]++;
        if (condition.type !== eventType) {
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[3][0]++;
          cov_1txzwp6zc9().s[60]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_1txzwp6zc9().b[3][1]++;
        }
        cov_1txzwp6zc9().s[61]++;
        switch (condition.operator) {
          case 'GT':
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[4][0]++;
            cov_1txzwp6zc9().s[62]++;
            return value > condition.threshold;
          case 'LT':
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[4][1]++;
            cov_1txzwp6zc9().s[63]++;
            return value < condition.threshold;
          case 'EQ':
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[4][2]++;
            cov_1txzwp6zc9().s[64]++;
            return value === condition.threshold;
          case 'GTE':
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[4][3]++;
            cov_1txzwp6zc9().s[65]++;
            return value >= condition.threshold;
          case 'LTE':
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[4][4]++;
            cov_1txzwp6zc9().s[66]++;
            return value <= condition.threshold;
          default:
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[4][5]++;
            cov_1txzwp6zc9().s[67]++;
            return false;
        }
      });
    }));
    // Sort by priority (highest first)
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[68]++;
    return applicable.sort((a, b) => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[14]++;
      cov_1txzwp6zc9().s[69]++;
      return b.priority - a.priority;
    });
  }
  /**
   * Execute a fallback strategy
   */
  async executeFallbackStrategy(strategy, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[15]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[70]++, Date.now());
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[71]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[72]++;
      logger_1.logger.info(`🔄 Executing fallback strategy: ${strategy.name}`);
      // Check cooldown period
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[73]++;
      if (await this.isInCooldown(strategy)) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[5][0]++;
        cov_1txzwp6zc9().s[74]++;
        logger_1.logger.info(`⏳ Strategy ${strategy.name} is in cooldown period`);
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[75]++;
        return {
          success: false,
          strategyUsed: strategy.name,
          actionTaken: 'SKIPPED_COOLDOWN',
          previousState: context,
          newState: context,
          executionTime: Date.now() - startTime,
          error: 'Strategy in cooldown period'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[5][1]++;
      }
      // Execute the action
      const result =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[76]++, await this.executeAction(strategy.action, context));
      const fallbackResult =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[77]++, {
        success: result.success,
        strategyUsed: strategy.name,
        actionTaken: strategy.action.type,
        previousState: context,
        newState: result.newState,
        executionTime: Date.now() - startTime,
        error: result.error
      });
      // Record the result
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[78]++;
      this.recordFallbackResult(fallbackResult);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[79]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[6][0]++;
        cov_1txzwp6zc9().s[80]++;
        logger_1.logger.info(`✅ Fallback strategy ${strategy.name} executed successfully`);
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[81]++;
        this.emit('fallbackSuccess', fallbackResult);
      } else {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[6][1]++;
        cov_1txzwp6zc9().s[82]++;
        logger_1.logger.error(`❌ Fallback strategy ${strategy.name} failed:`, result.error);
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[83]++;
        this.emit('fallbackFailure', fallbackResult);
      }
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[84]++;
      return fallbackResult;
    } catch (error) {
      const fallbackResult =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[85]++, {
        success: false,
        strategyUsed: strategy.name,
        actionTaken: strategy.action.type,
        previousState: context,
        newState: context,
        executionTime: Date.now() - startTime,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[86]++;
      this.recordFallbackResult(fallbackResult);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[87]++;
      logger_1.logger.error(`❌ Error executing fallback strategy ${strategy.name}:`, error);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[88]++;
      return fallbackResult;
    }
  }
  /**
   * Execute a specific fallback action
   */
  async executeAction(action, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[16]++;
    cov_1txzwp6zc9().s[89]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[90]++;
      switch (action.type) {
        case 'SWITCH_MODEL':
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[7][0]++;
          cov_1txzwp6zc9().s[91]++;
          return await this.executeSwitchModel(action.parameters, context);
        case 'REDUCE_PARAMETERS':
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[7][1]++;
          cov_1txzwp6zc9().s[92]++;
          return await this.executeReduceParameters(action.parameters, context);
        case 'DISABLE_AI':
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[7][2]++;
          cov_1txzwp6zc9().s[93]++;
          return await this.executeDisableAI(action.parameters, context);
        case 'EMERGENCY_MODE':
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[7][3]++;
          cov_1txzwp6zc9().s[94]++;
          return await this.executeEmergencyMode(action.parameters, context);
        case 'RESTART_MODEL':
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[7][4]++;
          cov_1txzwp6zc9().s[95]++;
          return await this.executeRestartModel(action.parameters, context);
        default:
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[7][5]++;
          cov_1txzwp6zc9().s[96]++;
          throw new Error(`Unknown action type: ${action.type}`);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[97]++;
      return {
        success: false,
        newState: context,
        error: error.message
      };
    }
  }
  /**
   * Execute model switching action
   */
  async executeSwitchModel(parameters, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[17]++;
    cov_1txzwp6zc9().s[98]++;
    try {
      const currentModel =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[99]++, this.modelManager.getCurrentActiveModel());
      let targetModel =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[100]++, null);
      // Determine target model based on parameters
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[101]++;
      if (parameters.targetType === 'smaller') {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[8][0]++;
        cov_1txzwp6zc9().s[102]++;
        targetModel = await this.findSmallerModel(currentModel);
      } else {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[8][1]++;
        cov_1txzwp6zc9().s[103]++;
        if (parameters.targetType === 'faster') {
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[9][0]++;
          cov_1txzwp6zc9().s[104]++;
          targetModel = await this.findFasterModel(currentModel);
        } else {
          /* istanbul ignore next */
          cov_1txzwp6zc9().b[9][1]++;
          cov_1txzwp6zc9().s[105]++;
          if (parameters.targetType === 'more_accurate') {
            /* istanbul ignore next */
            cov_1txzwp6zc9().b[10][0]++;
            cov_1txzwp6zc9().s[106]++;
            targetModel = await this.findMoreAccurateModel(currentModel);
          } else
          /* istanbul ignore next */
          {
            cov_1txzwp6zc9().b[10][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[107]++;
      if (!targetModel) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[11][0]++;
        cov_1txzwp6zc9().s[108]++;
        return {
          success: false,
          newState: context,
          error: 'No suitable alternative model found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[11][1]++;
      }
      // Check circuit breaker for target model
      cov_1txzwp6zc9().s[109]++;
      if (!this.canUseModel(targetModel)) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[12][0]++;
        cov_1txzwp6zc9().s[110]++;
        return {
          success: false,
          newState: context,
          error: `Target model ${targetModel} circuit breaker is open`
        };
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[12][1]++;
      }
      // Perform the switch
      cov_1txzwp6zc9().s[111]++;
      await this.modelManager.loadModel(targetModel);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[112]++;
      logger_1.logger.info(`🔄 Successfully switched from ${currentModel} to ${targetModel}`);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[113]++;
      return {
        success: true,
        newState: {
          ...context,
          previousModel: currentModel,
          newModel: targetModel
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[114]++;
      return {
        success: false,
        newState: context,
        error: error.message
      };
    }
  }
  /**
   * Execute parameter reduction action
   */
  async executeReduceParameters(parameters, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[18]++;
    cov_1txzwp6zc9().s[115]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[116]++;
      // This would adjust model parameters in production
      logger_1.logger.info('🔧 Reducing model parameters:', parameters);
      // Mock implementation - in production, this would actually adjust parameters
      const adjustments =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[117]++, {
        cpuThreads: parameters.cpuThreads === 'reduce_by_half' ?
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[13][0]++, 'reduced by 50%') :
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[13][1]++, 'adjusted'),
        maxTokens: parameters.maxTokens === 'reduce_by_25_percent' ?
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[14][0]++, 'reduced by 25%') :
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[14][1]++, 'adjusted')
      });
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[118]++;
      return {
        success: true,
        newState: {
          ...context,
          parameterAdjustments: adjustments
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[119]++;
      return {
        success: false,
        newState: context,
        error: error.message
      };
    }
  }
  /**
   * Execute disable AI action
   */
  async executeDisableAI(parameters, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[19]++;
    cov_1txzwp6zc9().s[120]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[121]++;
      logger_1.logger.warn('⚠️ Disabling AI operations due to fallback trigger');
      // This would disable AI operations in production
      // For now, just log the action
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[122]++;
      return {
        success: true,
        newState: {
          ...context,
          aiDisabled: true,
          disableReason: 'Fallback trigger'
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[123]++;
      return {
        success: false,
        newState: context,
        error: error.message
      };
    }
  }
  /**
   * Execute emergency mode action
   */
  async executeEmergencyMode(parameters, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[20]++;
    cov_1txzwp6zc9().s[124]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[125]++;
      logger_1.logger.error('🚨 ENTERING EMERGENCY MODE');
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[126]++;
      this.emergencyMode = {
        enabled: true,
        triggers: [
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[15][0]++, context.eventType) ||
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[15][1]++, 'unknown')],
        actions: ['AI_DISABLED', 'TRADING_REDUCED'],
        tradingImpact:
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[16][0]++, parameters.tradingImpact) ||
        /* istanbul ignore next */
        (cov_1txzwp6zc9().b[16][1]++, 'REDUCED'),
        notificationLevel: 'CRITICAL'
      };
      // Emit emergency mode event
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[127]++;
      this.emit('emergencyMode', this.emergencyMode);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[128]++;
      return {
        success: true,
        newState: {
          ...context,
          emergencyMode: this.emergencyMode
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[129]++;
      return {
        success: false,
        newState: context,
        error: error.message
      };
    }
  }
  /**
   * Execute model restart action
   */
  async executeRestartModel(parameters, context) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[21]++;
    cov_1txzwp6zc9().s[130]++;
    try {
      const currentModel =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[131]++, this.modelManager.getCurrentActiveModel());
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[132]++;
      if (!currentModel) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[17][0]++;
        cov_1txzwp6zc9().s[133]++;
        return {
          success: false,
          newState: context,
          error: 'No active model to restart'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[17][1]++;
      }
      cov_1txzwp6zc9().s[134]++;
      logger_1.logger.info(`🔄 Restarting model: ${currentModel}`);
      // Unload and reload the model
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[135]++;
      await this.modelManager.unloadModel(currentModel);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[136]++;
      if (parameters.clearCache) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[18][0]++;
        cov_1txzwp6zc9().s[137]++;
        // Clear any cached data
        logger_1.logger.info('🧹 Clearing model cache');
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[18][1]++;
      }
      cov_1txzwp6zc9().s[138]++;
      await this.modelManager.loadModel(currentModel);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[139]++;
      return {
        success: true,
        newState: {
          ...context,
          modelRestarted: currentModel,
          cacheCleared: parameters.clearCache
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[140]++;
      return {
        success: false,
        newState: context,
        error: error.message
      };
    }
  }
  /**
   * Find a smaller model than the current one
   */
  async findSmallerModel(currentModel) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[22]++;
    const availableModels =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[141]++, this.modelManager.getAvailableModels());
    // Mock implementation - in production, this would check actual model sizes
    const modelSizes =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[142]++, {
      'phi-3-mini-4k-instruct-q4': 2048,
      'llama-3.2-1b-instruct-q8': 1536,
      'tinyllama-1.1b-chat-q4': 768
    });
    const currentSize =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[143]++, currentModel ?
    /* istanbul ignore next */
    (cov_1txzwp6zc9().b[19][0]++,
    /* istanbul ignore next */
    (cov_1txzwp6zc9().b[20][0]++, modelSizes[currentModel]) ||
    /* istanbul ignore next */
    (cov_1txzwp6zc9().b[20][1]++, 0)) :
    /* istanbul ignore next */
    (cov_1txzwp6zc9().b[19][1]++, Infinity));
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[144]++;
    for (const model of availableModels) {
      const modelSize =
      /* istanbul ignore next */
      (cov_1txzwp6zc9().s[145]++,
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[21][0]++, modelSizes[model]) ||
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[21][1]++, 0));
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[146]++;
      if (
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[23][0]++, modelSize < currentSize) &&
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[23][1]++, this.canUseModel(model))) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[22][0]++;
        cov_1txzwp6zc9().s[147]++;
        return model;
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[22][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[148]++;
    return null;
  }
  /**
   * Find a faster model than the current one
   */
  async findFasterModel(currentModel) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[23]++;
    // Mock implementation - in production, this would check actual performance metrics
    const performanceHistory =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[149]++, this.modelManager.getModelPerformanceHistory());
    let fastestModel =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[150]++, null);
    let fastestTime =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[151]++, Infinity);
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[152]++;
    for (const performance of performanceHistory) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[153]++;
      if (
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[25][0]++, performance.modelName !== currentModel) &&
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[25][1]++, performance.averageInferenceTime < fastestTime) &&
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[25][2]++, this.canUseModel(performance.modelName))) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[24][0]++;
        cov_1txzwp6zc9().s[154]++;
        fastestModel = performance.modelName;
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[155]++;
        fastestTime = performance.averageInferenceTime;
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[24][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[156]++;
    return fastestModel;
  }
  /**
   * Find a more accurate model than the current one
   */
  async findMoreAccurateModel(currentModel) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[24]++;
    // Mock implementation - in production, this would check actual accuracy metrics
    const performanceHistory =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[157]++, this.modelManager.getModelPerformanceHistory());
    let mostAccurateModel =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[158]++, null);
    let highestAccuracy =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[159]++, 0);
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[160]++;
    for (const performance of performanceHistory) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[161]++;
      if (
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[27][0]++, performance.modelName !== currentModel) &&
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[27][1]++, performance.averageAccuracy > highestAccuracy) &&
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[27][2]++, this.canUseModel(performance.modelName))) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[26][0]++;
        cov_1txzwp6zc9().s[162]++;
        mostAccurateModel = performance.modelName;
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[163]++;
        highestAccuracy = performance.averageAccuracy;
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[26][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[164]++;
    return mostAccurateModel;
  }
  /**
   * Check if a model can be used (circuit breaker check)
   */
  canUseModel(modelName) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[25]++;
    const circuitBreaker =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[165]++, this.circuitBreakers.get(modelName));
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[166]++;
    if (!circuitBreaker) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[28][0]++;
      cov_1txzwp6zc9().s[167]++;
      return true; // No circuit breaker, assume it's usable
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[28][1]++;
    }
    cov_1txzwp6zc9().s[168]++;
    if (circuitBreaker.state === 'CLOSED') {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[29][0]++;
      cov_1txzwp6zc9().s[169]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[29][1]++;
    }
    cov_1txzwp6zc9().s[170]++;
    if (circuitBreaker.state === 'OPEN') {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[30][0]++;
      cov_1txzwp6zc9().s[171]++;
      // Check if we can try half-open
      if (
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[32][0]++, circuitBreaker.nextRetryTime) &&
      /* istanbul ignore next */
      (cov_1txzwp6zc9().b[32][1]++, new Date() >= circuitBreaker.nextRetryTime)) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[31][0]++;
        cov_1txzwp6zc9().s[172]++;
        circuitBreaker.state = 'HALF_OPEN';
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[173]++;
        circuitBreaker.successCount = 0;
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[174]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[31][1]++;
      }
      cov_1txzwp6zc9().s[175]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[30][1]++;
    }
    cov_1txzwp6zc9().s[176]++;
    if (circuitBreaker.state === 'HALF_OPEN') {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[33][0]++;
      cov_1txzwp6zc9().s[177]++;
      return true; // Allow limited requests in half-open state
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[33][1]++;
    }
    cov_1txzwp6zc9().s[178]++;
    return false;
  }
  /**
   * Record a failure for circuit breaker
   */
  async recordFailure(modelName) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[26]++;
    const circuitBreaker =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[179]++, this.circuitBreakers.get(modelName));
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[180]++;
    if (!circuitBreaker) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[34][0]++;
      cov_1txzwp6zc9().s[181]++;
      this.initializeCircuitBreaker(modelName);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[182]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[34][1]++;
    }
    cov_1txzwp6zc9().s[183]++;
    circuitBreaker.failureCount++;
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[184]++;
    circuitBreaker.lastFailureTime = new Date();
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[185]++;
    circuitBreaker.totalRequests++;
    // Check if we should open the circuit
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[186]++;
    if (circuitBreaker.failureCount >= this.CIRCUIT_BREAKER_CONFIG.failureThreshold) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[35][0]++;
      cov_1txzwp6zc9().s[187]++;
      circuitBreaker.state = 'OPEN';
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[188]++;
      circuitBreaker.nextRetryTime = new Date(Date.now() + this.CIRCUIT_BREAKER_CONFIG.timeout);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[189]++;
      logger_1.logger.warn(`🔌 Circuit breaker OPENED for model: ${modelName}`);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[190]++;
      this.emit('circuitBreakerOpened', {
        modelName,
        circuitBreaker
      });
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[35][1]++;
    }
  }
  /**
   * Record a success for circuit breaker
   */
  async recordSuccess(modelName) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[27]++;
    const circuitBreaker =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[191]++, this.circuitBreakers.get(modelName));
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[192]++;
    if (!circuitBreaker) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[36][0]++;
      cov_1txzwp6zc9().s[193]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[36][1]++;
    }
    cov_1txzwp6zc9().s[194]++;
    circuitBreaker.successCount++;
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[195]++;
    circuitBreaker.totalRequests++;
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[196]++;
    if (circuitBreaker.state === 'HALF_OPEN') {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[37][0]++;
      cov_1txzwp6zc9().s[197]++;
      if (circuitBreaker.successCount >= this.CIRCUIT_BREAKER_CONFIG.successThreshold) {
        /* istanbul ignore next */
        cov_1txzwp6zc9().b[38][0]++;
        cov_1txzwp6zc9().s[198]++;
        circuitBreaker.state = 'CLOSED';
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[199]++;
        circuitBreaker.failureCount = 0;
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[200]++;
        logger_1.logger.info(`🔌 Circuit breaker CLOSED for model: ${modelName}`);
        /* istanbul ignore next */
        cov_1txzwp6zc9().s[201]++;
        this.emit('circuitBreakerClosed', {
          modelName,
          circuitBreaker
        });
      } else
      /* istanbul ignore next */
      {
        cov_1txzwp6zc9().b[38][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[37][1]++;
    }
  }
  /**
   * Check if a strategy is in cooldown period
   */
  async isInCooldown(strategy) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[28]++;
    cov_1txzwp6zc9().s[202]++;
    // This would check actual cooldown state in production
    // For now, return false (no cooldown)
    return false;
  }
  /**
   * Record fallback result in history
   */
  recordFallbackResult(result) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[29]++;
    cov_1txzwp6zc9().s[203]++;
    this.fallbackHistory.push(result);
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[204]++;
    if (this.fallbackHistory.length > this.maxHistorySize) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[39][0]++;
      cov_1txzwp6zc9().s[205]++;
      this.fallbackHistory = this.fallbackHistory.slice(-this.maxHistorySize);
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[39][1]++;
    }
  }
  /**
   * Get fallback history
   */
  getFallbackHistory(limit) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[30]++;
    cov_1txzwp6zc9().s[206]++;
    if (limit) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[40][0]++;
      cov_1txzwp6zc9().s[207]++;
      return this.fallbackHistory.slice(-limit);
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[40][1]++;
    }
    cov_1txzwp6zc9().s[208]++;
    return [...this.fallbackHistory];
  }
  /**
   * Get circuit breaker states
   */
  getCircuitBreakerStates() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[31]++;
    cov_1txzwp6zc9().s[209]++;
    return new Map(this.circuitBreakers);
  }
  /**
   * Get emergency mode status
   */
  getEmergencyModeStatus() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[32]++;
    cov_1txzwp6zc9().s[210]++;
    return {
      ...this.emergencyMode
    };
  }
  /**
   * Exit emergency mode
   */
  async exitEmergencyMode() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[33]++;
    cov_1txzwp6zc9().s[211]++;
    logger_1.logger.info('🔄 Exiting emergency mode');
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[212]++;
    this.emergencyMode = {
      enabled: false,
      triggers: [],
      actions: [],
      tradingImpact: 'NONE',
      notificationLevel: 'INFO'
    };
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[213]++;
    this.emit('emergencyModeExited');
  }
  /**
   * Manually trigger a fallback strategy
   */
  async triggerFallback(strategyName, context =
  /* istanbul ignore next */
  (cov_1txzwp6zc9().b[41][0]++, {})) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[34]++;
    const strategy =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[214]++, this.fallbackStrategies.find(s => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[35]++;
      cov_1txzwp6zc9().s[215]++;
      return s.name === strategyName;
    }));
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[216]++;
    if (!strategy) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[42][0]++;
      cov_1txzwp6zc9().s[217]++;
      throw new Error(`Fallback strategy not found: ${strategyName}`);
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[42][1]++;
    }
    cov_1txzwp6zc9().s[218]++;
    return await this.executeFallbackStrategy(strategy, context);
  }
  /**
   * Add custom fallback strategy
   */
  addFallbackStrategy(strategy) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[36]++;
    cov_1txzwp6zc9().s[219]++;
    this.fallbackStrategies.push(strategy);
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[220]++;
    this.fallbackStrategies.sort((a, b) => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[37]++;
      cov_1txzwp6zc9().s[221]++;
      return b.priority - a.priority;
    });
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[222]++;
    logger_1.logger.info(`➕ Added custom fallback strategy: ${strategy.name}`);
  }
  /**
   * Remove fallback strategy
   */
  removeFallbackStrategy(strategyName) {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[38]++;
    const index =
    /* istanbul ignore next */
    (cov_1txzwp6zc9().s[223]++, this.fallbackStrategies.findIndex(s => {
      /* istanbul ignore next */
      cov_1txzwp6zc9().f[39]++;
      cov_1txzwp6zc9().s[224]++;
      return s.name === strategyName;
    }));
    /* istanbul ignore next */
    cov_1txzwp6zc9().s[225]++;
    if (index >= 0) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().b[43][0]++;
      cov_1txzwp6zc9().s[226]++;
      this.fallbackStrategies.splice(index, 1);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[227]++;
      logger_1.logger.info(`➖ Removed fallback strategy: ${strategyName}`);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[228]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1txzwp6zc9().b[43][1]++;
    }
    cov_1txzwp6zc9().s[229]++;
    return false;
  }
  /**
   * Get all fallback strategies
   */
  getFallbackStrategies() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[40]++;
    cov_1txzwp6zc9().s[230]++;
    return [...this.fallbackStrategies];
  }
  /**
   * Shutdown the fallback manager
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_1txzwp6zc9().f[41]++;
    cov_1txzwp6zc9().s[231]++;
    try {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[232]++;
      logger_1.logger.info('🛑 Shutting down LLM Fallback Manager...');
      // Clear all data
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[233]++;
      this.circuitBreakers.clear();
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[234]++;
      this.fallbackHistory = [];
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[235]++;
      this.fallbackStrategies = [];
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[236]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[237]++;
      logger_1.logger.info('✅ LLM Fallback Manager shutdown completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[238]++;
      logger_1.logger.error('❌ Error during LLM Fallback Manager shutdown:', error);
      /* istanbul ignore next */
      cov_1txzwp6zc9().s[239]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_1txzwp6zc9().s[240]++;
exports.LLMFallbackManager = LLMFallbackManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,