f3e1a2ffe5f812a19a685061ae8242ec
"use strict";

/**
 * =============================================================================
 * MULTI-CHANNEL NOTIFICATION ROUTER
 * =============================================================================
 *
 * Implements priority-based notification routing, alert deduplication,
 * rate limiting, and escalation procedures for the AI crypto trading agent.
 *
 * Features:
 * - Priority-based routing across multiple channels
 * - Alert deduplication and rate limiting
 * - Escalation procedures for critical alerts
 * - Notification preference management
 * - Delivery confirmation and retry logic
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1cozmnh8yg() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-router.ts";
  var hash = "4920aee9242d8791a4dadb3ff7f022c293cdb028";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-router.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 114
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 49
        }
      },
      "3": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "4": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "5": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 36,
          column: 84
        }
      },
      "6": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 47
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "11": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 47,
          column: 66
        }
      },
      "12": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "13": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "14": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "15": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "16": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "17": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 59,
          column: 66
        }
      },
      "18": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 41
        }
      },
      "19": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "20": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "21": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "22": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 41
        }
      },
      "23": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 49
        }
      },
      "24": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 25
        }
      },
      "25": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "26": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 72
        }
      },
      "27": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 38
        }
      },
      "28": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 44
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 40
        }
      },
      "30": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 41
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 34
        }
      },
      "32": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 75
        }
      },
      "34": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 49
        }
      },
      "35": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 52
        }
      },
      "36": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "37": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 40
        }
      },
      "38": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 38
        }
      },
      "39": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 83
        }
      },
      "40": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 88
        }
      },
      "41": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 24
        }
      },
      "42": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "43": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 67
        }
      },
      "44": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "45": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 104
        }
      },
      "46": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "47": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 84
        }
      },
      "48": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "49": {
        start: {
          line: 117,
          column: 34
        },
        end: {
          line: 117,
          column: 63
        }
      },
      "50": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "51": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 89
        }
      },
      "52": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "53": {
        start: {
          line: 123,
          column: 33
        },
        end: {
          line: 123,
          column: 80
        }
      },
      "54": {
        start: {
          line: 125,
          column: 36
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "55": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "56": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 143,
          column: 17
        }
      },
      "57": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 142,
          column: 21
        }
      },
      "58": {
        start: {
          line: 129,
          column: 39
        },
        end: {
          line: 129,
          column: 88
        }
      },
      "59": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 53
        }
      },
      "60": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 91
        }
      },
      "61": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 141,
          column: 27
        }
      },
      "62": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "63": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 63
        }
      },
      "64": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 58
        }
      },
      "65": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "66": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 73
        }
      },
      "67": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 101
        }
      },
      "68": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 35
        }
      },
      "69": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 81
        }
      },
      "70": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 24
        }
      },
      "71": {
        start: {
          line: 167,
          column: 22
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "72": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 44
        }
      },
      "73": {
        start: {
          line: 184,
          column: 28
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "74": {
        start: {
          line: 190,
          column: 22
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "75": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 44
        }
      },
      "76": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "77": {
        start: {
          line: 212,
          column: 22
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "78": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 44
        }
      },
      "79": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "80": {
        start: {
          line: 230,
          column: 25
        },
        end: {
          line: 230,
          column: 63
        }
      },
      "81": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "82": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 43
        }
      },
      "83": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 29
        }
      },
      "84": {
        start: {
          line: 236,
          column: 29
        },
        end: {
          line: 236,
          column: 70
        }
      },
      "85": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "86": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 43
        }
      },
      "87": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 28
        }
      },
      "88": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "89": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 21
        }
      },
      "90": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "91": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 72
        }
      },
      "92": {
        start: {
          line: 271,
          column: 30
        },
        end: {
          line: 271,
          column: 32
        }
      },
      "93": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "94": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 274,
          column: 25
        }
      },
      "95": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 25
        }
      },
      "96": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 277,
          column: 25
        }
      },
      "97": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 25
        }
      },
      "98": {
        start: {
          line: 279,
          column: 34
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "99": {
        start: {
          line: 286,
          column: 39
        },
        end: {
          line: 286,
          column: 76
        }
      },
      "100": {
        start: {
          line: 287,
          column: 38
        },
        end: {
          line: 287,
          column: 74
        }
      },
      "101": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "102": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "103": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "104": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 25
        }
      },
      "105": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 37
        }
      },
      "106": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 29
        }
      },
      "107": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "108": {
        start: {
          line: 303,
          column: 31
        },
        end: {
          line: 303,
          column: 73
        }
      },
      "109": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "110": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 29
        }
      },
      "111": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 20
        }
      },
      "112": {
        start: {
          line: 314,
          column: 22
        },
        end: {
          line: 314,
          column: 38
        }
      },
      "113": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 25
        }
      },
      "114": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "115": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "116": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 36
        }
      },
      "117": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 33
        }
      },
      "118": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 21
        }
      },
      "119": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "120": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 54
        }
      },
      "121": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 76
        }
      },
      "122": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 68
        }
      },
      "123": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 338,
          column: 68
        }
      },
      "124": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 76
        }
      },
      "125": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 29
        }
      },
      "126": {
        start: {
          line: 349,
          column: 29
        },
        end: {
          line: 349,
          column: 31
        }
      },
      "127": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "128": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 354,
          column: 13
        }
      },
      "129": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 40
        }
      },
      "130": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 25
        }
      },
      "131": {
        start: {
          line: 355,
          column: 33
        },
        end: {
          line: 355,
          column: 63
        }
      },
      "132": {
        start: {
          line: 356,
          column: 24
        },
        end: {
          line: 356,
          column: 34
        }
      },
      "133": {
        start: {
          line: 357,
          column: 29
        },
        end: {
          line: 357,
          column: 66
        }
      },
      "134": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 385,
          column: 13
        }
      },
      "135": {
        start: {
          line: 359,
          column: 38
        },
        end: {
          line: 359,
          column: 84
        }
      },
      "136": {
        start: {
          line: 360,
          column: 38
        },
        end: {
          line: 360,
          column: 72
        }
      },
      "137": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 366,
          column: 17
        }
      },
      "138": {
        start: {
          line: 363,
          column: 20
        },
        end: {
          line: 363,
          column: 39
        }
      },
      "139": {
        start: {
          line: 364,
          column: 20
        },
        end: {
          line: 364,
          column: 47
        }
      },
      "140": {
        start: {
          line: 365,
          column: 20
        },
        end: {
          line: 365,
          column: 45
        }
      },
      "141": {
        start: {
          line: 368,
          column: 36
        },
        end: {
          line: 368,
          column: 75
        }
      },
      "142": {
        start: {
          line: 369,
          column: 34
        },
        end: {
          line: 369,
          column: 71
        }
      },
      "143": {
        start: {
          line: 370,
          column: 33
        },
        end: {
          line: 370,
          column: 69
        }
      },
      "144": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 375,
          column: 17
        }
      },
      "145": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 44
        }
      },
      "146": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 87
        }
      },
      "147": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 374,
          column: 29
        }
      },
      "148": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 33
        }
      },
      "149": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 384,
          column: 19
        }
      },
      "150": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 36
        }
      },
      "151": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 28
        }
      },
      "152": {
        start: {
          line: 394,
          column: 26
        },
        end: {
          line: 394,
          column: 36
        }
      },
      "153": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "154": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 406,
          column: 13
        }
      },
      "155": {
        start: {
          line: 399,
          column: 20
        },
        end: {
          line: 399,
          column: 65
        }
      },
      "156": {
        start: {
          line: 400,
          column: 20
        },
        end: {
          line: 400,
          column: 26
        }
      },
      "157": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 402,
          column: 68
        }
      },
      "158": {
        start: {
          line: 403,
          column: 20
        },
        end: {
          line: 403,
          column: 26
        }
      },
      "159": {
        start: {
          line: 405,
          column: 20
        },
        end: {
          line: 405,
          column: 71
        }
      },
      "160": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 414,
          column: 14
        }
      },
      "161": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 424,
          column: 14
        }
      },
      "162": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "163": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 442,
          column: 19
        }
      },
      "164": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 450,
          column: 19
        }
      },
      "165": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 453,
          column: 98
        }
      },
      "166": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "167": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 93
        }
      },
      "168": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 470,
          column: 19
        }
      },
      "169": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 472,
          column: 79
        }
      },
      "170": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 474,
          column: 101
        }
      },
      "171": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "172": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "173": {
        start: {
          line: 483,
          column: 31
        },
        end: {
          line: 483,
          column: 94
        }
      },
      "174": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 489,
          column: 11
        }
      },
      "175": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 112
        }
      },
      "176": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 511,
          column: 11
        }
      },
      "177": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 533,
          column: 11
        }
      },
      "178": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 549,
          column: 11
        }
      },
      "179": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 550,
          column: 81
        }
      },
      "180": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 559,
          column: 27
        }
      },
      "181": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 558,
          column: 33
        }
      },
      "182": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 563,
          column: 22
        }
      },
      "183": {
        start: {
          line: 562,
          column: 12
        },
        end: {
          line: 562,
          column: 38
        }
      },
      "184": {
        start: {
          line: 569,
          column: 20
        },
        end: {
          line: 569,
          column: 30
        }
      },
      "185": {
        start: {
          line: 570,
          column: 23
        },
        end: {
          line: 570,
          column: 42
        }
      },
      "186": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 576,
          column: 9
        }
      },
      "187": {
        start: {
          line: 573,
          column: 12
        },
        end: {
          line: 575,
          column: 13
        }
      },
      "188": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 574,
          column: 52
        }
      },
      "189": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 582,
          column: 9
        }
      },
      "190": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 581,
          column: 13
        }
      },
      "191": {
        start: {
          line: 580,
          column: 16
        },
        end: {
          line: 580,
          column: 48
        }
      },
      "192": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 66
        }
      },
      "193": {
        start: {
          line: 589,
          column: 20
        },
        end: {
          line: 589,
          column: 30
        }
      },
      "194": {
        start: {
          line: 590,
          column: 8
        },
        end: {
          line: 618,
          column: 9
        }
      },
      "195": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 593,
          column: 13
        }
      },
      "196": {
        start: {
          line: 592,
          column: 16
        },
        end: {
          line: 592,
          column: 25
        }
      },
      "197": {
        start: {
          line: 594,
          column: 12
        },
        end: {
          line: 617,
          column: 13
        }
      },
      "198": {
        start: {
          line: 596,
          column: 29
        },
        end: {
          line: 597,
          column: 53
        }
      },
      "199": {
        start: {
          line: 597,
          column: 31
        },
        end: {
          line: 597,
          column: 52
        }
      },
      "200": {
        start: {
          line: 598,
          column: 16
        },
        end: {
          line: 612,
          column: 17
        }
      },
      "201": {
        start: {
          line: 599,
          column: 20
        },
        end: {
          line: 599,
          column: 113
        }
      },
      "202": {
        start: {
          line: 602,
          column: 20
        },
        end: {
          line: 602,
          column: 49
        }
      },
      "203": {
        start: {
          line: 603,
          column: 20
        },
        end: {
          line: 611,
          column: 21
        }
      },
      "204": {
        start: {
          line: 605,
          column: 24
        },
        end: {
          line: 605,
          column: 123
        }
      },
      "205": {
        start: {
          line: 609,
          column: 24
        },
        end: {
          line: 609,
          column: 52
        }
      },
      "206": {
        start: {
          line: 610,
          column: 24
        },
        end: {
          line: 610,
          column: 96
        }
      },
      "207": {
        start: {
          line: 615,
          column: 16
        },
        end: {
          line: 615,
          column: 100
        }
      },
      "208": {
        start: {
          line: 616,
          column: 16
        },
        end: {
          line: 616,
          column: 44
        }
      },
      "209": {
        start: {
          line: 620,
          column: 8
        },
        end: {
          line: 624,
          column: 9
        }
      },
      "210": {
        start: {
          line: 621,
          column: 12
        },
        end: {
          line: 623,
          column: 13
        }
      },
      "211": {
        start: {
          line: 622,
          column: 16
        },
        end: {
          line: 622,
          column: 53
        }
      },
      "212": {
        start: {
          line: 630,
          column: 37
        },
        end: {
          line: 630,
          column: 87
        }
      },
      "213": {
        start: {
          line: 630,
          column: 70
        },
        end: {
          line: 630,
          column: 79
        }
      },
      "214": {
        start: {
          line: 631,
          column: 33
        },
        end: {
          line: 631,
          column: 84
        }
      },
      "215": {
        start: {
          line: 631,
          column: 66
        },
        end: {
          line: 631,
          column: 76
        }
      },
      "216": {
        start: {
          line: 632,
          column: 28
        },
        end: {
          line: 632,
          column: 96
        }
      },
      "217": {
        start: {
          line: 632,
          column: 79
        },
        end: {
          line: 632,
          column: 88
        }
      },
      "218": {
        start: {
          line: 633,
          column: 35
        },
        end: {
          line: 634,
          column: 45
        }
      },
      "219": {
        start: {
          line: 634,
          column: 25
        },
        end: {
          line: 634,
          column: 37
        }
      },
      "220": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 645,
          column: 10
        }
      },
      "221": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 42
        }
      },
      "222": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 652,
          column: 63
        }
      },
      "223": {
        start: {
          line: 655,
          column: 0
        },
        end: {
          line: 655,
          column: 48
        }
      },
      "224": {
        start: {
          line: 656,
          column: 0
        },
        end: {
          line: 656,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 1
          },
          end: {
            line: 30,
            column: 2
          }
        },
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 1
          },
          end: {
            line: 41,
            column: 2
          }
        },
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 41
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 1
          },
          end: {
            line: 52,
            column: 2
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 72
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 105
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 40
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 166
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 34
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 183
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 38
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 206
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 29
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 228
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 29
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 257
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 29
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 270
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        loc: {
          start: {
            line: 301,
            column: 42
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 301
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 32
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 313
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 45
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 329
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 39
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 348
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 49
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 393
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        loc: {
          start: {
            line: 430,
            column: 32
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 430
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 35
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 459
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 42
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 480
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 495,
            column: 4
          },
          end: {
            line: 495,
            column: 5
          }
        },
        loc: {
          start: {
            line: 495,
            column: 29
          },
          end: {
            line: 551,
            column: 5
          }
        },
        line: 495
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 5
          }
        },
        loc: {
          start: {
            line: 555,
            column: 27
          },
          end: {
            line: 564,
            column: 5
          }
        },
        line: 555
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 557,
            column: 20
          },
          end: {
            line: 557,
            column: 21
          }
        },
        loc: {
          start: {
            line: 557,
            column: 26
          },
          end: {
            line: 559,
            column: 9
          }
        },
        line: 557
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 561,
            column: 20
          },
          end: {
            line: 561,
            column: 21
          }
        },
        loc: {
          start: {
            line: 561,
            column: 26
          },
          end: {
            line: 563,
            column: 9
          }
        },
        line: 561
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 5
          }
        },
        loc: {
          start: {
            line: 568,
            column: 20
          },
          end: {
            line: 584,
            column: 5
          }
        },
        line: 568
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 588,
            column: 4
          },
          end: {
            line: 588,
            column: 5
          }
        },
        loc: {
          start: {
            line: 588,
            column: 31
          },
          end: {
            line: 625,
            column: 5
          }
        },
        line: 588
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 597,
            column: 26
          },
          end: {
            line: 597,
            column: 27
          }
        },
        loc: {
          start: {
            line: 597,
            column: 31
          },
          end: {
            line: 597,
            column: 52
          }
        },
        line: 597
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 629,
            column: 4
          },
          end: {
            line: 629,
            column: 5
          }
        },
        loc: {
          start: {
            line: 629,
            column: 20
          },
          end: {
            line: 646,
            column: 5
          }
        },
        line: 629
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 630,
            column: 65
          },
          end: {
            line: 630,
            column: 66
          }
        },
        loc: {
          start: {
            line: 630,
            column: 70
          },
          end: {
            line: 630,
            column: 79
          }
        },
        line: 630
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 631,
            column: 61
          },
          end: {
            line: 631,
            column: 62
          }
        },
        loc: {
          start: {
            line: 631,
            column: 66
          },
          end: {
            line: 631,
            column: 76
          }
        },
        line: 631
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 632,
            column: 74
          },
          end: {
            line: 632,
            column: 75
          }
        },
        loc: {
          start: {
            line: 632,
            column: 79
          },
          end: {
            line: 632,
            column: 88
          }
        },
        line: 632
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 634,
            column: 20
          },
          end: {
            line: 634,
            column: 21
          }
        },
        loc: {
          start: {
            line: 634,
            column: 25
          },
          end: {
            line: 634,
            column: 37
          }
        },
        line: 634
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        loc: {
          start: {
            line: 650,
            column: 17
          },
          end: {
            line: 653,
            column: 5
          }
        },
        line: 650
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 22
          }
        }, {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 36,
            column: 81
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 3
          },
          end: {
            line: 47,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 3
          },
          end: {
            line: 47,
            column: 16
          }
        }, {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 63
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 3
          },
          end: {
            line: 59,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 3
          },
          end: {
            line: 59,
            column: 16
          }
        }, {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 63
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "6": {
        loc: {
          start: {
            line: 138,
            column: 35
          },
          end: {
            line: 138,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 60
          },
          end: {
            line: 138,
            column: 73
          }
        }, {
          start: {
            line: 138,
            column: 76
          },
          end: {
            line: 138,
            column: 91
          }
        }],
        line: 138
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 145,
            column: 20
          },
          end: {
            line: 145,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 20
          },
          end: {
            line: 145,
            column: 44
          }
        }, {
          start: {
            line: 145,
            column: 48
          },
          end: {
            line: 145,
            column: 89
          }
        }],
        line: 145
      },
      "9": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "10": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 251,
            column: 9
          }
        }],
        line: 231
      },
      "11": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "12": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 274,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 274,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "13": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 277,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 277,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "14": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 289,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 289,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "15": {
        loc: {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "16": {
        loc: {
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 291,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 291,
            column: 31
          }
        }, {
          start: {
            line: 291,
            column: 35
          },
          end: {
            line: 291,
            column: 83
          }
        }],
        line: 291
      },
      "17": {
        loc: {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "18": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: 320,
            column: 17
          },
          end: {
            line: 322,
            column: 13
          }
        }],
        line: 317
      },
      "19": {
        loc: {
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 317,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 16
          },
          end: {
            line: 317,
            column: 21
          }
        }, {
          start: {
            line: 317,
            column: 25
          },
          end: {
            line: 317,
            column: 50
          }
        }],
        line: 317
      },
      "20": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 332,
            column: 54
          }
        }, {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 334,
            column: 76
          }
        }, {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 336,
            column: 68
          }
        }, {
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 338,
            column: 68
          }
        }, {
          start: {
            line: 339,
            column: 12
          },
          end: {
            line: 340,
            column: 76
          }
        }, {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 342,
            column: 29
          }
        }],
        line: 330
      },
      "21": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "22": {
        loc: {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 385,
            column: 13
          }
        }, {
          start: {
            line: 378,
            column: 17
          },
          end: {
            line: 385,
            column: 13
          }
        }],
        line: 358
      },
      "23": {
        loc: {
          start: {
            line: 360,
            column: 38
          },
          end: {
            line: 360,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 38
          },
          end: {
            line: 360,
            column: 66
          }
        }, {
          start: {
            line: 360,
            column: 70
          },
          end: {
            line: 360,
            column: 72
          }
        }],
        line: 360
      },
      "24": {
        loc: {
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 366,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 366,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "25": {
        loc: {
          start: {
            line: 368,
            column: 36
          },
          end: {
            line: 368,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 36
          },
          end: {
            line: 368,
            column: 63
          }
        }, {
          start: {
            line: 368,
            column: 67
          },
          end: {
            line: 368,
            column: 75
          }
        }],
        line: 368
      },
      "26": {
        loc: {
          start: {
            line: 369,
            column: 34
          },
          end: {
            line: 369,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 34
          },
          end: {
            line: 369,
            column: 59
          }
        }, {
          start: {
            line: 369,
            column: 63
          },
          end: {
            line: 369,
            column: 71
          }
        }],
        line: 369
      },
      "27": {
        loc: {
          start: {
            line: 370,
            column: 33
          },
          end: {
            line: 370,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 33
          },
          end: {
            line: 370,
            column: 57
          }
        }, {
          start: {
            line: 370,
            column: 61
          },
          end: {
            line: 370,
            column: 69
          }
        }],
        line: 370
      },
      "28": {
        loc: {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 375,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 375,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "29": {
        loc: {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 406,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 400,
            column: 26
          }
        }, {
          start: {
            line: 401,
            column: 16
          },
          end: {
            line: 403,
            column: 26
          }
        }, {
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 405,
            column: 71
          }
        }],
        line: 397
      },
      "30": {
        loc: {
          start: {
            line: 421,
            column: 23
          },
          end: {
            line: 421,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 421,
            column: 48
          },
          end: {
            line: 421,
            column: 61
          }
        }, {
          start: {
            line: 421,
            column: 64
          },
          end: {
            line: 421,
            column: 79
          }
        }],
        line: 421
      },
      "31": {
        loc: {
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 442,
            column: 19
          }
        }, {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 450,
            column: 19
          }
        }, {
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 453,
            column: 98
          }
        }],
        line: 431
      },
      "32": {
        loc: {
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 461,
            column: 12
          },
          end: {
            line: 462,
            column: 93
          }
        }, {
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 470,
            column: 19
          }
        }, {
          start: {
            line: 471,
            column: 12
          },
          end: {
            line: 472,
            column: 79
          }
        }, {
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 474,
            column: 101
          }
        }],
        line: 460
      },
      "33": {
        loc: {
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 482,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 482,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      },
      "34": {
        loc: {
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 575,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "35": {
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 581,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 581,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "36": {
        loc: {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 593,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 593,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 591
      },
      "37": {
        loc: {
          start: {
            line: 591,
            column: 16
          },
          end: {
            line: 591,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 16
          },
          end: {
            line: 591,
            column: 36
          }
        }, {
          start: {
            line: 591,
            column: 40
          },
          end: {
            line: 591,
            column: 75
          }
        }],
        line: 591
      },
      "38": {
        loc: {
          start: {
            line: 598,
            column: 16
          },
          end: {
            line: 612,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 16
          },
          end: {
            line: 612,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "39": {
        loc: {
          start: {
            line: 603,
            column: 20
          },
          end: {
            line: 611,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 603,
            column: 20
          },
          end: {
            line: 611,
            column: 21
          }
        }, {
          start: {
            line: 607,
            column: 25
          },
          end: {
            line: 611,
            column: 21
          }
        }],
        line: 603
      },
      "40": {
        loc: {
          start: {
            line: 621,
            column: 12
          },
          end: {
            line: 623,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 621,
            column: 12
          },
          end: {
            line: 623,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 621
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-router.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;;;;GAkBG;;;AAEH,kDAA+C;AAC/C,mDAAqF;AACrF,yDAAiG;AAEjG;;GAEG;AACH,IAAY,mBAMX;AAND,WAAY,mBAAmB;IAC7B,sCAAe,CAAA;IACf,4CAAqB,CAAA;IACrB,kCAAW,CAAA;IACX,0CAAmB,CAAA;IACnB,8CAAuB,CAAA,CAAC,wBAAwB;AAClD,CAAC,EANW,mBAAmB,mCAAnB,mBAAmB,QAM9B;AAED;;GAEG;AACH,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,4BAAW,CAAA;IACX,kCAAiB,CAAA;IACjB,8BAAa,CAAA;IACb,sCAAqB,CAAA;IACrB,wCAAuB,CAAA;AACzB,CAAC,EANW,aAAa,6BAAb,aAAa,QAMxB;AAED;;GAEG;AACH,IAAY,aAOX;AAPD,WAAY,aAAa;IACvB,oCAAmB,CAAA;IACnB,sCAAqB,CAAA;IACrB,kCAAiB,CAAA;IACjB,4CAA2B,CAAA;IAC3B,oCAAmB,CAAA;IACnB,4CAA2B,CAAA;AAC7B,CAAC,EAPW,aAAa,6BAAb,aAAa,QAOxB;AA4GD;;GAEG;AACH,MAAa,kBAAkB;IACrB,YAAY,CAAe;IAC3B,eAAe,CAAkB;IACjC,YAAY,CAAgC;IAC5C,kBAAkB,CAAkC;IACpD,cAAc,CAA8B;IAC5C,eAAe,CAA+B;IAC9C,eAAe,CAAmB;IAClC,aAAa,GAAY,KAAK,CAAC;IAEvC;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,4BAAY,EAAE,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,IAAI,kCAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,UAAU;QACrB,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;YAEtD,mCAAmC;YACnC,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;YACrC,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;YAExC,qBAAqB;YACrB,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAE9B,yBAAyB;YACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,eAAM,CAAC,IAAI,CAAC,gDAAgD,CAAC,CAAC;QAEhE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC;YACnE,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,UAAU,CAAC,KAAY;QAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QAED,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,qBAAqB,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;YAEnF,0BAA0B;YAC1B,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;gBAClC,eAAM,CAAC,IAAI,CAAC,YAAY,KAAK,CAAC,EAAE,yBAAyB,CAAC,CAAC;gBAC3D,OAAO,EAAE,CAAC;YACZ,CAAC;YAED,8BAA8B;YAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAEpD,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAC/B,eAAM,CAAC,IAAI,CAAC,wCAAwC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;gBAChE,OAAO,EAAE,CAAC;YACZ,CAAC;YAED,sBAAsB;YACtB,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;YAErE,oBAAoB;YACpB,MAAM,eAAe,GAAqB,EAAE,CAAC;YAE7C,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;gBAChC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACpC,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;wBACjE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,CAAC;oBAAC,OAAO,KAAK,EAAE,CAAC;wBACf,eAAM,CAAC,KAAK,CAAC,0BAA0B,OAAO,GAAG,EAAE,KAAK,CAAC,CAAC;wBAC1D,eAAe,CAAC,IAAI,CAAC;4BACnB,OAAO,EAAE,KAAK,CAAC,EAAE;4BACjB,OAAO;4BACP,OAAO,EAAE,KAAK;4BACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;4BAC/D,SAAS,EAAE,IAAI,IAAI,EAAE;4BACrB,UAAU,EAAE,CAAC;yBACd,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;gBAED,kCAAkC;gBAClC,IAAI,IAAI,CAAC,UAAU,EAAE,OAAO,IAAI,KAAK,CAAC,QAAQ,KAAK,aAAa,CAAC,QAAQ,EAAE,CAAC;oBAC1E,MAAM,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC;YAED,yBAAyB;YACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;YAE9C,gDAAgD;YAChD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC;gBACvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC;YAC3D,CAAC;YAED,eAAM,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,cAAc,eAAe,CAAC,MAAM,WAAW,CAAC,CAAC;YAChF,OAAO,eAAe,CAAC;QAEzB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,2BAA2B,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,uBAAuB,CAAC,IAQpC;QACC,MAAM,KAAK,GAAU;YACnB,EAAE,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACpE,QAAQ,EAAE,aAAa,CAAC,OAAO;YAC/B,QAAQ,EAAE,aAAa,CAAC,IAAI;YAC5B,KAAK,EAAE,mBAAmB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACtD,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,QAAQ,IAAI,CAAC,KAAK,EAAE;YAC3E,IAAI;YACJ,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,MAAM,EAAE,gBAAgB;YACxB,IAAI,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;SACxD,CAAC;QAEF,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,iBAAiB,CAAC,IAK9B;QACC,MAAM,WAAW,GAAG;YAClB,GAAG,EAAE,aAAa,CAAC,GAAG;YACtB,MAAM,EAAE,aAAa,CAAC,MAAM;YAC5B,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,QAAQ,EAAE,aAAa,CAAC,QAAQ;SACjC,CAAC;QAEF,MAAM,KAAK,GAAU;YACnB,EAAE,EAAE,YAAY,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACvE,QAAQ,EAAE,aAAa,CAAC,QAAQ;YAChC,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;YACvC,KAAK,EAAE,mBAAmB,IAAI,CAAC,YAAY,EAAE;YAC7C,OAAO,EAAE,IAAI,CAAC,WAAW;YACzB,IAAI;YACJ,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,MAAM,EAAE,kBAAkB;YAC1B,IAAI,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SAC9D,CAAC;QAEF,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,qBAAqB,CAAC,IAKlC;QACC,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,aAAa,CAAC,GAAG;YAC1B,OAAO,EAAE,aAAa,CAAC,MAAM;YAC7B,QAAQ,EAAE,aAAa,CAAC,IAAI;SAC7B,CAAC;QAEF,MAAM,KAAK,GAAU;YACnB,EAAE,EAAE,UAAU,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACrE,QAAQ,EAAE,aAAa,CAAC,MAAM;YAC9B,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,kBAAkB,IAAI,CAAC,SAAS,EAAE;YACzC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI;YACJ,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,MAAM,EAAE,gBAAgB;YACxB,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;SACzD,CAAC;QAEF,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,WAAW,CAAC,KAAY;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAExD,IAAI,QAAQ,EAAE,CAAC;YACb,wBAAwB;YACxB,QAAQ,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;YAC/B,QAAQ,CAAC,KAAK,EAAE,CAAC;YAEjB,8DAA8D;YAC9D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;YAC3D,IAAI,QAAQ,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,YAAY;gBAC1C,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC3B,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;aAAM,CAAC;YACN,mBAAmB;YACnB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,EAAE;gBACrC,SAAS;gBACT,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,QAAQ,EAAE,IAAI,IAAI,EAAE;gBACpB,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,KAAK;aAClB,CAAC,CAAC;QACL,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,KAAY;QACpC,MAAM,QAAQ,GAAG;YACf,QAAQ,EAAE,KAAK,CAAC,QAAQ;YACxB,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,MAAM,EAAE,KAAK,CAAC,MAAM;YACpB,6CAA6C;YAC7C,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;SACrC,CAAC;QAEF,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClE,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,KAAY;QACpC,MAAM,aAAa,GAAuB,EAAE,CAAC;QAE7C,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,OAAO;gBAAE,SAAS;YAE5B,uBAAuB;YACvB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ;gBAAE,SAAS;YAE/C,kEAAkE;YAClE,MAAM,aAAa,GAAG;gBACpB,aAAa,CAAC,GAAG;gBACjB,aAAa,CAAC,MAAM;gBACpB,aAAa,CAAC,IAAI;gBAClB,aAAa,CAAC,QAAQ;gBACtB,aAAa,CAAC,SAAS;aACxB,CAAC;YAEF,MAAM,kBAAkB,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACjE,MAAM,iBAAiB,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE/D,IAAI,kBAAkB,GAAG,iBAAiB;gBAAE,SAAS;YAErD,gCAAgC;YAChC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBACxE,SAAS;YACX,CAAC;YAED,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QAED,OAAO,aAAa,CAAC;IACvB,CAAC;IAED;;OAEG;IACK,kBAAkB,CAAC,KAAY,EAAE,UAAmC;QAC1E,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;YACnC,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YAE9D,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,CAAC;gBACnD,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACK,aAAa,CAAC,KAAY,EAAE,KAAa;QAC/C,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,KAAK,GAAQ,KAAK,CAAC;QAEvB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;gBACvC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;iBAAM,CAAC;gBACN,OAAO,SAAS,CAAC;YACnB,CAAC;QACH,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,UAAe,EAAE,SAAgC;QACzE,QAAQ,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC3B,KAAK,QAAQ;gBACX,OAAO,UAAU,KAAK,SAAS,CAAC,KAAK,CAAC;YACxC,KAAK,UAAU;gBACb,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9D,KAAK,cAAc;gBACjB,OAAO,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtD,KAAK,WAAW;gBACd,OAAO,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtD,KAAK,OAAO;gBACV,OAAO,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9D;gBACE,OAAO,KAAK,CAAC;QACjB,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,cAAc,CAAC,KAAY,EAAE,KAAyB;QAClE,MAAM,YAAY,GAAuB,EAAE,CAAC;QAE5C,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC;gBAC7B,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxB,SAAS;YACX,CAAC;YAED,MAAM,YAAY,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;YACpD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAEvD,IAAI,QAAQ,EAAE,CAAC;gBACb,MAAM,aAAa,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBACrE,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,IAAI,EAAE,CAAC;gBAEzD,0BAA0B;gBAC1B,IAAI,aAAa,GAAG,aAAa,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC;oBAC9C,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;oBACnB,QAAQ,CAAC,WAAW,GAAG,GAAG,CAAC;oBAC3B,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC3B,CAAC;gBAED,eAAe;gBACf,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,IAAI,QAAQ,CAAC;gBAC5D,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,QAAQ,CAAC;gBACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,QAAQ,CAAC;gBAEtD,IAAI,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC;oBACjE,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;oBACxB,eAAM,CAAC,IAAI,CAAC,mCAAmC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC1D,SAAS;gBACX,CAAC;gBAED,QAAQ,CAAC,KAAK,EAAE,CAAC;YACnB,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,EAAE;oBACpC,GAAG,EAAE,YAAY;oBACjB,KAAK,EAAE,CAAC;oBACR,WAAW,EAAE,GAAG;oBAChB,OAAO,EAAE,KAAK;iBACf,CAAC,CAAC;YACL,CAAC;YAED,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,gBAAgB,CAC5B,KAAY,EACZ,OAA4B,EAC5B,IAAsB;QAEtB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC;YACH,IAAI,SAAsC,CAAC;YAE3C,QAAQ,OAAO,EAAE,CAAC;gBAChB,KAAK,mBAAmB,CAAC,KAAK;oBAC5B,SAAS,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC7C,MAAM;gBACR,KAAK,mBAAmB,CAAC,QAAQ;oBAC/B,SAAS,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBAChD,MAAM;gBACR;oBACE,MAAM,IAAI,KAAK,CAAC,wBAAwB,OAAO,EAAE,CAAC,CAAC;YACvD,CAAC;YAED,OAAO;gBACL,OAAO,EAAE,KAAK,CAAC,EAAE;gBACjB,OAAO;gBACP,OAAO,EAAE,IAAI;gBACb,SAAS;gBACT,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,UAAU,EAAE,CAAC;aACd,CAAC;QAEJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,OAAO,EAAE,KAAK,CAAC,EAAE;gBACjB,OAAO;gBACP,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;gBAC/D,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,UAAU,EAAE,CAAC;aACd,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,cAAc,CAAC,KAAY;QACvC,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;YACvB,KAAK,aAAa,CAAC,OAAO;gBACxB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC;oBAC5D,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM;oBACzB,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM;oBACzB,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ;oBAC7B,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK;oBACvB,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG;oBACnB,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO;oBAC3B,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ;oBAC7B,SAAS,EAAE,KAAK,CAAC,SAAS;iBAC3B,CAAC,CAAC;YAEL,KAAK,aAAa,CAAC,QAAQ;gBACzB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC;oBAC/C,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW;oBACnC,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY;oBACrC,WAAW,EAAE,KAAK,CAAC,OAAO;oBAC1B,eAAe,EAAE,KAAK,CAAC,IAAI,CAAC,eAAe;oBAC3C,SAAS,EAAE,KAAK,CAAC,SAAS;iBAC3B,CAAC,CAAC;YAEL;gBACE,6BAA6B;gBAC7B,MAAM,IAAI,KAAK,CAAC,gDAAgD,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACtF,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,iBAAiB,CAAC,KAAY;QAC1C,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;YACvB,KAAK,aAAa,CAAC,OAAO;gBACxB,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,8BAA8B,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAE/E,KAAK,aAAa,CAAC,QAAQ;gBACzB,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC;oBAClD,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW;oBACnC,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY;oBACrC,WAAW,EAAE,KAAK,CAAC,OAAO;oBAC1B,eAAe,EAAE,KAAK,CAAC,IAAI,CAAC,eAAe;oBAC3C,SAAS,EAAE,KAAK,CAAC,SAAS;iBAC3B,CAAC,CAAC;YAEL,KAAK,aAAa,CAAC,MAAM;gBACvB,OAAO,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEjE;gBACE,MAAM,IAAI,KAAK,CAAC,mDAAmD,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzF,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB,CAAC,KAAY,EAAE,IAAsB;QACnE,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAE7B,MAAM,cAAc,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAEvF,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE;YACjC,OAAO,EAAE,KAAK,CAAC,EAAE;YACjB,eAAe,EAAE,CAAC;YAClB,kBAAkB,EAAE,cAAc;YAClC,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,oCAAoC,KAAK,CAAC,EAAE,OAAO,cAAc,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,gBAAgB;QAC5B,gDAAgD;QAChD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE;YACpC,EAAE,EAAE,cAAc;YAClB,IAAI,EAAE,8BAA8B;YACpC,QAAQ,EAAE,aAAa,CAAC,OAAO;YAC/B,QAAQ,EAAE,aAAa,CAAC,IAAI;YAC5B,QAAQ,EAAE,CAAC,mBAAmB,CAAC,KAAK,EAAE,mBAAmB,CAAC,QAAQ,CAAC;YACnE,SAAS,EAAE;gBACT,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,EAAE;gBAChB,UAAU,EAAE,GAAG;gBACf,SAAS,EAAE,IAAI;gBACf,aAAa,EAAE,EAAE;aAClB;YACD,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,qEAAqE;QACrE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,mBAAmB,EAAE;YACzC,EAAE,EAAE,mBAAmB;YACvB,IAAI,EAAE,0BAA0B;YAChC,QAAQ,EAAE,aAAa,CAAC,QAAQ;YAChC,QAAQ,EAAE,aAAa,CAAC,IAAI;YAC5B,QAAQ,EAAE,CAAC,mBAAmB,CAAC,KAAK,EAAE,mBAAmB,CAAC,QAAQ,CAAC;YACnE,UAAU,EAAE;gBACV,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,EAAE;gBAChB,cAAc,EAAE,CAAC;gBACjB,kBAAkB,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC;aACnD;YACD,SAAS,EAAE;gBACT,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,CAAC;gBACf,UAAU,EAAE,EAAE;gBACd,SAAS,EAAE,GAAG;gBACd,aAAa,EAAE,EAAE;aAClB;YACD,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,iDAAiD;QACjD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,EAAE;YACrC,EAAE,EAAE,eAAe;YACnB,IAAI,EAAE,sBAAsB;YAC5B,QAAQ,EAAE,aAAa,CAAC,MAAM;YAC9B,QAAQ,EAAE,aAAa,CAAC,MAAM;YAC9B,QAAQ,EAAE,CAAC,mBAAmB,CAAC,QAAQ,CAAC;YACxC,SAAS,EAAE;gBACT,OAAO,EAAE,IAAI;gBACb,YAAY,EAAE,CAAC;gBACf,UAAU,EAAE,EAAE;gBACd,SAAS,EAAE,GAAG;gBACd,aAAa,EAAE,EAAE;aAClB;YACD,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,eAAM,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,gBAAgB,CAAC,CAAC;IAClE,CAAC;IAED;;OAEG;IACK,oBAAoB;QAC1B,6BAA6B;QAC7B,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAEnB,mCAAmC;QACnC,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,aAAa;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,WAAW;QAE/C,4BAA4B;QAC5B,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,EAAE,CAAC;YAC7D,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,MAAM,EAAE,CAAC;gBAC5C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;QAED,yBAAyB;QACzB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,CAAC;YACzD,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,MAAM,EAAE,CAAC;gBAC/C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QAED,eAAM,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB;QAC9B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QAEvB,KAAK,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC;YACnE,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,kBAAkB,GAAG,GAAG,EAAE,CAAC;gBAChE,SAAS;YACX,CAAC;YAED,IAAI,CAAC;gBACH,+CAA+C;gBAC/C,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;qBAChD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBAEpC,IAAI,IAAI,EAAE,UAAU,EAAE,CAAC;oBACrB,eAAM,CAAC,IAAI,CAAC,uBAAuB,OAAO,WAAW,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC;oBAEpF,gCAAgC;oBAChC,4EAA4E;oBAE5E,UAAU,CAAC,eAAe,EAAE,CAAC;oBAE7B,IAAI,UAAU,CAAC,eAAe,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;wBACjE,2BAA2B;wBAC3B,UAAU,CAAC,kBAAkB,GAAG,IAAI,IAAI,CACtC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,EAAE,GAAG,IAAI,CACzD,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,0BAA0B;wBAC1B,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;wBAC5B,eAAM,CAAC,IAAI,CAAC,wCAAwC,OAAO,EAAE,CAAC,CAAC;oBACjE,CAAC;gBACH,CAAC;YAEH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,eAAM,CAAC,KAAK,CAAC,2CAA2C,OAAO,GAAG,EAAE,KAAK,CAAC,CAAC;gBAC3E,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,CAAC;QACH,CAAC;QAED,iCAAiC;QACjC,KAAK,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC;YACnE,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC;gBACzB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;IACH,CAAC;IAED;;OAEG;IACI,aAAa;QAWlB,MAAM,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QAChF,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QAC7E,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QACzF,MAAM,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;aACjE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;QAEpC,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM;YACxC,oBAAoB;YACpB,gBAAgB;YAChB,WAAW;YACX,kBAAkB;YAClB,SAAS,EAAE;gBACT,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI;gBAC3C,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI;aACpC;SACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,IAAI;QACf,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAClC,eAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;CACF;AAtsBD,gDAssBC;AAED,kBAAe,kBAAkB,CAAC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-router.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * MULTI-CHANNEL NOTIFICATION ROUTER\r\n * =============================================================================\r\n * \r\n * Implements priority-based notification routing, alert deduplication,\r\n * rate limiting, and escalation procedures for the AI crypto trading agent.\r\n * \r\n * Features:\r\n * - Priority-based routing across multiple channels\r\n * - Alert deduplication and rate limiting\r\n * - Escalation procedures for critical alerts\r\n * - Notification preference management\r\n * - Delivery confirmation and retry logic\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport { logger } from '@/core/logging/logger';\r\nimport { EmailService, EmailNotificationType, EmailPriority } from './email-service';\r\nimport { TelegramService, TelegramNotificationType, TelegramPriority } from './telegram-service';\r\n\r\n/**\r\n * Notification channels available for routing\r\n */\r\nexport enum NotificationChannel {\r\n  EMAIL = 'email',\r\n  TELEGRAM = 'telegram',\r\n  SMS = 'sms', // Future implementation\r\n  WEBHOOK = 'webhook', // Future implementation\r\n  DASHBOARD = 'dashboard' // Future implementation\r\n}\r\n\r\n/**\r\n * Alert priority levels for routing decisions\r\n */\r\nexport enum AlertPriority {\r\n  LOW = 'low',\r\n  NORMAL = 'normal',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical',\r\n  EMERGENCY = 'emergency'\r\n}\r\n\r\n/**\r\n * Alert categories for classification and routing\r\n */\r\nexport enum AlertCategory {\r\n  TRADING = 'trading',\r\n  SECURITY = 'security',\r\n  SYSTEM = 'system',\r\n  PERFORMANCE = 'performance',\r\n  NETWORK = 'network',\r\n  MAINTENANCE = 'maintenance'\r\n}\r\n\r\n/**\r\n * Notification routing rule structure\r\n */\r\nexport interface NotificationRule {\r\n  id: string;\r\n  name: string;\r\n  category: AlertCategory;\r\n  priority: AlertPriority;\r\n  channels: NotificationChannel[];\r\n  conditions?: NotificationCondition[];\r\n  escalation?: EscalationRule;\r\n  rateLimit?: RateLimitRule;\r\n  enabled: boolean;\r\n}\r\n\r\n/**\r\n * Notification condition for rule matching\r\n */\r\nexport interface NotificationCondition {\r\n  field: string;\r\n  operator: 'equals' | 'contains' | 'greater_than' | 'less_than' | 'regex';\r\n  value: any;\r\n}\r\n\r\n/**\r\n * Escalation rule for critical alerts\r\n */\r\nexport interface EscalationRule {\r\n  enabled: boolean;\r\n  delayMinutes: number;\r\n  maxEscalations: number;\r\n  escalationChannels: NotificationChannel[];\r\n  escalationRecipients?: string[];\r\n}\r\n\r\n/**\r\n * Rate limiting rule to prevent spam\r\n */\r\nexport interface RateLimitRule {\r\n  enabled: boolean;\r\n  maxPerMinute: number;\r\n  maxPerHour: number;\r\n  maxPerDay: number;\r\n  windowMinutes: number;\r\n}\r\n\r\n/**\r\n * Alert structure for routing\r\n */\r\nexport interface Alert {\r\n  id: string;\r\n  category: AlertCategory;\r\n  priority: AlertPriority;\r\n  title: string;\r\n  message: string;\r\n  data: Record<string, any>;\r\n  timestamp: Date;\r\n  source: string;\r\n  tags?: string[];\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Notification delivery result\r\n */\r\nexport interface DeliveryResult {\r\n  alertId: string;\r\n  channel: NotificationChannel;\r\n  success: boolean;\r\n  messageId?: string | number;\r\n  error?: string;\r\n  timestamp: Date;\r\n  retryCount: number;\r\n}\r\n\r\n/**\r\n * Alert deduplication entry\r\n */\r\ninterface DeduplicationEntry {\r\n  alertHash: string;\r\n  firstSeen: Date;\r\n  lastSeen: Date;\r\n  count: number;\r\n  suppressed: boolean;\r\n}\r\n\r\n/**\r\n * Rate limiting entry\r\n */\r\ninterface RateLimitEntry {\r\n  key: string;\r\n  count: number;\r\n  windowStart: Date;\r\n  blocked: boolean;\r\n}\r\n\r\n/**\r\n * Escalation tracking entry\r\n */\r\ninterface EscalationEntry {\r\n  alertId: string;\r\n  escalationLevel: number;\r\n  nextEscalationTime: Date;\r\n  completed: boolean;\r\n}\r\n\r\n/**\r\n * Multi-channel notification router class\r\n */\r\nexport class NotificationRouter {\r\n  private emailService: EmailService;\r\n  private telegramService: TelegramService;\r\n  private routingRules: Map<string, NotificationRule>;\r\n  private deduplicationCache: Map<string, DeduplicationEntry>;\r\n  private rateLimitCache: Map<string, RateLimitEntry>;\r\n  private escalationQueue: Map<string, EscalationEntry>;\r\n  private deliveryHistory: DeliveryResult[];\r\n  private isInitialized: boolean = false;\r\n\r\n  constructor() {\r\n    this.emailService = new EmailService();\r\n    this.telegramService = new TelegramService();\r\n    this.routingRules = new Map();\r\n    this.deduplicationCache = new Map();\r\n    this.rateLimitCache = new Map();\r\n    this.escalationQueue = new Map();\r\n    this.deliveryHistory = [];\r\n  }\r\n\r\n  /**\r\n   * Initialize the notification router\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD00 Initializing notification router...');\r\n\r\n      // Initialize notification services\r\n      await this.emailService.initialize();\r\n      await this.telegramService.initialize();\r\n\r\n      // Load routing rules\r\n      await this.loadRoutingRules();\r\n\r\n      // Start background tasks\r\n      this.startBackgroundTasks();\r\n\r\n      this.isInitialized = true;\r\n      logger.info('\u2705 Notification router initialized successfully');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize notification router:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Route alert through appropriate channels based on rules\r\n   */\r\n  public async routeAlert(alert: Alert): Promise<DeliveryResult[]> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('Notification router not initialized');\r\n    }\r\n\r\n    try {\r\n      logger.info(`\uD83D\uDD00 Routing alert: ${alert.id} (${alert.category}/${alert.priority})`);\r\n\r\n      // Check for deduplication\r\n      if (await this.isDuplicate(alert)) {\r\n        logger.info(`\uD83D\uDD04 Alert ${alert.id} is duplicate, skipping`);\r\n        return [];\r\n      }\r\n\r\n      // Find matching routing rules\r\n      const matchingRules = this.findMatchingRules(alert);\r\n      \r\n      if (matchingRules.length === 0) {\r\n        logger.warn(`\u26A0\uFE0F No routing rules found for alert: ${alert.id}`);\r\n        return [];\r\n      }\r\n\r\n      // Apply rate limiting\r\n      const allowedRules = await this.applyRateLimit(alert, matchingRules);\r\n\r\n      // Route to channels\r\n      const deliveryResults: DeliveryResult[] = [];\r\n      \r\n      for (const rule of allowedRules) {\r\n        for (const channel of rule.channels) {\r\n          try {\r\n            const result = await this.deliverToChannel(alert, channel, rule);\r\n            deliveryResults.push(result);\r\n          } catch (error) {\r\n            logger.error(`\u274C Failed to deliver to ${channel}:`, error);\r\n            deliveryResults.push({\r\n              alertId: alert.id,\r\n              channel,\r\n              success: false,\r\n              error: error instanceof Error ? error.message : 'Unknown error',\r\n              timestamp: new Date(),\r\n              retryCount: 0\r\n            });\r\n          }\r\n        }\r\n\r\n        // Set up escalation if configured\r\n        if (rule.escalation?.enabled && alert.priority === AlertPriority.CRITICAL) {\r\n          await this.scheduleEscalation(alert, rule);\r\n        }\r\n      }\r\n\r\n      // Store delivery history\r\n      this.deliveryHistory.push(...deliveryResults);\r\n\r\n      // Clean up old history (keep last 1000 entries)\r\n      if (this.deliveryHistory.length > 1000) {\r\n        this.deliveryHistory = this.deliveryHistory.slice(-1000);\r\n      }\r\n\r\n      logger.info(`\u2705 Alert ${alert.id} routed to ${deliveryResults.length} channels`);\r\n      return deliveryResults;\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to route alert ${alert.id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send trading notification (convenience method)\r\n   */\r\n  public async sendTradingNotification(data: {\r\n    symbol: string;\r\n    action: 'BUY' | 'SELL';\r\n    quantity: number;\r\n    price: number;\r\n    pnl?: number;\r\n    balance: number;\r\n    strategy: string;\r\n  }): Promise<DeliveryResult[]> {\r\n    const alert: Alert = {\r\n      id: `trade_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      category: AlertCategory.TRADING,\r\n      priority: AlertPriority.HIGH,\r\n      title: `Trade Executed: ${data.action} ${data.symbol}`,\r\n      message: `${data.action} ${data.quantity} ${data.symbol} at $${data.price}`,\r\n      data,\r\n      timestamp: new Date(),\r\n      source: 'trading-engine',\r\n      tags: ['trade', 'execution', data.symbol.toLowerCase()]\r\n    };\r\n\r\n    return await this.routeAlert(alert);\r\n  }\r\n\r\n  /**\r\n   * Send security alert (convenience method)\r\n   */\r\n  public async sendSecurityAlert(data: {\r\n    threatLevel: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n    incidentType: string;\r\n    description: string;\r\n    affectedSystems: string[];\r\n  }): Promise<DeliveryResult[]> {\r\n    const priorityMap = {\r\n      LOW: AlertPriority.LOW,\r\n      MEDIUM: AlertPriority.NORMAL,\r\n      HIGH: AlertPriority.HIGH,\r\n      CRITICAL: AlertPriority.CRITICAL\r\n    };\r\n\r\n    const alert: Alert = {\r\n      id: `security_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      category: AlertCategory.SECURITY,\r\n      priority: priorityMap[data.threatLevel],\r\n      title: `Security Alert: ${data.incidentType}`,\r\n      message: data.description,\r\n      data,\r\n      timestamp: new Date(),\r\n      source: 'security-manager',\r\n      tags: ['security', 'threat', data.incidentType.toLowerCase()]\r\n    };\r\n\r\n    return await this.routeAlert(alert);\r\n  }\r\n\r\n  /**\r\n   * Send system health alert (convenience method)\r\n   */\r\n  public async sendSystemHealthAlert(data: {\r\n    component: string;\r\n    status: 'healthy' | 'warning' | 'critical';\r\n    metrics: Record<string, number>;\r\n    message: string;\r\n  }): Promise<DeliveryResult[]> {\r\n    const priorityMap = {\r\n      healthy: AlertPriority.LOW,\r\n      warning: AlertPriority.NORMAL,\r\n      critical: AlertPriority.HIGH\r\n    };\r\n\r\n    const alert: Alert = {\r\n      id: `health_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      category: AlertCategory.SYSTEM,\r\n      priority: priorityMap[data.status],\r\n      title: `System Health: ${data.component}`,\r\n      message: data.message,\r\n      data,\r\n      timestamp: new Date(),\r\n      source: 'system-monitor',\r\n      tags: ['health', 'system', data.component.toLowerCase()]\r\n    };\r\n\r\n    return await this.routeAlert(alert);\r\n  }\r\n\r\n  /**\r\n   * Check if alert is duplicate based on content hash\r\n   */\r\n  private async isDuplicate(alert: Alert): Promise<boolean> {\r\n    const alertHash = this.generateAlertHash(alert);\r\n    const existing = this.deduplicationCache.get(alertHash);\r\n\r\n    if (existing) {\r\n      // Update existing entry\r\n      existing.lastSeen = new Date();\r\n      existing.count++;\r\n\r\n      // Suppress if seen recently (within 5 minutes for same alert)\r\n      const timeDiff = Date.now() - existing.firstSeen.getTime();\r\n      if (timeDiff < 5 * 60 * 1000) { // 5 minutes\r\n        existing.suppressed = true;\r\n        return true;\r\n      }\r\n    } else {\r\n      // Create new entry\r\n      this.deduplicationCache.set(alertHash, {\r\n        alertHash,\r\n        firstSeen: new Date(),\r\n        lastSeen: new Date(),\r\n        count: 1,\r\n        suppressed: false\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Generate hash for alert deduplication\r\n   */\r\n  private generateAlertHash(alert: Alert): string {\r\n    const hashData = {\r\n      category: alert.category,\r\n      title: alert.title,\r\n      source: alert.source,\r\n      // Include some data fields but not timestamp\r\n      dataHash: JSON.stringify(alert.data)\r\n    };\r\n\r\n    return Buffer.from(JSON.stringify(hashData)).toString('base64');\r\n  }\r\n\r\n  /**\r\n   * Find routing rules that match the alert\r\n   */\r\n  private findMatchingRules(alert: Alert): NotificationRule[] {\r\n    const matchingRules: NotificationRule[] = [];\r\n\r\n    for (const rule of this.routingRules.values()) {\r\n      if (!rule.enabled) continue;\r\n\r\n      // Check category match\r\n      if (rule.category !== alert.category) continue;\r\n\r\n      // Check priority match (route if alert priority >= rule priority)\r\n      const priorityOrder = [\r\n        AlertPriority.LOW,\r\n        AlertPriority.NORMAL,\r\n        AlertPriority.HIGH,\r\n        AlertPriority.CRITICAL,\r\n        AlertPriority.EMERGENCY\r\n      ];\r\n\r\n      const alertPriorityIndex = priorityOrder.indexOf(alert.priority);\r\n      const rulePriorityIndex = priorityOrder.indexOf(rule.priority);\r\n\r\n      if (alertPriorityIndex < rulePriorityIndex) continue;\r\n\r\n      // Check conditions if specified\r\n      if (rule.conditions && !this.evaluateConditions(alert, rule.conditions)) {\r\n        continue;\r\n      }\r\n\r\n      matchingRules.push(rule);\r\n    }\r\n\r\n    return matchingRules;\r\n  }\r\n\r\n  /**\r\n   * Evaluate rule conditions against alert\r\n   */\r\n  private evaluateConditions(alert: Alert, conditions: NotificationCondition[]): boolean {\r\n    for (const condition of conditions) {\r\n      const fieldValue = this.getFieldValue(alert, condition.field);\r\n      \r\n      if (!this.evaluateCondition(fieldValue, condition)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get field value from alert for condition evaluation\r\n   */\r\n  private getFieldValue(alert: Alert, field: string): any {\r\n    const parts = field.split('.');\r\n    let value: any = alert;\r\n\r\n    for (const part of parts) {\r\n      if (value && typeof value === 'object') {\r\n        value = value[part];\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Evaluate single condition\r\n   */\r\n  private evaluateCondition(fieldValue: any, condition: NotificationCondition): boolean {\r\n    switch (condition.operator) {\r\n      case 'equals':\r\n        return fieldValue === condition.value;\r\n      case 'contains':\r\n        return String(fieldValue).includes(String(condition.value));\r\n      case 'greater_than':\r\n        return Number(fieldValue) > Number(condition.value);\r\n      case 'less_than':\r\n        return Number(fieldValue) < Number(condition.value);\r\n      case 'regex':\r\n        return new RegExp(condition.value).test(String(fieldValue));\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply rate limiting to rules\r\n   */\r\n  private async applyRateLimit(alert: Alert, rules: NotificationRule[]): Promise<NotificationRule[]> {\r\n    const allowedRules: NotificationRule[] = [];\r\n\r\n    for (const rule of rules) {\r\n      if (!rule.rateLimit?.enabled) {\r\n        allowedRules.push(rule);\r\n        continue;\r\n      }\r\n\r\n      const rateLimitKey = `${rule.id}_${alert.category}`;\r\n      const now = new Date();\r\n      const existing = this.rateLimitCache.get(rateLimitKey);\r\n\r\n      if (existing) {\r\n        const windowElapsed = now.getTime() - existing.windowStart.getTime();\r\n        const windowMinutes = rule.rateLimit.windowMinutes || 60;\r\n\r\n        // Reset window if expired\r\n        if (windowElapsed > windowMinutes * 60 * 1000) {\r\n          existing.count = 0;\r\n          existing.windowStart = now;\r\n          existing.blocked = false;\r\n        }\r\n\r\n        // Check limits\r\n        const minuteLimit = rule.rateLimit.maxPerMinute || Infinity;\r\n        const hourLimit = rule.rateLimit.maxPerHour || Infinity;\r\n        const dayLimit = rule.rateLimit.maxPerDay || Infinity;\r\n\r\n        if (existing.count >= Math.min(minuteLimit, hourLimit, dayLimit)) {\r\n          existing.blocked = true;\r\n          logger.warn(`\u26A0\uFE0F Rate limit exceeded for rule ${rule.id}`);\r\n          continue;\r\n        }\r\n\r\n        existing.count++;\r\n      } else {\r\n        this.rateLimitCache.set(rateLimitKey, {\r\n          key: rateLimitKey,\r\n          count: 1,\r\n          windowStart: now,\r\n          blocked: false\r\n        });\r\n      }\r\n\r\n      allowedRules.push(rule);\r\n    }\r\n\r\n    return allowedRules;\r\n  }\r\n\r\n  /**\r\n   * Deliver alert to specific channel\r\n   */\r\n  private async deliverToChannel(\r\n    alert: Alert,\r\n    channel: NotificationChannel,\r\n    rule: NotificationRule\r\n  ): Promise<DeliveryResult> {\r\n    const startTime = Date.now();\r\n\r\n    try {\r\n      let messageId: string | number | undefined;\r\n\r\n      switch (channel) {\r\n        case NotificationChannel.EMAIL:\r\n          messageId = await this.deliverToEmail(alert);\r\n          break;\r\n        case NotificationChannel.TELEGRAM:\r\n          messageId = await this.deliverToTelegram(alert);\r\n          break;\r\n        default:\r\n          throw new Error(`Unsupported channel: ${channel}`);\r\n      }\r\n\r\n      return {\r\n        alertId: alert.id,\r\n        channel,\r\n        success: true,\r\n        messageId,\r\n        timestamp: new Date(),\r\n        retryCount: 0\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        alertId: alert.id,\r\n        channel,\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        timestamp: new Date(),\r\n        retryCount: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deliver alert to email\r\n   */\r\n  private async deliverToEmail(alert: Alert): Promise<string> {\r\n    switch (alert.category) {\r\n      case AlertCategory.TRADING:\r\n        return await this.emailService.sendTradeExecutionNotification({\r\n          symbol: alert.data.symbol,\r\n          action: alert.data.action,\r\n          quantity: alert.data.quantity,\r\n          price: alert.data.price,\r\n          pnl: alert.data.pnl,\r\n          balance: alert.data.balance,\r\n          strategy: alert.data.strategy,\r\n          timestamp: alert.timestamp\r\n        });\r\n\r\n      case AlertCategory.SECURITY:\r\n        return await this.emailService.sendSecurityAlert({\r\n          threatLevel: alert.data.threatLevel,\r\n          incidentType: alert.data.incidentType,\r\n          description: alert.message,\r\n          affectedSystems: alert.data.affectedSystems,\r\n          timestamp: alert.timestamp\r\n        });\r\n\r\n      default:\r\n        // Generic email notification\r\n        throw new Error(`Email delivery not implemented for category: ${alert.category}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deliver alert to Telegram\r\n   */\r\n  private async deliverToTelegram(alert: Alert): Promise<number> {\r\n    switch (alert.category) {\r\n      case AlertCategory.TRADING:\r\n        return await this.telegramService.sendTradeExecutionNotification(alert.data);\r\n\r\n      case AlertCategory.SECURITY:\r\n        return await this.telegramService.sendSecurityAlert({\r\n          threatLevel: alert.data.threatLevel,\r\n          incidentType: alert.data.incidentType,\r\n          description: alert.message,\r\n          affectedSystems: alert.data.affectedSystems,\r\n          timestamp: alert.timestamp\r\n        });\r\n\r\n      case AlertCategory.SYSTEM:\r\n        return await this.telegramService.sendSystemHealth(alert.data);\r\n\r\n      default:\r\n        throw new Error(`Telegram delivery not implemented for category: ${alert.category}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Schedule escalation for critical alerts\r\n   */\r\n  private async scheduleEscalation(alert: Alert, rule: NotificationRule): Promise<void> {\r\n    if (!rule.escalation) return;\r\n\r\n    const escalationTime = new Date(Date.now() + rule.escalation.delayMinutes * 60 * 1000);\r\n\r\n    this.escalationQueue.set(alert.id, {\r\n      alertId: alert.id,\r\n      escalationLevel: 1,\r\n      nextEscalationTime: escalationTime,\r\n      completed: false\r\n    });\r\n\r\n    logger.info(`\u23F0 Escalation scheduled for alert ${alert.id} at ${escalationTime.toISOString()}`);\r\n  }\r\n\r\n  /**\r\n   * Load default routing rules\r\n   */\r\n  private async loadRoutingRules(): Promise<void> {\r\n    // Trading alerts - high priority, both channels\r\n    this.routingRules.set('trading-high', {\r\n      id: 'trading-high',\r\n      name: 'High Priority Trading Alerts',\r\n      category: AlertCategory.TRADING,\r\n      priority: AlertPriority.HIGH,\r\n      channels: [NotificationChannel.EMAIL, NotificationChannel.TELEGRAM],\r\n      rateLimit: {\r\n        enabled: true,\r\n        maxPerMinute: 10,\r\n        maxPerHour: 100,\r\n        maxPerDay: 1000,\r\n        windowMinutes: 60\r\n      },\r\n      enabled: true\r\n    });\r\n\r\n    // Security alerts - critical priority, both channels with escalation\r\n    this.routingRules.set('security-critical', {\r\n      id: 'security-critical',\r\n      name: 'Critical Security Alerts',\r\n      category: AlertCategory.SECURITY,\r\n      priority: AlertPriority.HIGH,\r\n      channels: [NotificationChannel.EMAIL, NotificationChannel.TELEGRAM],\r\n      escalation: {\r\n        enabled: true,\r\n        delayMinutes: 15,\r\n        maxEscalations: 3,\r\n        escalationChannels: [NotificationChannel.TELEGRAM]\r\n      },\r\n      rateLimit: {\r\n        enabled: true,\r\n        maxPerMinute: 5,\r\n        maxPerHour: 50,\r\n        maxPerDay: 200,\r\n        windowMinutes: 60\r\n      },\r\n      enabled: true\r\n    });\r\n\r\n    // System health - normal priority, Telegram only\r\n    this.routingRules.set('system-health', {\r\n      id: 'system-health',\r\n      name: 'System Health Alerts',\r\n      category: AlertCategory.SYSTEM,\r\n      priority: AlertPriority.NORMAL,\r\n      channels: [NotificationChannel.TELEGRAM],\r\n      rateLimit: {\r\n        enabled: true,\r\n        maxPerMinute: 2,\r\n        maxPerHour: 20,\r\n        maxPerDay: 100,\r\n        windowMinutes: 60\r\n      },\r\n      enabled: true\r\n    });\r\n\r\n    logger.info(`\u2705 Loaded ${this.routingRules.size} routing rules`);\r\n  }\r\n\r\n  /**\r\n   * Start background tasks for cleanup and escalation\r\n   */\r\n  private startBackgroundTasks(): void {\r\n    // Clean up caches every hour\r\n    setInterval(() => {\r\n      this.cleanupCaches();\r\n    }, 60 * 60 * 1000);\r\n\r\n    // Process escalations every minute\r\n    setInterval(() => {\r\n      this.processEscalations();\r\n    }, 60 * 1000);\r\n  }\r\n\r\n  /**\r\n   * Clean up old cache entries\r\n   */\r\n  private cleanupCaches(): void {\r\n    const now = Date.now();\r\n    const maxAge = 24 * 60 * 60 * 1000; // 24 hours\r\n\r\n    // Clean deduplication cache\r\n    for (const [key, entry] of this.deduplicationCache.entries()) {\r\n      if (now - entry.lastSeen.getTime() > maxAge) {\r\n        this.deduplicationCache.delete(key);\r\n      }\r\n    }\r\n\r\n    // Clean rate limit cache\r\n    for (const [key, entry] of this.rateLimitCache.entries()) {\r\n      if (now - entry.windowStart.getTime() > maxAge) {\r\n        this.rateLimitCache.delete(key);\r\n      }\r\n    }\r\n\r\n    logger.info('\uD83E\uDDF9 Notification caches cleaned up');\r\n  }\r\n\r\n  /**\r\n   * Process pending escalations\r\n   */\r\n  private async processEscalations(): Promise<void> {\r\n    const now = new Date();\r\n\r\n    for (const [alertId, escalation] of this.escalationQueue.entries()) {\r\n      if (escalation.completed || escalation.nextEscalationTime > now) {\r\n        continue;\r\n      }\r\n\r\n      try {\r\n        // Find the rule that triggered this escalation\r\n        const rule = Array.from(this.routingRules.values())\r\n          .find(r => r.escalation?.enabled);\r\n\r\n        if (rule?.escalation) {\r\n          logger.warn(`\u26A0\uFE0F Escalating alert ${alertId} (level ${escalation.escalationLevel})`);\r\n\r\n          // Send escalation notifications\r\n          // This would typically involve sending to additional recipients or channels\r\n          \r\n          escalation.escalationLevel++;\r\n          \r\n          if (escalation.escalationLevel <= rule.escalation.maxEscalations) {\r\n            // Schedule next escalation\r\n            escalation.nextEscalationTime = new Date(\r\n              now.getTime() + rule.escalation.delayMinutes * 60 * 1000\r\n            );\r\n          } else {\r\n            // Max escalations reached\r\n            escalation.completed = true;\r\n            logger.warn(`\u26A0\uFE0F Max escalations reached for alert ${alertId}`);\r\n          }\r\n        }\r\n\r\n      } catch (error) {\r\n        logger.error(`\u274C Error processing escalation for alert ${alertId}:`, error);\r\n        escalation.completed = true;\r\n      }\r\n    }\r\n\r\n    // Clean up completed escalations\r\n    for (const [alertId, escalation] of this.escalationQueue.entries()) {\r\n      if (escalation.completed) {\r\n        this.escalationQueue.delete(alertId);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get notification router statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalAlerts: number;\r\n    successfulDeliveries: number;\r\n    failedDeliveries: number;\r\n    activeRules: number;\r\n    pendingEscalations: number;\r\n    cacheSize: {\r\n      deduplication: number;\r\n      rateLimit: number;\r\n    };\r\n  } {\r\n    const successfulDeliveries = this.deliveryHistory.filter(d => d.success).length;\r\n    const failedDeliveries = this.deliveryHistory.filter(d => !d.success).length;\r\n    const activeRules = Array.from(this.routingRules.values()).filter(r => r.enabled).length;\r\n    const pendingEscalations = Array.from(this.escalationQueue.values())\r\n      .filter(e => !e.completed).length;\r\n\r\n    return {\r\n      totalAlerts: this.deliveryHistory.length,\r\n      successfulDeliveries,\r\n      failedDeliveries,\r\n      activeRules,\r\n      pendingEscalations,\r\n      cacheSize: {\r\n        deduplication: this.deduplicationCache.size,\r\n        rateLimit: this.rateLimitCache.size\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Stop the notification router\r\n   */\r\n  public async stop(): Promise<void> {\r\n    await this.telegramService.stop();\r\n    logger.info('\uD83D\uDED1 Notification router stopped');\r\n  }\r\n}\r\n\r\nexport default NotificationRouter;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4920aee9242d8791a4dadb3ff7f022c293cdb028"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cozmnh8yg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cozmnh8yg();
cov_1cozmnh8yg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1cozmnh8yg().s[1]++;
exports.NotificationRouter = exports.AlertCategory = exports.AlertPriority = exports.NotificationChannel = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1cozmnh8yg().s[2]++, require("@/core/logging/logger"));
const email_service_1 =
/* istanbul ignore next */
(cov_1cozmnh8yg().s[3]++, require("./email-service"));
const telegram_service_1 =
/* istanbul ignore next */
(cov_1cozmnh8yg().s[4]++, require("./telegram-service"));
/**
 * Notification channels available for routing
 */
var NotificationChannel;
/* istanbul ignore next */
cov_1cozmnh8yg().s[5]++;
(function (NotificationChannel) {
  /* istanbul ignore next */
  cov_1cozmnh8yg().f[0]++;
  cov_1cozmnh8yg().s[6]++;
  NotificationChannel["EMAIL"] = "email";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[7]++;
  NotificationChannel["TELEGRAM"] = "telegram";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[8]++;
  NotificationChannel["SMS"] = "sms";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[9]++;
  NotificationChannel["WEBHOOK"] = "webhook";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[10]++;
  NotificationChannel["DASHBOARD"] = "dashboard"; // Future implementation
})(
/* istanbul ignore next */
(cov_1cozmnh8yg().b[0][0]++, NotificationChannel) ||
/* istanbul ignore next */
(cov_1cozmnh8yg().b[0][1]++, exports.NotificationChannel = NotificationChannel = {}));
/**
 * Alert priority levels for routing decisions
 */
var AlertPriority;
/* istanbul ignore next */
cov_1cozmnh8yg().s[11]++;
(function (AlertPriority) {
  /* istanbul ignore next */
  cov_1cozmnh8yg().f[1]++;
  cov_1cozmnh8yg().s[12]++;
  AlertPriority["LOW"] = "low";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[13]++;
  AlertPriority["NORMAL"] = "normal";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[14]++;
  AlertPriority["HIGH"] = "high";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[15]++;
  AlertPriority["CRITICAL"] = "critical";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[16]++;
  AlertPriority["EMERGENCY"] = "emergency";
})(
/* istanbul ignore next */
(cov_1cozmnh8yg().b[1][0]++, AlertPriority) ||
/* istanbul ignore next */
(cov_1cozmnh8yg().b[1][1]++, exports.AlertPriority = AlertPriority = {}));
/**
 * Alert categories for classification and routing
 */
var AlertCategory;
/* istanbul ignore next */
cov_1cozmnh8yg().s[17]++;
(function (AlertCategory) {
  /* istanbul ignore next */
  cov_1cozmnh8yg().f[2]++;
  cov_1cozmnh8yg().s[18]++;
  AlertCategory["TRADING"] = "trading";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[19]++;
  AlertCategory["SECURITY"] = "security";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[20]++;
  AlertCategory["SYSTEM"] = "system";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[21]++;
  AlertCategory["PERFORMANCE"] = "performance";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[22]++;
  AlertCategory["NETWORK"] = "network";
  /* istanbul ignore next */
  cov_1cozmnh8yg().s[23]++;
  AlertCategory["MAINTENANCE"] = "maintenance";
})(
/* istanbul ignore next */
(cov_1cozmnh8yg().b[2][0]++, AlertCategory) ||
/* istanbul ignore next */
(cov_1cozmnh8yg().b[2][1]++, exports.AlertCategory = AlertCategory = {}));
/**
 * Multi-channel notification router class
 */
class NotificationRouter {
  emailService;
  telegramService;
  routingRules;
  deduplicationCache;
  rateLimitCache;
  escalationQueue;
  deliveryHistory;
  isInitialized =
  /* istanbul ignore next */
  (cov_1cozmnh8yg().s[24]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[3]++;
    cov_1cozmnh8yg().s[25]++;
    this.emailService = new email_service_1.EmailService();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[26]++;
    this.telegramService = new telegram_service_1.TelegramService();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[27]++;
    this.routingRules = new Map();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[28]++;
    this.deduplicationCache = new Map();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[29]++;
    this.rateLimitCache = new Map();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[30]++;
    this.escalationQueue = new Map();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[31]++;
    this.deliveryHistory = [];
  }
  /**
   * Initialize the notification router
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[4]++;
    cov_1cozmnh8yg().s[32]++;
    try {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[33]++;
      logger_1.logger.info('🔀 Initializing notification router...');
      // Initialize notification services
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[34]++;
      await this.emailService.initialize();
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[35]++;
      await this.telegramService.initialize();
      // Load routing rules
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[36]++;
      await this.loadRoutingRules();
      // Start background tasks
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[37]++;
      this.startBackgroundTasks();
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[38]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[39]++;
      logger_1.logger.info('✅ Notification router initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[40]++;
      logger_1.logger.error('❌ Failed to initialize notification router:', error);
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[41]++;
      throw error;
    }
  }
  /**
   * Route alert through appropriate channels based on rules
   */
  async routeAlert(alert) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[5]++;
    cov_1cozmnh8yg().s[42]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().b[3][0]++;
      cov_1cozmnh8yg().s[43]++;
      throw new Error('Notification router not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1cozmnh8yg().b[3][1]++;
    }
    cov_1cozmnh8yg().s[44]++;
    try {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[45]++;
      logger_1.logger.info(`🔀 Routing alert: ${alert.id} (${alert.category}/${alert.priority})`);
      // Check for deduplication
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[46]++;
      if (await this.isDuplicate(alert)) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[4][0]++;
        cov_1cozmnh8yg().s[47]++;
        logger_1.logger.info(`🔄 Alert ${alert.id} is duplicate, skipping`);
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[48]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[4][1]++;
      }
      // Find matching routing rules
      const matchingRules =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[49]++, this.findMatchingRules(alert));
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[50]++;
      if (matchingRules.length === 0) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[5][0]++;
        cov_1cozmnh8yg().s[51]++;
        logger_1.logger.warn(`⚠️ No routing rules found for alert: ${alert.id}`);
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[52]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[5][1]++;
      }
      // Apply rate limiting
      const allowedRules =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[53]++, await this.applyRateLimit(alert, matchingRules));
      // Route to channels
      const deliveryResults =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[54]++, []);
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[55]++;
      for (const rule of allowedRules) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[56]++;
        for (const channel of rule.channels) {
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[57]++;
          try {
            const result =
            /* istanbul ignore next */
            (cov_1cozmnh8yg().s[58]++, await this.deliverToChannel(alert, channel, rule));
            /* istanbul ignore next */
            cov_1cozmnh8yg().s[59]++;
            deliveryResults.push(result);
          } catch (error) {
            /* istanbul ignore next */
            cov_1cozmnh8yg().s[60]++;
            logger_1.logger.error(`❌ Failed to deliver to ${channel}:`, error);
            /* istanbul ignore next */
            cov_1cozmnh8yg().s[61]++;
            deliveryResults.push({
              alertId: alert.id,
              channel,
              success: false,
              error: error instanceof Error ?
              /* istanbul ignore next */
              (cov_1cozmnh8yg().b[6][0]++, error.message) :
              /* istanbul ignore next */
              (cov_1cozmnh8yg().b[6][1]++, 'Unknown error'),
              timestamp: new Date(),
              retryCount: 0
            });
          }
        }
        // Set up escalation if configured
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[62]++;
        if (
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[8][0]++, rule.escalation?.enabled) &&
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[8][1]++, alert.priority === AlertPriority.CRITICAL)) {
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[7][0]++;
          cov_1cozmnh8yg().s[63]++;
          await this.scheduleEscalation(alert, rule);
        } else
        /* istanbul ignore next */
        {
          cov_1cozmnh8yg().b[7][1]++;
        }
      }
      // Store delivery history
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[64]++;
      this.deliveryHistory.push(...deliveryResults);
      // Clean up old history (keep last 1000 entries)
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[65]++;
      if (this.deliveryHistory.length > 1000) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[9][0]++;
        cov_1cozmnh8yg().s[66]++;
        this.deliveryHistory = this.deliveryHistory.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[9][1]++;
      }
      cov_1cozmnh8yg().s[67]++;
      logger_1.logger.info(`✅ Alert ${alert.id} routed to ${deliveryResults.length} channels`);
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[68]++;
      return deliveryResults;
    } catch (error) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[69]++;
      logger_1.logger.error(`❌ Failed to route alert ${alert.id}:`, error);
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[70]++;
      throw error;
    }
  }
  /**
   * Send trading notification (convenience method)
   */
  async sendTradingNotification(data) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[6]++;
    const alert =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[71]++, {
      id: `trade_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      category: AlertCategory.TRADING,
      priority: AlertPriority.HIGH,
      title: `Trade Executed: ${data.action} ${data.symbol}`,
      message: `${data.action} ${data.quantity} ${data.symbol} at $${data.price}`,
      data,
      timestamp: new Date(),
      source: 'trading-engine',
      tags: ['trade', 'execution', data.symbol.toLowerCase()]
    });
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[72]++;
    return await this.routeAlert(alert);
  }
  /**
   * Send security alert (convenience method)
   */
  async sendSecurityAlert(data) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[7]++;
    const priorityMap =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[73]++, {
      LOW: AlertPriority.LOW,
      MEDIUM: AlertPriority.NORMAL,
      HIGH: AlertPriority.HIGH,
      CRITICAL: AlertPriority.CRITICAL
    });
    const alert =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[74]++, {
      id: `security_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      category: AlertCategory.SECURITY,
      priority: priorityMap[data.threatLevel],
      title: `Security Alert: ${data.incidentType}`,
      message: data.description,
      data,
      timestamp: new Date(),
      source: 'security-manager',
      tags: ['security', 'threat', data.incidentType.toLowerCase()]
    });
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[75]++;
    return await this.routeAlert(alert);
  }
  /**
   * Send system health alert (convenience method)
   */
  async sendSystemHealthAlert(data) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[8]++;
    const priorityMap =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[76]++, {
      healthy: AlertPriority.LOW,
      warning: AlertPriority.NORMAL,
      critical: AlertPriority.HIGH
    });
    const alert =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[77]++, {
      id: `health_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      category: AlertCategory.SYSTEM,
      priority: priorityMap[data.status],
      title: `System Health: ${data.component}`,
      message: data.message,
      data,
      timestamp: new Date(),
      source: 'system-monitor',
      tags: ['health', 'system', data.component.toLowerCase()]
    });
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[78]++;
    return await this.routeAlert(alert);
  }
  /**
   * Check if alert is duplicate based on content hash
   */
  async isDuplicate(alert) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[9]++;
    const alertHash =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[79]++, this.generateAlertHash(alert));
    const existing =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[80]++, this.deduplicationCache.get(alertHash));
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[81]++;
    if (existing) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().b[10][0]++;
      cov_1cozmnh8yg().s[82]++;
      // Update existing entry
      existing.lastSeen = new Date();
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[83]++;
      existing.count++;
      // Suppress if seen recently (within 5 minutes for same alert)
      const timeDiff =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[84]++, Date.now() - existing.firstSeen.getTime());
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[85]++;
      if (timeDiff < 5 * 60 * 1000) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[11][0]++;
        cov_1cozmnh8yg().s[86]++;
        // 5 minutes
        existing.suppressed = true;
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[87]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[11][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1cozmnh8yg().b[10][1]++;
      cov_1cozmnh8yg().s[88]++;
      // Create new entry
      this.deduplicationCache.set(alertHash, {
        alertHash,
        firstSeen: new Date(),
        lastSeen: new Date(),
        count: 1,
        suppressed: false
      });
    }
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[89]++;
    return false;
  }
  /**
   * Generate hash for alert deduplication
   */
  generateAlertHash(alert) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[10]++;
    const hashData =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[90]++, {
      category: alert.category,
      title: alert.title,
      source: alert.source,
      // Include some data fields but not timestamp
      dataHash: JSON.stringify(alert.data)
    });
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[91]++;
    return Buffer.from(JSON.stringify(hashData)).toString('base64');
  }
  /**
   * Find routing rules that match the alert
   */
  findMatchingRules(alert) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[11]++;
    const matchingRules =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[92]++, []);
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[93]++;
    for (const rule of this.routingRules.values()) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[94]++;
      if (!rule.enabled) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[12][0]++;
        cov_1cozmnh8yg().s[95]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[12][1]++;
      }
      // Check category match
      cov_1cozmnh8yg().s[96]++;
      if (rule.category !== alert.category) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[13][0]++;
        cov_1cozmnh8yg().s[97]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[13][1]++;
      }
      // Check priority match (route if alert priority >= rule priority)
      const priorityOrder =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[98]++, [AlertPriority.LOW, AlertPriority.NORMAL, AlertPriority.HIGH, AlertPriority.CRITICAL, AlertPriority.EMERGENCY]);
      const alertPriorityIndex =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[99]++, priorityOrder.indexOf(alert.priority));
      const rulePriorityIndex =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[100]++, priorityOrder.indexOf(rule.priority));
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[101]++;
      if (alertPriorityIndex < rulePriorityIndex) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[14][0]++;
        cov_1cozmnh8yg().s[102]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[14][1]++;
      }
      // Check conditions if specified
      cov_1cozmnh8yg().s[103]++;
      if (
      /* istanbul ignore next */
      (cov_1cozmnh8yg().b[16][0]++, rule.conditions) &&
      /* istanbul ignore next */
      (cov_1cozmnh8yg().b[16][1]++, !this.evaluateConditions(alert, rule.conditions))) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[15][0]++;
        cov_1cozmnh8yg().s[104]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[15][1]++;
      }
      cov_1cozmnh8yg().s[105]++;
      matchingRules.push(rule);
    }
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[106]++;
    return matchingRules;
  }
  /**
   * Evaluate rule conditions against alert
   */
  evaluateConditions(alert, conditions) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[12]++;
    cov_1cozmnh8yg().s[107]++;
    for (const condition of conditions) {
      const fieldValue =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[108]++, this.getFieldValue(alert, condition.field));
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[109]++;
      if (!this.evaluateCondition(fieldValue, condition)) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[17][0]++;
        cov_1cozmnh8yg().s[110]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[17][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[111]++;
    return true;
  }
  /**
   * Get field value from alert for condition evaluation
   */
  getFieldValue(alert, field) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[13]++;
    const parts =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[112]++, field.split('.'));
    let value =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[113]++, alert);
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[114]++;
    for (const part of parts) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[115]++;
      if (
      /* istanbul ignore next */
      (cov_1cozmnh8yg().b[19][0]++, value) &&
      /* istanbul ignore next */
      (cov_1cozmnh8yg().b[19][1]++, typeof value === 'object')) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[18][0]++;
        cov_1cozmnh8yg().s[116]++;
        value = value[part];
      } else {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[18][1]++;
        cov_1cozmnh8yg().s[117]++;
        return undefined;
      }
    }
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[118]++;
    return value;
  }
  /**
   * Evaluate single condition
   */
  evaluateCondition(fieldValue, condition) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[14]++;
    cov_1cozmnh8yg().s[119]++;
    switch (condition.operator) {
      case 'equals':
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[20][0]++;
        cov_1cozmnh8yg().s[120]++;
        return fieldValue === condition.value;
      case 'contains':
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[20][1]++;
        cov_1cozmnh8yg().s[121]++;
        return String(fieldValue).includes(String(condition.value));
      case 'greater_than':
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[20][2]++;
        cov_1cozmnh8yg().s[122]++;
        return Number(fieldValue) > Number(condition.value);
      case 'less_than':
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[20][3]++;
        cov_1cozmnh8yg().s[123]++;
        return Number(fieldValue) < Number(condition.value);
      case 'regex':
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[20][4]++;
        cov_1cozmnh8yg().s[124]++;
        return new RegExp(condition.value).test(String(fieldValue));
      default:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[20][5]++;
        cov_1cozmnh8yg().s[125]++;
        return false;
    }
  }
  /**
   * Apply rate limiting to rules
   */
  async applyRateLimit(alert, rules) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[15]++;
    const allowedRules =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[126]++, []);
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[127]++;
    for (const rule of rules) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[128]++;
      if (!rule.rateLimit?.enabled) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[21][0]++;
        cov_1cozmnh8yg().s[129]++;
        allowedRules.push(rule);
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[130]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[21][1]++;
      }
      const rateLimitKey =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[131]++, `${rule.id}_${alert.category}`);
      const now =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[132]++, new Date());
      const existing =
      /* istanbul ignore next */
      (cov_1cozmnh8yg().s[133]++, this.rateLimitCache.get(rateLimitKey));
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[134]++;
      if (existing) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[22][0]++;
        const windowElapsed =
        /* istanbul ignore next */
        (cov_1cozmnh8yg().s[135]++, now.getTime() - existing.windowStart.getTime());
        const windowMinutes =
        /* istanbul ignore next */
        (cov_1cozmnh8yg().s[136]++,
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[23][0]++, rule.rateLimit.windowMinutes) ||
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[23][1]++, 60));
        // Reset window if expired
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[137]++;
        if (windowElapsed > windowMinutes * 60 * 1000) {
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[24][0]++;
          cov_1cozmnh8yg().s[138]++;
          existing.count = 0;
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[139]++;
          existing.windowStart = now;
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[140]++;
          existing.blocked = false;
        } else
        /* istanbul ignore next */
        {
          cov_1cozmnh8yg().b[24][1]++;
        }
        // Check limits
        const minuteLimit =
        /* istanbul ignore next */
        (cov_1cozmnh8yg().s[141]++,
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[25][0]++, rule.rateLimit.maxPerMinute) ||
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[25][1]++, Infinity));
        const hourLimit =
        /* istanbul ignore next */
        (cov_1cozmnh8yg().s[142]++,
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[26][0]++, rule.rateLimit.maxPerHour) ||
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[26][1]++, Infinity));
        const dayLimit =
        /* istanbul ignore next */
        (cov_1cozmnh8yg().s[143]++,
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[27][0]++, rule.rateLimit.maxPerDay) ||
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[27][1]++, Infinity));
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[144]++;
        if (existing.count >= Math.min(minuteLimit, hourLimit, dayLimit)) {
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[28][0]++;
          cov_1cozmnh8yg().s[145]++;
          existing.blocked = true;
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[146]++;
          logger_1.logger.warn(`⚠️ Rate limit exceeded for rule ${rule.id}`);
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[147]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1cozmnh8yg().b[28][1]++;
        }
        cov_1cozmnh8yg().s[148]++;
        existing.count++;
      } else {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[22][1]++;
        cov_1cozmnh8yg().s[149]++;
        this.rateLimitCache.set(rateLimitKey, {
          key: rateLimitKey,
          count: 1,
          windowStart: now,
          blocked: false
        });
      }
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[150]++;
      allowedRules.push(rule);
    }
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[151]++;
    return allowedRules;
  }
  /**
   * Deliver alert to specific channel
   */
  async deliverToChannel(alert, channel, rule) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[16]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[152]++, Date.now());
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[153]++;
    try {
      let messageId;
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[154]++;
      switch (channel) {
        case NotificationChannel.EMAIL:
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[29][0]++;
          cov_1cozmnh8yg().s[155]++;
          messageId = await this.deliverToEmail(alert);
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[156]++;
          break;
        case NotificationChannel.TELEGRAM:
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[29][1]++;
          cov_1cozmnh8yg().s[157]++;
          messageId = await this.deliverToTelegram(alert);
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[158]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[29][2]++;
          cov_1cozmnh8yg().s[159]++;
          throw new Error(`Unsupported channel: ${channel}`);
      }
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[160]++;
      return {
        alertId: alert.id,
        channel,
        success: true,
        messageId,
        timestamp: new Date(),
        retryCount: 0
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[161]++;
      return {
        alertId: alert.id,
        channel,
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[30][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1cozmnh8yg().b[30][1]++, 'Unknown error'),
        timestamp: new Date(),
        retryCount: 0
      };
    }
  }
  /**
   * Deliver alert to email
   */
  async deliverToEmail(alert) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[17]++;
    cov_1cozmnh8yg().s[162]++;
    switch (alert.category) {
      case AlertCategory.TRADING:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[31][0]++;
        cov_1cozmnh8yg().s[163]++;
        return await this.emailService.sendTradeExecutionNotification({
          symbol: alert.data.symbol,
          action: alert.data.action,
          quantity: alert.data.quantity,
          price: alert.data.price,
          pnl: alert.data.pnl,
          balance: alert.data.balance,
          strategy: alert.data.strategy,
          timestamp: alert.timestamp
        });
      case AlertCategory.SECURITY:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[31][1]++;
        cov_1cozmnh8yg().s[164]++;
        return await this.emailService.sendSecurityAlert({
          threatLevel: alert.data.threatLevel,
          incidentType: alert.data.incidentType,
          description: alert.message,
          affectedSystems: alert.data.affectedSystems,
          timestamp: alert.timestamp
        });
      default:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[31][2]++;
        cov_1cozmnh8yg().s[165]++;
        // Generic email notification
        throw new Error(`Email delivery not implemented for category: ${alert.category}`);
    }
  }
  /**
   * Deliver alert to Telegram
   */
  async deliverToTelegram(alert) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[18]++;
    cov_1cozmnh8yg().s[166]++;
    switch (alert.category) {
      case AlertCategory.TRADING:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[32][0]++;
        cov_1cozmnh8yg().s[167]++;
        return await this.telegramService.sendTradeExecutionNotification(alert.data);
      case AlertCategory.SECURITY:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[32][1]++;
        cov_1cozmnh8yg().s[168]++;
        return await this.telegramService.sendSecurityAlert({
          threatLevel: alert.data.threatLevel,
          incidentType: alert.data.incidentType,
          description: alert.message,
          affectedSystems: alert.data.affectedSystems,
          timestamp: alert.timestamp
        });
      case AlertCategory.SYSTEM:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[32][2]++;
        cov_1cozmnh8yg().s[169]++;
        return await this.telegramService.sendSystemHealth(alert.data);
      default:
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[32][3]++;
        cov_1cozmnh8yg().s[170]++;
        throw new Error(`Telegram delivery not implemented for category: ${alert.category}`);
    }
  }
  /**
   * Schedule escalation for critical alerts
   */
  async scheduleEscalation(alert, rule) {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[19]++;
    cov_1cozmnh8yg().s[171]++;
    if (!rule.escalation) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().b[33][0]++;
      cov_1cozmnh8yg().s[172]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1cozmnh8yg().b[33][1]++;
    }
    const escalationTime =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[173]++, new Date(Date.now() + rule.escalation.delayMinutes * 60 * 1000));
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[174]++;
    this.escalationQueue.set(alert.id, {
      alertId: alert.id,
      escalationLevel: 1,
      nextEscalationTime: escalationTime,
      completed: false
    });
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[175]++;
    logger_1.logger.info(`⏰ Escalation scheduled for alert ${alert.id} at ${escalationTime.toISOString()}`);
  }
  /**
   * Load default routing rules
   */
  async loadRoutingRules() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[20]++;
    cov_1cozmnh8yg().s[176]++;
    // Trading alerts - high priority, both channels
    this.routingRules.set('trading-high', {
      id: 'trading-high',
      name: 'High Priority Trading Alerts',
      category: AlertCategory.TRADING,
      priority: AlertPriority.HIGH,
      channels: [NotificationChannel.EMAIL, NotificationChannel.TELEGRAM],
      rateLimit: {
        enabled: true,
        maxPerMinute: 10,
        maxPerHour: 100,
        maxPerDay: 1000,
        windowMinutes: 60
      },
      enabled: true
    });
    // Security alerts - critical priority, both channels with escalation
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[177]++;
    this.routingRules.set('security-critical', {
      id: 'security-critical',
      name: 'Critical Security Alerts',
      category: AlertCategory.SECURITY,
      priority: AlertPriority.HIGH,
      channels: [NotificationChannel.EMAIL, NotificationChannel.TELEGRAM],
      escalation: {
        enabled: true,
        delayMinutes: 15,
        maxEscalations: 3,
        escalationChannels: [NotificationChannel.TELEGRAM]
      },
      rateLimit: {
        enabled: true,
        maxPerMinute: 5,
        maxPerHour: 50,
        maxPerDay: 200,
        windowMinutes: 60
      },
      enabled: true
    });
    // System health - normal priority, Telegram only
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[178]++;
    this.routingRules.set('system-health', {
      id: 'system-health',
      name: 'System Health Alerts',
      category: AlertCategory.SYSTEM,
      priority: AlertPriority.NORMAL,
      channels: [NotificationChannel.TELEGRAM],
      rateLimit: {
        enabled: true,
        maxPerMinute: 2,
        maxPerHour: 20,
        maxPerDay: 100,
        windowMinutes: 60
      },
      enabled: true
    });
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[179]++;
    logger_1.logger.info(`✅ Loaded ${this.routingRules.size} routing rules`);
  }
  /**
   * Start background tasks for cleanup and escalation
   */
  startBackgroundTasks() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[21]++;
    cov_1cozmnh8yg().s[180]++;
    // Clean up caches every hour
    setInterval(() => {
      /* istanbul ignore next */
      cov_1cozmnh8yg().f[22]++;
      cov_1cozmnh8yg().s[181]++;
      this.cleanupCaches();
    }, 60 * 60 * 1000);
    // Process escalations every minute
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[182]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_1cozmnh8yg().f[23]++;
      cov_1cozmnh8yg().s[183]++;
      this.processEscalations();
    }, 60 * 1000);
  }
  /**
   * Clean up old cache entries
   */
  cleanupCaches() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[24]++;
    const now =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[184]++, Date.now());
    const maxAge =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[185]++, 24 * 60 * 60 * 1000); // 24 hours
    // Clean deduplication cache
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[186]++;
    for (const [key, entry] of this.deduplicationCache.entries()) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[187]++;
      if (now - entry.lastSeen.getTime() > maxAge) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[34][0]++;
        cov_1cozmnh8yg().s[188]++;
        this.deduplicationCache.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[34][1]++;
      }
    }
    // Clean rate limit cache
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[189]++;
    for (const [key, entry] of this.rateLimitCache.entries()) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[190]++;
      if (now - entry.windowStart.getTime() > maxAge) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[35][0]++;
        cov_1cozmnh8yg().s[191]++;
        this.rateLimitCache.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[35][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[192]++;
    logger_1.logger.info('🧹 Notification caches cleaned up');
  }
  /**
   * Process pending escalations
   */
  async processEscalations() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[25]++;
    const now =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[193]++, new Date());
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[194]++;
    for (const [alertId, escalation] of this.escalationQueue.entries()) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[195]++;
      if (
      /* istanbul ignore next */
      (cov_1cozmnh8yg().b[37][0]++, escalation.completed) ||
      /* istanbul ignore next */
      (cov_1cozmnh8yg().b[37][1]++, escalation.nextEscalationTime > now)) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[36][0]++;
        cov_1cozmnh8yg().s[196]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[36][1]++;
      }
      cov_1cozmnh8yg().s[197]++;
      try {
        // Find the rule that triggered this escalation
        const rule =
        /* istanbul ignore next */
        (cov_1cozmnh8yg().s[198]++, Array.from(this.routingRules.values()).find(r => {
          /* istanbul ignore next */
          cov_1cozmnh8yg().f[26]++;
          cov_1cozmnh8yg().s[199]++;
          return r.escalation?.enabled;
        }));
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[200]++;
        if (rule?.escalation) {
          /* istanbul ignore next */
          cov_1cozmnh8yg().b[38][0]++;
          cov_1cozmnh8yg().s[201]++;
          logger_1.logger.warn(`⚠️ Escalating alert ${alertId} (level ${escalation.escalationLevel})`);
          // Send escalation notifications
          // This would typically involve sending to additional recipients or channels
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[202]++;
          escalation.escalationLevel++;
          /* istanbul ignore next */
          cov_1cozmnh8yg().s[203]++;
          if (escalation.escalationLevel <= rule.escalation.maxEscalations) {
            /* istanbul ignore next */
            cov_1cozmnh8yg().b[39][0]++;
            cov_1cozmnh8yg().s[204]++;
            // Schedule next escalation
            escalation.nextEscalationTime = new Date(now.getTime() + rule.escalation.delayMinutes * 60 * 1000);
          } else {
            /* istanbul ignore next */
            cov_1cozmnh8yg().b[39][1]++;
            cov_1cozmnh8yg().s[205]++;
            // Max escalations reached
            escalation.completed = true;
            /* istanbul ignore next */
            cov_1cozmnh8yg().s[206]++;
            logger_1.logger.warn(`⚠️ Max escalations reached for alert ${alertId}`);
          }
        } else
        /* istanbul ignore next */
        {
          cov_1cozmnh8yg().b[38][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[207]++;
        logger_1.logger.error(`❌ Error processing escalation for alert ${alertId}:`, error);
        /* istanbul ignore next */
        cov_1cozmnh8yg().s[208]++;
        escalation.completed = true;
      }
    }
    // Clean up completed escalations
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[209]++;
    for (const [alertId, escalation] of this.escalationQueue.entries()) {
      /* istanbul ignore next */
      cov_1cozmnh8yg().s[210]++;
      if (escalation.completed) {
        /* istanbul ignore next */
        cov_1cozmnh8yg().b[40][0]++;
        cov_1cozmnh8yg().s[211]++;
        this.escalationQueue.delete(alertId);
      } else
      /* istanbul ignore next */
      {
        cov_1cozmnh8yg().b[40][1]++;
      }
    }
  }
  /**
   * Get notification router statistics
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[27]++;
    const successfulDeliveries =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[212]++, this.deliveryHistory.filter(d => {
      /* istanbul ignore next */
      cov_1cozmnh8yg().f[28]++;
      cov_1cozmnh8yg().s[213]++;
      return d.success;
    }).length);
    const failedDeliveries =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[214]++, this.deliveryHistory.filter(d => {
      /* istanbul ignore next */
      cov_1cozmnh8yg().f[29]++;
      cov_1cozmnh8yg().s[215]++;
      return !d.success;
    }).length);
    const activeRules =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[216]++, Array.from(this.routingRules.values()).filter(r => {
      /* istanbul ignore next */
      cov_1cozmnh8yg().f[30]++;
      cov_1cozmnh8yg().s[217]++;
      return r.enabled;
    }).length);
    const pendingEscalations =
    /* istanbul ignore next */
    (cov_1cozmnh8yg().s[218]++, Array.from(this.escalationQueue.values()).filter(e => {
      /* istanbul ignore next */
      cov_1cozmnh8yg().f[31]++;
      cov_1cozmnh8yg().s[219]++;
      return !e.completed;
    }).length);
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[220]++;
    return {
      totalAlerts: this.deliveryHistory.length,
      successfulDeliveries,
      failedDeliveries,
      activeRules,
      pendingEscalations,
      cacheSize: {
        deduplication: this.deduplicationCache.size,
        rateLimit: this.rateLimitCache.size
      }
    };
  }
  /**
   * Stop the notification router
   */
  async stop() {
    /* istanbul ignore next */
    cov_1cozmnh8yg().f[32]++;
    cov_1cozmnh8yg().s[221]++;
    await this.telegramService.stop();
    /* istanbul ignore next */
    cov_1cozmnh8yg().s[222]++;
    logger_1.logger.info('🛑 Notification router stopped');
  }
}
/* istanbul ignore next */
cov_1cozmnh8yg().s[223]++;
exports.NotificationRouter = NotificationRouter;
/* istanbul ignore next */
cov_1cozmnh8yg().s[224]++;
exports.default = NotificationRouter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,