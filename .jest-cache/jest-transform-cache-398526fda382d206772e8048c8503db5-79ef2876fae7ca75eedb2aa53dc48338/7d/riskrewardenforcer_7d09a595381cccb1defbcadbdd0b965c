012fe7f0568ab97455ce8140a1f9f073
"use strict";

/**
 * Risk-Reward Ratio Enforcer
 *
 * Implements sophisticated risk-reward ratio enforcement with:
 * - Minimum 1.3:1 risk-reward ratio validation
 * - Dynamic RR adjustment based on market conditions
 * - Trade rejection for insufficient risk-reward
 * - RR optimization recommendations
 */
/* istanbul ignore next */
function cov_rxb1yu68n() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\risk-reward-enforcer.ts";
  var hash = "01263ea4a5a7d141e96b9010bf38675bf5c9dc99";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\risk-reward-enforcer.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "2": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "3": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "5": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 67
        }
      },
      "6": {
        start: {
          line: 34,
          column: 33
        },
        end: {
          line: 34,
          column: 103
        }
      },
      "7": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 116
        }
      },
      "8": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 63
        }
      },
      "10": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "11": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 29
        }
      },
      "12": {
        start: {
          line: 54,
          column: 77
        },
        end: {
          line: 54,
          column: 85
        }
      },
      "13": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 78
        }
      },
      "14": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 57,
          column: 82
        }
      },
      "15": {
        start: {
          line: 59,
          column: 31
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "16": {
        start: {
          line: 60,
          column: 33
        },
        end: {
          line: 60,
          column: 92
        }
      },
      "17": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 62,
          column: 78
        }
      },
      "18": {
        start: {
          line: 64,
          column: 31
        },
        end: {
          line: 64,
          column: 80
        }
      },
      "19": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "20": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "21": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 32
        }
      },
      "22": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "23": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "24": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 83
        }
      },
      "25": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 22
        }
      },
      "26": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 83
        }
      },
      "27": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "28": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 84
        }
      },
      "29": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 22
        }
      },
      "30": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "31": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 86
        }
      },
      "32": {
        start: {
          line: 98,
          column: 13
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "33": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 85
        }
      },
      "34": {
        start: {
          line: 102,
          column: 37
        },
        end: {
          line: 102,
          column: 76
        }
      },
      "35": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 49
        }
      },
      "36": {
        start: {
          line: 105,
          column: 30
        },
        end: {
          line: 105,
          column: 79
        }
      },
      "37": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "38": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 115,
          column: 34
        }
      },
      "39": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "40": {
        start: {
          line: 119,
          column: 36
        },
        end: {
          line: 119,
          column: 93
        }
      },
      "41": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "42": {
        start: {
          line: 121,
          column: 32
        },
        end: {
          line: 121,
          column: 103
        }
      },
      "43": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 122,
          column: 61
        }
      },
      "44": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "45": {
        start: {
          line: 133,
          column: 39
        },
        end: {
          line: 133,
          column: 98
        }
      },
      "46": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "47": {
        start: {
          line: 135,
          column: 34
        },
        end: {
          line: 135,
          column: 108
        }
      },
      "48": {
        start: {
          line: 136,
          column: 30
        },
        end: {
          line: 136,
          column: 61
        }
      },
      "49": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "50": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 147,
          column: 90
        }
      },
      "51": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "52": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 102
        }
      },
      "53": {
        start: {
          line: 150,
          column: 34
        },
        end: {
          line: 150,
          column: 106
        }
      },
      "54": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 49
        }
      },
      "55": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 159,
          column: 19
        }
      },
      "56": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "57": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 171,
          column: 15
        }
      },
      "58": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "59": {
        start: {
          line: 174,
          column: 34
        },
        end: {
          line: 174,
          column: 64
        }
      },
      "60": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 73
        }
      },
      "61": {
        start: {
          line: 182,
          column: 37
        },
        end: {
          line: 182,
          column: 45
        }
      },
      "62": {
        start: {
          line: 184,
          column: 33
        },
        end: {
          line: 184,
          column: 74
        }
      },
      "63": {
        start: {
          line: 185,
          column: 32
        },
        end: {
          line: 185,
          column: 69
        }
      },
      "64": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "65": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 72
        }
      },
      "66": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "67": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 84
        }
      },
      "68": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 31
        }
      },
      "69": {
        start: {
          line: 195,
          column: 32
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "70": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "71": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 87
        }
      },
      "72": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 31
        }
      },
      "73": {
        start: {
          line: 207,
          column: 52
        },
        end: {
          line: 207,
          column: 60
        }
      },
      "74": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 65
        }
      },
      "75": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 209,
          column: 61
        }
      },
      "76": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "77": {
        start: {
          line: 211,
          column: 34
        },
        end: {
          line: 211,
          column: 72
        }
      },
      "78": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "79": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 89
        }
      },
      "80": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 33
        }
      },
      "81": {
        start: {
          line: 219,
          column: 34
        },
        end: {
          line: 219,
          column: 72
        }
      },
      "82": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "83": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 86
        }
      },
      "84": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 33
        }
      },
      "85": {
        start: {
          line: 231,
          column: 69
        },
        end: {
          line: 231,
          column: 77
        }
      },
      "86": {
        start: {
          line: 233,
          column: 30
        },
        end: {
          line: 233,
          column: 68
        }
      },
      "87": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 234,
          column: 64
        }
      },
      "88": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "89": {
        start: {
          line: 237,
          column: 31
        },
        end: {
          line: 237,
          column: 83
        }
      },
      "90": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 46
        }
      },
      "91": {
        start: {
          line: 242,
          column: 31
        },
        end: {
          line: 242,
          column: 83
        }
      },
      "92": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 46
        }
      },
      "93": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "94": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 25
        }
      },
      "95": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "96": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 25
        }
      },
      "97": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "98": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "99": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 20
        }
      },
      "100": {
        start: {
          line: 268,
          column: 24
        },
        end: {
          line: 268,
          column: 26
        }
      },
      "101": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "102": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 133
        }
      },
      "103": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "104": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 133
        }
      },
      "105": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "106": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 131
        }
      },
      "107": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 23
        }
      },
      "108": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 54
        }
      },
      "109": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "110": {
        start: {
          line: 287,
          column: 31
        },
        end: {
          line: 287,
          column: 162
        }
      },
      "111": {
        start: {
          line: 288,
          column: 35
        },
        end: {
          line: 288,
          column: 124
        }
      },
      "112": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 105
        }
      },
      "113": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 112
        }
      },
      "114": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 114
        }
      },
      "115": {
        start: {
          line: 294,
          column: 31
        },
        end: {
          line: 294,
          column: 95
        }
      },
      "116": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 117
        }
      },
      "117": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 58
        }
      },
      "118": {
        start: {
          line: 301,
          column: 31
        },
        end: {
          line: 301,
          column: 120
        }
      },
      "119": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 120
        }
      },
      "120": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 46
        }
      },
      "121": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "122": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 51
        }
      },
      "123": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 38
        }
      },
      "124": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 55
        }
      },
      "125": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 34
        }
      },
      "126": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 343,
          column: 10
        }
      },
      "127": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 31
        }
      },
      "128": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 353,
          column: 24
        }
      },
      "129": {
        start: {
          line: 351,
          column: 41
        },
        end: {
          line: 351,
          column: 60
        }
      },
      "130": {
        start: {
          line: 352,
          column: 28
        },
        end: {
          line: 352,
          column: 45
        }
      },
      "131": {
        start: {
          line: 355,
          column: 29
        },
        end: {
          line: 369,
          column: 10
        }
      },
      "132": {
        start: {
          line: 356,
          column: 33
        },
        end: {
          line: 356,
          column: 65
        }
      },
      "133": {
        start: {
          line: 357,
          column: 35
        },
        end: {
          line: 357,
          column: 71
        }
      },
      "134": {
        start: {
          line: 357,
          column: 60
        },
        end: {
          line: 357,
          column: 70
        }
      },
      "135": {
        start: {
          line: 358,
          column: 26
        },
        end: {
          line: 360,
          column: 19
        }
      },
      "136": {
        start: {
          line: 359,
          column: 52
        },
        end: {
          line: 359,
          column: 75
        }
      },
      "137": {
        start: {
          line: 361,
          column: 33
        },
        end: {
          line: 363,
          column: 19
        }
      },
      "138": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 368,
          column: 14
        }
      },
      "139": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "140": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 377,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 53
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 70
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 77
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 78
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 114
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 173,
            column: 36
          },
          end: {
            line: 173,
            column: 37
          }
        },
        loc: {
          start: {
            line: 173,
            column: 46
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 173
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 57
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 181
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 59
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 206
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 58
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 230
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 46
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 249
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 49
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 267
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 49
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 283
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 28
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 307
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 27
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 313
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        loc: {
          start: {
            line: 322,
            column: 28
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 322
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 16
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 328
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 30
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 334
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        loc: {
          start: {
            line: 349,
            column: 32
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 349
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 351,
            column: 17
          },
          end: {
            line: 351,
            column: 18
          }
        },
        loc: {
          start: {
            line: 351,
            column: 41
          },
          end: {
            line: 351,
            column: 60
          }
        },
        line: 351
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 352,
            column: 18
          },
          end: {
            line: 352,
            column: 19
          }
        },
        loc: {
          start: {
            line: 352,
            column: 28
          },
          end: {
            line: 352,
            column: 45
          }
        },
        line: 352
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 355,
            column: 46
          },
          end: {
            line: 355,
            column: 47
          }
        },
        loc: {
          start: {
            line: 355,
            column: 56
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 355
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 357,
            column: 55
          },
          end: {
            line: 357,
            column: 56
          }
        },
        loc: {
          start: {
            line: 357,
            column: 60
          },
          end: {
            line: 357,
            column: 70
          }
        },
        line: 357
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 359,
            column: 40
          },
          end: {
            line: 359,
            column: 41
          }
        },
        loc: {
          start: {
            line: 359,
            column: 52
          },
          end: {
            line: 359,
            column: 75
          }
        },
        line: 359
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 62,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 49
          },
          end: {
            line: 62,
            column: 74
          }
        }, {
          start: {
            line: 62,
            column: 77
          },
          end: {
            line: 62,
            column: 78
          }
        }],
        line: 62
      },
      "1": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "2": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 86,
            column: 22
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 22
          }
        }, {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 22
          }
        }],
        line: 83
      },
      "3": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: 98,
            column: 13
          },
          end: {
            line: 100,
            column: 9
          }
        }],
        line: 95
      },
      "4": {
        loc: {
          start: {
            line: 98,
            column: 13
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 13
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "8": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "9": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "10": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: 194,
            column: 13
          },
          end: {
            line: 201,
            column: 9
          }
        }],
        line: 186
      },
      "11": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "12": {
        loc: {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 45
          }
        }, {
          start: {
            line: 189,
            column: 49
          },
          end: {
            line: 189,
            column: 91
          }
        }],
        line: 189
      },
      "13": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "14": {
        loc: {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 48
          }
        }, {
          start: {
            line: 197,
            column: 52
          },
          end: {
            line: 197,
            column: 97
          }
        }],
        line: 197
      },
      "15": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: 218,
            column: 13
          },
          end: {
            line: 225,
            column: 9
          }
        }],
        line: 210
      },
      "16": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "17": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 48
          }
        }, {
          start: {
            line: 213,
            column: 52
          },
          end: {
            line: 213,
            column: 97
          }
        }],
        line: 213
      },
      "18": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "19": {
        loc: {
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 221,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 221,
            column: 45
          }
        }, {
          start: {
            line: 221,
            column: 49
          },
          end: {
            line: 221,
            column: 91
          }
        }],
        line: 221
      },
      "20": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: 240,
            column: 13
          },
          end: {
            line: 244,
            column: 9
          }
        }],
        line: 235
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 36
          }
        }, {
          start: {
            line: 259,
            column: 40
          },
          end: {
            line: 259,
            column: 103
          }
        }],
        line: 259
      },
      "25": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "26": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "27": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "28": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 36
          }
        }, {
          start: {
            line: 275,
            column: 40
          },
          end: {
            line: 275,
            column: 103
          }
        }],
        line: 275
      },
      "29": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: 297,
            column: 13
          },
          end: {
            line: 299,
            column: 9
          }
        }],
        line: 285
      },
      "30": {
        loc: {
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 294,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 294,
            column: 90
          }
        }, {
          start: {
            line: 294,
            column: 94
          },
          end: {
            line: 294,
            column: 95
          }
        }],
        line: 294
      },
      "31": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 316,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 316,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "32": {
        loc: {
          start: {
            line: 358,
            column: 26
          },
          end: {
            line: 360,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 18
          },
          end: {
            line: 359,
            column: 103
          }
        }, {
          start: {
            line: 360,
            column: 18
          },
          end: {
            line: 360,
            column: 19
          }
        }],
        line: 358
      },
      "33": {
        loc: {
          start: {
            line: 361,
            column: 33
          },
          end: {
            line: 363,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 18
          },
          end: {
            line: 362,
            column: 69
          }
        }, {
          start: {
            line: 363,
            column: 18
          },
          end: {
            line: 363,
            column: 19
          }
        }],
        line: 361
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "01263ea4a5a7d141e96b9010bf38675bf5c9dc99"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rxb1yu68n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rxb1yu68n();
cov_rxb1yu68n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rxb1yu68n().s[1]++;
exports.RiskRewardEnforcer = void 0;
class RiskRewardEnforcer {
  constructor(config) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[0]++;
    cov_rxb1yu68n().s[2]++;
    this.tradeHistory = [];
    /* istanbul ignore next */
    cov_rxb1yu68n().s[3]++;
    this.config = config;
    /* istanbul ignore next */
    cov_rxb1yu68n().s[4]++;
    this.performanceMetrics = {
      averageRR: 0,
      rrComplianceRate: 0,
      rejectedTradesCount: 0,
      totalTradesAnalyzed: 0,
      bestRR: 0,
      worstRR: Infinity,
      rrByStrategy: new Map()
    };
  }
  /**
   * Analyze and enforce risk-reward ratio for a trade proposal
   */
  analyzeRiskReward(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[1]++;
    // Calculate base risk-reward metrics
    const baseAnalysis =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[5]++, this.calculateBaseRiskReward(proposal));
    // Apply dynamic adjustments based on market conditions
    const adjustedAnalysis =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[6]++, this.applyDynamicAdjustments(baseAnalysis, proposal, marketConditions));
    // Generate optimization recommendations
    const optimizations =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[7]++, this.generateOptimizationRecommendations(proposal, adjustedAnalysis, marketConditions));
    // Final validation
    const finalAnalysis =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[8]++, {
      ...adjustedAnalysis,
      optimizationRecommendations: optimizations,
      approved: this.validateTradeApproval(adjustedAnalysis, proposal),
      rejectionReasons: this.generateRejectionReasons(adjustedAnalysis, proposal)
    });
    // Update performance metrics
    /* istanbul ignore next */
    cov_rxb1yu68n().s[9]++;
    this.updatePerformanceMetrics(finalAnalysis, proposal);
    // Store in history
    /* istanbul ignore next */
    cov_rxb1yu68n().s[10]++;
    this.tradeHistory.push(finalAnalysis);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[11]++;
    return finalAnalysis;
  }
  /**
   * Calculate base risk-reward metrics
   */
  calculateBaseRiskReward(proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[2]++;
    const {
      entryPrice,
      stopLossPrice,
      takeProfitPrice,
      positionSize
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[12]++, proposal);
    // Calculate risk and reward amounts
    const riskAmount =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[13]++, Math.abs(entryPrice - stopLossPrice) * positionSize);
    const rewardAmount =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[14]++, Math.abs(takeProfitPrice - entryPrice) * positionSize);
    // Calculate percentages
    const riskPercentage =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[15]++, Math.abs((entryPrice - stopLossPrice) / entryPrice) * 100);
    const rewardPercentage =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[16]++, Math.abs((takeProfitPrice - entryPrice) / entryPrice) * 100);
    // Calculate risk-reward ratio
    const riskRewardRatio =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[17]++, riskAmount > 0 ?
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[0][0]++, rewardAmount / riskAmount) :
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[0][1]++, 0));
    // Check if meets minimum requirements
    const meetsMinimumRR =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[18]++, riskRewardRatio >= this.config.minRiskRewardRatio);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[19]++;
    return {
      riskRewardRatio,
      riskAmount,
      rewardAmount,
      riskPercentage,
      rewardPercentage,
      meetsMinimumRR
    };
  }
  /**
   * Apply dynamic adjustments based on market conditions
   */
  applyDynamicAdjustments(baseAnalysis, proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[3]++;
    cov_rxb1yu68n().s[20]++;
    if (!this.config.enableDynamicAdjustment) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[1][0]++;
      cov_rxb1yu68n().s[21]++;
      return baseAnalysis;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[1][1]++;
    }
    let adjustmentFactor =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[22]++, 1.0);
    // Adjust based on market trend
    /* istanbul ignore next */
    cov_rxb1yu68n().s[23]++;
    switch (marketConditions.trend) {
      case 'BULLISH':
        /* istanbul ignore next */
        cov_rxb1yu68n().b[2][0]++;
        cov_rxb1yu68n().s[24]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.bullish;
        /* istanbul ignore next */
        cov_rxb1yu68n().s[25]++;
        break;
      case 'BEARISH':
        /* istanbul ignore next */
        cov_rxb1yu68n().b[2][1]++;
        cov_rxb1yu68n().s[26]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.bearish;
        /* istanbul ignore next */
        cov_rxb1yu68n().s[27]++;
        break;
      case 'SIDEWAYS':
        /* istanbul ignore next */
        cov_rxb1yu68n().b[2][2]++;
        cov_rxb1yu68n().s[28]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.sideways;
        /* istanbul ignore next */
        cov_rxb1yu68n().s[29]++;
        break;
    }
    // Adjust based on volatility
    /* istanbul ignore next */
    cov_rxb1yu68n().s[30]++;
    if (marketConditions.volatility > 0.5) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[3][0]++;
      cov_rxb1yu68n().s[31]++;
      adjustmentFactor *= this.config.marketConditionAdjustments.highVolatility;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[3][1]++;
      cov_rxb1yu68n().s[32]++;
      if (marketConditions.volatility < 0.2) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[4][0]++;
        cov_rxb1yu68n().s[33]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.lowVolatility;
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[4][1]++;
      }
    }
    // Adjust based on signal confidence
    const confidenceAdjustment =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[34]++, 0.8 + proposal.confidence / 100 * 0.4); // 0.8 to 1.2 range
    /* istanbul ignore next */
    cov_rxb1yu68n().s[35]++;
    adjustmentFactor *= confidenceAdjustment;
    // Apply adjustment to minimum RR requirement
    const adjustedMinRR =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[36]++, this.config.minRiskRewardRatio * adjustmentFactor);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[37]++;
    return {
      ...baseAnalysis,
      meetsMinimumRR: baseAnalysis.riskRewardRatio >= adjustedMinRR
    };
  }
  /**
   * Generate optimization recommendations
   */
  generateOptimizationRecommendations(proposal, analysis, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[4]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[38]++, []);
    // If RR is below minimum, suggest improvements
    /* istanbul ignore next */
    cov_rxb1yu68n().s[39]++;
    if (!analysis.meetsMinimumRR) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[5][0]++;
      // Suggest tightening stop loss
      const tighterStopLoss =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[40]++, this.calculateOptimalStopLoss(proposal, marketConditions));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[41]++;
      if (tighterStopLoss !== proposal.stopLossPrice) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[6][0]++;
        const newRisk =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[42]++, Math.abs(proposal.entryPrice - tighterStopLoss) * proposal.positionSize);
        const newRR =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[43]++, analysis.rewardAmount / newRisk);
        /* istanbul ignore next */
        cov_rxb1yu68n().s[44]++;
        recommendations.push({
          type: 'ADJUST_STOP_LOSS',
          currentValue: proposal.stopLossPrice,
          recommendedValue: tighterStopLoss,
          rrImprovement: newRR - analysis.riskRewardRatio,
          description: `Tighten stop loss to ${tighterStopLoss.toFixed(2)} to improve RR ratio`,
          priority: 'HIGH'
        });
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[6][1]++;
      }
      // Suggest extending take profit
      const extendedTakeProfit =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[45]++, this.calculateOptimalTakeProfit(proposal, marketConditions));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[46]++;
      if (extendedTakeProfit !== proposal.takeProfitPrice) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[7][0]++;
        const newReward =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[47]++, Math.abs(extendedTakeProfit - proposal.entryPrice) * proposal.positionSize);
        const newRR =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[48]++, newReward / analysis.riskAmount);
        /* istanbul ignore next */
        cov_rxb1yu68n().s[49]++;
        recommendations.push({
          type: 'ADJUST_TAKE_PROFIT',
          currentValue: proposal.takeProfitPrice,
          recommendedValue: extendedTakeProfit,
          rrImprovement: newRR - analysis.riskRewardRatio,
          description: `Extend take profit to ${extendedTakeProfit.toFixed(2)} to improve RR ratio`,
          priority: 'MEDIUM'
        });
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[7][1]++;
      }
      // Suggest waiting for better entry
      const betterEntry =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[50]++, this.calculateBetterEntryPrice(proposal, marketConditions));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[51]++;
      if (betterEntry !== proposal.entryPrice) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[8][0]++;
        const newRisk =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[52]++, Math.abs(betterEntry - proposal.stopLossPrice) * proposal.positionSize);
        const newReward =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[53]++, Math.abs(proposal.takeProfitPrice - betterEntry) * proposal.positionSize);
        const newRR =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[54]++, newReward / newRisk);
        /* istanbul ignore next */
        cov_rxb1yu68n().s[55]++;
        recommendations.push({
          type: 'WAIT_FOR_BETTER_ENTRY',
          currentValue: proposal.entryPrice,
          recommendedValue: betterEntry,
          rrImprovement: newRR - analysis.riskRewardRatio,
          description: `Wait for better entry at ${betterEntry.toFixed(2)} to improve RR ratio`,
          priority: 'LOW'
        });
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[5][1]++;
    }
    // If RR is acceptable but could be better
    cov_rxb1yu68n().s[56]++;
    if (analysis.riskRewardRatio < this.config.preferredRiskRewardRatio) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[9][0]++;
      cov_rxb1yu68n().s[57]++;
      recommendations.push({
        type: 'REDUCE_POSITION_SIZE',
        currentValue: proposal.positionSize,
        recommendedValue: proposal.positionSize * 0.8,
        rrImprovement: 0,
        description: 'Consider reducing position size to maintain capital preservation',
        priority: 'LOW'
      });
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[9][1]++;
    }
    cov_rxb1yu68n().s[58]++;
    return recommendations.sort((a, b) => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[5]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[59]++, {
        HIGH: 3,
        MEDIUM: 2,
        LOW: 1
      });
      /* istanbul ignore next */
      cov_rxb1yu68n().s[60]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  }
  /**
   * Calculate optimal stop loss based on market conditions
   */
  calculateOptimalStopLoss(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[6]++;
    const {
      entryPrice,
      type
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[61]++, proposal);
    // Use ATR to determine optimal stop distance
    const atrBasedDistance =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[62]++, marketConditions.atr / entryPrice * 100);
    const minStopDistance =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[63]++, Math.max(0.5, atrBasedDistance * 1.5)); // 1.5x ATR minimum
    /* istanbul ignore next */
    cov_rxb1yu68n().s[64]++;
    if (type === 'LONG') {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[10][0]++;
      const optimalStop =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[65]++, entryPrice * (1 - minStopDistance / 100));
      // Consider support levels
      /* istanbul ignore next */
      cov_rxb1yu68n().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[12][0]++, marketConditions.supportLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[12][1]++, marketConditions.supportLevel < entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[11][0]++;
        cov_rxb1yu68n().s[67]++;
        return Math.max(optimalStop, marketConditions.supportLevel * 0.995);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[11][1]++;
      }
      cov_rxb1yu68n().s[68]++;
      return optimalStop;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[10][1]++;
      const optimalStop =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[69]++, entryPrice * (1 + minStopDistance / 100));
      // Consider resistance levels
      /* istanbul ignore next */
      cov_rxb1yu68n().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[14][0]++, marketConditions.resistanceLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[14][1]++, marketConditions.resistanceLevel > entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[13][0]++;
        cov_rxb1yu68n().s[71]++;
        return Math.min(optimalStop, marketConditions.resistanceLevel * 1.005);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[13][1]++;
      }
      cov_rxb1yu68n().s[72]++;
      return optimalStop;
    }
  }
  /**
   * Calculate optimal take profit based on market conditions
   */
  calculateOptimalTakeProfit(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[7]++;
    const {
      entryPrice,
      stopLossPrice,
      type
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[73]++, proposal);
    const riskDistance =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[74]++, Math.abs(entryPrice - stopLossPrice));
    const targetRR =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[75]++, this.config.preferredRiskRewardRatio);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[76]++;
    if (type === 'LONG') {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[15][0]++;
      const optimalTarget =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[77]++, entryPrice + riskDistance * targetRR);
      // Consider resistance levels as potential targets
      /* istanbul ignore next */
      cov_rxb1yu68n().s[78]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[17][0]++, marketConditions.resistanceLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[17][1]++, marketConditions.resistanceLevel > entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[16][0]++;
        cov_rxb1yu68n().s[79]++;
        return Math.min(optimalTarget, marketConditions.resistanceLevel * 0.995);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[16][1]++;
      }
      cov_rxb1yu68n().s[80]++;
      return optimalTarget;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[15][1]++;
      const optimalTarget =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[81]++, entryPrice - riskDistance * targetRR);
      // Consider support levels as potential targets
      /* istanbul ignore next */
      cov_rxb1yu68n().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[19][0]++, marketConditions.supportLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[19][1]++, marketConditions.supportLevel < entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[18][0]++;
        cov_rxb1yu68n().s[83]++;
        return Math.max(optimalTarget, marketConditions.supportLevel * 1.005);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[18][1]++;
      }
      cov_rxb1yu68n().s[84]++;
      return optimalTarget;
    }
  }
  /**
   * Calculate better entry price for improved RR
   */
  calculateBetterEntryPrice(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[8]++;
    const {
      entryPrice,
      stopLossPrice,
      takeProfitPrice,
      type
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[85]++, proposal);
    // Calculate what entry price would give us the preferred RR
    const currentReward =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[86]++, Math.abs(takeProfitPrice - entryPrice));
    const currentRisk =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[87]++, Math.abs(entryPrice - stopLossPrice));
    /* istanbul ignore next */
    cov_rxb1yu68n().s[88]++;
    if (type === 'LONG') {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[20][0]++;
      // For long positions, lower entry improves RR
      const targetRisk =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[89]++, currentReward / this.config.preferredRiskRewardRatio);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[90]++;
      return stopLossPrice + targetRisk;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[20][1]++;
      // For short positions, higher entry improves RR
      const targetRisk =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[91]++, currentReward / this.config.preferredRiskRewardRatio);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[92]++;
      return stopLossPrice - targetRisk;
    }
  }
  /**
   * Validate if trade should be approved
   */
  validateTradeApproval(analysis, proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[9]++;
    cov_rxb1yu68n().s[93]++;
    // Must meet minimum RR ratio
    if (!analysis.meetsMinimumRR) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[21][0]++;
      cov_rxb1yu68n().s[94]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[21][1]++;
    }
    // Must not exceed maximum risk percentage
    cov_rxb1yu68n().s[95]++;
    if (analysis.riskPercentage > this.config.maxRiskPercentage) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[22][0]++;
      cov_rxb1yu68n().s[96]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[22][1]++;
    }
    // Additional validation based on confidence
    cov_rxb1yu68n().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[24][0]++, proposal.confidence < 50) &&
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[24][1]++, analysis.riskRewardRatio < this.config.preferredRiskRewardRatio)) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[23][0]++;
      cov_rxb1yu68n().s[98]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[23][1]++;
    }
    cov_rxb1yu68n().s[99]++;
    return true;
  }
  /**
   * Generate rejection reasons
   */
  generateRejectionReasons(analysis, proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[10]++;
    const reasons =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[100]++, []);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[101]++;
    if (!analysis.meetsMinimumRR) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[25][0]++;
      cov_rxb1yu68n().s[102]++;
      reasons.push(`Risk-reward ratio ${analysis.riskRewardRatio.toFixed(2)} below minimum ${this.config.minRiskRewardRatio}`);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[25][1]++;
    }
    cov_rxb1yu68n().s[103]++;
    if (analysis.riskPercentage > this.config.maxRiskPercentage) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[26][0]++;
      cov_rxb1yu68n().s[104]++;
      reasons.push(`Risk percentage ${analysis.riskPercentage.toFixed(2)}% exceeds maximum ${this.config.maxRiskPercentage}%`);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[26][1]++;
    }
    cov_rxb1yu68n().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[28][0]++, proposal.confidence < 50) &&
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[28][1]++, analysis.riskRewardRatio < this.config.preferredRiskRewardRatio)) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[27][0]++;
      cov_rxb1yu68n().s[106]++;
      reasons.push(`Low confidence ${proposal.confidence}% with suboptimal RR ratio ${analysis.riskRewardRatio.toFixed(2)}`);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[27][1]++;
    }
    cov_rxb1yu68n().s[107]++;
    return reasons;
  }
  /**
   * Update performance metrics
   */
  updatePerformanceMetrics(analysis, proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[11]++;
    cov_rxb1yu68n().s[108]++;
    this.performanceMetrics.totalTradesAnalyzed++;
    /* istanbul ignore next */
    cov_rxb1yu68n().s[109]++;
    if (analysis.approved) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[29][0]++;
      // Update average RR
      const currentSum =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[110]++, this.performanceMetrics.averageRR * (this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount - 1));
      const executedTrades =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[111]++, this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[112]++;
      this.performanceMetrics.averageRR = (currentSum + analysis.riskRewardRatio) / executedTrades;
      // Update best/worst RR
      /* istanbul ignore next */
      cov_rxb1yu68n().s[113]++;
      this.performanceMetrics.bestRR = Math.max(this.performanceMetrics.bestRR, analysis.riskRewardRatio);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[114]++;
      this.performanceMetrics.worstRR = Math.min(this.performanceMetrics.worstRR, analysis.riskRewardRatio);
      // Update strategy-specific RR
      const strategyRR =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[115]++,
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[30][0]++, this.performanceMetrics.rrByStrategy.get(proposal.strategy)) ||
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[30][1]++, 0));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[116]++;
      this.performanceMetrics.rrByStrategy.set(proposal.strategy, (strategyRR + analysis.riskRewardRatio) / 2);
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[29][1]++;
      cov_rxb1yu68n().s[117]++;
      this.performanceMetrics.rejectedTradesCount++;
    }
    // Update compliance rate
    const approvedTrades =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[118]++, this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[119]++;
    this.performanceMetrics.rrComplianceRate = approvedTrades / this.performanceMetrics.totalTradesAnalyzed * 100;
  }
  /**
   * Get performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[12]++;
    cov_rxb1yu68n().s[120]++;
    return {
      ...this.performanceMetrics
    };
  }
  /**
   * Get trade history
   */
  getTradeHistory(limit) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[13]++;
    cov_rxb1yu68n().s[121]++;
    if (limit) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[31][0]++;
      cov_rxb1yu68n().s[122]++;
      return this.tradeHistory.slice(-limit);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[31][1]++;
    }
    cov_rxb1yu68n().s[123]++;
    return [...this.tradeHistory];
  }
  /**
   * Update configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[14]++;
    cov_rxb1yu68n().s[124]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
  }
  /**
   * Get current configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[15]++;
    cov_rxb1yu68n().s[125]++;
    return {
      ...this.config
    };
  }
  /**
   * Reset performance metrics
   */
  resetPerformanceMetrics() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[16]++;
    cov_rxb1yu68n().s[126]++;
    this.performanceMetrics = {
      averageRR: 0,
      rrComplianceRate: 0,
      rejectedTradesCount: 0,
      totalTradesAnalyzed: 0,
      bestRR: 0,
      worstRR: Infinity,
      rrByStrategy: new Map()
    };
    /* istanbul ignore next */
    cov_rxb1yu68n().s[127]++;
    this.tradeHistory = [];
  }
  /**
   * Generate RR performance report
   */
  generatePerformanceReport() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[17]++;
    const topStrategies =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[128]++, Array.from(this.performanceMetrics.rrByStrategy.entries()).map(([strategy, avgRR]) => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[18]++;
      cov_rxb1yu68n().s[129]++;
      return {
        strategy,
        avgRR
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[19]++;
      cov_rxb1yu68n().s[130]++;
      return b.avgRR - a.avgRR;
    }).slice(0, 5));
    // Calculate recent trends (last 10, 20, 50 trades)
    const recentTrends =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[131]++, [10, 20, 50].map(period => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[20]++;
      const recentTrades =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[132]++, this.tradeHistory.slice(-period));
      const approvedTrades =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[133]++, recentTrades.filter(t => {
        /* istanbul ignore next */
        cov_rxb1yu68n().f[21]++;
        cov_rxb1yu68n().s[134]++;
        return t.approved;
      }));
      const avgRR =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[135]++, approvedTrades.length > 0 ?
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[32][0]++, approvedTrades.reduce((sum, t) => {
        /* istanbul ignore next */
        cov_rxb1yu68n().f[22]++;
        cov_rxb1yu68n().s[136]++;
        return sum + t.riskRewardRatio;
      }, 0) / approvedTrades.length) :
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[32][1]++, 0));
      const approvalRate =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[137]++, recentTrades.length > 0 ?
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[33][0]++, approvedTrades.length / recentTrades.length * 100) :
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[33][1]++, 0));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[138]++;
      return {
        period: `Last ${period} trades`,
        avgRR,
        approvalRate
      };
    }));
    /* istanbul ignore next */
    cov_rxb1yu68n().s[139]++;
    return {
      summary: this.getPerformanceMetrics(),
      topStrategies,
      recentTrends
    };
  }
}
/* istanbul ignore next */
cov_rxb1yu68n().s[140]++;
exports.RiskRewardEnforcer = RiskRewardEnforcer;