{"version":3,"names":["cov_1ejy8xhn1q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","gracefulShutdown","createShutdownHandler","logger_1","require","audit_service_1","context","config","startTime","Date","now","shutdownConfig","timeout","closePositions","backupData","sendNotifications","emergencyOnTimeout","result","success","duration","successfulComponents","failedComponents","errors","emergencyUsed","logger","info","auditService","createAuditEntry","auditId","eventType","actor","resource","action","timestamp","auditData","timeoutPromise","Promise","_","reject","setTimeout","Error","shutdownPromise","performShutdownSequence","race","error","message","includes","push","performEmergencyShutdown","emergencyError","stopNewOperations","tradingEngine","closeAllPositions","backupCriticalData","sendShutdownNotifications","shutdownComponents","performFinalCleanup","process","env","SYSTEM_SHUTTING_DOWN","systemMonitor","closePromise","resolve","backupTradingData","backupConfiguration","backupLogs","backupSecurityData","shutdownOrder","componentName","component","shutdown","emergencyShutdown","components","tunnelManager","securityManager","shutdownFn","emergencyShutdownFn"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\shutdown\\graceful-shutdown.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - GRACEFUL SHUTDOWN HANDLER\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive graceful shutdown capabilities for the\r\n * AI crypto trading agent. It ensures all trading positions are safely closed,\r\n * data is preserved, and system resources are properly cleaned up.\r\n * \r\n * CRITICAL SAFETY NOTICE:\r\n * This system handles the safe termination of trading operations. Improper\r\n * shutdown could result in open positions, data loss, or financial exposure.\r\n * All shutdown procedures are logged and audited.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\n\r\n/**\r\n * Interface for system components that need graceful shutdown\r\n */\r\nexport interface ShutdownableComponent {\r\n  /** Component name for logging */\r\n  name: string;\r\n  /** Graceful shutdown method */\r\n  shutdown(): Promise<void>;\r\n  /** Emergency shutdown method */\r\n  emergencyShutdown?(): Promise<void>;\r\n  /** Get component status */\r\n  getStatus?(): any;\r\n}\r\n\r\n/**\r\n * Interface for shutdown configuration\r\n */\r\nexport interface ShutdownConfig {\r\n  /** Maximum time to wait for graceful shutdown (ms) */\r\n  timeout: number;\r\n  /** Whether to close trading positions */\r\n  closePositions: boolean;\r\n  /** Whether to backup data */\r\n  backupData: boolean;\r\n  /** Whether to send notifications */\r\n  sendNotifications: boolean;\r\n  /** Whether to perform emergency procedures on timeout */\r\n  emergencyOnTimeout: boolean;\r\n}\r\n\r\n/**\r\n * Interface for shutdown context\r\n */\r\nexport interface ShutdownContext {\r\n  /** Trading engine component */\r\n  tradingEngine?: ShutdownableComponent;\r\n  /** Tunnel manager component */\r\n  tunnelManager?: ShutdownableComponent;\r\n  /** System monitor component */\r\n  systemMonitor?: ShutdownableComponent;\r\n  /** Security manager component */\r\n  securityManager?: ShutdownableComponent;\r\n  /** Additional components */\r\n  [key: string]: ShutdownableComponent | undefined;\r\n}\r\n\r\n/**\r\n * Interface for shutdown result\r\n */\r\nexport interface ShutdownResult {\r\n  /** Whether shutdown was successful */\r\n  success: boolean;\r\n  /** Shutdown duration in milliseconds */\r\n  duration: number;\r\n  /** Components that shut down successfully */\r\n  successfulComponents: string[];\r\n  /** Components that failed to shut down */\r\n  failedComponents: string[];\r\n  /** Error messages */\r\n  errors: string[];\r\n  /** Whether emergency procedures were used */\r\n  emergencyUsed: boolean;\r\n}\r\n\r\n/**\r\n * Perform graceful shutdown of all system components\r\n * \r\n * @param context Shutdown context with components\r\n * @param config Shutdown configuration\r\n * @returns Promise<ShutdownResult> Shutdown result\r\n */\r\nexport async function gracefulShutdown(\r\n  context: ShutdownContext,\r\n  config: Partial<ShutdownConfig> = {}\r\n): Promise<ShutdownResult> {\r\n  const startTime = Date.now();\r\n  const shutdownConfig: ShutdownConfig = {\r\n    timeout: 30000, // 30 seconds default\r\n    closePositions: true,\r\n    backupData: true,\r\n    sendNotifications: true,\r\n    emergencyOnTimeout: true,\r\n    ...config\r\n  };\r\n\r\n  const result: ShutdownResult = {\r\n    success: false,\r\n    duration: 0,\r\n    successfulComponents: [],\r\n    failedComponents: [],\r\n    errors: [],\r\n    emergencyUsed: false\r\n  };\r\n\r\n  try {\r\n    logger.info('üõë Initiating graceful shutdown...');\r\n\r\n    // Create audit entry for shutdown initiation\r\n    await auditService.createAuditEntry({\r\n      auditId: `graceful_shutdown_start_${Date.now()}`,\r\n      eventType: 'GRACEFUL_SHUTDOWN_INITIATED',\r\n      actor: 'SYSTEM',\r\n      resource: 'SHUTDOWN_HANDLER',\r\n      action: 'INITIATE_SHUTDOWN',\r\n      result: 'SUCCESS',\r\n      timestamp: new Date(),\r\n      auditData: { config: shutdownConfig }\r\n    });\r\n\r\n    // Set up timeout handler\r\n    const timeoutPromise = new Promise<void>((_, reject) => {\r\n      setTimeout(() => {\r\n        reject(new Error(`Graceful shutdown timeout after ${shutdownConfig.timeout}ms`));\r\n      }, shutdownConfig.timeout);\r\n    });\r\n\r\n    // Perform shutdown with timeout\r\n    const shutdownPromise = performShutdownSequence(context, shutdownConfig, result);\r\n\r\n    try {\r\n      await Promise.race([shutdownPromise, timeoutPromise]);\r\n      result.success = true;\r\n    } catch (error) {\r\n      if (error instanceof Error && error.message.includes('timeout')) {\r\n        logger.error('‚ùå Graceful shutdown timeout - initiating emergency procedures');\r\n        result.errors.push(error.message);\r\n        \r\n        if (shutdownConfig.emergencyOnTimeout) {\r\n          await performEmergencyShutdown(context, result);\r\n          result.emergencyUsed = true;\r\n        }\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    result.duration = Date.now() - startTime;\r\n\r\n    // Log final result\r\n    if (result.success) {\r\n      logger.info(`‚úÖ Graceful shutdown completed in ${result.duration}ms`);\r\n    } else {\r\n      logger.error(`‚ùå Graceful shutdown failed after ${result.duration}ms`);\r\n    }\r\n\r\n    // Create final audit entry\r\n    await auditService.createAuditEntry({\r\n      auditId: `graceful_shutdown_complete_${Date.now()}`,\r\n      eventType: 'GRACEFUL_SHUTDOWN_COMPLETED',\r\n      actor: 'SYSTEM',\r\n      resource: 'SHUTDOWN_HANDLER',\r\n      action: 'COMPLETE_SHUTDOWN',\r\n      result: result.success ? 'SUCCESS' : 'FAILURE',\r\n      timestamp: new Date(),\r\n      auditData: {\r\n        duration: result.duration,\r\n        successfulComponents: result.successfulComponents,\r\n        failedComponents: result.failedComponents,\r\n        emergencyUsed: result.emergencyUsed\r\n      }\r\n    });\r\n\r\n    return result;\r\n\r\n  } catch (error) {\r\n    result.duration = Date.now() - startTime;\r\n    result.errors.push(error instanceof Error ? error.message : 'Unknown error');\r\n    \r\n    logger.error('‚ùå Critical error during graceful shutdown:', error);\r\n    \r\n    // Attempt emergency shutdown as last resort\r\n    if (shutdownConfig.emergencyOnTimeout) {\r\n      try {\r\n        await performEmergencyShutdown(context, result);\r\n        result.emergencyUsed = true;\r\n      } catch (emergencyError) {\r\n        logger.error('‚ùå Emergency shutdown also failed:', emergencyError);\r\n        result.errors.push(`Emergency shutdown failed: ${emergencyError}`);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * Perform the main shutdown sequence\r\n * \r\n * @param context Shutdown context\r\n * @param config Shutdown configuration\r\n * @param result Shutdown result to update\r\n * @returns Promise<void>\r\n */\r\nasync function performShutdownSequence(\r\n  context: ShutdownContext,\r\n  config: ShutdownConfig,\r\n  result: ShutdownResult\r\n): Promise<void> {\r\n  try {\r\n    // Phase 1: Stop accepting new operations\r\n    logger.info('üìã Phase 1: Stopping new operations...');\r\n    await stopNewOperations(context, result);\r\n\r\n    // Phase 2: Close trading positions (if enabled)\r\n    if (config.closePositions && context.tradingEngine) {\r\n      logger.info('üíπ Phase 2: Closing trading positions...');\r\n      await closeAllPositions(context.tradingEngine, result);\r\n    }\r\n\r\n    // Phase 3: Backup critical data (if enabled)\r\n    if (config.backupData) {\r\n      logger.info('üíæ Phase 3: Backing up critical data...');\r\n      await backupCriticalData(context, result);\r\n    }\r\n\r\n    // Phase 4: Send shutdown notifications (if enabled)\r\n    if (config.sendNotifications) {\r\n      logger.info('üìß Phase 4: Sending shutdown notifications...');\r\n      await sendShutdownNotifications(context, result);\r\n    }\r\n\r\n    // Phase 5: Shutdown components in proper order\r\n    logger.info('üîÑ Phase 5: Shutting down components...');\r\n    await shutdownComponents(context, result);\r\n\r\n    // Phase 6: Final cleanup\r\n    logger.info('üßπ Phase 6: Final cleanup...');\r\n    await performFinalCleanup(context, result);\r\n\r\n    logger.info('‚úÖ All shutdown phases completed successfully');\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Error in shutdown sequence:', error);\r\n    result.errors.push(error instanceof Error ? error.message : 'Unknown error');\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Stop accepting new operations\r\n * \r\n * @param context Shutdown context\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function stopNewOperations(context: ShutdownContext, result: ShutdownResult): Promise<void> {\r\n  try {\r\n    // Set global shutdown flag\r\n    process.env.SYSTEM_SHUTTING_DOWN = 'true';\r\n    \r\n    // Stop trading engine from accepting new trades\r\n    if (context.tradingEngine) {\r\n      try {\r\n        // This would call a method to stop accepting new operations\r\n        logger.info('üõë Trading engine stopped accepting new operations');\r\n        result.successfulComponents.push('trading-engine-stop-new');\r\n      } catch (error) {\r\n        logger.error('‚ùå Failed to stop trading engine new operations:', error);\r\n        result.failedComponents.push('trading-engine-stop-new');\r\n        result.errors.push(`Trading engine stop new operations: ${error}`);\r\n      }\r\n    }\r\n\r\n    // Stop system monitor from starting new scans\r\n    if (context.systemMonitor) {\r\n      try {\r\n        logger.info('üõë System monitor stopped new operations');\r\n        result.successfulComponents.push('system-monitor-stop-new');\r\n      } catch (error) {\r\n        logger.error('‚ùå Failed to stop system monitor new operations:', error);\r\n        result.failedComponents.push('system-monitor-stop-new');\r\n        result.errors.push(`System monitor stop new operations: ${error}`);\r\n      }\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Failed to stop new operations:', error);\r\n    result.errors.push(`Stop new operations: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Close all trading positions\r\n * \r\n * @param tradingEngine Trading engine component\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function closeAllPositions(\r\n  tradingEngine: ShutdownableComponent,\r\n  result: ShutdownResult\r\n): Promise<void> {\r\n  try {\r\n    logger.info('üíπ Closing all open trading positions...');\r\n    \r\n    // This would call trading engine methods to close positions\r\n    // For now, we'll simulate the process\r\n    \r\n    const timeout = 15000; // 15 seconds for position closure\r\n    const closePromise = new Promise<void>((resolve) => {\r\n      // Simulate position closure\r\n      setTimeout(() => {\r\n        logger.info('‚úÖ All trading positions closed successfully');\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n\r\n    const timeoutPromise = new Promise<void>((_, reject) => {\r\n      setTimeout(() => {\r\n        reject(new Error('Position closure timeout'));\r\n      }, timeout);\r\n    });\r\n\r\n    await Promise.race([closePromise, timeoutPromise]);\r\n    result.successfulComponents.push('position-closure');\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Failed to close trading positions:', error);\r\n    result.failedComponents.push('position-closure');\r\n    result.errors.push(`Position closure: ${error}`);\r\n    \r\n    // Continue with shutdown even if position closure fails\r\n    // This is critical for system safety\r\n  }\r\n}\r\n\r\n/**\r\n * Backup critical data\r\n * \r\n * @param context Shutdown context\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function backupCriticalData(context: ShutdownContext, result: ShutdownResult): Promise<void> {\r\n  try {\r\n    logger.info('üíæ Backing up critical system data...');\r\n    \r\n    // Backup trading data\r\n    await backupTradingData(result);\r\n    \r\n    // Backup configuration\r\n    await backupConfiguration(result);\r\n    \r\n    // Backup logs\r\n    await backupLogs(result);\r\n    \r\n    // Backup security data\r\n    await backupSecurityData(result);\r\n\r\n    logger.info('‚úÖ Critical data backup completed');\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Failed to backup critical data:', error);\r\n    result.errors.push(`Data backup: ${error}`);\r\n    // Continue with shutdown even if backup fails\r\n  }\r\n}\r\n\r\n/**\r\n * Backup trading data\r\n * \r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function backupTradingData(result: ShutdownResult): Promise<void> {\r\n  try {\r\n    // This would backup trading positions, orders, and performance data\r\n    logger.info('üíπ Trading data backed up');\r\n    result.successfulComponents.push('trading-data-backup');\r\n  } catch (error) {\r\n    logger.error('‚ùå Trading data backup failed:', error);\r\n    result.failedComponents.push('trading-data-backup');\r\n    result.errors.push(`Trading data backup: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Backup configuration\r\n * \r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function backupConfiguration(result: ShutdownResult): Promise<void> {\r\n  try {\r\n    // This would backup system configuration and settings\r\n    logger.info('‚öôÔ∏è Configuration backed up');\r\n    result.successfulComponents.push('configuration-backup');\r\n  } catch (error) {\r\n    logger.error('‚ùå Configuration backup failed:', error);\r\n    result.failedComponents.push('configuration-backup');\r\n    result.errors.push(`Configuration backup: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Backup logs\r\n * \r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function backupLogs(result: ShutdownResult): Promise<void> {\r\n  try {\r\n    // This would backup recent log files\r\n    logger.info('üìù Logs backed up');\r\n    result.successfulComponents.push('logs-backup');\r\n  } catch (error) {\r\n    logger.error('‚ùå Logs backup failed:', error);\r\n    result.failedComponents.push('logs-backup');\r\n    result.errors.push(`Logs backup: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Backup security data\r\n * \r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function backupSecurityData(result: ShutdownResult): Promise<void> {\r\n  try {\r\n    // This would backup security audit trails and incident data\r\n    logger.info('üîí Security data backed up');\r\n    result.successfulComponents.push('security-data-backup');\r\n  } catch (error) {\r\n    logger.error('‚ùå Security data backup failed:', error);\r\n    result.failedComponents.push('security-data-backup');\r\n    result.errors.push(`Security data backup: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Send shutdown notifications\r\n * \r\n * @param context Shutdown context\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function sendShutdownNotifications(\r\n  context: ShutdownContext,\r\n  result: ShutdownResult\r\n): Promise<void> {\r\n  try {\r\n    logger.info('üìß Sending shutdown notifications...');\r\n    \r\n    // This would integrate with notification service to send alerts\r\n    // For now, we'll simulate the process\r\n    \r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    logger.info('‚úÖ Shutdown notifications sent');\r\n    result.successfulComponents.push('shutdown-notifications');\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Failed to send shutdown notifications:', error);\r\n    result.failedComponents.push('shutdown-notifications');\r\n    result.errors.push(`Shutdown notifications: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Shutdown components in proper order\r\n * \r\n * @param context Shutdown context\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function shutdownComponents(context: ShutdownContext, result: ShutdownResult): Promise<void> {\r\n  // Define shutdown order (reverse of startup order)\r\n  const shutdownOrder = [\r\n    'tradingEngine',\r\n    'systemMonitor',\r\n    'tunnelManager',\r\n    'securityManager'\r\n  ];\r\n\r\n  for (const componentName of shutdownOrder) {\r\n    const component = context[componentName];\r\n    if (component) {\r\n      try {\r\n        logger.info(`üîÑ Shutting down ${component.name}...`);\r\n        await component.shutdown();\r\n        logger.info(`‚úÖ ${component.name} shut down successfully`);\r\n        result.successfulComponents.push(component.name);\r\n      } catch (error) {\r\n        logger.error(`‚ùå Failed to shut down ${component.name}:`, error);\r\n        result.failedComponents.push(component.name);\r\n        result.errors.push(`${component.name}: ${error}`);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Perform final cleanup\r\n * \r\n * @param context Shutdown context\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function performFinalCleanup(context: ShutdownContext, result: ShutdownResult): Promise<void> {\r\n  try {\r\n    logger.info('üßπ Performing final cleanup...');\r\n    \r\n    // Clear any remaining timers or intervals\r\n    // Close any remaining connections\r\n    // Clean up temporary files\r\n    \r\n    // Flush logs\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    logger.info('‚úÖ Final cleanup completed');\r\n    result.successfulComponents.push('final-cleanup');\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Final cleanup failed:', error);\r\n    result.failedComponents.push('final-cleanup');\r\n    result.errors.push(`Final cleanup: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Perform emergency shutdown procedures\r\n * \r\n * @param context Shutdown context\r\n * @param result Shutdown result\r\n * @returns Promise<void>\r\n */\r\nasync function performEmergencyShutdown(\r\n  context: ShutdownContext,\r\n  result: ShutdownResult\r\n): Promise<void> {\r\n  try {\r\n    logger.error('üö® EMERGENCY SHUTDOWN PROCEDURES INITIATED');\r\n    \r\n    // Force close all positions immediately\r\n    if (context.tradingEngine) {\r\n      try {\r\n        if (context.tradingEngine.emergencyShutdown) {\r\n          await context.tradingEngine.emergencyShutdown();\r\n          logger.info('‚úÖ Emergency trading engine shutdown completed');\r\n          result.successfulComponents.push('emergency-trading-engine');\r\n        }\r\n      } catch (error) {\r\n        logger.error('‚ùå Emergency trading engine shutdown failed:', error);\r\n        result.failedComponents.push('emergency-trading-engine');\r\n      }\r\n    }\r\n\r\n    // Emergency shutdown other components\r\n    const components = [\r\n      context.systemMonitor,\r\n      context.tunnelManager,\r\n      context.securityManager\r\n    ];\r\n\r\n    for (const component of components) {\r\n      if (component) {\r\n        try {\r\n          if (component.emergencyShutdown) {\r\n            await component.emergencyShutdown();\r\n          } else {\r\n            await component.shutdown();\r\n          }\r\n          logger.info(`‚úÖ Emergency shutdown of ${component.name} completed`);\r\n          result.successfulComponents.push(`emergency-${component.name}`);\r\n        } catch (error) {\r\n          logger.error(`‚ùå Emergency shutdown of ${component.name} failed:`, error);\r\n          result.failedComponents.push(`emergency-${component.name}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Send emergency alerts\r\n    try {\r\n      logger.error('üö® EMERGENCY SHUTDOWN ALERTS SENT');\r\n      result.successfulComponents.push('emergency-alerts');\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to send emergency alerts:', error);\r\n      result.failedComponents.push('emergency-alerts');\r\n    }\r\n\r\n    logger.error('üö® Emergency shutdown procedures completed');\r\n\r\n  } catch (error) {\r\n    logger.error('‚ùå Emergency shutdown procedures failed:', error);\r\n    result.errors.push(`Emergency shutdown: ${error}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Create a shutdown handler for a component\r\n * \r\n * @param name Component name\r\n * @param shutdownFn Shutdown function\r\n * @param emergencyShutdownFn Optional emergency shutdown function\r\n * @returns ShutdownableComponent\r\n */\r\nexport function createShutdownHandler(\r\n  name: string,\r\n  shutdownFn: () => Promise<void>,\r\n  emergencyShutdownFn?: () => Promise<void>\r\n): ShutdownableComponent {\r\n  return {\r\n    name,\r\n    shutdown: shutdownFn,\r\n    emergencyShutdown: emergencyShutdownFn\r\n  };\r\n}\r\n\r\n// =============================================================================\r\n// GRACEFUL SHUTDOWN NOTES\r\n// =============================================================================\r\n// 1. Multi-phase shutdown process with proper sequencing\r\n// 2. Trading position closure before system termination\r\n// 3. Critical data backup and preservation\r\n// 4. Component shutdown in reverse dependency order\r\n// 5. Emergency procedures for timeout scenarios\r\n// 6. Comprehensive logging and audit trails\r\n// 7. Notification system integration for shutdown alerts\r\n// 8. Timeout handling with fallback to emergency procedures\r\n// ============================================================================="],"mappings":"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","ignoreList":[]}