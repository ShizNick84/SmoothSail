e2a667645e28ad98e4da5dabbdc36b83
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - MONITORING AND MAINTENANCE AUTOMATION
 * =============================================================================
 *
 * This module provides comprehensive monitoring and automated maintenance
 * for the AI crypto trading agent production deployment.
 */
/* istanbul ignore next */
function cov_6eh6untbt() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\monitoring-automation.ts";
  var hash = "3483d0a41e20656f4b085c6f77b0b52d254d44b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\monitoring-automation.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 33
        }
      },
      "2": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 68
        }
      },
      "6": {
        start: {
          line: 14,
          column: 51
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "9": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 17
        }
      },
      "11": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "12": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "13": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 21
        }
      },
      "14": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 42,
          column: 4
        }
      },
      "15": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "17": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "18": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "19": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "20": {
        start: {
          line: 30,
          column: 77
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "21": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "22": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 26
        }
      },
      "23": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 41,
          column: 6
        }
      },
      "24": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "25": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "26": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "27": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "28": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "29": {
        start: {
          line: 38,
          column: 38
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "30": {
        start: {
          line: 38,
          column: 56
        },
        end: {
          line: 38,
          column: 57
        }
      },
      "31": {
        start: {
          line: 38,
          column: 78
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "32": {
        start: {
          line: 38,
          column: 102
        },
        end: {
          line: 38,
          column: 137
        }
      },
      "33": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "34": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "35": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 62
        }
      },
      "36": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 69
        }
      },
      "37": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "38": {
        start: {
          line: 46,
          column: 13
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "39": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "40": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "41": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "42": {
        start: {
          line: 50,
          column: 13
        },
        end: {
          line: 50,
          column: 47
        }
      },
      "43": {
        start: {
          line: 52,
          column: 14
        },
        end: {
          line: 52,
          column: 16
        }
      },
      "44": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 25
        }
      },
      "45": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 21
        }
      },
      "46": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 41
        }
      },
      "47": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "48": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "49": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 77
        }
      },
      "50": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 19
        }
      },
      "51": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 85
        }
      },
      "52": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 37
        }
      },
      "53": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 40
        }
      },
      "54": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "55": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 30
        }
      },
      "56": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 80
        }
      },
      "57": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "58": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "59": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 85
        }
      },
      "60": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 53
        }
      },
      "61": {
        start: {
          line: 87,
          column: 40
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "62": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 31
        }
      },
      "63": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 80
        }
      },
      "64": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "65": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "66": {
        start: {
          line: 133,
          column: 38
        },
        end: {
          line: 133,
          column: 84
        }
      },
      "67": {
        start: {
          line: 134,
          column: 39
        },
        end: {
          line: 134,
          column: 110
        }
      },
      "68": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 76
        }
      },
      "69": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 48
        }
      },
      "70": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 54
        }
      },
      "71": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 53
        }
      },
      "72": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 53
        }
      },
      "73": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 54
        }
      },
      "74": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 51
        }
      },
      "75": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "76": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "77": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 201,
          column: 59
        }
      },
      "78": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 43
        }
      },
      "79": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "80": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 61
        }
      },
      "81": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 48
        }
      },
      "82": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 74
        }
      },
      "83": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "84": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "85": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 231,
          column: 19
        }
      },
      "86": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 86
        }
      },
      "87": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 230,
          column: 21
        }
      },
      "88": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 224,
          column: 44
        }
      },
      "89": {
        start: {
          line: 225,
          column: 24
        },
        end: {
          line: 225,
          column: 50
        }
      },
      "90": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 91
        }
      },
      "91": {
        start: {
          line: 229,
          column: 24
        },
        end: {
          line: 229,
          column: 96
        }
      },
      "92": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "93": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "94": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 48
        }
      },
      "95": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 69
        }
      },
      "96": {
        start: {
          line: 253,
          column: 26
        },
        end: {
          line: 253,
          column: 36
        }
      },
      "97": {
        start: {
          line: 255,
          column: 30
        },
        end: {
          line: 255,
          column: 63
        }
      },
      "98": {
        start: {
          line: 257,
          column: 35
        },
        end: {
          line: 257,
          column: 73
        }
      },
      "99": {
        start: {
          line: 259,
          column: 31
        },
        end: {
          line: 259,
          column: 65
        }
      },
      "100": {
        start: {
          line: 261,
          column: 32
        },
        end: {
          line: 261,
          column: 67
        }
      },
      "101": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 268,
          column: 10
        }
      },
      "102": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "103": {
        start: {
          line: 276,
          column: 29
        },
        end: {
          line: 276,
          column: 163
        }
      },
      "104": {
        start: {
          line: 277,
          column: 32
        },
        end: {
          line: 277,
          column: 181
        }
      },
      "105": {
        start: {
          line: 279,
          column: 30
        },
        end: {
          line: 279,
          column: 31
        }
      },
      "106": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "107": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 185
        }
      },
      "108": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 119
        }
      },
      "109": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 288,
          column: 49
        }
      },
      "110": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 289,
          column: 48
        }
      },
      "111": {
        start: {
          line: 290,
          column: 33
        },
        end: {
          line: 290,
          column: 53
        }
      },
      "112": {
        start: {
          line: 292,
          column: 29
        },
        end: {
          line: 292,
          column: 116
        }
      },
      "113": {
        start: {
          line: 293,
          column: 30
        },
        end: {
          line: 293,
          column: 51
        }
      },
      "114": {
        start: {
          line: 294,
          column: 29
        },
        end: {
          line: 294,
          column: 50
        }
      },
      "115": {
        start: {
          line: 295,
          column: 34
        },
        end: {
          line: 295,
          column: 55
        }
      },
      "116": {
        start: {
          line: 297,
          column: 33
        },
        end: {
          line: 297,
          column: 89
        }
      },
      "117": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "118": {
        start: {
          line: 299,
          column: 33
        },
        end: {
          line: 299,
          column: 177
        }
      },
      "119": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 308,
          column: 17
        }
      },
      "120": {
        start: {
          line: 301,
          column: 34
        },
        end: {
          line: 301,
          column: 55
        }
      },
      "121": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 307,
          column: 22
        }
      },
      "122": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 332,
          column: 14
        }
      },
      "123": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 77
        }
      },
      "124": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 24
        }
      },
      "125": {
        start: {
          line: 343,
          column: 26
        },
        end: {
          line: 343,
          column: 28
        }
      },
      "126": {
        start: {
          line: 344,
          column: 24
        },
        end: {
          line: 344,
          column: 29
        }
      },
      "127": {
        start: {
          line: 345,
          column: 30
        },
        end: {
          line: 345,
          column: 35
        }
      },
      "128": {
        start: {
          line: 346,
          column: 27
        },
        end: {
          line: 346,
          column: 32
        }
      },
      "129": {
        start: {
          line: 347,
          column: 27
        },
        end: {
          line: 347,
          column: 28
        }
      },
      "130": {
        start: {
          line: 348,
          column: 24
        },
        end: {
          line: 348,
          column: 25
        }
      },
      "131": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "132": {
        start: {
          line: 351,
          column: 28
        },
        end: {
          line: 351,
          column: 93
        }
      },
      "133": {
        start: {
          line: 352,
          column: 32
        },
        end: {
          line: 352,
          column: 51
        }
      },
      "134": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 363,
          column: 13
        }
      },
      "135": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 362,
          column: 19
        }
      },
      "136": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 373,
          column: 13
        }
      },
      "137": {
        start: {
          line: 366,
          column: 34
        },
        end: {
          line: 366,
          column: 44
        }
      },
      "138": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 112
        }
      },
      "139": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 54
        }
      },
      "140": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 33
        }
      },
      "141": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 372,
          column: 34
        }
      },
      "142": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "143": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 98
        }
      },
      "144": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 39
        }
      },
      "145": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 40
        }
      },
      "146": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 99
        }
      },
      "147": {
        start: {
          line: 383,
          column: 47
        },
        end: {
          line: 383,
          column: 97
        }
      },
      "148": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 82
        }
      },
      "149": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 395,
          column: 10
        }
      },
      "150": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 409,
          column: 10
        }
      },
      "151": {
        start: {
          line: 415,
          column: 27
        },
        end: {
          line: 415,
          column: 28
        }
      },
      "152": {
        start: {
          line: 416,
          column: 35
        },
        end: {
          line: 416,
          column: 36
        }
      },
      "153": {
        start: {
          line: 417,
          column: 29
        },
        end: {
          line: 417,
          column: 30
        }
      },
      "154": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "155": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 423,
          column: 13
        }
      },
      "156": {
        start: {
          line: 421,
          column: 32
        },
        end: {
          line: 421,
          column: 136
        }
      },
      "157": {
        start: {
          line: 422,
          column: 16
        },
        end: {
          line: 422,
          column: 61
        }
      },
      "158": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "159": {
        start: {
          line: 426,
          column: 31
        },
        end: {
          line: 426,
          column: 128
        }
      },
      "160": {
        start: {
          line: 427,
          column: 16
        },
        end: {
          line: 427,
          column: 62
        }
      },
      "161": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 79
        }
      },
      "162": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 440,
          column: 10
        }
      },
      "163": {
        start: {
          line: 446,
          column: 23
        },
        end: {
          line: 446,
          column: 25
        }
      },
      "164": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "165": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 90
        }
      },
      "166": {
        start: {
          line: 451,
          column: 13
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "167": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 89
        }
      },
      "168": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "169": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 101
        }
      },
      "170": {
        start: {
          line: 458,
          column: 13
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "171": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 100
        }
      },
      "172": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "173": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 97
        }
      },
      "174": {
        start: {
          line: 465,
          column: 13
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "175": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 96
        }
      },
      "176": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "177": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 92
        }
      },
      "178": {
        start: {
          line: 472,
          column: 13
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "179": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 91
        }
      },
      "180": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "181": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 67
        }
      },
      "182": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "183": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 59
        }
      },
      "184": {
        start: {
          line: 483,
          column: 32
        },
        end: {
          line: 483,
          column: 96
        }
      },
      "185": {
        start: {
          line: 483,
          column: 74
        },
        end: {
          line: 483,
          column: 95
        }
      },
      "186": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "187": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 88
        }
      },
      "188": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "189": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 42
        }
      },
      "190": {
        start: {
          line: 496,
          column: 29
        },
        end: {
          line: 496,
          column: 87
        }
      },
      "191": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 55
        }
      },
      "192": {
        start: {
          line: 501,
          column: 26
        },
        end: {
          line: 501,
          column: 75
        }
      },
      "193": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 504,
          column: 9
        }
      },
      "194": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 64
        }
      },
      "195": {
        start: {
          line: 505,
          column: 26
        },
        end: {
          line: 505,
          column: 109
        }
      },
      "196": {
        start: {
          line: 506,
          column: 27
        },
        end: {
          line: 506,
          column: 75
        }
      },
      "197": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 512,
          column: 9
        }
      },
      "198": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 74
        }
      },
      "199": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 511,
          column: 75
        }
      },
      "200": {
        start: {
          line: 518,
          column: 29
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "201": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 565,
          column: 9
        }
      },
      "202": {
        start: {
          line: 525,
          column: 28
        },
        end: {
          line: 525,
          column: 55
        }
      },
      "203": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 533,
          column: 14
        }
      },
      "204": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 542,
          column: 14
        }
      },
      "205": {
        start: {
          line: 544,
          column: 30
        },
        end: {
          line: 544,
          column: 86
        }
      },
      "206": {
        start: {
          line: 545,
          column: 12
        },
        end: {
          line: 548,
          column: 14
        }
      },
      "207": {
        start: {
          line: 550,
          column: 29
        },
        end: {
          line: 550,
          column: 90
        }
      },
      "208": {
        start: {
          line: 550,
          column: 77
        },
        end: {
          line: 550,
          column: 89
        }
      },
      "209": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 556,
          column: 13
        }
      },
      "210": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 552,
          column: 50
        }
      },
      "211": {
        start: {
          line: 554,
          column: 17
        },
        end: {
          line: 556,
          column: 13
        }
      },
      "212": {
        start: {
          line: 555,
          column: 16
        },
        end: {
          line: 555,
          column: 49
        }
      },
      "213": {
        start: {
          line: 558,
          column: 31
        },
        end: {
          line: 558,
          column: 92
        }
      },
      "214": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 559,
          column: 87
        }
      },
      "215": {
        start: {
          line: 562,
          column: 12
        },
        end: {
          line: 562,
          column: 65
        }
      },
      "216": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 43
        }
      },
      "217": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 87
        }
      },
      "218": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 571,
          column: 57
        }
      },
      "219": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 584,
          column: 9
        }
      },
      "220": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 574,
          column: 117
        }
      },
      "221": {
        start: {
          line: 578,
          column: 28
        },
        end: {
          line: 578,
          column: 67
        }
      },
      "222": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 583,
          column: 13
        }
      },
      "223": {
        start: {
          line: 580,
          column: 34
        },
        end: {
          line: 580,
          column: 72
        }
      },
      "224": {
        start: {
          line: 581,
          column: 16
        },
        end: {
          line: 581,
          column: 109
        }
      },
      "225": {
        start: {
          line: 582,
          column: 16
        },
        end: {
          line: 582,
          column: 97
        }
      },
      "226": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 57
        }
      },
      "227": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 588,
          column: 64
        }
      },
      "228": {
        start: {
          line: 589,
          column: 8
        },
        end: {
          line: 600,
          column: 9
        }
      },
      "229": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 591,
          column: 87
        }
      },
      "230": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 592,
          column: 83
        }
      },
      "231": {
        start: {
          line: 594,
          column: 12
        },
        end: {
          line: 594,
          column: 105
        }
      },
      "232": {
        start: {
          line: 596,
          column: 12
        },
        end: {
          line: 596,
          column: 98
        }
      },
      "233": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 66
        }
      },
      "234": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 601,
          column: 59
        }
      },
      "235": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 604,
          column: 63
        }
      },
      "236": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 613,
          column: 9
        }
      },
      "237": {
        start: {
          line: 607,
          column: 12
        },
        end: {
          line: 607,
          column: 97
        }
      },
      "238": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 609,
          column: 110
        }
      },
      "239": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 74
        }
      },
      "240": {
        start: {
          line: 614,
          column: 8
        },
        end: {
          line: 614,
          column: 58
        }
      },
      "241": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 617,
          column: 67
        }
      },
      "242": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 627,
          column: 9
        }
      },
      "243": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 120
        }
      },
      "244": {
        start: {
          line: 622,
          column: 12
        },
        end: {
          line: 622,
          column: 63
        }
      },
      "245": {
        start: {
          line: 623,
          column: 12
        },
        end: {
          line: 623,
          column: 64
        }
      },
      "246": {
        start: {
          line: 626,
          column: 12
        },
        end: {
          line: 626,
          column: 76
        }
      },
      "247": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 628,
          column: 69
        }
      },
      "248": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 63
        }
      },
      "249": {
        start: {
          line: 632,
          column: 23
        },
        end: {
          line: 644,
          column: 9
        }
      },
      "250": {
        start: {
          line: 637,
          column: 62
        },
        end: {
          line: 641,
          column: 17
        }
      },
      "251": {
        start: {
          line: 645,
          column: 27
        },
        end: {
          line: 645,
          column: 130
        }
      },
      "252": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 646,
          column: 77
        }
      },
      "253": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 647,
          column: 73
        }
      },
      "254": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 650,
          column: 63
        }
      },
      "255": {
        start: {
          line: 651,
          column: 27
        },
        end: {
          line: 651,
          column: 69
        }
      },
      "256": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 655,
          column: 9
        }
      },
      "257": {
        start: {
          line: 654,
          column: 12
        },
        end: {
          line: 654,
          column: 110
        }
      },
      "258": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 656,
          column: 59
        }
      },
      "259": {
        start: {
          line: 659,
          column: 32
        },
        end: {
          line: 659,
          column: 34
        }
      },
      "260": {
        start: {
          line: 660,
          column: 8
        },
        end: {
          line: 674,
          column: 9
        }
      },
      "261": {
        start: {
          line: 661,
          column: 34
        },
        end: {
          line: 661,
          column: 71
        }
      },
      "262": {
        start: {
          line: 662,
          column: 12
        },
        end: {
          line: 664,
          column: 13
        }
      },
      "263": {
        start: {
          line: 663,
          column: 16
        },
        end: {
          line: 663,
          column: 84
        }
      },
      "264": {
        start: {
          line: 665,
          column: 12
        },
        end: {
          line: 667,
          column: 13
        }
      },
      "265": {
        start: {
          line: 666,
          column: 16
        },
        end: {
          line: 666,
          column: 90
        }
      },
      "266": {
        start: {
          line: 668,
          column: 12
        },
        end: {
          line: 670,
          column: 13
        }
      },
      "267": {
        start: {
          line: 669,
          column: 16
        },
        end: {
          line: 669,
          column: 80
        }
      },
      "268": {
        start: {
          line: 671,
          column: 12
        },
        end: {
          line: 673,
          column: 13
        }
      },
      "269": {
        start: {
          line: 672,
          column: 16
        },
        end: {
          line: 672,
          column: 71
        }
      },
      "270": {
        start: {
          line: 675,
          column: 8
        },
        end: {
          line: 675,
          column: 31
        }
      },
      "271": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 681,
          column: 28
        }
      },
      "272": {
        start: {
          line: 687,
          column: 8
        },
        end: {
          line: 687,
          column: 37
        }
      },
      "273": {
        start: {
          line: 690,
          column: 0
        },
        end: {
          line: 690,
          column: 52
        }
      },
      "274": {
        start: {
          line: 692,
          column: 0
        },
        end: {
          line: 692,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 10,
            column: 75
          }
        },
        loc: {
          start: {
            line: 10,
            column: 96
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 38
          },
          end: {
            line: 14,
            column: 39
          }
        },
        loc: {
          start: {
            line: 14,
            column: 49
          },
          end: {
            line: 14,
            column: 65
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 17,
            column: 7
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 80
          },
          end: {
            line: 21,
            column: 81
          }
        },
        loc: {
          start: {
            line: 21,
            column: 95
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 5
          },
          end: {
            line: 23,
            column: 6
          }
        },
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 52
          }
        },
        loc: {
          start: {
            line: 26,
            column: 63
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 49
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 28
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 12
          }
        },
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 18
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 56
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 18
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 63
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 81
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 87,
            column: 32
          },
          end: {
            line: 87,
            column: 33
          }
        },
        loc: {
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 51
          }
        },
        line: 87
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 94
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 33
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 125
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 132,
            column: 25
          }
        },
        loc: {
          start: {
            line: 132,
            column: 36
          },
          end: {
            line: 136,
            column: 17
          }
        },
        line: 132
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 143,
            column: 25
          }
        },
        loc: {
          start: {
            line: 143,
            column: 36
          },
          end: {
            line: 145,
            column: 17
          }
        },
        line: 143
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 25
          }
        },
        loc: {
          start: {
            line: 152,
            column: 36
          },
          end: {
            line: 154,
            column: 17
          }
        },
        line: 152
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 161,
            column: 25
          }
        },
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 163,
            column: 17
          }
        },
        line: 161
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 170,
            column: 25
          }
        },
        loc: {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 172,
            column: 17
          }
        },
        line: 170
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 179,
            column: 25
          }
        },
        loc: {
          start: {
            line: 179,
            column: 36
          },
          end: {
            line: 181,
            column: 17
          }
        },
        line: 179
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 25
          }
        },
        loc: {
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 190,
            column: 17
          }
        },
        line: 188
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 28
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 197
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 199,
            column: 35
          },
          end: {
            line: 199,
            column: 36
          }
        },
        loc: {
          start: {
            line: 199,
            column: 47
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 199
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 31
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 218
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 221,
            column: 45
          },
          end: {
            line: 221,
            column: 46
          }
        },
        loc: {
          start: {
            line: 221,
            column: 57
          },
          end: {
            line: 231,
            column: 17
          }
        },
        line: 221
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 24
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 238
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 240,
            column: 37
          },
          end: {
            line: 240,
            column: 38
          }
        },
        loc: {
          start: {
            line: 240,
            column: 49
          },
          end: {
            line: 247,
            column: 9
          }
        },
        line: 240
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 27
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 252
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 33
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 273
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 38
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 342
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 383,
            column: 42
          },
          end: {
            line: 383,
            column: 43
          }
        },
        loc: {
          start: {
            line: 383,
            column: 47
          },
          end: {
            line: 383,
            column: 97
          }
        },
        line: 383
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 34
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 400
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        loc: {
          start: {
            line: 414,
            column: 35
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 414
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 31
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 445
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 483,
            column: 69
          },
          end: {
            line: 483,
            column: 70
          }
        },
        loc: {
          start: {
            line: 483,
            column: 74
          },
          end: {
            line: 483,
            column: 95
          }
        },
        line: 483
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 495,
            column: 4
          },
          end: {
            line: 495,
            column: 5
          }
        },
        loc: {
          start: {
            line: 495,
            column: 29
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 495
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 517,
            column: 4
          },
          end: {
            line: 517,
            column: 5
          }
        },
        loc: {
          start: {
            line: 517,
            column: 31
          },
          end: {
            line: 566,
            column: 5
          }
        },
        line: 517
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 550,
            column: 68
          },
          end: {
            line: 550,
            column: 69
          }
        },
        loc: {
          start: {
            line: 550,
            column: 77
          },
          end: {
            line: 550,
            column: 89
          }
        },
        line: 550
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 570,
            column: 4
          },
          end: {
            line: 570,
            column: 5
          }
        },
        loc: {
          start: {
            line: 570,
            column: 27
          },
          end: {
            line: 586,
            column: 5
          }
        },
        line: 570
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 587,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        },
        loc: {
          start: {
            line: 587,
            column: 33
          },
          end: {
            line: 602,
            column: 5
          }
        },
        line: 587
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 603,
            column: 4
          },
          end: {
            line: 603,
            column: 5
          }
        },
        loc: {
          start: {
            line: 603,
            column: 32
          },
          end: {
            line: 615,
            column: 5
          }
        },
        line: 603
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 616,
            column: 4
          },
          end: {
            line: 616,
            column: 5
          }
        },
        loc: {
          start: {
            line: 616,
            column: 32
          },
          end: {
            line: 629,
            column: 5
          }
        },
        line: 616
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 5
          }
        },
        loc: {
          start: {
            line: 630,
            column: 33
          },
          end: {
            line: 648,
            column: 5
          }
        },
        line: 630
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 637,
            column: 53
          },
          end: {
            line: 637,
            column: 54
          }
        },
        loc: {
          start: {
            line: 637,
            column: 62
          },
          end: {
            line: 641,
            column: 17
          }
        },
        line: 637
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 649,
            column: 4
          },
          end: {
            line: 649,
            column: 5
          }
        },
        loc: {
          start: {
            line: 649,
            column: 30
          },
          end: {
            line: 657,
            column: 5
          }
        },
        line: 649
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 658,
            column: 4
          },
          end: {
            line: 658,
            column: 5
          }
        },
        loc: {
          start: {
            line: 658,
            column: 30
          },
          end: {
            line: 676,
            column: 5
          }
        },
        line: 658
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 680,
            column: 4
          },
          end: {
            line: 680,
            column: 5
          }
        },
        loc: {
          start: {
            line: 680,
            column: 17
          },
          end: {
            line: 682,
            column: 5
          }
        },
        line: 680
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 686,
            column: 4
          },
          end: {
            line: 686,
            column: 5
          }
        },
        loc: {
          start: {
            line: 686,
            column: 27
          },
          end: {
            line: 688,
            column: 5
          }
        },
        line: 686
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 20,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 27
          }
        }, {
          start: {
            line: 10,
            column: 31
          },
          end: {
            line: 10,
            column: 51
          }
        }, {
          start: {
            line: 10,
            column: 57
          },
          end: {
            line: 20,
            column: 2
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 57
          },
          end: {
            line: 20,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 17,
            column: 1
          }
        }, {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 20,
            column: 1
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 13
          }
        }, {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 84
          }
        }],
        line: 13
      },
      "5": {
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 47
          }
        }, {
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 13,
            column: 84
          }
        }],
        line: 13
      },
      "6": {
        loc: {
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 13,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 13,
            column: 63
          }
        }, {
          start: {
            line: 13,
            column: 67
          },
          end: {
            line: 13,
            column: 84
          }
        }],
        line: 13
      },
      "7": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "8": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 25,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 30
          }
        }, {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 21,
            column: 57
          }
        }, {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 21
      },
      "9": {
        loc: {
          start: {
            line: 21,
            column: 63
          },
          end: {
            line: 25,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 80
          },
          end: {
            line: 23,
            column: 1
          }
        }, {
          start: {
            line: 23,
            column: 5
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 21
      },
      "10": {
        loc: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 42,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 24
          }
        }, {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 50
          },
          end: {
            line: 42,
            column: 4
          }
        }],
        line: 26
      },
      "11": {
        loc: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 44
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 32,
            column: 9
          }
        }],
        line: 28
      },
      "12": {
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "13": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "14": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "15": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "16": {
        loc: {
          start: {
            line: 38,
            column: 78
          },
          end: {
            line: 38,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 78
          },
          end: {
            line: 38,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "17": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "18": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "19": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "20": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "21": {
        loc: {
          start: {
            line: 277,
            column: 32
          },
          end: {
            line: 277,
            column: 181
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 32
          },
          end: {
            line: 277,
            column: 168
          }
        }, {
          start: {
            line: 277,
            column: 172
          },
          end: {
            line: 277,
            column: 181
          }
        }],
        line: 277
      },
      "22": {
        loc: {
          start: {
            line: 281,
            column: 30
          },
          end: {
            line: 281,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 30
          },
          end: {
            line: 281,
            column: 179
          }
        }, {
          start: {
            line: 281,
            column: 183
          },
          end: {
            line: 281,
            column: 184
          }
        }],
        line: 281
      },
      "23": {
        loc: {
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 308,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 308,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "24": {
        loc: {
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 303,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 303,
            column: 51
          }
        }, {
          start: {
            line: 303,
            column: 55
          },
          end: {
            line: 303,
            column: 56
          }
        }],
        line: 303
      },
      "25": {
        loc: {
          start: {
            line: 304,
            column: 34
          },
          end: {
            line: 304,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 34
          },
          end: {
            line: 304,
            column: 52
          }
        }, {
          start: {
            line: 304,
            column: 56
          },
          end: {
            line: 304,
            column: 57
          }
        }],
        line: 304
      },
      "26": {
        loc: {
          start: {
            line: 305,
            column: 35
          },
          end: {
            line: 305,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 35
          },
          end: {
            line: 305,
            column: 53
          }
        }, {
          start: {
            line: 305,
            column: 57
          },
          end: {
            line: 305,
            column: 58
          }
        }],
        line: 305
      },
      "27": {
        loc: {
          start: {
            line: 306,
            column: 36
          },
          end: {
            line: 306,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 36
          },
          end: {
            line: 306,
            column: 55
          }
        }, {
          start: {
            line: 306,
            column: 59
          },
          end: {
            line: 306,
            column: 60
          }
        }],
        line: 306
      },
      "28": {
        loc: {
          start: {
            line: 383,
            column: 47
          },
          end: {
            line: 383,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 383,
            column: 47
          },
          end: {
            line: 383,
            column: 72
          }
        }, {
          start: {
            line: 383,
            column: 76
          },
          end: {
            line: 383,
            column: 97
          }
        }],
        line: 383
      },
      "29": {
        loc: {
          start: {
            line: 420,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "30": {
        loc: {
          start: {
            line: 422,
            column: 31
          },
          end: {
            line: 422,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 31
          },
          end: {
            line: 422,
            column: 55
          }
        }, {
          start: {
            line: 422,
            column: 59
          },
          end: {
            line: 422,
            column: 60
          }
        }],
        line: 422
      },
      "31": {
        loc: {
          start: {
            line: 427,
            column: 33
          },
          end: {
            line: 427,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 33
          },
          end: {
            line: 427,
            column: 56
          }
        }, {
          start: {
            line: 427,
            column: 60
          },
          end: {
            line: 427,
            column: 61
          }
        }],
        line: 427
      },
      "32": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        }, {
          start: {
            line: 451,
            column: 13
          },
          end: {
            line: 453,
            column: 9
          }
        }],
        line: 448
      },
      "33": {
        loc: {
          start: {
            line: 451,
            column: 13
          },
          end: {
            line: 453,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 13
          },
          end: {
            line: 453,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "34": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: 458,
            column: 13
          },
          end: {
            line: 460,
            column: 9
          }
        }],
        line: 455
      },
      "35": {
        loc: {
          start: {
            line: 458,
            column: 13
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 13
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "36": {
        loc: {
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 467,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 467,
            column: 9
          }
        }, {
          start: {
            line: 465,
            column: 13
          },
          end: {
            line: 467,
            column: 9
          }
        }],
        line: 462
      },
      "37": {
        loc: {
          start: {
            line: 465,
            column: 13
          },
          end: {
            line: 467,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 13
          },
          end: {
            line: 467,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 465
      },
      "38": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 474,
            column: 9
          }
        }],
        line: 469
      },
      "39": {
        loc: {
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 13
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "40": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "41": {
        loc: {
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "42": {
        loc: {
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 8
          },
          end: {
            line: 486,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "43": {
        loc: {
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "44": {
        loc: {
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 504,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 504,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "45": {
        loc: {
          start: {
            line: 527,
            column: 24
          },
          end: {
            line: 527,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 527,
            column: 97
          },
          end: {
            line: 527,
            column: 106
          }
        }, {
          start: {
            line: 527,
            column: 109
          },
          end: {
            line: 527,
            column: 118
          }
        }],
        line: 527
      },
      "46": {
        loc: {
          start: {
            line: 527,
            column: 24
          },
          end: {
            line: 527,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 527,
            column: 24
          },
          end: {
            line: 527,
            column: 53
          }
        }, {
          start: {
            line: 527,
            column: 57
          },
          end: {
            line: 527,
            column: 94
          }
        }],
        line: 527
      },
      "47": {
        loc: {
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 536,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 536,
            column: 92
          },
          end: {
            line: 536,
            column: 101
          }
        }, {
          start: {
            line: 536,
            column: 104
          },
          end: {
            line: 536,
            column: 114
          }
        }],
        line: 536
      },
      "48": {
        loc: {
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 536,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 536,
            column: 24
          },
          end: {
            line: 536,
            column: 53
          }
        }, {
          start: {
            line: 536,
            column: 57
          },
          end: {
            line: 536,
            column: 89
          }
        }],
        line: 536
      },
      "49": {
        loc: {
          start: {
            line: 538,
            column: 25
          },
          end: {
            line: 538,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 538,
            column: 57
          },
          end: {
            line: 538,
            column: 61
          }
        }, {
          start: {
            line: 538,
            column: 64
          },
          end: {
            line: 538,
            column: 70
          }
        }],
        line: 538
      },
      "50": {
        loc: {
          start: {
            line: 539,
            column: 31
          },
          end: {
            line: 539,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 539,
            column: 69
          },
          end: {
            line: 539,
            column: 73
          }
        }, {
          start: {
            line: 539,
            column: 76
          },
          end: {
            line: 539,
            column: 82
          }
        }],
        line: 539
      },
      "51": {
        loc: {
          start: {
            line: 540,
            column: 28
          },
          end: {
            line: 540,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 540,
            column: 63
          },
          end: {
            line: 540,
            column: 67
          }
        }, {
          start: {
            line: 540,
            column: 70
          },
          end: {
            line: 540,
            column: 76
          }
        }],
        line: 540
      },
      "52": {
        loc: {
          start: {
            line: 546,
            column: 24
          },
          end: {
            line: 546,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 546,
            column: 36
          },
          end: {
            line: 546,
            column: 45
          }
        }, {
          start: {
            line: 546,
            column: 48
          },
          end: {
            line: 546,
            column: 58
          }
        }],
        line: 546
      },
      "53": {
        loc: {
          start: {
            line: 547,
            column: 38
          },
          end: {
            line: 547,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 547,
            column: 50
          },
          end: {
            line: 547,
            column: 54
          }
        }, {
          start: {
            line: 547,
            column: 57
          },
          end: {
            line: 547,
            column: 65
          }
        }],
        line: 547
      },
      "54": {
        loc: {
          start: {
            line: 551,
            column: 12
          },
          end: {
            line: 556,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 12
          },
          end: {
            line: 556,
            column: 13
          }
        }, {
          start: {
            line: 554,
            column: 17
          },
          end: {
            line: 556,
            column: 13
          }
        }],
        line: 551
      },
      "55": {
        loc: {
          start: {
            line: 554,
            column: 17
          },
          end: {
            line: 556,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 17
          },
          end: {
            line: 556,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "56": {
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 583,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 583,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "57": {
        loc: {
          start: {
            line: 652,
            column: 8
          },
          end: {
            line: 655,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 652,
            column: 8
          },
          end: {
            line: 655,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 652
      },
      "58": {
        loc: {
          start: {
            line: 660,
            column: 8
          },
          end: {
            line: 674,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 660,
            column: 8
          },
          end: {
            line: 674,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 660
      },
      "59": {
        loc: {
          start: {
            line: 662,
            column: 12
          },
          end: {
            line: 664,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 662,
            column: 12
          },
          end: {
            line: 664,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 662
      },
      "60": {
        loc: {
          start: {
            line: 665,
            column: 12
          },
          end: {
            line: 667,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 665,
            column: 12
          },
          end: {
            line: 667,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 665
      },
      "61": {
        loc: {
          start: {
            line: 668,
            column: 12
          },
          end: {
            line: 670,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 668,
            column: 12
          },
          end: {
            line: 670,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 668
      },
      "62": {
        loc: {
          start: {
            line: 671,
            column: 12
          },
          end: {
            line: 673,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 671,
            column: 12
          },
          end: {
            line: 673,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 671
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\monitoring-automation.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\monitoring-automation.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - MONITORING AND MAINTENANCE AUTOMATION\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive monitoring and automated maintenance\r\n * for the AI crypto trading agent production deployment.\r\n */\r\n\r\nimport { execSync } from 'child_process';\r\nimport { existsSync, writeFileSync, readFileSync, mkdirSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { logger } from '../core/logger';\r\nimport { databaseSetup } from './database-setup';\r\nimport * as cron from 'node-cron';\r\n\r\ninterface MonitoringMetrics {\r\n  timestamp: Date;\r\n  system: SystemMetrics;\r\n  application: ApplicationMetrics;\r\n  trading: TradingMetrics;\r\n  security: SecurityMetrics;\r\n}\r\n\r\ninterface SystemMetrics {\r\n  cpu: {\r\n    usage: number;\r\n    temperature: number;\r\n    loadAverage: number[];\r\n  };\r\n  memory: {\r\n    total: number;\r\n    used: number;\r\n    available: number;\r\n    percentage: number;\r\n  };\r\n  disk: {\r\n    total: number;\r\n    used: number;\r\n    available: number;\r\n    percentage: number;\r\n  };\r\n  network: {\r\n    bytesIn: number;\r\n    bytesOut: number;\r\n    packetsIn: number;\r\n    packetsOut: number;\r\n  };\r\n}\r\n\r\ninterface ApplicationMetrics {\r\n  processes: ProcessMetric[];\r\n  apiHealth: boolean;\r\n  dashboardHealth: boolean;\r\n  tunnelHealth: boolean;\r\n  responseTime: number;\r\n  errorRate: number;\r\n}\r\n\r\ninterface ProcessMetric {\r\n  name: string;\r\n  pid: number;\r\n  status: string;\r\n  cpu: number;\r\n  memory: number;\r\n  uptime: number;\r\n  restarts: number;\r\n}\r\n\r\ninterface TradingMetrics {\r\n  activeTrades: number;\r\n  totalPnL: number;\r\n  dailyPnL: number;\r\n  winRate: number;\r\n  riskExposure: number;\r\n  lastTradeTime?: Date;\r\n}\r\n\r\ninterface SecurityMetrics {\r\n  failedLogins: number;\r\n  suspiciousActivities: number;\r\n  firewallBlocks: number;\r\n  lastSecurityScan?: Date;\r\n}\r\n\r\ninterface MaintenanceTask {\r\n  name: string;\r\n  description: string;\r\n  schedule: string; // cron expression\r\n  action: () => Promise<void>;\r\n  lastRun?: Date;\r\n  nextRun?: Date;\r\n  enabled: boolean;\r\n}\r\n\r\nexport class MonitoringAutomation {\r\n  private metrics: MonitoringMetrics[] = [];\r\n  private maintenanceTasks: MaintenanceTask[] = [];\r\n  private alertThresholds: any;\r\n  private isRunning: boolean = false;\r\n\r\n  constructor() {\r\n    this.initializeAlertThresholds();\r\n    this.initializeMaintenanceTasks();\r\n  }\r\n\r\n  /**\r\n   * Start monitoring and maintenance automation\r\n   */\r\n  async start(): Promise<void> {\r\n    if (this.isRunning) {\r\n      logger.warn('Monitoring automation is already running');\r\n      return;\r\n    }\r\n\r\n    logger.info('\uD83D\uDD04 Starting monitoring and maintenance automation...');\r\n\r\n    // Start metric collection\r\n    this.startMetricCollection();\r\n\r\n    // Schedule maintenance tasks\r\n    this.scheduleMaintenanceTasks();\r\n\r\n    // Start health checks\r\n    this.startHealthChecks();\r\n\r\n    this.isRunning = true;\r\n    logger.info('\u2705 Monitoring and maintenance automation started');\r\n  }\r\n\r\n  /**\r\n   * Stop monitoring and maintenance automation\r\n   */\r\n  async stop(): Promise<void> {\r\n    if (!this.isRunning) {\r\n      return;\r\n    }\r\n\r\n    logger.info('\uD83D\uDED1 Stopping monitoring and maintenance automation...');\r\n\r\n    // Stop all cron jobs\r\n    cron.getTasks().forEach(task => task.stop());\r\n\r\n    this.isRunning = false;\r\n    logger.info('\u2705 Monitoring and maintenance automation stopped');\r\n  }\r\n\r\n  /**\r\n   * Initialize alert thresholds\r\n   */\r\n  private initializeAlertThresholds(): void {\r\n    this.alertThresholds = {\r\n      cpu: {\r\n        warning: 70,\r\n        critical: 85\r\n      },\r\n      memory: {\r\n        warning: 80,\r\n        critical: 90\r\n      },\r\n      disk: {\r\n        warning: 80,\r\n        critical: 90\r\n      },\r\n      temperature: {\r\n        warning: 70,\r\n        critical: 80\r\n      },\r\n      responseTime: {\r\n        warning: 5000,\r\n        critical: 10000\r\n      },\r\n      errorRate: {\r\n        warning: 0.05,\r\n        critical: 0.1\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize maintenance tasks\r\n   */\r\n  private initializeMaintenanceTasks(): void {\r\n    this.maintenanceTasks = [\r\n      {\r\n        name: 'database-backup',\r\n        description: 'Create database backup',\r\n        schedule: '0 2 * * *', // Daily at 2 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n          const backupPath = join(process.cwd(), 'backups', `db-backup-${timestamp}.db`);\r\n          await databaseSetup.backup(backupPath);\r\n        }\r\n      },\r\n      {\r\n        name: 'log-rotation',\r\n        description: 'Rotate and compress old logs',\r\n        schedule: '0 1 * * *', // Daily at 1 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.rotateLogFiles();\r\n        }\r\n      },\r\n      {\r\n        name: 'system-cleanup',\r\n        description: 'Clean temporary files and optimize system',\r\n        schedule: '0 3 * * 0', // Weekly on Sunday at 3 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.performSystemCleanup();\r\n        }\r\n      },\r\n      {\r\n        name: 'security-scan',\r\n        description: 'Run security vulnerability scan',\r\n        schedule: '0 4 * * 1', // Weekly on Monday at 4 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.performSecurityScan();\r\n        }\r\n      },\r\n      {\r\n        name: 'performance-optimization',\r\n        description: 'Optimize system performance',\r\n        schedule: '0 5 * * 0', // Weekly on Sunday at 5 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.optimizePerformance();\r\n        }\r\n      },\r\n      {\r\n        name: 'health-report',\r\n        description: 'Generate comprehensive health report',\r\n        schedule: '0 6 * * 1', // Weekly on Monday at 6 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.generateHealthReport();\r\n        }\r\n      },\r\n      {\r\n        name: 'backup-cleanup',\r\n        description: 'Clean old backup files',\r\n        schedule: '0 7 * * 0', // Weekly on Sunday at 7 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.cleanupOldBackups();\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Start metric collection\r\n   */\r\n  private startMetricCollection(): void {\r\n    // Collect metrics every minute\r\n    cron.schedule('* * * * *', async () => {\r\n      try {\r\n        const metrics = await this.collectMetrics();\r\n        this.metrics.push(metrics);\r\n\r\n        // Keep only last 1440 metrics (24 hours)\r\n        if (this.metrics.length > 1440) {\r\n          this.metrics = this.metrics.slice(-1440);\r\n        }\r\n\r\n        // Check for alerts\r\n        await this.checkAlerts(metrics);\r\n\r\n      } catch (error) {\r\n        logger.error('Error collecting metrics:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Schedule maintenance tasks\r\n   */\r\n  private scheduleMaintenanceTasks(): void {\r\n    for (const task of this.maintenanceTasks) {\r\n      if (task.enabled) {\r\n        cron.schedule(task.schedule, async () => {\r\n          logger.info(`\uD83D\uDD27 Running maintenance task: ${task.name}`);\r\n          \r\n          try {\r\n            await task.action();\r\n            task.lastRun = new Date();\r\n            logger.info(`\u2705 Maintenance task completed: ${task.name}`);\r\n          } catch (error) {\r\n            logger.error(`\u274C Maintenance task failed: ${task.name}`, error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start health checks\r\n   */\r\n  private startHealthChecks(): void {\r\n    // Health check every 5 minutes\r\n    cron.schedule('*/5 * * * *', async () => {\r\n      try {\r\n        await this.performHealthCheck();\r\n      } catch (error) {\r\n        logger.error('Health check failed:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collect system and application metrics\r\n   */\r\n  private async collectMetrics(): Promise<MonitoringMetrics> {\r\n    const timestamp = new Date();\r\n\r\n    // System metrics\r\n    const systemMetrics = await this.collectSystemMetrics();\r\n    \r\n    // Application metrics\r\n    const applicationMetrics = await this.collectApplicationMetrics();\r\n    \r\n    // Trading metrics\r\n    const tradingMetrics = await this.collectTradingMetrics();\r\n    \r\n    // Security metrics\r\n    const securityMetrics = await this.collectSecurityMetrics();\r\n\r\n    return {\r\n      timestamp,\r\n      system: systemMetrics,\r\n      application: applicationMetrics,\r\n      trading: tradingMetrics,\r\n      security: securityMetrics\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Collect system metrics\r\n   */\r\n  private async collectSystemMetrics(): Promise<SystemMetrics> {\r\n    try {\r\n      // CPU metrics\r\n      const cpuUsage = parseFloat(execSync(\"top -bn1 | grep 'Cpu(s)' | awk '{print $2}' | cut -d'%' -f1\", { encoding: 'utf-8' }).trim());\r\n      const loadAverage = execSync('uptime', { encoding: 'utf-8' }).match(/load average: ([\\d.]+), ([\\d.]+), ([\\d.]+)/)?.slice(1).map(Number) || [0, 0, 0];\r\n      \r\n      // Temperature (if available)\r\n      let temperature = 0;\r\n      try {\r\n        temperature = parseFloat(execSync(\"sensors | grep 'Core 0' | awk '{print $3}' | cut -d'+' -f2 | cut -d'\xB0' -f1\", { encoding: 'utf-8' }).trim()) || 0;\r\n      } catch {\r\n        // Temperature sensor not available\r\n      }\r\n\r\n      // Memory metrics\r\n      const memInfo = execSync('free -b', { encoding: 'utf-8' }).split('\\n')[1].split(/\\s+/);\r\n      const memTotal = parseInt(memInfo[1]);\r\n      const memUsed = parseInt(memInfo[2]);\r\n      const memAvailable = parseInt(memInfo[6]);\r\n\r\n      // Disk metrics\r\n      const diskInfo = execSync(\"df -B1 / | tail -1\", { encoding: 'utf-8' }).split(/\\s+/);\r\n      const diskTotal = parseInt(diskInfo[1]);\r\n      const diskUsed = parseInt(diskInfo[2]);\r\n      const diskAvailable = parseInt(diskInfo[3]);\r\n\r\n      // Network metrics (simplified)\r\n      let networkMetrics = { bytesIn: 0, bytesOut: 0, packetsIn: 0, packetsOut: 0 };\r\n      try {\r\n        const netStats = execSync(\"cat /proc/net/dev | grep eth0 || cat /proc/net/dev | grep wlan0 || echo '0 0 0 0'\", { encoding: 'utf-8' }).trim();\r\n        if (netStats) {\r\n          const stats = netStats.split(/\\s+/);\r\n          networkMetrics = {\r\n            bytesIn: parseInt(stats[1]) || 0,\r\n            bytesOut: parseInt(stats[9]) || 0,\r\n            packetsIn: parseInt(stats[2]) || 0,\r\n            packetsOut: parseInt(stats[10]) || 0\r\n          };\r\n        }\r\n      } catch {\r\n        // Network stats not available\r\n      }\r\n\r\n      return {\r\n        cpu: {\r\n          usage: cpuUsage,\r\n          temperature,\r\n          loadAverage\r\n        },\r\n        memory: {\r\n          total: memTotal,\r\n          used: memUsed,\r\n          available: memAvailable,\r\n          percentage: (memUsed / memTotal) * 100\r\n        },\r\n        disk: {\r\n          total: diskTotal,\r\n          used: diskUsed,\r\n          available: diskAvailable,\r\n          percentage: (diskUsed / diskTotal) * 100\r\n        },\r\n        network: networkMetrics\r\n      };\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting system metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect application metrics\r\n   */\r\n  private async collectApplicationMetrics(): Promise<ApplicationMetrics> {\r\n    const processes: ProcessMetric[] = [];\r\n    let apiHealth = false;\r\n    let dashboardHealth = false;\r\n    let tunnelHealth = false;\r\n    let responseTime = 0;\r\n    let errorRate = 0;\r\n\r\n    try {\r\n      // PM2 process metrics\r\n      const pm2List = execSync('pm2 jlist', { encoding: 'utf-8' });\r\n      const processData = JSON.parse(pm2List);\r\n\r\n      for (const proc of processData) {\r\n        processes.push({\r\n          name: proc.name,\r\n          pid: proc.pid,\r\n          status: proc.pm2_env.status,\r\n          cpu: proc.monit.cpu,\r\n          memory: proc.monit.memory,\r\n          uptime: Date.now() - proc.pm2_env.pm_uptime,\r\n          restarts: proc.pm2_env.restart_time\r\n        });\r\n      }\r\n\r\n      // API health check\r\n      try {\r\n        const startTime = Date.now();\r\n        execSync('curl -f http://localhost:3001/api/v1/health', { stdio: 'pipe' });\r\n        responseTime = Date.now() - startTime;\r\n        apiHealth = true;\r\n      } catch {\r\n        apiHealth = false;\r\n      }\r\n\r\n      // Dashboard health check\r\n      try {\r\n        execSync('curl -f http://localhost:3002', { stdio: 'pipe' });\r\n        dashboardHealth = true;\r\n      } catch {\r\n        dashboardHealth = false;\r\n      }\r\n\r\n      // Tunnel health check (simplified)\r\n      tunnelHealth = processes.some(p => p.name.includes('tunnel') && p.status === 'online');\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting application metrics:', error);\r\n    }\r\n\r\n    return {\r\n      processes,\r\n      apiHealth,\r\n      dashboardHealth,\r\n      tunnelHealth,\r\n      responseTime,\r\n      errorRate\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Collect trading metrics\r\n   */\r\n  private async collectTradingMetrics(): Promise<TradingMetrics> {\r\n    // This would typically query the database for trading data\r\n    // For now, return default values\r\n    return {\r\n      activeTrades: 0,\r\n      totalPnL: 0,\r\n      dailyPnL: 0,\r\n      winRate: 0,\r\n      riskExposure: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Collect security metrics\r\n   */\r\n  private async collectSecurityMetrics(): Promise<SecurityMetrics> {\r\n    let failedLogins = 0;\r\n    let suspiciousActivities = 0;\r\n    let firewallBlocks = 0;\r\n\r\n    try {\r\n      // Count failed login attempts from auth.log\r\n      if (existsSync('/var/log/auth.log')) {\r\n        const authLog = execSync(\"grep 'Failed password' /var/log/auth.log | wc -l\", { encoding: 'utf-8' });\r\n        failedLogins = parseInt(authLog.trim()) || 0;\r\n      }\r\n\r\n      // Count firewall blocks\r\n      try {\r\n        const ufwLog = execSync(\"grep 'UFW BLOCK' /var/log/ufw.log | wc -l\", { encoding: 'utf-8' });\r\n        firewallBlocks = parseInt(ufwLog.trim()) || 0;\r\n      } catch {\r\n        // UFW log not available\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting security metrics:', error);\r\n    }\r\n\r\n    return {\r\n      failedLogins,\r\n      suspiciousActivities,\r\n      firewallBlocks\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check for alerts based on metrics\r\n   */\r\n  private async checkAlerts(metrics: MonitoringMetrics): Promise<void> {\r\n    const alerts: string[] = [];\r\n\r\n    // CPU alerts\r\n    if (metrics.system.cpu.usage > this.alertThresholds.cpu.critical) {\r\n      alerts.push(`CRITICAL: CPU usage is ${metrics.system.cpu.usage.toFixed(1)}%`);\r\n    } else if (metrics.system.cpu.usage > this.alertThresholds.cpu.warning) {\r\n      alerts.push(`WARNING: CPU usage is ${metrics.system.cpu.usage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Memory alerts\r\n    if (metrics.system.memory.percentage > this.alertThresholds.memory.critical) {\r\n      alerts.push(`CRITICAL: Memory usage is ${metrics.system.memory.percentage.toFixed(1)}%`);\r\n    } else if (metrics.system.memory.percentage > this.alertThresholds.memory.warning) {\r\n      alerts.push(`WARNING: Memory usage is ${metrics.system.memory.percentage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Disk alerts\r\n    if (metrics.system.disk.percentage > this.alertThresholds.disk.critical) {\r\n      alerts.push(`CRITICAL: Disk usage is ${metrics.system.disk.percentage.toFixed(1)}%`);\r\n    } else if (metrics.system.disk.percentage > this.alertThresholds.disk.warning) {\r\n      alerts.push(`WARNING: Disk usage is ${metrics.system.disk.percentage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Temperature alerts\r\n    if (metrics.system.cpu.temperature > this.alertThresholds.temperature.critical) {\r\n      alerts.push(`CRITICAL: CPU temperature is ${metrics.system.cpu.temperature}\xB0C`);\r\n    } else if (metrics.system.cpu.temperature > this.alertThresholds.temperature.warning) {\r\n      alerts.push(`WARNING: CPU temperature is ${metrics.system.cpu.temperature}\xB0C`);\r\n    }\r\n\r\n    // Application health alerts\r\n    if (!metrics.application.apiHealth) {\r\n      alerts.push('CRITICAL: API service is not responding');\r\n    }\r\n\r\n    if (!metrics.application.tunnelHealth) {\r\n      alerts.push('WARNING: SSH tunnel may be down');\r\n    }\r\n\r\n    // Process alerts\r\n    const failedProcesses = metrics.application.processes.filter(p => p.status !== 'online');\r\n    if (failedProcesses.length > 0) {\r\n      alerts.push(`WARNING: ${failedProcesses.length} processes are not running`);\r\n    }\r\n\r\n    // Send alerts if any\r\n    if (alerts.length > 0) {\r\n      await this.sendAlerts(alerts);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send alerts via configured channels\r\n   */\r\n  private async sendAlerts(alerts: string[]): Promise<void> {\r\n    const alertMessage = `\uD83D\uDEA8 AI Crypto Trading Agent Alerts:\\n${alerts.join('\\n')}`;\r\n    \r\n    logger.warn('System alerts:', alerts);\r\n\r\n    // Here you would integrate with notification services\r\n    // For now, just log the alerts\r\n    \r\n    // Save alerts to file\r\n    const alertsDir = join(process.cwd(), 'logs', 'alerts');\r\n    if (!existsSync(alertsDir)) {\r\n      mkdirSync(alertsDir, { recursive: true });\r\n    }\r\n\r\n    const alertFile = join(alertsDir, `alerts-${new Date().toISOString().split('T')[0]}.log`);\r\n    const alertEntry = `${new Date().toISOString()}: ${alertMessage}\\n`;\r\n    \r\n    try {\r\n      writeFileSync(alertFile, alertEntry, { flag: 'a' });\r\n    } catch (error) {\r\n      logger.error('Failed to write alert to file:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform comprehensive health check\r\n   */\r\n  private async performHealthCheck(): Promise<void> {\r\n    const healthStatus = {\r\n      timestamp: new Date(),\r\n      overall: 'HEALTHY',\r\n      checks: {}\r\n    };\r\n\r\n    try {\r\n      // Check system resources\r\n      const metrics = await this.collectMetrics();\r\n      \r\n      healthStatus.checks['system'] = {\r\n        status: metrics.system.cpu.usage < 80 && metrics.system.memory.percentage < 85 ? 'HEALTHY' : 'WARNING',\r\n        details: {\r\n          cpu: `${metrics.system.cpu.usage.toFixed(1)}%`,\r\n          memory: `${metrics.system.memory.percentage.toFixed(1)}%`,\r\n          disk: `${metrics.system.disk.percentage.toFixed(1)}%`\r\n        }\r\n      };\r\n\r\n      // Check application services\r\n      healthStatus.checks['services'] = {\r\n        status: metrics.application.apiHealth && metrics.application.tunnelHealth ? 'HEALTHY' : 'CRITICAL',\r\n        details: {\r\n          api: metrics.application.apiHealth ? 'UP' : 'DOWN',\r\n          dashboard: metrics.application.dashboardHealth ? 'UP' : 'DOWN',\r\n          tunnel: metrics.application.tunnelHealth ? 'UP' : 'DOWN'\r\n        }\r\n      };\r\n\r\n      // Check database\r\n      const dbHealthy = await databaseSetup.validateIntegrity();\r\n      healthStatus.checks['database'] = {\r\n        status: dbHealthy ? 'HEALTHY' : 'CRITICAL',\r\n        details: { integrity: dbHealthy ? 'OK' : 'FAILED' }\r\n      };\r\n\r\n      // Determine overall status\r\n      const statuses = Object.values(healthStatus.checks).map(check => check.status);\r\n      if (statuses.includes('CRITICAL')) {\r\n        healthStatus.overall = 'CRITICAL';\r\n      } else if (statuses.includes('WARNING')) {\r\n        healthStatus.overall = 'WARNING';\r\n      }\r\n\r\n      // Save health status\r\n      const healthFile = join(process.cwd(), 'logs', 'health-status.json');\r\n      writeFileSync(healthFile, JSON.stringify(healthStatus, null, 2));\r\n\r\n    } catch (error) {\r\n      logger.error('Health check failed:', error);\r\n      healthStatus.overall = 'ERROR';\r\n      healthStatus.checks['error'] = { status: 'ERROR', details: error.message };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Maintenance task implementations\r\n   */\r\n  private async rotateLogFiles(): Promise<void> {\r\n    logger.info('\uD83D\uDD04 Rotating log files...');\r\n    \r\n    try {\r\n      // Use logrotate if available\r\n      execSync('sudo logrotate -f /etc/logrotate.d/ai-crypto-trading', { stdio: 'pipe' });\r\n    } catch {\r\n      // Manual log rotation\r\n      const logsDir = join(process.cwd(), 'logs');\r\n      if (existsSync(logsDir)) {\r\n        const timestamp = new Date().toISOString().split('T')[0];\r\n        execSync(`find ${logsDir} -name \"*.log\" -size +100M -exec gzip {} \\\\;`);\r\n        execSync(`find ${logsDir} -name \"*.gz\" -mtime +30 -delete`);\r\n      }\r\n    }\r\n    \r\n    logger.info('\u2705 Log rotation completed');\r\n  }\r\n\r\n  private async performSystemCleanup(): Promise<void> {\r\n    logger.info('\uD83E\uDDF9 Performing system cleanup...');\r\n    \r\n    try {\r\n      // Clean package cache\r\n      execSync('sudo apt autoremove -y', { stdio: 'pipe' });\r\n      execSync('sudo apt autoclean', { stdio: 'pipe' });\r\n      \r\n      // Clean temporary files\r\n      execSync('sudo find /tmp -type f -atime +7 -delete', { stdio: 'pipe' });\r\n      \r\n      // Clean old logs\r\n      execSync('sudo journalctl --vacuum-time=30d', { stdio: 'pipe' });\r\n      \r\n    } catch (error) {\r\n      logger.error('System cleanup error:', error);\r\n    }\r\n    \r\n    logger.info('\u2705 System cleanup completed');\r\n  }\r\n\r\n  private async performSecurityScan(): Promise<void> {\r\n    logger.info('\uD83D\uDD12 Performing security scan...');\r\n    \r\n    try {\r\n      // Run npm audit\r\n      execSync('npm audit --audit-level moderate', { stdio: 'pipe' });\r\n      \r\n      // Check for security updates\r\n      execSync('sudo apt list --upgradable | grep -i security', { stdio: 'pipe' });\r\n      \r\n    } catch (error) {\r\n      logger.warn('Security scan completed with warnings');\r\n    }\r\n    \r\n    logger.info('\u2705 Security scan completed');\r\n  }\r\n\r\n  private async optimizePerformance(): Promise<void> {\r\n    logger.info('\u26A1 Optimizing system performance...');\r\n    \r\n    try {\r\n      // Clear memory caches\r\n      execSync('sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches', { stdio: 'pipe' });\r\n      \r\n      // Optimize database\r\n      await databaseSetup.run('VACUUM');\r\n      await databaseSetup.run('ANALYZE');\r\n      \r\n    } catch (error) {\r\n      logger.error('Performance optimization error:', error);\r\n    }\r\n    \r\n    logger.info('\u2705 Performance optimization completed');\r\n  }\r\n\r\n  private async generateHealthReport(): Promise<void> {\r\n    logger.info('\uD83D\uDCCA Generating health report...');\r\n    \r\n    const report = {\r\n      timestamp: new Date(),\r\n      system: await this.collectSystemMetrics(),\r\n      application: await this.collectApplicationMetrics(),\r\n      maintenance: {\r\n        lastTasks: this.maintenanceTasks.map(task => ({\r\n          name: task.name,\r\n          lastRun: task.lastRun,\r\n          enabled: task.enabled\r\n        }))\r\n      },\r\n      recommendations: this.generateRecommendations()\r\n    };\r\n    \r\n    const reportFile = join(process.cwd(), 'logs', `health-report-${new Date().toISOString().split('T')[0]}.json`);\r\n    writeFileSync(reportFile, JSON.stringify(report, null, 2));\r\n    \r\n    logger.info(`\u2705 Health report generated: ${reportFile}`);\r\n  }\r\n\r\n  private async cleanupOldBackups(): Promise<void> {\r\n    logger.info('\uD83D\uDDD1\uFE0F Cleaning up old backups...');\r\n    \r\n    const backupsDir = join(process.cwd(), 'backups');\r\n    if (existsSync(backupsDir)) {\r\n      // Keep backups for 30 days\r\n      execSync(`find ${backupsDir} -type f -mtime +30 -delete`, { stdio: 'pipe' });\r\n    }\r\n    \r\n    logger.info('\u2705 Backup cleanup completed');\r\n  }\r\n\r\n  private generateRecommendations(): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    if (this.metrics.length > 0) {\r\n      const latestMetrics = this.metrics[this.metrics.length - 1];\r\n      \r\n      if (latestMetrics.system.cpu.usage > 70) {\r\n        recommendations.push('Consider optimizing CPU-intensive processes');\r\n      }\r\n      \r\n      if (latestMetrics.system.memory.percentage > 80) {\r\n        recommendations.push('Monitor memory usage and consider adding more RAM');\r\n      }\r\n      \r\n      if (latestMetrics.system.disk.percentage > 80) {\r\n        recommendations.push('Clean up disk space or add more storage');\r\n      }\r\n      \r\n      if (!latestMetrics.application.apiHealth) {\r\n        recommendations.push('Investigate API service issues');\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Get current metrics\r\n   */\r\n  getMetrics(): MonitoringMetrics[] {\r\n    return this.metrics;\r\n  }\r\n\r\n  /**\r\n   * Get maintenance task status\r\n   */\r\n  getMaintenanceStatus(): MaintenanceTask[] {\r\n    return this.maintenanceTasks;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const monitoringAutomation = new MonitoringAutomation();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3483d0a41e20656f4b085c6f77b0b52d254d44b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6eh6untbt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6eh6untbt();
var __createBinding =
/* istanbul ignore next */
(cov_6eh6untbt().s[0]++,
/* istanbul ignore next */
(cov_6eh6untbt().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_6eh6untbt().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_6eh6untbt().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_6eh6untbt().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_6eh6untbt().f[0]++;
  cov_6eh6untbt().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_6eh6untbt().b[2][0]++;
    cov_6eh6untbt().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_6eh6untbt().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_6eh6untbt().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_6eh6untbt().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_6eh6untbt().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_6eh6untbt().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_6eh6untbt().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_6eh6untbt().b[5][1]++,
  /* istanbul ignore next */
  (cov_6eh6untbt().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_6eh6untbt().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_6eh6untbt().b[3][0]++;
    cov_6eh6untbt().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_6eh6untbt().f[1]++;
        cov_6eh6untbt().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_6eh6untbt().b[3][1]++;
  }
  cov_6eh6untbt().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_6eh6untbt().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_6eh6untbt().f[2]++;
  cov_6eh6untbt().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_6eh6untbt().b[7][0]++;
    cov_6eh6untbt().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_6eh6untbt().b[7][1]++;
  }
  cov_6eh6untbt().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_6eh6untbt().s[11]++,
/* istanbul ignore next */
(cov_6eh6untbt().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_6eh6untbt().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_6eh6untbt().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_6eh6untbt().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_6eh6untbt().f[3]++;
  cov_6eh6untbt().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_6eh6untbt().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_6eh6untbt().f[4]++;
  cov_6eh6untbt().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_6eh6untbt().s[14]++,
/* istanbul ignore next */
(cov_6eh6untbt().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_6eh6untbt().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_6eh6untbt().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_6eh6untbt().f[5]++;
  cov_6eh6untbt().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_6eh6untbt().f[6]++;
    cov_6eh6untbt().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_6eh6untbt().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_6eh6untbt().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_6eh6untbt().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[17]++, []);
      /* istanbul ignore next */
      cov_6eh6untbt().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_6eh6untbt().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_6eh6untbt().b[12][0]++;
          cov_6eh6untbt().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_6eh6untbt().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_6eh6untbt().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_6eh6untbt().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_6eh6untbt().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_6eh6untbt().f[8]++;
    cov_6eh6untbt().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_6eh6untbt().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_6eh6untbt().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[13][0]++;
      cov_6eh6untbt().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[26]++, {});
    /* istanbul ignore next */
    cov_6eh6untbt().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[15][0]++;
      cov_6eh6untbt().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_6eh6untbt().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_6eh6untbt().b[16][0]++;
          cov_6eh6untbt().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_6eh6untbt().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[15][1]++;
    }
    cov_6eh6untbt().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_6eh6untbt().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_6eh6untbt().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6eh6untbt().s[36]++;
exports.monitoringAutomation = exports.MonitoringAutomation = void 0;
const child_process_1 =
/* istanbul ignore next */
(cov_6eh6untbt().s[37]++, require("child_process"));
const fs_1 =
/* istanbul ignore next */
(cov_6eh6untbt().s[38]++, require("fs"));
const path_1 =
/* istanbul ignore next */
(cov_6eh6untbt().s[39]++, require("path"));
const logger_1 =
/* istanbul ignore next */
(cov_6eh6untbt().s[40]++, require("../core/logger"));
const database_setup_1 =
/* istanbul ignore next */
(cov_6eh6untbt().s[41]++, require("./database-setup"));
const cron =
/* istanbul ignore next */
(cov_6eh6untbt().s[42]++, __importStar(require("node-cron")));
class MonitoringAutomation {
  metrics =
  /* istanbul ignore next */
  (cov_6eh6untbt().s[43]++, []);
  maintenanceTasks =
  /* istanbul ignore next */
  (cov_6eh6untbt().s[44]++, []);
  alertThresholds;
  isRunning =
  /* istanbul ignore next */
  (cov_6eh6untbt().s[45]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[9]++;
    cov_6eh6untbt().s[46]++;
    this.initializeAlertThresholds();
    /* istanbul ignore next */
    cov_6eh6untbt().s[47]++;
    this.initializeMaintenanceTasks();
  }
  /**
   * Start monitoring and maintenance automation
   */
  async start() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[10]++;
    cov_6eh6untbt().s[48]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[17][0]++;
      cov_6eh6untbt().s[49]++;
      logger_1.logger.warn('Monitoring automation is already running');
      /* istanbul ignore next */
      cov_6eh6untbt().s[50]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[17][1]++;
    }
    cov_6eh6untbt().s[51]++;
    logger_1.logger.info('🔄 Starting monitoring and maintenance automation...');
    // Start metric collection
    /* istanbul ignore next */
    cov_6eh6untbt().s[52]++;
    this.startMetricCollection();
    // Schedule maintenance tasks
    /* istanbul ignore next */
    cov_6eh6untbt().s[53]++;
    this.scheduleMaintenanceTasks();
    // Start health checks
    /* istanbul ignore next */
    cov_6eh6untbt().s[54]++;
    this.startHealthChecks();
    /* istanbul ignore next */
    cov_6eh6untbt().s[55]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_6eh6untbt().s[56]++;
    logger_1.logger.info('✅ Monitoring and maintenance automation started');
  }
  /**
   * Stop monitoring and maintenance automation
   */
  async stop() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[11]++;
    cov_6eh6untbt().s[57]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[18][0]++;
      cov_6eh6untbt().s[58]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[18][1]++;
    }
    cov_6eh6untbt().s[59]++;
    logger_1.logger.info('🛑 Stopping monitoring and maintenance automation...');
    // Stop all cron jobs
    /* istanbul ignore next */
    cov_6eh6untbt().s[60]++;
    cron.getTasks().forEach(task => {
      /* istanbul ignore next */
      cov_6eh6untbt().f[12]++;
      cov_6eh6untbt().s[61]++;
      return task.stop();
    });
    /* istanbul ignore next */
    cov_6eh6untbt().s[62]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_6eh6untbt().s[63]++;
    logger_1.logger.info('✅ Monitoring and maintenance automation stopped');
  }
  /**
   * Initialize alert thresholds
   */
  initializeAlertThresholds() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[13]++;
    cov_6eh6untbt().s[64]++;
    this.alertThresholds = {
      cpu: {
        warning: 70,
        critical: 85
      },
      memory: {
        warning: 80,
        critical: 90
      },
      disk: {
        warning: 80,
        critical: 90
      },
      temperature: {
        warning: 70,
        critical: 80
      },
      responseTime: {
        warning: 5000,
        critical: 10000
      },
      errorRate: {
        warning: 0.05,
        critical: 0.1
      }
    };
  }
  /**
   * Initialize maintenance tasks
   */
  initializeMaintenanceTasks() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[14]++;
    cov_6eh6untbt().s[65]++;
    this.maintenanceTasks = [{
      name: 'database-backup',
      description: 'Create database backup',
      schedule: '0 2 * * *',
      // Daily at 2 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[15]++;
        const timestamp =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[66]++, new Date().toISOString().replace(/[:.]/g, '-'));
        const backupPath =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[67]++, (0, path_1.join)(process.cwd(), 'backups', `db-backup-${timestamp}.db`));
        /* istanbul ignore next */
        cov_6eh6untbt().s[68]++;
        await database_setup_1.databaseSetup.backup(backupPath);
      }
    }, {
      name: 'log-rotation',
      description: 'Rotate and compress old logs',
      schedule: '0 1 * * *',
      // Daily at 1 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[16]++;
        cov_6eh6untbt().s[69]++;
        await this.rotateLogFiles();
      }
    }, {
      name: 'system-cleanup',
      description: 'Clean temporary files and optimize system',
      schedule: '0 3 * * 0',
      // Weekly on Sunday at 3 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[17]++;
        cov_6eh6untbt().s[70]++;
        await this.performSystemCleanup();
      }
    }, {
      name: 'security-scan',
      description: 'Run security vulnerability scan',
      schedule: '0 4 * * 1',
      // Weekly on Monday at 4 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[18]++;
        cov_6eh6untbt().s[71]++;
        await this.performSecurityScan();
      }
    }, {
      name: 'performance-optimization',
      description: 'Optimize system performance',
      schedule: '0 5 * * 0',
      // Weekly on Sunday at 5 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[19]++;
        cov_6eh6untbt().s[72]++;
        await this.optimizePerformance();
      }
    }, {
      name: 'health-report',
      description: 'Generate comprehensive health report',
      schedule: '0 6 * * 1',
      // Weekly on Monday at 6 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[20]++;
        cov_6eh6untbt().s[73]++;
        await this.generateHealthReport();
      }
    }, {
      name: 'backup-cleanup',
      description: 'Clean old backup files',
      schedule: '0 7 * * 0',
      // Weekly on Sunday at 7 AM
      enabled: true,
      action: async () => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[21]++;
        cov_6eh6untbt().s[74]++;
        await this.cleanupOldBackups();
      }
    }];
  }
  /**
   * Start metric collection
   */
  startMetricCollection() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[22]++;
    cov_6eh6untbt().s[75]++;
    // Collect metrics every minute
    cron.schedule('* * * * *', async () => {
      /* istanbul ignore next */
      cov_6eh6untbt().f[23]++;
      cov_6eh6untbt().s[76]++;
      try {
        const metrics =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[77]++, await this.collectMetrics());
        /* istanbul ignore next */
        cov_6eh6untbt().s[78]++;
        this.metrics.push(metrics);
        // Keep only last 1440 metrics (24 hours)
        /* istanbul ignore next */
        cov_6eh6untbt().s[79]++;
        if (this.metrics.length > 1440) {
          /* istanbul ignore next */
          cov_6eh6untbt().b[19][0]++;
          cov_6eh6untbt().s[80]++;
          this.metrics = this.metrics.slice(-1440);
        } else
        /* istanbul ignore next */
        {
          cov_6eh6untbt().b[19][1]++;
        }
        // Check for alerts
        cov_6eh6untbt().s[81]++;
        await this.checkAlerts(metrics);
      } catch (error) {
        /* istanbul ignore next */
        cov_6eh6untbt().s[82]++;
        logger_1.logger.error('Error collecting metrics:', error);
      }
    });
  }
  /**
   * Schedule maintenance tasks
   */
  scheduleMaintenanceTasks() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[24]++;
    cov_6eh6untbt().s[83]++;
    for (const task of this.maintenanceTasks) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[84]++;
      if (task.enabled) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[20][0]++;
        cov_6eh6untbt().s[85]++;
        cron.schedule(task.schedule, async () => {
          /* istanbul ignore next */
          cov_6eh6untbt().f[25]++;
          cov_6eh6untbt().s[86]++;
          logger_1.logger.info(`🔧 Running maintenance task: ${task.name}`);
          /* istanbul ignore next */
          cov_6eh6untbt().s[87]++;
          try {
            /* istanbul ignore next */
            cov_6eh6untbt().s[88]++;
            await task.action();
            /* istanbul ignore next */
            cov_6eh6untbt().s[89]++;
            task.lastRun = new Date();
            /* istanbul ignore next */
            cov_6eh6untbt().s[90]++;
            logger_1.logger.info(`✅ Maintenance task completed: ${task.name}`);
          } catch (error) {
            /* istanbul ignore next */
            cov_6eh6untbt().s[91]++;
            logger_1.logger.error(`❌ Maintenance task failed: ${task.name}`, error);
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[20][1]++;
      }
    }
  }
  /**
   * Start health checks
   */
  startHealthChecks() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[26]++;
    cov_6eh6untbt().s[92]++;
    // Health check every 5 minutes
    cron.schedule('*/5 * * * *', async () => {
      /* istanbul ignore next */
      cov_6eh6untbt().f[27]++;
      cov_6eh6untbt().s[93]++;
      try {
        /* istanbul ignore next */
        cov_6eh6untbt().s[94]++;
        await this.performHealthCheck();
      } catch (error) {
        /* istanbul ignore next */
        cov_6eh6untbt().s[95]++;
        logger_1.logger.error('Health check failed:', error);
      }
    });
  }
  /**
   * Collect system and application metrics
   */
  async collectMetrics() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[28]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[96]++, new Date());
    // System metrics
    const systemMetrics =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[97]++, await this.collectSystemMetrics());
    // Application metrics
    const applicationMetrics =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[98]++, await this.collectApplicationMetrics());
    // Trading metrics
    const tradingMetrics =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[99]++, await this.collectTradingMetrics());
    // Security metrics
    const securityMetrics =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[100]++, await this.collectSecurityMetrics());
    /* istanbul ignore next */
    cov_6eh6untbt().s[101]++;
    return {
      timestamp,
      system: systemMetrics,
      application: applicationMetrics,
      trading: tradingMetrics,
      security: securityMetrics
    };
  }
  /**
   * Collect system metrics
   */
  async collectSystemMetrics() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[29]++;
    cov_6eh6untbt().s[102]++;
    try {
      // CPU metrics
      const cpuUsage =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[103]++, parseFloat((0, child_process_1.execSync)("top -bn1 | grep 'Cpu(s)' | awk '{print $2}' | cut -d'%' -f1", {
        encoding: 'utf-8'
      }).trim()));
      const loadAverage =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[104]++,
      /* istanbul ignore next */
      (cov_6eh6untbt().b[21][0]++, (0, child_process_1.execSync)('uptime', {
        encoding: 'utf-8'
      }).match(/load average: ([\d.]+), ([\d.]+), ([\d.]+)/)?.slice(1).map(Number)) ||
      /* istanbul ignore next */
      (cov_6eh6untbt().b[21][1]++, [0, 0, 0]));
      // Temperature (if available)
      let temperature =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[105]++, 0);
      /* istanbul ignore next */
      cov_6eh6untbt().s[106]++;
      try {
        /* istanbul ignore next */
        cov_6eh6untbt().s[107]++;
        temperature =
        /* istanbul ignore next */
        (cov_6eh6untbt().b[22][0]++, parseFloat((0, child_process_1.execSync)("sensors | grep 'Core 0' | awk '{print $3}' | cut -d'+' -f2 | cut -d'°' -f1", {
          encoding: 'utf-8'
        }).trim())) ||
        /* istanbul ignore next */
        (cov_6eh6untbt().b[22][1]++, 0);
      } catch {
        // Temperature sensor not available
      }
      // Memory metrics
      const memInfo =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[108]++, (0, child_process_1.execSync)('free -b', {
        encoding: 'utf-8'
      }).split('\n')[1].split(/\s+/));
      const memTotal =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[109]++, parseInt(memInfo[1]));
      const memUsed =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[110]++, parseInt(memInfo[2]));
      const memAvailable =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[111]++, parseInt(memInfo[6]));
      // Disk metrics
      const diskInfo =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[112]++, (0, child_process_1.execSync)("df -B1 / | tail -1", {
        encoding: 'utf-8'
      }).split(/\s+/));
      const diskTotal =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[113]++, parseInt(diskInfo[1]));
      const diskUsed =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[114]++, parseInt(diskInfo[2]));
      const diskAvailable =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[115]++, parseInt(diskInfo[3]));
      // Network metrics (simplified)
      let networkMetrics =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[116]++, {
        bytesIn: 0,
        bytesOut: 0,
        packetsIn: 0,
        packetsOut: 0
      });
      /* istanbul ignore next */
      cov_6eh6untbt().s[117]++;
      try {
        const netStats =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[118]++, (0, child_process_1.execSync)("cat /proc/net/dev | grep eth0 || cat /proc/net/dev | grep wlan0 || echo '0 0 0 0'", {
          encoding: 'utf-8'
        }).trim());
        /* istanbul ignore next */
        cov_6eh6untbt().s[119]++;
        if (netStats) {
          /* istanbul ignore next */
          cov_6eh6untbt().b[23][0]++;
          const stats =
          /* istanbul ignore next */
          (cov_6eh6untbt().s[120]++, netStats.split(/\s+/));
          /* istanbul ignore next */
          cov_6eh6untbt().s[121]++;
          networkMetrics = {
            bytesIn:
            /* istanbul ignore next */
            (cov_6eh6untbt().b[24][0]++, parseInt(stats[1])) ||
            /* istanbul ignore next */
            (cov_6eh6untbt().b[24][1]++, 0),
            bytesOut:
            /* istanbul ignore next */
            (cov_6eh6untbt().b[25][0]++, parseInt(stats[9])) ||
            /* istanbul ignore next */
            (cov_6eh6untbt().b[25][1]++, 0),
            packetsIn:
            /* istanbul ignore next */
            (cov_6eh6untbt().b[26][0]++, parseInt(stats[2])) ||
            /* istanbul ignore next */
            (cov_6eh6untbt().b[26][1]++, 0),
            packetsOut:
            /* istanbul ignore next */
            (cov_6eh6untbt().b[27][0]++, parseInt(stats[10])) ||
            /* istanbul ignore next */
            (cov_6eh6untbt().b[27][1]++, 0)
          };
        } else
        /* istanbul ignore next */
        {
          cov_6eh6untbt().b[23][1]++;
        }
      } catch {
        // Network stats not available
      }
      /* istanbul ignore next */
      cov_6eh6untbt().s[122]++;
      return {
        cpu: {
          usage: cpuUsage,
          temperature,
          loadAverage
        },
        memory: {
          total: memTotal,
          used: memUsed,
          available: memAvailable,
          percentage: memUsed / memTotal * 100
        },
        disk: {
          total: diskTotal,
          used: diskUsed,
          available: diskAvailable,
          percentage: diskUsed / diskTotal * 100
        },
        network: networkMetrics
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[123]++;
      logger_1.logger.error('Error collecting system metrics:', error);
      /* istanbul ignore next */
      cov_6eh6untbt().s[124]++;
      throw error;
    }
  }
  /**
   * Collect application metrics
   */
  async collectApplicationMetrics() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[30]++;
    const processes =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[125]++, []);
    let apiHealth =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[126]++, false);
    let dashboardHealth =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[127]++, false);
    let tunnelHealth =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[128]++, false);
    let responseTime =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[129]++, 0);
    let errorRate =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[130]++, 0);
    /* istanbul ignore next */
    cov_6eh6untbt().s[131]++;
    try {
      // PM2 process metrics
      const pm2List =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[132]++, (0, child_process_1.execSync)('pm2 jlist', {
        encoding: 'utf-8'
      }));
      const processData =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[133]++, JSON.parse(pm2List));
      /* istanbul ignore next */
      cov_6eh6untbt().s[134]++;
      for (const proc of processData) {
        /* istanbul ignore next */
        cov_6eh6untbt().s[135]++;
        processes.push({
          name: proc.name,
          pid: proc.pid,
          status: proc.pm2_env.status,
          cpu: proc.monit.cpu,
          memory: proc.monit.memory,
          uptime: Date.now() - proc.pm2_env.pm_uptime,
          restarts: proc.pm2_env.restart_time
        });
      }
      // API health check
      /* istanbul ignore next */
      cov_6eh6untbt().s[136]++;
      try {
        const startTime =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[137]++, Date.now());
        /* istanbul ignore next */
        cov_6eh6untbt().s[138]++;
        (0, child_process_1.execSync)('curl -f http://localhost:3001/api/v1/health', {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_6eh6untbt().s[139]++;
        responseTime = Date.now() - startTime;
        /* istanbul ignore next */
        cov_6eh6untbt().s[140]++;
        apiHealth = true;
      } catch {
        /* istanbul ignore next */
        cov_6eh6untbt().s[141]++;
        apiHealth = false;
      }
      // Dashboard health check
      /* istanbul ignore next */
      cov_6eh6untbt().s[142]++;
      try {
        /* istanbul ignore next */
        cov_6eh6untbt().s[143]++;
        (0, child_process_1.execSync)('curl -f http://localhost:3002', {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_6eh6untbt().s[144]++;
        dashboardHealth = true;
      } catch {
        /* istanbul ignore next */
        cov_6eh6untbt().s[145]++;
        dashboardHealth = false;
      }
      // Tunnel health check (simplified)
      /* istanbul ignore next */
      cov_6eh6untbt().s[146]++;
      tunnelHealth = processes.some(p => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[31]++;
        cov_6eh6untbt().s[147]++;
        return /* istanbul ignore next */(cov_6eh6untbt().b[28][0]++, p.name.includes('tunnel')) &&
        /* istanbul ignore next */
        (cov_6eh6untbt().b[28][1]++, p.status === 'online');
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[148]++;
      logger_1.logger.error('Error collecting application metrics:', error);
    }
    /* istanbul ignore next */
    cov_6eh6untbt().s[149]++;
    return {
      processes,
      apiHealth,
      dashboardHealth,
      tunnelHealth,
      responseTime,
      errorRate
    };
  }
  /**
   * Collect trading metrics
   */
  async collectTradingMetrics() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[32]++;
    cov_6eh6untbt().s[150]++;
    // This would typically query the database for trading data
    // For now, return default values
    return {
      activeTrades: 0,
      totalPnL: 0,
      dailyPnL: 0,
      winRate: 0,
      riskExposure: 0
    };
  }
  /**
   * Collect security metrics
   */
  async collectSecurityMetrics() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[33]++;
    let failedLogins =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[151]++, 0);
    let suspiciousActivities =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[152]++, 0);
    let firewallBlocks =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[153]++, 0);
    /* istanbul ignore next */
    cov_6eh6untbt().s[154]++;
    try {
      /* istanbul ignore next */
      cov_6eh6untbt().s[155]++;
      // Count failed login attempts from auth.log
      if ((0, fs_1.existsSync)('/var/log/auth.log')) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[29][0]++;
        const authLog =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[156]++, (0, child_process_1.execSync)("grep 'Failed password' /var/log/auth.log | wc -l", {
          encoding: 'utf-8'
        }));
        /* istanbul ignore next */
        cov_6eh6untbt().s[157]++;
        failedLogins =
        /* istanbul ignore next */
        (cov_6eh6untbt().b[30][0]++, parseInt(authLog.trim())) ||
        /* istanbul ignore next */
        (cov_6eh6untbt().b[30][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[29][1]++;
      }
      // Count firewall blocks
      cov_6eh6untbt().s[158]++;
      try {
        const ufwLog =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[159]++, (0, child_process_1.execSync)("grep 'UFW BLOCK' /var/log/ufw.log | wc -l", {
          encoding: 'utf-8'
        }));
        /* istanbul ignore next */
        cov_6eh6untbt().s[160]++;
        firewallBlocks =
        /* istanbul ignore next */
        (cov_6eh6untbt().b[31][0]++, parseInt(ufwLog.trim())) ||
        /* istanbul ignore next */
        (cov_6eh6untbt().b[31][1]++, 0);
      } catch {
        // UFW log not available
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[161]++;
      logger_1.logger.error('Error collecting security metrics:', error);
    }
    /* istanbul ignore next */
    cov_6eh6untbt().s[162]++;
    return {
      failedLogins,
      suspiciousActivities,
      firewallBlocks
    };
  }
  /**
   * Check for alerts based on metrics
   */
  async checkAlerts(metrics) {
    /* istanbul ignore next */
    cov_6eh6untbt().f[34]++;
    const alerts =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[163]++, []);
    // CPU alerts
    /* istanbul ignore next */
    cov_6eh6untbt().s[164]++;
    if (metrics.system.cpu.usage > this.alertThresholds.cpu.critical) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[32][0]++;
      cov_6eh6untbt().s[165]++;
      alerts.push(`CRITICAL: CPU usage is ${metrics.system.cpu.usage.toFixed(1)}%`);
    } else {
      /* istanbul ignore next */
      cov_6eh6untbt().b[32][1]++;
      cov_6eh6untbt().s[166]++;
      if (metrics.system.cpu.usage > this.alertThresholds.cpu.warning) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[33][0]++;
        cov_6eh6untbt().s[167]++;
        alerts.push(`WARNING: CPU usage is ${metrics.system.cpu.usage.toFixed(1)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[33][1]++;
      }
    }
    // Memory alerts
    /* istanbul ignore next */
    cov_6eh6untbt().s[168]++;
    if (metrics.system.memory.percentage > this.alertThresholds.memory.critical) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[34][0]++;
      cov_6eh6untbt().s[169]++;
      alerts.push(`CRITICAL: Memory usage is ${metrics.system.memory.percentage.toFixed(1)}%`);
    } else {
      /* istanbul ignore next */
      cov_6eh6untbt().b[34][1]++;
      cov_6eh6untbt().s[170]++;
      if (metrics.system.memory.percentage > this.alertThresholds.memory.warning) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[35][0]++;
        cov_6eh6untbt().s[171]++;
        alerts.push(`WARNING: Memory usage is ${metrics.system.memory.percentage.toFixed(1)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[35][1]++;
      }
    }
    // Disk alerts
    /* istanbul ignore next */
    cov_6eh6untbt().s[172]++;
    if (metrics.system.disk.percentage > this.alertThresholds.disk.critical) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[36][0]++;
      cov_6eh6untbt().s[173]++;
      alerts.push(`CRITICAL: Disk usage is ${metrics.system.disk.percentage.toFixed(1)}%`);
    } else {
      /* istanbul ignore next */
      cov_6eh6untbt().b[36][1]++;
      cov_6eh6untbt().s[174]++;
      if (metrics.system.disk.percentage > this.alertThresholds.disk.warning) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[37][0]++;
        cov_6eh6untbt().s[175]++;
        alerts.push(`WARNING: Disk usage is ${metrics.system.disk.percentage.toFixed(1)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[37][1]++;
      }
    }
    // Temperature alerts
    /* istanbul ignore next */
    cov_6eh6untbt().s[176]++;
    if (metrics.system.cpu.temperature > this.alertThresholds.temperature.critical) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[38][0]++;
      cov_6eh6untbt().s[177]++;
      alerts.push(`CRITICAL: CPU temperature is ${metrics.system.cpu.temperature}°C`);
    } else {
      /* istanbul ignore next */
      cov_6eh6untbt().b[38][1]++;
      cov_6eh6untbt().s[178]++;
      if (metrics.system.cpu.temperature > this.alertThresholds.temperature.warning) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[39][0]++;
        cov_6eh6untbt().s[179]++;
        alerts.push(`WARNING: CPU temperature is ${metrics.system.cpu.temperature}°C`);
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[39][1]++;
      }
    }
    // Application health alerts
    /* istanbul ignore next */
    cov_6eh6untbt().s[180]++;
    if (!metrics.application.apiHealth) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[40][0]++;
      cov_6eh6untbt().s[181]++;
      alerts.push('CRITICAL: API service is not responding');
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[40][1]++;
    }
    cov_6eh6untbt().s[182]++;
    if (!metrics.application.tunnelHealth) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[41][0]++;
      cov_6eh6untbt().s[183]++;
      alerts.push('WARNING: SSH tunnel may be down');
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[41][1]++;
    }
    // Process alerts
    const failedProcesses =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[184]++, metrics.application.processes.filter(p => {
      /* istanbul ignore next */
      cov_6eh6untbt().f[35]++;
      cov_6eh6untbt().s[185]++;
      return p.status !== 'online';
    }));
    /* istanbul ignore next */
    cov_6eh6untbt().s[186]++;
    if (failedProcesses.length > 0) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[42][0]++;
      cov_6eh6untbt().s[187]++;
      alerts.push(`WARNING: ${failedProcesses.length} processes are not running`);
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[42][1]++;
    }
    // Send alerts if any
    cov_6eh6untbt().s[188]++;
    if (alerts.length > 0) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[43][0]++;
      cov_6eh6untbt().s[189]++;
      await this.sendAlerts(alerts);
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[43][1]++;
    }
  }
  /**
   * Send alerts via configured channels
   */
  async sendAlerts(alerts) {
    /* istanbul ignore next */
    cov_6eh6untbt().f[36]++;
    const alertMessage =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[190]++, `🚨 AI Crypto Trading Agent Alerts:\n${alerts.join('\n')}`);
    /* istanbul ignore next */
    cov_6eh6untbt().s[191]++;
    logger_1.logger.warn('System alerts:', alerts);
    // Here you would integrate with notification services
    // For now, just log the alerts
    // Save alerts to file
    const alertsDir =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[192]++, (0, path_1.join)(process.cwd(), 'logs', 'alerts'));
    /* istanbul ignore next */
    cov_6eh6untbt().s[193]++;
    if (!(0, fs_1.existsSync)(alertsDir)) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[44][0]++;
      cov_6eh6untbt().s[194]++;
      (0, fs_1.mkdirSync)(alertsDir, {
        recursive: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[44][1]++;
    }
    const alertFile =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[195]++, (0, path_1.join)(alertsDir, `alerts-${new Date().toISOString().split('T')[0]}.log`));
    const alertEntry =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[196]++, `${new Date().toISOString()}: ${alertMessage}\n`);
    /* istanbul ignore next */
    cov_6eh6untbt().s[197]++;
    try {
      /* istanbul ignore next */
      cov_6eh6untbt().s[198]++;
      (0, fs_1.writeFileSync)(alertFile, alertEntry, {
        flag: 'a'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[199]++;
      logger_1.logger.error('Failed to write alert to file:', error);
    }
  }
  /**
   * Perform comprehensive health check
   */
  async performHealthCheck() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[37]++;
    const healthStatus =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[200]++, {
      timestamp: new Date(),
      overall: 'HEALTHY',
      checks: {}
    });
    /* istanbul ignore next */
    cov_6eh6untbt().s[201]++;
    try {
      // Check system resources
      const metrics =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[202]++, await this.collectMetrics());
      /* istanbul ignore next */
      cov_6eh6untbt().s[203]++;
      healthStatus.checks['system'] = {
        status:
        /* istanbul ignore next */
        (cov_6eh6untbt().b[46][0]++, metrics.system.cpu.usage < 80) &&
        /* istanbul ignore next */
        (cov_6eh6untbt().b[46][1]++, metrics.system.memory.percentage < 85) ?
        /* istanbul ignore next */
        (cov_6eh6untbt().b[45][0]++, 'HEALTHY') :
        /* istanbul ignore next */
        (cov_6eh6untbt().b[45][1]++, 'WARNING'),
        details: {
          cpu: `${metrics.system.cpu.usage.toFixed(1)}%`,
          memory: `${metrics.system.memory.percentage.toFixed(1)}%`,
          disk: `${metrics.system.disk.percentage.toFixed(1)}%`
        }
      };
      // Check application services
      /* istanbul ignore next */
      cov_6eh6untbt().s[204]++;
      healthStatus.checks['services'] = {
        status:
        /* istanbul ignore next */
        (cov_6eh6untbt().b[48][0]++, metrics.application.apiHealth) &&
        /* istanbul ignore next */
        (cov_6eh6untbt().b[48][1]++, metrics.application.tunnelHealth) ?
        /* istanbul ignore next */
        (cov_6eh6untbt().b[47][0]++, 'HEALTHY') :
        /* istanbul ignore next */
        (cov_6eh6untbt().b[47][1]++, 'CRITICAL'),
        details: {
          api: metrics.application.apiHealth ?
          /* istanbul ignore next */
          (cov_6eh6untbt().b[49][0]++, 'UP') :
          /* istanbul ignore next */
          (cov_6eh6untbt().b[49][1]++, 'DOWN'),
          dashboard: metrics.application.dashboardHealth ?
          /* istanbul ignore next */
          (cov_6eh6untbt().b[50][0]++, 'UP') :
          /* istanbul ignore next */
          (cov_6eh6untbt().b[50][1]++, 'DOWN'),
          tunnel: metrics.application.tunnelHealth ?
          /* istanbul ignore next */
          (cov_6eh6untbt().b[51][0]++, 'UP') :
          /* istanbul ignore next */
          (cov_6eh6untbt().b[51][1]++, 'DOWN')
        }
      };
      // Check database
      const dbHealthy =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[205]++, await database_setup_1.databaseSetup.validateIntegrity());
      /* istanbul ignore next */
      cov_6eh6untbt().s[206]++;
      healthStatus.checks['database'] = {
        status: dbHealthy ?
        /* istanbul ignore next */
        (cov_6eh6untbt().b[52][0]++, 'HEALTHY') :
        /* istanbul ignore next */
        (cov_6eh6untbt().b[52][1]++, 'CRITICAL'),
        details: {
          integrity: dbHealthy ?
          /* istanbul ignore next */
          (cov_6eh6untbt().b[53][0]++, 'OK') :
          /* istanbul ignore next */
          (cov_6eh6untbt().b[53][1]++, 'FAILED')
        }
      };
      // Determine overall status
      const statuses =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[207]++, Object.values(healthStatus.checks).map(check => {
        /* istanbul ignore next */
        cov_6eh6untbt().f[38]++;
        cov_6eh6untbt().s[208]++;
        return check.status;
      }));
      /* istanbul ignore next */
      cov_6eh6untbt().s[209]++;
      if (statuses.includes('CRITICAL')) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[54][0]++;
        cov_6eh6untbt().s[210]++;
        healthStatus.overall = 'CRITICAL';
      } else {
        /* istanbul ignore next */
        cov_6eh6untbt().b[54][1]++;
        cov_6eh6untbt().s[211]++;
        if (statuses.includes('WARNING')) {
          /* istanbul ignore next */
          cov_6eh6untbt().b[55][0]++;
          cov_6eh6untbt().s[212]++;
          healthStatus.overall = 'WARNING';
        } else
        /* istanbul ignore next */
        {
          cov_6eh6untbt().b[55][1]++;
        }
      }
      // Save health status
      const healthFile =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[213]++, (0, path_1.join)(process.cwd(), 'logs', 'health-status.json'));
      /* istanbul ignore next */
      cov_6eh6untbt().s[214]++;
      (0, fs_1.writeFileSync)(healthFile, JSON.stringify(healthStatus, null, 2));
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[215]++;
      logger_1.logger.error('Health check failed:', error);
      /* istanbul ignore next */
      cov_6eh6untbt().s[216]++;
      healthStatus.overall = 'ERROR';
      /* istanbul ignore next */
      cov_6eh6untbt().s[217]++;
      healthStatus.checks['error'] = {
        status: 'ERROR',
        details: error.message
      };
    }
  }
  /**
   * Maintenance task implementations
   */
  async rotateLogFiles() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[39]++;
    cov_6eh6untbt().s[218]++;
    logger_1.logger.info('🔄 Rotating log files...');
    /* istanbul ignore next */
    cov_6eh6untbt().s[219]++;
    try {
      /* istanbul ignore next */
      cov_6eh6untbt().s[220]++;
      // Use logrotate if available
      (0, child_process_1.execSync)('sudo logrotate -f /etc/logrotate.d/ai-crypto-trading', {
        stdio: 'pipe'
      });
    } catch {
      // Manual log rotation
      const logsDir =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[221]++, (0, path_1.join)(process.cwd(), 'logs'));
      /* istanbul ignore next */
      cov_6eh6untbt().s[222]++;
      if ((0, fs_1.existsSync)(logsDir)) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[56][0]++;
        const timestamp =
        /* istanbul ignore next */
        (cov_6eh6untbt().s[223]++, new Date().toISOString().split('T')[0]);
        /* istanbul ignore next */
        cov_6eh6untbt().s[224]++;
        (0, child_process_1.execSync)(`find ${logsDir} -name "*.log" -size +100M -exec gzip {} \\;`);
        /* istanbul ignore next */
        cov_6eh6untbt().s[225]++;
        (0, child_process_1.execSync)(`find ${logsDir} -name "*.gz" -mtime +30 -delete`);
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[56][1]++;
      }
    }
    /* istanbul ignore next */
    cov_6eh6untbt().s[226]++;
    logger_1.logger.info('✅ Log rotation completed');
  }
  async performSystemCleanup() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[40]++;
    cov_6eh6untbt().s[227]++;
    logger_1.logger.info('🧹 Performing system cleanup...');
    /* istanbul ignore next */
    cov_6eh6untbt().s[228]++;
    try {
      /* istanbul ignore next */
      cov_6eh6untbt().s[229]++;
      // Clean package cache
      (0, child_process_1.execSync)('sudo apt autoremove -y', {
        stdio: 'pipe'
      });
      /* istanbul ignore next */
      cov_6eh6untbt().s[230]++;
      (0, child_process_1.execSync)('sudo apt autoclean', {
        stdio: 'pipe'
      });
      // Clean temporary files
      /* istanbul ignore next */
      cov_6eh6untbt().s[231]++;
      (0, child_process_1.execSync)('sudo find /tmp -type f -atime +7 -delete', {
        stdio: 'pipe'
      });
      // Clean old logs
      /* istanbul ignore next */
      cov_6eh6untbt().s[232]++;
      (0, child_process_1.execSync)('sudo journalctl --vacuum-time=30d', {
        stdio: 'pipe'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[233]++;
      logger_1.logger.error('System cleanup error:', error);
    }
    /* istanbul ignore next */
    cov_6eh6untbt().s[234]++;
    logger_1.logger.info('✅ System cleanup completed');
  }
  async performSecurityScan() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[41]++;
    cov_6eh6untbt().s[235]++;
    logger_1.logger.info('🔒 Performing security scan...');
    /* istanbul ignore next */
    cov_6eh6untbt().s[236]++;
    try {
      /* istanbul ignore next */
      cov_6eh6untbt().s[237]++;
      // Run npm audit
      (0, child_process_1.execSync)('npm audit --audit-level moderate', {
        stdio: 'pipe'
      });
      // Check for security updates
      /* istanbul ignore next */
      cov_6eh6untbt().s[238]++;
      (0, child_process_1.execSync)('sudo apt list --upgradable | grep -i security', {
        stdio: 'pipe'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[239]++;
      logger_1.logger.warn('Security scan completed with warnings');
    }
    /* istanbul ignore next */
    cov_6eh6untbt().s[240]++;
    logger_1.logger.info('✅ Security scan completed');
  }
  async optimizePerformance() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[42]++;
    cov_6eh6untbt().s[241]++;
    logger_1.logger.info('⚡ Optimizing system performance...');
    /* istanbul ignore next */
    cov_6eh6untbt().s[242]++;
    try {
      /* istanbul ignore next */
      cov_6eh6untbt().s[243]++;
      // Clear memory caches
      (0, child_process_1.execSync)('sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches', {
        stdio: 'pipe'
      });
      // Optimize database
      /* istanbul ignore next */
      cov_6eh6untbt().s[244]++;
      await database_setup_1.databaseSetup.run('VACUUM');
      /* istanbul ignore next */
      cov_6eh6untbt().s[245]++;
      await database_setup_1.databaseSetup.run('ANALYZE');
    } catch (error) {
      /* istanbul ignore next */
      cov_6eh6untbt().s[246]++;
      logger_1.logger.error('Performance optimization error:', error);
    }
    /* istanbul ignore next */
    cov_6eh6untbt().s[247]++;
    logger_1.logger.info('✅ Performance optimization completed');
  }
  async generateHealthReport() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[43]++;
    cov_6eh6untbt().s[248]++;
    logger_1.logger.info('📊 Generating health report...');
    const report =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[249]++, {
      timestamp: new Date(),
      system: await this.collectSystemMetrics(),
      application: await this.collectApplicationMetrics(),
      maintenance: {
        lastTasks: this.maintenanceTasks.map(task => {
          /* istanbul ignore next */
          cov_6eh6untbt().f[44]++;
          cov_6eh6untbt().s[250]++;
          return {
            name: task.name,
            lastRun: task.lastRun,
            enabled: task.enabled
          };
        })
      },
      recommendations: this.generateRecommendations()
    });
    const reportFile =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[251]++, (0, path_1.join)(process.cwd(), 'logs', `health-report-${new Date().toISOString().split('T')[0]}.json`));
    /* istanbul ignore next */
    cov_6eh6untbt().s[252]++;
    (0, fs_1.writeFileSync)(reportFile, JSON.stringify(report, null, 2));
    /* istanbul ignore next */
    cov_6eh6untbt().s[253]++;
    logger_1.logger.info(`✅ Health report generated: ${reportFile}`);
  }
  async cleanupOldBackups() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[45]++;
    cov_6eh6untbt().s[254]++;
    logger_1.logger.info('🗑️ Cleaning up old backups...');
    const backupsDir =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[255]++, (0, path_1.join)(process.cwd(), 'backups'));
    /* istanbul ignore next */
    cov_6eh6untbt().s[256]++;
    if ((0, fs_1.existsSync)(backupsDir)) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[57][0]++;
      cov_6eh6untbt().s[257]++;
      // Keep backups for 30 days
      (0, child_process_1.execSync)(`find ${backupsDir} -type f -mtime +30 -delete`, {
        stdio: 'pipe'
      });
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[57][1]++;
    }
    cov_6eh6untbt().s[258]++;
    logger_1.logger.info('✅ Backup cleanup completed');
  }
  generateRecommendations() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[46]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_6eh6untbt().s[259]++, []);
    /* istanbul ignore next */
    cov_6eh6untbt().s[260]++;
    if (this.metrics.length > 0) {
      /* istanbul ignore next */
      cov_6eh6untbt().b[58][0]++;
      const latestMetrics =
      /* istanbul ignore next */
      (cov_6eh6untbt().s[261]++, this.metrics[this.metrics.length - 1]);
      /* istanbul ignore next */
      cov_6eh6untbt().s[262]++;
      if (latestMetrics.system.cpu.usage > 70) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[59][0]++;
        cov_6eh6untbt().s[263]++;
        recommendations.push('Consider optimizing CPU-intensive processes');
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[59][1]++;
      }
      cov_6eh6untbt().s[264]++;
      if (latestMetrics.system.memory.percentage > 80) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[60][0]++;
        cov_6eh6untbt().s[265]++;
        recommendations.push('Monitor memory usage and consider adding more RAM');
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[60][1]++;
      }
      cov_6eh6untbt().s[266]++;
      if (latestMetrics.system.disk.percentage > 80) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[61][0]++;
        cov_6eh6untbt().s[267]++;
        recommendations.push('Clean up disk space or add more storage');
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[61][1]++;
      }
      cov_6eh6untbt().s[268]++;
      if (!latestMetrics.application.apiHealth) {
        /* istanbul ignore next */
        cov_6eh6untbt().b[62][0]++;
        cov_6eh6untbt().s[269]++;
        recommendations.push('Investigate API service issues');
      } else
      /* istanbul ignore next */
      {
        cov_6eh6untbt().b[62][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_6eh6untbt().b[58][1]++;
    }
    cov_6eh6untbt().s[270]++;
    return recommendations;
  }
  /**
   * Get current metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[47]++;
    cov_6eh6untbt().s[271]++;
    return this.metrics;
  }
  /**
   * Get maintenance task status
   */
  getMaintenanceStatus() {
    /* istanbul ignore next */
    cov_6eh6untbt().f[48]++;
    cov_6eh6untbt().s[272]++;
    return this.maintenanceTasks;
  }
}
/* istanbul ignore next */
cov_6eh6untbt().s[273]++;
exports.MonitoringAutomation = MonitoringAutomation;
// Export singleton instance
/* istanbul ignore next */
cov_6eh6untbt().s[274]++;
exports.monitoringAutomation = new MonitoringAutomation();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNmVoNnVudGJ0IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiY2hpbGRfcHJvY2Vzc18xIiwicmVxdWlyZSIsImZzXzEiLCJwYXRoXzEiLCJsb2dnZXJfMSIsImRhdGFiYXNlX3NldHVwXzEiLCJjcm9uIiwiX19pbXBvcnRTdGFyIiwiTW9uaXRvcmluZ0F1dG9tYXRpb24iLCJtZXRyaWNzIiwibWFpbnRlbmFuY2VUYXNrcyIsImFsZXJ0VGhyZXNob2xkcyIsImlzUnVubmluZyIsImNvbnN0cnVjdG9yIiwiaW5pdGlhbGl6ZUFsZXJ0VGhyZXNob2xkcyIsImluaXRpYWxpemVNYWludGVuYW5jZVRhc2tzIiwibG9nZ2VyIiwid2FybiIsImluZm8iLCJzdGFydE1ldHJpY0NvbGxlY3Rpb24iLCJzY2hlZHVsZU1haW50ZW5hbmNlVGFza3MiLCJzdGFydEhlYWx0aENoZWNrcyIsInN0b3AiLCJnZXRUYXNrcyIsImZvckVhY2giLCJ0YXNrIiwiY3B1Iiwid2FybmluZyIsImNyaXRpY2FsIiwibWVtb3J5IiwiZGlzayIsInRlbXBlcmF0dXJlIiwicmVzcG9uc2VUaW1lIiwiZXJyb3JSYXRlIiwiZGVzY3JpcHRpb24iLCJzY2hlZHVsZSIsImVuYWJsZWQiLCJhY3Rpb24iLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJyZXBsYWNlIiwiYmFja3VwUGF0aCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwiZGF0YWJhc2VTZXR1cCIsImJhY2t1cCIsInJvdGF0ZUxvZ0ZpbGVzIiwicGVyZm9ybVN5c3RlbUNsZWFudXAiLCJwZXJmb3JtU2VjdXJpdHlTY2FuIiwib3B0aW1pemVQZXJmb3JtYW5jZSIsImdlbmVyYXRlSGVhbHRoUmVwb3J0IiwiY2xlYW51cE9sZEJhY2t1cHMiLCJjb2xsZWN0TWV0cmljcyIsInB1c2giLCJsZW5ndGgiLCJzbGljZSIsImNoZWNrQWxlcnRzIiwiZXJyb3IiLCJsYXN0UnVuIiwicGVyZm9ybUhlYWx0aENoZWNrIiwic3lzdGVtTWV0cmljcyIsImNvbGxlY3RTeXN0ZW1NZXRyaWNzIiwiYXBwbGljYXRpb25NZXRyaWNzIiwiY29sbGVjdEFwcGxpY2F0aW9uTWV0cmljcyIsInRyYWRpbmdNZXRyaWNzIiwiY29sbGVjdFRyYWRpbmdNZXRyaWNzIiwic2VjdXJpdHlNZXRyaWNzIiwiY29sbGVjdFNlY3VyaXR5TWV0cmljcyIsInN5c3RlbSIsImFwcGxpY2F0aW9uIiwidHJhZGluZyIsInNlY3VyaXR5IiwiY3B1VXNhZ2UiLCJwYXJzZUZsb2F0IiwiZXhlY1N5bmMiLCJlbmNvZGluZyIsInRyaW0iLCJsb2FkQXZlcmFnZSIsIm1hdGNoIiwibWFwIiwiTnVtYmVyIiwibWVtSW5mbyIsInNwbGl0IiwibWVtVG90YWwiLCJwYXJzZUludCIsIm1lbVVzZWQiLCJtZW1BdmFpbGFibGUiLCJkaXNrSW5mbyIsImRpc2tUb3RhbCIsImRpc2tVc2VkIiwiZGlza0F2YWlsYWJsZSIsIm5ldHdvcmtNZXRyaWNzIiwiYnl0ZXNJbiIsImJ5dGVzT3V0IiwicGFja2V0c0luIiwicGFja2V0c091dCIsIm5ldFN0YXRzIiwic3RhdHMiLCJ1c2FnZSIsInRvdGFsIiwidXNlZCIsImF2YWlsYWJsZSIsInBlcmNlbnRhZ2UiLCJuZXR3b3JrIiwicHJvY2Vzc2VzIiwiYXBpSGVhbHRoIiwiZGFzaGJvYXJkSGVhbHRoIiwidHVubmVsSGVhbHRoIiwicG0yTGlzdCIsInByb2Nlc3NEYXRhIiwiSlNPTiIsInBhcnNlIiwicHJvYyIsInBpZCIsInN0YXR1cyIsInBtMl9lbnYiLCJtb25pdCIsInVwdGltZSIsIm5vdyIsInBtX3VwdGltZSIsInJlc3RhcnRzIiwicmVzdGFydF90aW1lIiwic3RhcnRUaW1lIiwic3RkaW8iLCJzb21lIiwicCIsImluY2x1ZGVzIiwiYWN0aXZlVHJhZGVzIiwidG90YWxQbkwiLCJkYWlseVBuTCIsIndpblJhdGUiLCJyaXNrRXhwb3N1cmUiLCJmYWlsZWRMb2dpbnMiLCJzdXNwaWNpb3VzQWN0aXZpdGllcyIsImZpcmV3YWxsQmxvY2tzIiwiZXhpc3RzU3luYyIsImF1dGhMb2ciLCJ1ZndMb2ciLCJhbGVydHMiLCJ0b0ZpeGVkIiwiZmFpbGVkUHJvY2Vzc2VzIiwiZmlsdGVyIiwic2VuZEFsZXJ0cyIsImFsZXJ0TWVzc2FnZSIsImFsZXJ0c0RpciIsIm1rZGlyU3luYyIsInJlY3Vyc2l2ZSIsImFsZXJ0RmlsZSIsImFsZXJ0RW50cnkiLCJ3cml0ZUZpbGVTeW5jIiwiZmxhZyIsImhlYWx0aFN0YXR1cyIsIm92ZXJhbGwiLCJjaGVja3MiLCJkZXRhaWxzIiwiYXBpIiwiZGFzaGJvYXJkIiwidHVubmVsIiwiZGJIZWFsdGh5IiwidmFsaWRhdGVJbnRlZ3JpdHkiLCJpbnRlZ3JpdHkiLCJzdGF0dXNlcyIsIk9iamVjdCIsInZhbHVlcyIsImNoZWNrIiwiaGVhbHRoRmlsZSIsInN0cmluZ2lmeSIsIm1lc3NhZ2UiLCJsb2dzRGlyIiwicnVuIiwicmVwb3J0IiwibWFpbnRlbmFuY2UiLCJsYXN0VGFza3MiLCJyZWNvbW1lbmRhdGlvbnMiLCJnZW5lcmF0ZVJlY29tbWVuZGF0aW9ucyIsInJlcG9ydEZpbGUiLCJiYWNrdXBzRGlyIiwibGF0ZXN0TWV0cmljcyIsImdldE1ldHJpY3MiLCJnZXRNYWludGVuYW5jZVN0YXR1cyIsImV4cG9ydHMiLCJtb25pdG9yaW5nQXV0b21hdGlvbiJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlja1xcRGVza3RvcFxcU21vb3RoU2FpbFxcc3JjXFxkZXBsb3ltZW50XFxtb25pdG9yaW5nLWF1dG9tYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAqIEFJIENSWVBUTyBUUkFESU5HIEFHRU5UIC0gTU9OSVRPUklORyBBTkQgTUFJTlRFTkFOQ0UgQVVUT01BVElPTlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBcclxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgY29tcHJlaGVuc2l2ZSBtb25pdG9yaW5nIGFuZCBhdXRvbWF0ZWQgbWFpbnRlbmFuY2VcclxuICogZm9yIHRoZSBBSSBjcnlwdG8gdHJhZGluZyBhZ2VudCBwcm9kdWN0aW9uIGRlcGxveW1lbnQuXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgZXhlY1N5bmMgfSBmcm9tICdjaGlsZF9wcm9jZXNzJztcclxuaW1wb3J0IHsgZXhpc3RzU3luYywgd3JpdGVGaWxlU3luYywgcmVhZEZpbGVTeW5jLCBta2RpclN5bmMgfSBmcm9tICdmcyc7XHJcbmltcG9ydCB7IGpvaW4gfSBmcm9tICdwYXRoJztcclxuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi4vY29yZS9sb2dnZXInO1xyXG5pbXBvcnQgeyBkYXRhYmFzZVNldHVwIH0gZnJvbSAnLi9kYXRhYmFzZS1zZXR1cCc7XHJcbmltcG9ydCAqIGFzIGNyb24gZnJvbSAnbm9kZS1jcm9uJztcclxuXHJcbmludGVyZmFjZSBNb25pdG9yaW5nTWV0cmljcyB7XHJcbiAgdGltZXN0YW1wOiBEYXRlO1xyXG4gIHN5c3RlbTogU3lzdGVtTWV0cmljcztcclxuICBhcHBsaWNhdGlvbjogQXBwbGljYXRpb25NZXRyaWNzO1xyXG4gIHRyYWRpbmc6IFRyYWRpbmdNZXRyaWNzO1xyXG4gIHNlY3VyaXR5OiBTZWN1cml0eU1ldHJpY3M7XHJcbn1cclxuXHJcbmludGVyZmFjZSBTeXN0ZW1NZXRyaWNzIHtcclxuICBjcHU6IHtcclxuICAgIHVzYWdlOiBudW1iZXI7XHJcbiAgICB0ZW1wZXJhdHVyZTogbnVtYmVyO1xyXG4gICAgbG9hZEF2ZXJhZ2U6IG51bWJlcltdO1xyXG4gIH07XHJcbiAgbWVtb3J5OiB7XHJcbiAgICB0b3RhbDogbnVtYmVyO1xyXG4gICAgdXNlZDogbnVtYmVyO1xyXG4gICAgYXZhaWxhYmxlOiBudW1iZXI7XHJcbiAgICBwZXJjZW50YWdlOiBudW1iZXI7XHJcbiAgfTtcclxuICBkaXNrOiB7XHJcbiAgICB0b3RhbDogbnVtYmVyO1xyXG4gICAgdXNlZDogbnVtYmVyO1xyXG4gICAgYXZhaWxhYmxlOiBudW1iZXI7XHJcbiAgICBwZXJjZW50YWdlOiBudW1iZXI7XHJcbiAgfTtcclxuICBuZXR3b3JrOiB7XHJcbiAgICBieXRlc0luOiBudW1iZXI7XHJcbiAgICBieXRlc091dDogbnVtYmVyO1xyXG4gICAgcGFja2V0c0luOiBudW1iZXI7XHJcbiAgICBwYWNrZXRzT3V0OiBudW1iZXI7XHJcbiAgfTtcclxufVxyXG5cclxuaW50ZXJmYWNlIEFwcGxpY2F0aW9uTWV0cmljcyB7XHJcbiAgcHJvY2Vzc2VzOiBQcm9jZXNzTWV0cmljW107XHJcbiAgYXBpSGVhbHRoOiBib29sZWFuO1xyXG4gIGRhc2hib2FyZEhlYWx0aDogYm9vbGVhbjtcclxuICB0dW5uZWxIZWFsdGg6IGJvb2xlYW47XHJcbiAgcmVzcG9uc2VUaW1lOiBudW1iZXI7XHJcbiAgZXJyb3JSYXRlOiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBQcm9jZXNzTWV0cmljIHtcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgcGlkOiBudW1iZXI7XHJcbiAgc3RhdHVzOiBzdHJpbmc7XHJcbiAgY3B1OiBudW1iZXI7XHJcbiAgbWVtb3J5OiBudW1iZXI7XHJcbiAgdXB0aW1lOiBudW1iZXI7XHJcbiAgcmVzdGFydHM6IG51bWJlcjtcclxufVxyXG5cclxuaW50ZXJmYWNlIFRyYWRpbmdNZXRyaWNzIHtcclxuICBhY3RpdmVUcmFkZXM6IG51bWJlcjtcclxuICB0b3RhbFBuTDogbnVtYmVyO1xyXG4gIGRhaWx5UG5MOiBudW1iZXI7XHJcbiAgd2luUmF0ZTogbnVtYmVyO1xyXG4gIHJpc2tFeHBvc3VyZTogbnVtYmVyO1xyXG4gIGxhc3RUcmFkZVRpbWU/OiBEYXRlO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgU2VjdXJpdHlNZXRyaWNzIHtcclxuICBmYWlsZWRMb2dpbnM6IG51bWJlcjtcclxuICBzdXNwaWNpb3VzQWN0aXZpdGllczogbnVtYmVyO1xyXG4gIGZpcmV3YWxsQmxvY2tzOiBudW1iZXI7XHJcbiAgbGFzdFNlY3VyaXR5U2Nhbj86IERhdGU7XHJcbn1cclxuXHJcbmludGVyZmFjZSBNYWludGVuYW5jZVRhc2sge1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG4gIHNjaGVkdWxlOiBzdHJpbmc7IC8vIGNyb24gZXhwcmVzc2lvblxyXG4gIGFjdGlvbjogKCkgPT4gUHJvbWlzZTx2b2lkPjtcclxuICBsYXN0UnVuPzogRGF0ZTtcclxuICBuZXh0UnVuPzogRGF0ZTtcclxuICBlbmFibGVkOiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTW9uaXRvcmluZ0F1dG9tYXRpb24ge1xyXG4gIHByaXZhdGUgbWV0cmljczogTW9uaXRvcmluZ01ldHJpY3NbXSA9IFtdO1xyXG4gIHByaXZhdGUgbWFpbnRlbmFuY2VUYXNrczogTWFpbnRlbmFuY2VUYXNrW10gPSBbXTtcclxuICBwcml2YXRlIGFsZXJ0VGhyZXNob2xkczogYW55O1xyXG4gIHByaXZhdGUgaXNSdW5uaW5nOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5pbml0aWFsaXplQWxlcnRUaHJlc2hvbGRzKCk7XHJcbiAgICB0aGlzLmluaXRpYWxpemVNYWludGVuYW5jZVRhc2tzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBtb25pdG9yaW5nIGFuZCBtYWludGVuYW5jZSBhdXRvbWF0aW9uXHJcbiAgICovXHJcbiAgYXN5bmMgc3RhcnQoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBpZiAodGhpcy5pc1J1bm5pbmcpIHtcclxuICAgICAgbG9nZ2VyLndhcm4oJ01vbml0b3JpbmcgYXV0b21hdGlvbiBpcyBhbHJlYWR5IHJ1bm5pbmcnKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxvZ2dlci5pbmZvKCfwn5SEIFN0YXJ0aW5nIG1vbml0b3JpbmcgYW5kIG1haW50ZW5hbmNlIGF1dG9tYXRpb24uLi4nKTtcclxuXHJcbiAgICAvLyBTdGFydCBtZXRyaWMgY29sbGVjdGlvblxyXG4gICAgdGhpcy5zdGFydE1ldHJpY0NvbGxlY3Rpb24oKTtcclxuXHJcbiAgICAvLyBTY2hlZHVsZSBtYWludGVuYW5jZSB0YXNrc1xyXG4gICAgdGhpcy5zY2hlZHVsZU1haW50ZW5hbmNlVGFza3MoKTtcclxuXHJcbiAgICAvLyBTdGFydCBoZWFsdGggY2hlY2tzXHJcbiAgICB0aGlzLnN0YXJ0SGVhbHRoQ2hlY2tzKCk7XHJcblxyXG4gICAgdGhpcy5pc1J1bm5pbmcgPSB0cnVlO1xyXG4gICAgbG9nZ2VyLmluZm8oJ+KchSBNb25pdG9yaW5nIGFuZCBtYWludGVuYW5jZSBhdXRvbWF0aW9uIHN0YXJ0ZWQnKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0b3AgbW9uaXRvcmluZyBhbmQgbWFpbnRlbmFuY2UgYXV0b21hdGlvblxyXG4gICAqL1xyXG4gIGFzeW5jIHN0b3AoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBpZiAoIXRoaXMuaXNSdW5uaW5nKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBsb2dnZXIuaW5mbygn8J+bkSBTdG9wcGluZyBtb25pdG9yaW5nIGFuZCBtYWludGVuYW5jZSBhdXRvbWF0aW9uLi4uJyk7XHJcblxyXG4gICAgLy8gU3RvcCBhbGwgY3JvbiBqb2JzXHJcbiAgICBjcm9uLmdldFRhc2tzKCkuZm9yRWFjaCh0YXNrID0+IHRhc2suc3RvcCgpKTtcclxuXHJcbiAgICB0aGlzLmlzUnVubmluZyA9IGZhbHNlO1xyXG4gICAgbG9nZ2VyLmluZm8oJ+KchSBNb25pdG9yaW5nIGFuZCBtYWludGVuYW5jZSBhdXRvbWF0aW9uIHN0b3BwZWQnKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEluaXRpYWxpemUgYWxlcnQgdGhyZXNob2xkc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgaW5pdGlhbGl6ZUFsZXJ0VGhyZXNob2xkcygpOiB2b2lkIHtcclxuICAgIHRoaXMuYWxlcnRUaHJlc2hvbGRzID0ge1xyXG4gICAgICBjcHU6IHtcclxuICAgICAgICB3YXJuaW5nOiA3MCxcclxuICAgICAgICBjcml0aWNhbDogODVcclxuICAgICAgfSxcclxuICAgICAgbWVtb3J5OiB7XHJcbiAgICAgICAgd2FybmluZzogODAsXHJcbiAgICAgICAgY3JpdGljYWw6IDkwXHJcbiAgICAgIH0sXHJcbiAgICAgIGRpc2s6IHtcclxuICAgICAgICB3YXJuaW5nOiA4MCxcclxuICAgICAgICBjcml0aWNhbDogOTBcclxuICAgICAgfSxcclxuICAgICAgdGVtcGVyYXR1cmU6IHtcclxuICAgICAgICB3YXJuaW5nOiA3MCxcclxuICAgICAgICBjcml0aWNhbDogODBcclxuICAgICAgfSxcclxuICAgICAgcmVzcG9uc2VUaW1lOiB7XHJcbiAgICAgICAgd2FybmluZzogNTAwMCxcclxuICAgICAgICBjcml0aWNhbDogMTAwMDBcclxuICAgICAgfSxcclxuICAgICAgZXJyb3JSYXRlOiB7XHJcbiAgICAgICAgd2FybmluZzogMC4wNSxcclxuICAgICAgICBjcml0aWNhbDogMC4xXHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWFsaXplIG1haW50ZW5hbmNlIHRhc2tzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBpbml0aWFsaXplTWFpbnRlbmFuY2VUYXNrcygpOiB2b2lkIHtcclxuICAgIHRoaXMubWFpbnRlbmFuY2VUYXNrcyA9IFtcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6ICdkYXRhYmFzZS1iYWNrdXAnLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnQ3JlYXRlIGRhdGFiYXNlIGJhY2t1cCcsXHJcbiAgICAgICAgc2NoZWR1bGU6ICcwIDIgKiAqIConLCAvLyBEYWlseSBhdCAyIEFNXHJcbiAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICBhY3Rpb246IGFzeW5jICgpID0+IHtcclxuICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5yZXBsYWNlKC9bOi5dL2csICctJyk7XHJcbiAgICAgICAgICBjb25zdCBiYWNrdXBQYXRoID0gam9pbihwcm9jZXNzLmN3ZCgpLCAnYmFja3VwcycsIGBkYi1iYWNrdXAtJHt0aW1lc3RhbXB9LmRiYCk7XHJcbiAgICAgICAgICBhd2FpdCBkYXRhYmFzZVNldHVwLmJhY2t1cChiYWNrdXBQYXRoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBuYW1lOiAnbG9nLXJvdGF0aW9uJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ1JvdGF0ZSBhbmQgY29tcHJlc3Mgb2xkIGxvZ3MnLFxyXG4gICAgICAgIHNjaGVkdWxlOiAnMCAxICogKiAqJywgLy8gRGFpbHkgYXQgMSBBTVxyXG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgYWN0aW9uOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICBhd2FpdCB0aGlzLnJvdGF0ZUxvZ0ZpbGVzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbmFtZTogJ3N5c3RlbS1jbGVhbnVwJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ0NsZWFuIHRlbXBvcmFyeSBmaWxlcyBhbmQgb3B0aW1pemUgc3lzdGVtJyxcclxuICAgICAgICBzY2hlZHVsZTogJzAgMyAqICogMCcsIC8vIFdlZWtseSBvbiBTdW5kYXkgYXQgMyBBTVxyXG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgYWN0aW9uOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICBhd2FpdCB0aGlzLnBlcmZvcm1TeXN0ZW1DbGVhbnVwKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbmFtZTogJ3NlY3VyaXR5LXNjYW4nLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnUnVuIHNlY3VyaXR5IHZ1bG5lcmFiaWxpdHkgc2NhbicsXHJcbiAgICAgICAgc2NoZWR1bGU6ICcwIDQgKiAqIDEnLCAvLyBXZWVrbHkgb24gTW9uZGF5IGF0IDQgQU1cclxuICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgIGFjdGlvbjogYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgYXdhaXQgdGhpcy5wZXJmb3JtU2VjdXJpdHlTY2FuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbmFtZTogJ3BlcmZvcm1hbmNlLW9wdGltaXphdGlvbicsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICdPcHRpbWl6ZSBzeXN0ZW0gcGVyZm9ybWFuY2UnLFxyXG4gICAgICAgIHNjaGVkdWxlOiAnMCA1ICogKiAwJywgLy8gV2Vla2x5IG9uIFN1bmRheSBhdCA1IEFNXHJcbiAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICBhY3Rpb246IGFzeW5jICgpID0+IHtcclxuICAgICAgICAgIGF3YWl0IHRoaXMub3B0aW1pemVQZXJmb3JtYW5jZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6ICdoZWFsdGgtcmVwb3J0JyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ0dlbmVyYXRlIGNvbXByZWhlbnNpdmUgaGVhbHRoIHJlcG9ydCcsXHJcbiAgICAgICAgc2NoZWR1bGU6ICcwIDYgKiAqIDEnLCAvLyBXZWVrbHkgb24gTW9uZGF5IGF0IDYgQU1cclxuICAgICAgICBlbmFibGVkOiB0cnVlLFxyXG4gICAgICAgIGFjdGlvbjogYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgYXdhaXQgdGhpcy5nZW5lcmF0ZUhlYWx0aFJlcG9ydCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIG5hbWU6ICdiYWNrdXAtY2xlYW51cCcsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICdDbGVhbiBvbGQgYmFja3VwIGZpbGVzJyxcclxuICAgICAgICBzY2hlZHVsZTogJzAgNyAqICogMCcsIC8vIFdlZWtseSBvbiBTdW5kYXkgYXQgNyBBTVxyXG4gICAgICAgIGVuYWJsZWQ6IHRydWUsXHJcbiAgICAgICAgYWN0aW9uOiBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICBhd2FpdCB0aGlzLmNsZWFudXBPbGRCYWNrdXBzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3RhcnQgbWV0cmljIGNvbGxlY3Rpb25cclxuICAgKi9cclxuICBwcml2YXRlIHN0YXJ0TWV0cmljQ29sbGVjdGlvbigpOiB2b2lkIHtcclxuICAgIC8vIENvbGxlY3QgbWV0cmljcyBldmVyeSBtaW51dGVcclxuICAgIGNyb24uc2NoZWR1bGUoJyogKiAqICogKicsIGFzeW5jICgpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBtZXRyaWNzID0gYXdhaXQgdGhpcy5jb2xsZWN0TWV0cmljcygpO1xyXG4gICAgICAgIHRoaXMubWV0cmljcy5wdXNoKG1ldHJpY3MpO1xyXG5cclxuICAgICAgICAvLyBLZWVwIG9ubHkgbGFzdCAxNDQwIG1ldHJpY3MgKDI0IGhvdXJzKVxyXG4gICAgICAgIGlmICh0aGlzLm1ldHJpY3MubGVuZ3RoID4gMTQ0MCkge1xyXG4gICAgICAgICAgdGhpcy5tZXRyaWNzID0gdGhpcy5tZXRyaWNzLnNsaWNlKC0xNDQwKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENoZWNrIGZvciBhbGVydHNcclxuICAgICAgICBhd2FpdCB0aGlzLmNoZWNrQWxlcnRzKG1ldHJpY3MpO1xyXG5cclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBsb2dnZXIuZXJyb3IoJ0Vycm9yIGNvbGxlY3RpbmcgbWV0cmljczonLCBlcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2NoZWR1bGUgbWFpbnRlbmFuY2UgdGFza3NcclxuICAgKi9cclxuICBwcml2YXRlIHNjaGVkdWxlTWFpbnRlbmFuY2VUYXNrcygpOiB2b2lkIHtcclxuICAgIGZvciAoY29uc3QgdGFzayBvZiB0aGlzLm1haW50ZW5hbmNlVGFza3MpIHtcclxuICAgICAgaWYgKHRhc2suZW5hYmxlZCkge1xyXG4gICAgICAgIGNyb24uc2NoZWR1bGUodGFzay5zY2hlZHVsZSwgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgbG9nZ2VyLmluZm8oYPCflKcgUnVubmluZyBtYWludGVuYW5jZSB0YXNrOiAke3Rhc2submFtZX1gKTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgYXdhaXQgdGFzay5hY3Rpb24oKTtcclxuICAgICAgICAgICAgdGFzay5sYXN0UnVuID0gbmV3IERhdGUoKTtcclxuICAgICAgICAgICAgbG9nZ2VyLmluZm8oYOKchSBNYWludGVuYW5jZSB0YXNrIGNvbXBsZXRlZDogJHt0YXNrLm5hbWV9YCk7XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoYOKdjCBNYWludGVuYW5jZSB0YXNrIGZhaWxlZDogJHt0YXNrLm5hbWV9YCwgZXJyb3IpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdGFydCBoZWFsdGggY2hlY2tzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBzdGFydEhlYWx0aENoZWNrcygpOiB2b2lkIHtcclxuICAgIC8vIEhlYWx0aCBjaGVjayBldmVyeSA1IG1pbnV0ZXNcclxuICAgIGNyb24uc2NoZWR1bGUoJyovNSAqICogKiAqJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IHRoaXMucGVyZm9ybUhlYWx0aENoZWNrKCk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgbG9nZ2VyLmVycm9yKCdIZWFsdGggY2hlY2sgZmFpbGVkOicsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb2xsZWN0IHN5c3RlbSBhbmQgYXBwbGljYXRpb24gbWV0cmljc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgY29sbGVjdE1ldHJpY3MoKTogUHJvbWlzZTxNb25pdG9yaW5nTWV0cmljcz4ge1xyXG4gICAgY29uc3QgdGltZXN0YW1wID0gbmV3IERhdGUoKTtcclxuXHJcbiAgICAvLyBTeXN0ZW0gbWV0cmljc1xyXG4gICAgY29uc3Qgc3lzdGVtTWV0cmljcyA9IGF3YWl0IHRoaXMuY29sbGVjdFN5c3RlbU1ldHJpY3MoKTtcclxuICAgIFxyXG4gICAgLy8gQXBwbGljYXRpb24gbWV0cmljc1xyXG4gICAgY29uc3QgYXBwbGljYXRpb25NZXRyaWNzID0gYXdhaXQgdGhpcy5jb2xsZWN0QXBwbGljYXRpb25NZXRyaWNzKCk7XHJcbiAgICBcclxuICAgIC8vIFRyYWRpbmcgbWV0cmljc1xyXG4gICAgY29uc3QgdHJhZGluZ01ldHJpY3MgPSBhd2FpdCB0aGlzLmNvbGxlY3RUcmFkaW5nTWV0cmljcygpO1xyXG4gICAgXHJcbiAgICAvLyBTZWN1cml0eSBtZXRyaWNzXHJcbiAgICBjb25zdCBzZWN1cml0eU1ldHJpY3MgPSBhd2FpdCB0aGlzLmNvbGxlY3RTZWN1cml0eU1ldHJpY3MoKTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0aW1lc3RhbXAsXHJcbiAgICAgIHN5c3RlbTogc3lzdGVtTWV0cmljcyxcclxuICAgICAgYXBwbGljYXRpb246IGFwcGxpY2F0aW9uTWV0cmljcyxcclxuICAgICAgdHJhZGluZzogdHJhZGluZ01ldHJpY3MsXHJcbiAgICAgIHNlY3VyaXR5OiBzZWN1cml0eU1ldHJpY3NcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb2xsZWN0IHN5c3RlbSBtZXRyaWNzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBjb2xsZWN0U3lzdGVtTWV0cmljcygpOiBQcm9taXNlPFN5c3RlbU1ldHJpY3M+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIENQVSBtZXRyaWNzXHJcbiAgICAgIGNvbnN0IGNwdVVzYWdlID0gcGFyc2VGbG9hdChleGVjU3luYyhcInRvcCAtYm4xIHwgZ3JlcCAnQ3B1KHMpJyB8IGF3ayAne3ByaW50ICQyfScgfCBjdXQgLWQnJScgLWYxXCIsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSkudHJpbSgpKTtcclxuICAgICAgY29uc3QgbG9hZEF2ZXJhZ2UgPSBleGVjU3luYygndXB0aW1lJywgeyBlbmNvZGluZzogJ3V0Zi04JyB9KS5tYXRjaCgvbG9hZCBhdmVyYWdlOiAoW1xcZC5dKyksIChbXFxkLl0rKSwgKFtcXGQuXSspLyk/LnNsaWNlKDEpLm1hcChOdW1iZXIpIHx8IFswLCAwLCAwXTtcclxuICAgICAgXHJcbiAgICAgIC8vIFRlbXBlcmF0dXJlIChpZiBhdmFpbGFibGUpXHJcbiAgICAgIGxldCB0ZW1wZXJhdHVyZSA9IDA7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgdGVtcGVyYXR1cmUgPSBwYXJzZUZsb2F0KGV4ZWNTeW5jKFwic2Vuc29ycyB8IGdyZXAgJ0NvcmUgMCcgfCBhd2sgJ3twcmludCAkM30nIHwgY3V0IC1kJysnIC1mMiB8IGN1dCAtZCfCsCcgLWYxXCIsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSkudHJpbSgpKSB8fCAwO1xyXG4gICAgICB9IGNhdGNoIHtcclxuICAgICAgICAvLyBUZW1wZXJhdHVyZSBzZW5zb3Igbm90IGF2YWlsYWJsZVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBNZW1vcnkgbWV0cmljc1xyXG4gICAgICBjb25zdCBtZW1JbmZvID0gZXhlY1N5bmMoJ2ZyZWUgLWInLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pLnNwbGl0KCdcXG4nKVsxXS5zcGxpdCgvXFxzKy8pO1xyXG4gICAgICBjb25zdCBtZW1Ub3RhbCA9IHBhcnNlSW50KG1lbUluZm9bMV0pO1xyXG4gICAgICBjb25zdCBtZW1Vc2VkID0gcGFyc2VJbnQobWVtSW5mb1syXSk7XHJcbiAgICAgIGNvbnN0IG1lbUF2YWlsYWJsZSA9IHBhcnNlSW50KG1lbUluZm9bNl0pO1xyXG5cclxuICAgICAgLy8gRGlzayBtZXRyaWNzXHJcbiAgICAgIGNvbnN0IGRpc2tJbmZvID0gZXhlY1N5bmMoXCJkZiAtQjEgLyB8IHRhaWwgLTFcIiwgeyBlbmNvZGluZzogJ3V0Zi04JyB9KS5zcGxpdCgvXFxzKy8pO1xyXG4gICAgICBjb25zdCBkaXNrVG90YWwgPSBwYXJzZUludChkaXNrSW5mb1sxXSk7XHJcbiAgICAgIGNvbnN0IGRpc2tVc2VkID0gcGFyc2VJbnQoZGlza0luZm9bMl0pO1xyXG4gICAgICBjb25zdCBkaXNrQXZhaWxhYmxlID0gcGFyc2VJbnQoZGlza0luZm9bM10pO1xyXG5cclxuICAgICAgLy8gTmV0d29yayBtZXRyaWNzIChzaW1wbGlmaWVkKVxyXG4gICAgICBsZXQgbmV0d29ya01ldHJpY3MgPSB7IGJ5dGVzSW46IDAsIGJ5dGVzT3V0OiAwLCBwYWNrZXRzSW46IDAsIHBhY2tldHNPdXQ6IDAgfTtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBuZXRTdGF0cyA9IGV4ZWNTeW5jKFwiY2F0IC9wcm9jL25ldC9kZXYgfCBncmVwIGV0aDAgfHwgY2F0IC9wcm9jL25ldC9kZXYgfCBncmVwIHdsYW4wIHx8IGVjaG8gJzAgMCAwIDAnXCIsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSkudHJpbSgpO1xyXG4gICAgICAgIGlmIChuZXRTdGF0cykge1xyXG4gICAgICAgICAgY29uc3Qgc3RhdHMgPSBuZXRTdGF0cy5zcGxpdCgvXFxzKy8pO1xyXG4gICAgICAgICAgbmV0d29ya01ldHJpY3MgPSB7XHJcbiAgICAgICAgICAgIGJ5dGVzSW46IHBhcnNlSW50KHN0YXRzWzFdKSB8fCAwLFxyXG4gICAgICAgICAgICBieXRlc091dDogcGFyc2VJbnQoc3RhdHNbOV0pIHx8IDAsXHJcbiAgICAgICAgICAgIHBhY2tldHNJbjogcGFyc2VJbnQoc3RhdHNbMl0pIHx8IDAsXHJcbiAgICAgICAgICAgIHBhY2tldHNPdXQ6IHBhcnNlSW50KHN0YXRzWzEwXSkgfHwgMFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2gge1xyXG4gICAgICAgIC8vIE5ldHdvcmsgc3RhdHMgbm90IGF2YWlsYWJsZVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGNwdToge1xyXG4gICAgICAgICAgdXNhZ2U6IGNwdVVzYWdlLFxyXG4gICAgICAgICAgdGVtcGVyYXR1cmUsXHJcbiAgICAgICAgICBsb2FkQXZlcmFnZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWVtb3J5OiB7XHJcbiAgICAgICAgICB0b3RhbDogbWVtVG90YWwsXHJcbiAgICAgICAgICB1c2VkOiBtZW1Vc2VkLFxyXG4gICAgICAgICAgYXZhaWxhYmxlOiBtZW1BdmFpbGFibGUsXHJcbiAgICAgICAgICBwZXJjZW50YWdlOiAobWVtVXNlZCAvIG1lbVRvdGFsKSAqIDEwMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGlzazoge1xyXG4gICAgICAgICAgdG90YWw6IGRpc2tUb3RhbCxcclxuICAgICAgICAgIHVzZWQ6IGRpc2tVc2VkLFxyXG4gICAgICAgICAgYXZhaWxhYmxlOiBkaXNrQXZhaWxhYmxlLFxyXG4gICAgICAgICAgcGVyY2VudGFnZTogKGRpc2tVc2VkIC8gZGlza1RvdGFsKSAqIDEwMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbmV0d29yazogbmV0d29ya01ldHJpY3NcclxuICAgICAgfTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoJ0Vycm9yIGNvbGxlY3Rpbmcgc3lzdGVtIG1ldHJpY3M6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbGxlY3QgYXBwbGljYXRpb24gbWV0cmljc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgY29sbGVjdEFwcGxpY2F0aW9uTWV0cmljcygpOiBQcm9taXNlPEFwcGxpY2F0aW9uTWV0cmljcz4ge1xyXG4gICAgY29uc3QgcHJvY2Vzc2VzOiBQcm9jZXNzTWV0cmljW10gPSBbXTtcclxuICAgIGxldCBhcGlIZWFsdGggPSBmYWxzZTtcclxuICAgIGxldCBkYXNoYm9hcmRIZWFsdGggPSBmYWxzZTtcclxuICAgIGxldCB0dW5uZWxIZWFsdGggPSBmYWxzZTtcclxuICAgIGxldCByZXNwb25zZVRpbWUgPSAwO1xyXG4gICAgbGV0IGVycm9yUmF0ZSA9IDA7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gUE0yIHByb2Nlc3MgbWV0cmljc1xyXG4gICAgICBjb25zdCBwbTJMaXN0ID0gZXhlY1N5bmMoJ3BtMiBqbGlzdCcsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgIGNvbnN0IHByb2Nlc3NEYXRhID0gSlNPTi5wYXJzZShwbTJMaXN0KTtcclxuXHJcbiAgICAgIGZvciAoY29uc3QgcHJvYyBvZiBwcm9jZXNzRGF0YSkge1xyXG4gICAgICAgIHByb2Nlc3Nlcy5wdXNoKHtcclxuICAgICAgICAgIG5hbWU6IHByb2MubmFtZSxcclxuICAgICAgICAgIHBpZDogcHJvYy5waWQsXHJcbiAgICAgICAgICBzdGF0dXM6IHByb2MucG0yX2Vudi5zdGF0dXMsXHJcbiAgICAgICAgICBjcHU6IHByb2MubW9uaXQuY3B1LFxyXG4gICAgICAgICAgbWVtb3J5OiBwcm9jLm1vbml0Lm1lbW9yeSxcclxuICAgICAgICAgIHVwdGltZTogRGF0ZS5ub3coKSAtIHByb2MucG0yX2Vudi5wbV91cHRpbWUsXHJcbiAgICAgICAgICByZXN0YXJ0czogcHJvYy5wbTJfZW52LnJlc3RhcnRfdGltZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBBUEkgaGVhbHRoIGNoZWNrXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgICAgICBleGVjU3luYygnY3VybCAtZiBodHRwOi8vbG9jYWxob3N0OjMwMDEvYXBpL3YxL2hlYWx0aCcsIHsgc3RkaW86ICdwaXBlJyB9KTtcclxuICAgICAgICByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lO1xyXG4gICAgICAgIGFwaUhlYWx0aCA9IHRydWU7XHJcbiAgICAgIH0gY2F0Y2gge1xyXG4gICAgICAgIGFwaUhlYWx0aCA9IGZhbHNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBEYXNoYm9hcmQgaGVhbHRoIGNoZWNrXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgZXhlY1N5bmMoJ2N1cmwgLWYgaHR0cDovL2xvY2FsaG9zdDozMDAyJywgeyBzdGRpbzogJ3BpcGUnIH0pO1xyXG4gICAgICAgIGRhc2hib2FyZEhlYWx0aCA9IHRydWU7XHJcbiAgICAgIH0gY2F0Y2gge1xyXG4gICAgICAgIGRhc2hib2FyZEhlYWx0aCA9IGZhbHNlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBUdW5uZWwgaGVhbHRoIGNoZWNrIChzaW1wbGlmaWVkKVxyXG4gICAgICB0dW5uZWxIZWFsdGggPSBwcm9jZXNzZXMuc29tZShwID0+IHAubmFtZS5pbmNsdWRlcygndHVubmVsJykgJiYgcC5zdGF0dXMgPT09ICdvbmxpbmUnKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoJ0Vycm9yIGNvbGxlY3RpbmcgYXBwbGljYXRpb24gbWV0cmljczonLCBlcnJvcik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcHJvY2Vzc2VzLFxyXG4gICAgICBhcGlIZWFsdGgsXHJcbiAgICAgIGRhc2hib2FyZEhlYWx0aCxcclxuICAgICAgdHVubmVsSGVhbHRoLFxyXG4gICAgICByZXNwb25zZVRpbWUsXHJcbiAgICAgIGVycm9yUmF0ZVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbGxlY3QgdHJhZGluZyBtZXRyaWNzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBjb2xsZWN0VHJhZGluZ01ldHJpY3MoKTogUHJvbWlzZTxUcmFkaW5nTWV0cmljcz4ge1xyXG4gICAgLy8gVGhpcyB3b3VsZCB0eXBpY2FsbHkgcXVlcnkgdGhlIGRhdGFiYXNlIGZvciB0cmFkaW5nIGRhdGFcclxuICAgIC8vIEZvciBub3csIHJldHVybiBkZWZhdWx0IHZhbHVlc1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYWN0aXZlVHJhZGVzOiAwLFxyXG4gICAgICB0b3RhbFBuTDogMCxcclxuICAgICAgZGFpbHlQbkw6IDAsXHJcbiAgICAgIHdpblJhdGU6IDAsXHJcbiAgICAgIHJpc2tFeHBvc3VyZTogMFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbGxlY3Qgc2VjdXJpdHkgbWV0cmljc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgY29sbGVjdFNlY3VyaXR5TWV0cmljcygpOiBQcm9taXNlPFNlY3VyaXR5TWV0cmljcz4ge1xyXG4gICAgbGV0IGZhaWxlZExvZ2lucyA9IDA7XHJcbiAgICBsZXQgc3VzcGljaW91c0FjdGl2aXRpZXMgPSAwO1xyXG4gICAgbGV0IGZpcmV3YWxsQmxvY2tzID0gMDtcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBDb3VudCBmYWlsZWQgbG9naW4gYXR0ZW1wdHMgZnJvbSBhdXRoLmxvZ1xyXG4gICAgICBpZiAoZXhpc3RzU3luYygnL3Zhci9sb2cvYXV0aC5sb2cnKSkge1xyXG4gICAgICAgIGNvbnN0IGF1dGhMb2cgPSBleGVjU3luYyhcImdyZXAgJ0ZhaWxlZCBwYXNzd29yZCcgL3Zhci9sb2cvYXV0aC5sb2cgfCB3YyAtbFwiLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pO1xyXG4gICAgICAgIGZhaWxlZExvZ2lucyA9IHBhcnNlSW50KGF1dGhMb2cudHJpbSgpKSB8fCAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBDb3VudCBmaXJld2FsbCBibG9ja3NcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB1ZndMb2cgPSBleGVjU3luYyhcImdyZXAgJ1VGVyBCTE9DSycgL3Zhci9sb2cvdWZ3LmxvZyB8IHdjIC1sXCIsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgICAgZmlyZXdhbGxCbG9ja3MgPSBwYXJzZUludCh1ZndMb2cudHJpbSgpKSB8fCAwO1xyXG4gICAgICB9IGNhdGNoIHtcclxuICAgICAgICAvLyBVRlcgbG9nIG5vdCBhdmFpbGFibGVcclxuICAgICAgfVxyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignRXJyb3IgY29sbGVjdGluZyBzZWN1cml0eSBtZXRyaWNzOicsIGVycm9yKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBmYWlsZWRMb2dpbnMsXHJcbiAgICAgIHN1c3BpY2lvdXNBY3Rpdml0aWVzLFxyXG4gICAgICBmaXJld2FsbEJsb2Nrc1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENoZWNrIGZvciBhbGVydHMgYmFzZWQgb24gbWV0cmljc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgY2hlY2tBbGVydHMobWV0cmljczogTW9uaXRvcmluZ01ldHJpY3MpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIGNvbnN0IGFsZXJ0czogc3RyaW5nW10gPSBbXTtcclxuXHJcbiAgICAvLyBDUFUgYWxlcnRzXHJcbiAgICBpZiAobWV0cmljcy5zeXN0ZW0uY3B1LnVzYWdlID4gdGhpcy5hbGVydFRocmVzaG9sZHMuY3B1LmNyaXRpY2FsKSB7XHJcbiAgICAgIGFsZXJ0cy5wdXNoKGBDUklUSUNBTDogQ1BVIHVzYWdlIGlzICR7bWV0cmljcy5zeXN0ZW0uY3B1LnVzYWdlLnRvRml4ZWQoMSl9JWApO1xyXG4gICAgfSBlbHNlIGlmIChtZXRyaWNzLnN5c3RlbS5jcHUudXNhZ2UgPiB0aGlzLmFsZXJ0VGhyZXNob2xkcy5jcHUud2FybmluZykge1xyXG4gICAgICBhbGVydHMucHVzaChgV0FSTklORzogQ1BVIHVzYWdlIGlzICR7bWV0cmljcy5zeXN0ZW0uY3B1LnVzYWdlLnRvRml4ZWQoMSl9JWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1lbW9yeSBhbGVydHNcclxuICAgIGlmIChtZXRyaWNzLnN5c3RlbS5tZW1vcnkucGVyY2VudGFnZSA+IHRoaXMuYWxlcnRUaHJlc2hvbGRzLm1lbW9yeS5jcml0aWNhbCkge1xyXG4gICAgICBhbGVydHMucHVzaChgQ1JJVElDQUw6IE1lbW9yeSB1c2FnZSBpcyAke21ldHJpY3Muc3lzdGVtLm1lbW9yeS5wZXJjZW50YWdlLnRvRml4ZWQoMSl9JWApO1xyXG4gICAgfSBlbHNlIGlmIChtZXRyaWNzLnN5c3RlbS5tZW1vcnkucGVyY2VudGFnZSA+IHRoaXMuYWxlcnRUaHJlc2hvbGRzLm1lbW9yeS53YXJuaW5nKSB7XHJcbiAgICAgIGFsZXJ0cy5wdXNoKGBXQVJOSU5HOiBNZW1vcnkgdXNhZ2UgaXMgJHttZXRyaWNzLnN5c3RlbS5tZW1vcnkucGVyY2VudGFnZS50b0ZpeGVkKDEpfSVgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBEaXNrIGFsZXJ0c1xyXG4gICAgaWYgKG1ldHJpY3Muc3lzdGVtLmRpc2sucGVyY2VudGFnZSA+IHRoaXMuYWxlcnRUaHJlc2hvbGRzLmRpc2suY3JpdGljYWwpIHtcclxuICAgICAgYWxlcnRzLnB1c2goYENSSVRJQ0FMOiBEaXNrIHVzYWdlIGlzICR7bWV0cmljcy5zeXN0ZW0uZGlzay5wZXJjZW50YWdlLnRvRml4ZWQoMSl9JWApO1xyXG4gICAgfSBlbHNlIGlmIChtZXRyaWNzLnN5c3RlbS5kaXNrLnBlcmNlbnRhZ2UgPiB0aGlzLmFsZXJ0VGhyZXNob2xkcy5kaXNrLndhcm5pbmcpIHtcclxuICAgICAgYWxlcnRzLnB1c2goYFdBUk5JTkc6IERpc2sgdXNhZ2UgaXMgJHttZXRyaWNzLnN5c3RlbS5kaXNrLnBlcmNlbnRhZ2UudG9GaXhlZCgxKX0lYCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVGVtcGVyYXR1cmUgYWxlcnRzXHJcbiAgICBpZiAobWV0cmljcy5zeXN0ZW0uY3B1LnRlbXBlcmF0dXJlID4gdGhpcy5hbGVydFRocmVzaG9sZHMudGVtcGVyYXR1cmUuY3JpdGljYWwpIHtcclxuICAgICAgYWxlcnRzLnB1c2goYENSSVRJQ0FMOiBDUFUgdGVtcGVyYXR1cmUgaXMgJHttZXRyaWNzLnN5c3RlbS5jcHUudGVtcGVyYXR1cmV9wrBDYCk7XHJcbiAgICB9IGVsc2UgaWYgKG1ldHJpY3Muc3lzdGVtLmNwdS50ZW1wZXJhdHVyZSA+IHRoaXMuYWxlcnRUaHJlc2hvbGRzLnRlbXBlcmF0dXJlLndhcm5pbmcpIHtcclxuICAgICAgYWxlcnRzLnB1c2goYFdBUk5JTkc6IENQVSB0ZW1wZXJhdHVyZSBpcyAke21ldHJpY3Muc3lzdGVtLmNwdS50ZW1wZXJhdHVyZX3CsENgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBcHBsaWNhdGlvbiBoZWFsdGggYWxlcnRzXHJcbiAgICBpZiAoIW1ldHJpY3MuYXBwbGljYXRpb24uYXBpSGVhbHRoKSB7XHJcbiAgICAgIGFsZXJ0cy5wdXNoKCdDUklUSUNBTDogQVBJIHNlcnZpY2UgaXMgbm90IHJlc3BvbmRpbmcnKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIW1ldHJpY3MuYXBwbGljYXRpb24udHVubmVsSGVhbHRoKSB7XHJcbiAgICAgIGFsZXJ0cy5wdXNoKCdXQVJOSU5HOiBTU0ggdHVubmVsIG1heSBiZSBkb3duJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHJvY2VzcyBhbGVydHNcclxuICAgIGNvbnN0IGZhaWxlZFByb2Nlc3NlcyA9IG1ldHJpY3MuYXBwbGljYXRpb24ucHJvY2Vzc2VzLmZpbHRlcihwID0+IHAuc3RhdHVzICE9PSAnb25saW5lJyk7XHJcbiAgICBpZiAoZmFpbGVkUHJvY2Vzc2VzLmxlbmd0aCA+IDApIHtcclxuICAgICAgYWxlcnRzLnB1c2goYFdBUk5JTkc6ICR7ZmFpbGVkUHJvY2Vzc2VzLmxlbmd0aH0gcHJvY2Vzc2VzIGFyZSBub3QgcnVubmluZ2ApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFNlbmQgYWxlcnRzIGlmIGFueVxyXG4gICAgaWYgKGFsZXJ0cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGF3YWl0IHRoaXMuc2VuZEFsZXJ0cyhhbGVydHMpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VuZCBhbGVydHMgdmlhIGNvbmZpZ3VyZWQgY2hhbm5lbHNcclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIHNlbmRBbGVydHMoYWxlcnRzOiBzdHJpbmdbXSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgY29uc3QgYWxlcnRNZXNzYWdlID0gYPCfmqggQUkgQ3J5cHRvIFRyYWRpbmcgQWdlbnQgQWxlcnRzOlxcbiR7YWxlcnRzLmpvaW4oJ1xcbicpfWA7XHJcbiAgICBcclxuICAgIGxvZ2dlci53YXJuKCdTeXN0ZW0gYWxlcnRzOicsIGFsZXJ0cyk7XHJcblxyXG4gICAgLy8gSGVyZSB5b3Ugd291bGQgaW50ZWdyYXRlIHdpdGggbm90aWZpY2F0aW9uIHNlcnZpY2VzXHJcbiAgICAvLyBGb3Igbm93LCBqdXN0IGxvZyB0aGUgYWxlcnRzXHJcbiAgICBcclxuICAgIC8vIFNhdmUgYWxlcnRzIHRvIGZpbGVcclxuICAgIGNvbnN0IGFsZXJ0c0RpciA9IGpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2xvZ3MnLCAnYWxlcnRzJyk7XHJcbiAgICBpZiAoIWV4aXN0c1N5bmMoYWxlcnRzRGlyKSkge1xyXG4gICAgICBta2RpclN5bmMoYWxlcnRzRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBhbGVydEZpbGUgPSBqb2luKGFsZXJ0c0RpciwgYGFsZXJ0cy0ke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdfS5sb2dgKTtcclxuICAgIGNvbnN0IGFsZXJ0RW50cnkgPSBgJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9OiAke2FsZXJ0TWVzc2FnZX1cXG5gO1xyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICB3cml0ZUZpbGVTeW5jKGFsZXJ0RmlsZSwgYWxlcnRFbnRyeSwgeyBmbGFnOiAnYScgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoJ0ZhaWxlZCB0byB3cml0ZSBhbGVydCB0byBmaWxlOicsIGVycm9yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBlcmZvcm0gY29tcHJlaGVuc2l2ZSBoZWFsdGggY2hlY2tcclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIHBlcmZvcm1IZWFsdGhDaGVjaygpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIGNvbnN0IGhlYWx0aFN0YXR1cyA9IHtcclxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxyXG4gICAgICBvdmVyYWxsOiAnSEVBTFRIWScsXHJcbiAgICAgIGNoZWNrczoge31cclxuICAgIH07XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQ2hlY2sgc3lzdGVtIHJlc291cmNlc1xyXG4gICAgICBjb25zdCBtZXRyaWNzID0gYXdhaXQgdGhpcy5jb2xsZWN0TWV0cmljcygpO1xyXG4gICAgICBcclxuICAgICAgaGVhbHRoU3RhdHVzLmNoZWNrc1snc3lzdGVtJ10gPSB7XHJcbiAgICAgICAgc3RhdHVzOiBtZXRyaWNzLnN5c3RlbS5jcHUudXNhZ2UgPCA4MCAmJiBtZXRyaWNzLnN5c3RlbS5tZW1vcnkucGVyY2VudGFnZSA8IDg1ID8gJ0hFQUxUSFknIDogJ1dBUk5JTkcnLFxyXG4gICAgICAgIGRldGFpbHM6IHtcclxuICAgICAgICAgIGNwdTogYCR7bWV0cmljcy5zeXN0ZW0uY3B1LnVzYWdlLnRvRml4ZWQoMSl9JWAsXHJcbiAgICAgICAgICBtZW1vcnk6IGAke21ldHJpY3Muc3lzdGVtLm1lbW9yeS5wZXJjZW50YWdlLnRvRml4ZWQoMSl9JWAsXHJcbiAgICAgICAgICBkaXNrOiBgJHttZXRyaWNzLnN5c3RlbS5kaXNrLnBlcmNlbnRhZ2UudG9GaXhlZCgxKX0lYFxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8vIENoZWNrIGFwcGxpY2F0aW9uIHNlcnZpY2VzXHJcbiAgICAgIGhlYWx0aFN0YXR1cy5jaGVja3NbJ3NlcnZpY2VzJ10gPSB7XHJcbiAgICAgICAgc3RhdHVzOiBtZXRyaWNzLmFwcGxpY2F0aW9uLmFwaUhlYWx0aCAmJiBtZXRyaWNzLmFwcGxpY2F0aW9uLnR1bm5lbEhlYWx0aCA/ICdIRUFMVEhZJyA6ICdDUklUSUNBTCcsXHJcbiAgICAgICAgZGV0YWlsczoge1xyXG4gICAgICAgICAgYXBpOiBtZXRyaWNzLmFwcGxpY2F0aW9uLmFwaUhlYWx0aCA/ICdVUCcgOiAnRE9XTicsXHJcbiAgICAgICAgICBkYXNoYm9hcmQ6IG1ldHJpY3MuYXBwbGljYXRpb24uZGFzaGJvYXJkSGVhbHRoID8gJ1VQJyA6ICdET1dOJyxcclxuICAgICAgICAgIHR1bm5lbDogbWV0cmljcy5hcHBsaWNhdGlvbi50dW5uZWxIZWFsdGggPyAnVVAnIDogJ0RPV04nXHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgLy8gQ2hlY2sgZGF0YWJhc2VcclxuICAgICAgY29uc3QgZGJIZWFsdGh5ID0gYXdhaXQgZGF0YWJhc2VTZXR1cC52YWxpZGF0ZUludGVncml0eSgpO1xyXG4gICAgICBoZWFsdGhTdGF0dXMuY2hlY2tzWydkYXRhYmFzZSddID0ge1xyXG4gICAgICAgIHN0YXR1czogZGJIZWFsdGh5ID8gJ0hFQUxUSFknIDogJ0NSSVRJQ0FMJyxcclxuICAgICAgICBkZXRhaWxzOiB7IGludGVncml0eTogZGJIZWFsdGh5ID8gJ09LJyA6ICdGQUlMRUQnIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8vIERldGVybWluZSBvdmVyYWxsIHN0YXR1c1xyXG4gICAgICBjb25zdCBzdGF0dXNlcyA9IE9iamVjdC52YWx1ZXMoaGVhbHRoU3RhdHVzLmNoZWNrcykubWFwKGNoZWNrID0+IGNoZWNrLnN0YXR1cyk7XHJcbiAgICAgIGlmIChzdGF0dXNlcy5pbmNsdWRlcygnQ1JJVElDQUwnKSkge1xyXG4gICAgICAgIGhlYWx0aFN0YXR1cy5vdmVyYWxsID0gJ0NSSVRJQ0FMJztcclxuICAgICAgfSBlbHNlIGlmIChzdGF0dXNlcy5pbmNsdWRlcygnV0FSTklORycpKSB7XHJcbiAgICAgICAgaGVhbHRoU3RhdHVzLm92ZXJhbGwgPSAnV0FSTklORyc7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFNhdmUgaGVhbHRoIHN0YXR1c1xyXG4gICAgICBjb25zdCBoZWFsdGhGaWxlID0gam9pbihwcm9jZXNzLmN3ZCgpLCAnbG9ncycsICdoZWFsdGgtc3RhdHVzLmpzb24nKTtcclxuICAgICAgd3JpdGVGaWxlU3luYyhoZWFsdGhGaWxlLCBKU09OLnN0cmluZ2lmeShoZWFsdGhTdGF0dXMsIG51bGwsIDIpKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoJ0hlYWx0aCBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgICBoZWFsdGhTdGF0dXMub3ZlcmFsbCA9ICdFUlJPUic7XHJcbiAgICAgIGhlYWx0aFN0YXR1cy5jaGVja3NbJ2Vycm9yJ10gPSB7IHN0YXR1czogJ0VSUk9SJywgZGV0YWlsczogZXJyb3IubWVzc2FnZSB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTWFpbnRlbmFuY2UgdGFzayBpbXBsZW1lbnRhdGlvbnNcclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIHJvdGF0ZUxvZ0ZpbGVzKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgbG9nZ2VyLmluZm8oJ/CflIQgUm90YXRpbmcgbG9nIGZpbGVzLi4uJyk7XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIFVzZSBsb2dyb3RhdGUgaWYgYXZhaWxhYmxlXHJcbiAgICAgIGV4ZWNTeW5jKCdzdWRvIGxvZ3JvdGF0ZSAtZiAvZXRjL2xvZ3JvdGF0ZS5kL2FpLWNyeXB0by10cmFkaW5nJywgeyBzdGRpbzogJ3BpcGUnIH0pO1xyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIC8vIE1hbnVhbCBsb2cgcm90YXRpb25cclxuICAgICAgY29uc3QgbG9nc0RpciA9IGpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2xvZ3MnKTtcclxuICAgICAgaWYgKGV4aXN0c1N5bmMobG9nc0RpcikpIHtcclxuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXTtcclxuICAgICAgICBleGVjU3luYyhgZmluZCAke2xvZ3NEaXJ9IC1uYW1lIFwiKi5sb2dcIiAtc2l6ZSArMTAwTSAtZXhlYyBnemlwIHt9IFxcXFw7YCk7XHJcbiAgICAgICAgZXhlY1N5bmMoYGZpbmQgJHtsb2dzRGlyfSAtbmFtZSBcIiouZ3pcIiAtbXRpbWUgKzMwIC1kZWxldGVgKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIExvZyByb3RhdGlvbiBjb21wbGV0ZWQnKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgcGVyZm9ybVN5c3RlbUNsZWFudXAoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBsb2dnZXIuaW5mbygn8J+nuSBQZXJmb3JtaW5nIHN5c3RlbSBjbGVhbnVwLi4uJyk7XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIENsZWFuIHBhY2thZ2UgY2FjaGVcclxuICAgICAgZXhlY1N5bmMoJ3N1ZG8gYXB0IGF1dG9yZW1vdmUgLXknLCB7IHN0ZGlvOiAncGlwZScgfSk7XHJcbiAgICAgIGV4ZWNTeW5jKCdzdWRvIGFwdCBhdXRvY2xlYW4nLCB7IHN0ZGlvOiAncGlwZScgfSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBDbGVhbiB0ZW1wb3JhcnkgZmlsZXNcclxuICAgICAgZXhlY1N5bmMoJ3N1ZG8gZmluZCAvdG1wIC10eXBlIGYgLWF0aW1lICs3IC1kZWxldGUnLCB7IHN0ZGlvOiAncGlwZScgfSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBDbGVhbiBvbGQgbG9nc1xyXG4gICAgICBleGVjU3luYygnc3VkbyBqb3VybmFsY3RsIC0tdmFjdXVtLXRpbWU9MzBkJywgeyBzdGRpbzogJ3BpcGUnIH0pO1xyXG4gICAgICBcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignU3lzdGVtIGNsZWFudXAgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIFN5c3RlbSBjbGVhbnVwIGNvbXBsZXRlZCcpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBwZXJmb3JtU2VjdXJpdHlTY2FuKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgbG9nZ2VyLmluZm8oJ/CflJIgUGVyZm9ybWluZyBzZWN1cml0eSBzY2FuLi4uJyk7XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIFJ1biBucG0gYXVkaXRcclxuICAgICAgZXhlY1N5bmMoJ25wbSBhdWRpdCAtLWF1ZGl0LWxldmVsIG1vZGVyYXRlJywgeyBzdGRpbzogJ3BpcGUnIH0pO1xyXG4gICAgICBcclxuICAgICAgLy8gQ2hlY2sgZm9yIHNlY3VyaXR5IHVwZGF0ZXNcclxuICAgICAgZXhlY1N5bmMoJ3N1ZG8gYXB0IGxpc3QgLS11cGdyYWRhYmxlIHwgZ3JlcCAtaSBzZWN1cml0eScsIHsgc3RkaW86ICdwaXBlJyB9KTtcclxuICAgICAgXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIud2FybignU2VjdXJpdHkgc2NhbiBjb21wbGV0ZWQgd2l0aCB3YXJuaW5ncycpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIFNlY3VyaXR5IHNjYW4gY29tcGxldGVkJyk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIG9wdGltaXplUGVyZm9ybWFuY2UoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBsb2dnZXIuaW5mbygn4pqhIE9wdGltaXppbmcgc3lzdGVtIHBlcmZvcm1hbmNlLi4uJyk7XHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIENsZWFyIG1lbW9yeSBjYWNoZXNcclxuICAgICAgZXhlY1N5bmMoJ3N1ZG8gc3luYyAmJiBlY2hvIDMgfCBzdWRvIHRlZSAvcHJvYy9zeXMvdm0vZHJvcF9jYWNoZXMnLCB7IHN0ZGlvOiAncGlwZScgfSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBPcHRpbWl6ZSBkYXRhYmFzZVxyXG4gICAgICBhd2FpdCBkYXRhYmFzZVNldHVwLnJ1bignVkFDVVVNJyk7XHJcbiAgICAgIGF3YWl0IGRhdGFiYXNlU2V0dXAucnVuKCdBTkFMWVpFJyk7XHJcbiAgICAgIFxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgbG9nZ2VyLmVycm9yKCdQZXJmb3JtYW5jZSBvcHRpbWl6YXRpb24gZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIFBlcmZvcm1hbmNlIG9wdGltaXphdGlvbiBjb21wbGV0ZWQnKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2VuZXJhdGVIZWFsdGhSZXBvcnQoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBsb2dnZXIuaW5mbygn8J+TiiBHZW5lcmF0aW5nIGhlYWx0aCByZXBvcnQuLi4nKTtcclxuICAgIFxyXG4gICAgY29uc3QgcmVwb3J0ID0ge1xyXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXHJcbiAgICAgIHN5c3RlbTogYXdhaXQgdGhpcy5jb2xsZWN0U3lzdGVtTWV0cmljcygpLFxyXG4gICAgICBhcHBsaWNhdGlvbjogYXdhaXQgdGhpcy5jb2xsZWN0QXBwbGljYXRpb25NZXRyaWNzKCksXHJcbiAgICAgIG1haW50ZW5hbmNlOiB7XHJcbiAgICAgICAgbGFzdFRhc2tzOiB0aGlzLm1haW50ZW5hbmNlVGFza3MubWFwKHRhc2sgPT4gKHtcclxuICAgICAgICAgIG5hbWU6IHRhc2submFtZSxcclxuICAgICAgICAgIGxhc3RSdW46IHRhc2subGFzdFJ1bixcclxuICAgICAgICAgIGVuYWJsZWQ6IHRhc2suZW5hYmxlZFxyXG4gICAgICAgIH0pKVxyXG4gICAgICB9LFxyXG4gICAgICByZWNvbW1lbmRhdGlvbnM6IHRoaXMuZ2VuZXJhdGVSZWNvbW1lbmRhdGlvbnMoKVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgY29uc3QgcmVwb3J0RmlsZSA9IGpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2xvZ3MnLCBgaGVhbHRoLXJlcG9ydC0ke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdfS5qc29uYCk7XHJcbiAgICB3cml0ZUZpbGVTeW5jKHJlcG9ydEZpbGUsIEpTT04uc3RyaW5naWZ5KHJlcG9ydCwgbnVsbCwgMikpO1xyXG4gICAgXHJcbiAgICBsb2dnZXIuaW5mbyhg4pyFIEhlYWx0aCByZXBvcnQgZ2VuZXJhdGVkOiAke3JlcG9ydEZpbGV9YCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGNsZWFudXBPbGRCYWNrdXBzKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgbG9nZ2VyLmluZm8oJ/Cfl5HvuI8gQ2xlYW5pbmcgdXAgb2xkIGJhY2t1cHMuLi4nKTtcclxuICAgIFxyXG4gICAgY29uc3QgYmFja3Vwc0RpciA9IGpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2JhY2t1cHMnKTtcclxuICAgIGlmIChleGlzdHNTeW5jKGJhY2t1cHNEaXIpKSB7XHJcbiAgICAgIC8vIEtlZXAgYmFja3VwcyBmb3IgMzAgZGF5c1xyXG4gICAgICBleGVjU3luYyhgZmluZCAke2JhY2t1cHNEaXJ9IC10eXBlIGYgLW10aW1lICszMCAtZGVsZXRlYCwgeyBzdGRpbzogJ3BpcGUnIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIEJhY2t1cCBjbGVhbnVwIGNvbXBsZXRlZCcpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZW5lcmF0ZVJlY29tbWVuZGF0aW9ucygpOiBzdHJpbmdbXSB7XHJcbiAgICBjb25zdCByZWNvbW1lbmRhdGlvbnM6IHN0cmluZ1tdID0gW107XHJcbiAgICBcclxuICAgIGlmICh0aGlzLm1ldHJpY3MubGVuZ3RoID4gMCkge1xyXG4gICAgICBjb25zdCBsYXRlc3RNZXRyaWNzID0gdGhpcy5tZXRyaWNzW3RoaXMubWV0cmljcy5sZW5ndGggLSAxXTtcclxuICAgICAgXHJcbiAgICAgIGlmIChsYXRlc3RNZXRyaWNzLnN5c3RlbS5jcHUudXNhZ2UgPiA3MCkge1xyXG4gICAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKCdDb25zaWRlciBvcHRpbWl6aW5nIENQVS1pbnRlbnNpdmUgcHJvY2Vzc2VzJyk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGlmIChsYXRlc3RNZXRyaWNzLnN5c3RlbS5tZW1vcnkucGVyY2VudGFnZSA+IDgwKSB7XHJcbiAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ01vbml0b3IgbWVtb3J5IHVzYWdlIGFuZCBjb25zaWRlciBhZGRpbmcgbW9yZSBSQU0nKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKGxhdGVzdE1ldHJpY3Muc3lzdGVtLmRpc2sucGVyY2VudGFnZSA+IDgwKSB7XHJcbiAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ0NsZWFuIHVwIGRpc2sgc3BhY2Ugb3IgYWRkIG1vcmUgc3RvcmFnZScpO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBpZiAoIWxhdGVzdE1ldHJpY3MuYXBwbGljYXRpb24uYXBpSGVhbHRoKSB7XHJcbiAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ0ludmVzdGlnYXRlIEFQSSBzZXJ2aWNlIGlzc3VlcycpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJldHVybiByZWNvbW1lbmRhdGlvbnM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgY3VycmVudCBtZXRyaWNzXHJcbiAgICovXHJcbiAgZ2V0TWV0cmljcygpOiBNb25pdG9yaW5nTWV0cmljc1tdIHtcclxuICAgIHJldHVybiB0aGlzLm1ldHJpY3M7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgbWFpbnRlbmFuY2UgdGFzayBzdGF0dXNcclxuICAgKi9cclxuICBnZXRNYWludGVuYW5jZVN0YXR1cygpOiBNYWludGVuYW5jZVRhc2tbXSB7XHJcbiAgICByZXR1cm4gdGhpcy5tYWludGVuYW5jZVRhc2tzO1xyXG4gIH1cclxufVxyXG5cclxuLy8gRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxyXG5leHBvcnQgY29uc3QgbW9uaXRvcmluZ0F1dG9tYXRpb24gPSBuZXcgTW9uaXRvcmluZ0F1dG9tYXRpb24oKTsiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBNUIsSUFBQTtFQUFBO0VBQUEsSUFBQTZCLFFBQUEsR0FBQTVCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBMEIsUUFBQSxDQUFBOUIsSUFBQSxLQUFBOEIsUUFBQSxDQUFBOUIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTZCLFFBQUEsQ0FBQTlCLElBQUEs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