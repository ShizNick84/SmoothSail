2f23ca936bd4e9729355b4548e9fc90a
"use strict";

/**
 * =============================================================================
 * RESOURCE MONITOR - LLM RESOURCE MANAGEMENT FOR INTEL NUC
 * =============================================================================
 *
 * This module monitors system resources specifically for LLM operations on
 * Intel NUC hardware. It provides real-time monitoring, optimization
 * recommendations, and automatic resource management to ensure optimal
 * performance within hardware constraints.
 *
 * Key Features:
 * - Real-time CPU, memory, and thermal monitoring
 * - LLM-specific resource optimization
 * - Automatic throttling and scaling
 * - Performance prediction and recommendations
 * - Resource allocation for trading vs AI operations
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1048vy7b82() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\resource-monitor.ts";
  var hash = "9e3ef287562c3fa4fc69a82c22139584366bc881";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\resource-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "1": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "2": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "3": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "4": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "5": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "6": {
        start: {
          line: 35,
          column: 21
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "7": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 23
        }
      },
      "8": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 25
        }
      },
      "9": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "10": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 16
        }
      },
      "11": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "12": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "13": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 82
        }
      },
      "14": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "15": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "16": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 79
        }
      },
      "17": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 23
        }
      },
      "18": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 75
        }
      },
      "19": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 40
        }
      },
      "20": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 101,
          column: 27
        }
      },
      "21": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "22": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 48
        }
      },
      "23": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 48
        }
      },
      "24": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 96,
          column: 57
        }
      },
      "25": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 90
        }
      },
      "26": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 37
        }
      },
      "27": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 70
        }
      },
      "28": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 43
        }
      },
      "29": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 83
        }
      },
      "30": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "31": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "32": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 13
        }
      },
      "33": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 75
        }
      },
      "34": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 23
        }
      },
      "35": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 75
        }
      },
      "36": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "37": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 55
        }
      },
      "38": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 47
        }
      },
      "39": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "40": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 70
        }
      },
      "41": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 43
        }
      },
      "42": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 82
        }
      },
      "43": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 24
        }
      },
      "44": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "45": {
        start: {
          line: 139,
          column: 36
        },
        end: {
          line: 139,
          column: 82
        }
      },
      "46": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "47": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 42
        }
      },
      "48": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 39
        }
      },
      "49": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 49
        }
      },
      "50": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 72
        }
      },
      "51": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 24
        }
      },
      "52": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 20
        }
      },
      "53": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 18
        }
      },
      "54": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 189,
          column: 25
        }
      },
      "55": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 25
        }
      },
      "56": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 191,
          column: 28
        }
      },
      "57": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 28
        }
      },
      "58": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 193,
          column: 26
        }
      },
      "59": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 26
        }
      },
      "60": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 26
        }
      },
      "61": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "62": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "63": {
        start: {
          line: 202,
          column: 30
        },
        end: {
          line: 202,
          column: 60
        }
      },
      "64": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 90
        }
      },
      "65": {
        start: {
          line: 203,
          column: 62
        },
        end: {
          line: 203,
          column: 86
        }
      },
      "66": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 51
        }
      },
      "67": {
        start: {
          line: 211,
          column: 27
        },
        end: {
          line: 211,
          column: 60
        }
      },
      "68": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 213,
          column: 21
        }
      },
      "69": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 21
        }
      },
      "70": {
        start: {
          line: 214,
          column: 38
        },
        end: {
          line: 214,
          column: 41
        }
      },
      "71": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 59
        }
      },
      "72": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 17
        }
      },
      "73": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 42
        }
      },
      "74": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "75": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 82
        }
      },
      "76": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "77": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "78": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 43
        }
      },
      "79": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 240,
          column: 25
        }
      },
      "80": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "81": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 61
        }
      },
      "82": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 57
        }
      },
      "83": {
        start: {
          line: 246,
          column: 13
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "84": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 57
        }
      },
      "85": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 53
        }
      },
      "86": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "87": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 55
        }
      },
      "88": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 51
        }
      },
      "89": {
        start: {
          line: 255,
          column: 13
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "90": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 51
        }
      },
      "91": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 47
        }
      },
      "92": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "93": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 55
        }
      },
      "94": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "95": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "96": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 63
        }
      },
      "97": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 48
        }
      },
      "98": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "99": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 52
        }
      },
      "100": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 48
        }
      },
      "101": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "102": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 73
        }
      },
      "103": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 283,
          column: 22
        }
      },
      "104": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 22
        }
      },
      "105": {
        start: {
          line: 284,
          column: 32
        },
        end: {
          line: 284,
          column: 34
        }
      },
      "106": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 285,
          column: 43
        }
      },
      "107": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "108": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 295,
          column: 15
        }
      },
      "109": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 303,
          column: 15
        }
      },
      "110": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "111": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 314,
          column: 15
        }
      },
      "112": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "113": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "114": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "115": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 336,
          column: 15
        }
      },
      "116": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "117": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 70
        }
      },
      "118": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 104
        }
      },
      "119": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 31
        }
      },
      "120": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "121": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 356,
          column: 14
        }
      },
      "122": {
        start: {
          line: 358,
          column: 24
        },
        end: {
          line: 358,
          column: 43
        }
      },
      "123": {
        start: {
          line: 359,
          column: 24
        },
        end: {
          line: 359,
          column: 26
        }
      },
      "124": {
        start: {
          line: 361,
          column: 36
        },
        end: {
          line: 361,
          column: 40
        }
      },
      "125": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 60
        }
      },
      "126": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 59
        }
      },
      "127": {
        start: {
          line: 366,
          column: 30
        },
        end: {
          line: 366,
          column: 52
        }
      },
      "128": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 53
        }
      },
      "129": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 56
        }
      },
      "130": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "131": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 41
        }
      },
      "132": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 49
        }
      },
      "133": {
        start: {
          line: 374,
          column: 13
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "134": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 375,
          column: 41
        }
      },
      "135": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 53
        }
      },
      "136": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "137": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 41
        }
      },
      "138": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 54
        }
      },
      "139": {
        start: {
          line: 384,
          column: 33
        },
        end: {
          line: 384,
          column: 77
        }
      },
      "140": {
        start: {
          line: 386,
          column: 27
        },
        end: {
          line: 386,
          column: 72
        }
      },
      "141": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 393,
          column: 10
        }
      },
      "142": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "143": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 105
        }
      },
      "144": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 79
        }
      },
      "145": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 35
        }
      },
      "146": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "147": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 53
        }
      },
      "148": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 40
        }
      },
      "149": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 53
        }
      },
      "150": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 432,
          column: 25
        }
      },
      "151": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 432,
          column: 25
        }
      },
      "152": {
        start: {
          line: 433,
          column: 32
        },
        end: {
          line: 433,
          column: 67
        }
      },
      "153": {
        start: {
          line: 434,
          column: 32
        },
        end: {
          line: 434,
          column: 60
        }
      },
      "154": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "155": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 25
        }
      },
      "156": {
        start: {
          line: 440,
          column: 37
        },
        end: {
          line: 440,
          column: 92
        }
      },
      "157": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "158": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 25
        }
      },
      "159": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 20
        }
      },
      "160": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 451,
          column: 21
        }
      },
      "161": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 21
        }
      },
      "162": {
        start: {
          line: 452,
          column: 24
        },
        end: {
          line: 452,
          column: 43
        }
      },
      "163": {
        start: {
          line: 453,
          column: 20
        },
        end: {
          line: 453,
          column: 23
        }
      },
      "164": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "165": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 28
        }
      },
      "166": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 22
        }
      },
      "167": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 28
        }
      },
      "168": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 461,
          column: 22
        }
      },
      "169": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 28
        }
      },
      "170": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 464,
          column: 22
        }
      },
      "171": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 468,
          column: 45
        }
      },
      "172": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 45
        }
      },
      "173": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 471,
          column: 24
        }
      },
      "174": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 24
        }
      },
      "175": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 474,
          column: 24
        }
      },
      "176": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 24
        }
      },
      "177": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 477,
          column: 24
        }
      },
      "178": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 24
        }
      },
      "179": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 46
        }
      },
      "180": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 495,
          column: 9
        }
      },
      "181": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 77
        }
      },
      "182": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 40
        }
      },
      "183": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 37
        }
      },
      "184": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 39
        }
      },
      "185": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 78
        }
      },
      "186": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 90
        }
      },
      "187": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 24
        }
      },
      "188": {
        start: {
          line: 498,
          column: 0
        },
        end: {
          line: 498,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 58
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 82
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 50
          },
          end: {
            line: 92,
            column: 51
          }
        },
        loc: {
          start: {
            line: 92,
            column: 62
          },
          end: {
            line: 101,
            column: 13
          }
        },
        line: 92
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 27
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 114
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 27
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 137
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 29
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 171
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 26
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 179
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 45
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 187
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 33
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 199
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 203,
            column: 51
          }
        },
        loc: {
          start: {
            line: 203,
            column: 62
          },
          end: {
            line: 203,
            column: 86
          }
        },
        line: 203
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 209
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 21
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 220
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 26
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 227
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 236
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 36
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 281
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 65
          },
          end: {
            line: 394,
            column: 5
          }
        },
        line: 348
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        loc: {
          start: {
            line: 398,
            column: 39
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 398
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 24
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 409
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        loc: {
          start: {
            line: 415,
            column: 29
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 415
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 28
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 424
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        loc: {
          start: {
            line: 430,
            column: 50
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 430
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 27
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 449
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 483,
            column: 4
          },
          end: {
            line: 483,
            column: 5
          }
        },
        loc: {
          start: {
            line: 483,
            column: 21
          },
          end: {
            line: 496,
            column: 5
          }
        },
        line: 483
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 82,
            column: 43
          }
        }],
        line: 82
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 119,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "3": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "4": {
        loc: {
          start: {
            line: 147,
            column: 32
          },
          end: {
            line: 147,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 32
          },
          end: {
            line: 147,
            column: 63
          }
        }, {
          start: {
            line: 147,
            column: 67
          },
          end: {
            line: 147,
            column: 68
          }
        }],
        line: 147
      },
      "5": {
        loc: {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 54
          }
        }, {
          start: {
            line: 154,
            column: 58
          },
          end: {
            line: 154,
            column: 59
          }
        }],
        line: 154
      },
      "6": {
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 155,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 155,
            column: 55
          }
        }, {
          start: {
            line: 155,
            column: 59
          },
          end: {
            line: 155,
            column: 60
          }
        }],
        line: 155
      },
      "7": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 189,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 189,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 191,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 191,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 193,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 193,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "10": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 201,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 201,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "11": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 213,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "12": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "13": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 238,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 238,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "14": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: 246,
            column: 13
          },
          end: {
            line: 249,
            column: 9
          }
        }],
        line: 242
      },
      "15": {
        loc: {
          start: {
            line: 246,
            column: 13
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 13
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "16": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: 255,
            column: 13
          },
          end: {
            line: 258,
            column: 9
          }
        }],
        line: 251
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 13
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 13
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "19": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "20": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "21": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "22": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 283,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 283,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "23": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 304,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "24": {
        loc: {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 287,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 287,
            column: 49
          }
        }, {
          start: {
            line: 287,
            column: 53
          },
          end: {
            line: 287,
            column: 86
          }
        }],
        line: 287
      },
      "25": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "26": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "27": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "28": {
        loc: {
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "29": {
        loc: {
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "30": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        }, {
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 377,
            column: 9
          }
        }],
        line: 370
      },
      "31": {
        loc: {
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 377,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 13
          },
          end: {
            line: 377,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "32": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "33": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "34": {
        loc: {
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 432,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 432,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "35": {
        loc: {
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "36": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "37": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 451,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 451,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "38": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 458,
            column: 22
          }
        }, {
          start: {
            line: 459,
            column: 12
          },
          end: {
            line: 461,
            column: 22
          }
        }, {
          start: {
            line: 462,
            column: 12
          },
          end: {
            line: 464,
            column: 22
          }
        }],
        line: 455
      },
      "39": {
        loc: {
          start: {
            line: 467,
            column: 8
          },
          end: {
            line: 468,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 8
          },
          end: {
            line: 468,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "40": {
        loc: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 471,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 471,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "41": {
        loc: {
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 474,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 474,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "42": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 477,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 477,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\resource-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\resource-monitor.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * RESOURCE MONITOR - LLM RESOURCE MANAGEMENT FOR INTEL NUC\r\n * =============================================================================\r\n * \r\n * This module monitors system resources specifically for LLM operations on\r\n * Intel NUC hardware. It provides real-time monitoring, optimization\r\n * recommendations, and automatic resource management to ensure optimal\r\n * performance within hardware constraints.\r\n * \r\n * Key Features:\r\n * - Real-time CPU, memory, and thermal monitoring\r\n * - LLM-specific resource optimization\r\n * - Automatic throttling and scaling\r\n * - Performance prediction and recommendations\r\n * - Resource allocation for trading vs AI operations\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { SystemMonitor } from '@/infrastructure/system-monitor';\r\n\r\n/**\r\n * Interface for LLM-specific resource metrics\r\n */\r\ninterface LLMResourceMetrics {\r\n  // Memory metrics\r\n  totalMemory: number; // MB\r\n  availableMemory: number; // MB\r\n  llmMemoryUsage: number; // MB\r\n  memoryPressure: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  \r\n  // CPU metrics\r\n  cpuUsage: number; // percentage\r\n  cpuTemperature: number; // Celsius\r\n  availableCores: number;\r\n  llmCpuUsage: number; // percentage\r\n  \r\n  // Performance metrics\r\n  inferenceLatency: number; // milliseconds\r\n  throughput: number; // tokens per second\r\n  queueLength: number; // pending requests\r\n  \r\n  // System health\r\n  thermalThrottling: boolean;\r\n  swapUsage: number; // MB\r\n  diskIOWait: number; // percentage\r\n  \r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Interface for resource optimization recommendations\r\n */\r\ninterface OptimizationRecommendation {\r\n  type: 'MODEL_SWITCH' | 'PARAMETER_ADJUST' | 'RESOURCE_ALLOCATION' | 'THERMAL_MANAGEMENT';\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  description: string;\r\n  expectedImpact: string;\r\n  implementation: string;\r\n  estimatedBenefit: number; // 0-100 percentage improvement\r\n}\r\n\r\n/**\r\n * Interface for resource allocation strategy\r\n */\r\ninterface ResourceAllocationStrategy {\r\n  tradingPriority: number; // 0-100, higher means more resources for trading\r\n  aiPriority: number; // 0-100, higher means more resources for AI\r\n  memoryAllocation: {\r\n    trading: number; // MB\r\n    ai: number; // MB\r\n    system: number; // MB\r\n  };\r\n  cpuAllocation: {\r\n    trading: number; // percentage\r\n    ai: number; // percentage\r\n    system: number; // percentage\r\n  };\r\n}\r\n\r\n/**\r\n * Interface for performance prediction\r\n */\r\ninterface PerformancePrediction {\r\n  expectedInferenceTime: number; // milliseconds\r\n  expectedAccuracy: number; // 0-100\r\n  resourceRequirement: number; // MB\r\n  confidence: number; // 0-100\r\n  factors: string[];\r\n}\r\n\r\n/**\r\n * Resource Monitor class for LLM operations on Intel NUC\r\n */\r\nexport class LLMResourceMonitor extends EventEmitter {\r\n  private systemMonitor: SystemMonitor;\r\n  private isMonitoring: boolean = false;\r\n  private monitoringInterval: NodeJS.Timeout | null = null;\r\n  private currentMetrics: LLMResourceMetrics | null = null;\r\n  private metricsHistory: LLMResourceMetrics[] = [];\r\n  private maxHistorySize: number = 1000; // Keep last 1000 measurements\r\n  private currentAllocationStrategy: ResourceAllocationStrategy;\r\n  \r\n  // Intel NUC specific thresholds\r\n  private readonly THRESHOLDS = {\r\n    memory: {\r\n      low: 2048, // 2GB available\r\n      medium: 1024, // 1GB available\r\n      high: 512, // 512MB available\r\n      critical: 256 // 256MB available\r\n    },\r\n    cpu: {\r\n      normal: 70, // 70% usage\r\n      high: 85, // 85% usage\r\n      critical: 95 // 95% usage\r\n    },\r\n    temperature: {\r\n      normal: 70, // 70\xB0C\r\n      warning: 80, // 80\xB0C\r\n      critical: 90 // 90\xB0C\r\n    }\r\n  };\r\n\r\n  constructor(systemMonitor: SystemMonitor) {\r\n    super();\r\n    this.systemMonitor = systemMonitor;\r\n    \r\n    // Default resource allocation strategy\r\n    this.currentAllocationStrategy = {\r\n      tradingPriority: 70, // Trading gets priority\r\n      aiPriority: 30,\r\n      memoryAllocation: {\r\n        trading: 4096, // 4GB for trading\r\n        ai: 6144, // 6GB for AI\r\n        system: 1856 // ~1.8GB for system\r\n      },\r\n      cpuAllocation: {\r\n        trading: 60, // 60% for trading\r\n        ai: 30, // 30% for AI\r\n        system: 10 // 10% for system\r\n      }\r\n    };\r\n\r\n    logger.info('\uD83D\uDCCA LLM Resource Monitor initialized for Intel NUC');\r\n  }\r\n\r\n  /**\r\n   * Start resource monitoring\r\n   * Begins continuous monitoring of system resources for LLM operations\r\n   */\r\n  public async startMonitoring(intervalMs: number = 5000): Promise<void> {\r\n    try {\r\n      if (this.isMonitoring) {\r\n        logger.warn('\u26A0\uFE0F Resource monitoring already running');\r\n        return;\r\n      }\r\n\r\n      logger.info('\uD83D\uDE80 Starting LLM resource monitoring...');\r\n\r\n      // Initial metrics collection\r\n      await this.collectMetrics();\r\n\r\n      // Start periodic monitoring\r\n      this.monitoringInterval = setInterval(async () => {\r\n        try {\r\n          await this.collectMetrics();\r\n          await this.analyzeMetrics();\r\n          await this.generateRecommendations();\r\n        } catch (error) {\r\n          logger.error('\u274C Error in resource monitoring cycle:', error);\r\n        }\r\n      }, intervalMs);\r\n\r\n      this.isMonitoring = true;\r\n      logger.info('\u2705 LLM resource monitoring started');\r\n\r\n      this.emit('monitoringStarted');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to start resource monitoring:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop resource monitoring\r\n   */\r\n  public async stopMonitoring(): Promise<void> {\r\n    try {\r\n      if (!this.isMonitoring) {\r\n        logger.warn('\u26A0\uFE0F Resource monitoring not running');\r\n        return;\r\n      }\r\n\r\n      logger.info('\uD83D\uDED1 Stopping LLM resource monitoring...');\r\n\r\n      if (this.monitoringInterval) {\r\n        clearInterval(this.monitoringInterval);\r\n        this.monitoringInterval = null;\r\n      }\r\n\r\n      this.isMonitoring = false;\r\n      logger.info('\u2705 LLM resource monitoring stopped');\r\n\r\n      this.emit('monitoringStopped');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error stopping resource monitoring:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect current system metrics\r\n   */\r\n  private async collectMetrics(): Promise<void> {\r\n    try {\r\n      const systemResources = await this.systemMonitor.getCurrentResources();\r\n      \r\n      // Calculate LLM-specific metrics\r\n      const metrics: LLMResourceMetrics = {\r\n        totalMemory: 12288, // 12GB Intel NUC\r\n        availableMemory: systemResources.memory.available,\r\n        llmMemoryUsage: this.estimateLLMMemoryUsage(),\r\n        memoryPressure: this.calculateMemoryPressure(systemResources.memory.available),\r\n        \r\n        cpuUsage: systemResources.cpu.usage,\r\n        cpuTemperature: systemResources.cpu.temperature || 0,\r\n        availableCores: systemResources.cpu.cores,\r\n        llmCpuUsage: this.estimateLLMCpuUsage(),\r\n        \r\n        inferenceLatency: this.getAverageInferenceLatency(),\r\n        throughput: this.calculateThroughput(),\r\n        queueLength: this.getQueueLength(),\r\n        \r\n        thermalThrottling: systemResources.cpu.temperature > this.THRESHOLDS.temperature.warning,\r\n        swapUsage: systemResources.memory.swap || 0,\r\n        diskIOWait: systemResources.disk.ioWait || 0,\r\n        \r\n        timestamp: new Date()\r\n      };\r\n\r\n      this.currentMetrics = metrics;\r\n      this.addToHistory(metrics);\r\n\r\n      // Emit metrics for other components\r\n      this.emit('metricsUpdated', metrics);\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error collecting metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Estimate current LLM memory usage\r\n   */\r\n  private estimateLLMMemoryUsage(): number {\r\n    // This would track actual LLM memory usage in production\r\n    // For now, return estimated usage based on loaded models\r\n    return 2048; // Mock 2GB usage\r\n  }\r\n\r\n  /**\r\n   * Estimate current LLM CPU usage\r\n   */\r\n  private estimateLLMCpuUsage(): number {\r\n    // This would track actual LLM CPU usage in production\r\n    // For now, return estimated usage\r\n    return 25; // Mock 25% CPU usage\r\n  }\r\n\r\n  /**\r\n   * Calculate memory pressure level\r\n   */\r\n  private calculateMemoryPressure(availableMemory: number): 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' {\r\n    if (availableMemory >= this.THRESHOLDS.memory.low) return 'LOW';\r\n    if (availableMemory >= this.THRESHOLDS.memory.medium) return 'MEDIUM';\r\n    if (availableMemory >= this.THRESHOLDS.memory.high) return 'HIGH';\r\n    return 'CRITICAL';\r\n  }\r\n\r\n  /**\r\n   * Get average inference latency from recent history\r\n   */\r\n  private getAverageInferenceLatency(): number {\r\n    if (this.metricsHistory.length === 0) return 0;\r\n    \r\n    const recentMetrics = this.metricsHistory.slice(-10); // Last 10 measurements\r\n    const totalLatency = recentMetrics.reduce((sum, m) => sum + m.inferenceLatency, 0);\r\n    \r\n    return totalLatency / recentMetrics.length;\r\n  }\r\n\r\n  /**\r\n   * Calculate current throughput (tokens per second)\r\n   */\r\n  private calculateThroughput(): number {\r\n    // Mock calculation - in production, this would track actual token generation\r\n    const avgLatency = this.getAverageInferenceLatency();\r\n    if (avgLatency === 0) return 0;\r\n    \r\n    const avgTokensPerInference = 100; // Estimated average tokens\r\n    return (avgTokensPerInference / avgLatency) * 1000; // Convert to per second\r\n  }\r\n\r\n  /**\r\n   * Get current queue length for pending LLM requests\r\n   */\r\n  private getQueueLength(): number {\r\n    // Mock implementation - in production, this would track actual queue\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Add metrics to history and maintain size limit\r\n   */\r\n  private addToHistory(metrics: LLMResourceMetrics): void {\r\n    this.metricsHistory.push(metrics);\r\n    \r\n    if (this.metricsHistory.length > this.maxHistorySize) {\r\n      this.metricsHistory = this.metricsHistory.slice(-this.maxHistorySize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analyze current metrics and detect issues\r\n   */\r\n  private async analyzeMetrics(): Promise<void> {\r\n    if (!this.currentMetrics) return;\r\n\r\n    const metrics = this.currentMetrics;\r\n    const issues: string[] = [];\r\n\r\n    // Check memory pressure\r\n    if (metrics.memoryPressure === 'CRITICAL') {\r\n      issues.push('Critical memory pressure detected');\r\n      this.emit('criticalMemoryPressure', metrics);\r\n    } else if (metrics.memoryPressure === 'HIGH') {\r\n      issues.push('High memory pressure detected');\r\n      this.emit('highMemoryPressure', metrics);\r\n    }\r\n\r\n    // Check CPU usage\r\n    if (metrics.cpuUsage > this.THRESHOLDS.cpu.critical) {\r\n      issues.push('Critical CPU usage detected');\r\n      this.emit('criticalCpuUsage', metrics);\r\n    } else if (metrics.cpuUsage > this.THRESHOLDS.cpu.high) {\r\n      issues.push('High CPU usage detected');\r\n      this.emit('highCpuUsage', metrics);\r\n    }\r\n\r\n    // Check thermal throttling\r\n    if (metrics.thermalThrottling) {\r\n      issues.push('Thermal throttling detected');\r\n      this.emit('thermalThrottling', metrics);\r\n    }\r\n\r\n    // Check inference performance\r\n    if (metrics.inferenceLatency > 5000) { // 5 seconds is too slow for trading\r\n      issues.push('Slow inference performance detected');\r\n      this.emit('slowInference', metrics);\r\n    }\r\n\r\n    // Check swap usage\r\n    if (metrics.swapUsage > 1024) { // More than 1GB swap usage\r\n      issues.push('High swap usage detected');\r\n      this.emit('highSwapUsage', metrics);\r\n    }\r\n\r\n    if (issues.length > 0) {\r\n      logger.warn('\u26A0\uFE0F Resource issues detected:', issues);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate optimization recommendations based on current metrics\r\n   */\r\n  private async generateRecommendations(): Promise<OptimizationRecommendation[]> {\r\n    if (!this.currentMetrics) return [];\r\n\r\n    const recommendations: OptimizationRecommendation[] = [];\r\n    const metrics = this.currentMetrics;\r\n\r\n    // Memory optimization recommendations\r\n    if (metrics.memoryPressure === 'CRITICAL' || metrics.memoryPressure === 'HIGH') {\r\n      recommendations.push({\r\n        type: 'MODEL_SWITCH',\r\n        priority: 'HIGH',\r\n        description: 'Switch to a smaller, more memory-efficient model',\r\n        expectedImpact: 'Reduce memory usage by 30-50%',\r\n        implementation: 'Load TinyLlama model instead of current model',\r\n        estimatedBenefit: 40\r\n      });\r\n\r\n      recommendations.push({\r\n        type: 'RESOURCE_ALLOCATION',\r\n        priority: 'MEDIUM',\r\n        description: 'Reduce AI memory allocation in favor of trading operations',\r\n        expectedImpact: 'Free up 1-2GB for critical trading operations',\r\n        implementation: 'Adjust memory allocation strategy',\r\n        estimatedBenefit: 25\r\n      });\r\n    }\r\n\r\n    // CPU optimization recommendations\r\n    if (metrics.cpuUsage > this.THRESHOLDS.cpu.high) {\r\n      recommendations.push({\r\n        type: 'PARAMETER_ADJUST',\r\n        priority: 'MEDIUM',\r\n        description: 'Reduce CPU threads used by LLM inference',\r\n        expectedImpact: 'Reduce CPU usage by 10-20%',\r\n        implementation: 'Decrease cpuThreads parameter from 4 to 2',\r\n        estimatedBenefit: 15\r\n      });\r\n    }\r\n\r\n    // Thermal management recommendations\r\n    if (metrics.thermalThrottling) {\r\n      recommendations.push({\r\n        type: 'THERMAL_MANAGEMENT',\r\n        priority: 'CRITICAL',\r\n        description: 'Implement aggressive thermal throttling',\r\n        expectedImpact: 'Prevent hardware damage and maintain stability',\r\n        implementation: 'Reduce inference frequency and CPU usage',\r\n        estimatedBenefit: 60\r\n      });\r\n    }\r\n\r\n    // Performance optimization recommendations\r\n    if (metrics.inferenceLatency > 3000) {\r\n      recommendations.push({\r\n        type: 'PARAMETER_ADJUST',\r\n        priority: 'MEDIUM',\r\n        description: 'Optimize model parameters for faster inference',\r\n        expectedImpact: 'Reduce inference time by 20-30%',\r\n        implementation: 'Reduce max_tokens and adjust temperature',\r\n        estimatedBenefit: 25\r\n      });\r\n    }\r\n\r\n    // Emit recommendations\r\n    if (recommendations.length > 0) {\r\n      this.emit('optimizationRecommendations', recommendations);\r\n      logger.info(`\uD83D\uDCA1 Generated ${recommendations.length} optimization recommendations`);\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Predict performance for a given model configuration\r\n   */\r\n  public predictPerformance(\r\n    modelName: string,\r\n    memoryRequirement: number,\r\n    cpuThreads: number\r\n  ): PerformancePrediction {\r\n    if (!this.currentMetrics) {\r\n      return {\r\n        expectedInferenceTime: 0,\r\n        expectedAccuracy: 0,\r\n        resourceRequirement: memoryRequirement,\r\n        confidence: 0,\r\n        factors: ['No current metrics available']\r\n      };\r\n    }\r\n\r\n    const metrics = this.currentMetrics;\r\n    const factors: string[] = [];\r\n    \r\n    // Base inference time estimation\r\n    let expectedInferenceTime = 1000; // Base 1 second\r\n    \r\n    // Adjust for model size\r\n    expectedInferenceTime *= (memoryRequirement / 1000); // Scale with memory requirement\r\n    factors.push(`Model size: ${memoryRequirement}MB`);\r\n    \r\n    // Adjust for available CPU\r\n    const cpuLoadFactor = metrics.cpuUsage / 100;\r\n    expectedInferenceTime *= (1 + cpuLoadFactor);\r\n    factors.push(`CPU usage: ${metrics.cpuUsage}%`);\r\n    \r\n    // Adjust for memory pressure\r\n    if (metrics.memoryPressure === 'HIGH') {\r\n      expectedInferenceTime *= 1.5;\r\n      factors.push('High memory pressure');\r\n    } else if (metrics.memoryPressure === 'CRITICAL') {\r\n      expectedInferenceTime *= 2.0;\r\n      factors.push('Critical memory pressure');\r\n    }\r\n    \r\n    // Adjust for thermal throttling\r\n    if (metrics.thermalThrottling) {\r\n      expectedInferenceTime *= 1.3;\r\n      factors.push('Thermal throttling active');\r\n    }\r\n    \r\n    // Estimate accuracy based on model size (larger models generally more accurate)\r\n    const expectedAccuracy = Math.min(95, 60 + (memoryRequirement / 100));\r\n    \r\n    // Calculate confidence based on available data\r\n    const confidence = Math.min(100, this.metricsHistory.length * 2);\r\n    \r\n    return {\r\n      expectedInferenceTime: Math.round(expectedInferenceTime),\r\n      expectedAccuracy: Math.round(expectedAccuracy),\r\n      resourceRequirement: memoryRequirement,\r\n      confidence,\r\n      factors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update resource allocation strategy\r\n   */\r\n  public updateAllocationStrategy(strategy: Partial<ResourceAllocationStrategy>): void {\r\n    this.currentAllocationStrategy = {\r\n      ...this.currentAllocationStrategy,\r\n      ...strategy\r\n    };\r\n    \r\n    logger.info('\uD83D\uDD27 Resource allocation strategy updated:', this.currentAllocationStrategy);\r\n    this.emit('allocationStrategyUpdated', this.currentAllocationStrategy);\r\n  }\r\n\r\n  /**\r\n   * Get current metrics\r\n   */\r\n  public getCurrentMetrics(): LLMResourceMetrics | null {\r\n    return this.currentMetrics;\r\n  }\r\n\r\n  /**\r\n   * Get metrics history\r\n   */\r\n  public getMetricsHistory(limit?: number): LLMResourceMetrics[] {\r\n    if (limit) {\r\n      return this.metricsHistory.slice(-limit);\r\n    }\r\n    return [...this.metricsHistory];\r\n  }\r\n\r\n  /**\r\n   * Get current resource allocation strategy\r\n   */\r\n  public getAllocationStrategy(): ResourceAllocationStrategy {\r\n    return { ...this.currentAllocationStrategy };\r\n  }\r\n\r\n  /**\r\n   * Check if system can handle a specific model\r\n   */\r\n  public canHandleModel(memoryRequirement: number, cpuThreads: number): boolean {\r\n    if (!this.currentMetrics) return false;\r\n    \r\n    const availableMemory = this.currentMetrics.availableMemory;\r\n    const currentCpuUsage = this.currentMetrics.cpuUsage;\r\n    \r\n    // Check memory availability (leave 1GB buffer)\r\n    if (memoryRequirement > (availableMemory - 1024)) {\r\n      return false;\r\n    }\r\n    \r\n    // Check CPU availability (don't exceed 90% total usage)\r\n    const estimatedCpuIncrease = (cpuThreads / this.currentMetrics.availableCores) * 100;\r\n    if ((currentCpuUsage + estimatedCpuIncrease) > 90) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get system health score (0-100)\r\n   */\r\n  public getSystemHealthScore(): number {\r\n    if (!this.currentMetrics) return 0;\r\n    \r\n    const metrics = this.currentMetrics;\r\n    let score = 100;\r\n    \r\n    // Memory pressure penalty\r\n    switch (metrics.memoryPressure) {\r\n      case 'MEDIUM': score -= 10; break;\r\n      case 'HIGH': score -= 25; break;\r\n      case 'CRITICAL': score -= 50; break;\r\n    }\r\n    \r\n    // CPU usage penalty\r\n    if (metrics.cpuUsage > 70) score -= (metrics.cpuUsage - 70);\r\n    \r\n    // Thermal throttling penalty\r\n    if (metrics.thermalThrottling) score -= 30;\r\n    \r\n    // Swap usage penalty\r\n    if (metrics.swapUsage > 512) score -= 20;\r\n    \r\n    // Inference performance penalty\r\n    if (metrics.inferenceLatency > 2000) score -= 15;\r\n    \r\n    return Math.max(0, Math.round(score));\r\n  }\r\n\r\n  /**\r\n   * Shutdown the resource monitor\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDED1 Shutting down LLM Resource Monitor...');\r\n      \r\n      await this.stopMonitoring();\r\n      \r\n      // Clear history\r\n      this.metricsHistory = [];\r\n      this.currentMetrics = null;\r\n      \r\n      logger.info('\u2705 LLM Resource Monitor shutdown completed');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error during LLM Resource Monitor shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  LLMResourceMetrics,\r\n  OptimizationRecommendation,\r\n  ResourceAllocationStrategy,\r\n  PerformancePrediction\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9e3ef287562c3fa4fc69a82c22139584366bc881"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1048vy7b82 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1048vy7b82();
cov_1048vy7b82().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1048vy7b82().s[1]++;
exports.LLMResourceMonitor = void 0;
const events_1 =
/* istanbul ignore next */
(cov_1048vy7b82().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_1048vy7b82().s[3]++, require("@/core/logging/logger"));
/**
 * Resource Monitor class for LLM operations on Intel NUC
 */
class LLMResourceMonitor extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  systemMonitor;
  isMonitoring =
  /* istanbul ignore next */
  (cov_1048vy7b82().s[4]++, false);
  monitoringInterval =
  /* istanbul ignore next */
  (cov_1048vy7b82().s[5]++, null);
  currentMetrics =
  /* istanbul ignore next */
  (cov_1048vy7b82().s[6]++, null);
  metricsHistory =
  /* istanbul ignore next */
  (cov_1048vy7b82().s[7]++, []);
  maxHistorySize =
  /* istanbul ignore next */
  (cov_1048vy7b82().s[8]++, 1000); // Keep last 1000 measurements
  currentAllocationStrategy;
  // Intel NUC specific thresholds
  THRESHOLDS =
  /* istanbul ignore next */
  (cov_1048vy7b82().s[9]++, {
    memory: {
      low: 2048,
      // 2GB available
      medium: 1024,
      // 1GB available
      high: 512,
      // 512MB available
      critical: 256 // 256MB available
    },
    cpu: {
      normal: 70,
      // 70% usage
      high: 85,
      // 85% usage
      critical: 95 // 95% usage
    },
    temperature: {
      normal: 70,
      // 70°C
      warning: 80,
      // 80°C
      critical: 90 // 90°C
    }
  });
  constructor(systemMonitor) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[0]++;
    cov_1048vy7b82().s[10]++;
    super();
    /* istanbul ignore next */
    cov_1048vy7b82().s[11]++;
    this.systemMonitor = systemMonitor;
    // Default resource allocation strategy
    /* istanbul ignore next */
    cov_1048vy7b82().s[12]++;
    this.currentAllocationStrategy = {
      tradingPriority: 70,
      // Trading gets priority
      aiPriority: 30,
      memoryAllocation: {
        trading: 4096,
        // 4GB for trading
        ai: 6144,
        // 6GB for AI
        system: 1856 // ~1.8GB for system
      },
      cpuAllocation: {
        trading: 60,
        // 60% for trading
        ai: 30,
        // 30% for AI
        system: 10 // 10% for system
      }
    };
    /* istanbul ignore next */
    cov_1048vy7b82().s[13]++;
    logger_1.logger.info('📊 LLM Resource Monitor initialized for Intel NUC');
  }
  /**
   * Start resource monitoring
   * Begins continuous monitoring of system resources for LLM operations
   */
  async startMonitoring(intervalMs =
  /* istanbul ignore next */
  (cov_1048vy7b82().b[0][0]++, 5000)) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[1]++;
    cov_1048vy7b82().s[14]++;
    try {
      /* istanbul ignore next */
      cov_1048vy7b82().s[15]++;
      if (this.isMonitoring) {
        /* istanbul ignore next */
        cov_1048vy7b82().b[1][0]++;
        cov_1048vy7b82().s[16]++;
        logger_1.logger.warn('⚠️ Resource monitoring already running');
        /* istanbul ignore next */
        cov_1048vy7b82().s[17]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1048vy7b82().b[1][1]++;
      }
      cov_1048vy7b82().s[18]++;
      logger_1.logger.info('🚀 Starting LLM resource monitoring...');
      // Initial metrics collection
      /* istanbul ignore next */
      cov_1048vy7b82().s[19]++;
      await this.collectMetrics();
      // Start periodic monitoring
      /* istanbul ignore next */
      cov_1048vy7b82().s[20]++;
      this.monitoringInterval = setInterval(async () => {
        /* istanbul ignore next */
        cov_1048vy7b82().f[2]++;
        cov_1048vy7b82().s[21]++;
        try {
          /* istanbul ignore next */
          cov_1048vy7b82().s[22]++;
          await this.collectMetrics();
          /* istanbul ignore next */
          cov_1048vy7b82().s[23]++;
          await this.analyzeMetrics();
          /* istanbul ignore next */
          cov_1048vy7b82().s[24]++;
          await this.generateRecommendations();
        } catch (error) {
          /* istanbul ignore next */
          cov_1048vy7b82().s[25]++;
          logger_1.logger.error('❌ Error in resource monitoring cycle:', error);
        }
      }, intervalMs);
      /* istanbul ignore next */
      cov_1048vy7b82().s[26]++;
      this.isMonitoring = true;
      /* istanbul ignore next */
      cov_1048vy7b82().s[27]++;
      logger_1.logger.info('✅ LLM resource monitoring started');
      /* istanbul ignore next */
      cov_1048vy7b82().s[28]++;
      this.emit('monitoringStarted');
    } catch (error) {
      /* istanbul ignore next */
      cov_1048vy7b82().s[29]++;
      logger_1.logger.error('❌ Failed to start resource monitoring:', error);
      /* istanbul ignore next */
      cov_1048vy7b82().s[30]++;
      throw error;
    }
  }
  /**
   * Stop resource monitoring
   */
  async stopMonitoring() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[3]++;
    cov_1048vy7b82().s[31]++;
    try {
      /* istanbul ignore next */
      cov_1048vy7b82().s[32]++;
      if (!this.isMonitoring) {
        /* istanbul ignore next */
        cov_1048vy7b82().b[2][0]++;
        cov_1048vy7b82().s[33]++;
        logger_1.logger.warn('⚠️ Resource monitoring not running');
        /* istanbul ignore next */
        cov_1048vy7b82().s[34]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1048vy7b82().b[2][1]++;
      }
      cov_1048vy7b82().s[35]++;
      logger_1.logger.info('🛑 Stopping LLM resource monitoring...');
      /* istanbul ignore next */
      cov_1048vy7b82().s[36]++;
      if (this.monitoringInterval) {
        /* istanbul ignore next */
        cov_1048vy7b82().b[3][0]++;
        cov_1048vy7b82().s[37]++;
        clearInterval(this.monitoringInterval);
        /* istanbul ignore next */
        cov_1048vy7b82().s[38]++;
        this.monitoringInterval = null;
      } else
      /* istanbul ignore next */
      {
        cov_1048vy7b82().b[3][1]++;
      }
      cov_1048vy7b82().s[39]++;
      this.isMonitoring = false;
      /* istanbul ignore next */
      cov_1048vy7b82().s[40]++;
      logger_1.logger.info('✅ LLM resource monitoring stopped');
      /* istanbul ignore next */
      cov_1048vy7b82().s[41]++;
      this.emit('monitoringStopped');
    } catch (error) {
      /* istanbul ignore next */
      cov_1048vy7b82().s[42]++;
      logger_1.logger.error('❌ Error stopping resource monitoring:', error);
      /* istanbul ignore next */
      cov_1048vy7b82().s[43]++;
      throw error;
    }
  }
  /**
   * Collect current system metrics
   */
  async collectMetrics() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[4]++;
    cov_1048vy7b82().s[44]++;
    try {
      const systemResources =
      /* istanbul ignore next */
      (cov_1048vy7b82().s[45]++, await this.systemMonitor.getCurrentResources());
      // Calculate LLM-specific metrics
      const metrics =
      /* istanbul ignore next */
      (cov_1048vy7b82().s[46]++, {
        totalMemory: 12288,
        // 12GB Intel NUC
        availableMemory: systemResources.memory.available,
        llmMemoryUsage: this.estimateLLMMemoryUsage(),
        memoryPressure: this.calculateMemoryPressure(systemResources.memory.available),
        cpuUsage: systemResources.cpu.usage,
        cpuTemperature:
        /* istanbul ignore next */
        (cov_1048vy7b82().b[4][0]++, systemResources.cpu.temperature) ||
        /* istanbul ignore next */
        (cov_1048vy7b82().b[4][1]++, 0),
        availableCores: systemResources.cpu.cores,
        llmCpuUsage: this.estimateLLMCpuUsage(),
        inferenceLatency: this.getAverageInferenceLatency(),
        throughput: this.calculateThroughput(),
        queueLength: this.getQueueLength(),
        thermalThrottling: systemResources.cpu.temperature > this.THRESHOLDS.temperature.warning,
        swapUsage:
        /* istanbul ignore next */
        (cov_1048vy7b82().b[5][0]++, systemResources.memory.swap) ||
        /* istanbul ignore next */
        (cov_1048vy7b82().b[5][1]++, 0),
        diskIOWait:
        /* istanbul ignore next */
        (cov_1048vy7b82().b[6][0]++, systemResources.disk.ioWait) ||
        /* istanbul ignore next */
        (cov_1048vy7b82().b[6][1]++, 0),
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_1048vy7b82().s[47]++;
      this.currentMetrics = metrics;
      /* istanbul ignore next */
      cov_1048vy7b82().s[48]++;
      this.addToHistory(metrics);
      // Emit metrics for other components
      /* istanbul ignore next */
      cov_1048vy7b82().s[49]++;
      this.emit('metricsUpdated', metrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_1048vy7b82().s[50]++;
      logger_1.logger.error('❌ Error collecting metrics:', error);
      /* istanbul ignore next */
      cov_1048vy7b82().s[51]++;
      throw error;
    }
  }
  /**
   * Estimate current LLM memory usage
   */
  estimateLLMMemoryUsage() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[5]++;
    cov_1048vy7b82().s[52]++;
    // This would track actual LLM memory usage in production
    // For now, return estimated usage based on loaded models
    return 2048; // Mock 2GB usage
  }
  /**
   * Estimate current LLM CPU usage
   */
  estimateLLMCpuUsage() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[6]++;
    cov_1048vy7b82().s[53]++;
    // This would track actual LLM CPU usage in production
    // For now, return estimated usage
    return 25; // Mock 25% CPU usage
  }
  /**
   * Calculate memory pressure level
   */
  calculateMemoryPressure(availableMemory) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[7]++;
    cov_1048vy7b82().s[54]++;
    if (availableMemory >= this.THRESHOLDS.memory.low) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[7][0]++;
      cov_1048vy7b82().s[55]++;
      return 'LOW';
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[7][1]++;
    }
    cov_1048vy7b82().s[56]++;
    if (availableMemory >= this.THRESHOLDS.memory.medium) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[8][0]++;
      cov_1048vy7b82().s[57]++;
      return 'MEDIUM';
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[8][1]++;
    }
    cov_1048vy7b82().s[58]++;
    if (availableMemory >= this.THRESHOLDS.memory.high) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[9][0]++;
      cov_1048vy7b82().s[59]++;
      return 'HIGH';
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[9][1]++;
    }
    cov_1048vy7b82().s[60]++;
    return 'CRITICAL';
  }
  /**
   * Get average inference latency from recent history
   */
  getAverageInferenceLatency() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[8]++;
    cov_1048vy7b82().s[61]++;
    if (this.metricsHistory.length === 0) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[10][0]++;
      cov_1048vy7b82().s[62]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[10][1]++;
    }
    const recentMetrics =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[63]++, this.metricsHistory.slice(-10)); // Last 10 measurements
    const totalLatency =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[64]++, recentMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_1048vy7b82().f[9]++;
      cov_1048vy7b82().s[65]++;
      return sum + m.inferenceLatency;
    }, 0));
    /* istanbul ignore next */
    cov_1048vy7b82().s[66]++;
    return totalLatency / recentMetrics.length;
  }
  /**
   * Calculate current throughput (tokens per second)
   */
  calculateThroughput() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[10]++;
    // Mock calculation - in production, this would track actual token generation
    const avgLatency =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[67]++, this.getAverageInferenceLatency());
    /* istanbul ignore next */
    cov_1048vy7b82().s[68]++;
    if (avgLatency === 0) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[11][0]++;
      cov_1048vy7b82().s[69]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[11][1]++;
    }
    const avgTokensPerInference =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[70]++, 100); // Estimated average tokens
    /* istanbul ignore next */
    cov_1048vy7b82().s[71]++;
    return avgTokensPerInference / avgLatency * 1000; // Convert to per second
  }
  /**
   * Get current queue length for pending LLM requests
   */
  getQueueLength() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[11]++;
    cov_1048vy7b82().s[72]++;
    // Mock implementation - in production, this would track actual queue
    return 0;
  }
  /**
   * Add metrics to history and maintain size limit
   */
  addToHistory(metrics) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[12]++;
    cov_1048vy7b82().s[73]++;
    this.metricsHistory.push(metrics);
    /* istanbul ignore next */
    cov_1048vy7b82().s[74]++;
    if (this.metricsHistory.length > this.maxHistorySize) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[12][0]++;
      cov_1048vy7b82().s[75]++;
      this.metricsHistory = this.metricsHistory.slice(-this.maxHistorySize);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[12][1]++;
    }
  }
  /**
   * Analyze current metrics and detect issues
   */
  async analyzeMetrics() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[13]++;
    cov_1048vy7b82().s[76]++;
    if (!this.currentMetrics) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[13][0]++;
      cov_1048vy7b82().s[77]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[13][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[78]++, this.currentMetrics);
    const issues =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[79]++, []);
    // Check memory pressure
    /* istanbul ignore next */
    cov_1048vy7b82().s[80]++;
    if (metrics.memoryPressure === 'CRITICAL') {
      /* istanbul ignore next */
      cov_1048vy7b82().b[14][0]++;
      cov_1048vy7b82().s[81]++;
      issues.push('Critical memory pressure detected');
      /* istanbul ignore next */
      cov_1048vy7b82().s[82]++;
      this.emit('criticalMemoryPressure', metrics);
    } else {
      /* istanbul ignore next */
      cov_1048vy7b82().b[14][1]++;
      cov_1048vy7b82().s[83]++;
      if (metrics.memoryPressure === 'HIGH') {
        /* istanbul ignore next */
        cov_1048vy7b82().b[15][0]++;
        cov_1048vy7b82().s[84]++;
        issues.push('High memory pressure detected');
        /* istanbul ignore next */
        cov_1048vy7b82().s[85]++;
        this.emit('highMemoryPressure', metrics);
      } else
      /* istanbul ignore next */
      {
        cov_1048vy7b82().b[15][1]++;
      }
    }
    // Check CPU usage
    /* istanbul ignore next */
    cov_1048vy7b82().s[86]++;
    if (metrics.cpuUsage > this.THRESHOLDS.cpu.critical) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[16][0]++;
      cov_1048vy7b82().s[87]++;
      issues.push('Critical CPU usage detected');
      /* istanbul ignore next */
      cov_1048vy7b82().s[88]++;
      this.emit('criticalCpuUsage', metrics);
    } else {
      /* istanbul ignore next */
      cov_1048vy7b82().b[16][1]++;
      cov_1048vy7b82().s[89]++;
      if (metrics.cpuUsage > this.THRESHOLDS.cpu.high) {
        /* istanbul ignore next */
        cov_1048vy7b82().b[17][0]++;
        cov_1048vy7b82().s[90]++;
        issues.push('High CPU usage detected');
        /* istanbul ignore next */
        cov_1048vy7b82().s[91]++;
        this.emit('highCpuUsage', metrics);
      } else
      /* istanbul ignore next */
      {
        cov_1048vy7b82().b[17][1]++;
      }
    }
    // Check thermal throttling
    /* istanbul ignore next */
    cov_1048vy7b82().s[92]++;
    if (metrics.thermalThrottling) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[18][0]++;
      cov_1048vy7b82().s[93]++;
      issues.push('Thermal throttling detected');
      /* istanbul ignore next */
      cov_1048vy7b82().s[94]++;
      this.emit('thermalThrottling', metrics);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[18][1]++;
    }
    // Check inference performance
    cov_1048vy7b82().s[95]++;
    if (metrics.inferenceLatency > 5000) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[19][0]++;
      cov_1048vy7b82().s[96]++;
      // 5 seconds is too slow for trading
      issues.push('Slow inference performance detected');
      /* istanbul ignore next */
      cov_1048vy7b82().s[97]++;
      this.emit('slowInference', metrics);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[19][1]++;
    }
    // Check swap usage
    cov_1048vy7b82().s[98]++;
    if (metrics.swapUsage > 1024) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[20][0]++;
      cov_1048vy7b82().s[99]++;
      // More than 1GB swap usage
      issues.push('High swap usage detected');
      /* istanbul ignore next */
      cov_1048vy7b82().s[100]++;
      this.emit('highSwapUsage', metrics);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[20][1]++;
    }
    cov_1048vy7b82().s[101]++;
    if (issues.length > 0) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[21][0]++;
      cov_1048vy7b82().s[102]++;
      logger_1.logger.warn('⚠️ Resource issues detected:', issues);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[21][1]++;
    }
  }
  /**
   * Generate optimization recommendations based on current metrics
   */
  async generateRecommendations() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[14]++;
    cov_1048vy7b82().s[103]++;
    if (!this.currentMetrics) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[22][0]++;
      cov_1048vy7b82().s[104]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[22][1]++;
    }
    const recommendations =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[105]++, []);
    const metrics =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[106]++, this.currentMetrics);
    // Memory optimization recommendations
    /* istanbul ignore next */
    cov_1048vy7b82().s[107]++;
    if (
    /* istanbul ignore next */
    (cov_1048vy7b82().b[24][0]++, metrics.memoryPressure === 'CRITICAL') ||
    /* istanbul ignore next */
    (cov_1048vy7b82().b[24][1]++, metrics.memoryPressure === 'HIGH')) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[23][0]++;
      cov_1048vy7b82().s[108]++;
      recommendations.push({
        type: 'MODEL_SWITCH',
        priority: 'HIGH',
        description: 'Switch to a smaller, more memory-efficient model',
        expectedImpact: 'Reduce memory usage by 30-50%',
        implementation: 'Load TinyLlama model instead of current model',
        estimatedBenefit: 40
      });
      /* istanbul ignore next */
      cov_1048vy7b82().s[109]++;
      recommendations.push({
        type: 'RESOURCE_ALLOCATION',
        priority: 'MEDIUM',
        description: 'Reduce AI memory allocation in favor of trading operations',
        expectedImpact: 'Free up 1-2GB for critical trading operations',
        implementation: 'Adjust memory allocation strategy',
        estimatedBenefit: 25
      });
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[23][1]++;
    }
    // CPU optimization recommendations
    cov_1048vy7b82().s[110]++;
    if (metrics.cpuUsage > this.THRESHOLDS.cpu.high) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[25][0]++;
      cov_1048vy7b82().s[111]++;
      recommendations.push({
        type: 'PARAMETER_ADJUST',
        priority: 'MEDIUM',
        description: 'Reduce CPU threads used by LLM inference',
        expectedImpact: 'Reduce CPU usage by 10-20%',
        implementation: 'Decrease cpuThreads parameter from 4 to 2',
        estimatedBenefit: 15
      });
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[25][1]++;
    }
    // Thermal management recommendations
    cov_1048vy7b82().s[112]++;
    if (metrics.thermalThrottling) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[26][0]++;
      cov_1048vy7b82().s[113]++;
      recommendations.push({
        type: 'THERMAL_MANAGEMENT',
        priority: 'CRITICAL',
        description: 'Implement aggressive thermal throttling',
        expectedImpact: 'Prevent hardware damage and maintain stability',
        implementation: 'Reduce inference frequency and CPU usage',
        estimatedBenefit: 60
      });
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[26][1]++;
    }
    // Performance optimization recommendations
    cov_1048vy7b82().s[114]++;
    if (metrics.inferenceLatency > 3000) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[27][0]++;
      cov_1048vy7b82().s[115]++;
      recommendations.push({
        type: 'PARAMETER_ADJUST',
        priority: 'MEDIUM',
        description: 'Optimize model parameters for faster inference',
        expectedImpact: 'Reduce inference time by 20-30%',
        implementation: 'Reduce max_tokens and adjust temperature',
        estimatedBenefit: 25
      });
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[27][1]++;
    }
    // Emit recommendations
    cov_1048vy7b82().s[116]++;
    if (recommendations.length > 0) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[28][0]++;
      cov_1048vy7b82().s[117]++;
      this.emit('optimizationRecommendations', recommendations);
      /* istanbul ignore next */
      cov_1048vy7b82().s[118]++;
      logger_1.logger.info(`💡 Generated ${recommendations.length} optimization recommendations`);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[28][1]++;
    }
    cov_1048vy7b82().s[119]++;
    return recommendations;
  }
  /**
   * Predict performance for a given model configuration
   */
  predictPerformance(modelName, memoryRequirement, cpuThreads) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[15]++;
    cov_1048vy7b82().s[120]++;
    if (!this.currentMetrics) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[29][0]++;
      cov_1048vy7b82().s[121]++;
      return {
        expectedInferenceTime: 0,
        expectedAccuracy: 0,
        resourceRequirement: memoryRequirement,
        confidence: 0,
        factors: ['No current metrics available']
      };
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[29][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[122]++, this.currentMetrics);
    const factors =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[123]++, []);
    // Base inference time estimation
    let expectedInferenceTime =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[124]++, 1000); // Base 1 second
    // Adjust for model size
    /* istanbul ignore next */
    cov_1048vy7b82().s[125]++;
    expectedInferenceTime *= memoryRequirement / 1000; // Scale with memory requirement
    /* istanbul ignore next */
    cov_1048vy7b82().s[126]++;
    factors.push(`Model size: ${memoryRequirement}MB`);
    // Adjust for available CPU
    const cpuLoadFactor =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[127]++, metrics.cpuUsage / 100);
    /* istanbul ignore next */
    cov_1048vy7b82().s[128]++;
    expectedInferenceTime *= 1 + cpuLoadFactor;
    /* istanbul ignore next */
    cov_1048vy7b82().s[129]++;
    factors.push(`CPU usage: ${metrics.cpuUsage}%`);
    // Adjust for memory pressure
    /* istanbul ignore next */
    cov_1048vy7b82().s[130]++;
    if (metrics.memoryPressure === 'HIGH') {
      /* istanbul ignore next */
      cov_1048vy7b82().b[30][0]++;
      cov_1048vy7b82().s[131]++;
      expectedInferenceTime *= 1.5;
      /* istanbul ignore next */
      cov_1048vy7b82().s[132]++;
      factors.push('High memory pressure');
    } else {
      /* istanbul ignore next */
      cov_1048vy7b82().b[30][1]++;
      cov_1048vy7b82().s[133]++;
      if (metrics.memoryPressure === 'CRITICAL') {
        /* istanbul ignore next */
        cov_1048vy7b82().b[31][0]++;
        cov_1048vy7b82().s[134]++;
        expectedInferenceTime *= 2.0;
        /* istanbul ignore next */
        cov_1048vy7b82().s[135]++;
        factors.push('Critical memory pressure');
      } else
      /* istanbul ignore next */
      {
        cov_1048vy7b82().b[31][1]++;
      }
    }
    // Adjust for thermal throttling
    /* istanbul ignore next */
    cov_1048vy7b82().s[136]++;
    if (metrics.thermalThrottling) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[32][0]++;
      cov_1048vy7b82().s[137]++;
      expectedInferenceTime *= 1.3;
      /* istanbul ignore next */
      cov_1048vy7b82().s[138]++;
      factors.push('Thermal throttling active');
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[32][1]++;
    }
    // Estimate accuracy based on model size (larger models generally more accurate)
    const expectedAccuracy =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[139]++, Math.min(95, 60 + memoryRequirement / 100));
    // Calculate confidence based on available data
    const confidence =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[140]++, Math.min(100, this.metricsHistory.length * 2));
    /* istanbul ignore next */
    cov_1048vy7b82().s[141]++;
    return {
      expectedInferenceTime: Math.round(expectedInferenceTime),
      expectedAccuracy: Math.round(expectedAccuracy),
      resourceRequirement: memoryRequirement,
      confidence,
      factors
    };
  }
  /**
   * Update resource allocation strategy
   */
  updateAllocationStrategy(strategy) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[16]++;
    cov_1048vy7b82().s[142]++;
    this.currentAllocationStrategy = {
      ...this.currentAllocationStrategy,
      ...strategy
    };
    /* istanbul ignore next */
    cov_1048vy7b82().s[143]++;
    logger_1.logger.info('🔧 Resource allocation strategy updated:', this.currentAllocationStrategy);
    /* istanbul ignore next */
    cov_1048vy7b82().s[144]++;
    this.emit('allocationStrategyUpdated', this.currentAllocationStrategy);
  }
  /**
   * Get current metrics
   */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[17]++;
    cov_1048vy7b82().s[145]++;
    return this.currentMetrics;
  }
  /**
   * Get metrics history
   */
  getMetricsHistory(limit) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[18]++;
    cov_1048vy7b82().s[146]++;
    if (limit) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[33][0]++;
      cov_1048vy7b82().s[147]++;
      return this.metricsHistory.slice(-limit);
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[33][1]++;
    }
    cov_1048vy7b82().s[148]++;
    return [...this.metricsHistory];
  }
  /**
   * Get current resource allocation strategy
   */
  getAllocationStrategy() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[19]++;
    cov_1048vy7b82().s[149]++;
    return {
      ...this.currentAllocationStrategy
    };
  }
  /**
   * Check if system can handle a specific model
   */
  canHandleModel(memoryRequirement, cpuThreads) {
    /* istanbul ignore next */
    cov_1048vy7b82().f[20]++;
    cov_1048vy7b82().s[150]++;
    if (!this.currentMetrics) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[34][0]++;
      cov_1048vy7b82().s[151]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[34][1]++;
    }
    const availableMemory =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[152]++, this.currentMetrics.availableMemory);
    const currentCpuUsage =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[153]++, this.currentMetrics.cpuUsage);
    // Check memory availability (leave 1GB buffer)
    /* istanbul ignore next */
    cov_1048vy7b82().s[154]++;
    if (memoryRequirement > availableMemory - 1024) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[35][0]++;
      cov_1048vy7b82().s[155]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[35][1]++;
    }
    // Check CPU availability (don't exceed 90% total usage)
    const estimatedCpuIncrease =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[156]++, cpuThreads / this.currentMetrics.availableCores * 100);
    /* istanbul ignore next */
    cov_1048vy7b82().s[157]++;
    if (currentCpuUsage + estimatedCpuIncrease > 90) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[36][0]++;
      cov_1048vy7b82().s[158]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[36][1]++;
    }
    cov_1048vy7b82().s[159]++;
    return true;
  }
  /**
   * Get system health score (0-100)
   */
  getSystemHealthScore() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[21]++;
    cov_1048vy7b82().s[160]++;
    if (!this.currentMetrics) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[37][0]++;
      cov_1048vy7b82().s[161]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[37][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[162]++, this.currentMetrics);
    let score =
    /* istanbul ignore next */
    (cov_1048vy7b82().s[163]++, 100);
    // Memory pressure penalty
    /* istanbul ignore next */
    cov_1048vy7b82().s[164]++;
    switch (metrics.memoryPressure) {
      case 'MEDIUM':
        /* istanbul ignore next */
        cov_1048vy7b82().b[38][0]++;
        cov_1048vy7b82().s[165]++;
        score -= 10;
        /* istanbul ignore next */
        cov_1048vy7b82().s[166]++;
        break;
      case 'HIGH':
        /* istanbul ignore next */
        cov_1048vy7b82().b[38][1]++;
        cov_1048vy7b82().s[167]++;
        score -= 25;
        /* istanbul ignore next */
        cov_1048vy7b82().s[168]++;
        break;
      case 'CRITICAL':
        /* istanbul ignore next */
        cov_1048vy7b82().b[38][2]++;
        cov_1048vy7b82().s[169]++;
        score -= 50;
        /* istanbul ignore next */
        cov_1048vy7b82().s[170]++;
        break;
    }
    // CPU usage penalty
    /* istanbul ignore next */
    cov_1048vy7b82().s[171]++;
    if (metrics.cpuUsage > 70) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[39][0]++;
      cov_1048vy7b82().s[172]++;
      score -= metrics.cpuUsage - 70;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[39][1]++;
    }
    // Thermal throttling penalty
    cov_1048vy7b82().s[173]++;
    if (metrics.thermalThrottling) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[40][0]++;
      cov_1048vy7b82().s[174]++;
      score -= 30;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[40][1]++;
    }
    // Swap usage penalty
    cov_1048vy7b82().s[175]++;
    if (metrics.swapUsage > 512) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[41][0]++;
      cov_1048vy7b82().s[176]++;
      score -= 20;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[41][1]++;
    }
    // Inference performance penalty
    cov_1048vy7b82().s[177]++;
    if (metrics.inferenceLatency > 2000) {
      /* istanbul ignore next */
      cov_1048vy7b82().b[42][0]++;
      cov_1048vy7b82().s[178]++;
      score -= 15;
    } else
    /* istanbul ignore next */
    {
      cov_1048vy7b82().b[42][1]++;
    }
    cov_1048vy7b82().s[179]++;
    return Math.max(0, Math.round(score));
  }
  /**
   * Shutdown the resource monitor
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_1048vy7b82().f[22]++;
    cov_1048vy7b82().s[180]++;
    try {
      /* istanbul ignore next */
      cov_1048vy7b82().s[181]++;
      logger_1.logger.info('🛑 Shutting down LLM Resource Monitor...');
      /* istanbul ignore next */
      cov_1048vy7b82().s[182]++;
      await this.stopMonitoring();
      // Clear history
      /* istanbul ignore next */
      cov_1048vy7b82().s[183]++;
      this.metricsHistory = [];
      /* istanbul ignore next */
      cov_1048vy7b82().s[184]++;
      this.currentMetrics = null;
      /* istanbul ignore next */
      cov_1048vy7b82().s[185]++;
      logger_1.logger.info('✅ LLM Resource Monitor shutdown completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_1048vy7b82().s[186]++;
      logger_1.logger.error('❌ Error during LLM Resource Monitor shutdown:', error);
      /* istanbul ignore next */
      cov_1048vy7b82().s[187]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_1048vy7b82().s[188]++;
exports.LLMResourceMonitor = LLMResourceMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,