{"version":3,"names":["cov_oxd48l9x6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","NotificationService","logger","config","constructor","email","enabled","smtp","host","port","secure","auth","user","pass","telegram","botToken","chatId","sendAlert","notification","info","title","priority","Promise","resolve","sendCriticalAlert","warn","sendEmail","to","subject","sendTelegram","message","substring","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-service.ts"],"sourcesContent":["/**\r\n * Notification Service\r\n * \r\n * Central notification service for the AI crypto trading agent.\r\n * Handles email, Telegram, and other notification channels.\r\n */\r\n\r\nimport { Logger } from '../logging/logger';\r\n\r\nexport interface NotificationConfig {\r\n  email?: {\r\n    enabled: boolean;\r\n    smtp: {\r\n      host: string;\r\n      port: number;\r\n      secure: boolean;\r\n      auth: {\r\n        user: string;\r\n        pass: string;\r\n      };\r\n    };\r\n  };\r\n  telegram?: {\r\n    enabled: boolean;\r\n    botToken: string;\r\n    chatId: string;\r\n  };\r\n}\r\n\r\nexport interface Notification {\r\n  title: string;\r\n  message: string;\r\n  details?: any;\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n}\r\n\r\nexport interface EmailNotification {\r\n  to: string;\r\n  subject: string;\r\n  html: string;\r\n  attachments?: Array<{\r\n    filename: string;\r\n    content: string;\r\n    contentType: string;\r\n  }>;\r\n}\r\n\r\nexport class NotificationService {\r\n  private logger: Logger;\r\n  private config: NotificationConfig;\r\n\r\n  constructor(logger: Logger, config?: NotificationConfig) {\r\n    this.logger = logger;\r\n    this.config = config || {\r\n      email: { enabled: false, smtp: { host: '', port: 587, secure: false, auth: { user: '', pass: '' } } },\r\n      telegram: { enabled: false, botToken: '', chatId: '' }\r\n    };\r\n  }\r\n\r\n  async sendAlert(notification: Notification): Promise<void> {\r\n    this.logger.info('Sending alert notification', {\r\n      title: notification.title,\r\n      priority: notification.priority\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async sendCriticalAlert(notification: Notification): Promise<void> {\r\n    this.logger.warn('Sending critical alert notification', {\r\n      title: notification.title,\r\n      priority: notification.priority\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async sendEmail(email: EmailNotification): Promise<void> {\r\n    this.logger.info('Sending email notification', {\r\n      to: email.to,\r\n      subject: email.subject\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async sendTelegram(message: string): Promise<void> {\r\n    this.logger.info('Sending Telegram notification', {\r\n      message: message.substring(0, 100)\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}