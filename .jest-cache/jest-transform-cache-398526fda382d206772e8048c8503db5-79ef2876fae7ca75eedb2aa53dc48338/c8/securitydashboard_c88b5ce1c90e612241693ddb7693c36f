2c9e995b6b1e8f8c7b7ea92feb5454fc
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SECURITY DASHBOARD
 * =============================================================================
 *
 * This service provides a comprehensive security dashboard with real-time
 * threat visualization, security metrics, and system health monitoring.
 *
 * CRITICAL SECURITY NOTICE:
 * This dashboard provides real-time visibility into security threats and
 * system health. It must display accurate, up-to-date information to enable
 * rapid response to security incidents.
 *
 * Dashboard Features:
 * - Real-time threat visualization
 * - Security metrics and KPI display
 * - System health monitoring
 * - Interactive threat analysis
 * - Historical trend analysis
 * - Alert management interface
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_13of9vkhip() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\security-dashboard.ts";
  var hash = "70af858574083545963dc38d7f74067eba47ca21";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\security-dashboard.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "1": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 63
        }
      },
      "2": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "3": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "4": {
        start: {
          line: 32,
          column: 38
        },
        end: {
          line: 32,
          column: 87
        }
      },
      "5": {
        start: {
          line: 41,
          column: 14
        },
        end: {
          line: 41,
          column: 23
        }
      },
      "6": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "7": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "8": {
        start: {
          line: 47,
          column: 19
        },
        end: {
          line: 47,
          column: 28
        }
      },
      "9": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 16
        }
      },
      "10": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "11": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "12": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "13": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 66
        }
      },
      "14": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "15": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 70
        }
      },
      "16": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 46
        }
      },
      "17": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "18": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 40
        }
      },
      "19": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "20": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "21": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 78
        }
      },
      "22": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 82
        }
      },
      "23": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "24": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "25": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 70
        }
      },
      "26": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "27": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 33
        }
      },
      "28": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 38
        }
      },
      "29": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 78
        }
      },
      "30": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 81
        }
      },
      "31": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 66
        }
      },
      "32": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "33": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 49
        }
      },
      "34": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "35": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "36": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "37": {
        start: {
          line: 143,
          column: 30
        },
        end: {
          line: 143,
          column: 89
        }
      },
      "38": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "39": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "40": {
        start: {
          line: 170,
          column: 25
        },
        end: {
          line: 170,
          column: 85
        }
      },
      "41": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "42": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 197,
          column: 15
        }
      },
      "43": {
        start: {
          line: 176,
          column: 50
        },
        end: {
          line: 176,
          column: 133
        }
      },
      "44": {
        start: {
          line: 179,
          column: 56
        },
        end: {
          line: 179,
          column: 67
        }
      },
      "45": {
        start: {
          line: 200,
          column: 32
        },
        end: {
          line: 200,
          column: 93
        }
      },
      "46": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 203,
          column: 25
        }
      },
      "47": {
        start: {
          line: 202,
          column: 36
        },
        end: {
          line: 202,
          column: 41
        }
      },
      "48": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "49": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 229,
          column: 15
        }
      },
      "50": {
        start: {
          line: 209,
          column: 57
        },
        end: {
          line: 209,
          column: 63
        }
      },
      "51": {
        start: {
          line: 212,
          column: 64
        },
        end: {
          line: 212,
          column: 69
        }
      },
      "52": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 22
        }
      },
      "53": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 241,
          column: 75
        }
      },
      "54": {
        start: {
          line: 241,
          column: 28
        },
        end: {
          line: 241,
          column: 73
        }
      },
      "55": {
        start: {
          line: 251,
          column: 22
        },
        end: {
          line: 251,
          column: 52
        }
      },
      "56": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "57": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 42
        }
      },
      "58": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 50
        }
      },
      "59": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "60": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 52
        }
      },
      "61": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "62": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 38
        }
      },
      "63": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 46
        }
      },
      "64": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 276,
          column: 30
        }
      },
      "65": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 50
        }
      },
      "66": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "67": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "68": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 305,
          column: 11
        }
      },
      "69": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "70": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "71": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 332,
          column: 11
        }
      },
      "72": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "73": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 44
        }
      },
      "74": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "75": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 33
        }
      },
      "76": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 360,
          column: 40
        }
      },
      "77": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "78": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 50
        }
      },
      "79": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 75
        }
      },
      "80": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "81": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 48
        }
      },
      "82": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 40
        }
      },
      "83": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "84": {
        start: {
          line: 380,
          column: 34
        },
        end: {
          line: 380,
          column: 116
        }
      },
      "85": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 54
        }
      },
      "86": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 80
        }
      },
      "87": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 41
        }
      },
      "88": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 29
        }
      },
      "89": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 28
        }
      },
      "90": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 43
        }
      },
      "91": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "92": {
        start: {
          line: 408,
          column: 26
        },
        end: {
          line: 418,
          column: 13
        }
      },
      "93": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 56
        }
      },
      "94": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 41
        }
      },
      "95": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 429,
          column: 19
        }
      },
      "96": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 19
        }
      },
      "97": {
        start: {
          line: 430,
          column: 21
        },
        end: {
          line: 430,
          column: 46
        }
      },
      "98": {
        start: {
          line: 432,
          column: 29
        },
        end: {
          line: 432,
          column: 64
        }
      },
      "99": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "100": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 437,
          column: 14
        }
      },
      "101": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 49
        }
      },
      "102": {
        start: {
          line: 441,
          column: 30
        },
        end: {
          line: 441,
          column: 64
        }
      },
      "103": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "104": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 446,
          column: 14
        }
      },
      "105": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 50
        }
      },
      "106": {
        start: {
          line: 450,
          column: 28
        },
        end: {
          line: 450,
          column: 62
        }
      },
      "107": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "108": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 456,
          column: 14
        }
      },
      "109": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 48
        }
      },
      "110": {
        start: {
          line: 460,
          column: 29
        },
        end: {
          line: 460,
          column: 62
        }
      },
      "111": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "112": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 464,
          column: 14
        }
      },
      "113": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 49
        }
      },
      "114": {
        start: {
          line: 468,
          column: 29
        },
        end: {
          line: 468,
          column: 62
        }
      },
      "115": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "116": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 472,
          column: 14
        }
      },
      "117": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 49
        }
      },
      "118": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "119": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "120": {
        start: {
          line: 484,
          column: 27
        },
        end: {
          line: 484,
          column: 56
        }
      },
      "121": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "122": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "123": {
        start: {
          line: 487,
          column: 16
        },
        end: {
          line: 487,
          column: 42
        }
      },
      "124": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 490,
          column: 34
        }
      },
      "125": {
        start: {
          line: 489,
          column: 20
        },
        end: {
          line: 489,
          column: 54
        }
      },
      "126": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 503,
          column: 30
        }
      },
      "127": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 30
        }
      },
      "128": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 505,
          column: 26
        }
      },
      "129": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 26
        }
      },
      "130": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 507,
          column: 28
        }
      },
      "131": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 28
        }
      },
      "132": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 508,
          column: 21
        }
      },
      "133": {
        start: {
          line: 518,
          column: 24
        },
        end: {
          line: 529,
          column: 9
        }
      },
      "134": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 63
        }
      },
      "135": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 111
        }
      },
      "136": {
        start: {
          line: 550,
          column: 24
        },
        end: {
          line: 561,
          column: 9
        }
      },
      "137": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 42
        }
      },
      "138": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 573,
          column: 29
        }
      },
      "139": {
        start: {
          line: 573,
          column: 12
        },
        end: {
          line: 573,
          column: 29
        }
      },
      "140": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 575,
          column: 29
        }
      },
      "141": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 575,
          column: 29
        }
      },
      "142": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 577,
          column: 29
        }
      },
      "143": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 577,
          column: 29
        }
      },
      "144": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 578,
          column: 25
        }
      },
      "145": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 593,
          column: 9
        }
      },
      "146": {
        start: {
          line: 589,
          column: 27
        },
        end: {
          line: 589,
          column: 44
        }
      },
      "147": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 590,
          column: 45
        }
      },
      "148": {
        start: {
          line: 591,
          column: 29
        },
        end: {
          line: 591,
          column: 46
        }
      },
      "149": {
        start: {
          line: 592,
          column: 21
        },
        end: {
          line: 592,
          column: 38
        }
      },
      "150": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 602,
          column: 34
        }
      },
      "151": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 612,
          column: 52
        }
      },
      "152": {
        start: {
          line: 614,
          column: 8
        },
        end: {
          line: 617,
          column: 9
        }
      },
      "153": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 615,
          column: 35
        }
      },
      "154": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 616,
          column: 36
        }
      },
      "155": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 618,
          column: 48
        }
      },
      "156": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 634,
          column: 10
        }
      },
      "157": {
        start: {
          line: 637,
          column: 0
        },
        end: {
          line: 637,
          column: 46
        }
      },
      "158": {
        start: {
          line: 639,
          column: 0
        },
        end: {
          line: 639,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 48
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 27
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 71
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 81,
            column: 90
          },
          end: {
            line: 81,
            column: 91
          }
        },
        loc: {
          start: {
            line: 81,
            column: 100
          },
          end: {
            line: 83,
            column: 13
          }
        },
        line: 81
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 97
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 119
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 128
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 35
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 137
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 176,
            column: 42
          }
        },
        loc: {
          start: {
            line: 176,
            column: 50
          },
          end: {
            line: 176,
            column: 133
          }
        },
        line: 176
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 179,
            column: 47
          },
          end: {
            line: 179,
            column: 48
          }
        },
        loc: {
          start: {
            line: 179,
            column: 56
          },
          end: {
            line: 179,
            column: 67
          }
        },
        line: 179
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 202,
            column: 18
          },
          end: {
            line: 202,
            column: 19
          }
        },
        loc: {
          start: {
            line: 202,
            column: 36
          },
          end: {
            line: 202,
            column: 41
          }
        },
        line: 202
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 209,
            column: 43
          },
          end: {
            line: 209,
            column: 44
          }
        },
        loc: {
          start: {
            line: 209,
            column: 57
          },
          end: {
            line: 209,
            column: 63
          }
        },
        line: 209
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 212,
            column: 49
          },
          end: {
            line: 212,
            column: 50
          }
        },
        loc: {
          start: {
            line: 212,
            column: 64
          },
          end: {
            line: 212,
            column: 69
          }
        },
        line: 212
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 239
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 241,
            column: 18
          },
          end: {
            line: 241,
            column: 19
          }
        },
        loc: {
          start: {
            line: 241,
            column: 28
          },
          end: {
            line: 241,
            column: 73
          }
        },
        line: 241
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 36
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 250
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        loc: {
          start: {
            line: 268,
            column: 32
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 268
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 274,
            column: 23
          },
          end: {
            line: 274,
            column: 24
          }
        },
        loc: {
          start: {
            line: 274,
            column: 29
          },
          end: {
            line: 276,
            column: 13
          }
        },
        line: 274
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 287
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 25
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 338
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 340,
            column: 84
          },
          end: {
            line: 340,
            column: 85
          }
        },
        loc: {
          start: {
            line: 340,
            column: 95
          },
          end: {
            line: 342,
            column: 9
          }
        },
        line: 340
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 344,
            column: 35
          },
          end: {
            line: 344,
            column: 36
          }
        },
        loc: {
          start: {
            line: 344,
            column: 41
          },
          end: {
            line: 346,
            column: 9
          }
        },
        line: 344
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 23
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 352
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 353,
            column: 43
          },
          end: {
            line: 353,
            column: 44
          }
        },
        loc: {
          start: {
            line: 353,
            column: 55
          },
          end: {
            line: 360,
            column: 9
          }
        },
        line: 353
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 22
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 366
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 378,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        loc: {
          start: {
            line: 378,
            column: 33
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 378
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 32
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 393
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 31
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 405
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 20
          },
          end: {
            line: 475,
            column: 5
          }
        },
        line: 427
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 19
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 480
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 488,
            column: 27
          },
          end: {
            line: 488,
            column: 28
          }
        },
        loc: {
          start: {
            line: 488,
            column: 33
          },
          end: {
            line: 490,
            column: 17
          }
        },
        line: 488
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 501,
            column: 4
          },
          end: {
            line: 501,
            column: 5
          }
        },
        loc: {
          start: {
            line: 501,
            column: 38
          },
          end: {
            line: 509,
            column: 5
          }
        },
        line: 501
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 517,
            column: 4
          },
          end: {
            line: 517,
            column: 5
          }
        },
        loc: {
          start: {
            line: 517,
            column: 28
          },
          end: {
            line: 531,
            column: 5
          }
        },
        line: 517
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 5
          }
        },
        loc: {
          start: {
            line: 539,
            column: 30
          },
          end: {
            line: 541,
            column: 5
          }
        },
        line: 539
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 549,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        },
        loc: {
          start: {
            line: 549,
            column: 28
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 549
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 571,
            column: 4
          },
          end: {
            line: 571,
            column: 5
          }
        },
        loc: {
          start: {
            line: 571,
            column: 28
          },
          end: {
            line: 579,
            column: 5
          }
        },
        line: 571
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 587,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        },
        loc: {
          start: {
            line: 587,
            column: 27
          },
          end: {
            line: 594,
            column: 5
          }
        },
        line: 587
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 601,
            column: 4
          },
          end: {
            line: 601,
            column: 5
          }
        },
        loc: {
          start: {
            line: 601,
            column: 16
          },
          end: {
            line: 603,
            column: 5
          }
        },
        line: 601
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 611,
            column: 4
          },
          end: {
            line: 611,
            column: 5
          }
        },
        loc: {
          start: {
            line: 611,
            column: 31
          },
          end: {
            line: 619,
            column: 5
          }
        },
        line: 611
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 626,
            column: 4
          },
          end: {
            line: 626,
            column: 5
          }
        },
        loc: {
          start: {
            line: 626,
            column: 16
          },
          end: {
            line: 635,
            column: 5
          }
        },
        line: 626
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "1": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "2": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "3": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "4": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "5": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "6": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "7": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "8": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "9": {
        loc: {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 429,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 429,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "10": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "11": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "12": {
        loc: {
          start: {
            line: 445,
            column: 23
          },
          end: {
            line: 445,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 445,
            column: 48
          },
          end: {
            line: 445,
            column: 52
          }
        }, {
          start: {
            line: 445,
            column: 55
          },
          end: {
            line: 445,
            column: 63
          }
        }],
        line: 445
      },
      "13": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "14": {
        loc: {
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "15": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "16": {
        loc: {
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 482,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 482,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      },
      "17": {
        loc: {
          start: {
            line: 486,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "18": {
        loc: {
          start: {
            line: 486,
            column: 16
          },
          end: {
            line: 486,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 486,
            column: 16
          },
          end: {
            line: 486,
            column: 54
          }
        }, {
          start: {
            line: 486,
            column: 58
          },
          end: {
            line: 486,
            column: 83
          }
        }],
        line: 486
      },
      "19": {
        loc: {
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 503,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 503,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "20": {
        loc: {
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 505,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 505,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 504
      },
      "21": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 507,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 507,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "22": {
        loc: {
          start: {
            line: 530,
            column: 15
          },
          end: {
            line: 530,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 530,
            column: 15
          },
          end: {
            line: 530,
            column: 39
          }
        }, {
          start: {
            line: 530,
            column: 43
          },
          end: {
            line: 530,
            column: 62
          }
        }],
        line: 530
      },
      "23": {
        loc: {
          start: {
            line: 562,
            column: 15
          },
          end: {
            line: 562,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 562,
            column: 15
          },
          end: {
            line: 562,
            column: 33
          }
        }, {
          start: {
            line: 562,
            column: 37
          },
          end: {
            line: 562,
            column: 41
          }
        }],
        line: 562
      },
      "24": {
        loc: {
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 573,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 573,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 572
      },
      "25": {
        loc: {
          start: {
            line: 574,
            column: 8
          },
          end: {
            line: 575,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 8
          },
          end: {
            line: 575,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "26": {
        loc: {
          start: {
            line: 576,
            column: 8
          },
          end: {
            line: 577,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 576,
            column: 8
          },
          end: {
            line: 577,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 576
      },
      "27": {
        loc: {
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 593,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 589,
            column: 12
          },
          end: {
            line: 589,
            column: 44
          }
        }, {
          start: {
            line: 590,
            column: 12
          },
          end: {
            line: 590,
            column: 45
          }
        }, {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 591,
            column: 46
          }
        }, {
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 592,
            column: 38
          }
        }],
        line: 588
      },
      "28": {
        loc: {
          start: {
            line: 614,
            column: 8
          },
          end: {
            line: 617,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 614,
            column: 8
          },
          end: {
            line: 617,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 614
      },
      "29": {
        loc: {
          start: {
            line: 614,
            column: 12
          },
          end: {
            line: 614,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 614,
            column: 12
          },
          end: {
            line: 614,
            column: 34
          }
        }, {
          start: {
            line: 614,
            column: 38
          },
          end: {
            line: 614,
            column: 58
          }
        }],
        line: 614
      },
      "30": {
        loc: {
          start: {
            line: 631,
            column: 24
          },
          end: {
            line: 631,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 631,
            column: 52
          },
          end: {
            line: 631,
            column: 62
          }
        }, {
          start: {
            line: 631,
            column: 65
          },
          end: {
            line: 631,
            column: 69
          }
        }],
        line: 631
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\security-dashboard.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\security-dashboard.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - SECURITY DASHBOARD\r\n * =============================================================================\r\n * \r\n * This service provides a comprehensive security dashboard with real-time\r\n * threat visualization, security metrics, and system health monitoring.\r\n * \r\n * CRITICAL SECURITY NOTICE:\r\n * This dashboard provides real-time visibility into security threats and\r\n * system health. It must display accurate, up-to-date information to enable\r\n * rapid response to security incidents.\r\n * \r\n * Dashboard Features:\r\n * - Real-time threat visualization\r\n * - Security metrics and KPI display\r\n * - System health monitoring\r\n * - Interactive threat analysis\r\n * - Historical trend analysis\r\n * - Alert management interface\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { securityMonitoringService, SecurityDashboardData, SecurityEvent, SecurityMetrics } from '@/security/security-monitoring-service';\r\n\r\n/**\r\n * Interface for dashboard configuration\r\n */\r\nexport interface SecurityDashboardConfig {\r\n  /** Dashboard refresh interval in milliseconds */\r\n  refreshInterval: number;\r\n  /** Maximum events to display */\r\n  maxDisplayEvents: number;\r\n  /** Chart data points for timeline */\r\n  timelineDataPoints: number;\r\n  /** Auto-refresh enabled */\r\n  autoRefresh: boolean;\r\n  /** Theme configuration */\r\n  theme: 'light' | 'dark' | 'auto';\r\n}\r\n\r\n/**\r\n * Interface for dashboard widget data\r\n */\r\nexport interface DashboardWidget {\r\n  /** Widget identifier */\r\n  id: string;\r\n  /** Widget title */\r\n  title: string;\r\n  /** Widget type */\r\n  type: 'metric' | 'chart' | 'table' | 'alert' | 'status';\r\n  /** Widget data */\r\n  data: any;\r\n  /** Widget configuration */\r\n  config: Record<string, any>;\r\n  /** Last update timestamp */\r\n  lastUpdate: Date;\r\n}\r\n\r\n/**\r\n * Interface for threat visualization chart data\r\n */\r\nexport interface ThreatChartData {\r\n  /** Chart type */\r\n  type: 'line' | 'bar' | 'pie' | 'heatmap';\r\n  /** Chart title */\r\n  title: string;\r\n  /** Chart data */\r\n  data: {\r\n    labels: string[];\r\n    datasets: Array<{\r\n      label: string;\r\n      data: number[];\r\n      backgroundColor?: string[];\r\n      borderColor?: string;\r\n      borderWidth?: number;\r\n    }>;\r\n  };\r\n  /** Chart options */\r\n  options: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Interface for security alert display\r\n */\r\nexport interface SecurityAlertDisplay {\r\n  /** Alert identifier */\r\n  alertId: string;\r\n  /** Alert severity */\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  /** Alert title */\r\n  title: string;\r\n  /** Alert message */\r\n  message: string;\r\n  /** Alert timestamp */\r\n  timestamp: Date;\r\n  /** Alert status */\r\n  status: 'active' | 'acknowledged' | 'resolved';\r\n  /** Alert actions */\r\n  actions: string[];\r\n  /** Alert icon */\r\n  icon: string;\r\n  /** Alert color */\r\n  color: string;\r\n}\r\n\r\n/**\r\n * Security dashboard service\r\n * Provides comprehensive security visualization and monitoring interface\r\n */\r\nexport class SecurityDashboard extends EventEmitter {\r\n  /** Dashboard configuration */\r\n  private config: SecurityDashboardConfig;\r\n  \r\n  /** Dashboard widgets */\r\n  private widgets: Map<string, DashboardWidget> = new Map();\r\n  \r\n  /** Dashboard refresh interval */\r\n  private refreshInterval: NodeJS.Timeout | null = null;\r\n  \r\n  /** Current dashboard data */\r\n  private currentDashboardData: SecurityDashboardData | null = null;\r\n  \r\n  /** Active alerts */\r\n  private activeAlerts: Map<string, SecurityAlertDisplay> = new Map();\r\n\r\n  constructor(config?: Partial<SecurityDashboardConfig>) {\r\n    super();\r\n    \r\n    // Initialize configuration with defaults\r\n    this.config = {\r\n      refreshInterval: 5000, // 5 seconds\r\n      maxDisplayEvents: 100,\r\n      timelineDataPoints: 24, // 24 hours\r\n      autoRefresh: true,\r\n      theme: 'dark',\r\n      ...config\r\n    };\r\n    \r\n    // Initialize dashboard widgets\r\n    this.initializeWidgets();\r\n    \r\n    // Set up event handlers\r\n    this.setupEventHandlers();\r\n    \r\n    logger.info('\uD83D\uDCCA Security Dashboard initialized');\r\n  }\r\n\r\n  /**\r\n   * Start dashboard\r\n   * Begins dashboard operations and data refresh\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async startDashboard(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Starting security dashboard...');\r\n      \r\n      // Perform initial data load\r\n      await this.refreshDashboardData();\r\n      \r\n      // Start auto-refresh if enabled\r\n      if (this.config.autoRefresh) {\r\n        this.startAutoRefresh();\r\n      }\r\n      \r\n      // Listen for security monitoring updates\r\n      securityMonitoringService.on('dashboardUpdate', (data: SecurityDashboardData) => {\r\n        this.handleDashboardUpdate(data);\r\n      });\r\n      \r\n      logger.info('\u2705 Security dashboard started successfully');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to start security dashboard:', error);\r\n      throw new Error('Security dashboard startup failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop dashboard\r\n   * Stops dashboard operations and cleanup\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async stopDashboard(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDED1 Stopping security dashboard...');\r\n      \r\n      // Stop auto-refresh\r\n      this.stopAutoRefresh();\r\n      \r\n      // Clear widgets\r\n      this.widgets.clear();\r\n      \r\n      // Clear alerts\r\n      this.activeAlerts.clear();\r\n      \r\n      logger.info('\u2705 Security dashboard stopped successfully');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to stop security dashboard:', error);\r\n      throw new Error('Security dashboard shutdown failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get dashboard data\r\n   * Returns current dashboard data for rendering\r\n   * \r\n   * @returns SecurityDashboardData Current dashboard data\r\n   */\r\n  public getDashboardData(): SecurityDashboardData | null {\r\n    return this.currentDashboardData;\r\n  }\r\n\r\n  /**\r\n   * Get dashboard widgets\r\n   * Returns all dashboard widgets\r\n   * \r\n   * @returns DashboardWidget[] Dashboard widgets\r\n   */\r\n  public getDashboardWidgets(): DashboardWidget[] {\r\n    return Array.from(this.widgets.values());\r\n  }\r\n\r\n  /**\r\n   * Get threat visualization charts\r\n   * Returns chart data for threat visualization\r\n   * \r\n   * @returns ThreatChartData[] Threat visualization charts\r\n   */\r\n  public getThreatVisualizationCharts(): ThreatChartData[] {\r\n    if (!this.currentDashboardData) {\r\n      return [];\r\n    }\r\n    \r\n    const charts: ThreatChartData[] = [];\r\n    \r\n    // Threats by type pie chart\r\n    const threatsByType = this.currentDashboardData.threatVisualization.threatsByType;\r\n    if (Object.keys(threatsByType).length > 0) {\r\n      charts.push({\r\n        type: 'pie',\r\n        title: 'Threats by Type',\r\n        data: {\r\n          labels: Object.keys(threatsByType),\r\n          datasets: [{\r\n            label: 'Threats',\r\n            data: Object.values(threatsByType),\r\n            backgroundColor: [\r\n              '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0',\r\n              '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'\r\n            ]\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Threat timeline chart\r\n    const timeline = this.currentDashboardData.threatVisualization.threatTimeline;\r\n    if (timeline.length > 0) {\r\n      charts.push({\r\n        type: 'line',\r\n        title: 'Threat Timeline (24 Hours)',\r\n        data: {\r\n          labels: timeline.map(point => \r\n            point.timestamp.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })\r\n          ),\r\n          datasets: [{\r\n            label: 'Threats',\r\n            data: timeline.map(point => point.count),\r\n            borderColor: '#FF6384',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.1)',\r\n            borderWidth: 2,\r\n            fill: true\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              ticks: {\r\n                stepSize: 1\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Threats by source bar chart\r\n    const threatsBySource = this.currentDashboardData.threatVisualization.threatsBySource;\r\n    const topSources = Object.entries(threatsBySource)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 10); // Top 10 sources\r\n    \r\n    if (topSources.length > 0) {\r\n      charts.push({\r\n        type: 'bar',\r\n        title: 'Top Threat Sources',\r\n        data: {\r\n          labels: topSources.map(([source]) => source),\r\n          datasets: [{\r\n            label: 'Threats',\r\n            data: topSources.map(([, count]) => count),\r\n            backgroundColor: '#36A2EB',\r\n            borderColor: '#36A2EB',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              ticks: {\r\n                stepSize: 1\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n    \r\n    return charts;\r\n  }\r\n\r\n  /**\r\n   * Get security alerts\r\n   * Returns current security alerts for display\r\n   * \r\n   * @returns SecurityAlertDisplay[] Security alerts\r\n   */\r\n  public getSecurityAlerts(): SecurityAlertDisplay[] {\r\n    return Array.from(this.activeAlerts.values())\r\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n  }\r\n\r\n  /**\r\n   * Acknowledge alert\r\n   * Marks security alert as acknowledged\r\n   * \r\n   * @param alertId - Alert identifier\r\n   * @returns Promise<void>\r\n   */\r\n  public async acknowledgeAlert(alertId: string): Promise<void> {\r\n    const alert = this.activeAlerts.get(alertId);\r\n    if (alert) {\r\n      alert.status = 'acknowledged';\r\n      this.emit('alertAcknowledged', alert);\r\n      \r\n      logger.info('\u2705 Security alert acknowledged', {\r\n        alertId,\r\n        title: alert.title\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resolve alert\r\n   * Marks security alert as resolved\r\n   * \r\n   * @param alertId - Alert identifier\r\n   * @returns Promise<void>\r\n   */\r\n  public async resolveAlert(alertId: string): Promise<void> {\r\n    const alert = this.activeAlerts.get(alertId);\r\n    if (alert) {\r\n      alert.status = 'resolved';\r\n      this.emit('alertResolved', alert);\r\n      \r\n      // Remove resolved alerts after 5 minutes\r\n      setTimeout(() => {\r\n        this.activeAlerts.delete(alertId);\r\n      }, 5 * 60 * 1000);\r\n      \r\n      logger.info('\u2705 Security alert resolved', {\r\n        alertId,\r\n        title: alert.title\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize dashboard widgets\r\n   * Sets up default dashboard widgets\r\n   */\r\n  private initializeWidgets(): void {\r\n    // Security status widget\r\n    this.widgets.set('security-status', {\r\n      id: 'security-status',\r\n      title: 'Security Status',\r\n      type: 'status',\r\n      data: { status: 'SECURE', color: 'green' },\r\n      config: { size: 'large', priority: 1 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // Active threats widget\r\n    this.widgets.set('active-threats', {\r\n      id: 'active-threats',\r\n      title: 'Active Threats',\r\n      type: 'metric',\r\n      data: { value: 0, trend: 'stable' },\r\n      config: { size: 'medium', priority: 2 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // Security score widget\r\n    this.widgets.set('security-score', {\r\n      id: 'security-score',\r\n      title: 'Security Score',\r\n      type: 'metric',\r\n      data: { value: 100, max: 100, unit: '%' },\r\n      config: { size: 'medium', priority: 3 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // Recent events widget\r\n    this.widgets.set('recent-events', {\r\n      id: 'recent-events',\r\n      title: 'Recent Security Events',\r\n      type: 'table',\r\n      data: { events: [] },\r\n      config: { size: 'large', priority: 4 },\r\n      lastUpdate: new Date()\r\n    });\r\n    \r\n    // System health widget\r\n    this.widgets.set('system-health', {\r\n      id: 'system-health',\r\n      title: 'System Health',\r\n      type: 'status',\r\n      data: { components: {} },\r\n      config: { size: 'medium', priority: 5 },\r\n      lastUpdate: new Date()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up event handlers\r\n   * Configures event handling for dashboard updates\r\n   */\r\n  private setupEventHandlers(): void {\r\n    // Handle security events\r\n    securityMonitoringService.on('securityEvent', (event: SecurityEvent) => {\r\n      this.handleSecurityEvent(event);\r\n    });\r\n    \r\n    // Handle dashboard updates\r\n    this.on('dashboardUpdate', () => {\r\n      this.updateWidgets();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start auto-refresh\r\n   * Begins automatic dashboard data refresh\r\n   */\r\n  private startAutoRefresh(): void {\r\n    this.refreshInterval = setInterval(async () => {\r\n      try {\r\n        await this.refreshDashboardData();\r\n      } catch (error) {\r\n        logger.error('\u274C Dashboard refresh error:', error);\r\n      }\r\n    }, this.config.refreshInterval);\r\n  }\r\n\r\n  /**\r\n   * Stop auto-refresh\r\n   * Stops automatic dashboard data refresh\r\n   */\r\n  private stopAutoRefresh(): void {\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n      this.refreshInterval = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refresh dashboard data\r\n   * Updates dashboard data from security monitoring service\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async refreshDashboardData(): Promise<void> {\r\n    try {\r\n      const dashboardData = securityMonitoringService.getSecurityDashboardData();\r\n      this.handleDashboardUpdate(dashboardData);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to refresh dashboard data:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dashboard update\r\n   * Processes dashboard data updates\r\n   * \r\n   * @param data - Updated dashboard data\r\n   */\r\n  private handleDashboardUpdate(data: SecurityDashboardData): void {\r\n    this.currentDashboardData = data;\r\n    this.updateWidgets();\r\n    this.updateAlerts();\r\n    this.emit('dashboardUpdate', data);\r\n  }\r\n\r\n  /**\r\n   * Handle security event\r\n   * Processes security events for dashboard display\r\n   * \r\n   * @param event - Security event\r\n   */\r\n  private handleSecurityEvent(event: SecurityEvent): void {\r\n    // Create alert for high-severity events\r\n    if (event.severity >= 7) {\r\n      const alert: SecurityAlertDisplay = {\r\n        alertId: event.eventId,\r\n        severity: this.mapSeverityToAlertLevel(event.severity),\r\n        title: this.formatEventTitle(event),\r\n        message: this.formatEventMessage(event),\r\n        timestamp: event.timestamp,\r\n        status: 'active',\r\n        actions: event.responseActions,\r\n        icon: this.getEventIcon(event.eventType),\r\n        color: this.getEventColor(event.severity)\r\n      };\r\n      \r\n      this.activeAlerts.set(alert.alertId, alert);\r\n      this.emit('newAlert', alert);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update dashboard widgets\r\n   * Updates widget data based on current dashboard data\r\n   */\r\n  private updateWidgets(): void {\r\n    if (!this.currentDashboardData) return;\r\n    \r\n    const data = this.currentDashboardData;\r\n    \r\n    // Update security status widget\r\n    const statusWidget = this.widgets.get('security-status');\r\n    if (statusWidget) {\r\n      statusWidget.data = {\r\n        status: data.securityStatus,\r\n        color: this.getStatusColor(data.securityStatus)\r\n      };\r\n      statusWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update active threats widget\r\n    const threatsWidget = this.widgets.get('active-threats');\r\n    if (threatsWidget) {\r\n      threatsWidget.data = {\r\n        value: data.activeThreats,\r\n        trend: data.activeThreats > 0 ? 'up' : 'stable'\r\n      };\r\n      threatsWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update security score widget\r\n    const scoreWidget = this.widgets.get('security-score');\r\n    if (scoreWidget) {\r\n      scoreWidget.data = {\r\n        value: Math.round(data.metrics.securityScore),\r\n        max: 100,\r\n        unit: '%'\r\n      };\r\n      scoreWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update recent events widget\r\n    const eventsWidget = this.widgets.get('recent-events');\r\n    if (eventsWidget) {\r\n      eventsWidget.data = {\r\n        events: data.recentEvents.slice(0, this.config.maxDisplayEvents)\r\n      };\r\n      eventsWidget.lastUpdate = new Date();\r\n    }\r\n    \r\n    // Update system health widget\r\n    const healthWidget = this.widgets.get('system-health');\r\n    if (healthWidget) {\r\n      healthWidget.data = {\r\n        components: data.systemHealth.componentStatus\r\n      };\r\n      healthWidget.lastUpdate = new Date();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update alerts\r\n   * Updates active alerts based on current events\r\n   */\r\n  private updateAlerts(): void {\r\n    if (!this.currentDashboardData) return;\r\n    \r\n    // Auto-resolve old alerts (older than 1 hour)\r\n    const oneHourAgo = Date.now() - (60 * 60 * 1000);\r\n    for (const [alertId, alert] of this.activeAlerts.entries()) {\r\n      if (alert.timestamp.getTime() < oneHourAgo && alert.status === 'active') {\r\n        alert.status = 'resolved';\r\n        setTimeout(() => {\r\n          this.activeAlerts.delete(alertId);\r\n        }, 5 * 60 * 1000); // Remove after 5 minutes\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Map severity to alert level\r\n   * Converts numeric severity to alert level\r\n   * \r\n   * @param severity - Numeric severity (1-10)\r\n   * @returns Alert level\r\n   */\r\n  private mapSeverityToAlertLevel(severity: number): 'low' | 'medium' | 'high' | 'critical' {\r\n    if (severity >= 9) return 'critical';\r\n    if (severity >= 7) return 'high';\r\n    if (severity >= 5) return 'medium';\r\n    return 'low';\r\n  }\r\n\r\n  /**\r\n   * Format event title\r\n   * Creates human-readable event title\r\n   * \r\n   * @param event - Security event\r\n   * @returns Formatted title\r\n   */\r\n  private formatEventTitle(event: SecurityEvent): string {\r\n    const typeMap: Record<string, string> = {\r\n      'threat_detected': '\uD83D\uDEA8 Threat Detected',\r\n      'authentication_failure': '\uD83D\uDD10 Authentication Failure',\r\n      'unauthorized_access': '\uD83D\uDEAB Unauthorized Access',\r\n      'suspicious_activity': '\uD83D\uDD0D Suspicious Activity',\r\n      'system_anomaly': '\u26A0\uFE0F System Anomaly',\r\n      'network_intrusion': '\uD83C\uDF10 Network Intrusion',\r\n      'data_access_violation': '\uD83D\uDCCA Data Access Violation',\r\n      'configuration_change': '\u2699\uFE0F Configuration Change',\r\n      'security_policy_violation': '\uD83D\uDCCB Policy Violation',\r\n      'incident_escalation': '\uD83D\uDEA8 Incident Escalation'\r\n    };\r\n    \r\n    return typeMap[event.eventType] || '\u26A0\uFE0F Security Event';\r\n  }\r\n\r\n  /**\r\n   * Format event message\r\n   * Creates human-readable event message\r\n   * \r\n   * @param event - Security event\r\n   * @returns Formatted message\r\n   */\r\n  private formatEventMessage(event: SecurityEvent): string {\r\n    return `Security event from ${event.source} targeting ${event.target}. Severity: ${event.severity}/10`;\r\n  }\r\n\r\n  /**\r\n   * Get event icon\r\n   * Returns appropriate icon for event type\r\n   * \r\n   * @param eventType - Event type\r\n   * @returns Icon string\r\n   */\r\n  private getEventIcon(eventType: string): string {\r\n    const iconMap: Record<string, string> = {\r\n      'threat_detected': '\uD83D\uDEA8',\r\n      'authentication_failure': '\uD83D\uDD10',\r\n      'unauthorized_access': '\uD83D\uDEAB',\r\n      'suspicious_activity': '\uD83D\uDD0D',\r\n      'system_anomaly': '\u26A0\uFE0F',\r\n      'network_intrusion': '\uD83C\uDF10',\r\n      'data_access_violation': '\uD83D\uDCCA',\r\n      'configuration_change': '\u2699\uFE0F',\r\n      'security_policy_violation': '\uD83D\uDCCB',\r\n      'incident_escalation': '\uD83D\uDEA8'\r\n    };\r\n    \r\n    return iconMap[eventType] || '\u26A0\uFE0F';\r\n  }\r\n\r\n  /**\r\n   * Get event color\r\n   * Returns appropriate color for event severity\r\n   * \r\n   * @param severity - Event severity\r\n   * @returns Color string\r\n   */\r\n  private getEventColor(severity: number): string {\r\n    if (severity >= 9) return '#dc3545'; // Critical - Red\r\n    if (severity >= 7) return '#fd7e14'; // High - Orange\r\n    if (severity >= 5) return '#ffc107'; // Medium - Yellow\r\n    return '#28a745'; // Low - Green\r\n  }\r\n\r\n  /**\r\n   * Get status color\r\n   * Returns appropriate color for security status\r\n   * \r\n   * @param status - Security status\r\n   * @returns Color string\r\n   */\r\n  private getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'SECURE': return '#28a745'; // Green\r\n      case 'WARNING': return '#ffc107'; // Yellow\r\n      case 'CRITICAL': return '#dc3545'; // Red\r\n      default: return '#6c757d'; // Gray\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get dashboard configuration\r\n   * Returns current dashboard configuration\r\n   * \r\n   * @returns SecurityDashboardConfig Dashboard configuration\r\n   */\r\n  public getConfig(): SecurityDashboardConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Update dashboard configuration\r\n   * Updates dashboard configuration\r\n   * \r\n   * @param config - New configuration\r\n   * @returns Promise<void>\r\n   */\r\n  public async updateConfig(config: Partial<SecurityDashboardConfig>): Promise<void> {\r\n    this.config = { ...this.config, ...config };\r\n    \r\n    // Restart auto-refresh if interval changed\r\n    if (config.refreshInterval && this.refreshInterval) {\r\n      this.stopAutoRefresh();\r\n      this.startAutoRefresh();\r\n    }\r\n    \r\n    this.emit('configUpdated', this.config);\r\n  }\r\n\r\n  /**\r\n   * Get dashboard status\r\n   * Returns current dashboard status\r\n   * \r\n   * @returns Dashboard status information\r\n   */\r\n  public getStatus(): {\r\n    isActive: boolean;\r\n    widgetCount: number;\r\n    activeAlerts: number;\r\n    lastUpdate: Date | null;\r\n    autoRefresh: boolean;\r\n    timestamp: number;\r\n  } {\r\n    return {\r\n      isActive: this.refreshInterval !== null,\r\n      widgetCount: this.widgets.size,\r\n      activeAlerts: this.activeAlerts.size,\r\n      lastUpdate: this.currentDashboardData ? new Date() : null,\r\n      autoRefresh: this.config.autoRefresh,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\n// Create and export singleton instance\r\nexport const securityDashboard = new SecurityDashboard();\r\n\r\n// =============================================================================\r\n// SECURITY DASHBOARD NOTES\r\n// =============================================================================\r\n// 1. Real-time security visualization with interactive charts and metrics\r\n// 2. Comprehensive threat analysis and pattern visualization\r\n// 3. Automated alert management with acknowledgment and resolution\r\n// 4. Configurable dashboard widgets and layout\r\n// 5. Integration with security monitoring service for live data\r\n// 6. Support for multiple chart types and visualization formats\r\n// 7. Responsive design for desktop and mobile access\r\n// 8. Theme support for light/dark mode preferences\r\n// ============================================================================="],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70af858574083545963dc38d7f74067eba47ca21"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13of9vkhip = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13of9vkhip();
cov_13of9vkhip().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13of9vkhip().s[1]++;
exports.securityDashboard = exports.SecurityDashboard = void 0;
const events_1 =
/* istanbul ignore next */
(cov_13of9vkhip().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_13of9vkhip().s[3]++, require("@/core/logging/logger"));
const security_monitoring_service_1 =
/* istanbul ignore next */
(cov_13of9vkhip().s[4]++, require("@/security/security-monitoring-service"));
/**
 * Security dashboard service
 * Provides comprehensive security visualization and monitoring interface
 */
class SecurityDashboard extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  /** Dashboard configuration */
  config;
  /** Dashboard widgets */
  widgets =
  /* istanbul ignore next */
  (cov_13of9vkhip().s[5]++, new Map());
  /** Dashboard refresh interval */
  refreshInterval =
  /* istanbul ignore next */
  (cov_13of9vkhip().s[6]++, null);
  /** Current dashboard data */
  currentDashboardData =
  /* istanbul ignore next */
  (cov_13of9vkhip().s[7]++, null);
  /** Active alerts */
  activeAlerts =
  /* istanbul ignore next */
  (cov_13of9vkhip().s[8]++, new Map());
  constructor(config) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[0]++;
    cov_13of9vkhip().s[9]++;
    super();
    // Initialize configuration with defaults
    /* istanbul ignore next */
    cov_13of9vkhip().s[10]++;
    this.config = {
      refreshInterval: 5000,
      // 5 seconds
      maxDisplayEvents: 100,
      timelineDataPoints: 24,
      // 24 hours
      autoRefresh: true,
      theme: 'dark',
      ...config
    };
    // Initialize dashboard widgets
    /* istanbul ignore next */
    cov_13of9vkhip().s[11]++;
    this.initializeWidgets();
    // Set up event handlers
    /* istanbul ignore next */
    cov_13of9vkhip().s[12]++;
    this.setupEventHandlers();
    /* istanbul ignore next */
    cov_13of9vkhip().s[13]++;
    logger_1.logger.info('📊 Security Dashboard initialized');
  }
  /**
   * Start dashboard
   * Begins dashboard operations and data refresh
   *
   * @returns Promise<void>
   */
  async startDashboard() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[1]++;
    cov_13of9vkhip().s[14]++;
    try {
      /* istanbul ignore next */
      cov_13of9vkhip().s[15]++;
      logger_1.logger.info('🚀 Starting security dashboard...');
      // Perform initial data load
      /* istanbul ignore next */
      cov_13of9vkhip().s[16]++;
      await this.refreshDashboardData();
      // Start auto-refresh if enabled
      /* istanbul ignore next */
      cov_13of9vkhip().s[17]++;
      if (this.config.autoRefresh) {
        /* istanbul ignore next */
        cov_13of9vkhip().b[0][0]++;
        cov_13of9vkhip().s[18]++;
        this.startAutoRefresh();
      } else
      /* istanbul ignore next */
      {
        cov_13of9vkhip().b[0][1]++;
      }
      // Listen for security monitoring updates
      cov_13of9vkhip().s[19]++;
      security_monitoring_service_1.securityMonitoringService.on('dashboardUpdate', data => {
        /* istanbul ignore next */
        cov_13of9vkhip().f[2]++;
        cov_13of9vkhip().s[20]++;
        this.handleDashboardUpdate(data);
      });
      /* istanbul ignore next */
      cov_13of9vkhip().s[21]++;
      logger_1.logger.info('✅ Security dashboard started successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_13of9vkhip().s[22]++;
      logger_1.logger.error('❌ Failed to start security dashboard:', error);
      /* istanbul ignore next */
      cov_13of9vkhip().s[23]++;
      throw new Error('Security dashboard startup failed');
    }
  }
  /**
   * Stop dashboard
   * Stops dashboard operations and cleanup
   *
   * @returns Promise<void>
   */
  async stopDashboard() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[3]++;
    cov_13of9vkhip().s[24]++;
    try {
      /* istanbul ignore next */
      cov_13of9vkhip().s[25]++;
      logger_1.logger.info('🛑 Stopping security dashboard...');
      // Stop auto-refresh
      /* istanbul ignore next */
      cov_13of9vkhip().s[26]++;
      this.stopAutoRefresh();
      // Clear widgets
      /* istanbul ignore next */
      cov_13of9vkhip().s[27]++;
      this.widgets.clear();
      // Clear alerts
      /* istanbul ignore next */
      cov_13of9vkhip().s[28]++;
      this.activeAlerts.clear();
      /* istanbul ignore next */
      cov_13of9vkhip().s[29]++;
      logger_1.logger.info('✅ Security dashboard stopped successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_13of9vkhip().s[30]++;
      logger_1.logger.error('❌ Failed to stop security dashboard:', error);
      /* istanbul ignore next */
      cov_13of9vkhip().s[31]++;
      throw new Error('Security dashboard shutdown failed');
    }
  }
  /**
   * Get dashboard data
   * Returns current dashboard data for rendering
   *
   * @returns SecurityDashboardData Current dashboard data
   */
  getDashboardData() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[4]++;
    cov_13of9vkhip().s[32]++;
    return this.currentDashboardData;
  }
  /**
   * Get dashboard widgets
   * Returns all dashboard widgets
   *
   * @returns DashboardWidget[] Dashboard widgets
   */
  getDashboardWidgets() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[5]++;
    cov_13of9vkhip().s[33]++;
    return Array.from(this.widgets.values());
  }
  /**
   * Get threat visualization charts
   * Returns chart data for threat visualization
   *
   * @returns ThreatChartData[] Threat visualization charts
   */
  getThreatVisualizationCharts() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[6]++;
    cov_13of9vkhip().s[34]++;
    if (!this.currentDashboardData) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[1][0]++;
      cov_13of9vkhip().s[35]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[1][1]++;
    }
    const charts =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[36]++, []);
    // Threats by type pie chart
    const threatsByType =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[37]++, this.currentDashboardData.threatVisualization.threatsByType);
    /* istanbul ignore next */
    cov_13of9vkhip().s[38]++;
    if (Object.keys(threatsByType).length > 0) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[2][0]++;
      cov_13of9vkhip().s[39]++;
      charts.push({
        type: 'pie',
        title: 'Threats by Type',
        data: {
          labels: Object.keys(threatsByType),
          datasets: [{
            label: 'Threats',
            data: Object.values(threatsByType),
            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF']
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'bottom'
            }
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[2][1]++;
    }
    // Threat timeline chart
    const timeline =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[40]++, this.currentDashboardData.threatVisualization.threatTimeline);
    /* istanbul ignore next */
    cov_13of9vkhip().s[41]++;
    if (timeline.length > 0) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[3][0]++;
      cov_13of9vkhip().s[42]++;
      charts.push({
        type: 'line',
        title: 'Threat Timeline (24 Hours)',
        data: {
          labels: timeline.map(point => {
            /* istanbul ignore next */
            cov_13of9vkhip().f[7]++;
            cov_13of9vkhip().s[43]++;
            return point.timestamp.toLocaleTimeString('en-US', {
              hour: '2-digit',
              minute: '2-digit'
            });
          }),
          datasets: [{
            label: 'Threats',
            data: timeline.map(point => {
              /* istanbul ignore next */
              cov_13of9vkhip().f[8]++;
              cov_13of9vkhip().s[44]++;
              return point.count;
            }),
            borderColor: '#FF6384',
            backgroundColor: 'rgba(255, 99, 132, 0.1)',
            borderWidth: 2,
            fill: true
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 1
              }
            }
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[3][1]++;
    }
    // Threats by source bar chart
    const threatsBySource =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[45]++, this.currentDashboardData.threatVisualization.threatsBySource);
    const topSources =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[46]++, Object.entries(threatsBySource).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_13of9vkhip().f[9]++;
      cov_13of9vkhip().s[47]++;
      return b - a;
    }).slice(0, 10)); // Top 10 sources
    /* istanbul ignore next */
    cov_13of9vkhip().s[48]++;
    if (topSources.length > 0) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[4][0]++;
      cov_13of9vkhip().s[49]++;
      charts.push({
        type: 'bar',
        title: 'Top Threat Sources',
        data: {
          labels: topSources.map(([source]) => {
            /* istanbul ignore next */
            cov_13of9vkhip().f[10]++;
            cov_13of9vkhip().s[50]++;
            return source;
          }),
          datasets: [{
            label: 'Threats',
            data: topSources.map(([, count]) => {
              /* istanbul ignore next */
              cov_13of9vkhip().f[11]++;
              cov_13of9vkhip().s[51]++;
              return count;
            }),
            backgroundColor: '#36A2EB',
            borderColor: '#36A2EB',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 1
              }
            }
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[4][1]++;
    }
    cov_13of9vkhip().s[52]++;
    return charts;
  }
  /**
   * Get security alerts
   * Returns current security alerts for display
   *
   * @returns SecurityAlertDisplay[] Security alerts
   */
  getSecurityAlerts() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[12]++;
    cov_13of9vkhip().s[53]++;
    return Array.from(this.activeAlerts.values()).sort((a, b) => {
      /* istanbul ignore next */
      cov_13of9vkhip().f[13]++;
      cov_13of9vkhip().s[54]++;
      return b.timestamp.getTime() - a.timestamp.getTime();
    });
  }
  /**
   * Acknowledge alert
   * Marks security alert as acknowledged
   *
   * @param alertId - Alert identifier
   * @returns Promise<void>
   */
  async acknowledgeAlert(alertId) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[14]++;
    const alert =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[55]++, this.activeAlerts.get(alertId));
    /* istanbul ignore next */
    cov_13of9vkhip().s[56]++;
    if (alert) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[5][0]++;
      cov_13of9vkhip().s[57]++;
      alert.status = 'acknowledged';
      /* istanbul ignore next */
      cov_13of9vkhip().s[58]++;
      this.emit('alertAcknowledged', alert);
      /* istanbul ignore next */
      cov_13of9vkhip().s[59]++;
      logger_1.logger.info('✅ Security alert acknowledged', {
        alertId,
        title: alert.title
      });
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[5][1]++;
    }
  }
  /**
   * Resolve alert
   * Marks security alert as resolved
   *
   * @param alertId - Alert identifier
   * @returns Promise<void>
   */
  async resolveAlert(alertId) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[15]++;
    const alert =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[60]++, this.activeAlerts.get(alertId));
    /* istanbul ignore next */
    cov_13of9vkhip().s[61]++;
    if (alert) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[6][0]++;
      cov_13of9vkhip().s[62]++;
      alert.status = 'resolved';
      /* istanbul ignore next */
      cov_13of9vkhip().s[63]++;
      this.emit('alertResolved', alert);
      // Remove resolved alerts after 5 minutes
      /* istanbul ignore next */
      cov_13of9vkhip().s[64]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_13of9vkhip().f[16]++;
        cov_13of9vkhip().s[65]++;
        this.activeAlerts.delete(alertId);
      }, 5 * 60 * 1000);
      /* istanbul ignore next */
      cov_13of9vkhip().s[66]++;
      logger_1.logger.info('✅ Security alert resolved', {
        alertId,
        title: alert.title
      });
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[6][1]++;
    }
  }
  /**
   * Initialize dashboard widgets
   * Sets up default dashboard widgets
   */
  initializeWidgets() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[17]++;
    cov_13of9vkhip().s[67]++;
    // Security status widget
    this.widgets.set('security-status', {
      id: 'security-status',
      title: 'Security Status',
      type: 'status',
      data: {
        status: 'SECURE',
        color: 'green'
      },
      config: {
        size: 'large',
        priority: 1
      },
      lastUpdate: new Date()
    });
    // Active threats widget
    /* istanbul ignore next */
    cov_13of9vkhip().s[68]++;
    this.widgets.set('active-threats', {
      id: 'active-threats',
      title: 'Active Threats',
      type: 'metric',
      data: {
        value: 0,
        trend: 'stable'
      },
      config: {
        size: 'medium',
        priority: 2
      },
      lastUpdate: new Date()
    });
    // Security score widget
    /* istanbul ignore next */
    cov_13of9vkhip().s[69]++;
    this.widgets.set('security-score', {
      id: 'security-score',
      title: 'Security Score',
      type: 'metric',
      data: {
        value: 100,
        max: 100,
        unit: '%'
      },
      config: {
        size: 'medium',
        priority: 3
      },
      lastUpdate: new Date()
    });
    // Recent events widget
    /* istanbul ignore next */
    cov_13of9vkhip().s[70]++;
    this.widgets.set('recent-events', {
      id: 'recent-events',
      title: 'Recent Security Events',
      type: 'table',
      data: {
        events: []
      },
      config: {
        size: 'large',
        priority: 4
      },
      lastUpdate: new Date()
    });
    // System health widget
    /* istanbul ignore next */
    cov_13of9vkhip().s[71]++;
    this.widgets.set('system-health', {
      id: 'system-health',
      title: 'System Health',
      type: 'status',
      data: {
        components: {}
      },
      config: {
        size: 'medium',
        priority: 5
      },
      lastUpdate: new Date()
    });
  }
  /**
   * Set up event handlers
   * Configures event handling for dashboard updates
   */
  setupEventHandlers() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[18]++;
    cov_13of9vkhip().s[72]++;
    // Handle security events
    security_monitoring_service_1.securityMonitoringService.on('securityEvent', event => {
      /* istanbul ignore next */
      cov_13of9vkhip().f[19]++;
      cov_13of9vkhip().s[73]++;
      this.handleSecurityEvent(event);
    });
    // Handle dashboard updates
    /* istanbul ignore next */
    cov_13of9vkhip().s[74]++;
    this.on('dashboardUpdate', () => {
      /* istanbul ignore next */
      cov_13of9vkhip().f[20]++;
      cov_13of9vkhip().s[75]++;
      this.updateWidgets();
    });
  }
  /**
   * Start auto-refresh
   * Begins automatic dashboard data refresh
   */
  startAutoRefresh() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[21]++;
    cov_13of9vkhip().s[76]++;
    this.refreshInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_13of9vkhip().f[22]++;
      cov_13of9vkhip().s[77]++;
      try {
        /* istanbul ignore next */
        cov_13of9vkhip().s[78]++;
        await this.refreshDashboardData();
      } catch (error) {
        /* istanbul ignore next */
        cov_13of9vkhip().s[79]++;
        logger_1.logger.error('❌ Dashboard refresh error:', error);
      }
    }, this.config.refreshInterval);
  }
  /**
   * Stop auto-refresh
   * Stops automatic dashboard data refresh
   */
  stopAutoRefresh() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[23]++;
    cov_13of9vkhip().s[80]++;
    if (this.refreshInterval) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[7][0]++;
      cov_13of9vkhip().s[81]++;
      clearInterval(this.refreshInterval);
      /* istanbul ignore next */
      cov_13of9vkhip().s[82]++;
      this.refreshInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[7][1]++;
    }
  }
  /**
   * Refresh dashboard data
   * Updates dashboard data from security monitoring service
   *
   * @returns Promise<void>
   */
  async refreshDashboardData() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[24]++;
    cov_13of9vkhip().s[83]++;
    try {
      const dashboardData =
      /* istanbul ignore next */
      (cov_13of9vkhip().s[84]++, security_monitoring_service_1.securityMonitoringService.getSecurityDashboardData());
      /* istanbul ignore next */
      cov_13of9vkhip().s[85]++;
      this.handleDashboardUpdate(dashboardData);
    } catch (error) {
      /* istanbul ignore next */
      cov_13of9vkhip().s[86]++;
      logger_1.logger.error('❌ Failed to refresh dashboard data:', error);
    }
  }
  /**
   * Handle dashboard update
   * Processes dashboard data updates
   *
   * @param data - Updated dashboard data
   */
  handleDashboardUpdate(data) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[25]++;
    cov_13of9vkhip().s[87]++;
    this.currentDashboardData = data;
    /* istanbul ignore next */
    cov_13of9vkhip().s[88]++;
    this.updateWidgets();
    /* istanbul ignore next */
    cov_13of9vkhip().s[89]++;
    this.updateAlerts();
    /* istanbul ignore next */
    cov_13of9vkhip().s[90]++;
    this.emit('dashboardUpdate', data);
  }
  /**
   * Handle security event
   * Processes security events for dashboard display
   *
   * @param event - Security event
   */
  handleSecurityEvent(event) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[26]++;
    cov_13of9vkhip().s[91]++;
    // Create alert for high-severity events
    if (event.severity >= 7) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[8][0]++;
      const alert =
      /* istanbul ignore next */
      (cov_13of9vkhip().s[92]++, {
        alertId: event.eventId,
        severity: this.mapSeverityToAlertLevel(event.severity),
        title: this.formatEventTitle(event),
        message: this.formatEventMessage(event),
        timestamp: event.timestamp,
        status: 'active',
        actions: event.responseActions,
        icon: this.getEventIcon(event.eventType),
        color: this.getEventColor(event.severity)
      });
      /* istanbul ignore next */
      cov_13of9vkhip().s[93]++;
      this.activeAlerts.set(alert.alertId, alert);
      /* istanbul ignore next */
      cov_13of9vkhip().s[94]++;
      this.emit('newAlert', alert);
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[8][1]++;
    }
  }
  /**
   * Update dashboard widgets
   * Updates widget data based on current dashboard data
   */
  updateWidgets() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[27]++;
    cov_13of9vkhip().s[95]++;
    if (!this.currentDashboardData) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[9][0]++;
      cov_13of9vkhip().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[9][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[97]++, this.currentDashboardData);
    // Update security status widget
    const statusWidget =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[98]++, this.widgets.get('security-status'));
    /* istanbul ignore next */
    cov_13of9vkhip().s[99]++;
    if (statusWidget) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[10][0]++;
      cov_13of9vkhip().s[100]++;
      statusWidget.data = {
        status: data.securityStatus,
        color: this.getStatusColor(data.securityStatus)
      };
      /* istanbul ignore next */
      cov_13of9vkhip().s[101]++;
      statusWidget.lastUpdate = new Date();
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[10][1]++;
    }
    // Update active threats widget
    const threatsWidget =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[102]++, this.widgets.get('active-threats'));
    /* istanbul ignore next */
    cov_13of9vkhip().s[103]++;
    if (threatsWidget) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[11][0]++;
      cov_13of9vkhip().s[104]++;
      threatsWidget.data = {
        value: data.activeThreats,
        trend: data.activeThreats > 0 ?
        /* istanbul ignore next */
        (cov_13of9vkhip().b[12][0]++, 'up') :
        /* istanbul ignore next */
        (cov_13of9vkhip().b[12][1]++, 'stable')
      };
      /* istanbul ignore next */
      cov_13of9vkhip().s[105]++;
      threatsWidget.lastUpdate = new Date();
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[11][1]++;
    }
    // Update security score widget
    const scoreWidget =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[106]++, this.widgets.get('security-score'));
    /* istanbul ignore next */
    cov_13of9vkhip().s[107]++;
    if (scoreWidget) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[13][0]++;
      cov_13of9vkhip().s[108]++;
      scoreWidget.data = {
        value: Math.round(data.metrics.securityScore),
        max: 100,
        unit: '%'
      };
      /* istanbul ignore next */
      cov_13of9vkhip().s[109]++;
      scoreWidget.lastUpdate = new Date();
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[13][1]++;
    }
    // Update recent events widget
    const eventsWidget =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[110]++, this.widgets.get('recent-events'));
    /* istanbul ignore next */
    cov_13of9vkhip().s[111]++;
    if (eventsWidget) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[14][0]++;
      cov_13of9vkhip().s[112]++;
      eventsWidget.data = {
        events: data.recentEvents.slice(0, this.config.maxDisplayEvents)
      };
      /* istanbul ignore next */
      cov_13of9vkhip().s[113]++;
      eventsWidget.lastUpdate = new Date();
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[14][1]++;
    }
    // Update system health widget
    const healthWidget =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[114]++, this.widgets.get('system-health'));
    /* istanbul ignore next */
    cov_13of9vkhip().s[115]++;
    if (healthWidget) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[15][0]++;
      cov_13of9vkhip().s[116]++;
      healthWidget.data = {
        components: data.systemHealth.componentStatus
      };
      /* istanbul ignore next */
      cov_13of9vkhip().s[117]++;
      healthWidget.lastUpdate = new Date();
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[15][1]++;
    }
  }
  /**
   * Update alerts
   * Updates active alerts based on current events
   */
  updateAlerts() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[28]++;
    cov_13of9vkhip().s[118]++;
    if (!this.currentDashboardData) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[16][0]++;
      cov_13of9vkhip().s[119]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[16][1]++;
    }
    // Auto-resolve old alerts (older than 1 hour)
    const oneHourAgo =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[120]++, Date.now() - 60 * 60 * 1000);
    /* istanbul ignore next */
    cov_13of9vkhip().s[121]++;
    for (const [alertId, alert] of this.activeAlerts.entries()) {
      /* istanbul ignore next */
      cov_13of9vkhip().s[122]++;
      if (
      /* istanbul ignore next */
      (cov_13of9vkhip().b[18][0]++, alert.timestamp.getTime() < oneHourAgo) &&
      /* istanbul ignore next */
      (cov_13of9vkhip().b[18][1]++, alert.status === 'active')) {
        /* istanbul ignore next */
        cov_13of9vkhip().b[17][0]++;
        cov_13of9vkhip().s[123]++;
        alert.status = 'resolved';
        /* istanbul ignore next */
        cov_13of9vkhip().s[124]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_13of9vkhip().f[29]++;
          cov_13of9vkhip().s[125]++;
          this.activeAlerts.delete(alertId);
        }, 5 * 60 * 1000); // Remove after 5 minutes
      } else
      /* istanbul ignore next */
      {
        cov_13of9vkhip().b[17][1]++;
      }
    }
  }
  /**
   * Map severity to alert level
   * Converts numeric severity to alert level
   *
   * @param severity - Numeric severity (1-10)
   * @returns Alert level
   */
  mapSeverityToAlertLevel(severity) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[30]++;
    cov_13of9vkhip().s[126]++;
    if (severity >= 9) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[19][0]++;
      cov_13of9vkhip().s[127]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[19][1]++;
    }
    cov_13of9vkhip().s[128]++;
    if (severity >= 7) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[20][0]++;
      cov_13of9vkhip().s[129]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[20][1]++;
    }
    cov_13of9vkhip().s[130]++;
    if (severity >= 5) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[21][0]++;
      cov_13of9vkhip().s[131]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[21][1]++;
    }
    cov_13of9vkhip().s[132]++;
    return 'low';
  }
  /**
   * Format event title
   * Creates human-readable event title
   *
   * @param event - Security event
   * @returns Formatted title
   */
  formatEventTitle(event) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[31]++;
    const typeMap =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[133]++, {
      'threat_detected': '🚨 Threat Detected',
      'authentication_failure': '🔐 Authentication Failure',
      'unauthorized_access': '🚫 Unauthorized Access',
      'suspicious_activity': '🔍 Suspicious Activity',
      'system_anomaly': '⚠️ System Anomaly',
      'network_intrusion': '🌐 Network Intrusion',
      'data_access_violation': '📊 Data Access Violation',
      'configuration_change': '⚙️ Configuration Change',
      'security_policy_violation': '📋 Policy Violation',
      'incident_escalation': '🚨 Incident Escalation'
    });
    /* istanbul ignore next */
    cov_13of9vkhip().s[134]++;
    return /* istanbul ignore next */(cov_13of9vkhip().b[22][0]++, typeMap[event.eventType]) ||
    /* istanbul ignore next */
    (cov_13of9vkhip().b[22][1]++, '⚠️ Security Event');
  }
  /**
   * Format event message
   * Creates human-readable event message
   *
   * @param event - Security event
   * @returns Formatted message
   */
  formatEventMessage(event) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[32]++;
    cov_13of9vkhip().s[135]++;
    return `Security event from ${event.source} targeting ${event.target}. Severity: ${event.severity}/10`;
  }
  /**
   * Get event icon
   * Returns appropriate icon for event type
   *
   * @param eventType - Event type
   * @returns Icon string
   */
  getEventIcon(eventType) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[33]++;
    const iconMap =
    /* istanbul ignore next */
    (cov_13of9vkhip().s[136]++, {
      'threat_detected': '🚨',
      'authentication_failure': '🔐',
      'unauthorized_access': '🚫',
      'suspicious_activity': '🔍',
      'system_anomaly': '⚠️',
      'network_intrusion': '🌐',
      'data_access_violation': '📊',
      'configuration_change': '⚙️',
      'security_policy_violation': '📋',
      'incident_escalation': '🚨'
    });
    /* istanbul ignore next */
    cov_13of9vkhip().s[137]++;
    return /* istanbul ignore next */(cov_13of9vkhip().b[23][0]++, iconMap[eventType]) ||
    /* istanbul ignore next */
    (cov_13of9vkhip().b[23][1]++, '⚠️');
  }
  /**
   * Get event color
   * Returns appropriate color for event severity
   *
   * @param severity - Event severity
   * @returns Color string
   */
  getEventColor(severity) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[34]++;
    cov_13of9vkhip().s[138]++;
    if (severity >= 9) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[24][0]++;
      cov_13of9vkhip().s[139]++;
      return '#dc3545';
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[24][1]++;
    } // Critical - Red
    cov_13of9vkhip().s[140]++;
    if (severity >= 7) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[25][0]++;
      cov_13of9vkhip().s[141]++;
      return '#fd7e14';
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[25][1]++;
    } // High - Orange
    cov_13of9vkhip().s[142]++;
    if (severity >= 5) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[26][0]++;
      cov_13of9vkhip().s[143]++;
      return '#ffc107';
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[26][1]++;
    } // Medium - Yellow
    cov_13of9vkhip().s[144]++;
    return '#28a745'; // Low - Green
  }
  /**
   * Get status color
   * Returns appropriate color for security status
   *
   * @param status - Security status
   * @returns Color string
   */
  getStatusColor(status) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[35]++;
    cov_13of9vkhip().s[145]++;
    switch (status) {
      case 'SECURE':
        /* istanbul ignore next */
        cov_13of9vkhip().b[27][0]++;
        cov_13of9vkhip().s[146]++;
        return '#28a745';
      // Green
      case 'WARNING':
        /* istanbul ignore next */
        cov_13of9vkhip().b[27][1]++;
        cov_13of9vkhip().s[147]++;
        return '#ffc107';
      // Yellow
      case 'CRITICAL':
        /* istanbul ignore next */
        cov_13of9vkhip().b[27][2]++;
        cov_13of9vkhip().s[148]++;
        return '#dc3545';
      // Red
      default:
        /* istanbul ignore next */
        cov_13of9vkhip().b[27][3]++;
        cov_13of9vkhip().s[149]++;
        return '#6c757d';
      // Gray
    }
  }
  /**
   * Get dashboard configuration
   * Returns current dashboard configuration
   *
   * @returns SecurityDashboardConfig Dashboard configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[36]++;
    cov_13of9vkhip().s[150]++;
    return {
      ...this.config
    };
  }
  /**
   * Update dashboard configuration
   * Updates dashboard configuration
   *
   * @param config - New configuration
   * @returns Promise<void>
   */
  async updateConfig(config) {
    /* istanbul ignore next */
    cov_13of9vkhip().f[37]++;
    cov_13of9vkhip().s[151]++;
    this.config = {
      ...this.config,
      ...config
    };
    // Restart auto-refresh if interval changed
    /* istanbul ignore next */
    cov_13of9vkhip().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_13of9vkhip().b[29][0]++, config.refreshInterval) &&
    /* istanbul ignore next */
    (cov_13of9vkhip().b[29][1]++, this.refreshInterval)) {
      /* istanbul ignore next */
      cov_13of9vkhip().b[28][0]++;
      cov_13of9vkhip().s[153]++;
      this.stopAutoRefresh();
      /* istanbul ignore next */
      cov_13of9vkhip().s[154]++;
      this.startAutoRefresh();
    } else
    /* istanbul ignore next */
    {
      cov_13of9vkhip().b[28][1]++;
    }
    cov_13of9vkhip().s[155]++;
    this.emit('configUpdated', this.config);
  }
  /**
   * Get dashboard status
   * Returns current dashboard status
   *
   * @returns Dashboard status information
   */
  getStatus() {
    /* istanbul ignore next */
    cov_13of9vkhip().f[38]++;
    cov_13of9vkhip().s[156]++;
    return {
      isActive: this.refreshInterval !== null,
      widgetCount: this.widgets.size,
      activeAlerts: this.activeAlerts.size,
      lastUpdate: this.currentDashboardData ?
      /* istanbul ignore next */
      (cov_13of9vkhip().b[30][0]++, new Date()) :
      /* istanbul ignore next */
      (cov_13of9vkhip().b[30][1]++, null),
      autoRefresh: this.config.autoRefresh,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_13of9vkhip().s[157]++;
exports.SecurityDashboard = SecurityDashboard;
// Create and export singleton instance
/* istanbul ignore next */
cov_13of9vkhip().s[158]++;
exports.securityDashboard = new SecurityDashboard();
// =============================================================================
// SECURITY DASHBOARD NOTES
// =============================================================================
// 1. Real-time security visualization with interactive charts and metrics
// 2. Comprehensive threat analysis and pattern visualization
// 3. Automated alert management with acknowledgment and resolution
// 4. Configurable dashboard widgets and layout
// 5. Integration with security monitoring service for live data
// 6. Support for multiple chart types and visualization formats
// 7. Responsive design for desktop and mobile access
// 8. Theme support for light/dark mode preferences
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,