897c6bdc11796f8f76b9e1ef16d44b41
"use strict";

/**
 * =============================================================================
 * COMPREHENSIVE TRADING AND SYSTEM LOGGER
 * =============================================================================
 *
 * This module provides detailed logging for all trading operations, market
 * analysis, strategy decisions, and system performance with rich context
 * and AI-powered explanations.
 *
 * Features:
 * - Detailed trade execution logging with reasoning
 * - Market analysis and sentiment logging
 * - Strategy decision logs with AI explanations
 * - Performance metrics with Intel NUC monitoring
 * - Error and exception logging with recovery actions
 * - Audit trail for configuration changes
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1y4nxhcc34() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\trading-logger.ts";
  var hash = "cd27efdf3291d8bf9d75864a820bc2b5386dc7ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\trading-logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "1": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "2": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "3": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 55
        }
      },
      "4": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "5": {
        start: {
          line: 29,
          column: 13
        },
        end: {
          line: 29,
          column: 43
        }
      },
      "6": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "7": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "8": {
        start: {
          line: 36,
          column: 19
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "9": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 48
        }
      },
      "10": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 29
        }
      },
      "11": {
        start: {
          line: 45,
          column: 22
        },
        end: {
          line: 45,
          column: 113
        }
      },
      "12": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 152
        }
      },
      "13": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "14": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "15": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "16": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 40
        }
      },
      "17": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 88,
          column: 82
        }
      },
      "18": {
        start: {
          line: 88,
          column: 53
        },
        end: {
          line: 88,
          column: 68
        }
      },
      "19": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "20": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 100,
          column: 76
        }
      },
      "21": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 199
        }
      },
      "22": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "23": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 95
        }
      },
      "24": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 63
        }
      },
      "25": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "26": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 136,
          column: 37
        }
      },
      "27": {
        start: {
          line: 124,
          column: 41
        },
        end: {
          line: 124,
          column: 116
        }
      },
      "28": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 129,
          column: 116
        }
      },
      "29": {
        start: {
          line: 133,
          column: 67
        },
        end: {
          line: 133,
          column: 85
        }
      },
      "30": {
        start: {
          line: 134,
          column: 73
        },
        end: {
          line: 134,
          column: 91
        }
      },
      "31": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "32": {
        start: {
          line: 147,
          column: 30
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "33": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 177
        }
      },
      "34": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "35": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 72
        }
      },
      "36": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 65
        }
      },
      "37": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 43
        }
      },
      "38": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 192,
          column: 126
        }
      },
      "39": {
        start: {
          line: 176,
          column: 38
        },
        end: {
          line: 176,
          column: 105
        }
      },
      "40": {
        start: {
          line: 183,
          column: 49
        },
        end: {
          line: 183,
          column: 64
        }
      },
      "41": {
        start: {
          line: 186,
          column: 46
        },
        end: {
          line: 186,
          column: 61
        }
      },
      "42": {
        start: {
          line: 189,
          column: 53
        },
        end: {
          line: 189,
          column: 68
        }
      },
      "43": {
        start: {
          line: 192,
          column: 34
        },
        end: {
          line: 192,
          column: 112
        }
      },
      "44": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "45": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 205,
          column: 114
        }
      },
      "46": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 100
        }
      },
      "47": {
        start: {
          line: 207,
          column: 29
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "48": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 152
        }
      },
      "49": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 52
        }
      },
      "50": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 46
        }
      },
      "51": {
        start: {
          line: 225,
          column: 29
        },
        end: {
          line: 225,
          column: 87
        }
      },
      "52": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "53": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 230,
          column: 73
        }
      },
      "54": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "55": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 237,
          column: 112
        }
      },
      "56": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "57": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 244,
          column: 67
        }
      },
      "58": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "59": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 251,
          column: 57
        }
      },
      "60": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "61": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 257,
          column: 86
        }
      },
      "62": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 262,
          column: 11
        }
      },
      "63": {
        start: {
          line: 268,
          column: 30
        },
        end: {
          line: 270,
          column: 118
        }
      },
      "64": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 116
        }
      },
      "65": {
        start: {
          line: 272,
          column: 29
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "66": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 73
        }
      },
      "67": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 46
        }
      },
      "68": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 40
        }
      },
      "69": {
        start: {
          line: 298,
          column: 32
        },
        end: {
          line: 320,
          column: 25
        }
      },
      "70": {
        start: {
          line: 319,
          column: 35
        },
        end: {
          line: 319,
          column: 109
        }
      },
      "71": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 325,
          column: 11
        }
      },
      "72": {
        start: {
          line: 331,
          column: 28
        },
        end: {
          line: 333,
          column: 49
        }
      },
      "73": {
        start: {
          line: 334,
          column: 24
        },
        end: {
          line: 334,
          column: 119
        }
      },
      "74": {
        start: {
          line: 335,
          column: 29
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "75": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 70
        }
      },
      "76": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "77": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 46
        }
      },
      "78": {
        start: {
          line: 364,
          column: 30
        },
        end: {
          line: 378,
          column: 83
        }
      },
      "79": {
        start: {
          line: 373,
          column: 32
        },
        end: {
          line: 373,
          column: 126
        }
      },
      "80": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 383,
          column: 11
        }
      },
      "81": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "82": {
        start: {
          line: 390,
          column: 28
        },
        end: {
          line: 390,
          column: 68
        }
      },
      "83": {
        start: {
          line: 391,
          column: 28
        },
        end: {
          line: 391,
          column: 68
        }
      },
      "84": {
        start: {
          line: 392,
          column: 28
        },
        end: {
          line: 392,
          column: 71
        }
      },
      "85": {
        start: {
          line: 393,
          column: 21
        },
        end: {
          line: 393,
          column: 61
        }
      },
      "86": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "87": {
        start: {
          line: 401,
          column: 24
        },
        end: {
          line: 401,
          column: 63
        }
      },
      "88": {
        start: {
          line: 402,
          column: 25
        },
        end: {
          line: 402,
          column: 65
        }
      },
      "89": {
        start: {
          line: 403,
          column: 25
        },
        end: {
          line: 403,
          column: 68
        }
      },
      "90": {
        start: {
          line: 404,
          column: 25
        },
        end: {
          line: 404,
          column: 65
        }
      },
      "91": {
        start: {
          line: 405,
          column: 21
        },
        end: {
          line: 405,
          column: 61
        }
      },
      "92": {
        start: {
          line: 412,
          column: 20
        },
        end: {
          line: 412,
          column: 60
        }
      },
      "93": {
        start: {
          line: 413,
          column: 24
        },
        end: {
          line: 413,
          column: 62
        }
      },
      "94": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 33
        }
      },
      "95": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "96": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 28
        }
      },
      "97": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 50
        }
      },
      "98": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 426,
          column: 63
        }
      },
      "99": {
        start: {
          line: 427,
          column: 24
        },
        end: {
          line: 427,
          column: 56
        }
      },
      "100": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 30
        }
      },
      "101": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "102": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 28
        }
      },
      "103": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 44
        }
      },
      "104": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 59
        }
      },
      "105": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 53
        }
      },
      "106": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 457,
          column: 10
        }
      },
      "107": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "108": {
        start: {
          line: 464,
          column: 28
        },
        end: {
          line: 464,
          column: 47
        }
      },
      "109": {
        start: {
          line: 465,
          column: 28
        },
        end: {
          line: 465,
          column: 49
        }
      },
      "110": {
        start: {
          line: 466,
          column: 28
        },
        end: {
          line: 466,
          column: 50
        }
      },
      "111": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 485,
          column: 14
        }
      },
      "112": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 69
        }
      },
      "113": {
        start: {
          line: 492,
          column: 0
        },
        end: {
          line: 492,
          column: 38
        }
      },
      "114": {
        start: {
          line: 494,
          column: 0
        },
        end: {
          line: 494,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 23,
            column: 57
          }
        },
        loc: {
          start: {
            line: 23,
            column: 71
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 31
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 70
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 88,
            column: 44
          }
        },
        loc: {
          start: {
            line: 88,
            column: 53
          },
          end: {
            line: 88,
            column: 68
          }
        },
        line: 88
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 98
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 119
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 124,
            column: 17
          },
          end: {
            line: 124,
            column: 18
          }
        },
        loc: {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 116
          }
        },
        line: 124
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 129,
            column: 17
          },
          end: {
            line: 129,
            column: 18
          }
        },
        loc: {
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 129,
            column: 116
          }
        },
        line: 129
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 133,
            column: 62
          },
          end: {
            line: 133,
            column: 63
          }
        },
        loc: {
          start: {
            line: 133,
            column: 67
          },
          end: {
            line: 133,
            column: 85
          }
        },
        line: 133
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 134,
            column: 68
          },
          end: {
            line: 134,
            column: 69
          }
        },
        loc: {
          start: {
            line: 134,
            column: 73
          },
          end: {
            line: 134,
            column: 91
          }
        },
        line: 134
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        loc: {
          start: {
            line: 146,
            column: 33
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 146
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 34
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 169
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 176,
            column: 17
          },
          end: {
            line: 176,
            column: 18
          }
        },
        loc: {
          start: {
            line: 176,
            column: 38
          },
          end: {
            line: 176,
            column: 105
          }
        },
        line: 176
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 40
          }
        },
        loc: {
          start: {
            line: 183,
            column: 49
          },
          end: {
            line: 183,
            column: 64
          }
        },
        line: 183
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 186,
            column: 36
          },
          end: {
            line: 186,
            column: 37
          }
        },
        loc: {
          start: {
            line: 186,
            column: 46
          },
          end: {
            line: 186,
            column: 61
          }
        },
        line: 186
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 189,
            column: 43
          },
          end: {
            line: 189,
            column: 44
          }
        },
        loc: {
          start: {
            line: 189,
            column: 53
          },
          end: {
            line: 189,
            column: 68
          }
        },
        line: 189
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 192,
            column: 27
          },
          end: {
            line: 192,
            column: 28
          }
        },
        loc: {
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 192,
            column: 112
          }
        },
        line: 192
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 34
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 203
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 43
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 224
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 267
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 297
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 319,
            column: 17
          },
          end: {
            line: 319,
            column: 18
          }
        },
        loc: {
          start: {
            line: 319,
            column: 35
          },
          end: {
            line: 319,
            column: 109
          }
        },
        line: 319
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 36
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 330
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 37
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 363
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 373,
            column: 23
          }
        },
        loc: {
          start: {
            line: 373,
            column: 32
          },
          end: {
            line: 373,
            column: 126
          }
        },
        line: 373
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 388
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 31
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 399
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 411,
            column: 5
          }
        },
        loc: {
          start: {
            line: 411,
            column: 37
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 411
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 31
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 425
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        },
        loc: {
          start: {
            line: 438,
            column: 27
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 438
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 444,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        },
        loc: {
          start: {
            line: 444,
            column: 23
          },
          end: {
            line: 446,
            column: 5
          }
        },
        line: 444
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 40
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 450
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 462,
            column: 5
          }
        },
        loc: {
          start: {
            line: 462,
            column: 28
          },
          end: {
            line: 490,
            column: 5
          }
        },
        line: 462
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 25,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 51
          }
        }, {
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 25,
            column: 1
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 24,
            column: 40
          }
        }, {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 24,
            column: 61
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 24,
            column: 15
          }
        }, {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 33
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 14
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 46
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 78
          }
        }, {
          start: {
            line: 45,
            column: 81
          },
          end: {
            line: 45,
            column: 113
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 113
          },
          end: {
            line: 46,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 113
          },
          end: {
            line: 46,
            column: 138
          }
        }, {
          start: {
            line: 46,
            column: 142
          },
          end: {
            line: 46,
            column: 150
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 46
          },
          end: {
            line: 100,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 86
          },
          end: {
            line: 99,
            column: 95
          }
        }, {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 75
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 54
          },
          end: {
            line: 100,
            column: 63
          }
        }, {
          start: {
            line: 100,
            column: 66
          },
          end: {
            line: 100,
            column: 75
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 62
          },
          end: {
            line: 124,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 90
          },
          end: {
            line: 124,
            column: 106
          }
        }, {
          start: {
            line: 124,
            column: 109
          },
          end: {
            line: 124,
            column: 114
          }
        }],
        line: 124
      },
      "9": {
        loc: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 129,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 84
          },
          end: {
            line: 129,
            column: 106
          }
        }, {
          start: {
            line: 129,
            column: 109
          },
          end: {
            line: 129,
            column: 114
          }
        }],
        line: 129
      },
      "10": {
        loc: {
          start: {
            line: 176,
            column: 51
          },
          end: {
            line: 176,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 79
          },
          end: {
            line: 176,
            column: 95
          }
        }, {
          start: {
            line: 176,
            column: 98
          },
          end: {
            line: 176,
            column: 103
          }
        }],
        line: 176
      },
      "11": {
        loc: {
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 205,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 59
          },
          end: {
            line: 204,
            column: 94
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 114
          }
        }],
        line: 204
      },
      "12": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 43
          },
          end: {
            line: 205,
            column: 78
          }
        }, {
          start: {
            line: 205,
            column: 81
          },
          end: {
            line: 205,
            column: 114
          }
        }],
        line: 205
      },
      "13": {
        loc: {
          start: {
            line: 215,
            column: 26
          },
          end: {
            line: 215,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 58
          },
          end: {
            line: 215,
            column: 65
          }
        }, {
          start: {
            line: 215,
            column: 68
          },
          end: {
            line: 215,
            column: 114
          }
        }],
        line: 215
      },
      "14": {
        loc: {
          start: {
            line: 215,
            column: 68
          },
          end: {
            line: 215,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 99
          },
          end: {
            line: 215,
            column: 105
          }
        }, {
          start: {
            line: 215,
            column: 108
          },
          end: {
            line: 215,
            column: 114
          }
        }],
        line: 215
      },
      "15": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "16": {
        loc: {
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 62
          }
        }, {
          start: {
            line: 229,
            column: 66
          },
          end: {
            line: 229,
            column: 71
          }
        }],
        line: 229
      },
      "17": {
        loc: {
          start: {
            line: 230,
            column: 17
          },
          end: {
            line: 230,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 17
          },
          end: {
            line: 230,
            column: 58
          }
        }, {
          start: {
            line: 230,
            column: 62
          },
          end: {
            line: 230,
            column: 67
          }
        }],
        line: 230
      },
      "18": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "19": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 42
          },
          end: {
            line: 237,
            column: 101
          }
        }, {
          start: {
            line: 237,
            column: 104
          },
          end: {
            line: 237,
            column: 109
          }
        }],
        line: 237
      },
      "20": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "21": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 244,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 244,
            column: 55
          }
        }, {
          start: {
            line: 244,
            column: 59
          },
          end: {
            line: 244,
            column: 64
          }
        }],
        line: 244
      },
      "22": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "23": {
        loc: {
          start: {
            line: 250,
            column: 19
          },
          end: {
            line: 250,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 19
          },
          end: {
            line: 250,
            column: 65
          }
        }, {
          start: {
            line: 250,
            column: 69
          },
          end: {
            line: 250,
            column: 74
          }
        }],
        line: 250
      },
      "24": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "25": {
        loc: {
          start: {
            line: 257,
            column: 23
          },
          end: {
            line: 257,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 23
          },
          end: {
            line: 257,
            column: 73
          }
        }, {
          start: {
            line: 257,
            column: 77
          },
          end: {
            line: 257,
            column: 82
          }
        }],
        line: 257
      },
      "26": {
        loc: {
          start: {
            line: 268,
            column: 30
          },
          end: {
            line: 270,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 64
          },
          end: {
            line: 268,
            column: 97
          }
        }, {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 270,
            column: 118
          }
        }],
        line: 268
      },
      "27": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 270,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 42
          },
          end: {
            line: 269,
            column: 75
          }
        }, {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 270,
            column: 118
          }
        }],
        line: 269
      },
      "28": {
        loc: {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 270,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 48
          },
          end: {
            line: 270,
            column: 83
          }
        }, {
          start: {
            line: 270,
            column: 86
          },
          end: {
            line: 270,
            column: 118
          }
        }],
        line: 270
      },
      "29": {
        loc: {
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 307,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 307,
            column: 61
          }
        }, {
          start: {
            line: 307,
            column: 65
          },
          end: {
            line: 307,
            column: 71
          }
        }],
        line: 307
      },
      "30": {
        loc: {
          start: {
            line: 308,
            column: 18
          },
          end: {
            line: 308,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 18
          },
          end: {
            line: 308,
            column: 63
          }
        }, {
          start: {
            line: 308,
            column: 67
          },
          end: {
            line: 308,
            column: 73
          }
        }],
        line: 308
      },
      "31": {
        loc: {
          start: {
            line: 309,
            column: 14
          },
          end: {
            line: 309,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 14
          },
          end: {
            line: 309,
            column: 55
          }
        }, {
          start: {
            line: 309,
            column: 59
          },
          end: {
            line: 309,
            column: 65
          }
        }],
        line: 309
      },
      "32": {
        loc: {
          start: {
            line: 310,
            column: 18
          },
          end: {
            line: 310,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 18
          },
          end: {
            line: 310,
            column: 62
          }
        }, {
          start: {
            line: 310,
            column: 66
          },
          end: {
            line: 310,
            column: 72
          }
        }],
        line: 310
      },
      "33": {
        loc: {
          start: {
            line: 313,
            column: 24
          },
          end: {
            line: 313,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 57
          },
          end: {
            line: 313,
            column: 62
          }
        }, {
          start: {
            line: 313,
            column: 65
          },
          end: {
            line: 313,
            column: 69
          }
        }],
        line: 313
      },
      "34": {
        loc: {
          start: {
            line: 319,
            column: 50
          },
          end: {
            line: 319,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 78
          },
          end: {
            line: 319,
            column: 99
          }
        }, {
          start: {
            line: 319,
            column: 102
          },
          end: {
            line: 319,
            column: 107
          }
        }],
        line: 319
      },
      "35": {
        loc: {
          start: {
            line: 331,
            column: 28
          },
          end: {
            line: 333,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 62
          },
          end: {
            line: 331,
            column: 97
          }
        }, {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 333,
            column: 49
          }
        }],
        line: 331
      },
      "36": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 333,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 46
          },
          end: {
            line: 332,
            column: 81
          }
        }, {
          start: {
            line: 333,
            column: 16
          },
          end: {
            line: 333,
            column: 49
          }
        }],
        line: 332
      },
      "37": {
        loc: {
          start: {
            line: 376,
            column: 24
          },
          end: {
            line: 376,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 376,
            column: 57
          },
          end: {
            line: 376,
            column: 62
          }
        }, {
          start: {
            line: 376,
            column: 65
          },
          end: {
            line: 376,
            column: 69
          }
        }],
        line: 376
      },
      "38": {
        loc: {
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 71
          }
        }, {
          start: {
            line: 378,
            column: 75
          },
          end: {
            line: 378,
            column: 81
          }
        }],
        line: 378
      },
      "39": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 390,
            column: 68
          }
        }, {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 391,
            column: 68
          }
        }, {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 71
          }
        }, {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 393,
            column: 61
          }
        }],
        line: 389
      },
      "40": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 63
          }
        }, {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 65
          }
        }, {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 403,
            column: 68
          }
        }, {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 404,
            column: 65
          }
        }, {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 405,
            column: 61
          }
        }],
        line: 400
      },
      "41": {
        loc: {
          start: {
            line: 413,
            column: 24
          },
          end: {
            line: 413,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 24
          },
          end: {
            line: 413,
            column: 56
          }
        }, {
          start: {
            line: 413,
            column: 60
          },
          end: {
            line: 413,
            column: 62
          }
        }],
        line: 413
      },
      "42": {
        loc: {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "43": {
        loc: {
          start: {
            line: 427,
            column: 24
          },
          end: {
            line: 427,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 24
          },
          end: {
            line: 427,
            column: 50
          }
        }, {
          start: {
            line: 427,
            column: 54
          },
          end: {
            line: 427,
            column: 56
          }
        }],
        line: 427
      },
      "44": {
        loc: {
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "45": {
        loc: {
          start: {
            line: 470,
            column: 27
          },
          end: {
            line: 470,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 470,
            column: 27
          },
          end: {
            line: 470,
            column: 44
          }
        }, {
          start: {
            line: 470,
            column: 48
          },
          end: {
            line: 470,
            column: 57
          }
        }],
        line: 470
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0, 0],
      "40": [0, 0, 0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\trading-logger.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;;;;;;GAoBG;;;;;;AAEH,uDAA8D;AAE9D,4CAAoB;AAkLpB;;GAEG;AACH,MAAa,aAAc,SAAQ,gCAAc;IACvC,aAAa,GAAW,CAAC,CAAC;IAC1B,kBAAkB,GAA0B,IAAI,GAAG,EAAE,CAAC;IACtD,YAAY,GAAgC,IAAI,GAAG,EAAE,CAAC;IAE9D,YAAY,aAAsB;QAChC,KAAK,CAAC,aAAa,IAAI,eAAe,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACI,iBAAiB,CAAC,OAA8B;QACrD,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,2BAAS,CAAC,GAAG,CAAC,CAAC,CAAC,2BAAS,CAAC,IAAI,CAAC;QACtE,MAAM,OAAO,GAAG,oBAAoB,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,OAAO,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE,CAAC;QAEjJ,MAAM,YAAY,GAAgB;YAChC,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,QAAQ,EAAE,IAAI,CAAC,aAAa;YAC5B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;YAC1C,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAEvD,yBAAyB;QACzB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,OAA8B;QACtD,MAAM,gBAAgB,GAAG,uBAAuB,OAAO,CAAC,OAAO;;;cAGrD,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;cACzC,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC,cAAc,EAAE;kBAC5C,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAC3D,OAAO,CAAC,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC;iBAChF,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;;oBAGlD,OAAO,CAAC,SAAS,CAAC,WAAW;uBAC1B,OAAO,CAAC,SAAS,CAAC,cAAc;wBAC/B,OAAO,CAAC,SAAS,CAAC,eAAe;;eAE1C,OAAO,CAAC,QAAQ,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;;EAGvE,OAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAE/E,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,gBAAgB,EAAE;YAChD,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,SAAS,EAAE,oBAAoB;YAC/B,cAAc,EAAE,UAAU;SAC3B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,iBAAiB,CAAC,OAA8B;QACrD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACrD,OAAO,CAAC,UAAU,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAErG,MAAM,OAAO,GAAG,uBAAuB,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,SAAS,MAAM,OAAO,CAAC,UAAU,CAAC,SAAS,IAAI,UAAU,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC;QAEhM,MAAM,YAAY,GAAgB;YAChC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,cAAc,EAAE,UAAU;YAC1B,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,2BAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAEvD,kCAAkC;QAClC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,oBAAoB,CAAC,OAA8B;QACzD,MAAM,gBAAgB,GAAG,0BAA0B,OAAO,CAAC,MAAM;;;EAGnE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,mBAAmB,CAAC;aACnD,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,OAAO,SAAS,KAAK,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACxG,IAAI,CAAC,IAAI,CAAC;;;EAGX,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC;aAC9C,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,OAAO,MAAM,KAAK,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACxG,IAAI,CAAC,IAAI,CAAC;;;eAGE,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;kBAC/E,OAAO,CAAC,QAAQ,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;kBAErF,OAAO,CAAC,SAAS,EAAE,CAAC;QAElC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,gBAAgB,EAAE;YACnD,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,SAAS,EAAE,oBAAoB;YAC/B,cAAc,EAAE,UAAU;SAC3B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,mBAAmB,CAAC,OAAgC;QACzD,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9D,MAAM,OAAO,GAAG,sBAAsB,OAAO,CAAC,YAAY,MAAM,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC;QAE1K,MAAM,YAAY,GAAgB;YAChC,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,cAAc,EAAE,UAAU;YAC1B,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAEzD,kCAAkC;QAClC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACK,oBAAoB,CAAC,OAAgC;QAC3D,MAAM,gBAAgB,GAAG,0BAA0B,OAAO,CAAC,YAAY;;eAE5D,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;;iBAGtE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC;aACrD,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aAC7F,IAAI,CAAC,IAAI,CAAC;iBACE,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;mBAE1C,OAAO,CAAC,SAAS,CAAC,aAAa;;;EAGhD,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;EAG1E,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;EAGvE,OAAO,CAAC,SAAS,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;EAG9E,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAE3H,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,gBAAgB,EAAE;YACnD,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,SAAS,EAAE,iBAAiB;YAC5B,cAAc,EAAE,UAAU;SAC3B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,oBAAoB,CAAC,OAAiC;QAC3D,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,2BAAS,CAAC,OAAO,CAAC,CAAC;YACnD,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,2BAAS,CAAC,OAAO,CAAC,CAAC,CAAC,2BAAS,CAAC,KAAK,CAAC;QAEtF,MAAM,OAAO,GAAG,uBAAuB,OAAO,CAAC,SAAS,MAAM,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QAE7F,MAAM,YAAY,GAAgB;YAChC,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,cAAc,EAAE,UAAU;YAC1B,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CACf,OAAO,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EACxF,WAAW,EACX,OAAO,EACP,YAAY,CACb,CAAC;QAEF,mCAAmC;QACnC,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;QAE5C,4BAA4B;QAC5B,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACK,6BAA6B,CAAC,OAAiC;QACrE,IAAI,cAAc,GAAG,oCAAoC,OAAO,CAAC,SAAS,KAAK,CAAC;QAEhF,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACxB,cAAc,IAAI;aACX,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;mBAC9B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;iBACtD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC;QACrE,CAAC;QAED,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAC3B,cAAc,IAAI;YACZ,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjD,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACnD,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAC1G,CAAC;QAED,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACzB,cAAc,IAAI;YACZ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aAC/C,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,KAAK,EAAE,CAAC;QAC/D,CAAC;QAED,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC5B,cAAc,IAAI;eACT,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;iBACxC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;mBACtD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;mBACvD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACrD,CAAC;QAED,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;YAC7B,cAAc,IAAI;mBACL,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW;kBACrC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;uBACxC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC;QAClF,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,cAAc,EAAE,UAAU;SAC3B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,oBAAoB,CAAC,OAAqB;QAC/C,MAAM,aAAa,GAAG,OAAO,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,2BAAS,CAAC,KAAK,CAAC,CAAC;YACpD,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,2BAAS,CAAC,KAAK,CAAC,CAAC;gBAC/C,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,2BAAS,CAAC,OAAO,CAAC,CAAC,CAAC,2BAAS,CAAC,IAAI,CAAC;QAExF,MAAM,OAAO,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,aAAa,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAE7G,MAAM,YAAY,GAAgB;YAChC,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE;gBACL,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI;gBACxB,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,OAAO;gBAC9B,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK;aAC3B;YACD,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,eAAe,EAAE,OAAO,CAAC,eAAe;YACxC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAEjE,0CAA0C;QAC1C,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QAEtC,sBAAsB;QACtB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACK,uBAAuB,CAAC,OAAqB;QACnD,MAAM,eAAe,GAAG,8BAA8B,OAAO,CAAC,OAAO;;;YAG7D,OAAO,CAAC,SAAS;gBACb,OAAO,CAAC,QAAQ;iBACf,OAAO,CAAC,SAAS;eACnB,OAAO,CAAC,KAAK,CAAC,OAAO;;;iBAGnB,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM;kBACrD,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM;cAC3D,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM;kBAC/C,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM;;;wBAGhD,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;wBAC7C,OAAO,CAAC,MAAM,CAAC,eAAe;uBAC/B,OAAO,CAAC,MAAM,CAAC,cAAc;;;EAGlD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;aAC9B,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,OAAO,GAAG,KAAK,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;aACjG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QAEZ,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;YAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,cAAc,EAAE,cAAc;SAC/B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACI,sBAAsB,CAAC,OAA4B;QACxD,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,2BAAS,CAAC,OAAO,CAAC,CAAC;YACtD,OAAO,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,2BAAS,CAAC,OAAO,CAAC,CAAC;gBACrD,2BAAS,CAAC,KAAK,CAAC;QAEnC,MAAM,OAAO,GAAG,iBAAiB,OAAO,CAAC,UAAU,KAAK,OAAO,CAAC,SAAS,KAAK,OAAO,CAAC,OAAO,CAAC,MAAM,WAAW,CAAC;QAEhH,MAAM,YAAY,GAAgB;YAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,cAAc,EAAE,cAAc;YAC9B,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;SAC3C,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC;YACT,OAAO,EAAE,OAAO,CAAC,QAAQ;YACzB,SAAS,EAAE,sBAAsB;YACjC,KAAK,EAAE,OAAO,CAAC,UAAU;YACzB,QAAQ,EAAE,OAAO,CAAC,SAAS;YAC3B,MAAM,EAAE,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE;YACxC,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,OAAO,CAAC,SAAS;SAC7B,CAAC,CAAC;QAEH,qCAAqC;QACrC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED;;OAEG;IACK,uBAAuB,CAAC,OAA4B;QAC1D,MAAM,aAAa,GAAG,oCAAoC,OAAO,CAAC,QAAQ;;;iBAG7D,OAAO,CAAC,SAAS;YACtB,OAAO,CAAC,UAAU;mBACX,OAAO,CAAC,UAAU;cACvB,OAAO,CAAC,MAAM;;;EAG1B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAC7B,OAAO,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAC/F,CAAC,IAAI,CAAC,IAAI,CAAC;;;wBAGY,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;kBACnD,OAAO,CAAC,MAAM,CAAC,SAAS;2BACf,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC;QAEhF,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,cAAc,EAAE,cAAc;SAC/B,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,aAAa,CAAC,KAAa;QACjC,QAAQ,KAAK,EAAE,CAAC;YACd,KAAK,SAAS,CAAC,CAAC,OAAO,2BAAS,CAAC,IAAI,CAAC;YACtC,KAAK,SAAS,CAAC,CAAC,OAAO,2BAAS,CAAC,IAAI,CAAC;YACtC,KAAK,SAAS,CAAC,CAAC,OAAO,2BAAS,CAAC,OAAO,CAAC;YACzC,OAAO,CAAC,CAAC,OAAO,2BAAS,CAAC,IAAI,CAAC;QACjC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,QAAgB;QACvC,QAAQ,QAAQ,EAAE,CAAC;YACjB,KAAK,KAAK,CAAC,CAAC,OAAO,2BAAS,CAAC,GAAG,CAAC;YACjC,KAAK,MAAM,CAAC,CAAC,OAAO,2BAAS,CAAC,IAAI,CAAC;YACnC,KAAK,MAAM,CAAC,CAAC,OAAO,2BAAS,CAAC,OAAO,CAAC;YACtC,KAAK,MAAM,CAAC,CAAC,OAAO,2BAAS,CAAC,IAAI,CAAC;YACnC,OAAO,CAAC,CAAC,OAAO,2BAAS,CAAC,IAAI,CAAC;QACjC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,uBAAuB,CAAC,OAAiC;QAC/D,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;QACrD,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEvD,wCAAwC;QACxC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAEzB,6BAA6B;QAC7B,IAAI,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC;YACzB,OAAO,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED;;OAEG;IACK,iBAAiB,CAAC,OAAqB;QAC7C,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEjD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEtB,2BAA2B;QAC3B,IAAI,OAAO,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YACxB,OAAO,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC;QAED,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACI,oBAAoB;QACzB,OAAO,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACI,gBAAgB;QACrB,OAAO,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,2BAA2B;QAOtC,OAAO;YACL,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE;YAC9C,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE;YACtC,YAAY,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE;YAC1C,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE;SAC5C,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,eAAe;QAC3B,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,YAAE,CAAC,IAAI,EAAE,CAAC;YAC1B,MAAM,OAAO,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;YACtC,MAAM,OAAO,GAAG,YAAE,CAAC,OAAO,EAAE,CAAC;YAE7B,OAAO;gBACL,GAAG,EAAE;oBACH,KAAK,EAAE,OAAO,CAAC,MAAM;oBACrB,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,SAAS;oBACrC,WAAW,EAAE,OAAO;iBACrB;gBACD,MAAM,EAAE;oBACN,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,SAAS,EAAE,OAAO,CAAC,SAAS;oBAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ;oBAC1B,QAAQ,EAAE,OAAO,CAAC,QAAQ;iBAC3B;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,YAAE,CAAC,QAAQ,EAAE;oBACvB,IAAI,EAAE,YAAE,CAAC,IAAI,EAAE;oBACf,MAAM,EAAE,YAAE,CAAC,MAAM,EAAE;oBACnB,QAAQ,EAAE,YAAE,CAAC,QAAQ,EAAE;iBACxB;aACF,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,EAAE,KAAK,EAAE,sCAAsC,EAAE,CAAC;QAC3D,CAAC;IACH,CAAC;CACF;AAthBD,sCAshBC;AAED,uCAAuC;AAC1B,QAAA,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\trading-logger.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * COMPREHENSIVE TRADING AND SYSTEM LOGGER\r\n * =============================================================================\r\n * \r\n * This module provides detailed logging for all trading operations, market\r\n * analysis, strategy decisions, and system performance with rich context\r\n * and AI-powered explanations.\r\n * \r\n * Features:\r\n * - Detailed trade execution logging with reasoning\r\n * - Market analysis and sentiment logging\r\n * - Strategy decision logs with AI explanations\r\n * - Performance metrics with Intel NUC monitoring\r\n * - Error and exception logging with recovery actions\r\n * - Audit trail for configuration changes\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport { EnhancedLogger, LogEmojis } from './enhanced-logger';\r\nimport { LogMetadata } from './logger';\r\nimport os from 'os';\r\nimport { performance } from 'perf_hooks';\r\nimport { execSync } from 'child_process';\r\n\r\n/**\r\n * Trade execution context interface\r\n */\r\ninterface TradeExecutionContext {\r\n  tradeId: string;\r\n  symbol: string;\r\n  side: 'buy' | 'sell';\r\n  amount: number;\r\n  price?: number;\r\n  orderType: 'market' | 'limit' | 'stop';\r\n  strategy: string;\r\n  confidence: number;\r\n  marketConditions: {\r\n    price: number;\r\n    volume: number;\r\n    volatility: number;\r\n    trend: 'bullish' | 'bearish' | 'neutral';\r\n    sentiment: number;\r\n  };\r\n  reasoning: {\r\n    entryReason: string;\r\n    exitReason?: string;\r\n    riskAssessment: string;\r\n    expectedOutcome: string;\r\n    alternativeActions: string[];\r\n  };\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Market analysis context interface\r\n */\r\ninterface MarketAnalysisContext {\r\n  symbol: string;\r\n  timeframe: string;\r\n  analysis: {\r\n    technicalIndicators: Record<string, number>;\r\n    sentimentScore: number;\r\n    volumeAnalysis: Record<string, number>;\r\n    priceAction: Record<string, any>;\r\n    supportResistance: {\r\n      support: number[];\r\n      resistance: number[];\r\n    };\r\n  };\r\n  prediction: {\r\n    direction: 'up' | 'down' | 'sideways';\r\n    confidence: number;\r\n    timeHorizon: string;\r\n    targetPrice?: number;\r\n    stopLoss?: number;\r\n  };\r\n  reasoning: string;\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Strategy decision context interface\r\n */\r\ninterface StrategyDecisionContext {\r\n  strategyName: string;\r\n  symbol: string;\r\n  decision: 'buy' | 'sell' | 'hold' | 'exit';\r\n  confidence: number;\r\n  parameters: Record<string, any>;\r\n  signals: {\r\n    technical: Record<string, number>;\r\n    fundamental: Record<string, any>;\r\n    sentiment: number;\r\n  };\r\n  reasoning: {\r\n    primaryFactors: string[];\r\n    riskFactors: string[];\r\n    opportunityFactors: string[];\r\n    aiExplanation: string;\r\n    confidenceFactors: string[];\r\n  };\r\n  alternatives: {\r\n    action: string;\r\n    probability: number;\r\n    reasoning: string;\r\n  }[];\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * System performance context interface\r\n */\r\ninterface SystemPerformanceContext {\r\n  component: 'intel_nuc' | 'network' | 'database' | 'api' | 'application';\r\n  metrics: {\r\n    cpu?: {\r\n      usage: number;\r\n      temperature?: number;\r\n      frequency?: number;\r\n    };\r\n    memory?: {\r\n      used: number;\r\n      total: number;\r\n      percentage: number;\r\n      swap?: number;\r\n    };\r\n    disk?: {\r\n      used: number;\r\n      total: number;\r\n      percentage: number;\r\n      iops?: number;\r\n    };\r\n    network?: {\r\n      latency: number;\r\n      bandwidth: number;\r\n      packetLoss?: number;\r\n      connections: number;\r\n    };\r\n    database?: {\r\n      connections: number;\r\n      queryTime: number;\r\n      cacheHitRatio?: number;\r\n    };\r\n  };\r\n  thresholds: {\r\n    warning: Record<string, number>;\r\n    critical: Record<string, number>;\r\n  };\r\n  status: 'healthy' | 'warning' | 'critical';\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Error context interface with recovery actions\r\n */\r\ninterface ErrorContext {\r\n  errorId: string;\r\n  component: string;\r\n  errorType: 'trading' | 'system' | 'network' | 'database' | 'api';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  error: Error;\r\n  context: Record<string, any>;\r\n  recoveryActions: {\r\n    attempted: string[];\r\n    successful: string[];\r\n    failed: string[];\r\n    nextSteps: string[];\r\n  };\r\n  impact: {\r\n    tradingAffected: boolean;\r\n    systemStability: 'stable' | 'degraded' | 'unstable';\r\n    userExperience: 'normal' | 'degraded' | 'unavailable';\r\n  };\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Configuration change audit context\r\n */\r\ninterface ConfigChangeContext {\r\n  changeId: string;\r\n  component: string;\r\n  changeType: 'create' | 'update' | 'delete';\r\n  changes: {\r\n    field: string;\r\n    oldValue: any;\r\n    newValue: any;\r\n  }[];\r\n  reason: string;\r\n  approvedBy: string;\r\n  impact: {\r\n    requiresRestart: boolean;\r\n    affectedComponents: string[];\r\n    riskLevel: 'low' | 'medium' | 'high';\r\n  };\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Comprehensive trading and system logger\r\n */\r\nexport class TradingLogger extends EnhancedLogger {\r\n  private tradeSequence: number = 0;\r\n  private performanceHistory: Map<string, number[]> = new Map();\r\n  private errorHistory: Map<string, ErrorContext[]> = new Map();\r\n\r\n  constructor(componentName?: string) {\r\n    super(componentName || 'TradingLogger');\r\n  }\r\n\r\n  /**\r\n   * Log detailed trade execution with reasoning\r\n   */\r\n  public logTradeExecution(context: TradeExecutionContext): void {\r\n    this.tradeSequence++;\r\n    \r\n    const emoji = context.side === 'buy' ? LogEmojis.BUY : LogEmojis.SELL;\r\n    const message = `Trade execution: ${context.side.toUpperCase()} ${context.amount} ${context.symbol} @ $${context.price?.toFixed(4) || 'MARKET'}`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      tradeId: context.tradeId,\r\n      sequence: this.tradeSequence,\r\n      symbol: context.symbol,\r\n      side: context.side,\r\n      amount: context.amount,\r\n      price: context.price,\r\n      orderType: context.orderType,\r\n      strategy: context.strategy,\r\n      confidence: context.confidence,\r\n      marketConditions: context.marketConditions,\r\n      reasoning: context.reasoning,\r\n      classification: 'CONFIDENTIAL',\r\n      timestamp: context.timestamp.toISOString()\r\n    };\r\n\r\n    this.logWithEmoji('info', emoji, message, enrichedMeta);\r\n    this.trading('trade_execution', message, enrichedMeta);\r\n\r\n    // Log detailed reasoning\r\n    this.logTradeReasoning(context);\r\n  }\r\n\r\n  /**\r\n   * Log trade reasoning and AI explanation\r\n   */\r\n  private logTradeReasoning(context: TradeExecutionContext): void {\r\n    const reasoningMessage = `Trade reasoning for ${context.tradeId}:\r\n    \r\n\uD83D\uDCCA Market Conditions:\r\n  \u2022 Price: $${context.marketConditions.price.toFixed(4)}\r\n  \u2022 Volume: ${context.marketConditions.volume.toLocaleString()}\r\n  \u2022 Volatility: ${(context.marketConditions.volatility * 100).toFixed(2)}%\r\n  \u2022 Trend: ${context.marketConditions.trend} ${this.getTrendEmoji(context.marketConditions.trend)}\r\n  \u2022 Sentiment: ${(context.marketConditions.sentiment * 100).toFixed(1)}%\r\n\r\n\uD83E\uDDE0 AI Reasoning:\r\n  \u2022 Entry Reason: ${context.reasoning.entryReason}\r\n  \u2022 Risk Assessment: ${context.reasoning.riskAssessment}\r\n  \u2022 Expected Outcome: ${context.reasoning.expectedOutcome}\r\n  \r\n\uD83C\uDFAF Strategy: ${context.strategy} (${(context.confidence * 100).toFixed(1)}% confidence)\r\n\r\n\uD83D\uDD04 Alternative Actions Considered:\r\n${context.reasoning.alternativeActions.map(action => `  \u2022 ${action}`).join('\\n')}`;\r\n\r\n    this.trading('trade_reasoning', reasoningMessage, {\r\n      tradeId: context.tradeId,\r\n      component: 'ai_decision_engine',\r\n      classification: 'INTERNAL'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log market analysis with sentiment and predictions\r\n   */\r\n  public logMarketAnalysis(context: MarketAnalysisContext): void {\r\n    const trendEmoji = this.getTrendEmoji(context.prediction.direction === 'up' ? 'bullish' : \r\n                                        context.prediction.direction === 'down' ? 'bearish' : 'neutral');\r\n    \r\n    const message = `Market analysis for ${context.symbol} (${context.timeframe}): ${context.prediction.direction} ${trendEmoji} (${(context.prediction.confidence * 100).toFixed(1)}% confidence)`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      symbol: context.symbol,\r\n      timeframe: context.timeframe,\r\n      analysis: context.analysis,\r\n      prediction: context.prediction,\r\n      reasoning: context.reasoning,\r\n      classification: 'INTERNAL',\r\n      timestamp: context.timestamp.toISOString()\r\n    };\r\n\r\n    this.logWithEmoji('info', LogEmojis.TREND_UP, message, enrichedMeta);\r\n    this.trading('market_analysis', message, enrichedMeta);\r\n\r\n    // Log detailed technical analysis\r\n    this.logTechnicalAnalysis(context);\r\n  }\r\n\r\n  /**\r\n   * Log detailed technical analysis\r\n   */\r\n  private logTechnicalAnalysis(context: MarketAnalysisContext): void {\r\n    const technicalMessage = `Technical analysis for ${context.symbol}:\r\n\r\n\uD83D\uDCC8 Technical Indicators:\r\n${Object.entries(context.analysis.technicalIndicators)\r\n  .map(([indicator, value]) => `  \u2022 ${indicator}: ${typeof value === 'number' ? value.toFixed(4) : value}`)\r\n  .join('\\n')}\r\n\r\n\uD83D\uDCCA Volume Analysis:\r\n${Object.entries(context.analysis.volumeAnalysis)\r\n  .map(([metric, value]) => `  \u2022 ${metric}: ${typeof value === 'number' ? value.toLocaleString() : value}`)\r\n  .join('\\n')}\r\n\r\n\uD83C\uDFAF Support/Resistance Levels:\r\n  \u2022 Support: ${context.analysis.supportResistance.support.map(s => `$${s.toFixed(4)}`).join(', ')}\r\n  \u2022 Resistance: ${context.analysis.supportResistance.resistance.map(r => `$${r.toFixed(4)}`).join(', ')}\r\n\r\n\uD83E\uDDE0 AI Analysis: ${context.reasoning}`;\r\n\r\n    this.trading('technical_analysis', technicalMessage, {\r\n      symbol: context.symbol,\r\n      component: 'technical_analyzer',\r\n      classification: 'INTERNAL'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log strategy decisions with AI explanations\r\n   */\r\n  public logStrategyDecision(context: StrategyDecisionContext): void {\r\n    const decisionEmoji = this.getDecisionEmoji(context.decision);\r\n    const message = `Strategy decision: ${context.strategyName} \u2192 ${context.decision.toUpperCase()} ${context.symbol} (${(context.confidence * 100).toFixed(1)}% confidence)`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      strategyName: context.strategyName,\r\n      symbol: context.symbol,\r\n      decision: context.decision,\r\n      confidence: context.confidence,\r\n      parameters: context.parameters,\r\n      signals: context.signals,\r\n      reasoning: context.reasoning,\r\n      alternatives: context.alternatives,\r\n      classification: 'INTERNAL',\r\n      timestamp: context.timestamp.toISOString()\r\n    };\r\n\r\n    this.logWithEmoji('info', decisionEmoji, message, enrichedMeta);\r\n    this.trading('strategy_decision', message, enrichedMeta);\r\n\r\n    // Log detailed strategy reasoning\r\n    this.logStrategyReasoning(context);\r\n  }\r\n\r\n  /**\r\n   * Log detailed strategy reasoning\r\n   */\r\n  private logStrategyReasoning(context: StrategyDecisionContext): void {\r\n    const reasoningMessage = `Strategy reasoning for ${context.strategyName}:\r\n\r\n\uD83C\uDFAF Decision: ${context.decision.toUpperCase()} (${(context.confidence * 100).toFixed(1)}% confidence)\r\n\r\n\uD83D\uDCCA Signals:\r\n  \u2022 Technical: ${Object.entries(context.signals.technical)\r\n    .map(([signal, value]) => `${signal}=${typeof value === 'number' ? value.toFixed(4) : value}`)\r\n    .join(', ')}\r\n  \u2022 Sentiment: ${(context.signals.sentiment * 100).toFixed(1)}%\r\n\r\n\uD83E\uDDE0 AI Reasoning: ${context.reasoning.aiExplanation}\r\n\r\n\u2705 Primary Factors:\r\n${context.reasoning.primaryFactors.map(factor => `  \u2022 ${factor}`).join('\\n')}\r\n\r\n\u26A0\uFE0F Risk Factors:\r\n${context.reasoning.riskFactors.map(factor => `  \u2022 ${factor}`).join('\\n')}\r\n\r\n\uD83D\uDE80 Opportunity Factors:\r\n${context.reasoning.opportunityFactors.map(factor => `  \u2022 ${factor}`).join('\\n')}\r\n\r\n\uD83C\uDFB2 Alternative Actions:\r\n${context.alternatives.map(alt => `  \u2022 ${alt.action} (${(alt.probability * 100).toFixed(1)}%): ${alt.reasoning}`).join('\\n')}`;\r\n\r\n    this.trading('strategy_reasoning', reasoningMessage, {\r\n      strategyName: context.strategyName,\r\n      symbol: context.symbol,\r\n      component: 'strategy_engine',\r\n      classification: 'INTERNAL'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log Intel NUC and system performance metrics\r\n   */\r\n  public logSystemPerformance(context: SystemPerformanceContext): void {\r\n    const statusEmoji = context.status === 'healthy' ? LogEmojis.SUCCESS :\r\n                       context.status === 'warning' ? LogEmojis.WARNING : LogEmojis.ERROR;\r\n    \r\n    const message = `System performance: ${context.component} - ${context.status.toUpperCase()}`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      component: context.component,\r\n      metrics: context.metrics,\r\n      thresholds: context.thresholds,\r\n      status: context.status,\r\n      classification: 'INTERNAL',\r\n      timestamp: context.timestamp.toISOString()\r\n    };\r\n\r\n    this.logWithEmoji(\r\n      context.status === 'critical' ? 'error' : context.status === 'warning' ? 'warn' : 'info',\r\n      statusEmoji,\r\n      message,\r\n      enrichedMeta\r\n    );\r\n\r\n    // Log detailed performance metrics\r\n    this.logDetailedPerformanceMetrics(context);\r\n    \r\n    // Store performance history\r\n    this.storePerformanceHistory(context);\r\n  }\r\n\r\n  /**\r\n   * Log detailed performance metrics\r\n   */\r\n  private logDetailedPerformanceMetrics(context: SystemPerformanceContext): void {\r\n    let metricsMessage = `Detailed performance metrics for ${context.component}:\\n`;\r\n\r\n    if (context.metrics.cpu) {\r\n      metricsMessage += `\\n\u2699\uFE0F CPU Metrics:\r\n  \u2022 Usage: ${context.metrics.cpu.usage.toFixed(1)}%\r\n  \u2022 Temperature: ${context.metrics.cpu.temperature?.toFixed(1) || 'N/A'}\xB0C\r\n  \u2022 Frequency: ${context.metrics.cpu.frequency?.toFixed(0) || 'N/A'}MHz`;\r\n    }\r\n\r\n    if (context.metrics.memory) {\r\n      metricsMessage += `\\n\uD83E\uDDE0 Memory Metrics:\r\n  \u2022 Used: ${(context.metrics.memory.used / 1024**3).toFixed(2)}GB\r\n  \u2022 Total: ${(context.metrics.memory.total / 1024**3).toFixed(2)}GB\r\n  \u2022 Usage: ${context.metrics.memory.percentage.toFixed(1)}%\r\n  \u2022 Swap: ${context.metrics.memory.swap ? (context.metrics.memory.swap / 1024**3).toFixed(2) + 'GB' : 'N/A'}`;\r\n    }\r\n\r\n    if (context.metrics.disk) {\r\n      metricsMessage += `\\n\uD83D\uDCBD Disk Metrics:\r\n  \u2022 Used: ${(context.metrics.disk.used / 1024**3).toFixed(2)}GB\r\n  \u2022 Total: ${(context.metrics.disk.total / 1024**3).toFixed(2)}GB\r\n  \u2022 Usage: ${context.metrics.disk.percentage.toFixed(1)}%\r\n  \u2022 IOPS: ${context.metrics.disk.iops?.toLocaleString() || 'N/A'}`;\r\n    }\r\n\r\n    if (context.metrics.network) {\r\n      metricsMessage += `\\n\uD83C\uDF10 Network Metrics:\r\n  \u2022 Latency: ${context.metrics.network.latency.toFixed(1)}ms\r\n  \u2022 Bandwidth: ${(context.metrics.network.bandwidth / 1024**2).toFixed(2)}MB/s\r\n  \u2022 Packet Loss: ${context.metrics.network.packetLoss?.toFixed(2) || 'N/A'}%\r\n  \u2022 Connections: ${context.metrics.network.connections}`;\r\n    }\r\n\r\n    if (context.metrics.database) {\r\n      metricsMessage += `\\n\uD83D\uDDC4\uFE0F Database Metrics:\r\n  \u2022 Connections: ${context.metrics.database.connections}\r\n  \u2022 Query Time: ${context.metrics.database.queryTime.toFixed(2)}ms\r\n  \u2022 Cache Hit Ratio: ${context.metrics.database.cacheHitRatio?.toFixed(1) || 'N/A'}%`;\r\n    }\r\n\r\n    this.info(metricsMessage, {\r\n      component: context.component,\r\n      classification: 'INTERNAL'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log errors with comprehensive context and recovery actions\r\n   */\r\n  public logErrorWithRecovery(context: ErrorContext): void {\r\n    const severityEmoji = context.severity === 'critical' ? LogEmojis.ERROR :\r\n                         context.severity === 'high' ? LogEmojis.ALERT :\r\n                         context.severity === 'medium' ? LogEmojis.WARNING : LogEmojis.INFO;\r\n    \r\n    const message = `${context.errorType.toUpperCase()} error in ${context.component}: ${context.error.message}`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      errorId: context.errorId,\r\n      component: context.component,\r\n      errorType: context.errorType,\r\n      severity: context.severity,\r\n      error: {\r\n        name: context.error.name,\r\n        message: context.error.message,\r\n        stack: context.error.stack\r\n      },\r\n      context: context.context,\r\n      recoveryActions: context.recoveryActions,\r\n      impact: context.impact,\r\n      classification: 'CONFIDENTIAL',\r\n      timestamp: context.timestamp.toISOString()\r\n    };\r\n\r\n    this.logWithEmoji('error', severityEmoji, message, enrichedMeta);\r\n    \r\n    // Log detailed error context and recovery\r\n    this.logErrorRecoveryDetails(context);\r\n    \r\n    // Store error history\r\n    this.storeErrorHistory(context);\r\n  }\r\n\r\n  /**\r\n   * Log detailed error recovery information\r\n   */\r\n  private logErrorRecoveryDetails(context: ErrorContext): void {\r\n    const recoveryMessage = `Error recovery details for ${context.errorId}:\r\n\r\n\u274C Error Details:\r\n  \u2022 Type: ${context.errorType}\r\n  \u2022 Severity: ${context.severity}\r\n  \u2022 Component: ${context.component}\r\n  \u2022 Message: ${context.error.message}\r\n\r\n\uD83D\uDD27 Recovery Actions:\r\n  \u2022 Attempted: ${context.recoveryActions.attempted.join(', ') || 'None'}\r\n  \u2022 Successful: ${context.recoveryActions.successful.join(', ') || 'None'}\r\n  \u2022 Failed: ${context.recoveryActions.failed.join(', ') || 'None'}\r\n  \u2022 Next Steps: ${context.recoveryActions.nextSteps.join(', ') || 'None'}\r\n\r\n\uD83D\uDCCA Impact Assessment:\r\n  \u2022 Trading Affected: ${context.impact.tradingAffected ? 'Yes' : 'No'}\r\n  \u2022 System Stability: ${context.impact.systemStability}\r\n  \u2022 User Experience: ${context.impact.userExperience}\r\n\r\n\uD83D\uDD0D Context:\r\n${Object.entries(context.context)\r\n  .map(([key, value]) => `  \u2022 ${key}: ${typeof value === 'object' ? JSON.stringify(value) : value}`)\r\n  .join('\\n')}`;\r\n\r\n    this.error(recoveryMessage, {\r\n      errorId: context.errorId,\r\n      component: context.component,\r\n      classification: 'CONFIDENTIAL'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log configuration changes with audit trail\r\n   */\r\n  public logConfigurationChange(context: ConfigChangeContext): void {\r\n    const changeEmoji = context.changeType === 'create' ? LogEmojis.SUCCESS :\r\n                       context.changeType === 'update' ? LogEmojis.RESTART :\r\n                       LogEmojis.ERROR;\r\n    \r\n    const message = `Configuration ${context.changeType}: ${context.component} (${context.changes.length} changes)`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      changeId: context.changeId,\r\n      component: context.component,\r\n      changeType: context.changeType,\r\n      changes: context.changes,\r\n      reason: context.reason,\r\n      approvedBy: context.approvedBy,\r\n      impact: context.impact,\r\n      classification: 'CONFIDENTIAL',\r\n      timestamp: context.timestamp.toISOString()\r\n    };\r\n\r\n    this.logWithEmoji('info', changeEmoji, message, enrichedMeta);\r\n    this.audit({\r\n      auditId: context.changeId,\r\n      eventType: 'CONFIGURATION_CHANGE',\r\n      actor: context.approvedBy,\r\n      resource: context.component,\r\n      action: context.changeType.toUpperCase(),\r\n      result: 'SUCCESS',\r\n      auditData: enrichedMeta,\r\n      timestamp: context.timestamp\r\n    });\r\n\r\n    // Log detailed configuration changes\r\n    this.logConfigurationDetails(context);\r\n  }\r\n\r\n  /**\r\n   * Log detailed configuration change information\r\n   */\r\n  private logConfigurationDetails(context: ConfigChangeContext): void {\r\n    const configMessage = `Configuration change details for ${context.changeId}:\r\n\r\n\uD83D\uDD27 Change Summary:\r\n  \u2022 Component: ${context.component}\r\n  \u2022 Type: ${context.changeType}\r\n  \u2022 Approved By: ${context.approvedBy}\r\n  \u2022 Reason: ${context.reason}\r\n\r\n\uD83D\uDCDD Changes Made:\r\n${context.changes.map(change => \r\n  `  \u2022 ${change.field}: ${JSON.stringify(change.oldValue)} \u2192 ${JSON.stringify(change.newValue)}`\r\n).join('\\n')}\r\n\r\n\u26A0\uFE0F Impact Assessment:\r\n  \u2022 Requires Restart: ${context.impact.requiresRestart ? 'Yes' : 'No'}\r\n  \u2022 Risk Level: ${context.impact.riskLevel}\r\n  \u2022 Affected Components: ${context.impact.affectedComponents.join(', ') || 'None'}`;\r\n\r\n    this.info(configMessage, {\r\n      changeId: context.changeId,\r\n      component: context.component,\r\n      classification: 'CONFIDENTIAL'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get trend emoji based on direction\r\n   */\r\n  private getTrendEmoji(trend: string): string {\r\n    switch (trend) {\r\n      case 'bullish': return LogEmojis.BULL;\r\n      case 'bearish': return LogEmojis.BEAR;\r\n      case 'neutral': return LogEmojis.BALANCE;\r\n      default: return LogEmojis.INFO;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get decision emoji based on action\r\n   */\r\n  private getDecisionEmoji(decision: string): string {\r\n    switch (decision) {\r\n      case 'buy': return LogEmojis.BUY;\r\n      case 'sell': return LogEmojis.SELL;\r\n      case 'hold': return LogEmojis.BALANCE;\r\n      case 'exit': return LogEmojis.STOP;\r\n      default: return LogEmojis.INFO;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store performance history for trend analysis\r\n   */\r\n  private storePerformanceHistory(context: SystemPerformanceContext): void {\r\n    const key = `${context.component}_${context.status}`;\r\n    const history = this.performanceHistory.get(key) || [];\r\n    \r\n    // Store timestamp as performance metric\r\n    history.push(Date.now());\r\n    \r\n    // Keep only last 100 entries\r\n    if (history.length > 100) {\r\n      history.shift();\r\n    }\r\n    \r\n    this.performanceHistory.set(key, history);\r\n  }\r\n\r\n  /**\r\n   * Store error history for pattern analysis\r\n   */\r\n  private storeErrorHistory(context: ErrorContext): void {\r\n    const key = `${context.component}_${context.errorType}`;\r\n    const history = this.errorHistory.get(key) || [];\r\n    \r\n    history.push(context);\r\n    \r\n    // Keep only last 50 errors\r\n    if (history.length > 50) {\r\n      history.shift();\r\n    }\r\n    \r\n    this.errorHistory.set(key, history);\r\n  }\r\n\r\n  /**\r\n   * Get performance trends\r\n   */\r\n  public getPerformanceTrends(): Record<string, number[]> {\r\n    return Object.fromEntries(this.performanceHistory);\r\n  }\r\n\r\n  /**\r\n   * Get error patterns\r\n   */\r\n  public getErrorPatterns(): Record<string, ErrorContext[]> {\r\n    return Object.fromEntries(this.errorHistory);\r\n  }\r\n\r\n  /**\r\n   * Generate comprehensive system report\r\n   */\r\n  public async generateComprehensiveReport(): Promise<{\r\n    timestamp: string;\r\n    performanceTrends: Record<string, number[]>;\r\n    errorPatterns: Record<string, ErrorContext[]>;\r\n    systemHealth: any;\r\n    tradingMetrics: any;\r\n  }> {\r\n    return {\r\n      timestamp: new Date().toISOString(),\r\n      performanceTrends: this.getPerformanceTrends(),\r\n      errorPatterns: this.getErrorPatterns(),\r\n      systemHealth: await this.getSystemHealth(),\r\n      tradingMetrics: this.getOperationCounters()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get current system health\r\n   */\r\n  private async getSystemHealth(): Promise<any> {\r\n    try {\r\n      const cpuInfo = os.cpus();\r\n      const memInfo = process.memoryUsage();\r\n      const loadAvg = os.loadavg();\r\n      \r\n      return {\r\n        cpu: {\r\n          cores: cpuInfo.length,\r\n          model: cpuInfo[0]?.model || 'Unknown',\r\n          loadAverage: loadAvg\r\n        },\r\n        memory: {\r\n          rss: memInfo.rss,\r\n          heapTotal: memInfo.heapTotal,\r\n          heapUsed: memInfo.heapUsed,\r\n          external: memInfo.external\r\n        },\r\n        system: {\r\n          platform: os.platform(),\r\n          arch: os.arch(),\r\n          uptime: os.uptime(),\r\n          hostname: os.hostname()\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return { error: 'Failed to collect system health data' };\r\n    }\r\n  }\r\n}\r\n\r\n// Create and export singleton instance\r\nexport const tradingLogger = new TradingLogger();\r\n\r\n// Export types and interfaces\r\nexport type {\r\n  TradeExecutionContext,\r\n  MarketAnalysisContext,\r\n  StrategyDecisionContext,\r\n  SystemPerformanceContext,\r\n  ErrorContext,\r\n  ConfigChangeContext\r\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cd27efdf3291d8bf9d75864a820bc2b5386dc7ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1y4nxhcc34 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1y4nxhcc34();
var __importDefault =
/* istanbul ignore next */
(cov_1y4nxhcc34().s[0]++,
/* istanbul ignore next */
(cov_1y4nxhcc34().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1y4nxhcc34().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1y4nxhcc34().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1y4nxhcc34().f[0]++;
  cov_1y4nxhcc34().s[1]++;
  return /* istanbul ignore next */(cov_1y4nxhcc34().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1y4nxhcc34().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1y4nxhcc34().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1y4nxhcc34().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1y4nxhcc34().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1y4nxhcc34().s[3]++;
exports.tradingLogger = exports.TradingLogger = void 0;
const enhanced_logger_1 =
/* istanbul ignore next */
(cov_1y4nxhcc34().s[4]++, require("./enhanced-logger"));
const os_1 =
/* istanbul ignore next */
(cov_1y4nxhcc34().s[5]++, __importDefault(require("os")));
/**
 * Comprehensive trading and system logger
 */
class TradingLogger extends
/* istanbul ignore next */
(enhanced_logger_1.EnhancedLogger) {
  tradeSequence =
  /* istanbul ignore next */
  (cov_1y4nxhcc34().s[6]++, 0);
  performanceHistory =
  /* istanbul ignore next */
  (cov_1y4nxhcc34().s[7]++, new Map());
  errorHistory =
  /* istanbul ignore next */
  (cov_1y4nxhcc34().s[8]++, new Map());
  constructor(componentName) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[1]++;
    cov_1y4nxhcc34().s[9]++;
    super(
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[3][0]++, componentName) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[3][1]++, 'TradingLogger'));
  }
  /**
   * Log detailed trade execution with reasoning
   */
  logTradeExecution(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[2]++;
    cov_1y4nxhcc34().s[10]++;
    this.tradeSequence++;
    const emoji =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[11]++, context.side === 'buy' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[4][0]++, enhanced_logger_1.LogEmojis.BUY) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[4][1]++, enhanced_logger_1.LogEmojis.SELL));
    const message =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[12]++, `Trade execution: ${context.side.toUpperCase()} ${context.amount} ${context.symbol} @ $${
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[5][0]++, context.price?.toFixed(4)) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[5][1]++, 'MARKET')}`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[13]++, {
      tradeId: context.tradeId,
      sequence: this.tradeSequence,
      symbol: context.symbol,
      side: context.side,
      amount: context.amount,
      price: context.price,
      orderType: context.orderType,
      strategy: context.strategy,
      confidence: context.confidence,
      marketConditions: context.marketConditions,
      reasoning: context.reasoning,
      classification: 'CONFIDENTIAL',
      timestamp: context.timestamp.toISOString()
    });
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[14]++;
    this.logWithEmoji('info', emoji, message, enrichedMeta);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[15]++;
    this.trading('trade_execution', message, enrichedMeta);
    // Log detailed reasoning
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[16]++;
    this.logTradeReasoning(context);
  }
  /**
   * Log trade reasoning and AI explanation
   */
  logTradeReasoning(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[3]++;
    const reasoningMessage =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[17]++, `Trade reasoning for ${context.tradeId}:
    
📊 Market Conditions:
  • Price: $${context.marketConditions.price.toFixed(4)}
  • Volume: ${context.marketConditions.volume.toLocaleString()}
  • Volatility: ${(context.marketConditions.volatility * 100).toFixed(2)}%
  • Trend: ${context.marketConditions.trend} ${this.getTrendEmoji(context.marketConditions.trend)}
  • Sentiment: ${(context.marketConditions.sentiment * 100).toFixed(1)}%

🧠 AI Reasoning:
  • Entry Reason: ${context.reasoning.entryReason}
  • Risk Assessment: ${context.reasoning.riskAssessment}
  • Expected Outcome: ${context.reasoning.expectedOutcome}
  
🎯 Strategy: ${context.strategy} (${(context.confidence * 100).toFixed(1)}% confidence)

🔄 Alternative Actions Considered:
${context.reasoning.alternativeActions.map(action => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[4]++;
      cov_1y4nxhcc34().s[18]++;
      return `  • ${action}`;
    }).join('\n')}`);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[19]++;
    this.trading('trade_reasoning', reasoningMessage, {
      tradeId: context.tradeId,
      component: 'ai_decision_engine',
      classification: 'INTERNAL'
    });
  }
  /**
   * Log market analysis with sentiment and predictions
   */
  logMarketAnalysis(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[5]++;
    const trendEmoji =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[20]++, this.getTrendEmoji(context.prediction.direction === 'up' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[6][0]++, 'bullish') :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[6][1]++, context.prediction.direction === 'down' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[7][0]++, 'bearish') :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[7][1]++, 'neutral'))));
    const message =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[21]++, `Market analysis for ${context.symbol} (${context.timeframe}): ${context.prediction.direction} ${trendEmoji} (${(context.prediction.confidence * 100).toFixed(1)}% confidence)`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[22]++, {
      symbol: context.symbol,
      timeframe: context.timeframe,
      analysis: context.analysis,
      prediction: context.prediction,
      reasoning: context.reasoning,
      classification: 'INTERNAL',
      timestamp: context.timestamp.toISOString()
    });
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[23]++;
    this.logWithEmoji('info', enhanced_logger_1.LogEmojis.TREND_UP, message, enrichedMeta);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[24]++;
    this.trading('market_analysis', message, enrichedMeta);
    // Log detailed technical analysis
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[25]++;
    this.logTechnicalAnalysis(context);
  }
  /**
   * Log detailed technical analysis
   */
  logTechnicalAnalysis(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[6]++;
    const technicalMessage =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[26]++, `Technical analysis for ${context.symbol}:

📈 Technical Indicators:
${Object.entries(context.analysis.technicalIndicators).map(([indicator, value]) => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[7]++;
      cov_1y4nxhcc34().s[27]++;
      return `  • ${indicator}: ${typeof value === 'number' ?
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[8][0]++, value.toFixed(4)) :
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[8][1]++, value)}`;
    }).join('\n')}

📊 Volume Analysis:
${Object.entries(context.analysis.volumeAnalysis).map(([metric, value]) => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[8]++;
      cov_1y4nxhcc34().s[28]++;
      return `  • ${metric}: ${typeof value === 'number' ?
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[9][0]++, value.toLocaleString()) :
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[9][1]++, value)}`;
    }).join('\n')}

🎯 Support/Resistance Levels:
  • Support: ${context.analysis.supportResistance.support.map(s => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[9]++;
      cov_1y4nxhcc34().s[29]++;
      return `$${s.toFixed(4)}`;
    }).join(', ')}
  • Resistance: ${context.analysis.supportResistance.resistance.map(r => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[10]++;
      cov_1y4nxhcc34().s[30]++;
      return `$${r.toFixed(4)}`;
    }).join(', ')}

🧠 AI Analysis: ${context.reasoning}`);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[31]++;
    this.trading('technical_analysis', technicalMessage, {
      symbol: context.symbol,
      component: 'technical_analyzer',
      classification: 'INTERNAL'
    });
  }
  /**
   * Log strategy decisions with AI explanations
   */
  logStrategyDecision(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[11]++;
    const decisionEmoji =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[32]++, this.getDecisionEmoji(context.decision));
    const message =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[33]++, `Strategy decision: ${context.strategyName} → ${context.decision.toUpperCase()} ${context.symbol} (${(context.confidence * 100).toFixed(1)}% confidence)`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[34]++, {
      strategyName: context.strategyName,
      symbol: context.symbol,
      decision: context.decision,
      confidence: context.confidence,
      parameters: context.parameters,
      signals: context.signals,
      reasoning: context.reasoning,
      alternatives: context.alternatives,
      classification: 'INTERNAL',
      timestamp: context.timestamp.toISOString()
    });
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[35]++;
    this.logWithEmoji('info', decisionEmoji, message, enrichedMeta);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[36]++;
    this.trading('strategy_decision', message, enrichedMeta);
    // Log detailed strategy reasoning
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[37]++;
    this.logStrategyReasoning(context);
  }
  /**
   * Log detailed strategy reasoning
   */
  logStrategyReasoning(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[12]++;
    const reasoningMessage =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[38]++, `Strategy reasoning for ${context.strategyName}:

🎯 Decision: ${context.decision.toUpperCase()} (${(context.confidence * 100).toFixed(1)}% confidence)

📊 Signals:
  • Technical: ${Object.entries(context.signals.technical).map(([signal, value]) => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[13]++;
      cov_1y4nxhcc34().s[39]++;
      return `${signal}=${typeof value === 'number' ?
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[10][0]++, value.toFixed(4)) :
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[10][1]++, value)}`;
    }).join(', ')}
  • Sentiment: ${(context.signals.sentiment * 100).toFixed(1)}%

🧠 AI Reasoning: ${context.reasoning.aiExplanation}

✅ Primary Factors:
${context.reasoning.primaryFactors.map(factor => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[14]++;
      cov_1y4nxhcc34().s[40]++;
      return `  • ${factor}`;
    }).join('\n')}

⚠️ Risk Factors:
${context.reasoning.riskFactors.map(factor => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[15]++;
      cov_1y4nxhcc34().s[41]++;
      return `  • ${factor}`;
    }).join('\n')}

🚀 Opportunity Factors:
${context.reasoning.opportunityFactors.map(factor => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[16]++;
      cov_1y4nxhcc34().s[42]++;
      return `  • ${factor}`;
    }).join('\n')}

🎲 Alternative Actions:
${context.alternatives.map(alt => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[17]++;
      cov_1y4nxhcc34().s[43]++;
      return `  • ${alt.action} (${(alt.probability * 100).toFixed(1)}%): ${alt.reasoning}`;
    }).join('\n')}`);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[44]++;
    this.trading('strategy_reasoning', reasoningMessage, {
      strategyName: context.strategyName,
      symbol: context.symbol,
      component: 'strategy_engine',
      classification: 'INTERNAL'
    });
  }
  /**
   * Log Intel NUC and system performance metrics
   */
  logSystemPerformance(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[18]++;
    const statusEmoji =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[45]++, context.status === 'healthy' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[11][0]++, enhanced_logger_1.LogEmojis.SUCCESS) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[11][1]++, context.status === 'warning' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[12][0]++, enhanced_logger_1.LogEmojis.WARNING) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[12][1]++, enhanced_logger_1.LogEmojis.ERROR)));
    const message =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[46]++, `System performance: ${context.component} - ${context.status.toUpperCase()}`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[47]++, {
      component: context.component,
      metrics: context.metrics,
      thresholds: context.thresholds,
      status: context.status,
      classification: 'INTERNAL',
      timestamp: context.timestamp.toISOString()
    });
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[48]++;
    this.logWithEmoji(context.status === 'critical' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[13][0]++, 'error') :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[13][1]++, context.status === 'warning' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[14][0]++, 'warn') :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[14][1]++, 'info')), statusEmoji, message, enrichedMeta);
    // Log detailed performance metrics
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[49]++;
    this.logDetailedPerformanceMetrics(context);
    // Store performance history
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[50]++;
    this.storePerformanceHistory(context);
  }
  /**
   * Log detailed performance metrics
   */
  logDetailedPerformanceMetrics(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[19]++;
    let metricsMessage =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[51]++, `Detailed performance metrics for ${context.component}:\n`);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[52]++;
    if (context.metrics.cpu) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[15][0]++;
      cov_1y4nxhcc34().s[53]++;
      metricsMessage += `\n⚙️ CPU Metrics:
  • Usage: ${context.metrics.cpu.usage.toFixed(1)}%
  • Temperature: ${
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[16][0]++, context.metrics.cpu.temperature?.toFixed(1)) ||
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[16][1]++, 'N/A')}°C
  • Frequency: ${
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[17][0]++, context.metrics.cpu.frequency?.toFixed(0)) ||
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[17][1]++, 'N/A')}MHz`;
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[15][1]++;
    }
    cov_1y4nxhcc34().s[54]++;
    if (context.metrics.memory) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[18][0]++;
      cov_1y4nxhcc34().s[55]++;
      metricsMessage += `\n🧠 Memory Metrics:
  • Used: ${(context.metrics.memory.used / 1024 ** 3).toFixed(2)}GB
  • Total: ${(context.metrics.memory.total / 1024 ** 3).toFixed(2)}GB
  • Usage: ${context.metrics.memory.percentage.toFixed(1)}%
  • Swap: ${context.metrics.memory.swap ?
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[19][0]++, (context.metrics.memory.swap / 1024 ** 3).toFixed(2) + 'GB') :
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[19][1]++, 'N/A')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[18][1]++;
    }
    cov_1y4nxhcc34().s[56]++;
    if (context.metrics.disk) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[20][0]++;
      cov_1y4nxhcc34().s[57]++;
      metricsMessage += `\n💽 Disk Metrics:
  • Used: ${(context.metrics.disk.used / 1024 ** 3).toFixed(2)}GB
  • Total: ${(context.metrics.disk.total / 1024 ** 3).toFixed(2)}GB
  • Usage: ${context.metrics.disk.percentage.toFixed(1)}%
  • IOPS: ${
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[21][0]++, context.metrics.disk.iops?.toLocaleString()) ||
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[21][1]++, 'N/A')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[20][1]++;
    }
    cov_1y4nxhcc34().s[58]++;
    if (context.metrics.network) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[22][0]++;
      cov_1y4nxhcc34().s[59]++;
      metricsMessage += `\n🌐 Network Metrics:
  • Latency: ${context.metrics.network.latency.toFixed(1)}ms
  • Bandwidth: ${(context.metrics.network.bandwidth / 1024 ** 2).toFixed(2)}MB/s
  • Packet Loss: ${
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[23][0]++, context.metrics.network.packetLoss?.toFixed(2)) ||
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[23][1]++, 'N/A')}%
  • Connections: ${context.metrics.network.connections}`;
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[22][1]++;
    }
    cov_1y4nxhcc34().s[60]++;
    if (context.metrics.database) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[24][0]++;
      cov_1y4nxhcc34().s[61]++;
      metricsMessage += `\n🗄️ Database Metrics:
  • Connections: ${context.metrics.database.connections}
  • Query Time: ${context.metrics.database.queryTime.toFixed(2)}ms
  • Cache Hit Ratio: ${
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[25][0]++, context.metrics.database.cacheHitRatio?.toFixed(1)) ||
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[25][1]++, 'N/A')}%`;
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[24][1]++;
    }
    cov_1y4nxhcc34().s[62]++;
    this.info(metricsMessage, {
      component: context.component,
      classification: 'INTERNAL'
    });
  }
  /**
   * Log errors with comprehensive context and recovery actions
   */
  logErrorWithRecovery(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[20]++;
    const severityEmoji =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[63]++, context.severity === 'critical' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[26][0]++, enhanced_logger_1.LogEmojis.ERROR) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[26][1]++, context.severity === 'high' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[27][0]++, enhanced_logger_1.LogEmojis.ALERT) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[27][1]++, context.severity === 'medium' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[28][0]++, enhanced_logger_1.LogEmojis.WARNING) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[28][1]++, enhanced_logger_1.LogEmojis.INFO))));
    const message =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[64]++, `${context.errorType.toUpperCase()} error in ${context.component}: ${context.error.message}`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[65]++, {
      errorId: context.errorId,
      component: context.component,
      errorType: context.errorType,
      severity: context.severity,
      error: {
        name: context.error.name,
        message: context.error.message,
        stack: context.error.stack
      },
      context: context.context,
      recoveryActions: context.recoveryActions,
      impact: context.impact,
      classification: 'CONFIDENTIAL',
      timestamp: context.timestamp.toISOString()
    });
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[66]++;
    this.logWithEmoji('error', severityEmoji, message, enrichedMeta);
    // Log detailed error context and recovery
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[67]++;
    this.logErrorRecoveryDetails(context);
    // Store error history
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[68]++;
    this.storeErrorHistory(context);
  }
  /**
   * Log detailed error recovery information
   */
  logErrorRecoveryDetails(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[21]++;
    const recoveryMessage =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[69]++, `Error recovery details for ${context.errorId}:

❌ Error Details:
  • Type: ${context.errorType}
  • Severity: ${context.severity}
  • Component: ${context.component}
  • Message: ${context.error.message}

🔧 Recovery Actions:
  • Attempted: ${
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[29][0]++, context.recoveryActions.attempted.join(', ')) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[29][1]++, 'None')}
  • Successful: ${
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[30][0]++, context.recoveryActions.successful.join(', ')) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[30][1]++, 'None')}
  • Failed: ${
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[31][0]++, context.recoveryActions.failed.join(', ')) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[31][1]++, 'None')}
  • Next Steps: ${
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[32][0]++, context.recoveryActions.nextSteps.join(', ')) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[32][1]++, 'None')}

📊 Impact Assessment:
  • Trading Affected: ${context.impact.tradingAffected ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[33][0]++, 'Yes') :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[33][1]++, 'No')}
  • System Stability: ${context.impact.systemStability}
  • User Experience: ${context.impact.userExperience}

🔍 Context:
${Object.entries(context.context).map(([key, value]) => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[22]++;
      cov_1y4nxhcc34().s[70]++;
      return `  • ${key}: ${typeof value === 'object' ?
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[34][0]++, JSON.stringify(value)) :
      /* istanbul ignore next */
      (cov_1y4nxhcc34().b[34][1]++, value)}`;
    }).join('\n')}`);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[71]++;
    this.error(recoveryMessage, {
      errorId: context.errorId,
      component: context.component,
      classification: 'CONFIDENTIAL'
    });
  }
  /**
   * Log configuration changes with audit trail
   */
  logConfigurationChange(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[23]++;
    const changeEmoji =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[72]++, context.changeType === 'create' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[35][0]++, enhanced_logger_1.LogEmojis.SUCCESS) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[35][1]++, context.changeType === 'update' ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[36][0]++, enhanced_logger_1.LogEmojis.RESTART) :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[36][1]++, enhanced_logger_1.LogEmojis.ERROR)));
    const message =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[73]++, `Configuration ${context.changeType}: ${context.component} (${context.changes.length} changes)`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[74]++, {
      changeId: context.changeId,
      component: context.component,
      changeType: context.changeType,
      changes: context.changes,
      reason: context.reason,
      approvedBy: context.approvedBy,
      impact: context.impact,
      classification: 'CONFIDENTIAL',
      timestamp: context.timestamp.toISOString()
    });
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[75]++;
    this.logWithEmoji('info', changeEmoji, message, enrichedMeta);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[76]++;
    this.audit({
      auditId: context.changeId,
      eventType: 'CONFIGURATION_CHANGE',
      actor: context.approvedBy,
      resource: context.component,
      action: context.changeType.toUpperCase(),
      result: 'SUCCESS',
      auditData: enrichedMeta,
      timestamp: context.timestamp
    });
    // Log detailed configuration changes
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[77]++;
    this.logConfigurationDetails(context);
  }
  /**
   * Log detailed configuration change information
   */
  logConfigurationDetails(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[24]++;
    const configMessage =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[78]++, `Configuration change details for ${context.changeId}:

🔧 Change Summary:
  • Component: ${context.component}
  • Type: ${context.changeType}
  • Approved By: ${context.approvedBy}
  • Reason: ${context.reason}

📝 Changes Made:
${context.changes.map(change => {
      /* istanbul ignore next */
      cov_1y4nxhcc34().f[25]++;
      cov_1y4nxhcc34().s[79]++;
      return `  • ${change.field}: ${JSON.stringify(change.oldValue)} → ${JSON.stringify(change.newValue)}`;
    }).join('\n')}

⚠️ Impact Assessment:
  • Requires Restart: ${context.impact.requiresRestart ?
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[37][0]++, 'Yes') :
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[37][1]++, 'No')}
  • Risk Level: ${context.impact.riskLevel}
  • Affected Components: ${
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[38][0]++, context.impact.affectedComponents.join(', ')) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[38][1]++, 'None')}`);
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[80]++;
    this.info(configMessage, {
      changeId: context.changeId,
      component: context.component,
      classification: 'CONFIDENTIAL'
    });
  }
  /**
   * Get trend emoji based on direction
   */
  getTrendEmoji(trend) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[26]++;
    cov_1y4nxhcc34().s[81]++;
    switch (trend) {
      case 'bullish':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[39][0]++;
        cov_1y4nxhcc34().s[82]++;
        return enhanced_logger_1.LogEmojis.BULL;
      case 'bearish':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[39][1]++;
        cov_1y4nxhcc34().s[83]++;
        return enhanced_logger_1.LogEmojis.BEAR;
      case 'neutral':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[39][2]++;
        cov_1y4nxhcc34().s[84]++;
        return enhanced_logger_1.LogEmojis.BALANCE;
      default:
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[39][3]++;
        cov_1y4nxhcc34().s[85]++;
        return enhanced_logger_1.LogEmojis.INFO;
    }
  }
  /**
   * Get decision emoji based on action
   */
  getDecisionEmoji(decision) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[27]++;
    cov_1y4nxhcc34().s[86]++;
    switch (decision) {
      case 'buy':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[40][0]++;
        cov_1y4nxhcc34().s[87]++;
        return enhanced_logger_1.LogEmojis.BUY;
      case 'sell':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[40][1]++;
        cov_1y4nxhcc34().s[88]++;
        return enhanced_logger_1.LogEmojis.SELL;
      case 'hold':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[40][2]++;
        cov_1y4nxhcc34().s[89]++;
        return enhanced_logger_1.LogEmojis.BALANCE;
      case 'exit':
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[40][3]++;
        cov_1y4nxhcc34().s[90]++;
        return enhanced_logger_1.LogEmojis.STOP;
      default:
        /* istanbul ignore next */
        cov_1y4nxhcc34().b[40][4]++;
        cov_1y4nxhcc34().s[91]++;
        return enhanced_logger_1.LogEmojis.INFO;
    }
  }
  /**
   * Store performance history for trend analysis
   */
  storePerformanceHistory(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[28]++;
    const key =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[92]++, `${context.component}_${context.status}`);
    const history =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[93]++,
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[41][0]++, this.performanceHistory.get(key)) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[41][1]++, []));
    // Store timestamp as performance metric
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[94]++;
    history.push(Date.now());
    // Keep only last 100 entries
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[95]++;
    if (history.length > 100) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[42][0]++;
      cov_1y4nxhcc34().s[96]++;
      history.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[42][1]++;
    }
    cov_1y4nxhcc34().s[97]++;
    this.performanceHistory.set(key, history);
  }
  /**
   * Store error history for pattern analysis
   */
  storeErrorHistory(context) {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[29]++;
    const key =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[98]++, `${context.component}_${context.errorType}`);
    const history =
    /* istanbul ignore next */
    (cov_1y4nxhcc34().s[99]++,
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[43][0]++, this.errorHistory.get(key)) ||
    /* istanbul ignore next */
    (cov_1y4nxhcc34().b[43][1]++, []));
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[100]++;
    history.push(context);
    // Keep only last 50 errors
    /* istanbul ignore next */
    cov_1y4nxhcc34().s[101]++;
    if (history.length > 50) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().b[44][0]++;
      cov_1y4nxhcc34().s[102]++;
      history.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1y4nxhcc34().b[44][1]++;
    }
    cov_1y4nxhcc34().s[103]++;
    this.errorHistory.set(key, history);
  }
  /**
   * Get performance trends
   */
  getPerformanceTrends() {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[30]++;
    cov_1y4nxhcc34().s[104]++;
    return Object.fromEntries(this.performanceHistory);
  }
  /**
   * Get error patterns
   */
  getErrorPatterns() {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[31]++;
    cov_1y4nxhcc34().s[105]++;
    return Object.fromEntries(this.errorHistory);
  }
  /**
   * Generate comprehensive system report
   */
  async generateComprehensiveReport() {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[32]++;
    cov_1y4nxhcc34().s[106]++;
    return {
      timestamp: new Date().toISOString(),
      performanceTrends: this.getPerformanceTrends(),
      errorPatterns: this.getErrorPatterns(),
      systemHealth: await this.getSystemHealth(),
      tradingMetrics: this.getOperationCounters()
    };
  }
  /**
   * Get current system health
   */
  async getSystemHealth() {
    /* istanbul ignore next */
    cov_1y4nxhcc34().f[33]++;
    cov_1y4nxhcc34().s[107]++;
    try {
      const cpuInfo =
      /* istanbul ignore next */
      (cov_1y4nxhcc34().s[108]++, os_1.default.cpus());
      const memInfo =
      /* istanbul ignore next */
      (cov_1y4nxhcc34().s[109]++, process.memoryUsage());
      const loadAvg =
      /* istanbul ignore next */
      (cov_1y4nxhcc34().s[110]++, os_1.default.loadavg());
      /* istanbul ignore next */
      cov_1y4nxhcc34().s[111]++;
      return {
        cpu: {
          cores: cpuInfo.length,
          model:
          /* istanbul ignore next */
          (cov_1y4nxhcc34().b[45][0]++, cpuInfo[0]?.model) ||
          /* istanbul ignore next */
          (cov_1y4nxhcc34().b[45][1]++, 'Unknown'),
          loadAverage: loadAvg
        },
        memory: {
          rss: memInfo.rss,
          heapTotal: memInfo.heapTotal,
          heapUsed: memInfo.heapUsed,
          external: memInfo.external
        },
        system: {
          platform: os_1.default.platform(),
          arch: os_1.default.arch(),
          uptime: os_1.default.uptime(),
          hostname: os_1.default.hostname()
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1y4nxhcc34().s[112]++;
      return {
        error: 'Failed to collect system health data'
      };
    }
  }
}
/* istanbul ignore next */
cov_1y4nxhcc34().s[113]++;
exports.TradingLogger = TradingLogger;
// Create and export singleton instance
/* istanbul ignore next */
cov_1y4nxhcc34().s[114]++;
exports.tradingLogger = new TradingLogger();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,