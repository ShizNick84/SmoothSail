a6488a75a3ce1d5bb9d1e76e1fba15fb
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - ORCHESTRATION MODULE INDEX
 * =============================================================================
 *
 * This module exports all orchestration components for system integration
 * and coordination. It provides a unified interface for system lifecycle
 * management, dependency injection, and inter-component communication.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1lkr382h0v() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\index.ts";
  var hash = "19a4d8999d565ed991076939187950b5d44f7de4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "1": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 498
        }
      },
      "2": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "3": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 146
        }
      },
      "4": {
        start: {
          line: 20,
          column: 92
        },
        end: {
          line: 20,
          column: 140
        }
      },
      "5": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 140
        }
      },
      "6": {
        start: {
          line: 21,
          column: 89
        },
        end: {
          line: 21,
          column: 134
        }
      },
      "7": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 162
        }
      },
      "8": {
        start: {
          line: 22,
          column: 100
        },
        end: {
          line: 22,
          column: 156
        }
      },
      "9": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 58
        }
      },
      "10": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 143
        }
      },
      "11": {
        start: {
          line: 25,
          column: 91
        },
        end: {
          line: 25,
          column: 137
        }
      },
      "12": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 141
        }
      },
      "13": {
        start: {
          line: 26,
          column: 90
        },
        end: {
          line: 26,
          column: 135
        }
      },
      "14": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 141
        }
      },
      "15": {
        start: {
          line: 27,
          column: 90
        },
        end: {
          line: 27,
          column: 135
        }
      },
      "16": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 143
        }
      },
      "17": {
        start: {
          line: 28,
          column: 91
        },
        end: {
          line: 28,
          column: 137
        }
      },
      "18": {
        start: {
          line: 29,
          column: 0
        },
        end: {
          line: 29,
          column: 121
        }
      },
      "19": {
        start: {
          line: 29,
          column: 80
        },
        end: {
          line: 29,
          column: 115
        }
      },
      "20": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 143
        }
      },
      "21": {
        start: {
          line: 30,
          column: 91
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "22": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 143
        }
      },
      "23": {
        start: {
          line: 31,
          column: 91
        },
        end: {
          line: 31,
          column: 137
        }
      },
      "24": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "25": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 140
        }
      },
      "26": {
        start: {
          line: 34,
          column: 90
        },
        end: {
          line: 34,
          column: 134
        }
      },
      "27": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 138
        }
      },
      "28": {
        start: {
          line: 35,
          column: 89
        },
        end: {
          line: 35,
          column: 132
        }
      },
      "29": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 166
        }
      },
      "30": {
        start: {
          line: 36,
          column: 103
        },
        end: {
          line: 36,
          column: 160
        }
      },
      "31": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 140
        }
      },
      "32": {
        start: {
          line: 37,
          column: 90
        },
        end: {
          line: 37,
          column: 134
        }
      },
      "33": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 39,
          column: 64
        }
      },
      "34": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 150
        }
      },
      "35": {
        start: {
          line: 40,
          column: 93
        },
        end: {
          line: 40,
          column: 144
        }
      },
      "36": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 148
        }
      },
      "37": {
        start: {
          line: 41,
          column: 92
        },
        end: {
          line: 41,
          column: 142
        }
      },
      "38": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 164
        }
      },
      "39": {
        start: {
          line: 42,
          column: 100
        },
        end: {
          line: 42,
          column: 158
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 78
          },
          end: {
            line: 20,
            column: 79
          }
        },
        loc: {
          start: {
            line: 20,
            column: 90
          },
          end: {
            line: 20,
            column: 142
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 75
          },
          end: {
            line: 21,
            column: 76
          }
        },
        loc: {
          start: {
            line: 21,
            column: 87
          },
          end: {
            line: 21,
            column: 136
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 86
          },
          end: {
            line: 22,
            column: 87
          }
        },
        loc: {
          start: {
            line: 22,
            column: 98
          },
          end: {
            line: 22,
            column: 158
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 77
          },
          end: {
            line: 25,
            column: 78
          }
        },
        loc: {
          start: {
            line: 25,
            column: 89
          },
          end: {
            line: 25,
            column: 139
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 76
          },
          end: {
            line: 26,
            column: 77
          }
        },
        loc: {
          start: {
            line: 26,
            column: 88
          },
          end: {
            line: 26,
            column: 137
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 76
          },
          end: {
            line: 27,
            column: 77
          }
        },
        loc: {
          start: {
            line: 27,
            column: 88
          },
          end: {
            line: 27,
            column: 137
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 77
          },
          end: {
            line: 28,
            column: 78
          }
        },
        loc: {
          start: {
            line: 28,
            column: 89
          },
          end: {
            line: 28,
            column: 139
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 29,
            column: 66
          },
          end: {
            line: 29,
            column: 67
          }
        },
        loc: {
          start: {
            line: 29,
            column: 78
          },
          end: {
            line: 29,
            column: 117
          }
        },
        line: 29
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 30,
            column: 77
          },
          end: {
            line: 30,
            column: 78
          }
        },
        loc: {
          start: {
            line: 30,
            column: 89
          },
          end: {
            line: 30,
            column: 139
          }
        },
        line: 30
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 31,
            column: 77
          },
          end: {
            line: 31,
            column: 78
          }
        },
        loc: {
          start: {
            line: 31,
            column: 89
          },
          end: {
            line: 31,
            column: 139
          }
        },
        line: 31
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 34,
            column: 76
          },
          end: {
            line: 34,
            column: 77
          }
        },
        loc: {
          start: {
            line: 34,
            column: 88
          },
          end: {
            line: 34,
            column: 136
          }
        },
        line: 34
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 35,
            column: 75
          },
          end: {
            line: 35,
            column: 76
          }
        },
        loc: {
          start: {
            line: 35,
            column: 87
          },
          end: {
            line: 35,
            column: 134
          }
        },
        line: 35
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 36,
            column: 89
          },
          end: {
            line: 36,
            column: 90
          }
        },
        loc: {
          start: {
            line: 36,
            column: 101
          },
          end: {
            line: 36,
            column: 162
          }
        },
        line: 36
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 37,
            column: 76
          },
          end: {
            line: 37,
            column: 77
          }
        },
        loc: {
          start: {
            line: 37,
            column: 88
          },
          end: {
            line: 37,
            column: 136
          }
        },
        line: 37
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 40,
            column: 79
          },
          end: {
            line: 40,
            column: 80
          }
        },
        loc: {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 146
          }
        },
        line: 40
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 41,
            column: 78
          },
          end: {
            line: 41,
            column: 79
          }
        },
        loc: {
          start: {
            line: 41,
            column: 90
          },
          end: {
            line: 41,
            column: 144
          }
        },
        line: 41
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 42,
            column: 86
          },
          end: {
            line: 42,
            column: 87
          }
        },
        loc: {
          start: {
            line: 42,
            column: 98
          },
          end: {
            line: 42,
            column: 160
          }
        },
        line: 42
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19a4d8999d565ed991076939187950b5d44f7de4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lkr382h0v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lkr382h0v();
cov_1lkr382h0v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lkr382h0v().s[1]++;
exports.defaultHealthMonitorConfig = exports.SystemHealthStatus = exports.SystemHealthMonitor = exports.communicationBus = exports.defaultCommunicationBusConfig = exports.MessagePriority = exports.CommunicationBus = exports.registerTransient = exports.registerSingleton = exports.Inject = exports.dependencyManager = exports.DependencyTokens = exports.DependencyStatus = exports.DependencyManager = exports.defaultOrchestrationConfig = exports.ComponentStatus = exports.SystemOrchestrator = void 0;
// System Orchestrator
var system_orchestrator_1 =
/* istanbul ignore next */
(cov_1lkr382h0v().s[2]++, require("./system-orchestrator"));
/* istanbul ignore next */
cov_1lkr382h0v().s[3]++;
Object.defineProperty(exports, "SystemOrchestrator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[0]++;
    cov_1lkr382h0v().s[4]++;
    return system_orchestrator_1.SystemOrchestrator;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[5]++;
Object.defineProperty(exports, "ComponentStatus", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[1]++;
    cov_1lkr382h0v().s[6]++;
    return system_orchestrator_1.ComponentStatus;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[7]++;
Object.defineProperty(exports, "defaultOrchestrationConfig", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[2]++;
    cov_1lkr382h0v().s[8]++;
    return system_orchestrator_1.defaultOrchestrationConfig;
  }
});
// Dependency Manager
var dependency_manager_1 =
/* istanbul ignore next */
(cov_1lkr382h0v().s[9]++, require("./dependency-manager"));
/* istanbul ignore next */
cov_1lkr382h0v().s[10]++;
Object.defineProperty(exports, "DependencyManager", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[3]++;
    cov_1lkr382h0v().s[11]++;
    return dependency_manager_1.DependencyManager;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[12]++;
Object.defineProperty(exports, "DependencyStatus", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[4]++;
    cov_1lkr382h0v().s[13]++;
    return dependency_manager_1.DependencyStatus;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[14]++;
Object.defineProperty(exports, "DependencyTokens", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[5]++;
    cov_1lkr382h0v().s[15]++;
    return dependency_manager_1.DependencyTokens;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[16]++;
Object.defineProperty(exports, "dependencyManager", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[6]++;
    cov_1lkr382h0v().s[17]++;
    return dependency_manager_1.dependencyManager;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[18]++;
Object.defineProperty(exports, "Inject", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[7]++;
    cov_1lkr382h0v().s[19]++;
    return dependency_manager_1.Inject;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[20]++;
Object.defineProperty(exports, "registerSingleton", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[8]++;
    cov_1lkr382h0v().s[21]++;
    return dependency_manager_1.registerSingleton;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[22]++;
Object.defineProperty(exports, "registerTransient", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[9]++;
    cov_1lkr382h0v().s[23]++;
    return dependency_manager_1.registerTransient;
  }
});
// Communication Bus
var communication_bus_1 =
/* istanbul ignore next */
(cov_1lkr382h0v().s[24]++, require("./communication-bus"));
/* istanbul ignore next */
cov_1lkr382h0v().s[25]++;
Object.defineProperty(exports, "CommunicationBus", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[10]++;
    cov_1lkr382h0v().s[26]++;
    return communication_bus_1.CommunicationBus;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[27]++;
Object.defineProperty(exports, "MessagePriority", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[11]++;
    cov_1lkr382h0v().s[28]++;
    return communication_bus_1.MessagePriority;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[29]++;
Object.defineProperty(exports, "defaultCommunicationBusConfig", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[12]++;
    cov_1lkr382h0v().s[30]++;
    return communication_bus_1.defaultCommunicationBusConfig;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[31]++;
Object.defineProperty(exports, "communicationBus", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[13]++;
    cov_1lkr382h0v().s[32]++;
    return communication_bus_1.communicationBus;
  }
});
// System Health Monitor
var system_health_monitor_1 =
/* istanbul ignore next */
(cov_1lkr382h0v().s[33]++, require("./system-health-monitor"));
/* istanbul ignore next */
cov_1lkr382h0v().s[34]++;
Object.defineProperty(exports, "SystemHealthMonitor", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[14]++;
    cov_1lkr382h0v().s[35]++;
    return system_health_monitor_1.SystemHealthMonitor;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[36]++;
Object.defineProperty(exports, "SystemHealthStatus", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[15]++;
    cov_1lkr382h0v().s[37]++;
    return system_health_monitor_1.SystemHealthStatus;
  }
});
/* istanbul ignore next */
cov_1lkr382h0v().s[38]++;
Object.defineProperty(exports, "defaultHealthMonitorConfig", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lkr382h0v().f[16]++;
    cov_1lkr382h0v().s[39]++;
    return system_health_monitor_1.defaultHealthMonitorConfig;
  }
});
// =============================================================================
// ORCHESTRATION MODULE NOTES
// =============================================================================
// 1. Comprehensive system orchestration with dependency management
// 2. Event-driven inter-component communication
// 3. Health monitoring and automatic recovery capabilities
// 4. Dependency injection with circular dependency detection
// 5. Message queuing with priority-based processing
// 6. System metrics collection and alerting
// 7. Graceful startup and shutdown procedures
// 8. Component lifecycle management and coordination
// =============================================================================