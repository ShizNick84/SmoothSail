{"version":3,"names":["cov_6eh6untbt","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","child_process_1","require","fs_1","path_1","logger_1","database_setup_1","cron","__importStar","MonitoringAutomation","metrics","maintenanceTasks","alertThresholds","isRunning","constructor","initializeAlertThresholds","initializeMaintenanceTasks","logger","warn","info","startMetricCollection","scheduleMaintenanceTasks","startHealthChecks","stop","getTasks","forEach","task","cpu","warning","critical","memory","disk","temperature","responseTime","errorRate","description","schedule","enabled","action","timestamp","Date","toISOString","replace","backupPath","join","process","cwd","databaseSetup","backup","rotateLogFiles","performSystemCleanup","performSecurityScan","optimizePerformance","generateHealthReport","cleanupOldBackups","collectMetrics","push","length","slice","checkAlerts","error","lastRun","performHealthCheck","systemMetrics","collectSystemMetrics","applicationMetrics","collectApplicationMetrics","tradingMetrics","collectTradingMetrics","securityMetrics","collectSecurityMetrics","system","application","trading","security","cpuUsage","parseFloat","execSync","encoding","trim","loadAverage","match","map","Number","memInfo","split","memTotal","parseInt","memUsed","memAvailable","diskInfo","diskTotal","diskUsed","diskAvailable","networkMetrics","bytesIn","bytesOut","packetsIn","packetsOut","netStats","stats","usage","total","used","available","percentage","network","processes","apiHealth","dashboardHealth","tunnelHealth","pm2List","processData","JSON","parse","proc","pid","status","pm2_env","monit","uptime","now","pm_uptime","restarts","restart_time","startTime","stdio","some","p","includes","activeTrades","totalPnL","dailyPnL","winRate","riskExposure","failedLogins","suspiciousActivities","firewallBlocks","existsSync","authLog","ufwLog","alerts","toFixed","failedProcesses","filter","sendAlerts","alertMessage","alertsDir","mkdirSync","recursive","alertFile","alertEntry","writeFileSync","flag","healthStatus","overall","checks","details","api","dashboard","tunnel","dbHealthy","validateIntegrity","integrity","statuses","Object","values","check","healthFile","stringify","message","logsDir","run","report","maintenance","lastTasks","recommendations","generateRecommendations","reportFile","backupsDir","latestMetrics","getMetrics","getMaintenanceStatus","exports","monitoringAutomation"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\monitoring-automation.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - MONITORING AND MAINTENANCE AUTOMATION\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive monitoring and automated maintenance\r\n * for the AI crypto trading agent production deployment.\r\n */\r\n\r\nimport { execSync } from 'child_process';\r\nimport { existsSync, writeFileSync, readFileSync, mkdirSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { logger } from '../core/logger';\r\nimport { databaseSetup } from './database-setup';\r\nimport * as cron from 'node-cron';\r\n\r\ninterface MonitoringMetrics {\r\n  timestamp: Date;\r\n  system: SystemMetrics;\r\n  application: ApplicationMetrics;\r\n  trading: TradingMetrics;\r\n  security: SecurityMetrics;\r\n}\r\n\r\ninterface SystemMetrics {\r\n  cpu: {\r\n    usage: number;\r\n    temperature: number;\r\n    loadAverage: number[];\r\n  };\r\n  memory: {\r\n    total: number;\r\n    used: number;\r\n    available: number;\r\n    percentage: number;\r\n  };\r\n  disk: {\r\n    total: number;\r\n    used: number;\r\n    available: number;\r\n    percentage: number;\r\n  };\r\n  network: {\r\n    bytesIn: number;\r\n    bytesOut: number;\r\n    packetsIn: number;\r\n    packetsOut: number;\r\n  };\r\n}\r\n\r\ninterface ApplicationMetrics {\r\n  processes: ProcessMetric[];\r\n  apiHealth: boolean;\r\n  dashboardHealth: boolean;\r\n  tunnelHealth: boolean;\r\n  responseTime: number;\r\n  errorRate: number;\r\n}\r\n\r\ninterface ProcessMetric {\r\n  name: string;\r\n  pid: number;\r\n  status: string;\r\n  cpu: number;\r\n  memory: number;\r\n  uptime: number;\r\n  restarts: number;\r\n}\r\n\r\ninterface TradingMetrics {\r\n  activeTrades: number;\r\n  totalPnL: number;\r\n  dailyPnL: number;\r\n  winRate: number;\r\n  riskExposure: number;\r\n  lastTradeTime?: Date;\r\n}\r\n\r\ninterface SecurityMetrics {\r\n  failedLogins: number;\r\n  suspiciousActivities: number;\r\n  firewallBlocks: number;\r\n  lastSecurityScan?: Date;\r\n}\r\n\r\ninterface MaintenanceTask {\r\n  name: string;\r\n  description: string;\r\n  schedule: string; // cron expression\r\n  action: () => Promise<void>;\r\n  lastRun?: Date;\r\n  nextRun?: Date;\r\n  enabled: boolean;\r\n}\r\n\r\nexport class MonitoringAutomation {\r\n  private metrics: MonitoringMetrics[] = [];\r\n  private maintenanceTasks: MaintenanceTask[] = [];\r\n  private alertThresholds: any;\r\n  private isRunning: boolean = false;\r\n\r\n  constructor() {\r\n    this.initializeAlertThresholds();\r\n    this.initializeMaintenanceTasks();\r\n  }\r\n\r\n  /**\r\n   * Start monitoring and maintenance automation\r\n   */\r\n  async start(): Promise<void> {\r\n    if (this.isRunning) {\r\n      logger.warn('Monitoring automation is already running');\r\n      return;\r\n    }\r\n\r\n    logger.info('🔄 Starting monitoring and maintenance automation...');\r\n\r\n    // Start metric collection\r\n    this.startMetricCollection();\r\n\r\n    // Schedule maintenance tasks\r\n    this.scheduleMaintenanceTasks();\r\n\r\n    // Start health checks\r\n    this.startHealthChecks();\r\n\r\n    this.isRunning = true;\r\n    logger.info('✅ Monitoring and maintenance automation started');\r\n  }\r\n\r\n  /**\r\n   * Stop monitoring and maintenance automation\r\n   */\r\n  async stop(): Promise<void> {\r\n    if (!this.isRunning) {\r\n      return;\r\n    }\r\n\r\n    logger.info('🛑 Stopping monitoring and maintenance automation...');\r\n\r\n    // Stop all cron jobs\r\n    cron.getTasks().forEach(task => task.stop());\r\n\r\n    this.isRunning = false;\r\n    logger.info('✅ Monitoring and maintenance automation stopped');\r\n  }\r\n\r\n  /**\r\n   * Initialize alert thresholds\r\n   */\r\n  private initializeAlertThresholds(): void {\r\n    this.alertThresholds = {\r\n      cpu: {\r\n        warning: 70,\r\n        critical: 85\r\n      },\r\n      memory: {\r\n        warning: 80,\r\n        critical: 90\r\n      },\r\n      disk: {\r\n        warning: 80,\r\n        critical: 90\r\n      },\r\n      temperature: {\r\n        warning: 70,\r\n        critical: 80\r\n      },\r\n      responseTime: {\r\n        warning: 5000,\r\n        critical: 10000\r\n      },\r\n      errorRate: {\r\n        warning: 0.05,\r\n        critical: 0.1\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize maintenance tasks\r\n   */\r\n  private initializeMaintenanceTasks(): void {\r\n    this.maintenanceTasks = [\r\n      {\r\n        name: 'database-backup',\r\n        description: 'Create database backup',\r\n        schedule: '0 2 * * *', // Daily at 2 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n          const backupPath = join(process.cwd(), 'backups', `db-backup-${timestamp}.db`);\r\n          await databaseSetup.backup(backupPath);\r\n        }\r\n      },\r\n      {\r\n        name: 'log-rotation',\r\n        description: 'Rotate and compress old logs',\r\n        schedule: '0 1 * * *', // Daily at 1 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.rotateLogFiles();\r\n        }\r\n      },\r\n      {\r\n        name: 'system-cleanup',\r\n        description: 'Clean temporary files and optimize system',\r\n        schedule: '0 3 * * 0', // Weekly on Sunday at 3 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.performSystemCleanup();\r\n        }\r\n      },\r\n      {\r\n        name: 'security-scan',\r\n        description: 'Run security vulnerability scan',\r\n        schedule: '0 4 * * 1', // Weekly on Monday at 4 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.performSecurityScan();\r\n        }\r\n      },\r\n      {\r\n        name: 'performance-optimization',\r\n        description: 'Optimize system performance',\r\n        schedule: '0 5 * * 0', // Weekly on Sunday at 5 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.optimizePerformance();\r\n        }\r\n      },\r\n      {\r\n        name: 'health-report',\r\n        description: 'Generate comprehensive health report',\r\n        schedule: '0 6 * * 1', // Weekly on Monday at 6 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.generateHealthReport();\r\n        }\r\n      },\r\n      {\r\n        name: 'backup-cleanup',\r\n        description: 'Clean old backup files',\r\n        schedule: '0 7 * * 0', // Weekly on Sunday at 7 AM\r\n        enabled: true,\r\n        action: async () => {\r\n          await this.cleanupOldBackups();\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Start metric collection\r\n   */\r\n  private startMetricCollection(): void {\r\n    // Collect metrics every minute\r\n    cron.schedule('* * * * *', async () => {\r\n      try {\r\n        const metrics = await this.collectMetrics();\r\n        this.metrics.push(metrics);\r\n\r\n        // Keep only last 1440 metrics (24 hours)\r\n        if (this.metrics.length > 1440) {\r\n          this.metrics = this.metrics.slice(-1440);\r\n        }\r\n\r\n        // Check for alerts\r\n        await this.checkAlerts(metrics);\r\n\r\n      } catch (error) {\r\n        logger.error('Error collecting metrics:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Schedule maintenance tasks\r\n   */\r\n  private scheduleMaintenanceTasks(): void {\r\n    for (const task of this.maintenanceTasks) {\r\n      if (task.enabled) {\r\n        cron.schedule(task.schedule, async () => {\r\n          logger.info(`🔧 Running maintenance task: ${task.name}`);\r\n          \r\n          try {\r\n            await task.action();\r\n            task.lastRun = new Date();\r\n            logger.info(`✅ Maintenance task completed: ${task.name}`);\r\n          } catch (error) {\r\n            logger.error(`❌ Maintenance task failed: ${task.name}`, error);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start health checks\r\n   */\r\n  private startHealthChecks(): void {\r\n    // Health check every 5 minutes\r\n    cron.schedule('*/5 * * * *', async () => {\r\n      try {\r\n        await this.performHealthCheck();\r\n      } catch (error) {\r\n        logger.error('Health check failed:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Collect system and application metrics\r\n   */\r\n  private async collectMetrics(): Promise<MonitoringMetrics> {\r\n    const timestamp = new Date();\r\n\r\n    // System metrics\r\n    const systemMetrics = await this.collectSystemMetrics();\r\n    \r\n    // Application metrics\r\n    const applicationMetrics = await this.collectApplicationMetrics();\r\n    \r\n    // Trading metrics\r\n    const tradingMetrics = await this.collectTradingMetrics();\r\n    \r\n    // Security metrics\r\n    const securityMetrics = await this.collectSecurityMetrics();\r\n\r\n    return {\r\n      timestamp,\r\n      system: systemMetrics,\r\n      application: applicationMetrics,\r\n      trading: tradingMetrics,\r\n      security: securityMetrics\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Collect system metrics\r\n   */\r\n  private async collectSystemMetrics(): Promise<SystemMetrics> {\r\n    try {\r\n      // CPU metrics\r\n      const cpuUsage = parseFloat(execSync(\"top -bn1 | grep 'Cpu(s)' | awk '{print $2}' | cut -d'%' -f1\", { encoding: 'utf-8' }).trim());\r\n      const loadAverage = execSync('uptime', { encoding: 'utf-8' }).match(/load average: ([\\d.]+), ([\\d.]+), ([\\d.]+)/)?.slice(1).map(Number) || [0, 0, 0];\r\n      \r\n      // Temperature (if available)\r\n      let temperature = 0;\r\n      try {\r\n        temperature = parseFloat(execSync(\"sensors | grep 'Core 0' | awk '{print $3}' | cut -d'+' -f2 | cut -d'°' -f1\", { encoding: 'utf-8' }).trim()) || 0;\r\n      } catch {\r\n        // Temperature sensor not available\r\n      }\r\n\r\n      // Memory metrics\r\n      const memInfo = execSync('free -b', { encoding: 'utf-8' }).split('\\n')[1].split(/\\s+/);\r\n      const memTotal = parseInt(memInfo[1]);\r\n      const memUsed = parseInt(memInfo[2]);\r\n      const memAvailable = parseInt(memInfo[6]);\r\n\r\n      // Disk metrics\r\n      const diskInfo = execSync(\"df -B1 / | tail -1\", { encoding: 'utf-8' }).split(/\\s+/);\r\n      const diskTotal = parseInt(diskInfo[1]);\r\n      const diskUsed = parseInt(diskInfo[2]);\r\n      const diskAvailable = parseInt(diskInfo[3]);\r\n\r\n      // Network metrics (simplified)\r\n      let networkMetrics = { bytesIn: 0, bytesOut: 0, packetsIn: 0, packetsOut: 0 };\r\n      try {\r\n        const netStats = execSync(\"cat /proc/net/dev | grep eth0 || cat /proc/net/dev | grep wlan0 || echo '0 0 0 0'\", { encoding: 'utf-8' }).trim();\r\n        if (netStats) {\r\n          const stats = netStats.split(/\\s+/);\r\n          networkMetrics = {\r\n            bytesIn: parseInt(stats[1]) || 0,\r\n            bytesOut: parseInt(stats[9]) || 0,\r\n            packetsIn: parseInt(stats[2]) || 0,\r\n            packetsOut: parseInt(stats[10]) || 0\r\n          };\r\n        }\r\n      } catch {\r\n        // Network stats not available\r\n      }\r\n\r\n      return {\r\n        cpu: {\r\n          usage: cpuUsage,\r\n          temperature,\r\n          loadAverage\r\n        },\r\n        memory: {\r\n          total: memTotal,\r\n          used: memUsed,\r\n          available: memAvailable,\r\n          percentage: (memUsed / memTotal) * 100\r\n        },\r\n        disk: {\r\n          total: diskTotal,\r\n          used: diskUsed,\r\n          available: diskAvailable,\r\n          percentage: (diskUsed / diskTotal) * 100\r\n        },\r\n        network: networkMetrics\r\n      };\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting system metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect application metrics\r\n   */\r\n  private async collectApplicationMetrics(): Promise<ApplicationMetrics> {\r\n    const processes: ProcessMetric[] = [];\r\n    let apiHealth = false;\r\n    let dashboardHealth = false;\r\n    let tunnelHealth = false;\r\n    let responseTime = 0;\r\n    let errorRate = 0;\r\n\r\n    try {\r\n      // PM2 process metrics\r\n      const pm2List = execSync('pm2 jlist', { encoding: 'utf-8' });\r\n      const processData = JSON.parse(pm2List);\r\n\r\n      for (const proc of processData) {\r\n        processes.push({\r\n          name: proc.name,\r\n          pid: proc.pid,\r\n          status: proc.pm2_env.status,\r\n          cpu: proc.monit.cpu,\r\n          memory: proc.monit.memory,\r\n          uptime: Date.now() - proc.pm2_env.pm_uptime,\r\n          restarts: proc.pm2_env.restart_time\r\n        });\r\n      }\r\n\r\n      // API health check\r\n      try {\r\n        const startTime = Date.now();\r\n        execSync('curl -f http://localhost:3001/api/v1/health', { stdio: 'pipe' });\r\n        responseTime = Date.now() - startTime;\r\n        apiHealth = true;\r\n      } catch {\r\n        apiHealth = false;\r\n      }\r\n\r\n      // Dashboard health check\r\n      try {\r\n        execSync('curl -f http://localhost:3002', { stdio: 'pipe' });\r\n        dashboardHealth = true;\r\n      } catch {\r\n        dashboardHealth = false;\r\n      }\r\n\r\n      // Tunnel health check (simplified)\r\n      tunnelHealth = processes.some(p => p.name.includes('tunnel') && p.status === 'online');\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting application metrics:', error);\r\n    }\r\n\r\n    return {\r\n      processes,\r\n      apiHealth,\r\n      dashboardHealth,\r\n      tunnelHealth,\r\n      responseTime,\r\n      errorRate\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Collect trading metrics\r\n   */\r\n  private async collectTradingMetrics(): Promise<TradingMetrics> {\r\n    // This would typically query the database for trading data\r\n    // For now, return default values\r\n    return {\r\n      activeTrades: 0,\r\n      totalPnL: 0,\r\n      dailyPnL: 0,\r\n      winRate: 0,\r\n      riskExposure: 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Collect security metrics\r\n   */\r\n  private async collectSecurityMetrics(): Promise<SecurityMetrics> {\r\n    let failedLogins = 0;\r\n    let suspiciousActivities = 0;\r\n    let firewallBlocks = 0;\r\n\r\n    try {\r\n      // Count failed login attempts from auth.log\r\n      if (existsSync('/var/log/auth.log')) {\r\n        const authLog = execSync(\"grep 'Failed password' /var/log/auth.log | wc -l\", { encoding: 'utf-8' });\r\n        failedLogins = parseInt(authLog.trim()) || 0;\r\n      }\r\n\r\n      // Count firewall blocks\r\n      try {\r\n        const ufwLog = execSync(\"grep 'UFW BLOCK' /var/log/ufw.log | wc -l\", { encoding: 'utf-8' });\r\n        firewallBlocks = parseInt(ufwLog.trim()) || 0;\r\n      } catch {\r\n        // UFW log not available\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting security metrics:', error);\r\n    }\r\n\r\n    return {\r\n      failedLogins,\r\n      suspiciousActivities,\r\n      firewallBlocks\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check for alerts based on metrics\r\n   */\r\n  private async checkAlerts(metrics: MonitoringMetrics): Promise<void> {\r\n    const alerts: string[] = [];\r\n\r\n    // CPU alerts\r\n    if (metrics.system.cpu.usage > this.alertThresholds.cpu.critical) {\r\n      alerts.push(`CRITICAL: CPU usage is ${metrics.system.cpu.usage.toFixed(1)}%`);\r\n    } else if (metrics.system.cpu.usage > this.alertThresholds.cpu.warning) {\r\n      alerts.push(`WARNING: CPU usage is ${metrics.system.cpu.usage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Memory alerts\r\n    if (metrics.system.memory.percentage > this.alertThresholds.memory.critical) {\r\n      alerts.push(`CRITICAL: Memory usage is ${metrics.system.memory.percentage.toFixed(1)}%`);\r\n    } else if (metrics.system.memory.percentage > this.alertThresholds.memory.warning) {\r\n      alerts.push(`WARNING: Memory usage is ${metrics.system.memory.percentage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Disk alerts\r\n    if (metrics.system.disk.percentage > this.alertThresholds.disk.critical) {\r\n      alerts.push(`CRITICAL: Disk usage is ${metrics.system.disk.percentage.toFixed(1)}%`);\r\n    } else if (metrics.system.disk.percentage > this.alertThresholds.disk.warning) {\r\n      alerts.push(`WARNING: Disk usage is ${metrics.system.disk.percentage.toFixed(1)}%`);\r\n    }\r\n\r\n    // Temperature alerts\r\n    if (metrics.system.cpu.temperature > this.alertThresholds.temperature.critical) {\r\n      alerts.push(`CRITICAL: CPU temperature is ${metrics.system.cpu.temperature}°C`);\r\n    } else if (metrics.system.cpu.temperature > this.alertThresholds.temperature.warning) {\r\n      alerts.push(`WARNING: CPU temperature is ${metrics.system.cpu.temperature}°C`);\r\n    }\r\n\r\n    // Application health alerts\r\n    if (!metrics.application.apiHealth) {\r\n      alerts.push('CRITICAL: API service is not responding');\r\n    }\r\n\r\n    if (!metrics.application.tunnelHealth) {\r\n      alerts.push('WARNING: SSH tunnel may be down');\r\n    }\r\n\r\n    // Process alerts\r\n    const failedProcesses = metrics.application.processes.filter(p => p.status !== 'online');\r\n    if (failedProcesses.length > 0) {\r\n      alerts.push(`WARNING: ${failedProcesses.length} processes are not running`);\r\n    }\r\n\r\n    // Send alerts if any\r\n    if (alerts.length > 0) {\r\n      await this.sendAlerts(alerts);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send alerts via configured channels\r\n   */\r\n  private async sendAlerts(alerts: string[]): Promise<void> {\r\n    const alertMessage = `🚨 AI Crypto Trading Agent Alerts:\\n${alerts.join('\\n')}`;\r\n    \r\n    logger.warn('System alerts:', alerts);\r\n\r\n    // Here you would integrate with notification services\r\n    // For now, just log the alerts\r\n    \r\n    // Save alerts to file\r\n    const alertsDir = join(process.cwd(), 'logs', 'alerts');\r\n    if (!existsSync(alertsDir)) {\r\n      mkdirSync(alertsDir, { recursive: true });\r\n    }\r\n\r\n    const alertFile = join(alertsDir, `alerts-${new Date().toISOString().split('T')[0]}.log`);\r\n    const alertEntry = `${new Date().toISOString()}: ${alertMessage}\\n`;\r\n    \r\n    try {\r\n      writeFileSync(alertFile, alertEntry, { flag: 'a' });\r\n    } catch (error) {\r\n      logger.error('Failed to write alert to file:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform comprehensive health check\r\n   */\r\n  private async performHealthCheck(): Promise<void> {\r\n    const healthStatus = {\r\n      timestamp: new Date(),\r\n      overall: 'HEALTHY',\r\n      checks: {}\r\n    };\r\n\r\n    try {\r\n      // Check system resources\r\n      const metrics = await this.collectMetrics();\r\n      \r\n      healthStatus.checks['system'] = {\r\n        status: metrics.system.cpu.usage < 80 && metrics.system.memory.percentage < 85 ? 'HEALTHY' : 'WARNING',\r\n        details: {\r\n          cpu: `${metrics.system.cpu.usage.toFixed(1)}%`,\r\n          memory: `${metrics.system.memory.percentage.toFixed(1)}%`,\r\n          disk: `${metrics.system.disk.percentage.toFixed(1)}%`\r\n        }\r\n      };\r\n\r\n      // Check application services\r\n      healthStatus.checks['services'] = {\r\n        status: metrics.application.apiHealth && metrics.application.tunnelHealth ? 'HEALTHY' : 'CRITICAL',\r\n        details: {\r\n          api: metrics.application.apiHealth ? 'UP' : 'DOWN',\r\n          dashboard: metrics.application.dashboardHealth ? 'UP' : 'DOWN',\r\n          tunnel: metrics.application.tunnelHealth ? 'UP' : 'DOWN'\r\n        }\r\n      };\r\n\r\n      // Check database\r\n      const dbHealthy = await databaseSetup.validateIntegrity();\r\n      healthStatus.checks['database'] = {\r\n        status: dbHealthy ? 'HEALTHY' : 'CRITICAL',\r\n        details: { integrity: dbHealthy ? 'OK' : 'FAILED' }\r\n      };\r\n\r\n      // Determine overall status\r\n      const statuses = Object.values(healthStatus.checks).map(check => check.status);\r\n      if (statuses.includes('CRITICAL')) {\r\n        healthStatus.overall = 'CRITICAL';\r\n      } else if (statuses.includes('WARNING')) {\r\n        healthStatus.overall = 'WARNING';\r\n      }\r\n\r\n      // Save health status\r\n      const healthFile = join(process.cwd(), 'logs', 'health-status.json');\r\n      writeFileSync(healthFile, JSON.stringify(healthStatus, null, 2));\r\n\r\n    } catch (error) {\r\n      logger.error('Health check failed:', error);\r\n      healthStatus.overall = 'ERROR';\r\n      healthStatus.checks['error'] = { status: 'ERROR', details: error.message };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Maintenance task implementations\r\n   */\r\n  private async rotateLogFiles(): Promise<void> {\r\n    logger.info('🔄 Rotating log files...');\r\n    \r\n    try {\r\n      // Use logrotate if available\r\n      execSync('sudo logrotate -f /etc/logrotate.d/ai-crypto-trading', { stdio: 'pipe' });\r\n    } catch {\r\n      // Manual log rotation\r\n      const logsDir = join(process.cwd(), 'logs');\r\n      if (existsSync(logsDir)) {\r\n        const timestamp = new Date().toISOString().split('T')[0];\r\n        execSync(`find ${logsDir} -name \"*.log\" -size +100M -exec gzip {} \\\\;`);\r\n        execSync(`find ${logsDir} -name \"*.gz\" -mtime +30 -delete`);\r\n      }\r\n    }\r\n    \r\n    logger.info('✅ Log rotation completed');\r\n  }\r\n\r\n  private async performSystemCleanup(): Promise<void> {\r\n    logger.info('🧹 Performing system cleanup...');\r\n    \r\n    try {\r\n      // Clean package cache\r\n      execSync('sudo apt autoremove -y', { stdio: 'pipe' });\r\n      execSync('sudo apt autoclean', { stdio: 'pipe' });\r\n      \r\n      // Clean temporary files\r\n      execSync('sudo find /tmp -type f -atime +7 -delete', { stdio: 'pipe' });\r\n      \r\n      // Clean old logs\r\n      execSync('sudo journalctl --vacuum-time=30d', { stdio: 'pipe' });\r\n      \r\n    } catch (error) {\r\n      logger.error('System cleanup error:', error);\r\n    }\r\n    \r\n    logger.info('✅ System cleanup completed');\r\n  }\r\n\r\n  private async performSecurityScan(): Promise<void> {\r\n    logger.info('🔒 Performing security scan...');\r\n    \r\n    try {\r\n      // Run npm audit\r\n      execSync('npm audit --audit-level moderate', { stdio: 'pipe' });\r\n      \r\n      // Check for security updates\r\n      execSync('sudo apt list --upgradable | grep -i security', { stdio: 'pipe' });\r\n      \r\n    } catch (error) {\r\n      logger.warn('Security scan completed with warnings');\r\n    }\r\n    \r\n    logger.info('✅ Security scan completed');\r\n  }\r\n\r\n  private async optimizePerformance(): Promise<void> {\r\n    logger.info('⚡ Optimizing system performance...');\r\n    \r\n    try {\r\n      // Clear memory caches\r\n      execSync('sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches', { stdio: 'pipe' });\r\n      \r\n      // Optimize database\r\n      await databaseSetup.run('VACUUM');\r\n      await databaseSetup.run('ANALYZE');\r\n      \r\n    } catch (error) {\r\n      logger.error('Performance optimization error:', error);\r\n    }\r\n    \r\n    logger.info('✅ Performance optimization completed');\r\n  }\r\n\r\n  private async generateHealthReport(): Promise<void> {\r\n    logger.info('📊 Generating health report...');\r\n    \r\n    const report = {\r\n      timestamp: new Date(),\r\n      system: await this.collectSystemMetrics(),\r\n      application: await this.collectApplicationMetrics(),\r\n      maintenance: {\r\n        lastTasks: this.maintenanceTasks.map(task => ({\r\n          name: task.name,\r\n          lastRun: task.lastRun,\r\n          enabled: task.enabled\r\n        }))\r\n      },\r\n      recommendations: this.generateRecommendations()\r\n    };\r\n    \r\n    const reportFile = join(process.cwd(), 'logs', `health-report-${new Date().toISOString().split('T')[0]}.json`);\r\n    writeFileSync(reportFile, JSON.stringify(report, null, 2));\r\n    \r\n    logger.info(`✅ Health report generated: ${reportFile}`);\r\n  }\r\n\r\n  private async cleanupOldBackups(): Promise<void> {\r\n    logger.info('🗑️ Cleaning up old backups...');\r\n    \r\n    const backupsDir = join(process.cwd(), 'backups');\r\n    if (existsSync(backupsDir)) {\r\n      // Keep backups for 30 days\r\n      execSync(`find ${backupsDir} -type f -mtime +30 -delete`, { stdio: 'pipe' });\r\n    }\r\n    \r\n    logger.info('✅ Backup cleanup completed');\r\n  }\r\n\r\n  private generateRecommendations(): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    if (this.metrics.length > 0) {\r\n      const latestMetrics = this.metrics[this.metrics.length - 1];\r\n      \r\n      if (latestMetrics.system.cpu.usage > 70) {\r\n        recommendations.push('Consider optimizing CPU-intensive processes');\r\n      }\r\n      \r\n      if (latestMetrics.system.memory.percentage > 80) {\r\n        recommendations.push('Monitor memory usage and consider adding more RAM');\r\n      }\r\n      \r\n      if (latestMetrics.system.disk.percentage > 80) {\r\n        recommendations.push('Clean up disk space or add more storage');\r\n      }\r\n      \r\n      if (!latestMetrics.application.apiHealth) {\r\n        recommendations.push('Investigate API service issues');\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Get current metrics\r\n   */\r\n  getMetrics(): MonitoringMetrics[] {\r\n    return this.metrics;\r\n  }\r\n\r\n  /**\r\n   * Get maintenance task status\r\n   */\r\n  getMaintenanceStatus(): MaintenanceTask[] {\r\n    return this.maintenanceTasks;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const monitoringAutomation = new MonitoringAutomation();\r\n"],"mappings":";;AAAA;;;;;;;;AAAA;AAAA,SAAAA,ccAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,MAAAgC,eAAA;AAAA;AAAA,CAAAjC,aAAA,GAAAoB,CAAA,QAAAc,OAAA;AACA,MAAAC,IAAA;AAAA;AAAA,CAAAnC,aAAA,GAAAoB,CAAA,QAAAc,OAAA;AACA,MAAAE,MAAA;AAAA;AAAA,CAAApC,aAAA,GAAAoB,CAAA,QAAAc,OAAA;AACA,MAAAG,QAAA;AAAA;AAAA,CAAArC,aAAA,GAAAoB,CAAA,QAAAc,OAAA;AACA,MAAAI,gBAAA;AAAA;AAAA,CAAAtC,aAAA,GAAAoB,CAAA,QAAAc,OAAA;AACA,MAAAK,IAAA;AAAA;AAAA,CAAAvC,aAAA,GAAAoB,CAAA,QAAAoB,YAAA,CAAAN,OAAA;AAiFA,MAAaO,oBAAoB;EACvBC,OAAO;EAAA;EAAA,CAAA1C,aAAA,GAAAoB,CAAA,QAAwB,EAAE;EACjCuB,gBAAgB;EAAA;EAAA,CAAA3C,aAAA,GAAAoB,CAAA,QAAsB,EAAE;EACxCwB,eAAe;EACfC,SAAS;EAAA;EAAA,CAAA7C,aAAA,GAAAoB,CAAA,QAAY,KAAK;EAElC0B,YAAA;IAAA;IAAA9C,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACE,IAAI,CAAC2B,yBAAyB,EAAE;IAAC;IAAA/C,aAAA,GAAAoB,CAAA;IACjC,IAAI,CAAC4B,0BAA0B,EAAE;EACnC;EAEA;;;EAGA,MAAMxC,KAAKA,CAAA;IAAA;IAAAR,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACT,IAAI,IAAI,CAACyB,SAAS,EAAE;MAAA;MAAA7C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAClBiB,QAAA,CAAAY,MAAM,CAACC,IAAI,CAAC,0CAA0C,CAAC;MAAC;MAAAlD,aAAA,GAAAoB,CAAA;MACxD;IACF,CAAC;IAAA;IAAA;MAAApB,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,sDAAsD,CAAC;IAEnE;IAAA;IAAAnD,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACgC,qBAAqB,EAAE;IAE5B;IAAA;IAAApD,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACiC,wBAAwB,EAAE;IAE/B;IAAA;IAAArD,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACkC,iBAAiB,EAAE;IAAC;IAAAtD,aAAA,GAAAoB,CAAA;IAEzB,IAAI,CAACyB,SAAS,GAAG,IAAI;IAAC;IAAA7C,aAAA,GAAAoB,CAAA;IACtBiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,iDAAiD,CAAC;EAChE;EAEA;;;EAGA,MAAMI,IAAIA,CAAA;IAAA;IAAAvD,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACR,IAAI,CAAC,IAAI,CAACyB,SAAS,EAAE;MAAA;MAAA7C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACnB;IACF,CAAC;IAAA;IAAA;MAAApB,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,sDAAsD,CAAC;IAEnE;IAAA;IAAAnD,aAAA,GAAAoB,CAAA;IACAmB,IAAI,CAACiB,QAAQ,EAAE,CAACC,OAAO,CAACC,IAAI,IAAI;MAAA;MAAA1D,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAsC,IAAI,CAACH,IAAI,EAAE;IAAF,CAAE,CAAC;IAAC;IAAAvD,aAAA,GAAAoB,CAAA;IAE7C,IAAI,CAACyB,SAAS,GAAG,KAAK;IAAC;IAAA7C,aAAA,GAAAoB,CAAA;IACvBiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,iDAAiD,CAAC;EAChE;EAEA;;;EAGQJ,yBAAyBA,CAAA;IAAA;IAAA/C,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC/B,IAAI,CAACwB,eAAe,GAAG;MACrBe,GAAG,EAAE;QACHC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;OACX;MACDC,MAAM,EAAE;QACNF,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;OACX;MACDE,IAAI,EAAE;QACJH,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;OACX;MACDG,WAAW,EAAE;QACXJ,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE;OACX;MACDI,YAAY,EAAE;QACZL,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE;OACX;MACDK,SAAS,EAAE;QACTN,OAAO,EAAE,IAAI;QACbC,QAAQ,EAAE;;KAEb;EACH;EAEA;;;EAGQb,0BAA0BA,CAAA;IAAA;IAAAhD,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAChC,IAAI,CAACuB,gBAAgB,GAAG,CACtB;MACE9B,IAAI,EAAE,iBAAiB;MACvBsD,WAAW,EAAE,wBAAwB;MACrCC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QACjB,MAAMkD,SAAS;QAAA;QAAA,CAAAvE,aAAA,GAAAoB,CAAA,QAAG,IAAIoD,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;QAChE,MAAMC,UAAU;QAAA;QAAA,CAAA3E,aAAA,GAAAoB,CAAA,QAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACC,OAAO,CAACC,GAAG,EAAE,EAAE,SAAS,EAAE,aAAaP,SAAS,KAAK,CAAC;QAAC;QAAAvE,aAAA,GAAAoB,CAAA;QAC/E,MAAMkB,gBAAA,CAAAyC,aAAa,CAACC,MAAM,CAACL,UAAU,CAAC;MACxC;KACD,EACD;MACE9D,IAAI,EAAE,cAAc;MACpBsD,WAAW,EAAE,8BAA8B;MAC3CC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACjB,MAAM,IAAI,CAAC6D,cAAc,EAAE;MAC7B;KACD,EACD;MACEpE,IAAI,EAAE,gBAAgB;MACtBsD,WAAW,EAAE,2CAA2C;MACxDC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACjB,MAAM,IAAI,CAAC8D,oBAAoB,EAAE;MACnC;KACD,EACD;MACErE,IAAI,EAAE,eAAe;MACrBsD,WAAW,EAAE,iCAAiC;MAC9CC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACjB,MAAM,IAAI,CAAC+D,mBAAmB,EAAE;MAClC;KACD,EACD;MACEtE,IAAI,EAAE,0BAA0B;MAChCsD,WAAW,EAAE,6BAA6B;MAC1CC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACjB,MAAM,IAAI,CAACgE,mBAAmB,EAAE;MAClC;KACD,EACD;MACEvE,IAAI,EAAE,eAAe;MACrBsD,WAAW,EAAE,sCAAsC;MACnDC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACjB,MAAM,IAAI,CAACiE,oBAAoB,EAAE;MACnC;KACD,EACD;MACExE,IAAI,EAAE,gBAAgB;MACtBsD,WAAW,EAAE,wBAAwB;MACrCC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAAA,CAAA,KAAW;QAAA;QAAAtE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACjB,MAAM,IAAI,CAACkE,iBAAiB,EAAE;MAChC;KACD,CACF;EACH;EAEA;;;EAGQlC,qBAAqBA,CAAA;IAAA;IAAApD,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC3B;IACAmB,IAAI,CAAC6B,QAAQ,CAAC,WAAW,EAAE,YAAW;MAAA;MAAApE,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACpC,IAAI;QACF,MAAMsB,OAAO;QAAA;QAAA,CAAA1C,aAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACmE,cAAc,EAAE;QAAC;QAAAvF,aAAA,GAAAoB,CAAA;QAC5C,IAAI,CAACsB,OAAO,CAAC8C,IAAI,CAAC9C,OAAO,CAAC;QAE1B;QAAA;QAAA1C,aAAA,GAAAoB,CAAA;QACA,IAAI,IAAI,CAACsB,OAAO,CAAC+C,MAAM,GAAG,IAAI,EAAE;UAAA;UAAAzF,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAC9B,IAAI,CAACsB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACgD,KAAK,CAAC,CAAC,IAAI,CAAC;QAC1C,CAAC;QAAA;QAAA;UAAA1F,aAAA,GAAAsB,CAAA;QAAA;QAED;QAAAtB,aAAA,GAAAoB,CAAA;QACA,MAAM,IAAI,CAACuE,WAAW,CAACjD,OAAO,CAAC;MAEjC,CAAC,CAAC,OAAOkD,KAAK,EAAE;QAAA;QAAA5F,aAAA,GAAAoB,CAAA;QACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC,CAAC;EACJ;EAEA;;;EAGQvC,wBAAwBA,CAAA;IAAA;IAAArD,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC9B,KAAK,MAAMsC,IAAI,IAAI,IAAI,CAACf,gBAAgB,EAAE;MAAA;MAAA3C,aAAA,GAAAoB,CAAA;MACxC,IAAIsC,IAAI,CAACW,OAAO,EAAE;QAAA;QAAArE,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAChBmB,IAAI,CAAC6B,QAAQ,CAACV,IAAI,CAACU,QAAQ,EAAE,YAAW;UAAA;UAAApE,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UACtCiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,gCAAgCO,IAAI,CAAC7C,IAAI,EAAE,CAAC;UAAC;UAAAb,aAAA,GAAAoB,CAAA;UAEzD,IAAI;YAAA;YAAApB,aAAA,GAAAoB,CAAA;YACF,MAAMsC,IAAI,CAACY,MAAM,EAAE;YAAC;YAAAtE,aAAA,GAAAoB,CAAA;YACpBsC,IAAI,CAACmC,OAAO,GAAG,IAAIrB,IAAI,EAAE;YAAC;YAAAxE,aAAA,GAAAoB,CAAA;YAC1BiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,iCAAiCO,IAAI,CAAC7C,IAAI,EAAE,CAAC;UAC3D,CAAC,CAAC,OAAO+E,KAAK,EAAE;YAAA;YAAA5F,aAAA,GAAAoB,CAAA;YACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,8BAA8BlC,IAAI,CAAC7C,IAAI,EAAE,EAAE+E,KAAK,CAAC;UAChE;QACF,CAAC,CAAC;MACJ,CAAC;MAAA;MAAA;QAAA5F,aAAA,GAAAsB,CAAA;MAAA;IACH;EACF;EAEA;;;EAGQgC,iBAAiBA,CAAA;IAAA;IAAAtD,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACvB;IACAmB,IAAI,CAAC6B,QAAQ,CAAC,aAAa,EAAE,YAAW;MAAA;MAAApE,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACtC,IAAI;QAAA;QAAApB,aAAA,GAAAoB,CAAA;QACF,MAAM,IAAI,CAAC0E,kBAAkB,EAAE;MACjC,CAAC,CAAC,OAAOF,KAAK,EAAE;QAAA;QAAA5F,aAAA,GAAAoB,CAAA;QACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC,CAAC;EACJ;EAEA;;;EAGQ,MAAML,cAAcA,CAAA;IAAA;IAAAvF,aAAA,GAAAqB,CAAA;IAC1B,MAAMkD,SAAS;IAAA;IAAA,CAAAvE,aAAA,GAAAoB,CAAA,QAAG,IAAIoD,IAAI,EAAE;IAE5B;IACA,MAAMuB,aAAa;IAAA;IAAA,CAAA/F,aAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC4E,oBAAoB,EAAE;IAEvD;IACA,MAAMC,kBAAkB;IAAA;IAAA,CAAAjG,aAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAAC8E,yBAAyB,EAAE;IAEjE;IACA,MAAMC,cAAc;IAAA;IAAA,CAAAnG,aAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACgF,qBAAqB,EAAE;IAEzD;IACA,MAAMC,eAAe;IAAA;IAAA,CAAArG,aAAA,GAAAoB,CAAA,SAAG,MAAM,IAAI,CAACkF,sBAAsB,EAAE;IAAC;IAAAtG,aAAA,GAAAoB,CAAA;IAE5D,OAAO;MACLmD,SAAS;MACTgC,MAAM,EAAER,aAAa;MACrBS,WAAW,EAAEP,kBAAkB;MAC/BQ,OAAO,EAAEN,cAAc;MACvBO,QAAQ,EAAEL;KACX;EACH;EAEA;;;EAGQ,MAAML,oBAAoBA,CAAA;IAAA;IAAAhG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAChC,IAAI;MACF;MACA,MAAMuF,QAAQ;MAAA;MAAA,CAAA3G,aAAA,GAAAoB,CAAA,SAAGwF,UAAU,CAAC,IAAA3E,eAAA,CAAA4E,QAAQ,EAAC,6DAA6D,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE,CAAC,CAACC,IAAI,EAAE,CAAC;MAClI,MAAMC,WAAW;MAAA;MAAA,CAAAhH,aAAA,GAAAoB,CAAA;MAAG;MAAA,CAAApB,aAAA,GAAAsB,CAAA,eAAAW,eAAA,CAAA4E,QAAQ,EAAC,QAAQ,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE,CAAC,CAACG,KAAK,CAAC,4CAA4C,CAAC,EAAEvB,KAAK,CAAC,CAAC,CAAC,CAACwB,GAAG,CAACC,MAAM,CAAC;MAAA;MAAA,CAAAnH,aAAA,GAAAsB,CAAA,WAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAEpJ;MACA,IAAI0C,WAAW;MAAA;MAAA,CAAAhE,aAAA,GAAAoB,CAAA,SAAG,CAAC;MAAC;MAAApB,aAAA,GAAAoB,CAAA;MACpB,IAAI;QAAA;QAAApB,aAAA,GAAAoB,CAAA;QACF4C,WAAW;QAAG;QAAA,CAAAhE,aAAA,GAAAsB,CAAA,WAAAsF,UAAU,CAAC,IAAA3E,eAAA,CAAA4E,QAAQ,EAAC,4EAA4E,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE,CAAC,CAACC,IAAI,EAAE,CAAC;QAAA;QAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAI,CAAC;MACrJ,CAAC,CAAC,MAAM;QACN;MAAA;MAGF;MACA,MAAM8F,OAAO;MAAA;MAAA,CAAApH,aAAA,GAAAoB,CAAA,SAAG,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,SAAS,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE,CAAC,CAACO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,KAAK,CAAC;MACtF,MAAMC,QAAQ;MAAA;MAAA,CAAAtH,aAAA,GAAAoB,CAAA,SAAGmG,QAAQ,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;MACrC,MAAMI,OAAO;MAAA;MAAA,CAAAxH,aAAA,GAAAoB,CAAA,SAAGmG,QAAQ,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;MACpC,MAAMK,YAAY;MAAA;MAAA,CAAAzH,aAAA,GAAAoB,CAAA,SAAGmG,QAAQ,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC;MAEzC;MACA,MAAMM,QAAQ;MAAA;MAAA,CAAA1H,aAAA,GAAAoB,CAAA,SAAG,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,oBAAoB,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE,CAAC,CAACO,KAAK,CAAC,KAAK,CAAC;MACnF,MAAMM,SAAS;MAAA;MAAA,CAAA3H,aAAA,GAAAoB,CAAA,SAAGmG,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;MACvC,MAAME,QAAQ;MAAA;MAAA,CAAA5H,aAAA,GAAAoB,CAAA,SAAGmG,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;MACtC,MAAMG,aAAa;MAAA;MAAA,CAAA7H,aAAA,GAAAoB,CAAA,SAAGmG,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;MAE3C;MACA,IAAII,cAAc;MAAA;MAAA,CAAA9H,aAAA,GAAAoB,CAAA,SAAG;QAAE2G,OAAO,EAAE,CAAC;QAAEC,QAAQ,EAAE,CAAC;QAAEC,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAC,CAAE;MAAC;MAAAlI,aAAA,GAAAoB,CAAA;MAC9E,IAAI;QACF,MAAM+G,QAAQ;QAAA;QAAA,CAAAnI,aAAA,GAAAoB,CAAA,SAAG,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,mFAAmF,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE,CAAC,CAACC,IAAI,EAAE;QAAC;QAAA/G,aAAA,GAAAoB,CAAA;QAC7I,IAAI+G,QAAQ,EAAE;UAAA;UAAAnI,aAAA,GAAAsB,CAAA;UACZ,MAAM8G,KAAK;UAAA;UAAA,CAAApI,aAAA,GAAAoB,CAAA,SAAG+G,QAAQ,CAACd,KAAK,CAAC,KAAK,CAAC;UAAC;UAAArH,aAAA,GAAAoB,CAAA;UACpC0G,cAAc,GAAG;YACfC,OAAO;YAAE;YAAA,CAAA/H,aAAA,GAAAsB,CAAA,WAAAiG,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC;YAAA;YAAA,CAAApI,aAAA,GAAAsB,CAAA,WAAI,CAAC;YAChC0G,QAAQ;YAAE;YAAA,CAAAhI,aAAA,GAAAsB,CAAA,WAAAiG,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC;YAAA;YAAA,CAAApI,aAAA,GAAAsB,CAAA,WAAI,CAAC;YACjC2G,SAAS;YAAE;YAAA,CAAAjI,aAAA,GAAAsB,CAAA,WAAAiG,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC;YAAA;YAAA,CAAApI,aAAA,GAAAsB,CAAA,WAAI,CAAC;YAClC4G,UAAU;YAAE;YAAA,CAAAlI,aAAA,GAAAsB,CAAA,WAAAiG,QAAQ,CAACa,KAAK,CAAC,EAAE,CAAC,CAAC;YAAA;YAAA,CAAApI,aAAA,GAAAsB,CAAA,WAAI,CAAC;WACrC;QACH,CAAC;QAAA;QAAA;UAAAtB,aAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC,MAAM;QACN;MAAA;MACD;MAAAtB,aAAA,GAAAoB,CAAA;MAED,OAAO;QACLuC,GAAG,EAAE;UACH0E,KAAK,EAAE1B,QAAQ;UACf3C,WAAW;UACXgD;SACD;QACDlD,MAAM,EAAE;UACNwE,KAAK,EAAEhB,QAAQ;UACfiB,IAAI,EAAEf,OAAO;UACbgB,SAAS,EAAEf,YAAY;UACvBgB,UAAU,EAAGjB,OAAO,GAAGF,QAAQ,GAAI;SACpC;QACDvD,IAAI,EAAE;UACJuE,KAAK,EAAEX,SAAS;UAChBY,IAAI,EAAEX,QAAQ;UACdY,SAAS,EAAEX,aAAa;UACxBY,UAAU,EAAGb,QAAQ,GAAGD,SAAS,GAAI;SACtC;QACDe,OAAO,EAAEZ;OACV;IAEH,CAAC,CAAC,OAAOlC,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAAC;MAAA5F,aAAA,GAAAoB,CAAA;MACxD,MAAMwE,KAAK;IACb;EACF;EAEA;;;EAGQ,MAAMM,yBAAyBA,CAAA;IAAA;IAAAlG,aAAA,GAAAqB,CAAA;IACrC,MAAMsH,SAAS;IAAA;IAAA,CAAA3I,aAAA,GAAAoB,CAAA,SAAoB,EAAE;IACrC,IAAIwH,SAAS;IAAA;IAAA,CAAA5I,aAAA,GAAAoB,CAAA,SAAG,KAAK;IACrB,IAAIyH,eAAe;IAAA;IAAA,CAAA7I,aAAA,GAAAoB,CAAA,SAAG,KAAK;IAC3B,IAAI0H,YAAY;IAAA;IAAA,CAAA9I,aAAA,GAAAoB,CAAA,SAAG,KAAK;IACxB,IAAI6C,YAAY;IAAA;IAAA,CAAAjE,aAAA,GAAAoB,CAAA,SAAG,CAAC;IACpB,IAAI8C,SAAS;IAAA;IAAA,CAAAlE,aAAA,GAAAoB,CAAA,SAAG,CAAC;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAElB,IAAI;MACF;MACA,MAAM2H,OAAO;MAAA;MAAA,CAAA/I,aAAA,GAAAoB,CAAA,SAAG,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,WAAW,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE,CAAC;MAC5D,MAAMkC,WAAW;MAAA;MAAA,CAAAhJ,aAAA,GAAAoB,CAAA,SAAG6H,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;MAAC;MAAA/I,aAAA,GAAAoB,CAAA;MAExC,KAAK,MAAM+H,IAAI,IAAIH,WAAW,EAAE;QAAA;QAAAhJ,aAAA,GAAAoB,CAAA;QAC9BuH,SAAS,CAACnD,IAAI,CAAC;UACb3E,IAAI,EAAEsI,IAAI,CAACtI,IAAI;UACfuI,GAAG,EAAED,IAAI,CAACC,GAAG;UACbC,MAAM,EAAEF,IAAI,CAACG,OAAO,CAACD,MAAM;UAC3B1F,GAAG,EAAEwF,IAAI,CAACI,KAAK,CAAC5F,GAAG;UACnBG,MAAM,EAAEqF,IAAI,CAACI,KAAK,CAACzF,MAAM;UACzB0F,MAAM,EAAEhF,IAAI,CAACiF,GAAG,EAAE,GAAGN,IAAI,CAACG,OAAO,CAACI,SAAS;UAC3CC,QAAQ,EAAER,IAAI,CAACG,OAAO,CAACM;SACxB,CAAC;MACJ;MAEA;MAAA;MAAA5J,aAAA,GAAAoB,CAAA;MACA,IAAI;QACF,MAAMyI,SAAS;QAAA;QAAA,CAAA7J,aAAA,GAAAoB,CAAA,SAAGoD,IAAI,CAACiF,GAAG,EAAE;QAAC;QAAAzJ,aAAA,GAAAoB,CAAA;QAC7B,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,6CAA6C,EAAE;UAAEiD,KAAK,EAAE;QAAM,CAAE,CAAC;QAAC;QAAA9J,aAAA,GAAAoB,CAAA;QAC3E6C,YAAY,GAAGO,IAAI,CAACiF,GAAG,EAAE,GAAGI,SAAS;QAAC;QAAA7J,aAAA,GAAAoB,CAAA;QACtCwH,SAAS,GAAG,IAAI;MAClB,CAAC,CAAC,MAAM;QAAA;QAAA5I,aAAA,GAAAoB,CAAA;QACNwH,SAAS,GAAG,KAAK;MACnB;MAEA;MAAA;MAAA5I,aAAA,GAAAoB,CAAA;MACA,IAAI;QAAA;QAAApB,aAAA,GAAAoB,CAAA;QACF,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,+BAA+B,EAAE;UAAEiD,KAAK,EAAE;QAAM,CAAE,CAAC;QAAC;QAAA9J,aAAA,GAAAoB,CAAA;QAC7DyH,eAAe,GAAG,IAAI;MACxB,CAAC,CAAC,MAAM;QAAA;QAAA7I,aAAA,GAAAoB,CAAA;QACNyH,eAAe,GAAG,KAAK;MACzB;MAEA;MAAA;MAAA7I,aAAA,GAAAoB,CAAA;MACA0H,YAAY,GAAGH,SAAS,CAACoB,IAAI,CAACC,CAAC,IAAI;QAAA;QAAAhK,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,kCAAApB,aAAA,GAAAsB,CAAA,WAAA0I,CAAC,CAACnJ,IAAI,CAACoJ,QAAQ,CAAC,QAAQ,CAAC;QAAA;QAAA,CAAAjK,aAAA,GAAAsB,CAAA,WAAI0I,CAAC,CAACX,MAAM,KAAK,QAAQ;MAAR,CAAQ,CAAC;IAExF,CAAC,CAAC,OAAOzD,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC9D;IAAC;IAAA5F,aAAA,GAAAoB,CAAA;IAED,OAAO;MACLuH,SAAS;MACTC,SAAS;MACTC,eAAe;MACfC,YAAY;MACZ7E,YAAY;MACZC;KACD;EACH;EAEA;;;EAGQ,MAAMkC,qBAAqBA,CAAA;IAAA;IAAApG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACjC;IACA;IACA,OAAO;MACL8I,YAAY,EAAE,CAAC;MACfC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC;MACVC,YAAY,EAAE;KACf;EACH;EAEA;;;EAGQ,MAAMhE,sBAAsBA,CAAA;IAAA;IAAAtG,aAAA,GAAAqB,CAAA;IAClC,IAAIkJ,YAAY;IAAA;IAAA,CAAAvK,aAAA,GAAAoB,CAAA,SAAG,CAAC;IACpB,IAAIoJ,oBAAoB;IAAA;IAAA,CAAAxK,aAAA,GAAAoB,CAAA,SAAG,CAAC;IAC5B,IAAIqJ,cAAc;IAAA;IAAA,CAAAzK,aAAA,GAAAoB,CAAA,SAAG,CAAC;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAEvB,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAI,IAAAe,IAAA,CAAAuI,UAAU,EAAC,mBAAmB,CAAC,EAAE;QAAA;QAAA1K,aAAA,GAAAsB,CAAA;QACnC,MAAMqJ,OAAO;QAAA;QAAA,CAAA3K,aAAA,GAAAoB,CAAA,SAAG,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,kDAAkD,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE,CAAC;QAAC;QAAA9G,aAAA,GAAAoB,CAAA;QACpGmJ,YAAY;QAAG;QAAA,CAAAvK,aAAA,GAAAsB,CAAA,WAAAiG,QAAQ,CAACoD,OAAO,CAAC5D,IAAI,EAAE,CAAC;QAAA;QAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAI,CAAC;MAC9C,CAAC;MAAA;MAAA;QAAAtB,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA,IAAI;QACF,MAAMwJ,MAAM;QAAA;QAAA,CAAA5K,aAAA,GAAAoB,CAAA,SAAG,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,2CAA2C,EAAE;UAAEC,QAAQ,EAAE;QAAO,CAAE,CAAC;QAAC;QAAA9G,aAAA,GAAAoB,CAAA;QAC5FqJ,cAAc;QAAG;QAAA,CAAAzK,aAAA,GAAAsB,CAAA,WAAAiG,QAAQ,CAACqD,MAAM,CAAC7D,IAAI,EAAE,CAAC;QAAA;QAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAI,CAAC;MAC/C,CAAC,CAAC,MAAM;QACN;MAAA;IAGJ,CAAC,CAAC,OAAOsE,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC3D;IAAC;IAAA5F,aAAA,GAAAoB,CAAA;IAED,OAAO;MACLmJ,YAAY;MACZC,oBAAoB;MACpBC;KACD;EACH;EAEA;;;EAGQ,MAAM9E,WAAWA,CAACjD,OAA0B;IAAA;IAAA1C,aAAA,GAAAqB,CAAA;IAClD,MAAMwJ,MAAM;IAAA;IAAA,CAAA7K,aAAA,GAAAoB,CAAA,SAAa,EAAE;IAE3B;IAAA;IAAApB,aAAA,GAAAoB,CAAA;IACA,IAAIsB,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,GAAG,IAAI,CAACzF,eAAe,CAACe,GAAG,CAACE,QAAQ,EAAE;MAAA;MAAA7D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAChEyJ,MAAM,CAACrF,IAAI,CAAC,0BAA0B9C,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,CAACyC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IAC/E,CAAC,MAAM;MAAA;MAAA9K,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,IAAIsB,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,GAAG,IAAI,CAACzF,eAAe,CAACe,GAAG,CAACC,OAAO,EAAE;QAAA;QAAA5D,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACtEyJ,MAAM,CAACrF,IAAI,CAAC,yBAAyB9C,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,CAACyC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;MAC9E,CAAC;MAAA;MAAA;QAAA9K,aAAA,GAAAsB,CAAA;MAAA;IAAD;IAEA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IACA,IAAIsB,OAAO,CAAC6D,MAAM,CAACzC,MAAM,CAAC2E,UAAU,GAAG,IAAI,CAAC7F,eAAe,CAACkB,MAAM,CAACD,QAAQ,EAAE;MAAA;MAAA7D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC3EyJ,MAAM,CAACrF,IAAI,CAAC,6BAA6B9C,OAAO,CAAC6D,MAAM,CAACzC,MAAM,CAAC2E,UAAU,CAACqC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IAC1F,CAAC,MAAM;MAAA;MAAA9K,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,IAAIsB,OAAO,CAAC6D,MAAM,CAACzC,MAAM,CAAC2E,UAAU,GAAG,IAAI,CAAC7F,eAAe,CAACkB,MAAM,CAACF,OAAO,EAAE;QAAA;QAAA5D,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACjFyJ,MAAM,CAACrF,IAAI,CAAC,4BAA4B9C,OAAO,CAAC6D,MAAM,CAACzC,MAAM,CAAC2E,UAAU,CAACqC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;MACzF,CAAC;MAAA;MAAA;QAAA9K,aAAA,GAAAsB,CAAA;MAAA;IAAD;IAEA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IACA,IAAIsB,OAAO,CAAC6D,MAAM,CAACxC,IAAI,CAAC0E,UAAU,GAAG,IAAI,CAAC7F,eAAe,CAACmB,IAAI,CAACF,QAAQ,EAAE;MAAA;MAAA7D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACvEyJ,MAAM,CAACrF,IAAI,CAAC,2BAA2B9C,OAAO,CAAC6D,MAAM,CAACxC,IAAI,CAAC0E,UAAU,CAACqC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACtF,CAAC,MAAM;MAAA;MAAA9K,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,IAAIsB,OAAO,CAAC6D,MAAM,CAACxC,IAAI,CAAC0E,UAAU,GAAG,IAAI,CAAC7F,eAAe,CAACmB,IAAI,CAACH,OAAO,EAAE;QAAA;QAAA5D,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC7EyJ,MAAM,CAACrF,IAAI,CAAC,0BAA0B9C,OAAO,CAAC6D,MAAM,CAACxC,IAAI,CAAC0E,UAAU,CAACqC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;MACrF,CAAC;MAAA;MAAA;QAAA9K,aAAA,GAAAsB,CAAA;MAAA;IAAD;IAEA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IACA,IAAIsB,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAACK,WAAW,GAAG,IAAI,CAACpB,eAAe,CAACoB,WAAW,CAACH,QAAQ,EAAE;MAAA;MAAA7D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC9EyJ,MAAM,CAACrF,IAAI,CAAC,gCAAgC9C,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAACK,WAAW,IAAI,CAAC;IACjF,CAAC,MAAM;MAAA;MAAAhE,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,IAAIsB,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAACK,WAAW,GAAG,IAAI,CAACpB,eAAe,CAACoB,WAAW,CAACJ,OAAO,EAAE;QAAA;QAAA5D,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACpFyJ,MAAM,CAACrF,IAAI,CAAC,+BAA+B9C,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAACK,WAAW,IAAI,CAAC;MAChF,CAAC;MAAA;MAAA;QAAAhE,aAAA,GAAAsB,CAAA;MAAA;IAAD;IAEA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IACA,IAAI,CAACsB,OAAO,CAAC8D,WAAW,CAACoC,SAAS,EAAE;MAAA;MAAA5I,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAClCyJ,MAAM,CAACrF,IAAI,CAAC,yCAAyC,CAAC;IACxD,CAAC;IAAA;IAAA;MAAAxF,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAED,IAAI,CAACsB,OAAO,CAAC8D,WAAW,CAACsC,YAAY,EAAE;MAAA;MAAA9I,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACrCyJ,MAAM,CAACrF,IAAI,CAAC,iCAAiC,CAAC;IAChD,CAAC;IAAA;IAAA;MAAAxF,aAAA,GAAAsB,CAAA;IAAA;IAED;IACA,MAAMyJ,eAAe;IAAA;IAAA,CAAA/K,aAAA,GAAAoB,CAAA,SAAGsB,OAAO,CAAC8D,WAAW,CAACmC,SAAS,CAACqC,MAAM,CAAChB,CAAC,IAAI;MAAA;MAAAhK,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA4I,CAAC,CAACX,MAAM,KAAK,QAAQ;IAAR,CAAQ,CAAC;IAAC;IAAArJ,aAAA,GAAAoB,CAAA;IACzF,IAAI2J,eAAe,CAACtF,MAAM,GAAG,CAAC,EAAE;MAAA;MAAAzF,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC9ByJ,MAAM,CAACrF,IAAI,CAAC,YAAYuF,eAAe,CAACtF,MAAM,4BAA4B,CAAC;IAC7E,CAAC;IAAA;IAAA;MAAAzF,aAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,aAAA,GAAAoB,CAAA;IACA,IAAIyJ,MAAM,CAACpF,MAAM,GAAG,CAAC,EAAE;MAAA;MAAAzF,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACrB,MAAM,IAAI,CAAC6J,UAAU,CAACJ,MAAM,CAAC;IAC/B,CAAC;IAAA;IAAA;MAAA7K,aAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGQ,MAAM2J,UAAUA,CAACJ,MAAgB;IAAA;IAAA7K,aAAA,GAAAqB,CAAA;IACvC,MAAM6J,YAAY;IAAA;IAAA,CAAAlL,aAAA,GAAAoB,CAAA,SAAG,uCAAuCyJ,MAAM,CAACjG,IAAI,CAAC,IAAI,CAAC,EAAE;IAAC;IAAA5E,aAAA,GAAAoB,CAAA;IAEhFiB,QAAA,CAAAY,MAAM,CAACC,IAAI,CAAC,gBAAgB,EAAE2H,MAAM,CAAC;IAErC;IACA;IAEA;IACA,MAAMM,SAAS;IAAA;IAAA,CAAAnL,aAAA,GAAAoB,CAAA,SAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACC,OAAO,CAACC,GAAG,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;IAAC;IAAA9E,aAAA,GAAAoB,CAAA;IACxD,IAAI,CAAC,IAAAe,IAAA,CAAAuI,UAAU,EAACS,SAAS,CAAC,EAAE;MAAA;MAAAnL,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC1B,IAAAe,IAAA,CAAAiJ,SAAS,EAACD,SAAS,EAAE;QAAEE,SAAS,EAAE;MAAI,CAAE,CAAC;IAC3C,CAAC;IAAA;IAAA;MAAArL,aAAA,GAAAsB,CAAA;IAAA;IAED,MAAMgK,SAAS;IAAA;IAAA,CAAAtL,aAAA,GAAAoB,CAAA,SAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACuG,SAAS,EAAE,UAAU,IAAI3G,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC4C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACzF,MAAMkE,UAAU;IAAA;IAAA,CAAAvL,aAAA,GAAAoB,CAAA,SAAG,GAAG,IAAIoD,IAAI,EAAE,CAACC,WAAW,EAAE,KAAKyG,YAAY,IAAI;IAAC;IAAAlL,aAAA,GAAAoB,CAAA;IAEpE,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF,IAAAe,IAAA,CAAAqJ,aAAa,EAACF,SAAS,EAAEC,UAAU,EAAE;QAAEE,IAAI,EAAE;MAAG,CAAE,CAAC;IACrD,CAAC,CAAC,OAAO7F,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACvD;EACF;EAEA;;;EAGQ,MAAME,kBAAkBA,CAAA;IAAA;IAAA9F,aAAA,GAAAqB,CAAA;IAC9B,MAAMqK,YAAY;IAAA;IAAA,CAAA1L,aAAA,GAAAoB,CAAA,SAAG;MACnBmD,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBmH,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE;KACT;IAAC;IAAA5L,aAAA,GAAAoB,CAAA;IAEF,IAAI;MACF;MACA,MAAMsB,OAAO;MAAA;MAAA,CAAA1C,aAAA,GAAAoB,CAAA,SAAG,MAAM,IAAI,CAACmE,cAAc,EAAE;MAAC;MAAAvF,aAAA,GAAAoB,CAAA;MAE5CsK,YAAY,CAACE,MAAM,CAAC,QAAQ,CAAC,GAAG;QAC9BvC,MAAM;QAAE;QAAA,CAAArJ,aAAA,GAAAsB,CAAA,WAAAoB,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,GAAG,EAAE;QAAA;QAAA,CAAArI,aAAA,GAAAsB,CAAA,WAAIoB,OAAO,CAAC6D,MAAM,CAACzC,MAAM,CAAC2E,UAAU,GAAG,EAAE;QAAA;QAAA,CAAAzI,aAAA,GAAAsB,CAAA,WAAG,SAAS;QAAA;QAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,SAAS;QACtGuK,OAAO,EAAE;UACPlI,GAAG,EAAE,GAAGjB,OAAO,CAAC6D,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,CAACyC,OAAO,CAAC,CAAC,CAAC,GAAG;UAC9ChH,MAAM,EAAE,GAAGpB,OAAO,CAAC6D,MAAM,CAACzC,MAAM,CAAC2E,UAAU,CAACqC,OAAO,CAAC,CAAC,CAAC,GAAG;UACzD/G,IAAI,EAAE,GAAGrB,OAAO,CAAC6D,MAAM,CAACxC,IAAI,CAAC0E,UAAU,CAACqC,OAAO,CAAC,CAAC,CAAC;;OAErD;MAED;MAAA;MAAA9K,aAAA,GAAAoB,CAAA;MACAsK,YAAY,CAACE,MAAM,CAAC,UAAU,CAAC,GAAG;QAChCvC,MAAM;QAAE;QAAA,CAAArJ,aAAA,GAAAsB,CAAA,WAAAoB,OAAO,CAAC8D,WAAW,CAACoC,SAAS;QAAA;QAAA,CAAA5I,aAAA,GAAAsB,CAAA,WAAIoB,OAAO,CAAC8D,WAAW,CAACsC,YAAY;QAAA;QAAA,CAAA9I,aAAA,GAAAsB,CAAA,WAAG,SAAS;QAAA;QAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,UAAU;QAClGuK,OAAO,EAAE;UACPC,GAAG,EAAEpJ,OAAO,CAAC8D,WAAW,CAACoC,SAAS;UAAA;UAAA,CAAA5I,aAAA,GAAAsB,CAAA,WAAG,IAAI;UAAA;UAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,MAAM;UAClDyK,SAAS,EAAErJ,OAAO,CAAC8D,WAAW,CAACqC,eAAe;UAAA;UAAA,CAAA7I,aAAA,GAAAsB,CAAA,WAAG,IAAI;UAAA;UAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,MAAM;UAC9D0K,MAAM,EAAEtJ,OAAO,CAAC8D,WAAW,CAACsC,YAAY;UAAA;UAAA,CAAA9I,aAAA,GAAAsB,CAAA,WAAG,IAAI;UAAA;UAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,MAAM;;OAE3D;MAED;MACA,MAAM2K,SAAS;MAAA;MAAA,CAAAjM,aAAA,GAAAoB,CAAA,SAAG,MAAMkB,gBAAA,CAAAyC,aAAa,CAACmH,iBAAiB,EAAE;MAAC;MAAAlM,aAAA,GAAAoB,CAAA;MAC1DsK,YAAY,CAACE,MAAM,CAAC,UAAU,CAAC,GAAG;QAChCvC,MAAM,EAAE4C,SAAS;QAAA;QAAA,CAAAjM,aAAA,GAAAsB,CAAA,WAAG,SAAS;QAAA;QAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,UAAU;QAC1CuK,OAAO,EAAE;UAAEM,SAAS,EAAEF,SAAS;UAAA;UAAA,CAAAjM,aAAA,GAAAsB,CAAA,WAAG,IAAI;UAAA;UAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,QAAQ;QAAA;OAClD;MAED;MACA,MAAM8K,QAAQ;MAAA;MAAA,CAAApM,aAAA,GAAAoB,CAAA,SAAGiL,MAAM,CAACC,MAAM,CAACZ,YAAY,CAACE,MAAM,CAAC,CAAC1E,GAAG,CAACqF,KAAK,IAAI;QAAA;QAAAvM,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAmL,KAAK,CAAClD,MAAM;MAAN,CAAM,CAAC;MAAC;MAAArJ,aAAA,GAAAoB,CAAA;MAC/E,IAAIgL,QAAQ,CAACnC,QAAQ,CAAC,UAAU,CAAC,EAAE;QAAA;QAAAjK,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACjCsK,YAAY,CAACC,OAAO,GAAG,UAAU;MACnC,CAAC,MAAM;QAAA;QAAA3L,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAA,IAAIgL,QAAQ,CAACnC,QAAQ,CAAC,SAAS,CAAC,EAAE;UAAA;UAAAjK,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACvCsK,YAAY,CAACC,OAAO,GAAG,SAAS;QAClC,CAAC;QAAA;QAAA;UAAA3L,aAAA,GAAAsB,CAAA;QAAA;MAAD;MAEA;MACA,MAAMkL,UAAU;MAAA;MAAA,CAAAxM,aAAA,GAAAoB,CAAA,SAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACC,OAAO,CAACC,GAAG,EAAE,EAAE,MAAM,EAAE,oBAAoB,CAAC;MAAC;MAAA9E,aAAA,GAAAoB,CAAA;MACrE,IAAAe,IAAA,CAAAqJ,aAAa,EAACgB,UAAU,EAAEvD,IAAI,CAACwD,SAAS,CAACf,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAElE,CAAC,CAAC,OAAO9F,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAAC;MAAA5F,aAAA,GAAAoB,CAAA;MAC5CsK,YAAY,CAACC,OAAO,GAAG,OAAO;MAAC;MAAA3L,aAAA,GAAAoB,CAAA;MAC/BsK,YAAY,CAACE,MAAM,CAAC,OAAO,CAAC,GAAG;QAAEvC,MAAM,EAAE,OAAO;QAAEwC,OAAO,EAAEjG,KAAK,CAAC8G;MAAO,CAAE;IAC5E;EACF;EAEA;;;EAGQ,MAAMzH,cAAcA,CAAA;IAAA;IAAAjF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC1BiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,0BAA0B,CAAC;IAAC;IAAAnD,aAAA,GAAAoB,CAAA;IAExC,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,sDAAsD,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;IACrF,CAAC,CAAC,MAAM;MACN;MACA,MAAM6C,OAAO;MAAA;MAAA,CAAA3M,aAAA,GAAAoB,CAAA,SAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACC,OAAO,CAACC,GAAG,EAAE,EAAE,MAAM,CAAC;MAAC;MAAA9E,aAAA,GAAAoB,CAAA;MAC5C,IAAI,IAAAe,IAAA,CAAAuI,UAAU,EAACiC,OAAO,CAAC,EAAE;QAAA;QAAA3M,aAAA,GAAAsB,CAAA;QACvB,MAAMiD,SAAS;QAAA;QAAA,CAAAvE,aAAA,GAAAoB,CAAA,SAAG,IAAIoD,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC4C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAAC;QAAArH,aAAA,GAAAoB,CAAA;QACzD,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,QAAQ8F,OAAO,8CAA8C,CAAC;QAAC;QAAA3M,aAAA,GAAAoB,CAAA;QACxE,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,QAAQ8F,OAAO,kCAAkC,CAAC;MAC7D,CAAC;MAAA;MAAA;QAAA3M,aAAA,GAAAsB,CAAA;MAAA;IACH;IAAC;IAAAtB,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,0BAA0B,CAAC;EACzC;EAEQ,MAAM+B,oBAAoBA,CAAA;IAAA;IAAAlF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAChCiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,iCAAiC,CAAC;IAAC;IAAAnD,aAAA,GAAAoB,CAAA;IAE/C,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,wBAAwB,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;MAAC;MAAA9J,aAAA,GAAAoB,CAAA;MACtD,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,oBAAoB,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;MAEjD;MAAA;MAAA9J,aAAA,GAAAoB,CAAA;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,0CAA0C,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;MAEvE;MAAA;MAAA9J,aAAA,GAAAoB,CAAA;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,mCAAmC,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;IAElE,CAAC,CAAC,OAAOlE,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC9C;IAAC;IAAA5F,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,4BAA4B,CAAC;EAC3C;EAEQ,MAAMgC,mBAAmBA,CAAA;IAAA;IAAAnF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC/BiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,gCAAgC,CAAC;IAAC;IAAAnD,aAAA,GAAAoB,CAAA;IAE9C,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,kCAAkC,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;MAE/D;MAAA;MAAA9J,aAAA,GAAAoB,CAAA;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,+CAA+C,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;IAE9E,CAAC,CAAC,OAAOlE,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAACC,IAAI,CAAC,uCAAuC,CAAC;IACtD;IAAC;IAAAlD,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,2BAA2B,CAAC;EAC1C;EAEQ,MAAMiC,mBAAmBA,CAAA;IAAA;IAAApF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC/BiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,oCAAoC,CAAC;IAAC;IAAAnD,aAAA,GAAAoB,CAAA;IAElD,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,yDAAyD,EAAE;QAAEiD,KAAK,EAAE;MAAM,CAAE,CAAC;MAEtF;MAAA;MAAA9J,aAAA,GAAAoB,CAAA;MACA,MAAMkB,gBAAA,CAAAyC,aAAa,CAAC6H,GAAG,CAAC,QAAQ,CAAC;MAAC;MAAA5M,aAAA,GAAAoB,CAAA;MAClC,MAAMkB,gBAAA,CAAAyC,aAAa,CAAC6H,GAAG,CAAC,SAAS,CAAC;IAEpC,CAAC,CAAC,OAAOhH,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAoB,CAAA;MACdiB,QAAA,CAAAY,MAAM,CAAC2C,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACxD;IAAC;IAAA5F,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,sCAAsC,CAAC;EACrD;EAEQ,MAAMkC,oBAAoBA,CAAA;IAAA;IAAArF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAChCiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,gCAAgC,CAAC;IAE7C,MAAM0J,MAAM;IAAA;IAAA,CAAA7M,aAAA,GAAAoB,CAAA,SAAG;MACbmD,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrB+B,MAAM,EAAE,MAAM,IAAI,CAACP,oBAAoB,EAAE;MACzCQ,WAAW,EAAE,MAAM,IAAI,CAACN,yBAAyB,EAAE;MACnD4G,WAAW,EAAE;QACXC,SAAS,EAAE,IAAI,CAACpK,gBAAgB,CAACuE,GAAG,CAACxD,IAAI,IAAK;UAAA;UAAA1D,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA;YAC5CP,IAAI,EAAE6C,IAAI,CAAC7C,IAAI;YACfgF,OAAO,EAAEnC,IAAI,CAACmC,OAAO;YACrBxB,OAAO,EAAEX,IAAI,CAACW;WACf;SAAC;OACH;MACD2I,eAAe,EAAE,IAAI,CAACC,uBAAuB;KAC9C;IAED,MAAMC,UAAU;IAAA;IAAA,CAAAlN,aAAA,GAAAoB,CAAA,SAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACC,OAAO,CAACC,GAAG,EAAE,EAAE,MAAM,EAAE,iBAAiB,IAAIN,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC4C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IAAC;IAAArH,aAAA,GAAAoB,CAAA;IAC/G,IAAAe,IAAA,CAAAqJ,aAAa,EAAC0B,UAAU,EAAEjE,IAAI,CAACwD,SAAS,CAACI,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAAC;IAAA7M,aAAA,GAAAoB,CAAA;IAE3DiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,8BAA8B+J,UAAU,EAAE,CAAC;EACzD;EAEQ,MAAM5H,iBAAiBA,CAAA;IAAA;IAAAtF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC7BiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,gCAAgC,CAAC;IAE7C,MAAMgK,UAAU;IAAA;IAAA,CAAAnN,aAAA,GAAAoB,CAAA,SAAG,IAAAgB,MAAA,CAAAwC,IAAI,EAACC,OAAO,CAACC,GAAG,EAAE,EAAE,SAAS,CAAC;IAAC;IAAA9E,aAAA,GAAAoB,CAAA;IAClD,IAAI,IAAAe,IAAA,CAAAuI,UAAU,EAACyC,UAAU,CAAC,EAAE;MAAA;MAAAnN,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC1B;MACA,IAAAa,eAAA,CAAA4E,QAAQ,EAAC,QAAQsG,UAAU,6BAA6B,EAAE;QAAErD,KAAK,EAAE;MAAM,CAAE,CAAC;IAC9E,CAAC;IAAA;IAAA;MAAA9J,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAEDiB,QAAA,CAAAY,MAAM,CAACE,IAAI,CAAC,4BAA4B,CAAC;EAC3C;EAEQ8J,uBAAuBA,CAAA;IAAA;IAAAjN,aAAA,GAAAqB,CAAA;IAC7B,MAAM2L,eAAe;IAAA;IAAA,CAAAhN,aAAA,GAAAoB,CAAA,SAAa,EAAE;IAAC;IAAApB,aAAA,GAAAoB,CAAA;IAErC,IAAI,IAAI,CAACsB,OAAO,CAAC+C,MAAM,GAAG,CAAC,EAAE;MAAA;MAAAzF,aAAA,GAAAsB,CAAA;MAC3B,MAAM8L,aAAa;MAAA;MAAA,CAAApN,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACsB,OAAO,CAAC,IAAI,CAACA,OAAO,CAAC+C,MAAM,GAAG,CAAC,CAAC;MAAC;MAAAzF,aAAA,GAAAoB,CAAA;MAE5D,IAAIgM,aAAa,CAAC7G,MAAM,CAAC5C,GAAG,CAAC0E,KAAK,GAAG,EAAE,EAAE;QAAA;QAAArI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACvC4L,eAAe,CAACxH,IAAI,CAAC,6CAA6C,CAAC;MACrE,CAAC;MAAA;MAAA;QAAAxF,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED,IAAIgM,aAAa,CAAC7G,MAAM,CAACzC,MAAM,CAAC2E,UAAU,GAAG,EAAE,EAAE;QAAA;QAAAzI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC/C4L,eAAe,CAACxH,IAAI,CAAC,mDAAmD,CAAC;MAC3E,CAAC;MAAA;MAAA;QAAAxF,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED,IAAIgM,aAAa,CAAC7G,MAAM,CAACxC,IAAI,CAAC0E,UAAU,GAAG,EAAE,EAAE;QAAA;QAAAzI,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC7C4L,eAAe,CAACxH,IAAI,CAAC,yCAAyC,CAAC;MACjE,CAAC;MAAA;MAAA;QAAAxF,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED,IAAI,CAACgM,aAAa,CAAC5G,WAAW,CAACoC,SAAS,EAAE;QAAA;QAAA5I,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACxC4L,eAAe,CAACxH,IAAI,CAAC,gCAAgC,CAAC;MACxD,CAAC;MAAA;MAAA;QAAAxF,aAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAED,OAAO4L,eAAe;EACxB;EAEA;;;EAGAK,UAAUA,CAAA;IAAA;IAAArN,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACR,OAAO,IAAI,CAACsB,OAAO;EACrB;EAEA;;;EAGA4K,oBAAoBA,CAAA;IAAA;IAAAtN,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAClB,OAAO,IAAI,CAACuB,gBAAgB;EAC9B;;AACD;AAAA3C,aAAA,GAAAoB,CAAA;AAjtBDmM,OAAA,CAAA9K,oBAAA,GAAAA,oBAAA;AAmtBA;AAAA;AAAAzC,aAAA,GAAAoB,CAAA;AACamM,OAAA,CAAAC,oBAAoB,GAAG,IAAI/K,oBAAoB,EAAE","ignoreList":[]}