f818b36720bbd63748c14543ddecf48a
"use strict";

/* istanbul ignore next */
function cov_2pgvlnd7u9() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\ssh-tunnel-manager.ts";
  var hash = "57ba03af30940044f1792d3b5aad215643c33bd6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\ssh-tunnel-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 56
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 34
        }
      },
      "3": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 13
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "6": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "7": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "8": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "9": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "10": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "11": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "12": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 45
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 16
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 48
        }
      },
      "18": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 56
        }
      },
      "19": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 55
        }
      },
      "21": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "22": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 75
        }
      },
      "23": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "24": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "25": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 58
        }
      },
      "26": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 73,
          column: 15
        }
      },
      "27": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "28": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 44
        }
      },
      "29": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 50
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 53
        }
      },
      "31": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 74
        }
      },
      "32": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 48
        }
      },
      "33": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 85
        }
      },
      "34": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "35": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 30
        }
      },
      "36": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 88
        }
      },
      "37": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 71
        }
      },
      "38": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 96
        }
      },
      "39": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "40": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 24
        }
      },
      "41": {
        start: {
          line: 107,
          column: 27
        },
        end: {
          line: 107,
          column: 61
        }
      },
      "42": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "43": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 69
        }
      },
      "44": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "45": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "46": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "47": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "48": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 74
        }
      },
      "49": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "50": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "51": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "52": {
        start: {
          line: 122,
          column: 36
        },
        end: {
          line: 128,
          column: 28
        }
      },
      "53": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 126,
          column: 25
        }
      },
      "54": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 63
        }
      },
      "55": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 34
        }
      },
      "56": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "57": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 46
        }
      },
      "58": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 34
        }
      },
      "59": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 77
        }
      },
      "60": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 38
        }
      },
      "61": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 42
        }
      },
      "62": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 73
        }
      },
      "63": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "64": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 88
        }
      },
      "65": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 24
        }
      },
      "66": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 50
        }
      },
      "67": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 53
        }
      },
      "68": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 93
        }
      },
      "69": {
        start: {
          line: 169,
          column: 55
        },
        end: {
          line: 169,
          column: 91
        }
      },
      "70": {
        start: {
          line: 178,
          column: 31
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "71": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "72": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "73": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 83
        }
      },
      "74": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "75": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 78
        }
      },
      "76": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "77": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 71
        }
      },
      "78": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "79": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 73
        }
      },
      "80": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 73
        }
      },
      "81": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "82": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 206,
          column: 66
        }
      },
      "83": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "84": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 85
        }
      },
      "85": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 76
        }
      },
      "86": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 74
        }
      },
      "87": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 120
        }
      },
      "88": {
        start: {
          line: 225,
          column: 21
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "89": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "90": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 51
        }
      },
      "91": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "92": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 28
        }
      },
      "93": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "94": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 48
        }
      },
      "95": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 61
        }
      },
      "96": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 20
        }
      },
      "97": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 259,
          column: 19
        }
      },
      "98": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 19
        }
      },
      "99": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 260,
          column: 42
        }
      },
      "100": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 11
        }
      },
      "101": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 90
        }
      },
      "102": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 271,
          column: 11
        }
      },
      "103": {
        start: {
          line: 265,
          column: 28
        },
        end: {
          line: 265,
          column: 50
        }
      },
      "104": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 75
        }
      },
      "105": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 270,
          column: 13
        }
      },
      "106": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 53
        }
      },
      "107": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 279,
          column: 11
        }
      },
      "108": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 88
        }
      },
      "109": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "110": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 81
        }
      },
      "111": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 60
        }
      },
      "112": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 38
        }
      },
      "113": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 285,
          column: 11
        }
      },
      "114": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 77
        }
      },
      "115": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 71
        }
      },
      "116": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 55
        }
      },
      "117": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 56
        }
      },
      "118": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 312,
          column: 11
        }
      },
      "119": {
        start: {
          line: 295,
          column: 28
        },
        end: {
          line: 297,
          column: 25
        }
      },
      "120": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 85
        }
      },
      "121": {
        start: {
          line: 298,
          column: 28
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "122": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 38
        }
      },
      "123": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 60
        }
      },
      "124": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 26
        }
      },
      "125": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "126": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 308,
          column: 17
        }
      },
      "127": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 42
        }
      },
      "128": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 306,
          column: 64
        }
      },
      "129": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 34
        }
      },
      "130": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 46
        }
      },
      "131": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 46
        }
      },
      "132": {
        start: {
          line: 321,
          column: 25
        },
        end: {
          line: 321,
          column: 41
        }
      },
      "133": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 36
        }
      },
      "134": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 45
        }
      },
      "135": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 97
        }
      },
      "136": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 66
        }
      },
      "137": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 81
        }
      },
      "138": {
        start: {
          line: 342,
          column: 24
        },
        end: {
          line: 342,
          column: 117
        }
      },
      "139": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 32
        }
      },
      "140": {
        start: {
          line: 349,
          column: 28
        },
        end: {
          line: 349,
          column: 65
        }
      },
      "141": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 360,
          column: 10
        }
      },
      "142": {
        start: {
          line: 352,
          column: 55
        },
        end: {
          line: 352,
          column: 88
        }
      },
      "143": {
        start: {
          line: 353,
          column: 47
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "144": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 63
        }
      },
      "145": {
        start: {
          line: 367,
          column: 35
        },
        end: {
          line: 367,
          column: 214
        }
      },
      "146": {
        start: {
          line: 367,
          column: 91
        },
        end: {
          line: 367,
          column: 213
        }
      },
      "147": {
        start: {
          line: 367,
          column: 142
        },
        end: {
          line: 367,
          column: 212
        }
      },
      "148": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 46
        }
      },
      "149": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 33
        }
      },
      "150": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 57
        }
      },
      "151": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 373,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 1
          },
          end: {
            line: 12,
            column: 2
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 106
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 121,
            column: 34
          },
          end: {
            line: 121,
            column: 35
          }
        },
        loc: {
          start: {
            line: 121,
            column: 47
          },
          end: {
            line: 133,
            column: 17
          }
        },
        line: 121
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 122,
            column: 47
          },
          end: {
            line: 122,
            column: 48
          }
        },
        loc: {
          start: {
            line: 122,
            column: 53
          },
          end: {
            line: 128,
            column: 21
          }
        },
        line: 122
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 129,
            column: 50
          },
          end: {
            line: 129,
            column: 51
          }
        },
        loc: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 132,
            column: 21
          }
        },
        line: 129
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 152
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 24
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 160
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 27
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 168
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 169,
            column: 47
          },
          end: {
            line: 169,
            column: 48
          }
        },
        loc: {
          start: {
            line: 169,
            column: 55
          },
          end: {
            line: 169,
            column: 91
          }
        },
        line: 169
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 39
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 177
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 45
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 204
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 224
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        loc: {
          start: {
            line: 257,
            column: 37
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 257
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 261,
            column: 35
          },
          end: {
            line: 261,
            column: 36
          }
        },
        loc: {
          start: {
            line: 261,
            column: 45
          },
          end: {
            line: 263,
            column: 9
          }
        },
        line: 261
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 264,
            column: 36
          }
        },
        loc: {
          start: {
            line: 264,
            column: 45
          },
          end: {
            line: 271,
            column: 9
          }
        },
        line: 264
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 272,
            column: 27
          },
          end: {
            line: 272,
            column: 28
          }
        },
        loc: {
          start: {
            line: 272,
            column: 45
          },
          end: {
            line: 279,
            column: 9
          }
        },
        line: 272
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 280,
            column: 29
          }
        },
        loc: {
          start: {
            line: 280,
            column: 39
          },
          end: {
            line: 285,
            column: 9
          }
        },
        line: 280
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 59
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 293
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 294,
            column: 27
          },
          end: {
            line: 294,
            column: 28
          }
        },
        loc: {
          start: {
            line: 294,
            column: 48
          },
          end: {
            line: 312,
            column: 9
          }
        },
        line: 294
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 295,
            column: 39
          },
          end: {
            line: 295,
            column: 40
          }
        },
        loc: {
          start: {
            line: 295,
            column: 45
          },
          end: {
            line: 297,
            column: 13
          }
        },
        line: 295
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 298,
            column: 28
          },
          end: {
            line: 298,
            column: 29
          }
        },
        loc: {
          start: {
            line: 298,
            column: 34
          },
          end: {
            line: 302,
            column: 13
          }
        },
        line: 298
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 303,
            column: 28
          },
          end: {
            line: 303,
            column: 29
          }
        },
        loc: {
          start: {
            line: 303,
            column: 45
          },
          end: {
            line: 309,
            column: 13
          }
        },
        line: 303
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 48
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 320
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 332
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 18
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 341
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 32
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 348
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 352,
            column: 50
          },
          end: {
            line: 352,
            column: 51
          }
        },
        loc: {
          start: {
            line: 352,
            column: 55
          },
          end: {
            line: 352,
            column: 88
          }
        },
        line: 352
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 353,
            column: 41
          },
          end: {
            line: 353,
            column: 42
          }
        },
        loc: {
          start: {
            line: 353,
            column: 47
          },
          end: {
            line: 359,
            column: 13
          }
        },
        line: 353
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 20
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 365
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 367,
            column: 75
          },
          end: {
            line: 367,
            column: 76
          }
        },
        loc: {
          start: {
            line: 367,
            column: 91
          },
          end: {
            line: 367,
            column: 213
          }
        },
        line: 367
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 367,
            column: 133
          },
          end: {
            line: 367,
            column: 134
          }
        },
        loc: {
          start: {
            line: 367,
            column: 142
          },
          end: {
            line: 367,
            column: 212
          }
        },
        line: 367
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 3
          },
          end: {
            line: 19,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 3
          },
          end: {
            line: 19,
            column: 14
          }
        }, {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 57
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 41
          },
          end: {
            line: 94,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 66
          },
          end: {
            line: 94,
            column: 79
          }
        }, {
          start: {
            line: 94,
            column: 82
          },
          end: {
            line: 94,
            column: 95
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "4": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 126,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 126,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 46
          }
        }, {
          start: {
            line: 124,
            column: 50
          },
          end: {
            line: 124,
            column: 76
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "9": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "10": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "11": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 32
          }
        }, {
          start: {
            line: 191,
            column: 36
          },
          end: {
            line: 191,
            column: 60
          }
        }],
        line: 191
      },
      "12": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "13": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 194,
            column: 33
          }
        }, {
          start: {
            line: 194,
            column: 37
          },
          end: {
            line: 194,
            column: 62
          }
        }],
        line: 194
      },
      "14": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "15": {
        loc: {
          start: {
            line: 215,
            column: 62
          },
          end: {
            line: 215,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 87
          },
          end: {
            line: 215,
            column: 100
          }
        }, {
          start: {
            line: 215,
            column: 103
          },
          end: {
            line: 215,
            column: 116
          }
        }],
        line: 215
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "18": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "19": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 259,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 259,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "20": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "21": {
        loc: {
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "22": {
        loc: {
          start: {
            line: 293,
            column: 40
          },
          end: {
            line: 293,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 293,
            column: 52
          },
          end: {
            line: 293,
            column: 57
          }
        }],
        line: 293
      },
      "23": {
        loc: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 308,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 308,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "57ba03af30940044f1792d3b5aad215643c33bd6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pgvlnd7u9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pgvlnd7u9();
cov_2pgvlnd7u9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2pgvlnd7u9().s[1]++;
exports.SSHTunnelManager = exports.TunnelState = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2pgvlnd7u9().s[2]++, require("events"));
const child_process_1 =
/* istanbul ignore next */
(cov_2pgvlnd7u9().s[3]++, require("child_process"));
const fs_1 =
/* istanbul ignore next */
(cov_2pgvlnd7u9().s[4]++, require("fs"));
const logger_1 =
/* istanbul ignore next */
(cov_2pgvlnd7u9().s[5]++, require("../core/logging/logger"));
/**
 * Tunnel connection states
 */
var TunnelState;
/* istanbul ignore next */
cov_2pgvlnd7u9().s[6]++;
(function (TunnelState) {
  /* istanbul ignore next */
  cov_2pgvlnd7u9().f[0]++;
  cov_2pgvlnd7u9().s[7]++;
  TunnelState["DISCONNECTED"] = "DISCONNECTED";
  /* istanbul ignore next */
  cov_2pgvlnd7u9().s[8]++;
  TunnelState["CONNECTING"] = "CONNECTING";
  /* istanbul ignore next */
  cov_2pgvlnd7u9().s[9]++;
  TunnelState["CONNECTED"] = "CONNECTED";
  /* istanbul ignore next */
  cov_2pgvlnd7u9().s[10]++;
  TunnelState["RECONNECTING"] = "RECONNECTING";
  /* istanbul ignore next */
  cov_2pgvlnd7u9().s[11]++;
  TunnelState["FAILED"] = "FAILED";
  /* istanbul ignore next */
  cov_2pgvlnd7u9().s[12]++;
  TunnelState["TERMINATED"] = "TERMINATED";
})(
/* istanbul ignore next */
(cov_2pgvlnd7u9().b[0][0]++, TunnelState) ||
/* istanbul ignore next */
(cov_2pgvlnd7u9().b[0][1]++, exports.TunnelState = TunnelState = {}));
/**
 * SSH Tunnel Manager
 * Manages SSH tunnel connections to Oracle Free Tier with authentication,
 * state management, and connection validation
 */
class SSHTunnelManager extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor() {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[1]++;
    cov_2pgvlnd7u9().s[13]++;
    super();
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[14]++;
    this.logger = new logger_1.Logger('SSHTunnelManager');
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[15]++;
    this.connections = new Map();
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[16]++;
    this.logger.info('SSH Tunnel Manager initialized');
  }
  /**
   * Establish SSH tunnel connection
   * @param config - Tunnel configuration parameters
   * @returns Promise resolving to tunnel connection
   */
  async establishTunnel(config) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[2]++;
    cov_2pgvlnd7u9().s[17]++;
    // Validate configuration
    await this.validateTunnelConfig(config);
    // Generate unique connection ID
    const connectionId =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[18]++, this.generateConnectionId());
    // Create connection object
    const connection =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[19]++, {
      id: connectionId,
      config: config,
      process: null,
      state: TunnelState.DISCONNECTED,
      connectedAt: null,
      lastActivity: new Date(),
      stats: {
        bytesTransferred: 0,
        uptime: 0,
        reconnectAttempts: 0,
        lastError: null,
        qualityScore: 0
      }
    });
    // Store connection
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[20]++;
    this.connections.set(connectionId, connection);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[21]++;
    try {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[22]++;
      // Update state to connecting
      this.updateConnectionState(connection, TunnelState.CONNECTING);
      // Validate private key exists and is accessible
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[23]++;
      if (config.privateKeyPath) {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().b[1][0]++;
        cov_2pgvlnd7u9().s[24]++;
        await this.validatePrivateKey(config.privateKeyPath);
      } else
      /* istanbul ignore next */
      {
        cov_2pgvlnd7u9().b[1][1]++;
      }
      // Build SSH command arguments
      const sshArgs =
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().s[25]++, this.buildSSHArguments(config));
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[26]++;
      this.logger.info(`Establishing SSH tunnel: ${connectionId}`, {
        remoteHost: config.remoteHost,
        localPort: config.localPort,
        remotePort: config.remotePort
      });
      // Spawn SSH process
      const sshProcess =
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().s[27]++, (0, child_process_1.spawn)('ssh', sshArgs, {
        stdio: ['pipe', 'pipe', 'pipe'],
        detached: false
      }));
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[28]++;
      connection.process = sshProcess;
      // Set up process event handlers
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[29]++;
      this.setupProcessHandlers(connection);
      // Wait for connection establishment
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[30]++;
      await this.waitForConnection(connection);
      // Update connection state
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[31]++;
      this.updateConnectionState(connection, TunnelState.CONNECTED);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[32]++;
      connection.connectedAt = new Date();
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[33]++;
      this.logger.info(`SSH tunnel established successfully: ${connectionId}`);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[34]++;
      this.emit('tunnelConnected', connection);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[35]++;
      return connection;
    } catch (error) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[36]++;
      this.logger.error(`Failed to establish SSH tunnel: ${connectionId}`, error);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[37]++;
      this.updateConnectionState(connection, TunnelState.FAILED);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[38]++;
      connection.stats.lastError = error instanceof Error ?
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().b[2][1]++, String(error));
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[39]++;
      this.emit('tunnelError', connection, error);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[40]++;
      throw error;
    }
  }
  /**
   * Disconnect SSH tunnel
   * Gracefully terminates the SSH connection
   *
   * @param connectionId - Connection identifier
   * @returns Promise resolving when disconnected
   */
  async disconnectTunnel(connectionId) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[3]++;
    const connection =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[41]++, this.connections.get(connectionId));
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[42]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[3][0]++;
      cov_2pgvlnd7u9().s[43]++;
      throw new Error(`Connection not found: ${connectionId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[3][1]++;
    }
    cov_2pgvlnd7u9().s[44]++;
    if (connection.state === TunnelState.DISCONNECTED) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[4][0]++;
      cov_2pgvlnd7u9().s[45]++;
      this.logger.warn(`Tunnel already disconnected: ${connectionId}`);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[46]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[4][1]++;
    }
    cov_2pgvlnd7u9().s[47]++;
    try {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[48]++;
      this.logger.info(`Disconnecting SSH tunnel: ${connectionId}`);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[49]++;
      if (connection.process) {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().b[5][0]++;
        cov_2pgvlnd7u9().s[50]++;
        // Graceful termination
        connection.process.kill('SIGTERM');
        // Wait for process to exit
        /* istanbul ignore next */
        cov_2pgvlnd7u9().s[51]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_2pgvlnd7u9().f[4]++;
          const timeout =
          /* istanbul ignore next */
          (cov_2pgvlnd7u9().s[52]++, setTimeout(() => {
            /* istanbul ignore next */
            cov_2pgvlnd7u9().f[5]++;
            cov_2pgvlnd7u9().s[53]++;
            // Force kill if graceful termination fails
            if (
            /* istanbul ignore next */
            (cov_2pgvlnd7u9().b[7][0]++, connection.process) &&
            /* istanbul ignore next */
            (cov_2pgvlnd7u9().b[7][1]++, !connection.process.killed)) {
              /* istanbul ignore next */
              cov_2pgvlnd7u9().b[6][0]++;
              cov_2pgvlnd7u9().s[54]++;
              connection.process.kill('SIGKILL');
            } else
            /* istanbul ignore next */
            {
              cov_2pgvlnd7u9().b[6][1]++;
            }
            cov_2pgvlnd7u9().s[55]++;
            resolve();
          }, 5000));
          /* istanbul ignore next */
          cov_2pgvlnd7u9().s[56]++;
          connection.process.on('exit', () => {
            /* istanbul ignore next */
            cov_2pgvlnd7u9().f[6]++;
            cov_2pgvlnd7u9().s[57]++;
            clearTimeout(timeout);
            /* istanbul ignore next */
            cov_2pgvlnd7u9().s[58]++;
            resolve();
          });
        });
      } else
      /* istanbul ignore next */
      {
        cov_2pgvlnd7u9().b[5][1]++;
      }
      cov_2pgvlnd7u9().s[59]++;
      this.updateConnectionState(connection, TunnelState.DISCONNECTED);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[60]++;
      connection.process = null;
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[61]++;
      connection.connectedAt = null;
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[62]++;
      this.logger.info(`SSH tunnel disconnected: ${connectionId}`);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[63]++;
      this.emit('tunnelDisconnected', connection);
    } catch (error) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[64]++;
      this.logger.error(`Error disconnecting SSH tunnel: ${connectionId}`, error);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[65]++;
      throw error;
    }
  }
  /**
   * Get connection by ID
   *
   * @param connectionId - Connection identifier
   * @returns Tunnel connection or undefined
   */
  getConnection(connectionId) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[7]++;
    cov_2pgvlnd7u9().s[66]++;
    return this.connections.get(connectionId);
  }
  /**
   * Get all connections
   *
   * @returns Array of all tunnel connections
   */
  getAllConnections() {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[8]++;
    cov_2pgvlnd7u9().s[67]++;
    return Array.from(this.connections.values());
  }
  /**
   * Get active connections
   *
   * @returns Array of connected tunnel connections
   */
  getActiveConnections() {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[9]++;
    cov_2pgvlnd7u9().s[68]++;
    return this.getAllConnections().filter(conn => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[10]++;
      cov_2pgvlnd7u9().s[69]++;
      return conn.state === TunnelState.CONNECTED;
    });
  }
  /**
   * Validate tunnel configuration
   * Ensures all required parameters are present and valid
   *
   * @param config - Tunnel configuration to validate
   */
  async validateTunnelConfig(config) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[11]++;
    const requiredFields =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[70]++, ['name', 'remoteHost', 'sshHost', 'sshUsername', 'localPort', 'remotePort']);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[71]++;
    for (const field of requiredFields) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[72]++;
      if (!config[field]) {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().b[8][0]++;
        cov_2pgvlnd7u9().s[73]++;
        throw new Error(`Missing required tunnel configuration: ${field}`);
      } else
      /* istanbul ignore next */
      {
        cov_2pgvlnd7u9().b[8][1]++;
      }
    }
    // Validate IP address format for SSH host
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[74]++;
    if (!this.isValidIP(config.sshHost)) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[9][0]++;
      cov_2pgvlnd7u9().s[75]++;
      throw new Error(`Invalid SSH host IP address: ${config.sshHost}`);
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[9][1]++;
    }
    // Validate port ranges
    cov_2pgvlnd7u9().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().b[11][0]++, config.localPort < 1) ||
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().b[11][1]++, config.localPort > 65535)) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[10][0]++;
      cov_2pgvlnd7u9().s[77]++;
      throw new Error(`Invalid local port: ${config.localPort}`);
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[10][1]++;
    }
    cov_2pgvlnd7u9().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().b[13][0]++, config.remotePort < 1) ||
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().b[13][1]++, config.remotePort > 65535)) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[12][0]++;
      cov_2pgvlnd7u9().s[79]++;
      throw new Error(`Invalid remote port: ${config.remotePort}`);
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[12][1]++;
    }
    cov_2pgvlnd7u9().s[80]++;
    this.logger.debug('Tunnel configuration validated successfully');
  }
  /**
   * Validate private key file exists and is accessible
   *
   * @param privateKeyPath - Path to private key file
   */
  async validatePrivateKey(privateKeyPath) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[12]++;
    cov_2pgvlnd7u9().s[81]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().s[82]++, await fs_1.promises.stat(privateKeyPath));
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[83]++;
      if (!stats.isFile()) {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().b[14][0]++;
        cov_2pgvlnd7u9().s[84]++;
        throw new Error(`Private key path is not a file: ${privateKeyPath}`);
      } else
      /* istanbul ignore next */
      {
        cov_2pgvlnd7u9().b[14][1]++;
      }
      // Check file permissions (should be readable by owner only)
      cov_2pgvlnd7u9().s[85]++;
      await fs_1.promises.access(privateKeyPath, fs_1.constants.R_OK);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[86]++;
      this.logger.debug(`Private key validated: ${privateKeyPath}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[87]++;
      throw new Error(`Private key validation failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().b[15][1]++, String(error))}`);
    }
  }
  /**
   * Build SSH command arguments
   *
   * @param config - Tunnel configuration
   * @returns Array of SSH command arguments
   */
  buildSSHArguments(config) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[13]++;
    const args =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[88]++, ['-N',
    // No remote command execution
    '-T',
    // Disable pseudo-terminal allocation
    '-o', 'StrictHostKeyChecking=no',
    // Accept new host keys
    '-o', 'UserKnownHostsFile=/dev/null',
    // Don't save host keys
    '-o', 'ConnectTimeout=30', '-o', 'ServerAliveInterval=60', '-o', 'ServerAliveCountMax=3', '-p', config.sshPort.toString(),
    // SSH port
    '-L', `${config.localPort}:${config.remoteHost}:${config.remotePort}` // Local port forwarding
    ]);
    // Add private key
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[89]++;
    if (config.privateKeyPath) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[16][0]++;
      cov_2pgvlnd7u9().s[90]++;
      args.push('-i', config.privateKeyPath);
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[16][1]++;
    }
    // Add compression if enabled
    cov_2pgvlnd7u9().s[91]++;
    if (config.compression) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[17][0]++;
      cov_2pgvlnd7u9().s[92]++;
      args.push('-C');
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[17][1]++;
    }
    // Add keep-alive if enabled
    cov_2pgvlnd7u9().s[93]++;
    if (config.keepAlive) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[18][0]++;
      cov_2pgvlnd7u9().s[94]++;
      args.push('-o', 'TCPKeepAlive=yes');
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[18][1]++;
    }
    // Add connection target
    cov_2pgvlnd7u9().s[95]++;
    args.push(`${config.sshUsername}@${config.sshHost}`);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[96]++;
    return args;
  }
  /**
   * Set up SSH process event handlers
   *
   * @param connection - Tunnel connection
   */
  setupProcessHandlers(connection) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[14]++;
    cov_2pgvlnd7u9().s[97]++;
    if (!connection.process) {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().b[19][0]++;
      cov_2pgvlnd7u9().s[98]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2pgvlnd7u9().b[19][1]++;
    }
    const process =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[99]++, connection.process);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[100]++;
    process.stdout?.on('data', data => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[15]++;
      cov_2pgvlnd7u9().s[101]++;
      this.logger.debug(`SSH stdout [${connection.id}]: ${data.toString().trim()}`);
    });
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[102]++;
    process.stderr?.on('data', data => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[16]++;
      const message =
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().s[103]++, data.toString().trim());
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[104]++;
      this.logger.debug(`SSH stderr [${connection.id}]: ${message}`);
      // Check for connection success indicators
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[105]++;
      if (message.includes('Local forwarding listening')) {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().b[20][0]++;
        cov_2pgvlnd7u9().s[106]++;
        this.emit('tunnelReady', connection);
      } else
      /* istanbul ignore next */
      {
        cov_2pgvlnd7u9().b[20][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[107]++;
    process.on('exit', (code, signal) => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[17]++;
      cov_2pgvlnd7u9().s[108]++;
      this.logger.info(`SSH process exited [${connection.id}]`, {
        code,
        signal
      });
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[109]++;
      if (connection.state === TunnelState.CONNECTED) {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().b[21][0]++;
        cov_2pgvlnd7u9().s[110]++;
        this.updateConnectionState(connection, TunnelState.DISCONNECTED);
        /* istanbul ignore next */
        cov_2pgvlnd7u9().s[111]++;
        this.emit('tunnelDisconnected', connection);
      } else
      /* istanbul ignore next */
      {
        cov_2pgvlnd7u9().b[21][1]++;
      }
      cov_2pgvlnd7u9().s[112]++;
      connection.process = null;
    });
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[113]++;
    process.on('error', error => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[18]++;
      cov_2pgvlnd7u9().s[114]++;
      this.logger.error(`SSH process error [${connection.id}]`, error);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[115]++;
      this.updateConnectionState(connection, TunnelState.FAILED);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[116]++;
      connection.stats.lastError = error.message;
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[117]++;
      this.emit('tunnelError', connection, error);
    });
  }
  /**
   * Wait for SSH tunnel connection to be established
   *
   * @param connection - Tunnel connection
   * @param timeoutMs - Timeout in milliseconds
   */
  async waitForConnection(connection, timeoutMs =
  /* istanbul ignore next */
  (cov_2pgvlnd7u9().b[22][0]++, 30000)) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[19]++;
    cov_2pgvlnd7u9().s[118]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[20]++;
      const timeout =
      /* istanbul ignore next */
      (cov_2pgvlnd7u9().s[119]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().f[21]++;
        cov_2pgvlnd7u9().s[120]++;
        reject(new Error(`SSH tunnel connection timeout: ${connection.id}`));
      }, timeoutMs));
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[121]++;
      const onReady = () => {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().f[22]++;
        cov_2pgvlnd7u9().s[122]++;
        clearTimeout(timeout);
        /* istanbul ignore next */
        cov_2pgvlnd7u9().s[123]++;
        this.removeListener('tunnelError', onError);
        /* istanbul ignore next */
        cov_2pgvlnd7u9().s[124]++;
        resolve();
      };
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[125]++;
      const onError = (conn, error) => {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().f[23]++;
        cov_2pgvlnd7u9().s[126]++;
        if (conn.id === connection.id) {
          /* istanbul ignore next */
          cov_2pgvlnd7u9().b[23][0]++;
          cov_2pgvlnd7u9().s[127]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_2pgvlnd7u9().s[128]++;
          this.removeListener('tunnelReady', onReady);
          /* istanbul ignore next */
          cov_2pgvlnd7u9().s[129]++;
          reject(error);
        } else
        /* istanbul ignore next */
        {
          cov_2pgvlnd7u9().b[23][1]++;
        }
      };
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[130]++;
      this.once('tunnelReady', onReady);
      /* istanbul ignore next */
      cov_2pgvlnd7u9().s[131]++;
      this.once('tunnelError', onError);
    });
  }
  /**
   * Update connection state and emit events
   *
   * @param connection - Tunnel connection
   * @param newState - New connection state
   */
  updateConnectionState(connection, newState) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[24]++;
    const oldState =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[132]++, connection.state);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[133]++;
    connection.state = newState;
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[134]++;
    connection.lastActivity = new Date();
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[135]++;
    this.logger.debug(`Tunnel state changed [${connection.id}]: ${oldState} -> ${newState}`);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[136]++;
    this.emit('stateChanged', connection, oldState, newState);
  }
  /**
   * Generate unique connection ID
   *
   * @returns Unique connection identifier
   */
  generateConnectionId() {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[25]++;
    cov_2pgvlnd7u9().s[137]++;
    return `tunnel_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Validate IP address format
   *
   * @param ip - IP address to validate
   * @returns True if valid IP address
   */
  isValidIP(ip) {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[26]++;
    const ipRegex =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[138]++, /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[139]++;
    return ipRegex.test(ip);
  }
  /**
   * Get connection status for all tunnels
   */
  async getConnectionStatus() {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[27]++;
    const connections =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[140]++, Array.from(this.connections.values()));
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[141]++;
    return {
      totalConnections: connections.length,
      activeConnections: connections.filter(c => {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().f[28]++;
        cov_2pgvlnd7u9().s[142]++;
        return c.state === TunnelState.CONNECTED;
      }).length,
      connections: connections.map(c => {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().f[29]++;
        cov_2pgvlnd7u9().s[143]++;
        return {
          id: c.id,
          name: c.config.name,
          state: c.state,
          connectedAt: c.connectedAt,
          lastActivity: c.lastActivity
        };
      })
    };
  }
  /**
   * Cleanup all connections on shutdown
   */
  async cleanup() {
    /* istanbul ignore next */
    cov_2pgvlnd7u9().f[30]++;
    cov_2pgvlnd7u9().s[144]++;
    this.logger.info('Cleaning up SSH tunnel connections');
    const disconnectPromises =
    /* istanbul ignore next */
    (cov_2pgvlnd7u9().s[145]++, Array.from(this.connections.keys()).map(connectionId => {
      /* istanbul ignore next */
      cov_2pgvlnd7u9().f[31]++;
      cov_2pgvlnd7u9().s[146]++;
      return this.disconnectTunnel(connectionId).catch(error => {
        /* istanbul ignore next */
        cov_2pgvlnd7u9().f[32]++;
        cov_2pgvlnd7u9().s[147]++;
        return this.logger.error(`Error disconnecting tunnel ${connectionId}`, error);
      });
    }));
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[148]++;
    await Promise.all(disconnectPromises);
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[149]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_2pgvlnd7u9().s[150]++;
    this.logger.info('SSH tunnel cleanup completed');
  }
}
/* istanbul ignore next */
cov_2pgvlnd7u9().s[151]++;
exports.SSHTunnelManager = SSHTunnelManager;