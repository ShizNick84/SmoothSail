87f6335ead5b1029ff194fe9a7d3ea7b
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SYSTEM HEALTH DASHBOARD API
 * =============================================================================
 *
 * This module provides a comprehensive health dashboard API for monitoring
 * system status, performance metrics, and deployment health.
 */
/* istanbul ignore next */
function cov_274xqcznom() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\health-dashboard.ts";
  var hash = "40a4591203728de0c1bb48c1e85ea36a7ea2025e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\health-dashboard.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 59
        }
      },
      "2": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "3": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "4": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "5": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "6": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "7": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "8": {
        start: {
          line: 18,
          column: 13
        },
        end: {
          line: 18,
          column: 26
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 46
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 75
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 85
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 79
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 79
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 77
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 64
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 87
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 79
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "23": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 75
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 86
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 78
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 83
        }
      },
      "27": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 93
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 69
        }
      },
      "29": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 78
        }
      },
      "30": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 74
        }
      },
      "31": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 77
        }
      },
      "32": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 85
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 75
        }
      },
      "34": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 77
        }
      },
      "35": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 71
        }
      },
      "36": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "37": {
        start: {
          line: 69,
          column: 33
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "38": {
        start: {
          line: 90,
          column: 38
        },
        end: {
          line: 90,
          column: 95
        }
      },
      "39": {
        start: {
          line: 90,
          column: 86
        },
        end: {
          line: 90,
          column: 94
        }
      },
      "40": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "41": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "42": {
        start: {
          line: 94,
          column: 17
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "43": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 49
        }
      },
      "44": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 35
        }
      },
      "45": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 72
        }
      },
      "46": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "47": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "48": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "49": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 34
        }
      },
      "50": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 69
        }
      },
      "51": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "52": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 36
        }
      },
      "53": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 65
        }
      },
      "54": {
        start: {
          line: 120,
          column: 17
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "55": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 35
        }
      },
      "56": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 58
        }
      },
      "57": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 129,
          column: 14
        }
      },
      "58": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 14
        }
      },
      "59": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "60": {
        start: {
          line: 142,
          column: 30
        },
        end: {
          line: 142,
          column: 59
        }
      },
      "61": {
        start: {
          line: 143,
          column: 30
        },
        end: {
          line: 143,
          column: 57
        }
      },
      "62": {
        start: {
          line: 144,
          column: 36
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "63": {
        start: {
          line: 145,
          column: 37
        },
        end: {
          line: 145,
          column: 81
        }
      },
      "64": {
        start: {
          line: 145,
          column: 59
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "65": {
        start: {
          line: 146,
          column: 35
        },
        end: {
          line: 146,
          column: 51
        }
      },
      "66": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "67": {
        start: {
          line: 148,
          column: 26
        },
        end: {
          line: 148,
          column: 73
        }
      },
      "68": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "69": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 36
        }
      },
      "70": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 67
        }
      },
      "71": {
        start: {
          line: 153,
          column: 17
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "72": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 35
        }
      },
      "73": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 66
        }
      },
      "74": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 169,
          column: 14
        }
      },
      "75": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 177,
          column: 14
        }
      },
      "76": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "77": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 182,
          column: 84
        }
      },
      "78": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 78
        }
      },
      "79": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 189,
          column: 14
        }
      },
      "80": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 197,
          column: 14
        }
      },
      "81": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "82": {
        start: {
          line: 203,
          column: 33
        },
        end: {
          line: 203,
          column: 38
        }
      },
      "83": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "84": {
        start: {
          line: 205,
          column: 34
        },
        end: {
          line: 205,
          column: 105
        }
      },
      "85": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 70
        }
      },
      "86": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 212,
          column: 38
        }
      },
      "87": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "88": {
        start: {
          line: 214,
          column: 39
        },
        end: {
          line: 214,
          column: 128
        }
      },
      "89": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 68
        }
      },
      "90": {
        start: {
          line: 221,
          column: 34
        },
        end: {
          line: 221,
          column: 35
        }
      },
      "91": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "92": {
        start: {
          line: 223,
          column: 32
        },
        end: {
          line: 223,
          column: 148
        }
      },
      "93": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 64
        }
      },
      "94": {
        start: {
          line: 229,
          column: 25
        },
        end: {
          line: 229,
          column: 34
        }
      },
      "95": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 69
        }
      },
      "96": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "97": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 36
        }
      },
      "98": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 62
        }
      },
      "99": {
        start: {
          line: 235,
          column: 17
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "100": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 35
        }
      },
      "101": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 55
        }
      },
      "102": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 248,
          column: 14
        }
      },
      "103": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 256,
          column: 14
        }
      },
      "104": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "105": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "106": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "107": {
        start: {
          line: 288,
          column: 27
        },
        end: {
          line: 288,
          column: 28
        }
      },
      "108": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "109": {
        start: {
          line: 290,
          column: 26
        },
        end: {
          line: 290,
          column: 36
        }
      },
      "110": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 108
        }
      },
      "111": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 46
        }
      },
      "112": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 30
        }
      },
      "113": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 302,
          column: 10
        }
      },
      "114": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "115": {
        start: {
          line: 307,
          column: 29
        },
        end: {
          line: 307,
          column: 163
        }
      },
      "116": {
        start: {
          line: 308,
          column: 29
        },
        end: {
          line: 308,
          column: 107
        }
      },
      "117": {
        start: {
          line: 309,
          column: 26
        },
        end: {
          line: 309,
          column: 27
        }
      },
      "118": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "119": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 181
        }
      },
      "120": {
        start: {
          line: 317,
          column: 28
        },
        end: {
          line: 317,
          column: 119
        }
      },
      "121": {
        start: {
          line: 318,
          column: 29
        },
        end: {
          line: 318,
          column: 49
        }
      },
      "122": {
        start: {
          line: 319,
          column: 28
        },
        end: {
          line: 319,
          column: 48
        }
      },
      "123": {
        start: {
          line: 321,
          column: 29
        },
        end: {
          line: 321,
          column: 116
        }
      },
      "124": {
        start: {
          line: 322,
          column: 30
        },
        end: {
          line: 322,
          column: 51
        }
      },
      "125": {
        start: {
          line: 323,
          column: 29
        },
        end: {
          line: 323,
          column: 50
        }
      },
      "126": {
        start: {
          line: 325,
          column: 28
        },
        end: {
          line: 325,
          column: 29
        }
      },
      "127": {
        start: {
          line: 325,
          column: 44
        },
        end: {
          line: 325,
          column: 45
        }
      },
      "128": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "129": {
        start: {
          line: 327,
          column: 33
        },
        end: {
          line: 327,
          column: 146
        }
      },
      "130": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 332,
          column: 17
        }
      },
      "131": {
        start: {
          line: 329,
          column: 34
        },
        end: {
          line: 329,
          column: 55
        }
      },
      "132": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 330,
          column: 56
        }
      },
      "133": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 57
        }
      },
      "134": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 357,
          column: 14
        }
      },
      "135": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 79
        }
      },
      "136": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 24
        }
      },
      "137": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 371,
          column: 10
        }
      },
      "138": {
        start: {
          line: 374,
          column: 30
        },
        end: {
          line: 374,
          column: 81
        }
      },
      "139": {
        start: {
          line: 375,
          column: 33
        },
        end: {
          line: 375,
          column: 100
        }
      },
      "140": {
        start: {
          line: 376,
          column: 27
        },
        end: {
          line: 376,
          column: 110
        }
      },
      "141": {
        start: {
          line: 378,
          column: 31
        },
        end: {
          line: 378,
          column: 32
        }
      },
      "142": {
        start: {
          line: 379,
          column: 30
        },
        end: {
          line: 379,
          column: 31
        }
      },
      "143": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 388,
          column: 9
        }
      },
      "144": {
        start: {
          line: 381,
          column: 28
        },
        end: {
          line: 381,
          column: 125
        }
      },
      "145": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 73
        }
      },
      "146": {
        start: {
          line: 383,
          column: 31
        },
        end: {
          line: 383,
          column: 147
        }
      },
      "147": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 63
        }
      },
      "148": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "149": {
        start: {
          line: 392,
          column: 58
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "150": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "151": {
        start: {
          line: 409,
          column: 28
        },
        end: {
          line: 409,
          column: 93
        }
      },
      "152": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 39
        }
      },
      "153": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 22
        }
      },
      "154": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "155": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 108
        }
      },
      "156": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 24
        }
      },
      "157": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 25
        }
      },
      "158": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "159": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 94
        }
      },
      "160": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 24
        }
      },
      "161": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 25
        }
      },
      "162": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "163": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 439,
          column: 13
        }
      },
      "164": {
        start: {
          line: 437,
          column: 36
        },
        end: {
          line: 437,
          column: 95
        }
      },
      "165": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 438,
          column: 54
        }
      },
      "166": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 23
        }
      },
      "167": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "168": {
        start: {
          line: 451,
          column: 33
        },
        end: {
          line: 451,
          column: 63
        }
      },
      "169": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 35
        }
      },
      "170": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 59
        }
      },
      "171": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "172": {
        start: {
          line: 460,
          column: 30
        },
        end: {
          line: 460,
          column: 65
        }
      },
      "173": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 32
        }
      },
      "174": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 59
        }
      },
      "175": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "176": {
        start: {
          line: 469,
          column: 29
        },
        end: {
          line: 469,
          column: 61
        }
      },
      "177": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 31
        }
      },
      "178": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 59
        }
      },
      "179": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "180": {
        start: {
          line: 478,
          column: 35
        },
        end: {
          line: 478,
          column: 67
        }
      },
      "181": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 479,
          column: 37
        }
      },
      "182": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 59
        }
      },
      "183": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "184": {
        start: {
          line: 487,
          column: 34
        },
        end: {
          line: 487,
          column: 65
        }
      },
      "185": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 36
        }
      },
      "186": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 59
        }
      },
      "187": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 501,
          column: 9
        }
      },
      "188": {
        start: {
          line: 496,
          column: 28
        },
        end: {
          line: 496,
          column: 85
        }
      },
      "189": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 30
        }
      },
      "190": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 500,
          column: 59
        }
      },
      "191": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "192": {
        start: {
          line: 505,
          column: 39
        },
        end: {
          line: 505,
          column: 77
        }
      },
      "193": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 41
        }
      },
      "194": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 59
        }
      },
      "195": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "196": {
        start: {
          line: 514,
          column: 36
        },
        end: {
          line: 514,
          column: 71
        }
      },
      "197": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 38
        }
      },
      "198": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 59
        }
      },
      "199": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 529,
          column: 9
        }
      },
      "200": {
        start: {
          line: 523,
          column: 28
        },
        end: {
          line: 523,
          column: 85
        }
      },
      "201": {
        start: {
          line: 524,
          column: 26
        },
        end: {
          line: 524,
          column: 58
        }
      },
      "202": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 44
        }
      },
      "203": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 528,
          column: 59
        }
      },
      "204": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "205": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 37
        }
      },
      "206": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 59
        }
      },
      "207": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 547,
          column: 9
        }
      },
      "208": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 543,
          column: 43
        }
      },
      "209": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 546,
          column: 59
        }
      },
      "210": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 557,
          column: 9
        }
      },
      "211": {
        start: {
          line: 551,
          column: 28
        },
        end: {
          line: 551,
          column: 41
        }
      },
      "212": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 553,
          column: 49
        }
      },
      "213": {
        start: {
          line: 556,
          column: 12
        },
        end: {
          line: 556,
          column: 59
        }
      },
      "214": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 566,
          column: 9
        }
      },
      "215": {
        start: {
          line: 561,
          column: 38
        },
        end: {
          line: 561,
          column: 75
        }
      },
      "216": {
        start: {
          line: 562,
          column: 12
        },
        end: {
          line: 562,
          column: 40
        }
      },
      "217": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 59
        }
      },
      "218": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 575,
          column: 9
        }
      },
      "219": {
        start: {
          line: 570,
          column: 26
        },
        end: {
          line: 570,
          column: 93
        }
      },
      "220": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 571,
          column: 28
        }
      },
      "221": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 574,
          column: 59
        }
      },
      "222": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 585,
          column: 9
        }
      },
      "223": {
        start: {
          line: 579,
          column: 29
        },
        end: {
          line: 579,
          column: 44
        }
      },
      "224": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 581,
          column: 75
        }
      },
      "225": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 584,
          column: 59
        }
      },
      "226": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 600,
          column: 9
        }
      },
      "227": {
        start: {
          line: 589,
          column: 27
        },
        end: {
          line: 589,
          column: 71
        }
      },
      "228": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 590,
          column: 79
        }
      },
      "229": {
        start: {
          line: 591,
          column: 31
        },
        end: {
          line: 591,
          column: 86
        }
      },
      "230": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 596,
          column: 15
        }
      },
      "231": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 59
        }
      },
      "232": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 610,
          column: 9
        }
      },
      "233": {
        start: {
          line: 604,
          column: 28
        },
        end: {
          line: 604,
          column: 79
        }
      },
      "234": {
        start: {
          line: 605,
          column: 26
        },
        end: {
          line: 605,
          column: 57
        }
      },
      "235": {
        start: {
          line: 606,
          column: 12
        },
        end: {
          line: 606,
          column: 44
        }
      },
      "236": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 609,
          column: 59
        }
      },
      "237": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 619,
          column: 9
        }
      },
      "238": {
        start: {
          line: 614,
          column: 27
        },
        end: {
          line: 614,
          column: 85
        }
      },
      "239": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 615,
          column: 29
        }
      },
      "240": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 618,
          column: 59
        }
      },
      "241": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 628,
          column: 9
        }
      },
      "242": {
        start: {
          line: 623,
          column: 26
        },
        end: {
          line: 623,
          column: 77
        }
      },
      "243": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 624,
          column: 28
        }
      },
      "244": {
        start: {
          line: 627,
          column: 12
        },
        end: {
          line: 627,
          column: 59
        }
      },
      "245": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 638,
          column: 9
        }
      },
      "246": {
        start: {
          line: 632,
          column: 29
        },
        end: {
          line: 632,
          column: 44
        }
      },
      "247": {
        start: {
          line: 633,
          column: 27
        },
        end: {
          line: 633,
          column: 91
        }
      },
      "248": {
        start: {
          line: 634,
          column: 12
        },
        end: {
          line: 634,
          column: 29
        }
      },
      "249": {
        start: {
          line: 637,
          column: 12
        },
        end: {
          line: 637,
          column: 59
        }
      },
      "250": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 648,
          column: 9
        }
      },
      "251": {
        start: {
          line: 643,
          column: 12
        },
        end: {
          line: 643,
          column: 61
        }
      },
      "252": {
        start: {
          line: 644,
          column: 12
        },
        end: {
          line: 644,
          column: 77
        }
      },
      "253": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 647,
          column: 59
        }
      },
      "254": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 658,
          column: 9
        }
      },
      "255": {
        start: {
          line: 653,
          column: 12
        },
        end: {
          line: 653,
          column: 58
        }
      },
      "256": {
        start: {
          line: 654,
          column: 12
        },
        end: {
          line: 654,
          column: 78
        }
      },
      "257": {
        start: {
          line: 657,
          column: 12
        },
        end: {
          line: 657,
          column: 59
        }
      },
      "258": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 682,
          column: 9
        }
      },
      "259": {
        start: {
          line: 662,
          column: 26
        },
        end: {
          line: 662,
          column: 58
        }
      },
      "260": {
        start: {
          line: 663,
          column: 28
        },
        end: {
          line: 663,
          column: 59
        }
      },
      "261": {
        start: {
          line: 664,
          column: 23
        },
        end: {
          line: 664,
          column: 25
        }
      },
      "262": {
        start: {
          line: 665,
          column: 12
        },
        end: {
          line: 677,
          column: 13
        }
      },
      "263": {
        start: {
          line: 667,
          column: 20
        },
        end: {
          line: 667,
          column: 120
        }
      },
      "264": {
        start: {
          line: 668,
          column: 20
        },
        end: {
          line: 668,
          column: 26
        }
      },
      "265": {
        start: {
          line: 670,
          column: 20
        },
        end: {
          line: 670,
          column: 117
        }
      },
      "266": {
        start: {
          line: 671,
          column: 20
        },
        end: {
          line: 671,
          column: 26
        }
      },
      "267": {
        start: {
          line: 673,
          column: 20
        },
        end: {
          line: 673,
          column: 118
        }
      },
      "268": {
        start: {
          line: 674,
          column: 20
        },
        end: {
          line: 674,
          column: 26
        }
      },
      "269": {
        start: {
          line: 676,
          column: 20
        },
        end: {
          line: 676,
          column: 120
        }
      },
      "270": {
        start: {
          line: 678,
          column: 12
        },
        end: {
          line: 678,
          column: 49
        }
      },
      "271": {
        start: {
          line: 681,
          column: 12
        },
        end: {
          line: 681,
          column: 59
        }
      },
      "272": {
        start: {
          line: 688,
          column: 8
        },
        end: {
          line: 688,
          column: 27
        }
      },
      "273": {
        start: {
          line: 691,
          column: 0
        },
        end: {
          line: 691,
          column: 42
        }
      },
      "274": {
        start: {
          line: 693,
          column: 0
        },
        end: {
          line: 693,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 90,
            column: 81
          },
          end: {
            line: 90,
            column: 82
          }
        },
        loc: {
          start: {
            line: 90,
            column: 86
          },
          end: {
            line: 90,
            column: 94
          }
        },
        line: 90
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 111
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 35
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 140
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 145,
            column: 54
          },
          end: {
            line: 145,
            column: 55
          }
        },
        loc: {
          start: {
            line: 145,
            column: 59
          },
          end: {
            line: 145,
            column: 80
          }
        },
        line: 145
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 180
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 32
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 200
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 31
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 259
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 38
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 286
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 35
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 304
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        loc: {
          start: {
            line: 364,
            column: 32
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 364
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 37
          },
          end: {
            line: 403,
            column: 5
          }
        },
        line: 373
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 392,
            column: 49
          },
          end: {
            line: 392,
            column: 50
          }
        },
        loc: {
          start: {
            line: 392,
            column: 58
          },
          end: {
            line: 396,
            column: 13
          }
        },
        line: 392
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 407,
            column: 5
          }
        },
        loc: {
          start: {
            line: 407,
            column: 29
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 407
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 27
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 416
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 33
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 425
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 17
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 434
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 36
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 449
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        },
        loc: {
          start: {
            line: 458,
            column: 41
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 458
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 467,
            column: 5
          }
        },
        loc: {
          start: {
            line: 467,
            column: 38
          },
          end: {
            line: 475,
            column: 5
          }
        },
        line: 467
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 476,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        },
        loc: {
          start: {
            line: 476,
            column: 38
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 476
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 37
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 485
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 494,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        },
        loc: {
          start: {
            line: 494,
            column: 31
          },
          end: {
            line: 502,
            column: 5
          }
        },
        line: 494
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        loc: {
          start: {
            line: 503,
            column: 42
          },
          end: {
            line: 511,
            column: 5
          }
        },
        line: 503
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 39
          },
          end: {
            line: 520,
            column: 5
          }
        },
        line: 512
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 521,
            column: 5
          }
        },
        loc: {
          start: {
            line: 521,
            column: 38
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 521
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 531,
            column: 4
          },
          end: {
            line: 531,
            column: 5
          }
        },
        loc: {
          start: {
            line: 531,
            column: 30
          },
          end: {
            line: 539,
            column: 5
          }
        },
        line: 531
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 5
          }
        },
        loc: {
          start: {
            line: 540,
            column: 36
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 540
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 549,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        },
        loc: {
          start: {
            line: 549,
            column: 37
          },
          end: {
            line: 558,
            column: 5
          }
        },
        line: 549
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 559,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        loc: {
          start: {
            line: 559,
            column: 41
          },
          end: {
            line: 567,
            column: 5
          }
        },
        line: 559
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 5
          }
        },
        loc: {
          start: {
            line: 568,
            column: 40
          },
          end: {
            line: 576,
            column: 5
          }
        },
        line: 568
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 577,
            column: 4
          },
          end: {
            line: 577,
            column: 5
          }
        },
        loc: {
          start: {
            line: 577,
            column: 39
          },
          end: {
            line: 586,
            column: 5
          }
        },
        line: 577
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 587,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        },
        loc: {
          start: {
            line: 587,
            column: 36
          },
          end: {
            line: 601,
            column: 5
          }
        },
        line: 587
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 602,
            column: 4
          },
          end: {
            line: 602,
            column: 5
          }
        },
        loc: {
          start: {
            line: 602,
            column: 37
          },
          end: {
            line: 611,
            column: 5
          }
        },
        line: 602
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 612,
            column: 4
          },
          end: {
            line: 612,
            column: 5
          }
        },
        loc: {
          start: {
            line: 612,
            column: 33
          },
          end: {
            line: 620,
            column: 5
          }
        },
        line: 612
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        loc: {
          start: {
            line: 621,
            column: 37
          },
          end: {
            line: 629,
            column: 5
          }
        },
        line: 621
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 5
          }
        },
        loc: {
          start: {
            line: 630,
            column: 36
          },
          end: {
            line: 639,
            column: 5
          }
        },
        line: 630
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 640,
            column: 4
          },
          end: {
            line: 640,
            column: 5
          }
        },
        loc: {
          start: {
            line: 640,
            column: 34
          },
          end: {
            line: 649,
            column: 5
          }
        },
        line: 640
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 650,
            column: 5
          }
        },
        loc: {
          start: {
            line: 650,
            column: 35
          },
          end: {
            line: 659,
            column: 5
          }
        },
        line: 650
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 660,
            column: 4
          },
          end: {
            line: 660,
            column: 5
          }
        },
        loc: {
          start: {
            line: 660,
            column: 34
          },
          end: {
            line: 683,
            column: 5
          }
        },
        line: 660
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 687,
            column: 4
          },
          end: {
            line: 687,
            column: 5
          }
        },
        loc: {
          start: {
            line: 687,
            column: 16
          },
          end: {
            line: 689,
            column: 5
          }
        },
        line: 687
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 49
          }
        }, {
          start: {
            line: 74,
            column: 53
          },
          end: {
            line: 74,
            column: 66
          }
        }],
        line: 74
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 54
          }
        }, {
          start: {
            line: 91,
            column: 58
          },
          end: {
            line: 91,
            column: 93
          }
        }],
        line: 91
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 17
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 123,
            column: 13
          }
        }],
        line: 116
      },
      "5": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 38
          }
        }, {
          start: {
            line: 116,
            column: 42
          },
          end: {
            line: 116,
            column: 72
          }
        }, {
          start: {
            line: 116,
            column: 76
          },
          end: {
            line: 116,
            column: 104
          }
        }],
        line: 116
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 120,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 120,
            column: 43
          }
        }, {
          start: {
            line: 120,
            column: 47
          },
          end: {
            line: 120,
            column: 77
          }
        }, {
          start: {
            line: 120,
            column: 81
          },
          end: {
            line: 120,
            column: 109
          }
        }],
        line: 120
      },
      "8": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 156,
            column: 13
          }
        }],
        line: 149
      },
      "9": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 26
          }
        }, {
          start: {
            line: 149,
            column: 30
          },
          end: {
            line: 149,
            column: 59
          }
        }],
        line: 149
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 153,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 153,
            column: 61
          }
        }, {
          start: {
            line: 153,
            column: 65
          },
          end: {
            line: 153,
            column: 81
          }
        }],
        line: 153
      },
      "12": {
        loc: {
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 34
          },
          end: {
            line: 185,
            column: 43
          }
        }, {
          start: {
            line: 185,
            column: 46
          },
          end: {
            line: 185,
            column: 56
          }
        }],
        line: 185
      },
      "13": {
        loc: {
          start: {
            line: 186,
            column: 25
          },
          end: {
            line: 186,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 186,
            column: 56
          }
        }, {
          start: {
            line: 186,
            column: 59
          },
          end: {
            line: 186,
            column: 95
          }
        }],
        line: 186
      },
      "14": {
        loc: {
          start: {
            line: 224,
            column: 34
          },
          end: {
            line: 224,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 34
          },
          end: {
            line: 224,
            column: 58
          }
        }, {
          start: {
            line: 224,
            column: 62
          },
          end: {
            line: 224,
            column: 63
          }
        }],
        line: 224
      },
      "15": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 238,
            column: 13
          }
        }, {
          start: {
            line: 235,
            column: 17
          },
          end: {
            line: 238,
            column: 13
          }
        }],
        line: 231
      },
      "16": {
        loc: {
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 231,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 16
          },
          end: {
            line: 231,
            column: 31
          }
        }, {
          start: {
            line: 231,
            column: 35
          },
          end: {
            line: 231,
            column: 55
          }
        }],
        line: 231
      },
      "17": {
        loc: {
          start: {
            line: 235,
            column: 17
          },
          end: {
            line: 238,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 17
          },
          end: {
            line: 238,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "18": {
        loc: {
          start: {
            line: 235,
            column: 21
          },
          end: {
            line: 235,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 21
          },
          end: {
            line: 235,
            column: 36
          }
        }, {
          start: {
            line: 235,
            column: 40
          },
          end: {
            line: 235,
            column: 59
          }
        }],
        line: 235
      },
      "19": {
        loc: {
          start: {
            line: 301,
            column: 26
          },
          end: {
            line: 301,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 301,
            column: 45
          },
          end: {
            line: 301,
            column: 48
          }
        }, {
          start: {
            line: 301,
            column: 51
          },
          end: {
            line: 301,
            column: 52
          }
        }],
        line: 301
      },
      "20": {
        loc: {
          start: {
            line: 311,
            column: 26
          },
          end: {
            line: 311,
            column: 180
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 26
          },
          end: {
            line: 311,
            column: 175
          }
        }, {
          start: {
            line: 311,
            column: 179
          },
          end: {
            line: 311,
            column: 180
          }
        }],
        line: 311
      },
      "21": {
        loc: {
          start: {
            line: 328,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 16
          },
          end: {
            line: 332,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "22": {
        loc: {
          start: {
            line: 330,
            column: 32
          },
          end: {
            line: 330,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 32
          },
          end: {
            line: 330,
            column: 50
          }
        }, {
          start: {
            line: 330,
            column: 54
          },
          end: {
            line: 330,
            column: 55
          }
        }],
        line: 330
      },
      "23": {
        loc: {
          start: {
            line: 331,
            column: 33
          },
          end: {
            line: 331,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 33
          },
          end: {
            line: 331,
            column: 51
          }
        }, {
          start: {
            line: 331,
            column: 55
          },
          end: {
            line: 331,
            column: 56
          }
        }],
        line: 331
      },
      "24": {
        loc: {
          start: {
            line: 376,
            column: 27
          },
          end: {
            line: 376,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 376,
            column: 54
          },
          end: {
            line: 376,
            column: 103
          }
        }, {
          start: {
            line: 376,
            column: 106
          },
          end: {
            line: 376,
            column: 110
          }
        }],
        line: 376
      },
      "25": {
        loc: {
          start: {
            line: 384,
            column: 30
          },
          end: {
            line: 384,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 30
          },
          end: {
            line: 384,
            column: 57
          }
        }, {
          start: {
            line: 384,
            column: 61
          },
          end: {
            line: 384,
            column: 62
          }
        }],
        line: 384
      },
      "26": {
        loc: {
          start: {
            line: 394,
            column: 25
          },
          end: {
            line: 394,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 25
          },
          end: {
            line: 394,
            column: 37
          }
        }, {
          start: {
            line: 394,
            column: 41
          },
          end: {
            line: 394,
            column: 51
          }
        }],
        line: 394
      },
      "27": {
        loc: {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 439,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 439,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "28": {
        loc: {
          start: {
            line: 438,
            column: 23
          },
          end: {
            line: 438,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 23
          },
          end: {
            line: 438,
            column: 42
          }
        }, {
          start: {
            line: 438,
            column: 46
          },
          end: {
            line: 438,
            column: 53
          }
        }],
        line: 438
      },
      "29": {
        loc: {
          start: {
            line: 524,
            column: 26
          },
          end: {
            line: 524,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 26
          },
          end: {
            line: 524,
            column: 51
          }
        }, {
          start: {
            line: 524,
            column: 55
          },
          end: {
            line: 524,
            column: 58
          }
        }],
        line: 524
      },
      "30": {
        loc: {
          start: {
            line: 591,
            column: 31
          },
          end: {
            line: 591,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 591,
            column: 52
          },
          end: {
            line: 591,
            column: 79
          }
        }, {
          start: {
            line: 591,
            column: 82
          },
          end: {
            line: 591,
            column: 86
          }
        }],
        line: 591
      },
      "31": {
        loc: {
          start: {
            line: 605,
            column: 26
          },
          end: {
            line: 605,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 605,
            column: 26
          },
          end: {
            line: 605,
            column: 51
          }
        }, {
          start: {
            line: 605,
            column: 55
          },
          end: {
            line: 605,
            column: 57
          }
        }],
        line: 605
      },
      "32": {
        loc: {
          start: {
            line: 662,
            column: 26
          },
          end: {
            line: 662,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 662,
            column: 26
          },
          end: {
            line: 662,
            column: 51
          }
        }, {
          start: {
            line: 662,
            column: 55
          },
          end: {
            line: 662,
            column: 58
          }
        }],
        line: 662
      },
      "33": {
        loc: {
          start: {
            line: 663,
            column: 28
          },
          end: {
            line: 663,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 663,
            column: 28
          },
          end: {
            line: 663,
            column: 42
          }
        }, {
          start: {
            line: 663,
            column: 46
          },
          end: {
            line: 663,
            column: 59
          }
        }],
        line: 663
      },
      "34": {
        loc: {
          start: {
            line: 665,
            column: 12
          },
          end: {
            line: 677,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 666,
            column: 16
          },
          end: {
            line: 668,
            column: 26
          }
        }, {
          start: {
            line: 669,
            column: 16
          },
          end: {
            line: 671,
            column: 26
          }
        }, {
          start: {
            line: 672,
            column: 16
          },
          end: {
            line: 674,
            column: 26
          }
        }, {
          start: {
            line: 675,
            column: 16
          },
          end: {
            line: 676,
            column: 120
          }
        }],
        line: 665
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\health-dashboard.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\health-dashboard.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - SYSTEM HEALTH DASHBOARD API\r\n * =============================================================================\r\n * \r\n * This module provides a comprehensive health dashboard API for monitoring\r\n * system status, performance metrics, and deployment health.\r\n */\r\n\r\nimport { Router, Request, Response } from 'express';\r\nimport { logger } from '../core/logger';\r\nimport { monitoringAutomation } from './monitoring-automation';\r\nimport { backupRecovery } from './backup-recovery';\r\nimport { databaseSetup } from './database-setup';\r\nimport { execSync } from 'child_process';\r\nimport { existsSync, readFileSync } from 'fs';\r\n\r\ninterface HealthStatus {\r\n  overall: 'HEALTHY' | 'WARNING' | 'CRITICAL' | 'ERROR';\r\n  timestamp: Date;\r\n  uptime: number;\r\n  version: string;\r\n  environment: string;\r\n  components: {\r\n    system: ComponentHealth;\r\n    application: ComponentHealth;\r\n    database: ComponentHealth;\r\n    security: ComponentHealth;\r\n    trading: ComponentHealth;\r\n  };\r\n  metrics: {\r\n    performance: PerformanceMetrics;\r\n    resources: ResourceMetrics;\r\n    alerts: AlertSummary;\r\n  };\r\n  maintenance: MaintenanceStatus;\r\n}\r\n\r\ninterface ComponentHealth {\r\n  status: 'HEALTHY' | 'WARNING' | 'CRITICAL' | 'ERROR';\r\n  message: string;\r\n  details: any;\r\n  lastCheck: Date;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n  responseTime: number;\r\n  throughput: number;\r\n  errorRate: number;\r\n  availability: number;\r\n}\r\n\r\ninterface ResourceMetrics {\r\n  cpu: {\r\n    usage: number;\r\n    temperature: number;\r\n    cores: number;\r\n  };\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  disk: {\r\n    used: number;\r\n    total: number;\r\n    percentage: number;\r\n  };\r\n  network: {\r\n    bytesIn: number;\r\n    bytesOut: number;\r\n  };\r\n}\r\n\r\ninterface AlertSummary {\r\n  active: number;\r\n  critical: number;\r\n  warnings: number;\r\n  recent: Array<{\r\n    timestamp: Date;\r\n    level: string;\r\n    message: string;\r\n  }>;\r\n}\r\n\r\ninterface MaintenanceStatus {\r\n  lastBackup: Date | null;\r\n  nextBackup: Date | null;\r\n  scheduledTasks: Array<{\r\n    name: string;\r\n    nextRun: Date;\r\n    enabled: boolean;\r\n  }>;\r\n  systemUpdates: {\r\n    available: number;\r\n    security: number;\r\n    lastCheck: Date;\r\n  };\r\n}\r\n\r\nexport class HealthDashboard {\r\n  private router: Router;\r\n  private startTime: Date;\r\n\r\n  constructor() {\r\n    this.router = Router();\r\n    this.startTime = new Date();\r\n    this.setupRoutes();\r\n  }\r\n\r\n  /**\r\n   * Setup API routes\r\n   */\r\n  private setupRoutes(): void {\r\n    // Main health endpoint\r\n    this.router.get('/health', this.getHealthStatus.bind(this));\r\n    \r\n    // Detailed component health\r\n    this.router.get('/health/system', this.getSystemHealth.bind(this));\r\n    this.router.get('/health/application', this.getApplicationHealth.bind(this));\r\n    this.router.get('/health/database', this.getDatabaseHealth.bind(this));\r\n    this.router.get('/health/security', this.getSecurityHealth.bind(this));\r\n    this.router.get('/health/trading', this.getTradingHealth.bind(this));\r\n\r\n    // Metrics endpoints\r\n    this.router.get('/metrics', this.getMetrics.bind(this));\r\n    this.router.get('/metrics/performance', this.getPerformanceMetrics.bind(this));\r\n    this.router.get('/metrics/resources', this.getResourceMetrics.bind(this));\r\n    this.router.get('/metrics/history', this.getMetricsHistory.bind(this));\r\n\r\n    // Alerts endpoints\r\n    this.router.get('/alerts', this.getAlerts.bind(this));\r\n    this.router.get('/alerts/active', this.getActiveAlerts.bind(this));\r\n    this.router.post('/alerts/:id/acknowledge', this.acknowledgeAlert.bind(this));\r\n\r\n    // Maintenance endpoints\r\n    this.router.get('/maintenance', this.getMaintenanceStatus.bind(this));\r\n    this.router.get('/maintenance/tasks', this.getMaintenanceTasks.bind(this));\r\n    this.router.post('/maintenance/tasks/:name/run', this.runMaintenanceTask.bind(this));\r\n\r\n    // Backup endpoints\r\n    this.router.get('/backups', this.getBackupStatus.bind(this));\r\n    this.router.get('/backups/history', this.getBackupHistory.bind(this));\r\n    this.router.post('/backups/create', this.createBackup.bind(this));\r\n\r\n    // Recovery endpoints\r\n    this.router.get('/recovery/plans', this.getRecoveryPlans.bind(this));\r\n    this.router.post('/recovery/execute/:plan', this.executeRecovery.bind(this));\r\n\r\n    // System control endpoints\r\n    this.router.post('/system/restart', this.restartSystem.bind(this));\r\n    this.router.post('/system/shutdown', this.shutdownSystem.bind(this));\r\n    this.router.get('/system/logs', this.getSystemLogs.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Get overall health status\r\n   */\r\n  private async getHealthStatus(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const healthStatus: HealthStatus = {\r\n        overall: 'HEALTHY',\r\n        timestamp: new Date(),\r\n        uptime: Date.now() - this.startTime.getTime(),\r\n        version: this.getVersion(),\r\n        environment: process.env.NODE_ENV || 'development',\r\n        components: {\r\n          system: await this.checkSystemHealth(),\r\n          application: await this.checkApplicationHealth(),\r\n          database: await this.checkDatabaseHealth(),\r\n          security: await this.checkSecurityHealth(),\r\n          trading: await this.checkTradingHealth()\r\n        },\r\n        metrics: {\r\n          performance: await this.getPerformanceMetricsData(),\r\n          resources: await this.getResourceMetricsData(),\r\n          alerts: await this.getAlertSummaryData()\r\n        },\r\n        maintenance: await this.getMaintenanceStatusData()\r\n      };\r\n\r\n      // Determine overall status\r\n      const componentStatuses = Object.values(healthStatus.components).map(c => c.status);\r\n      if (componentStatuses.includes('CRITICAL') || componentStatuses.includes('ERROR')) {\r\n        healthStatus.overall = 'CRITICAL';\r\n      } else if (componentStatuses.includes('WARNING')) {\r\n        healthStatus.overall = 'WARNING';\r\n      }\r\n\r\n      res.json(healthStatus);\r\n\r\n    } catch (error) {\r\n      logger.error('Health status check failed:', error);\r\n      res.status(500).json({\r\n        overall: 'ERROR',\r\n        timestamp: new Date(),\r\n        error: error.message\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Component health check methods\r\n   */\r\n  private async checkSystemHealth(): Promise<ComponentHealth> {\r\n    try {\r\n      const metrics = await this.getResourceMetricsData();\r\n      \r\n      let status: ComponentHealth['status'] = 'HEALTHY';\r\n      let message = 'System resources are within normal limits';\r\n\r\n      if (metrics.cpu.usage > 85 || metrics.memory.percentage > 90 || metrics.disk.percentage > 90) {\r\n        status = 'CRITICAL';\r\n        message = 'System resources are critically high';\r\n      } else if (metrics.cpu.usage > 70 || metrics.memory.percentage > 80 || metrics.disk.percentage > 80) {\r\n        status = 'WARNING';\r\n        message = 'System resources are elevated';\r\n      }\r\n\r\n      return {\r\n        status,\r\n        message,\r\n        details: metrics,\r\n        lastCheck: new Date()\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        status: 'ERROR',\r\n        message: `System health check failed: ${error.message}`,\r\n        details: null,\r\n        lastCheck: new Date()\r\n      };\r\n    }\r\n  }\r\n\r\n  private async checkApplicationHealth(): Promise<ComponentHealth> {\r\n    try {\r\n      const processes = await this.getProcessStatus();\r\n      const apiHealth = await this.checkApiHealth();\r\n      const dashboardHealth = await this.checkDashboardHealth();\r\n\r\n      const runningProcesses = processes.filter(p => p.status === 'online');\r\n      const totalProcesses = processes.length;\r\n\r\n      let status: ComponentHealth['status'] = 'HEALTHY';\r\n      let message = 'All application services are running normally';\r\n\r\n      if (!apiHealth || runningProcesses.length === 0) {\r\n        status = 'CRITICAL';\r\n        message = 'Critical application services are down';\r\n      } else if (runningProcesses.length < totalProcesses || !dashboardHealth) {\r\n        status = 'WARNING';\r\n        message = 'Some application services have issues';\r\n      }\r\n\r\n      return {\r\n        status,\r\n        message,\r\n        details: {\r\n          processes: {\r\n            running: runningProcesses.length,\r\n            total: totalProcesses\r\n          },\r\n          api: apiHealth,\r\n          dashboard: dashboardHealth\r\n        },\r\n        lastCheck: new Date()\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        status: 'ERROR',\r\n        message: `Application health check failed: ${error.message}`,\r\n        details: null,\r\n        lastCheck: new Date()\r\n      };\r\n    }\r\n  }\r\n\r\n  private async checkDatabaseHealth(): Promise<ComponentHealth> {\r\n    try {\r\n      const isValid = await databaseSetup.validateIntegrity();\r\n      const stats = await databaseSetup.getStatistics();\r\n\r\n      return {\r\n        status: isValid ? 'HEALTHY' : 'CRITICAL',\r\n        message: isValid ? 'Database is healthy' : 'Database integrity issues detected',\r\n        details: stats,\r\n        lastCheck: new Date()\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        status: 'ERROR',\r\n        message: `Database health check failed: ${error.message}`,\r\n        details: null,\r\n        lastCheck: new Date()\r\n      };\r\n    }\r\n  }\r\n\r\n  private async checkSecurityHealth(): Promise<ComponentHealth> {\r\n    try {\r\n      // Check firewall status\r\n      let firewallActive = false;\r\n      try {\r\n        const ufwStatus = execSync('sudo ufw status', { encoding: 'utf-8' });\r\n        firewallActive = ufwStatus.includes('Status: active');\r\n      } catch {\r\n        // UFW not available\r\n      }\r\n\r\n      // Check fail2ban status\r\n      let fail2banActive = false;\r\n      try {\r\n        const fail2banStatus = execSync('sudo systemctl is-active fail2ban', { encoding: 'utf-8' });\r\n        fail2banActive = fail2banStatus.trim() === 'active';\r\n      } catch {\r\n        // Fail2ban not available\r\n      }\r\n\r\n      // Check for security updates\r\n      let securityUpdates = 0;\r\n      try {\r\n        const updates = execSync('apt list --upgradable 2>/dev/null | grep -i security | wc -l', { encoding: 'utf-8' });\r\n        securityUpdates = parseInt(updates.trim()) || 0;\r\n      } catch {\r\n        // Cannot check updates\r\n      }\r\n\r\n      let status: ComponentHealth['status'] = 'HEALTHY';\r\n      let message = 'Security systems are functioning normally';\r\n\r\n      if (!firewallActive || securityUpdates > 10) {\r\n        status = 'CRITICAL';\r\n        message = 'Critical security issues detected';\r\n      } else if (!fail2banActive || securityUpdates > 0) {\r\n        status = 'WARNING';\r\n        message = 'Security warnings detected';\r\n      }\r\n\r\n      return {\r\n        status,\r\n        message,\r\n        details: {\r\n          firewall: firewallActive,\r\n          fail2ban: fail2banActive,\r\n          securityUpdates\r\n        },\r\n        lastCheck: new Date()\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        status: 'ERROR',\r\n        message: `Security health check failed: ${error.message}`,\r\n        details: null,\r\n        lastCheck: new Date()\r\n      };\r\n    }\r\n  }\r\n\r\n  private async checkTradingHealth(): Promise<ComponentHealth> {\r\n    try {\r\n      // This would check trading-specific health metrics\r\n      // For now, return a basic status\r\n      return {\r\n        status: 'HEALTHY',\r\n        message: 'Trading systems are operational',\r\n        details: {\r\n          activeTrades: 0,\r\n          riskExposure: 0,\r\n          lastTradeTime: null\r\n        },\r\n        lastCheck: new Date()\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        status: 'ERROR',\r\n        message: `Trading health check failed: ${error.message}`,\r\n        details: null,\r\n        lastCheck: new Date()\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Metrics collection methods\r\n   */\r\n  private async getPerformanceMetricsData(): Promise<PerformanceMetrics> {\r\n    // Get response time\r\n    let responseTime = 0;\r\n    try {\r\n      const start = Date.now();\r\n      execSync('curl -s http://localhost:3001/api/v1/health', { stdio: 'pipe' });\r\n      responseTime = Date.now() - start;\r\n    } catch {\r\n      responseTime = -1; // Service unavailable\r\n    }\r\n\r\n    return {\r\n      responseTime,\r\n      throughput: 0, // Would be calculated from request logs\r\n      errorRate: 0, // Would be calculated from error logs\r\n      availability: responseTime > 0 ? 100 : 0\r\n    };\r\n  }\r\n\r\n  private async getResourceMetricsData(): Promise<ResourceMetrics> {\r\n    try {\r\n      // CPU metrics\r\n      const cpuUsage = parseFloat(execSync(\"top -bn1 | grep 'Cpu(s)' | awk '{print $2}' | cut -d'%' -f1\", { encoding: 'utf-8' }).trim());\r\n      const cpuCores = parseInt(execSync('nproc', { encoding: 'utf-8' }).trim());\r\n      \r\n      let cpuTemp = 0;\r\n      try {\r\n        cpuTemp = parseFloat(execSync(\"sensors | grep 'Core 0' | awk '{print $3}' | cut -d'+' -f2 | cut -d'\xB0' -f1\", { encoding: 'utf-8' }).trim()) || 0;\r\n      } catch {\r\n        // Temperature sensor not available\r\n      }\r\n\r\n      // Memory metrics\r\n      const memInfo = execSync('free -b', { encoding: 'utf-8' }).split('\\n')[1].split(/\\s+/);\r\n      const memTotal = parseInt(memInfo[1]);\r\n      const memUsed = parseInt(memInfo[2]);\r\n\r\n      // Disk metrics\r\n      const diskInfo = execSync(\"df -B1 / | tail -1\", { encoding: 'utf-8' }).split(/\\s+/);\r\n      const diskTotal = parseInt(diskInfo[1]);\r\n      const diskUsed = parseInt(diskInfo[2]);\r\n\r\n      // Network metrics (simplified)\r\n      let networkIn = 0, networkOut = 0;\r\n      try {\r\n        const netStats = execSync(\"cat /proc/net/dev | grep -E 'eth0|wlan0' | head -1\", { encoding: 'utf-8' }).trim();\r\n        if (netStats) {\r\n          const stats = netStats.split(/\\s+/);\r\n          networkIn = parseInt(stats[1]) || 0;\r\n          networkOut = parseInt(stats[9]) || 0;\r\n        }\r\n      } catch {\r\n        // Network stats not available\r\n      }\r\n\r\n      return {\r\n        cpu: {\r\n          usage: cpuUsage,\r\n          temperature: cpuTemp,\r\n          cores: cpuCores\r\n        },\r\n        memory: {\r\n          used: memUsed,\r\n          total: memTotal,\r\n          percentage: (memUsed / memTotal) * 100\r\n        },\r\n        disk: {\r\n          used: diskUsed,\r\n          total: diskTotal,\r\n          percentage: (diskUsed / diskTotal) * 100\r\n        },\r\n        network: {\r\n          bytesIn: networkIn,\r\n          bytesOut: networkOut\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      logger.error('Error collecting resource metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  private async getAlertSummaryData(): Promise<AlertSummary> {\r\n    // This would integrate with the monitoring system\r\n    return {\r\n      active: 0,\r\n      critical: 0,\r\n      warnings: 0,\r\n      recent: []\r\n    };\r\n  }\r\n\r\n  private async getMaintenanceStatusData(): Promise<MaintenanceStatus> {\r\n    const backupHistory = backupRecovery.getBackupHistory();\r\n    const maintenanceTasks = monitoringAutomation.getMaintenanceStatus();\r\n\r\n    const lastBackup = backupHistory.length > 0 ? backupHistory[backupHistory.length - 1].timestamp : null;\r\n\r\n    // Check for system updates\r\n    let availableUpdates = 0;\r\n    let securityUpdates = 0;\r\n    try {\r\n      const updates = execSync('apt list --upgradable 2>/dev/null | wc -l', { encoding: 'utf-8' });\r\n      availableUpdates = Math.max(0, parseInt(updates.trim()) - 1); // Subtract header line\r\n\r\n      const secUpdates = execSync('apt list --upgradable 2>/dev/null | grep -i security | wc -l', { encoding: 'utf-8' });\r\n      securityUpdates = parseInt(secUpdates.trim()) || 0;\r\n    } catch {\r\n      // Cannot check updates\r\n    }\r\n\r\n    return {\r\n      lastBackup,\r\n      nextBackup: null, // Would be calculated from backup schedule\r\n      scheduledTasks: maintenanceTasks.map(task => ({\r\n        name: task.name,\r\n        nextRun: task.nextRun || new Date(),\r\n        enabled: task.enabled\r\n      })),\r\n      systemUpdates: {\r\n        available: availableUpdates,\r\n        security: securityUpdates,\r\n        lastCheck: new Date()\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Helper methods\r\n   */\r\n  private async getProcessStatus(): Promise<any[]> {\r\n    try {\r\n      const pm2List = execSync('pm2 jlist', { encoding: 'utf-8' });\r\n      return JSON.parse(pm2List);\r\n    } catch {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private async checkApiHealth(): Promise<boolean> {\r\n    try {\r\n      execSync('curl -f http://localhost:3001/api/v1/health', { stdio: 'pipe' });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async checkDashboardHealth(): Promise<boolean> {\r\n    try {\r\n      execSync('curl -f http://localhost:3002', { stdio: 'pipe' });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private getVersion(): string {\r\n    try {\r\n      if (existsSync('package.json')) {\r\n        const packageJson = JSON.parse(readFileSync('package.json', 'utf-8'));\r\n        return packageJson.version || '1.0.0';\r\n      }\r\n    } catch {\r\n      // Ignore errors\r\n    }\r\n    return '1.0.0';\r\n  }\r\n\r\n  /**\r\n   * API endpoint implementations\r\n   */\r\n  private async getSystemHealth(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const systemHealth = await this.checkSystemHealth();\r\n      res.json(systemHealth);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getApplicationHealth(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const appHealth = await this.checkApplicationHealth();\r\n      res.json(appHealth);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getDatabaseHealth(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const dbHealth = await this.checkDatabaseHealth();\r\n      res.json(dbHealth);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getSecurityHealth(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const securityHealth = await this.checkSecurityHealth();\r\n      res.json(securityHealth);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getTradingHealth(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const tradingHealth = await this.checkTradingHealth();\r\n      res.json(tradingHealth);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getMetrics(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const metrics = monitoringAutomation.getMetrics();\r\n      res.json(metrics);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getPerformanceMetrics(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const performanceMetrics = await this.getPerformanceMetricsData();\r\n      res.json(performanceMetrics);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getResourceMetrics(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const resourceMetrics = await this.getResourceMetricsData();\r\n      res.json(resourceMetrics);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getMetricsHistory(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const history = monitoringAutomation.getMetrics();\r\n      const limit = parseInt(req.query.limit as string) || 100;\r\n      res.json(history.slice(-limit));\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getAlerts(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      // This would integrate with the alerting system\r\n      res.json({ alerts: [] });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getActiveAlerts(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      // This would return only active alerts\r\n      res.json({ activeAlerts: [] });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async acknowledgeAlert(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const alertId = req.params.id;\r\n      // This would acknowledge the alert\r\n      res.json({ success: true, alertId });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getMaintenanceStatus(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const maintenanceStatus = await this.getMaintenanceStatusData();\r\n      res.json(maintenanceStatus);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getMaintenanceTasks(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const tasks = monitoringAutomation.getMaintenanceStatus();\r\n      res.json(tasks);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async runMaintenanceTask(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const taskName = req.params.name;\r\n      // This would trigger the maintenance task\r\n      res.json({ success: true, task: taskName, status: 'started' });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getBackupStatus(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const config = backupRecovery.getConfig();\r\n      const history = backupRecovery.getBackupHistory();\r\n      const lastBackup = history.length > 0 ? history[history.length - 1] : null;\r\n\r\n      res.json({\r\n        config,\r\n        lastBackup,\r\n        totalBackups: history.length\r\n      });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getBackupHistory(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const history = backupRecovery.getBackupHistory();\r\n      const limit = parseInt(req.query.limit as string) || 50;\r\n      res.json(history.slice(-limit));\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async createBackup(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const result = await backupRecovery.performFullBackup();\r\n      res.json(result);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getRecoveryPlans(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const plans = backupRecovery.getRecoveryPlans();\r\n      res.json(plans);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async executeRecovery(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const planName = req.params.plan;\r\n      const result = await backupRecovery.executeRecovery(planName);\r\n      res.json(result);\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async restartSystem(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      // This would restart the system services\r\n      execSync('pm2 restart all');\r\n      res.json({ success: true, message: 'System restart initiated' });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async shutdownSystem(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      // This would gracefully shutdown the system\r\n      execSync('pm2 stop all');\r\n      res.json({ success: true, message: 'System shutdown initiated' });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  private async getSystemLogs(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const lines = parseInt(req.query.lines as string) || 100;\r\n      const logType = req.query.type as string || 'application';\r\n      \r\n      let logs = '';\r\n      switch (logType) {\r\n        case 'application':\r\n          logs = execSync(`pm2 logs --lines ${lines} --nostream`, { encoding: 'utf-8' });\r\n          break;\r\n        case 'system':\r\n          logs = execSync(`journalctl -n ${lines} --no-pager`, { encoding: 'utf-8' });\r\n          break;\r\n        case 'security':\r\n          logs = execSync(`tail -n ${lines} /var/log/auth.log`, { encoding: 'utf-8' });\r\n          break;\r\n        default:\r\n          logs = execSync(`pm2 logs --lines ${lines} --nostream`, { encoding: 'utf-8' });\r\n      }\r\n\r\n      res.json({ logs: logs.split('\\n') });\r\n    } catch (error) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get router instance\r\n   */\r\n  getRouter(): Router {\r\n    return this.router;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const healthDashboard = new HealthDashboard();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "40a4591203728de0c1bb48c1e85ea36a7ea2025e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_274xqcznom = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_274xqcznom();
cov_274xqcznom().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_274xqcznom().s[1]++;
exports.healthDashboard = exports.HealthDashboard = void 0;
const express_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[2]++, require("express"));
const logger_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[3]++, require("../core/logger"));
const monitoring_automation_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[4]++, require("./monitoring-automation"));
const backup_recovery_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[5]++, require("./backup-recovery"));
const database_setup_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[6]++, require("./database-setup"));
const child_process_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[7]++, require("child_process"));
const fs_1 =
/* istanbul ignore next */
(cov_274xqcznom().s[8]++, require("fs"));
class HealthDashboard {
  router;
  startTime;
  constructor() {
    /* istanbul ignore next */
    cov_274xqcznom().f[0]++;
    cov_274xqcznom().s[9]++;
    this.router = (0, express_1.Router)();
    /* istanbul ignore next */
    cov_274xqcznom().s[10]++;
    this.startTime = new Date();
    /* istanbul ignore next */
    cov_274xqcznom().s[11]++;
    this.setupRoutes();
  }
  /**
   * Setup API routes
   */
  setupRoutes() {
    /* istanbul ignore next */
    cov_274xqcznom().f[1]++;
    cov_274xqcznom().s[12]++;
    // Main health endpoint
    this.router.get('/health', this.getHealthStatus.bind(this));
    // Detailed component health
    /* istanbul ignore next */
    cov_274xqcznom().s[13]++;
    this.router.get('/health/system', this.getSystemHealth.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[14]++;
    this.router.get('/health/application', this.getApplicationHealth.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[15]++;
    this.router.get('/health/database', this.getDatabaseHealth.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[16]++;
    this.router.get('/health/security', this.getSecurityHealth.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[17]++;
    this.router.get('/health/trading', this.getTradingHealth.bind(this));
    // Metrics endpoints
    /* istanbul ignore next */
    cov_274xqcznom().s[18]++;
    this.router.get('/metrics', this.getMetrics.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[19]++;
    this.router.get('/metrics/performance', this.getPerformanceMetrics.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[20]++;
    this.router.get('/metrics/resources', this.getResourceMetrics.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[21]++;
    this.router.get('/metrics/history', this.getMetricsHistory.bind(this));
    // Alerts endpoints
    /* istanbul ignore next */
    cov_274xqcznom().s[22]++;
    this.router.get('/alerts', this.getAlerts.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[23]++;
    this.router.get('/alerts/active', this.getActiveAlerts.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[24]++;
    this.router.post('/alerts/:id/acknowledge', this.acknowledgeAlert.bind(this));
    // Maintenance endpoints
    /* istanbul ignore next */
    cov_274xqcznom().s[25]++;
    this.router.get('/maintenance', this.getMaintenanceStatus.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[26]++;
    this.router.get('/maintenance/tasks', this.getMaintenanceTasks.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[27]++;
    this.router.post('/maintenance/tasks/:name/run', this.runMaintenanceTask.bind(this));
    // Backup endpoints
    /* istanbul ignore next */
    cov_274xqcznom().s[28]++;
    this.router.get('/backups', this.getBackupStatus.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[29]++;
    this.router.get('/backups/history', this.getBackupHistory.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[30]++;
    this.router.post('/backups/create', this.createBackup.bind(this));
    // Recovery endpoints
    /* istanbul ignore next */
    cov_274xqcznom().s[31]++;
    this.router.get('/recovery/plans', this.getRecoveryPlans.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[32]++;
    this.router.post('/recovery/execute/:plan', this.executeRecovery.bind(this));
    // System control endpoints
    /* istanbul ignore next */
    cov_274xqcznom().s[33]++;
    this.router.post('/system/restart', this.restartSystem.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[34]++;
    this.router.post('/system/shutdown', this.shutdownSystem.bind(this));
    /* istanbul ignore next */
    cov_274xqcznom().s[35]++;
    this.router.get('/system/logs', this.getSystemLogs.bind(this));
  }
  /**
   * Get overall health status
   */
  async getHealthStatus(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[2]++;
    cov_274xqcznom().s[36]++;
    try {
      const healthStatus =
      /* istanbul ignore next */
      (cov_274xqcznom().s[37]++, {
        overall: 'HEALTHY',
        timestamp: new Date(),
        uptime: Date.now() - this.startTime.getTime(),
        version: this.getVersion(),
        environment:
        /* istanbul ignore next */
        (cov_274xqcznom().b[0][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[0][1]++, 'development'),
        components: {
          system: await this.checkSystemHealth(),
          application: await this.checkApplicationHealth(),
          database: await this.checkDatabaseHealth(),
          security: await this.checkSecurityHealth(),
          trading: await this.checkTradingHealth()
        },
        metrics: {
          performance: await this.getPerformanceMetricsData(),
          resources: await this.getResourceMetricsData(),
          alerts: await this.getAlertSummaryData()
        },
        maintenance: await this.getMaintenanceStatusData()
      });
      // Determine overall status
      const componentStatuses =
      /* istanbul ignore next */
      (cov_274xqcznom().s[38]++, Object.values(healthStatus.components).map(c => {
        /* istanbul ignore next */
        cov_274xqcznom().f[3]++;
        cov_274xqcznom().s[39]++;
        return c.status;
      }));
      /* istanbul ignore next */
      cov_274xqcznom().s[40]++;
      if (
      /* istanbul ignore next */
      (cov_274xqcznom().b[2][0]++, componentStatuses.includes('CRITICAL')) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[2][1]++, componentStatuses.includes('ERROR'))) {
        /* istanbul ignore next */
        cov_274xqcznom().b[1][0]++;
        cov_274xqcznom().s[41]++;
        healthStatus.overall = 'CRITICAL';
      } else {
        /* istanbul ignore next */
        cov_274xqcznom().b[1][1]++;
        cov_274xqcznom().s[42]++;
        if (componentStatuses.includes('WARNING')) {
          /* istanbul ignore next */
          cov_274xqcznom().b[3][0]++;
          cov_274xqcznom().s[43]++;
          healthStatus.overall = 'WARNING';
        } else
        /* istanbul ignore next */
        {
          cov_274xqcznom().b[3][1]++;
        }
      }
      /* istanbul ignore next */
      cov_274xqcznom().s[44]++;
      res.json(healthStatus);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[45]++;
      logger_1.logger.error('Health status check failed:', error);
      /* istanbul ignore next */
      cov_274xqcznom().s[46]++;
      res.status(500).json({
        overall: 'ERROR',
        timestamp: new Date(),
        error: error.message
      });
    }
  }
  /**
   * Component health check methods
   */
  async checkSystemHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[4]++;
    cov_274xqcznom().s[47]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_274xqcznom().s[48]++, await this.getResourceMetricsData());
      let status =
      /* istanbul ignore next */
      (cov_274xqcznom().s[49]++, 'HEALTHY');
      let message =
      /* istanbul ignore next */
      (cov_274xqcznom().s[50]++, 'System resources are within normal limits');
      /* istanbul ignore next */
      cov_274xqcznom().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_274xqcznom().b[5][0]++, metrics.cpu.usage > 85) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[5][1]++, metrics.memory.percentage > 90) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[5][2]++, metrics.disk.percentage > 90)) {
        /* istanbul ignore next */
        cov_274xqcznom().b[4][0]++;
        cov_274xqcznom().s[52]++;
        status = 'CRITICAL';
        /* istanbul ignore next */
        cov_274xqcznom().s[53]++;
        message = 'System resources are critically high';
      } else {
        /* istanbul ignore next */
        cov_274xqcznom().b[4][1]++;
        cov_274xqcznom().s[54]++;
        if (
        /* istanbul ignore next */
        (cov_274xqcznom().b[7][0]++, metrics.cpu.usage > 70) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[7][1]++, metrics.memory.percentage > 80) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[7][2]++, metrics.disk.percentage > 80)) {
          /* istanbul ignore next */
          cov_274xqcznom().b[6][0]++;
          cov_274xqcznom().s[55]++;
          status = 'WARNING';
          /* istanbul ignore next */
          cov_274xqcznom().s[56]++;
          message = 'System resources are elevated';
        } else
        /* istanbul ignore next */
        {
          cov_274xqcznom().b[6][1]++;
        }
      }
      /* istanbul ignore next */
      cov_274xqcznom().s[57]++;
      return {
        status,
        message,
        details: metrics,
        lastCheck: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[58]++;
      return {
        status: 'ERROR',
        message: `System health check failed: ${error.message}`,
        details: null,
        lastCheck: new Date()
      };
    }
  }
  async checkApplicationHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[5]++;
    cov_274xqcznom().s[59]++;
    try {
      const processes =
      /* istanbul ignore next */
      (cov_274xqcznom().s[60]++, await this.getProcessStatus());
      const apiHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[61]++, await this.checkApiHealth());
      const dashboardHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[62]++, await this.checkDashboardHealth());
      const runningProcesses =
      /* istanbul ignore next */
      (cov_274xqcznom().s[63]++, processes.filter(p => {
        /* istanbul ignore next */
        cov_274xqcznom().f[6]++;
        cov_274xqcznom().s[64]++;
        return p.status === 'online';
      }));
      const totalProcesses =
      /* istanbul ignore next */
      (cov_274xqcznom().s[65]++, processes.length);
      let status =
      /* istanbul ignore next */
      (cov_274xqcznom().s[66]++, 'HEALTHY');
      let message =
      /* istanbul ignore next */
      (cov_274xqcznom().s[67]++, 'All application services are running normally');
      /* istanbul ignore next */
      cov_274xqcznom().s[68]++;
      if (
      /* istanbul ignore next */
      (cov_274xqcznom().b[9][0]++, !apiHealth) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[9][1]++, runningProcesses.length === 0)) {
        /* istanbul ignore next */
        cov_274xqcznom().b[8][0]++;
        cov_274xqcznom().s[69]++;
        status = 'CRITICAL';
        /* istanbul ignore next */
        cov_274xqcznom().s[70]++;
        message = 'Critical application services are down';
      } else {
        /* istanbul ignore next */
        cov_274xqcznom().b[8][1]++;
        cov_274xqcznom().s[71]++;
        if (
        /* istanbul ignore next */
        (cov_274xqcznom().b[11][0]++, runningProcesses.length < totalProcesses) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[11][1]++, !dashboardHealth)) {
          /* istanbul ignore next */
          cov_274xqcznom().b[10][0]++;
          cov_274xqcznom().s[72]++;
          status = 'WARNING';
          /* istanbul ignore next */
          cov_274xqcznom().s[73]++;
          message = 'Some application services have issues';
        } else
        /* istanbul ignore next */
        {
          cov_274xqcznom().b[10][1]++;
        }
      }
      /* istanbul ignore next */
      cov_274xqcznom().s[74]++;
      return {
        status,
        message,
        details: {
          processes: {
            running: runningProcesses.length,
            total: totalProcesses
          },
          api: apiHealth,
          dashboard: dashboardHealth
        },
        lastCheck: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[75]++;
      return {
        status: 'ERROR',
        message: `Application health check failed: ${error.message}`,
        details: null,
        lastCheck: new Date()
      };
    }
  }
  async checkDatabaseHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[7]++;
    cov_274xqcznom().s[76]++;
    try {
      const isValid =
      /* istanbul ignore next */
      (cov_274xqcznom().s[77]++, await database_setup_1.databaseSetup.validateIntegrity());
      const stats =
      /* istanbul ignore next */
      (cov_274xqcznom().s[78]++, await database_setup_1.databaseSetup.getStatistics());
      /* istanbul ignore next */
      cov_274xqcznom().s[79]++;
      return {
        status: isValid ?
        /* istanbul ignore next */
        (cov_274xqcznom().b[12][0]++, 'HEALTHY') :
        /* istanbul ignore next */
        (cov_274xqcznom().b[12][1]++, 'CRITICAL'),
        message: isValid ?
        /* istanbul ignore next */
        (cov_274xqcznom().b[13][0]++, 'Database is healthy') :
        /* istanbul ignore next */
        (cov_274xqcznom().b[13][1]++, 'Database integrity issues detected'),
        details: stats,
        lastCheck: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[80]++;
      return {
        status: 'ERROR',
        message: `Database health check failed: ${error.message}`,
        details: null,
        lastCheck: new Date()
      };
    }
  }
  async checkSecurityHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[8]++;
    cov_274xqcznom().s[81]++;
    try {
      // Check firewall status
      let firewallActive =
      /* istanbul ignore next */
      (cov_274xqcznom().s[82]++, false);
      /* istanbul ignore next */
      cov_274xqcznom().s[83]++;
      try {
        const ufwStatus =
        /* istanbul ignore next */
        (cov_274xqcznom().s[84]++, (0, child_process_1.execSync)('sudo ufw status', {
          encoding: 'utf-8'
        }));
        /* istanbul ignore next */
        cov_274xqcznom().s[85]++;
        firewallActive = ufwStatus.includes('Status: active');
      } catch {
        // UFW not available
      }
      // Check fail2ban status
      let fail2banActive =
      /* istanbul ignore next */
      (cov_274xqcznom().s[86]++, false);
      /* istanbul ignore next */
      cov_274xqcznom().s[87]++;
      try {
        const fail2banStatus =
        /* istanbul ignore next */
        (cov_274xqcznom().s[88]++, (0, child_process_1.execSync)('sudo systemctl is-active fail2ban', {
          encoding: 'utf-8'
        }));
        /* istanbul ignore next */
        cov_274xqcznom().s[89]++;
        fail2banActive = fail2banStatus.trim() === 'active';
      } catch {
        // Fail2ban not available
      }
      // Check for security updates
      let securityUpdates =
      /* istanbul ignore next */
      (cov_274xqcznom().s[90]++, 0);
      /* istanbul ignore next */
      cov_274xqcznom().s[91]++;
      try {
        const updates =
        /* istanbul ignore next */
        (cov_274xqcznom().s[92]++, (0, child_process_1.execSync)('apt list --upgradable 2>/dev/null | grep -i security | wc -l', {
          encoding: 'utf-8'
        }));
        /* istanbul ignore next */
        cov_274xqcznom().s[93]++;
        securityUpdates =
        /* istanbul ignore next */
        (cov_274xqcznom().b[14][0]++, parseInt(updates.trim())) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[14][1]++, 0);
      } catch {
        // Cannot check updates
      }
      let status =
      /* istanbul ignore next */
      (cov_274xqcznom().s[94]++, 'HEALTHY');
      let message =
      /* istanbul ignore next */
      (cov_274xqcznom().s[95]++, 'Security systems are functioning normally');
      /* istanbul ignore next */
      cov_274xqcznom().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_274xqcznom().b[16][0]++, !firewallActive) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[16][1]++, securityUpdates > 10)) {
        /* istanbul ignore next */
        cov_274xqcznom().b[15][0]++;
        cov_274xqcznom().s[97]++;
        status = 'CRITICAL';
        /* istanbul ignore next */
        cov_274xqcznom().s[98]++;
        message = 'Critical security issues detected';
      } else {
        /* istanbul ignore next */
        cov_274xqcznom().b[15][1]++;
        cov_274xqcznom().s[99]++;
        if (
        /* istanbul ignore next */
        (cov_274xqcznom().b[18][0]++, !fail2banActive) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[18][1]++, securityUpdates > 0)) {
          /* istanbul ignore next */
          cov_274xqcznom().b[17][0]++;
          cov_274xqcznom().s[100]++;
          status = 'WARNING';
          /* istanbul ignore next */
          cov_274xqcznom().s[101]++;
          message = 'Security warnings detected';
        } else
        /* istanbul ignore next */
        {
          cov_274xqcznom().b[17][1]++;
        }
      }
      /* istanbul ignore next */
      cov_274xqcznom().s[102]++;
      return {
        status,
        message,
        details: {
          firewall: firewallActive,
          fail2ban: fail2banActive,
          securityUpdates
        },
        lastCheck: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[103]++;
      return {
        status: 'ERROR',
        message: `Security health check failed: ${error.message}`,
        details: null,
        lastCheck: new Date()
      };
    }
  }
  async checkTradingHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[9]++;
    cov_274xqcznom().s[104]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[105]++;
      // This would check trading-specific health metrics
      // For now, return a basic status
      return {
        status: 'HEALTHY',
        message: 'Trading systems are operational',
        details: {
          activeTrades: 0,
          riskExposure: 0,
          lastTradeTime: null
        },
        lastCheck: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[106]++;
      return {
        status: 'ERROR',
        message: `Trading health check failed: ${error.message}`,
        details: null,
        lastCheck: new Date()
      };
    }
  }
  /**
   * Metrics collection methods
   */
  async getPerformanceMetricsData() {
    /* istanbul ignore next */
    cov_274xqcznom().f[10]++;
    // Get response time
    let responseTime =
    /* istanbul ignore next */
    (cov_274xqcznom().s[107]++, 0);
    /* istanbul ignore next */
    cov_274xqcznom().s[108]++;
    try {
      const start =
      /* istanbul ignore next */
      (cov_274xqcznom().s[109]++, Date.now());
      /* istanbul ignore next */
      cov_274xqcznom().s[110]++;
      (0, child_process_1.execSync)('curl -s http://localhost:3001/api/v1/health', {
        stdio: 'pipe'
      });
      /* istanbul ignore next */
      cov_274xqcznom().s[111]++;
      responseTime = Date.now() - start;
    } catch {
      /* istanbul ignore next */
      cov_274xqcznom().s[112]++;
      responseTime = -1; // Service unavailable
    }
    /* istanbul ignore next */
    cov_274xqcznom().s[113]++;
    return {
      responseTime,
      throughput: 0,
      // Would be calculated from request logs
      errorRate: 0,
      // Would be calculated from error logs
      availability: responseTime > 0 ?
      /* istanbul ignore next */
      (cov_274xqcznom().b[19][0]++, 100) :
      /* istanbul ignore next */
      (cov_274xqcznom().b[19][1]++, 0)
    };
  }
  async getResourceMetricsData() {
    /* istanbul ignore next */
    cov_274xqcznom().f[11]++;
    cov_274xqcznom().s[114]++;
    try {
      // CPU metrics
      const cpuUsage =
      /* istanbul ignore next */
      (cov_274xqcznom().s[115]++, parseFloat((0, child_process_1.execSync)("top -bn1 | grep 'Cpu(s)' | awk '{print $2}' | cut -d'%' -f1", {
        encoding: 'utf-8'
      }).trim()));
      const cpuCores =
      /* istanbul ignore next */
      (cov_274xqcznom().s[116]++, parseInt((0, child_process_1.execSync)('nproc', {
        encoding: 'utf-8'
      }).trim()));
      let cpuTemp =
      /* istanbul ignore next */
      (cov_274xqcznom().s[117]++, 0);
      /* istanbul ignore next */
      cov_274xqcznom().s[118]++;
      try {
        /* istanbul ignore next */
        cov_274xqcznom().s[119]++;
        cpuTemp =
        /* istanbul ignore next */
        (cov_274xqcznom().b[20][0]++, parseFloat((0, child_process_1.execSync)("sensors | grep 'Core 0' | awk '{print $3}' | cut -d'+' -f2 | cut -d'°' -f1", {
          encoding: 'utf-8'
        }).trim())) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[20][1]++, 0);
      } catch {
        // Temperature sensor not available
      }
      // Memory metrics
      const memInfo =
      /* istanbul ignore next */
      (cov_274xqcznom().s[120]++, (0, child_process_1.execSync)('free -b', {
        encoding: 'utf-8'
      }).split('\n')[1].split(/\s+/));
      const memTotal =
      /* istanbul ignore next */
      (cov_274xqcznom().s[121]++, parseInt(memInfo[1]));
      const memUsed =
      /* istanbul ignore next */
      (cov_274xqcznom().s[122]++, parseInt(memInfo[2]));
      // Disk metrics
      const diskInfo =
      /* istanbul ignore next */
      (cov_274xqcznom().s[123]++, (0, child_process_1.execSync)("df -B1 / | tail -1", {
        encoding: 'utf-8'
      }).split(/\s+/));
      const diskTotal =
      /* istanbul ignore next */
      (cov_274xqcznom().s[124]++, parseInt(diskInfo[1]));
      const diskUsed =
      /* istanbul ignore next */
      (cov_274xqcznom().s[125]++, parseInt(diskInfo[2]));
      // Network metrics (simplified)
      let networkIn =
        /* istanbul ignore next */
        (cov_274xqcznom().s[126]++, 0),
        networkOut =
        /* istanbul ignore next */
        (cov_274xqcznom().s[127]++, 0);
      /* istanbul ignore next */
      cov_274xqcznom().s[128]++;
      try {
        const netStats =
        /* istanbul ignore next */
        (cov_274xqcznom().s[129]++, (0, child_process_1.execSync)("cat /proc/net/dev | grep -E 'eth0|wlan0' | head -1", {
          encoding: 'utf-8'
        }).trim());
        /* istanbul ignore next */
        cov_274xqcznom().s[130]++;
        if (netStats) {
          /* istanbul ignore next */
          cov_274xqcznom().b[21][0]++;
          const stats =
          /* istanbul ignore next */
          (cov_274xqcznom().s[131]++, netStats.split(/\s+/));
          /* istanbul ignore next */
          cov_274xqcznom().s[132]++;
          networkIn =
          /* istanbul ignore next */
          (cov_274xqcznom().b[22][0]++, parseInt(stats[1])) ||
          /* istanbul ignore next */
          (cov_274xqcznom().b[22][1]++, 0);
          /* istanbul ignore next */
          cov_274xqcznom().s[133]++;
          networkOut =
          /* istanbul ignore next */
          (cov_274xqcznom().b[23][0]++, parseInt(stats[9])) ||
          /* istanbul ignore next */
          (cov_274xqcznom().b[23][1]++, 0);
        } else
        /* istanbul ignore next */
        {
          cov_274xqcznom().b[21][1]++;
        }
      } catch {
        // Network stats not available
      }
      /* istanbul ignore next */
      cov_274xqcznom().s[134]++;
      return {
        cpu: {
          usage: cpuUsage,
          temperature: cpuTemp,
          cores: cpuCores
        },
        memory: {
          used: memUsed,
          total: memTotal,
          percentage: memUsed / memTotal * 100
        },
        disk: {
          used: diskUsed,
          total: diskTotal,
          percentage: diskUsed / diskTotal * 100
        },
        network: {
          bytesIn: networkIn,
          bytesOut: networkOut
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[135]++;
      logger_1.logger.error('Error collecting resource metrics:', error);
      /* istanbul ignore next */
      cov_274xqcznom().s[136]++;
      throw error;
    }
  }
  async getAlertSummaryData() {
    /* istanbul ignore next */
    cov_274xqcznom().f[12]++;
    cov_274xqcznom().s[137]++;
    // This would integrate with the monitoring system
    return {
      active: 0,
      critical: 0,
      warnings: 0,
      recent: []
    };
  }
  async getMaintenanceStatusData() {
    /* istanbul ignore next */
    cov_274xqcznom().f[13]++;
    const backupHistory =
    /* istanbul ignore next */
    (cov_274xqcznom().s[138]++, backup_recovery_1.backupRecovery.getBackupHistory());
    const maintenanceTasks =
    /* istanbul ignore next */
    (cov_274xqcznom().s[139]++, monitoring_automation_1.monitoringAutomation.getMaintenanceStatus());
    const lastBackup =
    /* istanbul ignore next */
    (cov_274xqcznom().s[140]++, backupHistory.length > 0 ?
    /* istanbul ignore next */
    (cov_274xqcznom().b[24][0]++, backupHistory[backupHistory.length - 1].timestamp) :
    /* istanbul ignore next */
    (cov_274xqcznom().b[24][1]++, null));
    // Check for system updates
    let availableUpdates =
    /* istanbul ignore next */
    (cov_274xqcznom().s[141]++, 0);
    let securityUpdates =
    /* istanbul ignore next */
    (cov_274xqcznom().s[142]++, 0);
    /* istanbul ignore next */
    cov_274xqcznom().s[143]++;
    try {
      const updates =
      /* istanbul ignore next */
      (cov_274xqcznom().s[144]++, (0, child_process_1.execSync)('apt list --upgradable 2>/dev/null | wc -l', {
        encoding: 'utf-8'
      }));
      /* istanbul ignore next */
      cov_274xqcznom().s[145]++;
      availableUpdates = Math.max(0, parseInt(updates.trim()) - 1); // Subtract header line
      const secUpdates =
      /* istanbul ignore next */
      (cov_274xqcznom().s[146]++, (0, child_process_1.execSync)('apt list --upgradable 2>/dev/null | grep -i security | wc -l', {
        encoding: 'utf-8'
      }));
      /* istanbul ignore next */
      cov_274xqcznom().s[147]++;
      securityUpdates =
      /* istanbul ignore next */
      (cov_274xqcznom().b[25][0]++, parseInt(secUpdates.trim())) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[25][1]++, 0);
    } catch {
      // Cannot check updates
    }
    /* istanbul ignore next */
    cov_274xqcznom().s[148]++;
    return {
      lastBackup,
      nextBackup: null,
      // Would be calculated from backup schedule
      scheduledTasks: maintenanceTasks.map(task => {
        /* istanbul ignore next */
        cov_274xqcznom().f[14]++;
        cov_274xqcznom().s[149]++;
        return {
          name: task.name,
          nextRun:
          /* istanbul ignore next */
          (cov_274xqcznom().b[26][0]++, task.nextRun) ||
          /* istanbul ignore next */
          (cov_274xqcznom().b[26][1]++, new Date()),
          enabled: task.enabled
        };
      }),
      systemUpdates: {
        available: availableUpdates,
        security: securityUpdates,
        lastCheck: new Date()
      }
    };
  }
  /**
   * Helper methods
   */
  async getProcessStatus() {
    /* istanbul ignore next */
    cov_274xqcznom().f[15]++;
    cov_274xqcznom().s[150]++;
    try {
      const pm2List =
      /* istanbul ignore next */
      (cov_274xqcznom().s[151]++, (0, child_process_1.execSync)('pm2 jlist', {
        encoding: 'utf-8'
      }));
      /* istanbul ignore next */
      cov_274xqcznom().s[152]++;
      return JSON.parse(pm2List);
    } catch {
      /* istanbul ignore next */
      cov_274xqcznom().s[153]++;
      return [];
    }
  }
  async checkApiHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[16]++;
    cov_274xqcznom().s[154]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[155]++;
      (0, child_process_1.execSync)('curl -f http://localhost:3001/api/v1/health', {
        stdio: 'pipe'
      });
      /* istanbul ignore next */
      cov_274xqcznom().s[156]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_274xqcznom().s[157]++;
      return false;
    }
  }
  async checkDashboardHealth() {
    /* istanbul ignore next */
    cov_274xqcznom().f[17]++;
    cov_274xqcznom().s[158]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[159]++;
      (0, child_process_1.execSync)('curl -f http://localhost:3002', {
        stdio: 'pipe'
      });
      /* istanbul ignore next */
      cov_274xqcznom().s[160]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_274xqcznom().s[161]++;
      return false;
    }
  }
  getVersion() {
    /* istanbul ignore next */
    cov_274xqcznom().f[18]++;
    cov_274xqcznom().s[162]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[163]++;
      if ((0, fs_1.existsSync)('package.json')) {
        /* istanbul ignore next */
        cov_274xqcznom().b[27][0]++;
        const packageJson =
        /* istanbul ignore next */
        (cov_274xqcznom().s[164]++, JSON.parse((0, fs_1.readFileSync)('package.json', 'utf-8')));
        /* istanbul ignore next */
        cov_274xqcznom().s[165]++;
        return /* istanbul ignore next */(cov_274xqcznom().b[28][0]++, packageJson.version) ||
        /* istanbul ignore next */
        (cov_274xqcznom().b[28][1]++, '1.0.0');
      } else
      /* istanbul ignore next */
      {
        cov_274xqcznom().b[27][1]++;
      }
    } catch {
      // Ignore errors
    }
    /* istanbul ignore next */
    cov_274xqcznom().s[166]++;
    return '1.0.0';
  }
  /**
   * API endpoint implementations
   */
  async getSystemHealth(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[19]++;
    cov_274xqcznom().s[167]++;
    try {
      const systemHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[168]++, await this.checkSystemHealth());
      /* istanbul ignore next */
      cov_274xqcznom().s[169]++;
      res.json(systemHealth);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[170]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getApplicationHealth(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[20]++;
    cov_274xqcznom().s[171]++;
    try {
      const appHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[172]++, await this.checkApplicationHealth());
      /* istanbul ignore next */
      cov_274xqcznom().s[173]++;
      res.json(appHealth);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[174]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getDatabaseHealth(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[21]++;
    cov_274xqcznom().s[175]++;
    try {
      const dbHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[176]++, await this.checkDatabaseHealth());
      /* istanbul ignore next */
      cov_274xqcznom().s[177]++;
      res.json(dbHealth);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[178]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getSecurityHealth(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[22]++;
    cov_274xqcznom().s[179]++;
    try {
      const securityHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[180]++, await this.checkSecurityHealth());
      /* istanbul ignore next */
      cov_274xqcznom().s[181]++;
      res.json(securityHealth);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[182]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getTradingHealth(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[23]++;
    cov_274xqcznom().s[183]++;
    try {
      const tradingHealth =
      /* istanbul ignore next */
      (cov_274xqcznom().s[184]++, await this.checkTradingHealth());
      /* istanbul ignore next */
      cov_274xqcznom().s[185]++;
      res.json(tradingHealth);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[186]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getMetrics(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[24]++;
    cov_274xqcznom().s[187]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_274xqcznom().s[188]++, monitoring_automation_1.monitoringAutomation.getMetrics());
      /* istanbul ignore next */
      cov_274xqcznom().s[189]++;
      res.json(metrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[190]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getPerformanceMetrics(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[25]++;
    cov_274xqcznom().s[191]++;
    try {
      const performanceMetrics =
      /* istanbul ignore next */
      (cov_274xqcznom().s[192]++, await this.getPerformanceMetricsData());
      /* istanbul ignore next */
      cov_274xqcznom().s[193]++;
      res.json(performanceMetrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[194]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getResourceMetrics(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[26]++;
    cov_274xqcznom().s[195]++;
    try {
      const resourceMetrics =
      /* istanbul ignore next */
      (cov_274xqcznom().s[196]++, await this.getResourceMetricsData());
      /* istanbul ignore next */
      cov_274xqcznom().s[197]++;
      res.json(resourceMetrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[198]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getMetricsHistory(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[27]++;
    cov_274xqcznom().s[199]++;
    try {
      const history =
      /* istanbul ignore next */
      (cov_274xqcznom().s[200]++, monitoring_automation_1.monitoringAutomation.getMetrics());
      const limit =
      /* istanbul ignore next */
      (cov_274xqcznom().s[201]++,
      /* istanbul ignore next */
      (cov_274xqcznom().b[29][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[29][1]++, 100));
      /* istanbul ignore next */
      cov_274xqcznom().s[202]++;
      res.json(history.slice(-limit));
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[203]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getAlerts(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[28]++;
    cov_274xqcznom().s[204]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[205]++;
      // This would integrate with the alerting system
      res.json({
        alerts: []
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[206]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getActiveAlerts(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[29]++;
    cov_274xqcznom().s[207]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[208]++;
      // This would return only active alerts
      res.json({
        activeAlerts: []
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[209]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async acknowledgeAlert(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[30]++;
    cov_274xqcznom().s[210]++;
    try {
      const alertId =
      /* istanbul ignore next */
      (cov_274xqcznom().s[211]++, req.params.id);
      // This would acknowledge the alert
      /* istanbul ignore next */
      cov_274xqcznom().s[212]++;
      res.json({
        success: true,
        alertId
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[213]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getMaintenanceStatus(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[31]++;
    cov_274xqcznom().s[214]++;
    try {
      const maintenanceStatus =
      /* istanbul ignore next */
      (cov_274xqcznom().s[215]++, await this.getMaintenanceStatusData());
      /* istanbul ignore next */
      cov_274xqcznom().s[216]++;
      res.json(maintenanceStatus);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[217]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getMaintenanceTasks(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[32]++;
    cov_274xqcznom().s[218]++;
    try {
      const tasks =
      /* istanbul ignore next */
      (cov_274xqcznom().s[219]++, monitoring_automation_1.monitoringAutomation.getMaintenanceStatus());
      /* istanbul ignore next */
      cov_274xqcznom().s[220]++;
      res.json(tasks);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[221]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async runMaintenanceTask(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[33]++;
    cov_274xqcznom().s[222]++;
    try {
      const taskName =
      /* istanbul ignore next */
      (cov_274xqcznom().s[223]++, req.params.name);
      // This would trigger the maintenance task
      /* istanbul ignore next */
      cov_274xqcznom().s[224]++;
      res.json({
        success: true,
        task: taskName,
        status: 'started'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[225]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getBackupStatus(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[34]++;
    cov_274xqcznom().s[226]++;
    try {
      const config =
      /* istanbul ignore next */
      (cov_274xqcznom().s[227]++, backup_recovery_1.backupRecovery.getConfig());
      const history =
      /* istanbul ignore next */
      (cov_274xqcznom().s[228]++, backup_recovery_1.backupRecovery.getBackupHistory());
      const lastBackup =
      /* istanbul ignore next */
      (cov_274xqcznom().s[229]++, history.length > 0 ?
      /* istanbul ignore next */
      (cov_274xqcznom().b[30][0]++, history[history.length - 1]) :
      /* istanbul ignore next */
      (cov_274xqcznom().b[30][1]++, null));
      /* istanbul ignore next */
      cov_274xqcznom().s[230]++;
      res.json({
        config,
        lastBackup,
        totalBackups: history.length
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[231]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getBackupHistory(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[35]++;
    cov_274xqcznom().s[232]++;
    try {
      const history =
      /* istanbul ignore next */
      (cov_274xqcznom().s[233]++, backup_recovery_1.backupRecovery.getBackupHistory());
      const limit =
      /* istanbul ignore next */
      (cov_274xqcznom().s[234]++,
      /* istanbul ignore next */
      (cov_274xqcznom().b[31][0]++, parseInt(req.query.limit)) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[31][1]++, 50));
      /* istanbul ignore next */
      cov_274xqcznom().s[235]++;
      res.json(history.slice(-limit));
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[236]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async createBackup(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[36]++;
    cov_274xqcznom().s[237]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_274xqcznom().s[238]++, await backup_recovery_1.backupRecovery.performFullBackup());
      /* istanbul ignore next */
      cov_274xqcznom().s[239]++;
      res.json(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[240]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getRecoveryPlans(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[37]++;
    cov_274xqcznom().s[241]++;
    try {
      const plans =
      /* istanbul ignore next */
      (cov_274xqcznom().s[242]++, backup_recovery_1.backupRecovery.getRecoveryPlans());
      /* istanbul ignore next */
      cov_274xqcznom().s[243]++;
      res.json(plans);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[244]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async executeRecovery(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[38]++;
    cov_274xqcznom().s[245]++;
    try {
      const planName =
      /* istanbul ignore next */
      (cov_274xqcznom().s[246]++, req.params.plan);
      const result =
      /* istanbul ignore next */
      (cov_274xqcznom().s[247]++, await backup_recovery_1.backupRecovery.executeRecovery(planName));
      /* istanbul ignore next */
      cov_274xqcznom().s[248]++;
      res.json(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[249]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async restartSystem(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[39]++;
    cov_274xqcznom().s[250]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[251]++;
      // This would restart the system services
      (0, child_process_1.execSync)('pm2 restart all');
      /* istanbul ignore next */
      cov_274xqcznom().s[252]++;
      res.json({
        success: true,
        message: 'System restart initiated'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[253]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async shutdownSystem(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[40]++;
    cov_274xqcznom().s[254]++;
    try {
      /* istanbul ignore next */
      cov_274xqcznom().s[255]++;
      // This would gracefully shutdown the system
      (0, child_process_1.execSync)('pm2 stop all');
      /* istanbul ignore next */
      cov_274xqcznom().s[256]++;
      res.json({
        success: true,
        message: 'System shutdown initiated'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[257]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  async getSystemLogs(req, res) {
    /* istanbul ignore next */
    cov_274xqcznom().f[41]++;
    cov_274xqcznom().s[258]++;
    try {
      const lines =
      /* istanbul ignore next */
      (cov_274xqcznom().s[259]++,
      /* istanbul ignore next */
      (cov_274xqcznom().b[32][0]++, parseInt(req.query.lines)) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[32][1]++, 100));
      const logType =
      /* istanbul ignore next */
      (cov_274xqcznom().s[260]++,
      /* istanbul ignore next */
      (cov_274xqcznom().b[33][0]++, req.query.type) ||
      /* istanbul ignore next */
      (cov_274xqcznom().b[33][1]++, 'application'));
      let logs =
      /* istanbul ignore next */
      (cov_274xqcznom().s[261]++, '');
      /* istanbul ignore next */
      cov_274xqcznom().s[262]++;
      switch (logType) {
        case 'application':
          /* istanbul ignore next */
          cov_274xqcznom().b[34][0]++;
          cov_274xqcznom().s[263]++;
          logs = (0, child_process_1.execSync)(`pm2 logs --lines ${lines} --nostream`, {
            encoding: 'utf-8'
          });
          /* istanbul ignore next */
          cov_274xqcznom().s[264]++;
          break;
        case 'system':
          /* istanbul ignore next */
          cov_274xqcznom().b[34][1]++;
          cov_274xqcznom().s[265]++;
          logs = (0, child_process_1.execSync)(`journalctl -n ${lines} --no-pager`, {
            encoding: 'utf-8'
          });
          /* istanbul ignore next */
          cov_274xqcznom().s[266]++;
          break;
        case 'security':
          /* istanbul ignore next */
          cov_274xqcznom().b[34][2]++;
          cov_274xqcznom().s[267]++;
          logs = (0, child_process_1.execSync)(`tail -n ${lines} /var/log/auth.log`, {
            encoding: 'utf-8'
          });
          /* istanbul ignore next */
          cov_274xqcznom().s[268]++;
          break;
        default:
          /* istanbul ignore next */
          cov_274xqcznom().b[34][3]++;
          cov_274xqcznom().s[269]++;
          logs = (0, child_process_1.execSync)(`pm2 logs --lines ${lines} --nostream`, {
            encoding: 'utf-8'
          });
      }
      /* istanbul ignore next */
      cov_274xqcznom().s[270]++;
      res.json({
        logs: logs.split('\n')
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_274xqcznom().s[271]++;
      res.status(500).json({
        error: error.message
      });
    }
  }
  /**
   * Get router instance
   */
  getRouter() {
    /* istanbul ignore next */
    cov_274xqcznom().f[42]++;
    cov_274xqcznom().s[272]++;
    return this.router;
  }
}
/* istanbul ignore next */
cov_274xqcznom().s[273]++;
exports.HealthDashboard = HealthDashboard;
// Export singleton instance
/* istanbul ignore next */
cov_274xqcznom().s[274]++;
exports.healthDashboard = new HealthDashboard();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjc0eHFjem5vbSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImV4cHJlc3NfMSIsInJlcXVpcmUiLCJsb2dnZXJfMSIsIm1vbml0b3JpbmdfYXV0b21hdGlvbl8xIiwiYmFja3VwX3JlY292ZXJ5XzEiLCJkYXRhYmFzZV9zZXR1cF8xIiwiY2hpbGRfcHJvY2Vzc18xIiwiZnNfMSIsIkhlYWx0aERhc2hib2FyZCIsInJvdXRlciIsInN0YXJ0VGltZSIsImNvbnN0cnVjdG9yIiwiUm91dGVyIiwiRGF0ZSIsInNldHVwUm91dGVzIiwiZ2V0IiwiZ2V0SGVhbHRoU3RhdHVzIiwiYmluZCIsImdldFN5c3RlbUhlYWx0aCIsImdldEFwcGxpY2F0aW9uSGVhbHRoIiwiZ2V0RGF0YWJhc2VIZWFsdGgiLCJnZXRTZWN1cml0eUhlYWx0aCIsImdldFRyYWRpbmdIZWFsdGgiLCJnZXRNZXRyaWNzIiwiZ2V0UGVyZm9ybWFuY2VNZXRyaWNzIiwiZ2V0UmVzb3VyY2VNZXRyaWNzIiwiZ2V0TWV0cmljc0hpc3RvcnkiLCJnZXRBbGVydHMiLCJnZXRBY3RpdmVBbGVydHMiLCJwb3N0IiwiYWNrbm93bGVkZ2VBbGVydCIsImdldE1haW50ZW5hbmNlU3RhdHVzIiwiZ2V0TWFpbnRlbmFuY2VUYXNrcyIsInJ1bk1haW50ZW5hbmNlVGFzayIsImdldEJhY2t1cFN0YXR1cyIsImdldEJhY2t1cEhpc3RvcnkiLCJjcmVhdGVCYWNrdXAiLCJnZXRSZWNvdmVyeVBsYW5zIiwiZXhlY3V0ZVJlY292ZXJ5IiwicmVzdGFydFN5c3RlbSIsInNodXRkb3duU3lzdGVtIiwiZ2V0U3lzdGVtTG9ncyIsInJlcSIsInJlcyIsImhlYWx0aFN0YXR1cyIsIm92ZXJhbGwiLCJ0aW1lc3RhbXAiLCJ1cHRpbWUiLCJub3ciLCJnZXRUaW1lIiwiZ2V0VmVyc2lvbiIsImVudmlyb25tZW50IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiY29tcG9uZW50cyIsInN5c3RlbSIsImNoZWNrU3lzdGVtSGVhbHRoIiwiYXBwbGljYXRpb24iLCJjaGVja0FwcGxpY2F0aW9uSGVhbHRoIiwiZGF0YWJhc2UiLCJjaGVja0RhdGFiYXNlSGVhbHRoIiwic2VjdXJpdHkiLCJjaGVja1NlY3VyaXR5SGVhbHRoIiwidHJhZGluZyIsImNoZWNrVHJhZGluZ0hlYWx0aCIsIm1ldHJpY3MiLCJwZXJmb3JtYW5jZSIsImdldFBlcmZvcm1hbmNlTWV0cmljc0RhdGEiLCJyZXNvdXJjZXMiLCJnZXRSZXNvdXJjZU1ldHJpY3NEYXRhIiwiYWxlcnRzIiwiZ2V0QWxlcnRTdW1tYXJ5RGF0YSIsIm1haW50ZW5hbmNlIiwiZ2V0TWFpbnRlbmFuY2VTdGF0dXNEYXRhIiwiY29tcG9uZW50U3RhdHVzZXMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJtYXAiLCJjIiwic3RhdHVzIiwiaW5jbHVkZXMiLCJqc29uIiwiZXJyb3IiLCJsb2dnZXIiLCJtZXNzYWdlIiwiY3B1IiwidXNhZ2UiLCJtZW1vcnkiLCJwZXJjZW50YWdlIiwiZGlzayIsImRldGFpbHMiLCJsYXN0Q2hlY2siLCJwcm9jZXNzZXMiLCJnZXRQcm9jZXNzU3RhdHVzIiwiYXBpSGVhbHRoIiwiY2hlY2tBcGlIZWFsdGgiLCJkYXNoYm9hcmRIZWFsdGgiLCJjaGVja0Rhc2hib2FyZEhlYWx0aCIsInJ1bm5pbmdQcm9jZXNzZXMiLCJmaWx0ZXIiLCJwIiwidG90YWxQcm9jZXNzZXMiLCJsZW5ndGgiLCJydW5uaW5nIiwidG90YWwiLCJhcGkiLCJkYXNoYm9hcmQiLCJpc1ZhbGlkIiwiZGF0YWJhc2VTZXR1cCIsInZhbGlkYXRlSW50ZWdyaXR5Iiwic3RhdHMiLCJnZXRTdGF0aXN0aWNzIiwiZmlyZXdhbGxBY3RpdmUiLCJ1ZndTdGF0dXMiLCJleGVjU3luYyIsImVuY29kaW5nIiwiZmFpbDJiYW5BY3RpdmUiLCJmYWlsMmJhblN0YXR1cyIsInRyaW0iLCJzZWN1cml0eVVwZGF0ZXMiLCJ1cGRhdGVzIiwicGFyc2VJbnQiLCJmaXJld2FsbCIsImZhaWwyYmFuIiwiYWN0aXZlVHJhZGVzIiwicmlza0V4cG9zdXJlIiwibGFzdFRyYWRlVGltZSIsInJlc3BvbnNlVGltZSIsInN0ZGlvIiwidGhyb3VnaHB1dCIsImVycm9yUmF0ZSIsImF2YWlsYWJpbGl0eSIsImNwdVVzYWdlIiwicGFyc2VGbG9hdCIsImNwdUNvcmVzIiwiY3B1VGVtcCIsIm1lbUluZm8iLCJzcGxpdCIsIm1lbVRvdGFsIiwibWVtVXNlZCIsImRpc2tJbmZvIiwiZGlza1RvdGFsIiwiZGlza1VzZWQiLCJuZXR3b3JrSW4iLCJuZXR3b3JrT3V0IiwibmV0U3RhdHMiLCJ0ZW1wZXJhdHVyZSIsImNvcmVzIiwidXNlZCIsIm5ldHdvcmsiLCJieXRlc0luIiwiYnl0ZXNPdXQiLCJhY3RpdmUiLCJjcml0aWNhbCIsIndhcm5pbmdzIiwicmVjZW50IiwiYmFja3VwSGlzdG9yeSIsImJhY2t1cFJlY292ZXJ5IiwibWFpbnRlbmFuY2VUYXNrcyIsIm1vbml0b3JpbmdBdXRvbWF0aW9uIiwibGFzdEJhY2t1cCIsImF2YWlsYWJsZVVwZGF0ZXMiLCJNYXRoIiwibWF4Iiwic2VjVXBkYXRlcyIsIm5leHRCYWNrdXAiLCJzY2hlZHVsZWRUYXNrcyIsInRhc2siLCJuZXh0UnVuIiwiZW5hYmxlZCIsInN5c3RlbVVwZGF0ZXMiLCJhdmFpbGFibGUiLCJwbTJMaXN0IiwiSlNPTiIsInBhcnNlIiwiZXhpc3RzU3luYyIsInBhY2thZ2VKc29uIiwicmVhZEZpbGVTeW5jIiwic3lzdGVtSGVhbHRoIiwiYXBwSGVhbHRoIiwiZGJIZWFsdGgiLCJzZWN1cml0eUhlYWx0aCIsInRyYWRpbmdIZWFsdGgiLCJwZXJmb3JtYW5jZU1ldHJpY3MiLCJyZXNvdXJjZU1ldHJpY3MiLCJoaXN0b3J5IiwibGltaXQiLCJxdWVyeSIsInNsaWNlIiwiYWN0aXZlQWxlcnRzIiwiYWxlcnRJZCIsInBhcmFtcyIsImlkIiwic3VjY2VzcyIsIm1haW50ZW5hbmNlU3RhdHVzIiwidGFza3MiLCJ0YXNrTmFtZSIsImNvbmZpZyIsImdldENvbmZpZyIsInRvdGFsQmFja3VwcyIsInJlc3VsdCIsInBlcmZvcm1GdWxsQmFja3VwIiwicGxhbnMiLCJwbGFuTmFtZSIsInBsYW4iLCJsaW5lcyIsImxvZ1R5cGUiLCJsb2dzIiwiZ2V0Um91dGVyIiwiZXhwb3J0cyIsImhlYWx0aERhc2hib2FyZCJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlja1xcRGVza3RvcFxcU21vb3RoU2FpbFxcc3JjXFxkZXBsb3ltZW50XFxoZWFsdGgtZGFzaGJvYXJkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBBSSBDUllQVE8gVFJBRElORyBBR0VOVCAtIFNZU1RFTSBIRUFMVEggREFTSEJPQVJEIEFQSVxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBcclxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgYSBjb21wcmVoZW5zaXZlIGhlYWx0aCBkYXNoYm9hcmQgQVBJIGZvciBtb25pdG9yaW5nXHJcbiAqIHN5c3RlbSBzdGF0dXMsIHBlcmZvcm1hbmNlIG1ldHJpY3MsIGFuZCBkZXBsb3ltZW50IGhlYWx0aC5cclxuICovXHJcblxyXG5pbXBvcnQgeyBSb3V0ZXIsIFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJy4uL2NvcmUvbG9nZ2VyJztcclxuaW1wb3J0IHsgbW9uaXRvcmluZ0F1dG9tYXRpb24gfSBmcm9tICcuL21vbml0b3JpbmctYXV0b21hdGlvbic7XHJcbmltcG9ydCB7IGJhY2t1cFJlY292ZXJ5IH0gZnJvbSAnLi9iYWNrdXAtcmVjb3ZlcnknO1xyXG5pbXBvcnQgeyBkYXRhYmFzZVNldHVwIH0gZnJvbSAnLi9kYXRhYmFzZS1zZXR1cCc7XHJcbmltcG9ydCB7IGV4ZWNTeW5jIH0gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XHJcbmltcG9ydCB7IGV4aXN0c1N5bmMsIHJlYWRGaWxlU3luYyB9IGZyb20gJ2ZzJztcclxuXHJcbmludGVyZmFjZSBIZWFsdGhTdGF0dXMge1xyXG4gIG92ZXJhbGw6ICdIRUFMVEhZJyB8ICdXQVJOSU5HJyB8ICdDUklUSUNBTCcgfCAnRVJST1InO1xyXG4gIHRpbWVzdGFtcDogRGF0ZTtcclxuICB1cHRpbWU6IG51bWJlcjtcclxuICB2ZXJzaW9uOiBzdHJpbmc7XHJcbiAgZW52aXJvbm1lbnQ6IHN0cmluZztcclxuICBjb21wb25lbnRzOiB7XHJcbiAgICBzeXN0ZW06IENvbXBvbmVudEhlYWx0aDtcclxuICAgIGFwcGxpY2F0aW9uOiBDb21wb25lbnRIZWFsdGg7XHJcbiAgICBkYXRhYmFzZTogQ29tcG9uZW50SGVhbHRoO1xyXG4gICAgc2VjdXJpdHk6IENvbXBvbmVudEhlYWx0aDtcclxuICAgIHRyYWRpbmc6IENvbXBvbmVudEhlYWx0aDtcclxuICB9O1xyXG4gIG1ldHJpY3M6IHtcclxuICAgIHBlcmZvcm1hbmNlOiBQZXJmb3JtYW5jZU1ldHJpY3M7XHJcbiAgICByZXNvdXJjZXM6IFJlc291cmNlTWV0cmljcztcclxuICAgIGFsZXJ0czogQWxlcnRTdW1tYXJ5O1xyXG4gIH07XHJcbiAgbWFpbnRlbmFuY2U6IE1haW50ZW5hbmNlU3RhdHVzO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgQ29tcG9uZW50SGVhbHRoIHtcclxuICBzdGF0dXM6ICdIRUFMVEhZJyB8ICdXQVJOSU5HJyB8ICdDUklUSUNBTCcgfCAnRVJST1InO1xyXG4gIG1lc3NhZ2U6IHN0cmluZztcclxuICBkZXRhaWxzOiBhbnk7XHJcbiAgbGFzdENoZWNrOiBEYXRlO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgUGVyZm9ybWFuY2VNZXRyaWNzIHtcclxuICByZXNwb25zZVRpbWU6IG51bWJlcjtcclxuICB0aHJvdWdocHV0OiBudW1iZXI7XHJcbiAgZXJyb3JSYXRlOiBudW1iZXI7XHJcbiAgYXZhaWxhYmlsaXR5OiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBSZXNvdXJjZU1ldHJpY3Mge1xyXG4gIGNwdToge1xyXG4gICAgdXNhZ2U6IG51bWJlcjtcclxuICAgIHRlbXBlcmF0dXJlOiBudW1iZXI7XHJcbiAgICBjb3JlczogbnVtYmVyO1xyXG4gIH07XHJcbiAgbWVtb3J5OiB7XHJcbiAgICB1c2VkOiBudW1iZXI7XHJcbiAgICB0b3RhbDogbnVtYmVyO1xyXG4gICAgcGVyY2VudGFnZTogbnVtYmVyO1xyXG4gIH07XHJcbiAgZGlzazoge1xyXG4gICAgdXNlZDogbnVtYmVyO1xyXG4gICAgdG90YWw6IG51bWJlcjtcclxuICAgIHBlcmNlbnRhZ2U6IG51bWJlcjtcclxuICB9O1xyXG4gIG5ldHdvcms6IHtcclxuICAgIGJ5dGVzSW46IG51bWJlcjtcclxuICAgIGJ5dGVzT3V0OiBudW1iZXI7XHJcbiAgfTtcclxufVxyXG5cclxuaW50ZXJmYWNlIEFsZXJ0U3VtbWFyeSB7XHJcbiAgYWN0aXZlOiBudW1iZXI7XHJcbiAgY3JpdGljYWw6IG51bWJlcjtcclxuICB3YXJuaW5nczogbnVtYmVyO1xyXG4gIHJlY2VudDogQXJyYXk8e1xyXG4gICAgdGltZXN0YW1wOiBEYXRlO1xyXG4gICAgbGV2ZWw6IHN0cmluZztcclxuICAgIG1lc3NhZ2U6IHN0cmluZztcclxuICB9PjtcclxufVxyXG5cclxuaW50ZXJmYWNlIE1haW50ZW5hbmNlU3RhdHVzIHtcclxuICBsYXN0QmFja3VwOiBEYXRlIHwgbnVsbDtcclxuICBuZXh0QmFja3VwOiBEYXRlIHwgbnVsbDtcclxuICBzY2hlZHVsZWRUYXNrczogQXJyYXk8e1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgbmV4dFJ1bjogRGF0ZTtcclxuICAgIGVuYWJsZWQ6IGJvb2xlYW47XHJcbiAgfT47XHJcbiAgc3lzdGVtVXBkYXRlczoge1xyXG4gICAgYXZhaWxhYmxlOiBudW1iZXI7XHJcbiAgICBzZWN1cml0eTogbnVtYmVyO1xyXG4gICAgbGFzdENoZWNrOiBEYXRlO1xyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBIZWFsdGhEYXNoYm9hcmQge1xyXG4gIHByaXZhdGUgcm91dGVyOiBSb3V0ZXI7XHJcbiAgcHJpdmF0ZSBzdGFydFRpbWU6IERhdGU7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5yb3V0ZXIgPSBSb3V0ZXIoKTtcclxuICAgIHRoaXMuc3RhcnRUaW1lID0gbmV3IERhdGUoKTtcclxuICAgIHRoaXMuc2V0dXBSb3V0ZXMoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHVwIEFQSSByb3V0ZXNcclxuICAgKi9cclxuICBwcml2YXRlIHNldHVwUm91dGVzKCk6IHZvaWQge1xyXG4gICAgLy8gTWFpbiBoZWFsdGggZW5kcG9pbnRcclxuICAgIHRoaXMucm91dGVyLmdldCgnL2hlYWx0aCcsIHRoaXMuZ2V0SGVhbHRoU3RhdHVzLmJpbmQodGhpcykpO1xyXG4gICAgXHJcbiAgICAvLyBEZXRhaWxlZCBjb21wb25lbnQgaGVhbHRoXHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9oZWFsdGgvc3lzdGVtJywgdGhpcy5nZXRTeXN0ZW1IZWFsdGguYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9oZWFsdGgvYXBwbGljYXRpb24nLCB0aGlzLmdldEFwcGxpY2F0aW9uSGVhbHRoLmJpbmQodGhpcykpO1xyXG4gICAgdGhpcy5yb3V0ZXIuZ2V0KCcvaGVhbHRoL2RhdGFiYXNlJywgdGhpcy5nZXREYXRhYmFzZUhlYWx0aC5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMucm91dGVyLmdldCgnL2hlYWx0aC9zZWN1cml0eScsIHRoaXMuZ2V0U2VjdXJpdHlIZWFsdGguYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9oZWFsdGgvdHJhZGluZycsIHRoaXMuZ2V0VHJhZGluZ0hlYWx0aC5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICAvLyBNZXRyaWNzIGVuZHBvaW50c1xyXG4gICAgdGhpcy5yb3V0ZXIuZ2V0KCcvbWV0cmljcycsIHRoaXMuZ2V0TWV0cmljcy5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMucm91dGVyLmdldCgnL21ldHJpY3MvcGVyZm9ybWFuY2UnLCB0aGlzLmdldFBlcmZvcm1hbmNlTWV0cmljcy5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMucm91dGVyLmdldCgnL21ldHJpY3MvcmVzb3VyY2VzJywgdGhpcy5nZXRSZXNvdXJjZU1ldHJpY3MuYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9tZXRyaWNzL2hpc3RvcnknLCB0aGlzLmdldE1ldHJpY3NIaXN0b3J5LmJpbmQodGhpcykpO1xyXG5cclxuICAgIC8vIEFsZXJ0cyBlbmRwb2ludHNcclxuICAgIHRoaXMucm91dGVyLmdldCgnL2FsZXJ0cycsIHRoaXMuZ2V0QWxlcnRzLmJpbmQodGhpcykpO1xyXG4gICAgdGhpcy5yb3V0ZXIuZ2V0KCcvYWxlcnRzL2FjdGl2ZScsIHRoaXMuZ2V0QWN0aXZlQWxlcnRzLmJpbmQodGhpcykpO1xyXG4gICAgdGhpcy5yb3V0ZXIucG9zdCgnL2FsZXJ0cy86aWQvYWNrbm93bGVkZ2UnLCB0aGlzLmFja25vd2xlZGdlQWxlcnQuYmluZCh0aGlzKSk7XHJcblxyXG4gICAgLy8gTWFpbnRlbmFuY2UgZW5kcG9pbnRzXHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9tYWludGVuYW5jZScsIHRoaXMuZ2V0TWFpbnRlbmFuY2VTdGF0dXMuYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9tYWludGVuYW5jZS90YXNrcycsIHRoaXMuZ2V0TWFpbnRlbmFuY2VUYXNrcy5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMucm91dGVyLnBvc3QoJy9tYWludGVuYW5jZS90YXNrcy86bmFtZS9ydW4nLCB0aGlzLnJ1bk1haW50ZW5hbmNlVGFzay5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICAvLyBCYWNrdXAgZW5kcG9pbnRzXHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9iYWNrdXBzJywgdGhpcy5nZXRCYWNrdXBTdGF0dXMuYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLnJvdXRlci5nZXQoJy9iYWNrdXBzL2hpc3RvcnknLCB0aGlzLmdldEJhY2t1cEhpc3RvcnkuYmluZCh0aGlzKSk7XHJcbiAgICB0aGlzLnJvdXRlci5wb3N0KCcvYmFja3Vwcy9jcmVhdGUnLCB0aGlzLmNyZWF0ZUJhY2t1cC5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICAvLyBSZWNvdmVyeSBlbmRwb2ludHNcclxuICAgIHRoaXMucm91dGVyLmdldCgnL3JlY292ZXJ5L3BsYW5zJywgdGhpcy5nZXRSZWNvdmVyeVBsYW5zLmJpbmQodGhpcykpO1xyXG4gICAgdGhpcy5yb3V0ZXIucG9zdCgnL3JlY292ZXJ5L2V4ZWN1dGUvOnBsYW4nLCB0aGlzLmV4ZWN1dGVSZWNvdmVyeS5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICAvLyBTeXN0ZW0gY29udHJvbCBlbmRwb2ludHNcclxuICAgIHRoaXMucm91dGVyLnBvc3QoJy9zeXN0ZW0vcmVzdGFydCcsIHRoaXMucmVzdGFydFN5c3RlbS5iaW5kKHRoaXMpKTtcclxuICAgIHRoaXMucm91dGVyLnBvc3QoJy9zeXN0ZW0vc2h1dGRvd24nLCB0aGlzLnNodXRkb3duU3lzdGVtLmJpbmQodGhpcykpO1xyXG4gICAgdGhpcy5yb3V0ZXIuZ2V0KCcvc3lzdGVtL2xvZ3MnLCB0aGlzLmdldFN5c3RlbUxvZ3MuYmluZCh0aGlzKSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgb3ZlcmFsbCBoZWFsdGggc3RhdHVzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBnZXRIZWFsdGhTdGF0dXMocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBoZWFsdGhTdGF0dXM6IEhlYWx0aFN0YXR1cyA9IHtcclxuICAgICAgICBvdmVyYWxsOiAnSEVBTFRIWScsXHJcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgIHVwdGltZTogRGF0ZS5ub3coKSAtIHRoaXMuc3RhcnRUaW1lLmdldFRpbWUoKSxcclxuICAgICAgICB2ZXJzaW9uOiB0aGlzLmdldFZlcnNpb24oKSxcclxuICAgICAgICBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50JyxcclxuICAgICAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgICBzeXN0ZW06IGF3YWl0IHRoaXMuY2hlY2tTeXN0ZW1IZWFsdGgoKSxcclxuICAgICAgICAgIGFwcGxpY2F0aW9uOiBhd2FpdCB0aGlzLmNoZWNrQXBwbGljYXRpb25IZWFsdGgoKSxcclxuICAgICAgICAgIGRhdGFiYXNlOiBhd2FpdCB0aGlzLmNoZWNrRGF0YWJhc2VIZWFsdGgoKSxcclxuICAgICAgICAgIHNlY3VyaXR5OiBhd2FpdCB0aGlzLmNoZWNrU2VjdXJpdHlIZWFsdGgoKSxcclxuICAgICAgICAgIHRyYWRpbmc6IGF3YWl0IHRoaXMuY2hlY2tUcmFkaW5nSGVhbHRoKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIG1ldHJpY3M6IHtcclxuICAgICAgICAgIHBlcmZvcm1hbmNlOiBhd2FpdCB0aGlzLmdldFBlcmZvcm1hbmNlTWV0cmljc0RhdGEoKSxcclxuICAgICAgICAgIHJlc291cmNlczogYXdhaXQgdGhpcy5nZXRSZXNvdXJjZU1ldHJpY3NEYXRhKCksXHJcbiAgICAgICAgICBhbGVydHM6IGF3YWl0IHRoaXMuZ2V0QWxlcnRTdW1tYXJ5RGF0YSgpXHJcbiAgICAgICAgfSxcclxuICAgICAgICBtYWludGVuYW5jZTogYXdhaXQgdGhpcy5nZXRNYWludGVuYW5jZVN0YXR1c0RhdGEoKVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgLy8gRGV0ZXJtaW5lIG92ZXJhbGwgc3RhdHVzXHJcbiAgICAgIGNvbnN0IGNvbXBvbmVudFN0YXR1c2VzID0gT2JqZWN0LnZhbHVlcyhoZWFsdGhTdGF0dXMuY29tcG9uZW50cykubWFwKGMgPT4gYy5zdGF0dXMpO1xyXG4gICAgICBpZiAoY29tcG9uZW50U3RhdHVzZXMuaW5jbHVkZXMoJ0NSSVRJQ0FMJykgfHwgY29tcG9uZW50U3RhdHVzZXMuaW5jbHVkZXMoJ0VSUk9SJykpIHtcclxuICAgICAgICBoZWFsdGhTdGF0dXMub3ZlcmFsbCA9ICdDUklUSUNBTCc7XHJcbiAgICAgIH0gZWxzZSBpZiAoY29tcG9uZW50U3RhdHVzZXMuaW5jbHVkZXMoJ1dBUk5JTkcnKSkge1xyXG4gICAgICAgIGhlYWx0aFN0YXR1cy5vdmVyYWxsID0gJ1dBUk5JTkcnO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXMuanNvbihoZWFsdGhTdGF0dXMpO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignSGVhbHRoIHN0YXR1cyBjaGVjayBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgb3ZlcmFsbDogJ0VSUk9SJyxcclxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXHJcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb21wb25lbnQgaGVhbHRoIGNoZWNrIG1ldGhvZHNcclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIGNoZWNrU3lzdGVtSGVhbHRoKCk6IFByb21pc2U8Q29tcG9uZW50SGVhbHRoPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBtZXRyaWNzID0gYXdhaXQgdGhpcy5nZXRSZXNvdXJjZU1ldHJpY3NEYXRhKCk7XHJcbiAgICAgIFxyXG4gICAgICBsZXQgc3RhdHVzOiBDb21wb25lbnRIZWFsdGhbJ3N0YXR1cyddID0gJ0hFQUxUSFknO1xyXG4gICAgICBsZXQgbWVzc2FnZSA9ICdTeXN0ZW0gcmVzb3VyY2VzIGFyZSB3aXRoaW4gbm9ybWFsIGxpbWl0cyc7XHJcblxyXG4gICAgICBpZiAobWV0cmljcy5jcHUudXNhZ2UgPiA4NSB8fCBtZXRyaWNzLm1lbW9yeS5wZXJjZW50YWdlID4gOTAgfHwgbWV0cmljcy5kaXNrLnBlcmNlbnRhZ2UgPiA5MCkge1xyXG4gICAgICAgIHN0YXR1cyA9ICdDUklUSUNBTCc7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdTeXN0ZW0gcmVzb3VyY2VzIGFyZSBjcml0aWNhbGx5IGhpZ2gnO1xyXG4gICAgICB9IGVsc2UgaWYgKG1ldHJpY3MuY3B1LnVzYWdlID4gNzAgfHwgbWV0cmljcy5tZW1vcnkucGVyY2VudGFnZSA+IDgwIHx8IG1ldHJpY3MuZGlzay5wZXJjZW50YWdlID4gODApIHtcclxuICAgICAgICBzdGF0dXMgPSAnV0FSTklORyc7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdTeXN0ZW0gcmVzb3VyY2VzIGFyZSBlbGV2YXRlZCc7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgc3RhdHVzLFxyXG4gICAgICAgIG1lc3NhZ2UsXHJcbiAgICAgICAgZGV0YWlsczogbWV0cmljcyxcclxuICAgICAgICBsYXN0Q2hlY2s6IG5ldyBEYXRlKClcclxuICAgICAgfTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN0YXR1czogJ0VSUk9SJyxcclxuICAgICAgICBtZXNzYWdlOiBgU3lzdGVtIGhlYWx0aCBjaGVjayBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gLFxyXG4gICAgICAgIGRldGFpbHM6IG51bGwsXHJcbiAgICAgICAgbGFzdENoZWNrOiBuZXcgRGF0ZSgpXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGNoZWNrQXBwbGljYXRpb25IZWFsdGgoKTogUHJvbWlzZTxDb21wb25lbnRIZWFsdGg+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHByb2Nlc3NlcyA9IGF3YWl0IHRoaXMuZ2V0UHJvY2Vzc1N0YXR1cygpO1xyXG4gICAgICBjb25zdCBhcGlIZWFsdGggPSBhd2FpdCB0aGlzLmNoZWNrQXBpSGVhbHRoKCk7XHJcbiAgICAgIGNvbnN0IGRhc2hib2FyZEhlYWx0aCA9IGF3YWl0IHRoaXMuY2hlY2tEYXNoYm9hcmRIZWFsdGgoKTtcclxuXHJcbiAgICAgIGNvbnN0IHJ1bm5pbmdQcm9jZXNzZXMgPSBwcm9jZXNzZXMuZmlsdGVyKHAgPT4gcC5zdGF0dXMgPT09ICdvbmxpbmUnKTtcclxuICAgICAgY29uc3QgdG90YWxQcm9jZXNzZXMgPSBwcm9jZXNzZXMubGVuZ3RoO1xyXG5cclxuICAgICAgbGV0IHN0YXR1czogQ29tcG9uZW50SGVhbHRoWydzdGF0dXMnXSA9ICdIRUFMVEhZJztcclxuICAgICAgbGV0IG1lc3NhZ2UgPSAnQWxsIGFwcGxpY2F0aW9uIHNlcnZpY2VzIGFyZSBydW5uaW5nIG5vcm1hbGx5JztcclxuXHJcbiAgICAgIGlmICghYXBpSGVhbHRoIHx8IHJ1bm5pbmdQcm9jZXNzZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgc3RhdHVzID0gJ0NSSVRJQ0FMJztcclxuICAgICAgICBtZXNzYWdlID0gJ0NyaXRpY2FsIGFwcGxpY2F0aW9uIHNlcnZpY2VzIGFyZSBkb3duJztcclxuICAgICAgfSBlbHNlIGlmIChydW5uaW5nUHJvY2Vzc2VzLmxlbmd0aCA8IHRvdGFsUHJvY2Vzc2VzIHx8ICFkYXNoYm9hcmRIZWFsdGgpIHtcclxuICAgICAgICBzdGF0dXMgPSAnV0FSTklORyc7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdTb21lIGFwcGxpY2F0aW9uIHNlcnZpY2VzIGhhdmUgaXNzdWVzJztcclxuICAgICAgfVxyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdGF0dXMsXHJcbiAgICAgICAgbWVzc2FnZSxcclxuICAgICAgICBkZXRhaWxzOiB7XHJcbiAgICAgICAgICBwcm9jZXNzZXM6IHtcclxuICAgICAgICAgICAgcnVubmluZzogcnVubmluZ1Byb2Nlc3Nlcy5sZW5ndGgsXHJcbiAgICAgICAgICAgIHRvdGFsOiB0b3RhbFByb2Nlc3Nlc1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGFwaTogYXBpSGVhbHRoLFxyXG4gICAgICAgICAgZGFzaGJvYXJkOiBkYXNoYm9hcmRIZWFsdGhcclxuICAgICAgICB9LFxyXG4gICAgICAgIGxhc3RDaGVjazogbmV3IERhdGUoKVxyXG4gICAgICB9O1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgc3RhdHVzOiAnRVJST1InLFxyXG4gICAgICAgIG1lc3NhZ2U6IGBBcHBsaWNhdGlvbiBoZWFsdGggY2hlY2sgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YCxcclxuICAgICAgICBkZXRhaWxzOiBudWxsLFxyXG4gICAgICAgIGxhc3RDaGVjazogbmV3IERhdGUoKVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBjaGVja0RhdGFiYXNlSGVhbHRoKCk6IFByb21pc2U8Q29tcG9uZW50SGVhbHRoPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBpc1ZhbGlkID0gYXdhaXQgZGF0YWJhc2VTZXR1cC52YWxpZGF0ZUludGVncml0eSgpO1xyXG4gICAgICBjb25zdCBzdGF0cyA9IGF3YWl0IGRhdGFiYXNlU2V0dXAuZ2V0U3RhdGlzdGljcygpO1xyXG5cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdGF0dXM6IGlzVmFsaWQgPyAnSEVBTFRIWScgOiAnQ1JJVElDQUwnLFxyXG4gICAgICAgIG1lc3NhZ2U6IGlzVmFsaWQgPyAnRGF0YWJhc2UgaXMgaGVhbHRoeScgOiAnRGF0YWJhc2UgaW50ZWdyaXR5IGlzc3VlcyBkZXRlY3RlZCcsXHJcbiAgICAgICAgZGV0YWlsczogc3RhdHMsXHJcbiAgICAgICAgbGFzdENoZWNrOiBuZXcgRGF0ZSgpXHJcbiAgICAgIH07XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdGF0dXM6ICdFUlJPUicsXHJcbiAgICAgICAgbWVzc2FnZTogYERhdGFiYXNlIGhlYWx0aCBjaGVjayBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gLFxyXG4gICAgICAgIGRldGFpbHM6IG51bGwsXHJcbiAgICAgICAgbGFzdENoZWNrOiBuZXcgRGF0ZSgpXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGNoZWNrU2VjdXJpdHlIZWFsdGgoKTogUHJvbWlzZTxDb21wb25lbnRIZWFsdGg+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIENoZWNrIGZpcmV3YWxsIHN0YXR1c1xyXG4gICAgICBsZXQgZmlyZXdhbGxBY3RpdmUgPSBmYWxzZTtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB1ZndTdGF0dXMgPSBleGVjU3luYygnc3VkbyB1Zncgc3RhdHVzJywgeyBlbmNvZGluZzogJ3V0Zi04JyB9KTtcclxuICAgICAgICBmaXJld2FsbEFjdGl2ZSA9IHVmd1N0YXR1cy5pbmNsdWRlcygnU3RhdHVzOiBhY3RpdmUnKTtcclxuICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgLy8gVUZXIG5vdCBhdmFpbGFibGVcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gQ2hlY2sgZmFpbDJiYW4gc3RhdHVzXHJcbiAgICAgIGxldCBmYWlsMmJhbkFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGZhaWwyYmFuU3RhdHVzID0gZXhlY1N5bmMoJ3N1ZG8gc3lzdGVtY3RsIGlzLWFjdGl2ZSBmYWlsMmJhbicsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgICAgZmFpbDJiYW5BY3RpdmUgPSBmYWlsMmJhblN0YXR1cy50cmltKCkgPT09ICdhY3RpdmUnO1xyXG4gICAgICB9IGNhdGNoIHtcclxuICAgICAgICAvLyBGYWlsMmJhbiBub3QgYXZhaWxhYmxlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENoZWNrIGZvciBzZWN1cml0eSB1cGRhdGVzXHJcbiAgICAgIGxldCBzZWN1cml0eVVwZGF0ZXMgPSAwO1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHVwZGF0ZXMgPSBleGVjU3luYygnYXB0IGxpc3QgLS11cGdyYWRhYmxlIDI+L2Rldi9udWxsIHwgZ3JlcCAtaSBzZWN1cml0eSB8IHdjIC1sJywgeyBlbmNvZGluZzogJ3V0Zi04JyB9KTtcclxuICAgICAgICBzZWN1cml0eVVwZGF0ZXMgPSBwYXJzZUludCh1cGRhdGVzLnRyaW0oKSkgfHwgMDtcclxuICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgLy8gQ2Fubm90IGNoZWNrIHVwZGF0ZXNcclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IHN0YXR1czogQ29tcG9uZW50SGVhbHRoWydzdGF0dXMnXSA9ICdIRUFMVEhZJztcclxuICAgICAgbGV0IG1lc3NhZ2UgPSAnU2VjdXJpdHkgc3lzdGVtcyBhcmUgZnVuY3Rpb25pbmcgbm9ybWFsbHknO1xyXG5cclxuICAgICAgaWYgKCFmaXJld2FsbEFjdGl2ZSB8fCBzZWN1cml0eVVwZGF0ZXMgPiAxMCkge1xyXG4gICAgICAgIHN0YXR1cyA9ICdDUklUSUNBTCc7XHJcbiAgICAgICAgbWVzc2FnZSA9ICdDcml0aWNhbCBzZWN1cml0eSBpc3N1ZXMgZGV0ZWN0ZWQnO1xyXG4gICAgICB9IGVsc2UgaWYgKCFmYWlsMmJhbkFjdGl2ZSB8fCBzZWN1cml0eVVwZGF0ZXMgPiAwKSB7XHJcbiAgICAgICAgc3RhdHVzID0gJ1dBUk5JTkcnO1xyXG4gICAgICAgIG1lc3NhZ2UgPSAnU2VjdXJpdHkgd2FybmluZ3MgZGV0ZWN0ZWQnO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN0YXR1cyxcclxuICAgICAgICBtZXNzYWdlLFxyXG4gICAgICAgIGRldGFpbHM6IHtcclxuICAgICAgICAgIGZpcmV3YWxsOiBmaXJld2FsbEFjdGl2ZSxcclxuICAgICAgICAgIGZhaWwyYmFuOiBmYWlsMmJhbkFjdGl2ZSxcclxuICAgICAgICAgIHNlY3VyaXR5VXBkYXRlc1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbGFzdENoZWNrOiBuZXcgRGF0ZSgpXHJcbiAgICAgIH07XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBzdGF0dXM6ICdFUlJPUicsXHJcbiAgICAgICAgbWVzc2FnZTogYFNlY3VyaXR5IGhlYWx0aCBjaGVjayBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gLFxyXG4gICAgICAgIGRldGFpbHM6IG51bGwsXHJcbiAgICAgICAgbGFzdENoZWNrOiBuZXcgRGF0ZSgpXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGNoZWNrVHJhZGluZ0hlYWx0aCgpOiBQcm9taXNlPENvbXBvbmVudEhlYWx0aD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gVGhpcyB3b3VsZCBjaGVjayB0cmFkaW5nLXNwZWNpZmljIGhlYWx0aCBtZXRyaWNzXHJcbiAgICAgIC8vIEZvciBub3csIHJldHVybiBhIGJhc2ljIHN0YXR1c1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN0YXR1czogJ0hFQUxUSFknLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdUcmFkaW5nIHN5c3RlbXMgYXJlIG9wZXJhdGlvbmFsJyxcclxuICAgICAgICBkZXRhaWxzOiB7XHJcbiAgICAgICAgICBhY3RpdmVUcmFkZXM6IDAsXHJcbiAgICAgICAgICByaXNrRXhwb3N1cmU6IDAsXHJcbiAgICAgICAgICBsYXN0VHJhZGVUaW1lOiBudWxsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBsYXN0Q2hlY2s6IG5ldyBEYXRlKClcclxuICAgICAgfTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN0YXR1czogJ0VSUk9SJyxcclxuICAgICAgICBtZXNzYWdlOiBgVHJhZGluZyBoZWFsdGggY2hlY2sgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2V9YCxcclxuICAgICAgICBkZXRhaWxzOiBudWxsLFxyXG4gICAgICAgIGxhc3RDaGVjazogbmV3IERhdGUoKVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTWV0cmljcyBjb2xsZWN0aW9uIG1ldGhvZHNcclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIGdldFBlcmZvcm1hbmNlTWV0cmljc0RhdGEoKTogUHJvbWlzZTxQZXJmb3JtYW5jZU1ldHJpY3M+IHtcclxuICAgIC8vIEdldCByZXNwb25zZSB0aW1lXHJcbiAgICBsZXQgcmVzcG9uc2VUaW1lID0gMDtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcclxuICAgICAgZXhlY1N5bmMoJ2N1cmwgLXMgaHR0cDovL2xvY2FsaG9zdDozMDAxL2FwaS92MS9oZWFsdGgnLCB7IHN0ZGlvOiAncGlwZScgfSk7XHJcbiAgICAgIHJlc3BvbnNlVGltZSA9IERhdGUubm93KCkgLSBzdGFydDtcclxuICAgIH0gY2F0Y2gge1xyXG4gICAgICByZXNwb25zZVRpbWUgPSAtMTsgLy8gU2VydmljZSB1bmF2YWlsYWJsZVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlc3BvbnNlVGltZSxcclxuICAgICAgdGhyb3VnaHB1dDogMCwgLy8gV291bGQgYmUgY2FsY3VsYXRlZCBmcm9tIHJlcXVlc3QgbG9nc1xyXG4gICAgICBlcnJvclJhdGU6IDAsIC8vIFdvdWxkIGJlIGNhbGN1bGF0ZWQgZnJvbSBlcnJvciBsb2dzXHJcbiAgICAgIGF2YWlsYWJpbGl0eTogcmVzcG9uc2VUaW1lID4gMCA/IDEwMCA6IDBcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldFJlc291cmNlTWV0cmljc0RhdGEoKTogUHJvbWlzZTxSZXNvdXJjZU1ldHJpY3M+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIC8vIENQVSBtZXRyaWNzXHJcbiAgICAgIGNvbnN0IGNwdVVzYWdlID0gcGFyc2VGbG9hdChleGVjU3luYyhcInRvcCAtYm4xIHwgZ3JlcCAnQ3B1KHMpJyB8IGF3ayAne3ByaW50ICQyfScgfCBjdXQgLWQnJScgLWYxXCIsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSkudHJpbSgpKTtcclxuICAgICAgY29uc3QgY3B1Q29yZXMgPSBwYXJzZUludChleGVjU3luYygnbnByb2MnLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pLnRyaW0oKSk7XHJcbiAgICAgIFxyXG4gICAgICBsZXQgY3B1VGVtcCA9IDA7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY3B1VGVtcCA9IHBhcnNlRmxvYXQoZXhlY1N5bmMoXCJzZW5zb3JzIHwgZ3JlcCAnQ29yZSAwJyB8IGF3ayAne3ByaW50ICQzfScgfCBjdXQgLWQnKycgLWYyIHwgY3V0IC1kJ8KwJyAtZjFcIiwgeyBlbmNvZGluZzogJ3V0Zi04JyB9KS50cmltKCkpIHx8IDA7XHJcbiAgICAgIH0gY2F0Y2gge1xyXG4gICAgICAgIC8vIFRlbXBlcmF0dXJlIHNlbnNvciBub3QgYXZhaWxhYmxlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIE1lbW9yeSBtZXRyaWNzXHJcbiAgICAgIGNvbnN0IG1lbUluZm8gPSBleGVjU3luYygnZnJlZSAtYicsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSkuc3BsaXQoJ1xcbicpWzFdLnNwbGl0KC9cXHMrLyk7XHJcbiAgICAgIGNvbnN0IG1lbVRvdGFsID0gcGFyc2VJbnQobWVtSW5mb1sxXSk7XHJcbiAgICAgIGNvbnN0IG1lbVVzZWQgPSBwYXJzZUludChtZW1JbmZvWzJdKTtcclxuXHJcbiAgICAgIC8vIERpc2sgbWV0cmljc1xyXG4gICAgICBjb25zdCBkaXNrSW5mbyA9IGV4ZWNTeW5jKFwiZGYgLUIxIC8gfCB0YWlsIC0xXCIsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSkuc3BsaXQoL1xccysvKTtcclxuICAgICAgY29uc3QgZGlza1RvdGFsID0gcGFyc2VJbnQoZGlza0luZm9bMV0pO1xyXG4gICAgICBjb25zdCBkaXNrVXNlZCA9IHBhcnNlSW50KGRpc2tJbmZvWzJdKTtcclxuXHJcbiAgICAgIC8vIE5ldHdvcmsgbWV0cmljcyAoc2ltcGxpZmllZClcclxuICAgICAgbGV0IG5ldHdvcmtJbiA9IDAsIG5ldHdvcmtPdXQgPSAwO1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IG5ldFN0YXRzID0gZXhlY1N5bmMoXCJjYXQgL3Byb2MvbmV0L2RldiB8IGdyZXAgLUUgJ2V0aDB8d2xhbjAnIHwgaGVhZCAtMVwiLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pLnRyaW0oKTtcclxuICAgICAgICBpZiAobmV0U3RhdHMpIHtcclxuICAgICAgICAgIGNvbnN0IHN0YXRzID0gbmV0U3RhdHMuc3BsaXQoL1xccysvKTtcclxuICAgICAgICAgIG5ldHdvcmtJbiA9IHBhcnNlSW50KHN0YXRzWzFdKSB8fCAwO1xyXG4gICAgICAgICAgbmV0d29ya091dCA9IHBhcnNlSW50KHN0YXRzWzldKSB8fCAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgLy8gTmV0d29yayBzdGF0cyBub3QgYXZhaWxhYmxlXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgY3B1OiB7XHJcbiAgICAgICAgICB1c2FnZTogY3B1VXNhZ2UsXHJcbiAgICAgICAgICB0ZW1wZXJhdHVyZTogY3B1VGVtcCxcclxuICAgICAgICAgIGNvcmVzOiBjcHVDb3Jlc1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWVtb3J5OiB7XHJcbiAgICAgICAgICB1c2VkOiBtZW1Vc2VkLFxyXG4gICAgICAgICAgdG90YWw6IG1lbVRvdGFsLFxyXG4gICAgICAgICAgcGVyY2VudGFnZTogKG1lbVVzZWQgLyBtZW1Ub3RhbCkgKiAxMDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRpc2s6IHtcclxuICAgICAgICAgIHVzZWQ6IGRpc2tVc2VkLFxyXG4gICAgICAgICAgdG90YWw6IGRpc2tUb3RhbCxcclxuICAgICAgICAgIHBlcmNlbnRhZ2U6IChkaXNrVXNlZCAvIGRpc2tUb3RhbCkgKiAxMDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIG5ldHdvcms6IHtcclxuICAgICAgICAgIGJ5dGVzSW46IG5ldHdvcmtJbixcclxuICAgICAgICAgIGJ5dGVzT3V0OiBuZXR3b3JrT3V0XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGxvZ2dlci5lcnJvcignRXJyb3IgY29sbGVjdGluZyByZXNvdXJjZSBtZXRyaWNzOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldEFsZXJ0U3VtbWFyeURhdGEoKTogUHJvbWlzZTxBbGVydFN1bW1hcnk+IHtcclxuICAgIC8vIFRoaXMgd291bGQgaW50ZWdyYXRlIHdpdGggdGhlIG1vbml0b3Jpbmcgc3lzdGVtXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBhY3RpdmU6IDAsXHJcbiAgICAgIGNyaXRpY2FsOiAwLFxyXG4gICAgICB3YXJuaW5nczogMCxcclxuICAgICAgcmVjZW50OiBbXVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0TWFpbnRlbmFuY2VTdGF0dXNEYXRhKCk6IFByb21pc2U8TWFpbnRlbmFuY2VTdGF0dXM+IHtcclxuICAgIGNvbnN0IGJhY2t1cEhpc3RvcnkgPSBiYWNrdXBSZWNvdmVyeS5nZXRCYWNrdXBIaXN0b3J5KCk7XHJcbiAgICBjb25zdCBtYWludGVuYW5jZVRhc2tzID0gbW9uaXRvcmluZ0F1dG9tYXRpb24uZ2V0TWFpbnRlbmFuY2VTdGF0dXMoKTtcclxuXHJcbiAgICBjb25zdCBsYXN0QmFja3VwID0gYmFja3VwSGlzdG9yeS5sZW5ndGggPiAwID8gYmFja3VwSGlzdG9yeVtiYWNrdXBIaXN0b3J5Lmxlbmd0aCAtIDFdLnRpbWVzdGFtcCA6IG51bGw7XHJcblxyXG4gICAgLy8gQ2hlY2sgZm9yIHN5c3RlbSB1cGRhdGVzXHJcbiAgICBsZXQgYXZhaWxhYmxlVXBkYXRlcyA9IDA7XHJcbiAgICBsZXQgc2VjdXJpdHlVcGRhdGVzID0gMDtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVwZGF0ZXMgPSBleGVjU3luYygnYXB0IGxpc3QgLS11cGdyYWRhYmxlIDI+L2Rldi9udWxsIHwgd2MgLWwnLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pO1xyXG4gICAgICBhdmFpbGFibGVVcGRhdGVzID0gTWF0aC5tYXgoMCwgcGFyc2VJbnQodXBkYXRlcy50cmltKCkpIC0gMSk7IC8vIFN1YnRyYWN0IGhlYWRlciBsaW5lXHJcblxyXG4gICAgICBjb25zdCBzZWNVcGRhdGVzID0gZXhlY1N5bmMoJ2FwdCBsaXN0IC0tdXBncmFkYWJsZSAyPi9kZXYvbnVsbCB8IGdyZXAgLWkgc2VjdXJpdHkgfCB3YyAtbCcsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgIHNlY3VyaXR5VXBkYXRlcyA9IHBhcnNlSW50KHNlY1VwZGF0ZXMudHJpbSgpKSB8fCAwO1xyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIC8vIENhbm5vdCBjaGVjayB1cGRhdGVzXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbGFzdEJhY2t1cCxcclxuICAgICAgbmV4dEJhY2t1cDogbnVsbCwgLy8gV291bGQgYmUgY2FsY3VsYXRlZCBmcm9tIGJhY2t1cCBzY2hlZHVsZVxyXG4gICAgICBzY2hlZHVsZWRUYXNrczogbWFpbnRlbmFuY2VUYXNrcy5tYXAodGFzayA9PiAoe1xyXG4gICAgICAgIG5hbWU6IHRhc2submFtZSxcclxuICAgICAgICBuZXh0UnVuOiB0YXNrLm5leHRSdW4gfHwgbmV3IERhdGUoKSxcclxuICAgICAgICBlbmFibGVkOiB0YXNrLmVuYWJsZWRcclxuICAgICAgfSkpLFxyXG4gICAgICBzeXN0ZW1VcGRhdGVzOiB7XHJcbiAgICAgICAgYXZhaWxhYmxlOiBhdmFpbGFibGVVcGRhdGVzLFxyXG4gICAgICAgIHNlY3VyaXR5OiBzZWN1cml0eVVwZGF0ZXMsXHJcbiAgICAgICAgbGFzdENoZWNrOiBuZXcgRGF0ZSgpXHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBIZWxwZXIgbWV0aG9kc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgZ2V0UHJvY2Vzc1N0YXR1cygpOiBQcm9taXNlPGFueVtdPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBwbTJMaXN0ID0gZXhlY1N5bmMoJ3BtMiBqbGlzdCcsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKHBtMkxpc3QpO1xyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgY2hlY2tBcGlIZWFsdGgoKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBleGVjU3luYygnY3VybCAtZiBodHRwOi8vbG9jYWxob3N0OjMwMDEvYXBpL3YxL2hlYWx0aCcsIHsgc3RkaW86ICdwaXBlJyB9KTtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBjaGVja0Rhc2hib2FyZEhlYWx0aCgpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGV4ZWNTeW5jKCdjdXJsIC1mIGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMicsIHsgc3RkaW86ICdwaXBlJyB9KTtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRWZXJzaW9uKCk6IHN0cmluZyB7XHJcbiAgICB0cnkge1xyXG4gICAgICBpZiAoZXhpc3RzU3luYygncGFja2FnZS5qc29uJykpIHtcclxuICAgICAgICBjb25zdCBwYWNrYWdlSnNvbiA9IEpTT04ucGFyc2UocmVhZEZpbGVTeW5jKCdwYWNrYWdlLmpzb24nLCAndXRmLTgnKSk7XHJcbiAgICAgICAgcmV0dXJuIHBhY2thZ2VKc29uLnZlcnNpb24gfHwgJzEuMC4wJztcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIC8vIElnbm9yZSBlcnJvcnNcclxuICAgIH1cclxuICAgIHJldHVybiAnMS4wLjAnO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQVBJIGVuZHBvaW50IGltcGxlbWVudGF0aW9uc1xyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgZ2V0U3lzdGVtSGVhbHRoKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3Qgc3lzdGVtSGVhbHRoID0gYXdhaXQgdGhpcy5jaGVja1N5c3RlbUhlYWx0aCgpO1xyXG4gICAgICByZXMuanNvbihzeXN0ZW1IZWFsdGgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0QXBwbGljYXRpb25IZWFsdGgocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBhcHBIZWFsdGggPSBhd2FpdCB0aGlzLmNoZWNrQXBwbGljYXRpb25IZWFsdGgoKTtcclxuICAgICAgcmVzLmpzb24oYXBwSGVhbHRoKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldERhdGFiYXNlSGVhbHRoKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgZGJIZWFsdGggPSBhd2FpdCB0aGlzLmNoZWNrRGF0YWJhc2VIZWFsdGgoKTtcclxuICAgICAgcmVzLmpzb24oZGJIZWFsdGgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0U2VjdXJpdHlIZWFsdGgocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBzZWN1cml0eUhlYWx0aCA9IGF3YWl0IHRoaXMuY2hlY2tTZWN1cml0eUhlYWx0aCgpO1xyXG4gICAgICByZXMuanNvbihzZWN1cml0eUhlYWx0aCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBnZXRUcmFkaW5nSGVhbHRoKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgdHJhZGluZ0hlYWx0aCA9IGF3YWl0IHRoaXMuY2hlY2tUcmFkaW5nSGVhbHRoKCk7XHJcbiAgICAgIHJlcy5qc29uKHRyYWRpbmdIZWFsdGgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0TWV0cmljcyhyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IG1ldHJpY3MgPSBtb25pdG9yaW5nQXV0b21hdGlvbi5nZXRNZXRyaWNzKCk7XHJcbiAgICAgIHJlcy5qc29uKG1ldHJpY3MpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0UGVyZm9ybWFuY2VNZXRyaWNzKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcGVyZm9ybWFuY2VNZXRyaWNzID0gYXdhaXQgdGhpcy5nZXRQZXJmb3JtYW5jZU1ldHJpY3NEYXRhKCk7XHJcbiAgICAgIHJlcy5qc29uKHBlcmZvcm1hbmNlTWV0cmljcyk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBnZXRSZXNvdXJjZU1ldHJpY3MocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCByZXNvdXJjZU1ldHJpY3MgPSBhd2FpdCB0aGlzLmdldFJlc291cmNlTWV0cmljc0RhdGEoKTtcclxuICAgICAgcmVzLmpzb24ocmVzb3VyY2VNZXRyaWNzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldE1ldHJpY3NIaXN0b3J5KHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgaGlzdG9yeSA9IG1vbml0b3JpbmdBdXRvbWF0aW9uLmdldE1ldHJpY3MoKTtcclxuICAgICAgY29uc3QgbGltaXQgPSBwYXJzZUludChyZXEucXVlcnkubGltaXQgYXMgc3RyaW5nKSB8fCAxMDA7XHJcbiAgICAgIHJlcy5qc29uKGhpc3Rvcnkuc2xpY2UoLWxpbWl0KSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBnZXRBbGVydHMocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBUaGlzIHdvdWxkIGludGVncmF0ZSB3aXRoIHRoZSBhbGVydGluZyBzeXN0ZW1cclxuICAgICAgcmVzLmpzb24oeyBhbGVydHM6IFtdIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0QWN0aXZlQWxlcnRzKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gVGhpcyB3b3VsZCByZXR1cm4gb25seSBhY3RpdmUgYWxlcnRzXHJcbiAgICAgIHJlcy5qc29uKHsgYWN0aXZlQWxlcnRzOiBbXSB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGFja25vd2xlZGdlQWxlcnQocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBhbGVydElkID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgLy8gVGhpcyB3b3VsZCBhY2tub3dsZWRnZSB0aGUgYWxlcnRcclxuICAgICAgcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBhbGVydElkIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0TWFpbnRlbmFuY2VTdGF0dXMocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBtYWludGVuYW5jZVN0YXR1cyA9IGF3YWl0IHRoaXMuZ2V0TWFpbnRlbmFuY2VTdGF0dXNEYXRhKCk7XHJcbiAgICAgIHJlcy5qc29uKG1haW50ZW5hbmNlU3RhdHVzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldE1haW50ZW5hbmNlVGFza3MocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB0YXNrcyA9IG1vbml0b3JpbmdBdXRvbWF0aW9uLmdldE1haW50ZW5hbmNlU3RhdHVzKCk7XHJcbiAgICAgIHJlcy5qc29uKHRhc2tzKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIHJ1bk1haW50ZW5hbmNlVGFzayhyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHRhc2tOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG4gICAgICAvLyBUaGlzIHdvdWxkIHRyaWdnZXIgdGhlIG1haW50ZW5hbmNlIHRhc2tcclxuICAgICAgcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCB0YXNrOiB0YXNrTmFtZSwgc3RhdHVzOiAnc3RhcnRlZCcgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBnZXRCYWNrdXBTdGF0dXMocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBjb25maWcgPSBiYWNrdXBSZWNvdmVyeS5nZXRDb25maWcoKTtcclxuICAgICAgY29uc3QgaGlzdG9yeSA9IGJhY2t1cFJlY292ZXJ5LmdldEJhY2t1cEhpc3RvcnkoKTtcclxuICAgICAgY29uc3QgbGFzdEJhY2t1cCA9IGhpc3RvcnkubGVuZ3RoID4gMCA/IGhpc3RvcnlbaGlzdG9yeS5sZW5ndGggLSAxXSA6IG51bGw7XHJcblxyXG4gICAgICByZXMuanNvbih7XHJcbiAgICAgICAgY29uZmlnLFxyXG4gICAgICAgIGxhc3RCYWNrdXAsXHJcbiAgICAgICAgdG90YWxCYWNrdXBzOiBoaXN0b3J5Lmxlbmd0aFxyXG4gICAgICB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldEJhY2t1cEhpc3RvcnkocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBoaXN0b3J5ID0gYmFja3VwUmVjb3ZlcnkuZ2V0QmFja3VwSGlzdG9yeSgpO1xyXG4gICAgICBjb25zdCBsaW1pdCA9IHBhcnNlSW50KHJlcS5xdWVyeS5saW1pdCBhcyBzdHJpbmcpIHx8IDUwO1xyXG4gICAgICByZXMuanNvbihoaXN0b3J5LnNsaWNlKC1saW1pdCkpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgY3JlYXRlQmFja3VwKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYmFja3VwUmVjb3ZlcnkucGVyZm9ybUZ1bGxCYWNrdXAoKTtcclxuICAgICAgcmVzLmpzb24ocmVzdWx0KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGdldFJlY292ZXJ5UGxhbnMocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBwbGFucyA9IGJhY2t1cFJlY292ZXJ5LmdldFJlY292ZXJ5UGxhbnMoKTtcclxuICAgICAgcmVzLmpzb24ocGxhbnMpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZXhlY3V0ZVJlY292ZXJ5KHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcGxhbk5hbWUgPSByZXEucGFyYW1zLnBsYW47XHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGJhY2t1cFJlY292ZXJ5LmV4ZWN1dGVSZWNvdmVyeShwbGFuTmFtZSk7XHJcbiAgICAgIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyByZXN0YXJ0U3lzdGVtKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gVGhpcyB3b3VsZCByZXN0YXJ0IHRoZSBzeXN0ZW0gc2VydmljZXNcclxuICAgICAgZXhlY1N5bmMoJ3BtMiByZXN0YXJ0IGFsbCcpO1xyXG4gICAgICByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdTeXN0ZW0gcmVzdGFydCBpbml0aWF0ZWQnIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgc2h1dGRvd25TeXN0ZW0ocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBUaGlzIHdvdWxkIGdyYWNlZnVsbHkgc2h1dGRvd24gdGhlIHN5c3RlbVxyXG4gICAgICBleGVjU3luYygncG0yIHN0b3AgYWxsJyk7XHJcbiAgICAgIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogJ1N5c3RlbSBzaHV0ZG93biBpbml0aWF0ZWQnIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgZ2V0U3lzdGVtTG9ncyhyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IGxpbmVzID0gcGFyc2VJbnQocmVxLnF1ZXJ5LmxpbmVzIGFzIHN0cmluZykgfHwgMTAwO1xyXG4gICAgICBjb25zdCBsb2dUeXBlID0gcmVxLnF1ZXJ5LnR5cGUgYXMgc3RyaW5nIHx8ICdhcHBsaWNhdGlvbic7XHJcbiAgICAgIFxyXG4gICAgICBsZXQgbG9ncyA9ICcnO1xyXG4gICAgICBzd2l0Y2ggKGxvZ1R5cGUpIHtcclxuICAgICAgICBjYXNlICdhcHBsaWNhdGlvbic6XHJcbiAgICAgICAgICBsb2dzID0gZXhlY1N5bmMoYHBtMiBsb2dzIC0tbGluZXMgJHtsaW5lc30gLS1ub3N0cmVhbWAsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdzeXN0ZW0nOlxyXG4gICAgICAgICAgbG9ncyA9IGV4ZWNTeW5jKGBqb3VybmFsY3RsIC1uICR7bGluZXN9IC0tbm8tcGFnZXJgLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnc2VjdXJpdHknOlxyXG4gICAgICAgICAgbG9ncyA9IGV4ZWNTeW5jKGB0YWlsIC1uICR7bGluZXN9IC92YXIvbG9nL2F1dGgubG9nYCwgeyBlbmNvZGluZzogJ3V0Zi04JyB9KTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICBsb2dzID0gZXhlY1N5bmMoYHBtMiBsb2dzIC0tbGluZXMgJHtsaW5lc30gLS1ub3N0cmVhbWAsIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJlcy5qc29uKHsgbG9nczogbG9ncy5zcGxpdCgnXFxuJykgfSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IHJvdXRlciBpbnN0YW5jZVxyXG4gICAqL1xyXG4gIGdldFJvdXRlcigpOiBSb3V0ZXIge1xyXG4gICAgcmV0dXJuIHRoaXMucm91dGVyO1xyXG4gIH1cclxufVxyXG5cclxuLy8gRXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxyXG5leHBvcnQgY29uc3QgaGVhbHRoRGFzaGJvYXJkID0gbmV3IEhlYWx0aERhc2hib2FyZCgpOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFB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