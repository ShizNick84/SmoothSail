616e42675a50a78567c11a795cf1bb81
"use strict";

/**
 * Moving Average Strategy Implementation
 *
 * This module implements Simple Moving Average (SMA) and Exponential Moving Average (EMA)
 * calculations with crossover signal detection and volume confirmation.
 *
 * Requirements: 4.1, 4.8 - Moving average crossover with configurable periods and signal strength
 */
/* istanbul ignore next */
function cov_8jz5m8s9d() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts";
  var hash = "4e2df0966d321f8078c2b1aafbba6fde99ce5041";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "2": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "3": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "4": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "6": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "7": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 80
        }
      },
      "8": {
        start: {
          line: 26,
          column: 65
        },
        end: {
          line: 26,
          column: 76
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "11": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 24
        }
      },
      "12": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "13": {
        start: {
          line: 40,
          column: 18
        },
        end: {
          line: 40,
          column: 27
        }
      },
      "14": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "15": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 41,
          column: 22
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 70
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "18": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "19": {
        start: {
          line: 54,
          column: 46
        },
        end: {
          line: 54,
          column: 56
        }
      },
      "20": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "21": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "22": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "23": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 51
        }
      },
      "24": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 73,
          column: 52
        }
      },
      "25": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 87
        }
      },
      "26": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 75,
          column: 89
        }
      },
      "27": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "28": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 24
        }
      },
      "29": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 34
        }
      },
      "30": {
        start: {
          line: 81,
          column: 23
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "31": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "32": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 43
        }
      },
      "33": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 100
        }
      },
      "34": {
        start: {
          line: 88,
          column: 13
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "35": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 42
        }
      },
      "36": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 100
        }
      },
      "37": {
        start: {
          line: 93,
          column: 32
        },
        end: {
          line: 93,
          column: 66
        }
      },
      "38": {
        start: {
          line: 94,
          column: 27
        },
        end: {
          line: 94,
          column: 60
        }
      },
      "39": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "40": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 120,
          column: 54
        }
      },
      "41": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 121,
          column: 52
        }
      },
      "42": {
        start: {
          line: 122,
          column: 37
        },
        end: {
          line: 122,
          column: 70
        }
      },
      "43": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 125,
          column: 65
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "45": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "46": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 25
        }
      },
      "47": {
        start: {
          line: 137,
          column: 30
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "48": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 139,
          column: 61
        }
      },
      "49": {
        start: {
          line: 139,
          column: 35
        },
        end: {
          line: 139,
          column: 52
        }
      },
      "50": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 83
        }
      },
      "51": {
        start: {
          line: 150,
          column: 26
        },
        end: {
          line: 150,
          column: 82
        }
      },
      "52": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "53": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 24
        }
      },
      "54": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 154,
          column: 60
        }
      },
      "55": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 155,
          column: 87
        }
      },
      "56": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 157,
          column: 53
        }
      },
      "57": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "58": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 56
        }
      },
      "59": {
        start: {
          line: 162,
          column: 27
        },
        end: {
          line: 162,
          column: 75
        }
      },
      "60": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "61": {
        start: {
          line: 188,
          column: 29
        },
        end: {
          line: 188,
          column: 68
        }
      },
      "62": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 78
        }
      },
      "63": {
        start: {
          line: 189,
          column: 70
        },
        end: {
          line: 189,
          column: 76
        }
      },
      "64": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 76
        }
      },
      "65": {
        start: {
          line: 190,
          column: 69
        },
        end: {
          line: 190,
          column: 74
        }
      },
      "66": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "67": {
        start: {
          line: 192,
          column: 27
        },
        end: {
          line: 192,
          column: 37
        }
      },
      "68": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 193,
          column: 38
        }
      },
      "69": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 194,
          column: 48
        }
      },
      "70": {
        start: {
          line: 195,
          column: 25
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "71": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 50
        }
      },
      "72": {
        start: {
          line: 199,
          column: 27
        },
        end: {
          line: 199,
          column: 36
        }
      },
      "73": {
        start: {
          line: 200,
          column: 29
        },
        end: {
          line: 200,
          column: 39
        }
      },
      "74": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "75": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 48
        }
      },
      "76": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 50
        }
      },
      "77": {
        start: {
          line: 214,
          column: 52
        },
        end: {
          line: 214,
          column: 71
        }
      },
      "78": {
        start: {
          line: 215,
          column: 27
        },
        end: {
          line: 215,
          column: 101
        }
      },
      "79": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "80": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 199
        }
      },
      "81": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 198
        }
      },
      "82": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 41
        }
      },
      "83": {
        start: {
          line: 231,
          column: 23
        },
        end: {
          line: 231,
          column: 65
        }
      },
      "84": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 233,
          column: 67
        }
      },
      "85": {
        start: {
          line: 233,
          column: 59
        },
        end: {
          line: 233,
          column: 66
        }
      },
      "86": {
        start: {
          line: 234,
          column: 25
        },
        end: {
          line: 234,
          column: 79
        }
      },
      "87": {
        start: {
          line: 235,
          column: 24
        },
        end: {
          line: 235,
          column: 85
        }
      },
      "88": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "89": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "90": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 257,
          column: 22
        }
      },
      "91": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 22
        }
      },
      "92": {
        start: {
          line: 258,
          column: 28
        },
        end: {
          line: 258,
          column: 79
        }
      },
      "93": {
        start: {
          line: 259,
          column: 34
        },
        end: {
          line: 259,
          column: 63
        }
      },
      "94": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 57
        }
      },
      "95": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 67
        }
      },
      "96": {
        start: {
          line: 265,
          column: 0
        },
        end: {
          line: 265,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 49
          },
          end: {
            line: 26,
            column: 50
          }
        },
        loc: {
          start: {
            line: 26,
            column: 65
          },
          end: {
            line: 26,
            column: 76
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 112
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 54,
            column: 39
          }
        },
        loc: {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 56
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 106
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 60
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 119
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 34
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 133
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 20
          },
          end: {
            line: 139,
            column: 21
          }
        },
        loc: {
          start: {
            line: 139,
            column: 35
          },
          end: {
            line: 139,
            column: 52
          }
        },
        line: 139
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 105
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 149
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 48
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 187
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 189,
            column: 65
          },
          end: {
            line: 189,
            column: 66
          }
        },
        loc: {
          start: {
            line: 189,
            column: 70
          },
          end: {
            line: 189,
            column: 76
          }
        },
        line: 189
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 190,
            column: 64
          },
          end: {
            line: 190,
            column: 65
          }
        },
        loc: {
          start: {
            line: 190,
            column: 69
          },
          end: {
            line: 190,
            column: 74
          }
        },
        line: 190
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 57
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 213
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 49
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 229
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 233,
            column: 54
          },
          end: {
            line: 233,
            column: 55
          }
        },
        loc: {
          start: {
            line: 233,
            column: 59
          },
          end: {
            line: 233,
            column: 66
          }
        },
        line: 233
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 47
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 255
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 53,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 53,
            column: 51
          },
          end: {
            line: 53,
            column: 73
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 75
          },
          end: {
            line: 53,
            column: 110
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 53,
            column: 88
          },
          end: {
            line: 53,
            column: 110
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 45
          },
          end: {
            line: 67,
            column: 67
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 69
          },
          end: {
            line: 67,
            column: 104
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 82
          },
          end: {
            line: 67,
            column: 104
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 76,
            column: 28
          }
        }, {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 48
          }
        }, {
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 76,
            column: 69
          }
        }, {
          start: {
            line: 76,
            column: 73
          },
          end: {
            line: 76,
            column: 90
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: 88,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 48
          }
        }, {
          start: {
            line: 83,
            column: 52
          },
          end: {
            line: 83,
            column: 85
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 88,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 13
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "12": {
        loc: {
          start: {
            line: 88,
            column: 17
          },
          end: {
            line: 88,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 17
          },
          end: {
            line: 88,
            column: 53
          }
        }, {
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 88,
            column: 90
          }
        }],
        line: 88
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 31
          },
          end: {
            line: 149,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 149,
            column: 44
          },
          end: {
            line: 149,
            column: 66
          }
        }],
        line: 149
      },
      "15": {
        loc: {
          start: {
            line: 149,
            column: 68
          },
          end: {
            line: 149,
            column: 103
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 149,
            column: 81
          },
          end: {
            line: 149,
            column: 103
          }
        }],
        line: 149
      },
      "16": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "17": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 151,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 151,
            column: 22
          }
        }, {
          start: {
            line: 151,
            column: 26
          },
          end: {
            line: 151,
            column: 46
          }
        }, {
          start: {
            line: 151,
            column: 50
          },
          end: {
            line: 151,
            column: 85
          }
        }],
        line: 151
      },
      "18": {
        loc: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 73
          },
          end: {
            line: 155,
            column: 78
          }
        }, {
          start: {
            line: 155,
            column: 81
          },
          end: {
            line: 155,
            column: 87
          }
        }],
        line: 155
      },
      "19": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "20": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: 198,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        }],
        line: 191
      },
      "21": {
        loc: {
          start: {
            line: 196,
            column: 19
          },
          end: {
            line: 196,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 30
          },
          end: {
            line: 196,
            column: 43
          }
        }, {
          start: {
            line: 196,
            column: 46
          },
          end: {
            line: 196,
            column: 49
          }
        }],
        line: 196
      },
      "22": {
        loc: {
          start: {
            line: 203,
            column: 19
          },
          end: {
            line: 203,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 203,
            column: 43
          }
        }, {
          start: {
            line: 203,
            column: 46
          },
          end: {
            line: 203,
            column: 49
          }
        }],
        line: 203
      },
      "23": {
        loc: {
          start: {
            line: 215,
            column: 27
          },
          end: {
            line: 215,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 45
          },
          end: {
            line: 215,
            column: 79
          }
        }, {
          start: {
            line: 215,
            column: 82
          },
          end: {
            line: 215,
            column: 101
          }
        }],
        line: 215
      },
      "24": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 221,
            column: 9
          }
        }],
        line: 216
      },
      "25": {
        loc: {
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 58
          },
          end: {
            line: 231,
            column: 60
          }
        }, {
          start: {
            line: 231,
            column: 63
          },
          end: {
            line: 231,
            column: 65
          }
        }],
        line: 231
      },
      "26": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 257,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 257,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "27": {
        loc: {
          start: {
            line: 259,
            column: 34
          },
          end: {
            line: 259,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 57
          },
          end: {
            line: 259,
            column: 58
          }
        }, {
          start: {
            line: 259,
            column: 61
          },
          end: {
            line: 259,
            column: 63
          }
        }],
        line: 259
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts",
      mappings: ";AAAA;;;;;;;GAOG;;;AAIH,MAAa,qBAAqB;IACf,iBAAiB,GAAG,EAAE,CAAC;IACvB,iBAAiB,GAAG,EAAE,CAAC;IACvB,2BAA2B,GAAG,GAAG,CAAC,CAAC,2BAA2B;IAE/E;;;;;OAKG;IACI,YAAY,CAAC,MAAgB,EAAE,MAAc;QAClD,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;QACzE,OAAO,GAAG,GAAG,MAAM,CAAC;IACtB,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAC,MAAgB,EAAE,MAAc;QAClD,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC;YAC3B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,UAAU,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAEpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACvC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;;;;OAMG;IACI,qBAAqB,CAC1B,UAAwB,EACxB,aAAqB,IAAI,CAAC,iBAAiB,EAC3C,aAAqB,IAAI,CAAC,iBAAiB;QAE3C,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;YAC9C,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACI,eAAe,CACpB,UAAwB,EACxB,aAAqB,IAAI,CAAC,iBAAiB,EAC3C,aAAqB,IAAI,CAAC,iBAAiB;QAE3C,IAAI,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7D,OAAO,IAAI,CAAC;QACd,CAAC;QAED,yBAAyB;QACzB,MAAM,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE7C,MAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAChF,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAElF,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnF,OAAO,IAAI,CAAC;QACd,CAAC;QAED,2BAA2B;QAC3B,IAAI,aAAa,GAA4C,MAAM,CAAC;QACpE,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,0DAA0D;QAC1D,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;YAC9E,aAAa,GAAG,cAAc,CAAC;YAC/B,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC1F,CAAC;QACD,yDAAyD;aACpD,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;YACnF,aAAa,GAAG,aAAa,CAAC;YAC9B,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC1F,CAAC;QAED,4BAA4B;QAC5B,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAE3D,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAErD,OAAO;YACL,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,OAAO,CAAC,OAAO;YACtB,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,MAAM,EAAE,UAAU;YAClB,UAAU,EAAE;gBACV,UAAU;gBACV,UAAU;gBACV,OAAO,EAAE,OAAO,CAAC,OAAO;aACzB;YACD,SAAS,EAAE;gBACT,IAAI,EAAE,aAAa;gBACnB,QAAQ;gBACR,eAAe;aAChB;SACF,CAAC;IACJ,CAAC;IAED;;;;;;OAMG;IACK,0BAA0B,CAChC,OAAe,EACf,OAAe,EACf,SAAgC;QAEhC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;QAC/C,MAAM,YAAY,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QAC7C,MAAM,oBAAoB,GAAG,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,GAAG,CAAC;QAE/D,iEAAiE;QACjE,4DAA4D;QAC5D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;QAE1D,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACK,iBAAiB,CAAC,UAAwB;QAChD,IAAI,UAAU,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;YAC3B,OAAO,KAAK,CAAC,CAAC,+CAA+C;QAC/D,CAAC;QAED,MAAM,aAAa,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;QAC/D,MAAM,aAAa,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;aACxC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QAEpD,OAAO,aAAa,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAC7E,CAAC;IAED;;;;;;OAMG;IACI,cAAc,CACnB,UAAwB,EACxB,aAAqB,IAAI,CAAC,iBAAiB,EAC3C,aAAqB,IAAI,CAAC,iBAAiB;QAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAE3E,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;YAC9E,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrD,MAAM,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;QAEhF,iEAAiE;QACjE,IAAI,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC9C,IAAI,SAAS,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;YACxC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,+BAA+B;QAC9E,CAAC;QAED,2DAA2D;QAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAEpE,OAAO;YACL,EAAE,EAAE,MAAM,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YACjE,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,IAAI,EAAE,UAAU;YAChB,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC,QAAQ;YACtC,UAAU;YACV,UAAU,EAAE,CAAC,OAAO,UAAU,EAAE,EAAE,OAAO,UAAU,EAAE,CAAC;YACtD,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;YACpE,UAAU;YACV,SAAS,EAAE,UAAU,CAAC,SAAS;YAC/B,QAAQ,EAAE;gBACR,OAAO,EAAE,SAAS,CAAC,KAAK;gBACxB,OAAO,EAAE,SAAS,CAAC,UAAU,CAAC,OAAO;gBACrC,eAAe,EAAE,SAAS,CAAC,SAAS,CAAC,eAAe;gBACpD,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,IAAI;aACxC;SACF,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,mBAAmB,CAAC,UAAwB,EAAE,UAA0B;QAC9E,MAAM,YAAY,GAAG,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7D,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACvE,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAErE,IAAI,UAAU,KAAK,KAAK,EAAE,CAAC;YACzB,MAAM,MAAM,GAAG,UAAU,CAAC;YAC1B,MAAM,QAAQ,GAAG,SAAS,CAAC;YAC3B,MAAM,MAAM,GAAG,MAAM,GAAG,YAAY,CAAC;YACrC,MAAM,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAC;YACrC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;QACxC,CAAC;aAAM,CAAC;YACN,MAAM,MAAM,GAAG,SAAS,CAAC;YACzB,MAAM,QAAQ,GAAG,UAAU,CAAC;YAC5B,MAAM,MAAM,GAAG,YAAY,GAAG,MAAM,CAAC;YACrC,MAAM,IAAI,GAAG,QAAQ,GAAG,YAAY,CAAC;YACrC,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;;;;;OAMG;IACK,iBAAiB,CACvB,SAA8B,EAC9B,UAAkB,EAClB,UAAkB;QAElB,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,SAAS,CAAC,SAAU,CAAC;QACjE,MAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,kCAAkC,CAAC,CAAC,CAAC,mBAAmB,CAAC;QAE9F,IAAI,IAAI,KAAK,cAAc,EAAE,CAAC;YAC5B,OAAO,0BAA0B,UAAU,6BAA6B,UAAU,cAAc,UAAU,sBAAsB,QAAQ,kDAAkD,CAAC;QAC7L,CAAC;aAAM,CAAC;YACN,OAAO,yBAAyB,UAAU,6BAA6B,UAAU,cAAc,UAAU,sBAAsB,QAAQ,kDAAkD,CAAC;QAC5L,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACI,wBAAwB,CAAC,UAAwB,EAAE,MAAqB;QAC7E,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;QAClC,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1D,kDAAkD;QAClD,MAAM,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5D,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAExE,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC;QAE9E,MAAM,OAAO,GAAG;YACd,2BAA2B,SAAS,MAAM;YAC1C,wBAAwB,MAAM,MAAM;YACpC,mBAAmB,QAAQ,MAAM;SAClC,CAAC;QAEF,OAAO;YACL,OAAO;YACP,SAAS;YACT,MAAM;YACN,QAAQ;YACR,OAAO;SACR,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACK,sBAAsB,CAAC,MAAgB,EAAE,UAA0B;QACzE,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,EAAE,CAAC;QAEjC,MAAM,WAAW,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACxE,MAAM,iBAAiB,GAAG,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,SAAS,GAAG,WAAW,GAAG,iBAAiB,CAAC;QAElD,yBAAyB;QACzB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;CACF;AAtTD,sDAsTC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts"],
      sourcesContent: ["/**\r\n * Moving Average Strategy Implementation\r\n * \r\n * This module implements Simple Moving Average (SMA) and Exponential Moving Average (EMA)\r\n * calculations with crossover signal detection and volume confirmation.\r\n * \r\n * Requirements: 4.1, 4.8 - Moving average crossover with configurable periods and signal strength\r\n */\r\n\r\nimport { MarketData, MovingAverageSignal, TradingSignal, SignalConfidence } from './types';\r\n\r\nexport class MovingAverageStrategy {\r\n  private readonly defaultFastPeriod = 20;\r\n  private readonly defaultSlowPeriod = 50;\r\n  private readonly volumeConfirmationThreshold = 1.5; // 50% above average volume\r\n\r\n  /**\r\n   * Calculate Simple Moving Average (SMA)\r\n   * @param prices Array of price values\r\n   * @param period Number of periods for calculation\r\n   * @returns SMA value or null if insufficient data\r\n   */\r\n  public calculateSMA(prices: number[], period: number): number | null {\r\n    if (prices.length < period) {\r\n      return null;\r\n    }\r\n\r\n    const sum = prices.slice(-period).reduce((acc, price) => acc + price, 0);\r\n    return sum / period;\r\n  }\r\n\r\n  /**\r\n   * Calculate Exponential Moving Average (EMA)\r\n   * @param prices Array of price values\r\n   * @param period Number of periods for calculation\r\n   * @returns EMA value or null if insufficient data\r\n   */\r\n  public calculateEMA(prices: number[], period: number): number | null {\r\n    if (prices.length < period) {\r\n      return null;\r\n    }\r\n\r\n    const multiplier = 2 / (period + 1);\r\n    let ema = prices[0];\r\n\r\n    for (let i = 1; i < prices.length; i++) {\r\n      ema = (prices[i] * multiplier) + (ema * (1 - multiplier));\r\n    }\r\n\r\n    return ema;\r\n  }\r\n\r\n  /**\r\n   * Calculate multiple EMAs for crossover analysis\r\n   * @param marketData Array of market data\r\n   * @param fastPeriod Fast EMA period (default: 20)\r\n   * @param slowPeriod Slow EMA period (default: 50)\r\n   * @returns Object containing fast and slow EMA values\r\n   */\r\n  public calculateEMACrossover(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): { fastEMA: number | null; slowEMA: number | null } {\r\n    const prices = marketData.map(data => data.close);\r\n    \r\n    return {\r\n      fastEMA: this.calculateEMA(prices, fastPeriod),\r\n      slowEMA: this.calculateEMA(prices, slowPeriod)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Detect moving average crossover signals\r\n   * @param marketData Array of market data (minimum 2 periods for crossover detection)\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns MovingAverageSignal with crossover information\r\n   */\r\n  public detectCrossover(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): MovingAverageSignal | null {\r\n    if (marketData.length < Math.max(fastPeriod, slowPeriod) + 1) {\r\n      return null;\r\n    }\r\n\r\n    // Calculate current EMAs\r\n    const currentData = marketData.slice(0, -1);\r\n    const previousData = marketData.slice(0, -2);\r\n\r\n    const current = this.calculateEMACrossover(currentData, fastPeriod, slowPeriod);\r\n    const previous = this.calculateEMACrossover(previousData, fastPeriod, slowPeriod);\r\n\r\n    if (!current.fastEMA || !current.slowEMA || !previous.fastEMA || !previous.slowEMA) {\r\n      return null;\r\n    }\r\n\r\n    // Determine crossover type\r\n    let crossoverType: 'GOLDEN_CROSS' | 'DEATH_CROSS' | 'NONE' = 'NONE';\r\n    let strength = 0;\r\n\r\n    // Golden Cross: Fast EMA crosses above Slow EMA (bullish)\r\n    if (previous.fastEMA <= previous.slowEMA && current.fastEMA > current.slowEMA) {\r\n      crossoverType = 'GOLDEN_CROSS';\r\n      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bullish');\r\n    }\r\n    // Death Cross: Fast EMA crosses below Slow EMA (bearish)\r\n    else if (previous.fastEMA >= previous.slowEMA && current.fastEMA < current.slowEMA) {\r\n      crossoverType = 'DEATH_CROSS';\r\n      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bearish');\r\n    }\r\n\r\n    // Check volume confirmation\r\n    const volumeConfirmed = this.isVolumeConfirmed(marketData);\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n\r\n    return {\r\n      name: 'EMA',\r\n      value: current.fastEMA,\r\n      timestamp: latestData.timestamp,\r\n      period: fastPeriod,\r\n      parameters: {\r\n        fastPeriod,\r\n        slowPeriod,\r\n        slowEMA: current.slowEMA\r\n      },\r\n      crossover: {\r\n        type: crossoverType,\r\n        strength,\r\n        volumeConfirmed\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate crossover strength based on EMA separation\r\n   * @param fastEMA Fast EMA value\r\n   * @param slowEMA Slow EMA value\r\n   * @param direction Crossover direction\r\n   * @returns Strength score (0-100)\r\n   */\r\n  private calculateCrossoverStrength(\r\n    fastEMA: number,\r\n    slowEMA: number,\r\n    direction: 'bullish' | 'bearish'\r\n  ): number {\r\n    const separation = Math.abs(fastEMA - slowEMA);\r\n    const averagePrice = (fastEMA + slowEMA) / 2;\r\n    const separationPercentage = (separation / averagePrice) * 100;\r\n\r\n    // Normalize to 0-100 scale (higher separation = stronger signal)\r\n    // Typical separation ranges from 0.1% to 5% for most assets\r\n    const strength = Math.min(separationPercentage * 20, 100);\r\n    \r\n    return Math.round(strength);\r\n  }\r\n\r\n  /**\r\n   * Check if current volume confirms the crossover signal\r\n   * @param marketData Array of market data\r\n   * @returns True if volume is above average threshold\r\n   */\r\n  private isVolumeConfirmed(marketData: MarketData[]): boolean {\r\n    if (marketData.length < 20) {\r\n      return false; // Need at least 20 periods for volume analysis\r\n    }\r\n\r\n    const currentVolume = marketData[marketData.length - 1].volume;\r\n    const averageVolume = marketData.slice(-20)\r\n      .reduce((sum, data) => sum + data.volume, 0) / 20;\r\n\r\n    return currentVolume >= (averageVolume * this.volumeConfirmationThreshold);\r\n  }\r\n\r\n  /**\r\n   * Generate trading signal based on moving average crossover\r\n   * @param marketData Array of market data\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns TradingSignal or null if no signal\r\n   */\r\n  public generateSignal(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): TradingSignal | null {\r\n    const crossover = this.detectCrossover(marketData, fastPeriod, slowPeriod);\r\n    \r\n    if (!crossover || !crossover.crossover || crossover.crossover.type === 'NONE') {\r\n      return null;\r\n    }\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n    const signalType = crossover.crossover.type === 'GOLDEN_CROSS' ? 'BUY' : 'SELL';\r\n    \r\n    // Calculate confidence based on strength and volume confirmation\r\n    let confidence = crossover.crossover.strength;\r\n    if (crossover.crossover.volumeConfirmed) {\r\n      confidence = Math.min(confidence + 20, 100); // Boost confidence with volume\r\n    }\r\n\r\n    // Calculate risk-reward ratio (simplified for MA strategy)\r\n    const riskReward = this.calculateRiskReward(marketData, signalType);\r\n\r\n    return {\r\n      id: `ma_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      symbol: latestData.symbol,\r\n      type: signalType,\r\n      strength: crossover.crossover.strength,\r\n      confidence,\r\n      indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],\r\n      reasoning: this.generateReasoning(crossover, fastPeriod, slowPeriod),\r\n      riskReward,\r\n      timestamp: latestData.timestamp,\r\n      metadata: {\r\n        fastEMA: crossover.value,\r\n        slowEMA: crossover.parameters.slowEMA,\r\n        volumeConfirmed: crossover.crossover.volumeConfirmed,\r\n        crossoverType: crossover.crossover.type\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate risk-reward ratio for MA strategy\r\n   * @param marketData Array of market data\r\n   * @param signalType Signal type (BUY/SELL)\r\n   * @returns Risk-reward ratio\r\n   */\r\n  private calculateRiskReward(marketData: MarketData[], signalType: 'BUY' | 'SELL'): number {\r\n    const currentPrice = marketData[marketData.length - 1].close;\r\n    const recentHigh = Math.max(...marketData.slice(-20).map(d => d.high));\r\n    const recentLow = Math.min(...marketData.slice(-20).map(d => d.low));\r\n\r\n    if (signalType === 'BUY') {\r\n      const target = recentHigh;\r\n      const stopLoss = recentLow;\r\n      const reward = target - currentPrice;\r\n      const risk = currentPrice - stopLoss;\r\n      return risk > 0 ? reward / risk : 1.0;\r\n    } else {\r\n      const target = recentLow;\r\n      const stopLoss = recentHigh;\r\n      const reward = currentPrice - target;\r\n      const risk = stopLoss - currentPrice;\r\n      return risk > 0 ? reward / risk : 1.0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate human-readable reasoning for the signal\r\n   * @param crossover MovingAverageSignal data\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns Reasoning string\r\n   */\r\n  private generateReasoning(\r\n    crossover: MovingAverageSignal,\r\n    fastPeriod: number,\r\n    slowPeriod: number\r\n  ): string {\r\n    const { type, strength, volumeConfirmed } = crossover.crossover!;\r\n    const volumeText = volumeConfirmed ? ' with strong volume confirmation' : ' with weak volume';\r\n    \r\n    if (type === 'GOLDEN_CROSS') {\r\n      return `Golden Cross detected: ${fastPeriod}-period EMA crossed above ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bullish momentum.`;\r\n    } else {\r\n      return `Death Cross detected: ${fastPeriod}-period EMA crossed below ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bearish momentum.`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evaluate signal confidence based on multiple factors\r\n   * @param marketData Array of market data\r\n   * @param signal Generated trading signal\r\n   * @returns SignalConfidence object\r\n   */\r\n  public evaluateSignalConfidence(marketData: MarketData[], signal: TradingSignal): SignalConfidence {\r\n    const technical = signal.strength;\r\n    const volume = signal.metadata?.volumeConfirmed ? 80 : 40;\r\n    \r\n    // Calculate momentum based on recent price action\r\n    const recentPrices = marketData.slice(-5).map(d => d.close);\r\n    const momentum = this.calculateMomentumScore(recentPrices, signal.type);\r\n    \r\n    const overall = Math.round((technical * 0.4 + volume * 0.3 + momentum * 0.3));\r\n    \r\n    const factors = [\r\n      `EMA crossover strength: ${technical}/100`,\r\n      `Volume confirmation: ${volume}/100`,\r\n      `Price momentum: ${momentum}/100`\r\n    ];\r\n\r\n    return {\r\n      overall,\r\n      technical,\r\n      volume,\r\n      momentum,\r\n      factors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate momentum score based on recent price action\r\n   * @param prices Recent price array\r\n   * @param signalType Signal direction\r\n   * @returns Momentum score (0-100)\r\n   */\r\n  private calculateMomentumScore(prices: number[], signalType: 'BUY' | 'SELL'): number {\r\n    if (prices.length < 3) return 50;\r\n\r\n    const priceChange = (prices[prices.length - 1] - prices[0]) / prices[0];\r\n    const expectedDirection = signalType === 'BUY' ? 1 : -1;\r\n    const alignment = priceChange * expectedDirection;\r\n\r\n    // Convert to 0-100 scale\r\n    return Math.max(0, Math.min(100, 50 + (alignment * 1000)));\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4e2df0966d321f8078c2b1aafbba6fde99ce5041"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8jz5m8s9d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8jz5m8s9d();
cov_8jz5m8s9d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_8jz5m8s9d().s[1]++;
exports.MovingAverageStrategy = void 0;
class MovingAverageStrategy {
  defaultFastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().s[2]++, 20);
  defaultSlowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().s[3]++, 50);
  volumeConfirmationThreshold =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().s[4]++, 1.5); // 50% above average volume
  /**
   * Calculate Simple Moving Average (SMA)
   * @param prices Array of price values
   * @param period Number of periods for calculation
   * @returns SMA value or null if insufficient data
   */
  calculateSMA(prices, period) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[0]++;
    cov_8jz5m8s9d().s[5]++;
    if (prices.length < period) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[0][0]++;
      cov_8jz5m8s9d().s[6]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[0][1]++;
    }
    const sum =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[7]++, prices.slice(-period).reduce((acc, price) => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[1]++;
      cov_8jz5m8s9d().s[8]++;
      return acc + price;
    }, 0));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[9]++;
    return sum / period;
  }
  /**
   * Calculate Exponential Moving Average (EMA)
   * @param prices Array of price values
   * @param period Number of periods for calculation
   * @returns EMA value or null if insufficient data
   */
  calculateEMA(prices, period) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[2]++;
    cov_8jz5m8s9d().s[10]++;
    if (prices.length < period) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[1][0]++;
      cov_8jz5m8s9d().s[11]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[1][1]++;
    }
    const multiplier =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[12]++, 2 / (period + 1));
    let ema =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[13]++, prices[0]);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[14]++;
    for (let i =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[15]++, 1); i < prices.length; i++) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[16]++;
      ema = prices[i] * multiplier + ema * (1 - multiplier);
    }
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[17]++;
    return ema;
  }
  /**
   * Calculate multiple EMAs for crossover analysis
   * @param marketData Array of market data
   * @param fastPeriod Fast EMA period (default: 20)
   * @param slowPeriod Slow EMA period (default: 50)
   * @returns Object containing fast and slow EMA values
   */
  calculateEMACrossover(marketData, fastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[2][0]++, this.defaultFastPeriod), slowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[3][0]++, this.defaultSlowPeriod)) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[3]++;
    const prices =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[18]++, marketData.map(data => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[4]++;
      cov_8jz5m8s9d().s[19]++;
      return data.close;
    }));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[20]++;
    return {
      fastEMA: this.calculateEMA(prices, fastPeriod),
      slowEMA: this.calculateEMA(prices, slowPeriod)
    };
  }
  /**
   * Detect moving average crossover signals
   * @param marketData Array of market data (minimum 2 periods for crossover detection)
   * @param fastPeriod Fast EMA period
   * @param slowPeriod Slow EMA period
   * @returns MovingAverageSignal with crossover information
   */
  detectCrossover(marketData, fastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[4][0]++, this.defaultFastPeriod), slowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[5][0]++, this.defaultSlowPeriod)) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[5]++;
    cov_8jz5m8s9d().s[21]++;
    if (marketData.length < Math.max(fastPeriod, slowPeriod) + 1) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[6][0]++;
      cov_8jz5m8s9d().s[22]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[6][1]++;
    }
    // Calculate current EMAs
    const currentData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[23]++, marketData.slice(0, -1));
    const previousData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[24]++, marketData.slice(0, -2));
    const current =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[25]++, this.calculateEMACrossover(currentData, fastPeriod, slowPeriod));
    const previous =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[26]++, this.calculateEMACrossover(previousData, fastPeriod, slowPeriod));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[8][0]++, !current.fastEMA) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[8][1]++, !current.slowEMA) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[8][2]++, !previous.fastEMA) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[8][3]++, !previous.slowEMA)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[7][0]++;
      cov_8jz5m8s9d().s[28]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[7][1]++;
    }
    // Determine crossover type
    let crossoverType =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[29]++, 'NONE');
    let strength =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[30]++, 0);
    // Golden Cross: Fast EMA crosses above Slow EMA (bullish)
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[10][0]++, previous.fastEMA <= previous.slowEMA) &&
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[10][1]++, current.fastEMA > current.slowEMA)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[9][0]++;
      cov_8jz5m8s9d().s[32]++;
      crossoverType = 'GOLDEN_CROSS';
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[33]++;
      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bullish');
    }
    // Death Cross: Fast EMA crosses below Slow EMA (bearish)
    else {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[9][1]++;
      cov_8jz5m8s9d().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[12][0]++, previous.fastEMA >= previous.slowEMA) &&
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[12][1]++, current.fastEMA < current.slowEMA)) {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[11][0]++;
        cov_8jz5m8s9d().s[35]++;
        crossoverType = 'DEATH_CROSS';
        /* istanbul ignore next */
        cov_8jz5m8s9d().s[36]++;
        strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bearish');
      } else
      /* istanbul ignore next */
      {
        cov_8jz5m8s9d().b[11][1]++;
      }
    }
    // Check volume confirmation
    const volumeConfirmed =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[37]++, this.isVolumeConfirmed(marketData));
    const latestData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[38]++, marketData[marketData.length - 1]);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[39]++;
    return {
      name: 'EMA',
      value: current.fastEMA,
      timestamp: latestData.timestamp,
      period: fastPeriod,
      parameters: {
        fastPeriod,
        slowPeriod,
        slowEMA: current.slowEMA
      },
      crossover: {
        type: crossoverType,
        strength,
        volumeConfirmed
      }
    };
  }
  /**
   * Calculate crossover strength based on EMA separation
   * @param fastEMA Fast EMA value
   * @param slowEMA Slow EMA value
   * @param direction Crossover direction
   * @returns Strength score (0-100)
   */
  calculateCrossoverStrength(fastEMA, slowEMA, direction) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[6]++;
    const separation =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[40]++, Math.abs(fastEMA - slowEMA));
    const averagePrice =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[41]++, (fastEMA + slowEMA) / 2);
    const separationPercentage =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[42]++, separation / averagePrice * 100);
    // Normalize to 0-100 scale (higher separation = stronger signal)
    // Typical separation ranges from 0.1% to 5% for most assets
    const strength =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[43]++, Math.min(separationPercentage * 20, 100));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[44]++;
    return Math.round(strength);
  }
  /**
   * Check if current volume confirms the crossover signal
   * @param marketData Array of market data
   * @returns True if volume is above average threshold
   */
  isVolumeConfirmed(marketData) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[7]++;
    cov_8jz5m8s9d().s[45]++;
    if (marketData.length < 20) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[13][0]++;
      cov_8jz5m8s9d().s[46]++;
      return false; // Need at least 20 periods for volume analysis
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[13][1]++;
    }
    const currentVolume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[47]++, marketData[marketData.length - 1].volume);
    const averageVolume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[48]++, marketData.slice(-20).reduce((sum, data) => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[8]++;
      cov_8jz5m8s9d().s[49]++;
      return sum + data.volume;
    }, 0) / 20);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[50]++;
    return currentVolume >= averageVolume * this.volumeConfirmationThreshold;
  }
  /**
   * Generate trading signal based on moving average crossover
   * @param marketData Array of market data
   * @param fastPeriod Fast EMA period
   * @param slowPeriod Slow EMA period
   * @returns TradingSignal or null if no signal
   */
  generateSignal(marketData, fastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[14][0]++, this.defaultFastPeriod), slowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[15][0]++, this.defaultSlowPeriod)) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[9]++;
    const crossover =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[51]++, this.detectCrossover(marketData, fastPeriod, slowPeriod));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[17][0]++, !crossover) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[17][1]++, !crossover.crossover) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[17][2]++, crossover.crossover.type === 'NONE')) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[16][0]++;
      cov_8jz5m8s9d().s[53]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[16][1]++;
    }
    const latestData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[54]++, marketData[marketData.length - 1]);
    const signalType =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[55]++, crossover.crossover.type === 'GOLDEN_CROSS' ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[18][0]++, 'BUY') :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[18][1]++, 'SELL'));
    // Calculate confidence based on strength and volume confirmation
    let confidence =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[56]++, crossover.crossover.strength);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[57]++;
    if (crossover.crossover.volumeConfirmed) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[19][0]++;
      cov_8jz5m8s9d().s[58]++;
      confidence = Math.min(confidence + 20, 100); // Boost confidence with volume
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[19][1]++;
    }
    // Calculate risk-reward ratio (simplified for MA strategy)
    const riskReward =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[59]++, this.calculateRiskReward(marketData, signalType));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[60]++;
    return {
      id: `ma_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      symbol: latestData.symbol,
      type: signalType,
      strength: crossover.crossover.strength,
      confidence,
      indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],
      reasoning: this.generateReasoning(crossover, fastPeriod, slowPeriod),
      riskReward,
      timestamp: latestData.timestamp,
      metadata: {
        fastEMA: crossover.value,
        slowEMA: crossover.parameters.slowEMA,
        volumeConfirmed: crossover.crossover.volumeConfirmed,
        crossoverType: crossover.crossover.type
      }
    };
  }
  /**
   * Calculate risk-reward ratio for MA strategy
   * @param marketData Array of market data
   * @param signalType Signal type (BUY/SELL)
   * @returns Risk-reward ratio
   */
  calculateRiskReward(marketData, signalType) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[10]++;
    const currentPrice =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[61]++, marketData[marketData.length - 1].close);
    const recentHigh =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[62]++, Math.max(...marketData.slice(-20).map(d => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[11]++;
      cov_8jz5m8s9d().s[63]++;
      return d.high;
    })));
    const recentLow =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[64]++, Math.min(...marketData.slice(-20).map(d => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[12]++;
      cov_8jz5m8s9d().s[65]++;
      return d.low;
    })));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[66]++;
    if (signalType === 'BUY') {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[20][0]++;
      const target =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[67]++, recentHigh);
      const stopLoss =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[68]++, recentLow);
      const reward =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[69]++, target - currentPrice);
      const risk =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[70]++, currentPrice - stopLoss);
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[71]++;
      return risk > 0 ?
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[21][0]++, reward / risk) :
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[21][1]++, 1.0);
    } else {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[20][1]++;
      const target =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[72]++, recentLow);
      const stopLoss =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[73]++, recentHigh);
      const reward =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[74]++, currentPrice - target);
      const risk =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[75]++, stopLoss - currentPrice);
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[76]++;
      return risk > 0 ?
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[22][0]++, reward / risk) :
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[22][1]++, 1.0);
    }
  }
  /**
   * Generate human-readable reasoning for the signal
   * @param crossover MovingAverageSignal data
   * @param fastPeriod Fast EMA period
   * @param slowPeriod Slow EMA period
   * @returns Reasoning string
   */
  generateReasoning(crossover, fastPeriod, slowPeriod) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[13]++;
    const {
      type,
      strength,
      volumeConfirmed
    } =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[77]++, crossover.crossover);
    const volumeText =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[78]++, volumeConfirmed ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[23][0]++, ' with strong volume confirmation') :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[23][1]++, ' with weak volume'));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[79]++;
    if (type === 'GOLDEN_CROSS') {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[24][0]++;
      cov_8jz5m8s9d().s[80]++;
      return `Golden Cross detected: ${fastPeriod}-period EMA crossed above ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bullish momentum.`;
    } else {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[24][1]++;
      cov_8jz5m8s9d().s[81]++;
      return `Death Cross detected: ${fastPeriod}-period EMA crossed below ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bearish momentum.`;
    }
  }
  /**
   * Evaluate signal confidence based on multiple factors
   * @param marketData Array of market data
   * @param signal Generated trading signal
   * @returns SignalConfidence object
   */
  evaluateSignalConfidence(marketData, signal) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[14]++;
    const technical =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[82]++, signal.strength);
    const volume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[83]++, signal.metadata?.volumeConfirmed ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[25][0]++, 80) :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[25][1]++, 40));
    // Calculate momentum based on recent price action
    const recentPrices =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[84]++, marketData.slice(-5).map(d => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[15]++;
      cov_8jz5m8s9d().s[85]++;
      return d.close;
    }));
    const momentum =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[86]++, this.calculateMomentumScore(recentPrices, signal.type));
    const overall =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[87]++, Math.round(technical * 0.4 + volume * 0.3 + momentum * 0.3));
    const factors =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[88]++, [`EMA crossover strength: ${technical}/100`, `Volume confirmation: ${volume}/100`, `Price momentum: ${momentum}/100`]);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[89]++;
    return {
      overall,
      technical,
      volume,
      momentum,
      factors
    };
  }
  /**
   * Calculate momentum score based on recent price action
   * @param prices Recent price array
   * @param signalType Signal direction
   * @returns Momentum score (0-100)
   */
  calculateMomentumScore(prices, signalType) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[16]++;
    cov_8jz5m8s9d().s[90]++;
    if (prices.length < 3) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[26][0]++;
      cov_8jz5m8s9d().s[91]++;
      return 50;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[26][1]++;
    }
    const priceChange =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[92]++, (prices[prices.length - 1] - prices[0]) / prices[0]);
    const expectedDirection =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[93]++, signalType === 'BUY' ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[27][0]++, 1) :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[27][1]++, -1));
    const alignment =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[94]++, priceChange * expectedDirection);
    // Convert to 0-100 scale
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[95]++;
    return Math.max(0, Math.min(100, 50 + alignment * 1000));
  }
}
/* istanbul ignore next */
cov_8jz5m8s9d().s[96]++;
exports.MovingAverageStrategy = MovingAverageStrategy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,