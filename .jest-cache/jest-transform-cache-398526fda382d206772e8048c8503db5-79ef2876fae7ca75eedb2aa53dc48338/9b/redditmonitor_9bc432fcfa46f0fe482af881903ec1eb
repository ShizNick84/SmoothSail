ce84b0aa77c6c3e46350bb9a4427b8fe
"use strict";

/**
 * Reddit Sentiment Monitor
 * Implements Reddit API integration for crypto subreddits sentiment analysis
 */
/* istanbul ignore next */
function cov_26t3yo6ic6() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\reddit-monitor.ts";
  var hash = "ed6cac5326d6268e34c0e13f3219dfd7cf42c735";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\reddit-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "4": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 55
        }
      },
      "5": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "6": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 53
        }
      },
      "7": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "8": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 24
        }
      },
      "9": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "11": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 51
        }
      },
      "12": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "13": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 69
        }
      },
      "14": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "15": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "16": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 33
        }
      },
      "17": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 46
        }
      },
      "18": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 69,
          column: 40
        }
      },
      "19": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "20": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 54
        }
      },
      "21": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 84
        }
      },
      "22": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "23": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 65
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 19
        }
      },
      "25": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 65
        }
      },
      "26": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 34
        }
      },
      "27": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "28": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "29": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 48
        }
      },
      "30": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "31": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 69
        }
      },
      "32": {
        start: {
          line: 93,
          column: 51
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "33": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 98,
          column: 68
        }
      },
      "34": {
        start: {
          line: 100,
          column: 32
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "35": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "36": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 81
        }
      },
      "37": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "38": {
        start: {
          line: 106,
          column: 35
        },
        end: {
          line: 106,
          column: 80
        }
      },
      "39": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "40": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 103
        }
      },
      "41": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 34
        }
      },
      "42": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 76
        }
      },
      "43": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "44": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 24
        }
      },
      "45": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "46": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "47": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 142,
          column: 17
        }
      },
      "48": {
        start: {
          line: 125,
          column: 37
        },
        end: {
          line: 125,
          column: 100
        }
      },
      "49": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 138,
          column: 21
        }
      },
      "50": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 137,
          column: 27
        }
      },
      "51": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 92
        }
      },
      "52": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 67
        }
      },
      "53": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 25
        }
      },
      "54": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 67
        }
      },
      "55": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 22
        }
      },
      "56": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 156,
          column: 24
        }
      },
      "57": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "58": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "59": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 177,
          column: 17
        }
      },
      "60": {
        start: {
          line: 160,
          column: 37
        },
        end: {
          line: 160,
          column: 100
        }
      },
      "61": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 173,
          column: 21
        }
      },
      "62": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 172,
          column: 27
        }
      },
      "63": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 92
        }
      },
      "64": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 67
        }
      },
      "65": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 25
        }
      },
      "66": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 67
        }
      },
      "67": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 22
        }
      },
      "68": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 191,
          column: 24
        }
      },
      "69": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "70": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "71": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 215,
          column: 17
        }
      },
      "72": {
        start: {
          line: 195,
          column: 37
        },
        end: {
          line: 198,
          column: 22
        }
      },
      "73": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 211,
          column: 21
        }
      },
      "74": {
        start: {
          line: 200,
          column: 24
        },
        end: {
          line: 210,
          column: 27
        }
      },
      "75": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 92
        }
      },
      "76": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 67
        }
      },
      "77": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 25
        }
      },
      "78": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 67
        }
      },
      "79": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 22
        }
      },
      "80": {
        start: {
          line: 229,
          column: 21
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "81": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "82": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 233,
          column: 13
        }
      },
      "83": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 29
        }
      },
      "84": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 30
        }
      },
      "85": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 24
        }
      },
      "86": {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 242,
          column: 26
        }
      },
      "87": {
        start: {
          line: 243,
          column: 26
        },
        end: {
          line: 243,
          column: 27
        }
      },
      "88": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 244,
          column: 28
        }
      },
      "89": {
        start: {
          line: 245,
          column: 28
        },
        end: {
          line: 245,
          column: 30
        }
      },
      "90": {
        start: {
          line: 246,
          column: 32
        },
        end: {
          line: 246,
          column: 34
        }
      },
      "91": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "92": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "93": {
        start: {
          line: 250,
          column: 33
        },
        end: {
          line: 250,
          column: 64
        }
      },
      "94": {
        start: {
          line: 251,
          column: 38
        },
        end: {
          line: 251,
          column: 70
        }
      },
      "95": {
        start: {
          line: 252,
          column: 32
        },
        end: {
          line: 252,
          column: 51
        }
      },
      "96": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 73
        }
      },
      "97": {
        start: {
          line: 256,
          column: 36
        },
        end: {
          line: 256,
          column: 86
        }
      },
      "98": {
        start: {
          line: 257,
          column: 41
        },
        end: {
          line: 257,
          column: 85
        }
      },
      "99": {
        start: {
          line: 258,
          column: 38
        },
        end: {
          line: 258,
          column: 53
        }
      },
      "100": {
        start: {
          line: 259,
          column: 31
        },
        end: {
          line: 259,
          column: 63
        }
      },
      "101": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 49
        }
      },
      "102": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 38
        }
      },
      "103": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "104": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 264,
          column: 57
        }
      },
      "105": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 64
        }
      },
      "106": {
        start: {
          line: 268,
          column: 31
        },
        end: {
          line: 268,
          column: 69
        }
      },
      "107": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 271,
          column: 19
        }
      },
      "108": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 71
        }
      },
      "109": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 72
        }
      },
      "110": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 76
        }
      },
      "111": {
        start: {
          line: 280,
          column: 29
        },
        end: {
          line: 283,
          column: 36
        }
      },
      "112": {
        start: {
          line: 281,
          column: 36
        },
        end: {
          line: 281,
          column: 41
        }
      },
      "113": {
        start: {
          line: 283,
          column: 30
        },
        end: {
          line: 283,
          column: 35
        }
      },
      "114": {
        start: {
          line: 284,
          column: 27
        },
        end: {
          line: 284,
          column: 73
        }
      },
      "115": {
        start: {
          line: 285,
          column: 27
        },
        end: {
          line: 285,
          column: 75
        }
      },
      "116": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 299,
          column: 10
        }
      },
      "117": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "118": {
        start: {
          line: 307,
          column: 31
        },
        end: {
          line: 307,
          column: 70
        }
      },
      "119": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 67
        }
      },
      "120": {
        start: {
          line: 309,
          column: 29
        },
        end: {
          line: 309,
          column: 61
        }
      },
      "121": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "122": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 315,
          column: 17
        }
      },
      "123": {
        start: {
          line: 312,
          column: 45
        },
        end: {
          line: 312,
          column: 81
        }
      },
      "124": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 84
        }
      },
      "125": {
        start: {
          line: 326,
          column: 31
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "126": {
        start: {
          line: 332,
          column: 26
        },
        end: {
          line: 332,
          column: 44
        }
      },
      "127": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 77
        }
      },
      "128": {
        start: {
          line: 333,
          column: 48
        },
        end: {
          line: 333,
          column: 75
        }
      },
      "129": {
        start: {
          line: 339,
          column: 23
        },
        end: {
          line: 339,
          column: 25
        }
      },
      "130": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "131": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 350,
          column: 15
        }
      },
      "132": {
        start: {
          line: 352,
          column: 13
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "133": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 361,
          column: 15
        }
      },
      "134": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "135": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "136": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 378,
          column: 9
        }
      },
      "137": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 73
        }
      },
      "138": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 391,
          column: 10
        }
      },
      "139": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 53
        }
      },
      "140": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 42
        }
      },
      "141": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "142": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 50
        }
      },
      "143": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 78
        }
      },
      "144": {
        start: {
          line: 418,
          column: 22
        },
        end: {
          line: 418,
          column: 62
        }
      },
      "145": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "146": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 51
        }
      },
      "147": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 82
        }
      },
      "148": {
        start: {
          line: 428,
          column: 26
        },
        end: {
          line: 428,
          column: 28
        }
      },
      "149": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "150": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 447,
          column: 13
        }
      },
      "151": {
        start: {
          line: 431,
          column: 30
        },
        end: {
          line: 431,
          column: 93
        }
      },
      "152": {
        start: {
          line: 432,
          column: 36
        },
        end: {
          line: 442,
          column: 19
        }
      },
      "153": {
        start: {
          line: 432,
          column: 55
        },
        end: {
          line: 442,
          column: 17
        }
      },
      "154": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 443,
          column: 85
        }
      },
      "155": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 446,
          column: 87
        }
      },
      "156": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 25
        }
      },
      "157": {
        start: {
          line: 452,
          column: 0
        },
        end: {
          line: 452,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 6,
            column: 57
          }
        },
        loc: {
          start: {
            line: 6,
            column: 71
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 62,
            column: 46
          },
          end: {
            line: 62,
            column: 47
          }
        },
        loc: {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 62
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 89
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 120
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 155
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 27
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 190
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 228
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 230,
            column: 28
          },
          end: {
            line: 230,
            column: 29
          }
        },
        loc: {
          start: {
            line: 230,
            column: 36
          },
          end: {
            line: 236,
            column: 9
          }
        },
        line: 230
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 39
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 241
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 269,
            column: 31
          },
          end: {
            line: 269,
            column: 32
          }
        },
        loc: {
          start: {
            line: 269,
            column: 40
          },
          end: {
            line: 271,
            column: 17
          }
        },
        line: 269
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 281,
            column: 18
          },
          end: {
            line: 281,
            column: 19
          }
        },
        loc: {
          start: {
            line: 281,
            column: 36
          },
          end: {
            line: 281,
            column: 41
          }
        },
        line: 281
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 283,
            column: 17
          },
          end: {
            line: 283,
            column: 18
          }
        },
        loc: {
          start: {
            line: 283,
            column: 30
          },
          end: {
            line: 283,
            column: 35
          }
        },
        line: 283
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 49
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 304
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 32
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 325
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 333,
            column: 37
          },
          end: {
            line: 333,
            column: 38
          }
        },
        loc: {
          start: {
            line: 333,
            column: 48
          },
          end: {
            line: 333,
            column: 75
          }
        },
        line: 333
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 46
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 338
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 383,
            column: 5
          }
        },
        loc: {
          start: {
            line: 383,
            column: 32
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 383
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 32
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 396
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 29
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 402
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        loc: {
          start: {
            line: 408,
            column: 28
          },
          end: {
            line: 413,
            column: 5
          }
        },
        line: 408
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 31
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 417
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 43
          },
          end: {
            line: 450,
            column: 5
          }
        },
        line: 427
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 432,
            column: 46
          },
          end: {
            line: 432,
            column: 47
          }
        },
        loc: {
          start: {
            line: 432,
            column: 55
          },
          end: {
            line: 442,
            column: 17
          }
        },
        line: 432
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 8,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 27
          }
        }, {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 51
          }
        }, {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 40
          }
        }, {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 7,
            column: 61
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 15
          }
        }, {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 33
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 52,
            column: 44
          },
          end: {
            line: 52,
            column: 46
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 130,
            column: 37
          },
          end: {
            line: 130,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 37
          },
          end: {
            line: 130,
            column: 50
          }
        }, {
          start: {
            line: 130,
            column: 54
          },
          end: {
            line: 130,
            column: 56
          }
        }],
        line: 130
      },
      "9": {
        loc: {
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 50
          }
        }, {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 56
          }
        }],
        line: 165
      },
      "10": {
        loc: {
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 203,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 203,
            column: 50
          }
        }, {
          start: {
            line: 203,
            column: 54
          },
          end: {
            line: 203,
            column: 56
          }
        }],
        line: 203
      },
      "11": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 233,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 233,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "12": {
        loc: {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "13": {
        loc: {
          start: {
            line: 270,
            column: 42
          },
          end: {
            line: 270,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 42
          },
          end: {
            line: 270,
            column: 60
          }
        }, {
          start: {
            line: 270,
            column: 64
          },
          end: {
            line: 270,
            column: 65
          }
        }],
        line: 270
      },
      "14": {
        loc: {
          start: {
            line: 284,
            column: 27
          },
          end: {
            line: 284,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 45
          },
          end: {
            line: 284,
            column: 69
          }
        }, {
          start: {
            line: 284,
            column: 72
          },
          end: {
            line: 284,
            column: 73
          }
        }],
        line: 284
      },
      "15": {
        loc: {
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 315,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 315,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "16": {
        loc: {
          start: {
            line: 311,
            column: 20
          },
          end: {
            line: 311,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 20
          },
          end: {
            line: 311,
            column: 32
          }
        }, {
          start: {
            line: 311,
            column: 36
          },
          end: {
            line: 311,
            column: 64
          }
        }, {
          start: {
            line: 311,
            column: 68
          },
          end: {
            line: 311,
            column: 96
          }
        }],
        line: 311
      },
      "17": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: 352,
            column: 13
          },
          end: {
            line: 362,
            column: 9
          }
        }],
        line: 341
      },
      "18": {
        loc: {
          start: {
            line: 352,
            column: 13
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 13
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "19": {
        loc: {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "20": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "21": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 422,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 422,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "22": {
        loc: {
          start: {
            line: 435,
            column: 29
          },
          end: {
            line: 435,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 29
          },
          end: {
            line: 435,
            column: 42
          }
        }, {
          start: {
            line: 435,
            column: 46
          },
          end: {
            line: 435,
            column: 48
          }
        }],
        line: 435
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\reddit-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\reddit-monitor.ts"],
      sourcesContent: ["/**\r\n * Reddit Sentiment Monitor\r\n * Implements Reddit API integration for crypto subreddits sentiment analysis\r\n */\r\n\r\nimport Snoowrap from 'snoowrap';\r\nimport Sentiment from 'sentiment';\r\nimport { \r\n  SentimentScore, \r\n  RedditPost, \r\n  RedditConfig, \r\n  SentimentAlert \r\n} from './types';\r\nimport { logger } from '../../core/logging/logger';\r\n\r\nexport class RedditSentimentMonitor {\r\n  private client: Snoowrap;\r\n  private sentiment: Sentiment;\r\n  private logger = logger;\r\n  private isMonitoring: boolean = false;\r\n  private monitoringInterval?: NodeJS.Timeout;\r\n  \r\n  // Crypto-related subreddits to monitor\r\n  private readonly cryptoSubreddits = [\r\n    'cryptocurrency',\r\n    'Bitcoin',\r\n    'ethereum',\r\n    'CryptoCurrency',\r\n    'btc',\r\n    'ethtrader',\r\n    'CryptoMarkets',\r\n    'altcoin',\r\n    'DeFi',\r\n    'NFT',\r\n    'CryptoMoonShots',\r\n    'SatoshiStreetBets',\r\n    'CryptoCurrencyTrading',\r\n    'BitcoinMarkets',\r\n    'ethfinance'\r\n  ];\r\n\r\n  constructor(config: RedditConfig) {\r\n    this.client = new Snoowrap({\r\n      userAgent: config.userAgent,\r\n      clientId: config.clientId,\r\n      clientSecret: config.clientSecret,\r\n      username: config.username,\r\n      password: config.password\r\n    });\r\n    \r\n    this.sentiment = new Sentiment();\r\n    // Logger is initialized as class property\r\n  }\r\n\r\n  /**\r\n   * Start monitoring Reddit sentiment\r\n   */\r\n  async startMonitoring(intervalMinutes: number = 10): Promise<void> {\r\n    if (this.isMonitoring) {\r\n      this.logger.warn('Reddit monitoring is already running');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Starting Reddit sentiment monitoring');\r\n    this.isMonitoring = true;\r\n\r\n    // Initial analysis\r\n    await this.performSentimentAnalysis();\r\n\r\n    // Set up periodic monitoring\r\n    this.monitoringInterval = setInterval(async () => {\r\n      try {\r\n        await this.performSentimentAnalysis();\r\n      } catch (error) {\r\n        this.logger.error('Error during Reddit sentiment analysis:', error);\r\n      }\r\n    }, intervalMinutes * 60 * 1000);\r\n  }\r\n\r\n  /**\r\n   * Stop monitoring Reddit sentiment\r\n   */\r\n  stopMonitoring(): void {\r\n    if (!this.isMonitoring) {\r\n      this.logger.warn('Reddit monitoring is not running');\r\n      return;\r\n    }\r\n\r\n    this.logger.info('Stopping Reddit sentiment monitoring');\r\n    this.isMonitoring = false;\r\n\r\n    if (this.monitoringInterval) {\r\n      clearInterval(this.monitoringInterval);\r\n      this.monitoringInterval = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform comprehensive Reddit sentiment analysis\r\n   */\r\n  private async performSentimentAnalysis(): Promise<SentimentScore> {\r\n    try {\r\n      this.logger.info('Performing Reddit sentiment analysis');\r\n\r\n      // Gather posts and comments from crypto subreddits\r\n      const [hotPosts, newPosts, topPosts] = await Promise.all([\r\n        this.gatherHotPosts(),\r\n        this.gatherNewPosts(),\r\n        this.gatherTopPosts()\r\n      ]);\r\n\r\n      const allPosts = [...hotPosts, ...newPosts, ...topPosts];\r\n      \r\n      // Remove duplicates\r\n      const uniquePosts = this.removeDuplicatePosts(allPosts);\r\n      \r\n      if (uniquePosts.length === 0) {\r\n        this.logger.warn('No Reddit posts found for sentiment analysis');\r\n        return this.createEmptySentimentScore();\r\n      }\r\n\r\n      // Analyze sentiment\r\n      const sentimentScore = await this.analyzePostsSentiment(uniquePosts);\r\n      \r\n      // Detect trends and alerts\r\n      await this.detectSentimentTrends(sentimentScore);\r\n      \r\n      this.logger.info(`Reddit sentiment analysis complete: ${sentimentScore.score.toFixed(2)}`);\r\n      return sentimentScore;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error in Reddit sentiment analysis:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gather hot posts from crypto subreddits\r\n   */\r\n  private async gatherHotPosts(): Promise<RedditPost[]> {\r\n    const posts: RedditPost[] = [];\r\n    \r\n    try {\r\n      for (const subreddit of this.cryptoSubreddits) {\r\n        try {\r\n          const hotPosts = await this.client.getSubreddit(subreddit).getHot({ limit: 25 });\r\n          \r\n          for (const post of hotPosts) {\r\n            posts.push({\r\n              id: post.id,\r\n              title: post.title,\r\n              content: post.selftext || '',\r\n              author: post.author.name,\r\n              subreddit: subreddit,\r\n              upvotes: post.ups,\r\n              downvotes: post.downs,\r\n              comments: post.num_comments,\r\n              timestamp: new Date(post.created_utc * 1000)\r\n            });\r\n          }\r\n        } catch (error) {\r\n          this.logger.warn(`Error getting hot posts from r/${subreddit}:`, error);\r\n        }\r\n      }\r\n\r\n      this.logger.info(`Gathered ${posts.length} hot posts`);\r\n      return posts;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error gathering hot posts:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gather new posts from crypto subreddits\r\n   */\r\n  private async gatherNewPosts(): Promise<RedditPost[]> {\r\n    const posts: RedditPost[] = [];\r\n    \r\n    try {\r\n      for (const subreddit of this.cryptoSubreddits) {\r\n        try {\r\n          const newPosts = await this.client.getSubreddit(subreddit).getNew({ limit: 15 });\r\n          \r\n          for (const post of newPosts) {\r\n            posts.push({\r\n              id: post.id,\r\n              title: post.title,\r\n              content: post.selftext || '',\r\n              author: post.author.name,\r\n              subreddit: subreddit,\r\n              upvotes: post.ups,\r\n              downvotes: post.downs,\r\n              comments: post.num_comments,\r\n              timestamp: new Date(post.created_utc * 1000)\r\n            });\r\n          }\r\n        } catch (error) {\r\n          this.logger.warn(`Error getting new posts from r/${subreddit}:`, error);\r\n        }\r\n      }\r\n\r\n      this.logger.info(`Gathered ${posts.length} new posts`);\r\n      return posts;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error gathering new posts:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gather top posts from crypto subreddits\r\n   */\r\n  private async gatherTopPosts(): Promise<RedditPost[]> {\r\n    const posts: RedditPost[] = [];\r\n    \r\n    try {\r\n      for (const subreddit of this.cryptoSubreddits) {\r\n        try {\r\n          const topPosts = await this.client.getSubreddit(subreddit).getTop({ \r\n            time: 'day', \r\n            limit: 10 \r\n          });\r\n          \r\n          for (const post of topPosts) {\r\n            posts.push({\r\n              id: post.id,\r\n              title: post.title,\r\n              content: post.selftext || '',\r\n              author: post.author.name,\r\n              subreddit: subreddit,\r\n              upvotes: post.ups,\r\n              downvotes: post.downs,\r\n              comments: post.num_comments,\r\n              timestamp: new Date(post.created_utc * 1000)\r\n            });\r\n          }\r\n        } catch (error) {\r\n          this.logger.warn(`Error getting top posts from r/${subreddit}:`, error);\r\n        }\r\n      }\r\n\r\n      this.logger.info(`Gathered ${posts.length} top posts`);\r\n      return posts;\r\n\r\n    } catch (error) {\r\n      this.logger.error('Error gathering top posts:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove duplicate posts based on ID\r\n   */\r\n  private removeDuplicatePosts(posts: RedditPost[]): RedditPost[] {\r\n    const seen = new Set<string>();\r\n    return posts.filter(post => {\r\n      if (seen.has(post.id)) {\r\n        return false;\r\n      }\r\n      seen.add(post.id);\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Analyze sentiment of collected posts and their comments\r\n   */\r\n  private async analyzePostsSentiment(posts: RedditPost[]): Promise<SentimentScore> {\r\n    let totalScore = 0;\r\n    let totalWeight = 0;\r\n    const keyTopics: string[] = [];\r\n    const topicCounts: Record<string, number> = {};\r\n    const subredditScores: Record<string, number[]> = {};\r\n\r\n    for (const post of posts) {\r\n      try {\r\n        // Analyze post title and content\r\n        const postText = `${post.title} ${post.content}`;\r\n        const postSentiment = this.sentiment.analyze(postText);\r\n        let postScore = postSentiment.score;\r\n        \r\n        // Normalize to -100 to 100 scale\r\n        postScore = Math.max(-100, Math.min(100, postScore * 5));\r\n        \r\n        // Calculate weight based on engagement\r\n        const upvoteRatio = post.upvotes / (post.upvotes + post.downvotes + 1);\r\n        const engagementWeight = Math.log10(post.upvotes + post.comments + 1);\r\n        const qualityWeight = upvoteRatio * 2; // Higher weight for well-received posts\r\n        const weight = engagementWeight + qualityWeight;\r\n        \r\n        totalScore += postScore * weight;\r\n        totalWeight += weight;\r\n        \r\n        // Track subreddit performance\r\n        if (!subredditScores[post.subreddit]) {\r\n          subredditScores[post.subreddit] = [];\r\n        }\r\n        subredditScores[post.subreddit].push(postScore);\r\n        \r\n        // Extract topics from title\r\n        const topics = this.extractTopicsFromText(post.title);\r\n        topics.forEach(topic => {\r\n          topicCounts[topic] = (topicCounts[topic] || 0) + 1;\r\n        });\r\n\r\n        // Analyze top comments for additional sentiment\r\n        await this.analyzePostComments(post.id, post.subreddit);\r\n\r\n      } catch (error) {\r\n        this.logger.warn(`Error analyzing post ${post.id}:`, error);\r\n      }\r\n    }\r\n\r\n    // Get top topics\r\n    const sortedTopics = Object.entries(topicCounts)\r\n      .sort(([,a], [,b]) => b - a)\r\n      .slice(0, 10)\r\n      .map(([topic]) => topic);\r\n\r\n    const finalScore = totalWeight > 0 ? totalScore / totalWeight : 0;\r\n    const confidence = Math.min(100, Math.log10(posts.length + 1) * 25);\r\n\r\n    return {\r\n      source: 'reddit',\r\n      score: Math.round(finalScore * 100) / 100,\r\n      confidence: Math.round(confidence),\r\n      volume: posts.length,\r\n      timestamp: new Date(),\r\n      keyTopics: sortedTopics,\r\n      rawData: {\r\n        totalPosts: posts.length,\r\n        totalWeight,\r\n        subredditScores,\r\n        topicCounts\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Analyze comments for additional sentiment data\r\n   */\r\n  private async analyzePostComments(postId: string, subreddit: string): Promise<void> {\r\n    try {\r\n      // Get top comments for the post\r\n      const submission = await this.client.getSubmission(postId);\r\n      await submission.expandReplies({ limit: 5, depth: 1 });\r\n      \r\n      const comments = submission.comments.slice(0, 10); // Analyze top 10 comments\r\n      \r\n      for (const comment of comments) {\r\n        if (comment.body && comment.body !== '[deleted]' && comment.body !== '[removed]') {\r\n          const commentSentiment = this.sentiment.analyze(comment.body);\r\n          // Comment sentiment could be weighted and added to overall analysis\r\n          // For now, we're just collecting the data\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.logger.warn(`Error analyzing comments for post ${postId}:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract topics from text using simple keyword matching\r\n   */\r\n  private extractTopicsFromText(text: string): string[] {\r\n    const cryptoKeywords = [\r\n      'bitcoin', 'btc', 'ethereum', 'eth', 'crypto', 'cryptocurrency',\r\n      'blockchain', 'defi', 'nft', 'altcoin', 'hodl', 'trading',\r\n      'bull', 'bear', 'moon', 'diamond', 'hands', 'satoshi',\r\n      'pump', 'dump', 'dip', 'ath', 'fomo', 'fud'\r\n    ];\r\n    \r\n    const lowerText = text.toLowerCase();\r\n    return cryptoKeywords.filter(keyword => lowerText.includes(keyword));\r\n  }\r\n\r\n  /**\r\n   * Detect sentiment trends and generate alerts\r\n   */\r\n  private async detectSentimentTrends(currentScore: SentimentScore): Promise<void> {\r\n    const alerts: SentimentAlert[] = [];\r\n\r\n    // Extreme sentiment alerts\r\n    if (currentScore.score > 60) {\r\n      alerts.push({\r\n        id: `reddit_extreme_positive_${Date.now()}`,\r\n        type: 'EXTREME_POSITIVE',\r\n        severity: 'HIGH',\r\n        message: `Extremely positive Reddit sentiment detected: ${currentScore.score}`,\r\n        timestamp: new Date(),\r\n        source: 'reddit',\r\n        data: currentScore\r\n      });\r\n    } else if (currentScore.score < -60) {\r\n      alerts.push({\r\n        id: `reddit_extreme_negative_${Date.now()}`,\r\n        type: 'EXTREME_NEGATIVE',\r\n        severity: 'HIGH',\r\n        message: `Extremely negative Reddit sentiment detected: ${currentScore.score}`,\r\n        timestamp: new Date(),\r\n        source: 'reddit',\r\n        data: currentScore\r\n      });\r\n    }\r\n\r\n    // Volume spike alerts\r\n    if (currentScore.volume > 200) {\r\n      alerts.push({\r\n        id: `reddit_volume_spike_${Date.now()}`,\r\n        type: 'VOLUME_SPIKE',\r\n        severity: 'MEDIUM',\r\n        message: `High Reddit activity detected: ${currentScore.volume} posts`,\r\n        timestamp: new Date(),\r\n        source: 'reddit',\r\n        data: currentScore\r\n      });\r\n    }\r\n\r\n    // Log alerts\r\n    for (const alert of alerts) {\r\n      this.logger.warn(`Reddit Sentiment Alert: ${alert.message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create empty sentiment score for error cases\r\n   */\r\n  private createEmptySentimentScore(): SentimentScore {\r\n    return {\r\n      source: 'reddit',\r\n      score: 0,\r\n      confidence: 0,\r\n      volume: 0,\r\n      timestamp: new Date(),\r\n      keyTopics: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get current sentiment score\r\n   */\r\n  async getCurrentSentiment(): Promise<SentimentScore> {\r\n    return await this.performSentimentAnalysis();\r\n  }\r\n\r\n  /**\r\n   * Get monitored subreddits\r\n   */\r\n  getMonitoredSubreddits(): string[] {\r\n    return [...this.cryptoSubreddits];\r\n  }\r\n\r\n  /**\r\n   * Add subreddit to monitoring list\r\n   */\r\n  addSubreddit(subreddit: string): void {\r\n    if (!this.cryptoSubreddits.includes(subreddit)) {\r\n      this.cryptoSubreddits.push(subreddit);\r\n      this.logger.info(`Added subreddit to monitoring: r/${subreddit}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove subreddit from monitoring list\r\n   */\r\n  removeSubreddit(subreddit: string): void {\r\n    const index = this.cryptoSubreddits.indexOf(subreddit);\r\n    if (index !== -1) {\r\n      this.cryptoSubreddits.splice(index, 1);\r\n      this.logger.info(`Removed subreddit from monitoring: r/${subreddit}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get sentiment breakdown by subreddit\r\n   */\r\n  async getSubredditSentimentBreakdown(): Promise<Record<string, SentimentScore>> {\r\n    const breakdown: Record<string, SentimentScore> = {};\r\n    \r\n    for (const subreddit of this.cryptoSubreddits.slice(0, 5)) { // Limit to top 5 for performance\r\n      try {\r\n        const posts = await this.client.getSubreddit(subreddit).getHot({ limit: 20 });\r\n        const redditPosts: RedditPost[] = posts.map(post => ({\r\n          id: post.id,\r\n          title: post.title,\r\n          content: post.selftext || '',\r\n          author: post.author.name,\r\n          subreddit: subreddit,\r\n          upvotes: post.ups,\r\n          downvotes: post.downs,\r\n          comments: post.num_comments,\r\n          timestamp: new Date(post.created_utc * 1000)\r\n        }));\r\n        \r\n        breakdown[subreddit] = await this.analyzePostsSentiment(redditPosts);\r\n      } catch (error) {\r\n        this.logger.warn(`Error getting sentiment for r/${subreddit}:`, error);\r\n      }\r\n    }\r\n    \r\n    return breakdown;\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed6cac5326d6268e34c0e13f3219dfd7cf42c735"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26t3yo6ic6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26t3yo6ic6();
var __importDefault =
/* istanbul ignore next */
(cov_26t3yo6ic6().s[0]++,
/* istanbul ignore next */
(cov_26t3yo6ic6().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_26t3yo6ic6().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_26t3yo6ic6().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_26t3yo6ic6().f[0]++;
  cov_26t3yo6ic6().s[1]++;
  return /* istanbul ignore next */(cov_26t3yo6ic6().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_26t3yo6ic6().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_26t3yo6ic6().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_26t3yo6ic6().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_26t3yo6ic6().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_26t3yo6ic6().s[3]++;
exports.RedditSentimentMonitor = void 0;
const snoowrap_1 =
/* istanbul ignore next */
(cov_26t3yo6ic6().s[4]++, __importDefault(require("snoowrap")));
const sentiment_1 =
/* istanbul ignore next */
(cov_26t3yo6ic6().s[5]++, __importDefault(require("sentiment")));
const logger_1 =
/* istanbul ignore next */
(cov_26t3yo6ic6().s[6]++, require("../../core/logging/logger"));
class RedditSentimentMonitor {
  client;
  sentiment;
  logger =
  /* istanbul ignore next */
  (cov_26t3yo6ic6().s[7]++, logger_1.logger);
  isMonitoring =
  /* istanbul ignore next */
  (cov_26t3yo6ic6().s[8]++, false);
  monitoringInterval;
  // Crypto-related subreddits to monitor
  cryptoSubreddits =
  /* istanbul ignore next */
  (cov_26t3yo6ic6().s[9]++, ['cryptocurrency', 'Bitcoin', 'ethereum', 'CryptoCurrency', 'btc', 'ethtrader', 'CryptoMarkets', 'altcoin', 'DeFi', 'NFT', 'CryptoMoonShots', 'SatoshiStreetBets', 'CryptoCurrencyTrading', 'BitcoinMarkets', 'ethfinance']);
  constructor(config) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[1]++;
    cov_26t3yo6ic6().s[10]++;
    this.client = new snoowrap_1.default({
      userAgent: config.userAgent,
      clientId: config.clientId,
      clientSecret: config.clientSecret,
      username: config.username,
      password: config.password
    });
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[11]++;
    this.sentiment = new sentiment_1.default();
    // Logger is initialized as class property
  }
  /**
   * Start monitoring Reddit sentiment
   */
  async startMonitoring(intervalMinutes =
  /* istanbul ignore next */
  (cov_26t3yo6ic6().b[3][0]++, 10)) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[2]++;
    cov_26t3yo6ic6().s[12]++;
    if (this.isMonitoring) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[4][0]++;
      cov_26t3yo6ic6().s[13]++;
      this.logger.warn('Reddit monitoring is already running');
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[14]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_26t3yo6ic6().b[4][1]++;
    }
    cov_26t3yo6ic6().s[15]++;
    this.logger.info('Starting Reddit sentiment monitoring');
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[16]++;
    this.isMonitoring = true;
    // Initial analysis
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[17]++;
    await this.performSentimentAnalysis();
    // Set up periodic monitoring
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[18]++;
    this.monitoringInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_26t3yo6ic6().f[3]++;
      cov_26t3yo6ic6().s[19]++;
      try {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[20]++;
        await this.performSentimentAnalysis();
      } catch (error) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[21]++;
        this.logger.error('Error during Reddit sentiment analysis:', error);
      }
    }, intervalMinutes * 60 * 1000);
  }
  /**
   * Stop monitoring Reddit sentiment
   */
  stopMonitoring() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[4]++;
    cov_26t3yo6ic6().s[22]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[5][0]++;
      cov_26t3yo6ic6().s[23]++;
      this.logger.warn('Reddit monitoring is not running');
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[24]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_26t3yo6ic6().b[5][1]++;
    }
    cov_26t3yo6ic6().s[25]++;
    this.logger.info('Stopping Reddit sentiment monitoring');
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[26]++;
    this.isMonitoring = false;
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[27]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[6][0]++;
      cov_26t3yo6ic6().s[28]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[29]++;
      this.monitoringInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_26t3yo6ic6().b[6][1]++;
    }
  }
  /**
   * Perform comprehensive Reddit sentiment analysis
   */
  async performSentimentAnalysis() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[5]++;
    cov_26t3yo6ic6().s[30]++;
    try {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[31]++;
      this.logger.info('Performing Reddit sentiment analysis');
      // Gather posts and comments from crypto subreddits
      const [hotPosts, newPosts, topPosts] =
      /* istanbul ignore next */
      (cov_26t3yo6ic6().s[32]++, await Promise.all([this.gatherHotPosts(), this.gatherNewPosts(), this.gatherTopPosts()]));
      const allPosts =
      /* istanbul ignore next */
      (cov_26t3yo6ic6().s[33]++, [...hotPosts, ...newPosts, ...topPosts]);
      // Remove duplicates
      const uniquePosts =
      /* istanbul ignore next */
      (cov_26t3yo6ic6().s[34]++, this.removeDuplicatePosts(allPosts));
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[35]++;
      if (uniquePosts.length === 0) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().b[7][0]++;
        cov_26t3yo6ic6().s[36]++;
        this.logger.warn('No Reddit posts found for sentiment analysis');
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[37]++;
        return this.createEmptySentimentScore();
      } else
      /* istanbul ignore next */
      {
        cov_26t3yo6ic6().b[7][1]++;
      }
      // Analyze sentiment
      const sentimentScore =
      /* istanbul ignore next */
      (cov_26t3yo6ic6().s[38]++, await this.analyzePostsSentiment(uniquePosts));
      // Detect trends and alerts
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[39]++;
      await this.detectSentimentTrends(sentimentScore);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[40]++;
      this.logger.info(`Reddit sentiment analysis complete: ${sentimentScore.score.toFixed(2)}`);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[41]++;
      return sentimentScore;
    } catch (error) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[42]++;
      this.logger.error('Error in Reddit sentiment analysis:', error);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[43]++;
      throw error;
    }
  }
  /**
   * Gather hot posts from crypto subreddits
   */
  async gatherHotPosts() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[6]++;
    const posts =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[44]++, []);
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[45]++;
    try {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[46]++;
      for (const subreddit of this.cryptoSubreddits) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[47]++;
        try {
          const hotPosts =
          /* istanbul ignore next */
          (cov_26t3yo6ic6().s[48]++, await this.client.getSubreddit(subreddit).getHot({
            limit: 25
          }));
          /* istanbul ignore next */
          cov_26t3yo6ic6().s[49]++;
          for (const post of hotPosts) {
            /* istanbul ignore next */
            cov_26t3yo6ic6().s[50]++;
            posts.push({
              id: post.id,
              title: post.title,
              content:
              /* istanbul ignore next */
              (cov_26t3yo6ic6().b[8][0]++, post.selftext) ||
              /* istanbul ignore next */
              (cov_26t3yo6ic6().b[8][1]++, ''),
              author: post.author.name,
              subreddit: subreddit,
              upvotes: post.ups,
              downvotes: post.downs,
              comments: post.num_comments,
              timestamp: new Date(post.created_utc * 1000)
            });
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_26t3yo6ic6().s[51]++;
          this.logger.warn(`Error getting hot posts from r/${subreddit}:`, error);
        }
      }
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[52]++;
      this.logger.info(`Gathered ${posts.length} hot posts`);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[53]++;
      return posts;
    } catch (error) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[54]++;
      this.logger.error('Error gathering hot posts:', error);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[55]++;
      return [];
    }
  }
  /**
   * Gather new posts from crypto subreddits
   */
  async gatherNewPosts() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[7]++;
    const posts =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[56]++, []);
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[57]++;
    try {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[58]++;
      for (const subreddit of this.cryptoSubreddits) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[59]++;
        try {
          const newPosts =
          /* istanbul ignore next */
          (cov_26t3yo6ic6().s[60]++, await this.client.getSubreddit(subreddit).getNew({
            limit: 15
          }));
          /* istanbul ignore next */
          cov_26t3yo6ic6().s[61]++;
          for (const post of newPosts) {
            /* istanbul ignore next */
            cov_26t3yo6ic6().s[62]++;
            posts.push({
              id: post.id,
              title: post.title,
              content:
              /* istanbul ignore next */
              (cov_26t3yo6ic6().b[9][0]++, post.selftext) ||
              /* istanbul ignore next */
              (cov_26t3yo6ic6().b[9][1]++, ''),
              author: post.author.name,
              subreddit: subreddit,
              upvotes: post.ups,
              downvotes: post.downs,
              comments: post.num_comments,
              timestamp: new Date(post.created_utc * 1000)
            });
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_26t3yo6ic6().s[63]++;
          this.logger.warn(`Error getting new posts from r/${subreddit}:`, error);
        }
      }
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[64]++;
      this.logger.info(`Gathered ${posts.length} new posts`);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[65]++;
      return posts;
    } catch (error) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[66]++;
      this.logger.error('Error gathering new posts:', error);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[67]++;
      return [];
    }
  }
  /**
   * Gather top posts from crypto subreddits
   */
  async gatherTopPosts() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[8]++;
    const posts =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[68]++, []);
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[69]++;
    try {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[70]++;
      for (const subreddit of this.cryptoSubreddits) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[71]++;
        try {
          const topPosts =
          /* istanbul ignore next */
          (cov_26t3yo6ic6().s[72]++, await this.client.getSubreddit(subreddit).getTop({
            time: 'day',
            limit: 10
          }));
          /* istanbul ignore next */
          cov_26t3yo6ic6().s[73]++;
          for (const post of topPosts) {
            /* istanbul ignore next */
            cov_26t3yo6ic6().s[74]++;
            posts.push({
              id: post.id,
              title: post.title,
              content:
              /* istanbul ignore next */
              (cov_26t3yo6ic6().b[10][0]++, post.selftext) ||
              /* istanbul ignore next */
              (cov_26t3yo6ic6().b[10][1]++, ''),
              author: post.author.name,
              subreddit: subreddit,
              upvotes: post.ups,
              downvotes: post.downs,
              comments: post.num_comments,
              timestamp: new Date(post.created_utc * 1000)
            });
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_26t3yo6ic6().s[75]++;
          this.logger.warn(`Error getting top posts from r/${subreddit}:`, error);
        }
      }
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[76]++;
      this.logger.info(`Gathered ${posts.length} top posts`);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[77]++;
      return posts;
    } catch (error) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[78]++;
      this.logger.error('Error gathering top posts:', error);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[79]++;
      return [];
    }
  }
  /**
   * Remove duplicate posts based on ID
   */
  removeDuplicatePosts(posts) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[9]++;
    const seen =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[80]++, new Set());
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[81]++;
    return posts.filter(post => {
      /* istanbul ignore next */
      cov_26t3yo6ic6().f[10]++;
      cov_26t3yo6ic6().s[82]++;
      if (seen.has(post.id)) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().b[11][0]++;
        cov_26t3yo6ic6().s[83]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_26t3yo6ic6().b[11][1]++;
      }
      cov_26t3yo6ic6().s[84]++;
      seen.add(post.id);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[85]++;
      return true;
    });
  }
  /**
   * Analyze sentiment of collected posts and their comments
   */
  async analyzePostsSentiment(posts) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[11]++;
    let totalScore =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[86]++, 0);
    let totalWeight =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[87]++, 0);
    const keyTopics =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[88]++, []);
    const topicCounts =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[89]++, {});
    const subredditScores =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[90]++, {});
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[91]++;
    for (const post of posts) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[92]++;
      try {
        // Analyze post title and content
        const postText =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[93]++, `${post.title} ${post.content}`);
        const postSentiment =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[94]++, this.sentiment.analyze(postText));
        let postScore =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[95]++, postSentiment.score);
        // Normalize to -100 to 100 scale
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[96]++;
        postScore = Math.max(-100, Math.min(100, postScore * 5));
        // Calculate weight based on engagement
        const upvoteRatio =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[97]++, post.upvotes / (post.upvotes + post.downvotes + 1));
        const engagementWeight =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[98]++, Math.log10(post.upvotes + post.comments + 1));
        const qualityWeight =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[99]++, upvoteRatio * 2); // Higher weight for well-received posts
        const weight =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[100]++, engagementWeight + qualityWeight);
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[101]++;
        totalScore += postScore * weight;
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[102]++;
        totalWeight += weight;
        // Track subreddit performance
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[103]++;
        if (!subredditScores[post.subreddit]) {
          /* istanbul ignore next */
          cov_26t3yo6ic6().b[12][0]++;
          cov_26t3yo6ic6().s[104]++;
          subredditScores[post.subreddit] = [];
        } else
        /* istanbul ignore next */
        {
          cov_26t3yo6ic6().b[12][1]++;
        }
        cov_26t3yo6ic6().s[105]++;
        subredditScores[post.subreddit].push(postScore);
        // Extract topics from title
        const topics =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[106]++, this.extractTopicsFromText(post.title));
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[107]++;
        topics.forEach(topic => {
          /* istanbul ignore next */
          cov_26t3yo6ic6().f[12]++;
          cov_26t3yo6ic6().s[108]++;
          topicCounts[topic] = (
          /* istanbul ignore next */
          (cov_26t3yo6ic6().b[13][0]++, topicCounts[topic]) ||
          /* istanbul ignore next */
          (cov_26t3yo6ic6().b[13][1]++, 0)) + 1;
        });
        // Analyze top comments for additional sentiment
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[109]++;
        await this.analyzePostComments(post.id, post.subreddit);
      } catch (error) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[110]++;
        this.logger.warn(`Error analyzing post ${post.id}:`, error);
      }
    }
    // Get top topics
    const sortedTopics =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[111]++, Object.entries(topicCounts).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_26t3yo6ic6().f[13]++;
      cov_26t3yo6ic6().s[112]++;
      return b - a;
    }).slice(0, 10).map(([topic]) => {
      /* istanbul ignore next */
      cov_26t3yo6ic6().f[14]++;
      cov_26t3yo6ic6().s[113]++;
      return topic;
    }));
    const finalScore =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[114]++, totalWeight > 0 ?
    /* istanbul ignore next */
    (cov_26t3yo6ic6().b[14][0]++, totalScore / totalWeight) :
    /* istanbul ignore next */
    (cov_26t3yo6ic6().b[14][1]++, 0));
    const confidence =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[115]++, Math.min(100, Math.log10(posts.length + 1) * 25));
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[116]++;
    return {
      source: 'reddit',
      score: Math.round(finalScore * 100) / 100,
      confidence: Math.round(confidence),
      volume: posts.length,
      timestamp: new Date(),
      keyTopics: sortedTopics,
      rawData: {
        totalPosts: posts.length,
        totalWeight,
        subredditScores,
        topicCounts
      }
    };
  }
  /**
   * Analyze comments for additional sentiment data
   */
  async analyzePostComments(postId, subreddit) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[15]++;
    cov_26t3yo6ic6().s[117]++;
    try {
      // Get top comments for the post
      const submission =
      /* istanbul ignore next */
      (cov_26t3yo6ic6().s[118]++, await this.client.getSubmission(postId));
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[119]++;
      await submission.expandReplies({
        limit: 5,
        depth: 1
      });
      const comments =
      /* istanbul ignore next */
      (cov_26t3yo6ic6().s[120]++, submission.comments.slice(0, 10)); // Analyze top 10 comments
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[121]++;
      for (const comment of comments) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[122]++;
        if (
        /* istanbul ignore next */
        (cov_26t3yo6ic6().b[16][0]++, comment.body) &&
        /* istanbul ignore next */
        (cov_26t3yo6ic6().b[16][1]++, comment.body !== '[deleted]') &&
        /* istanbul ignore next */
        (cov_26t3yo6ic6().b[16][2]++, comment.body !== '[removed]')) {
          /* istanbul ignore next */
          cov_26t3yo6ic6().b[15][0]++;
          const commentSentiment =
          /* istanbul ignore next */
          (cov_26t3yo6ic6().s[123]++, this.sentiment.analyze(comment.body));
          // Comment sentiment could be weighted and added to overall analysis
          // For now, we're just collecting the data
        } else
        /* istanbul ignore next */
        {
          cov_26t3yo6ic6().b[15][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[124]++;
      this.logger.warn(`Error analyzing comments for post ${postId}:`, error);
    }
  }
  /**
   * Extract topics from text using simple keyword matching
   */
  extractTopicsFromText(text) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[16]++;
    const cryptoKeywords =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[125]++, ['bitcoin', 'btc', 'ethereum', 'eth', 'crypto', 'cryptocurrency', 'blockchain', 'defi', 'nft', 'altcoin', 'hodl', 'trading', 'bull', 'bear', 'moon', 'diamond', 'hands', 'satoshi', 'pump', 'dump', 'dip', 'ath', 'fomo', 'fud']);
    const lowerText =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[126]++, text.toLowerCase());
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[127]++;
    return cryptoKeywords.filter(keyword => {
      /* istanbul ignore next */
      cov_26t3yo6ic6().f[17]++;
      cov_26t3yo6ic6().s[128]++;
      return lowerText.includes(keyword);
    });
  }
  /**
   * Detect sentiment trends and generate alerts
   */
  async detectSentimentTrends(currentScore) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[18]++;
    const alerts =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[129]++, []);
    // Extreme sentiment alerts
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[130]++;
    if (currentScore.score > 60) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[17][0]++;
      cov_26t3yo6ic6().s[131]++;
      alerts.push({
        id: `reddit_extreme_positive_${Date.now()}`,
        type: 'EXTREME_POSITIVE',
        severity: 'HIGH',
        message: `Extremely positive Reddit sentiment detected: ${currentScore.score}`,
        timestamp: new Date(),
        source: 'reddit',
        data: currentScore
      });
    } else {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[17][1]++;
      cov_26t3yo6ic6().s[132]++;
      if (currentScore.score < -60) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().b[18][0]++;
        cov_26t3yo6ic6().s[133]++;
        alerts.push({
          id: `reddit_extreme_negative_${Date.now()}`,
          type: 'EXTREME_NEGATIVE',
          severity: 'HIGH',
          message: `Extremely negative Reddit sentiment detected: ${currentScore.score}`,
          timestamp: new Date(),
          source: 'reddit',
          data: currentScore
        });
      } else
      /* istanbul ignore next */
      {
        cov_26t3yo6ic6().b[18][1]++;
      }
    }
    // Volume spike alerts
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[134]++;
    if (currentScore.volume > 200) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[19][0]++;
      cov_26t3yo6ic6().s[135]++;
      alerts.push({
        id: `reddit_volume_spike_${Date.now()}`,
        type: 'VOLUME_SPIKE',
        severity: 'MEDIUM',
        message: `High Reddit activity detected: ${currentScore.volume} posts`,
        timestamp: new Date(),
        source: 'reddit',
        data: currentScore
      });
    } else
    /* istanbul ignore next */
    {
      cov_26t3yo6ic6().b[19][1]++;
    }
    // Log alerts
    cov_26t3yo6ic6().s[136]++;
    for (const alert of alerts) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[137]++;
      this.logger.warn(`Reddit Sentiment Alert: ${alert.message}`);
    }
  }
  /**
   * Create empty sentiment score for error cases
   */
  createEmptySentimentScore() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[19]++;
    cov_26t3yo6ic6().s[138]++;
    return {
      source: 'reddit',
      score: 0,
      confidence: 0,
      volume: 0,
      timestamp: new Date(),
      keyTopics: []
    };
  }
  /**
   * Get current sentiment score
   */
  async getCurrentSentiment() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[20]++;
    cov_26t3yo6ic6().s[139]++;
    return await this.performSentimentAnalysis();
  }
  /**
   * Get monitored subreddits
   */
  getMonitoredSubreddits() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[21]++;
    cov_26t3yo6ic6().s[140]++;
    return [...this.cryptoSubreddits];
  }
  /**
   * Add subreddit to monitoring list
   */
  addSubreddit(subreddit) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[22]++;
    cov_26t3yo6ic6().s[141]++;
    if (!this.cryptoSubreddits.includes(subreddit)) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[20][0]++;
      cov_26t3yo6ic6().s[142]++;
      this.cryptoSubreddits.push(subreddit);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[143]++;
      this.logger.info(`Added subreddit to monitoring: r/${subreddit}`);
    } else
    /* istanbul ignore next */
    {
      cov_26t3yo6ic6().b[20][1]++;
    }
  }
  /**
   * Remove subreddit from monitoring list
   */
  removeSubreddit(subreddit) {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[23]++;
    const index =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[144]++, this.cryptoSubreddits.indexOf(subreddit));
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[145]++;
    if (index !== -1) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().b[21][0]++;
      cov_26t3yo6ic6().s[146]++;
      this.cryptoSubreddits.splice(index, 1);
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[147]++;
      this.logger.info(`Removed subreddit from monitoring: r/${subreddit}`);
    } else
    /* istanbul ignore next */
    {
      cov_26t3yo6ic6().b[21][1]++;
    }
  }
  /**
   * Get sentiment breakdown by subreddit
   */
  async getSubredditSentimentBreakdown() {
    /* istanbul ignore next */
    cov_26t3yo6ic6().f[24]++;
    const breakdown =
    /* istanbul ignore next */
    (cov_26t3yo6ic6().s[148]++, {});
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[149]++;
    for (const subreddit of this.cryptoSubreddits.slice(0, 5)) {
      /* istanbul ignore next */
      cov_26t3yo6ic6().s[150]++;
      // Limit to top 5 for performance
      try {
        const posts =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[151]++, await this.client.getSubreddit(subreddit).getHot({
          limit: 20
        }));
        const redditPosts =
        /* istanbul ignore next */
        (cov_26t3yo6ic6().s[152]++, posts.map(post => {
          /* istanbul ignore next */
          cov_26t3yo6ic6().f[25]++;
          cov_26t3yo6ic6().s[153]++;
          return {
            id: post.id,
            title: post.title,
            content:
            /* istanbul ignore next */
            (cov_26t3yo6ic6().b[22][0]++, post.selftext) ||
            /* istanbul ignore next */
            (cov_26t3yo6ic6().b[22][1]++, ''),
            author: post.author.name,
            subreddit: subreddit,
            upvotes: post.ups,
            downvotes: post.downs,
            comments: post.num_comments,
            timestamp: new Date(post.created_utc * 1000)
          };
        }));
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[154]++;
        breakdown[subreddit] = await this.analyzePostsSentiment(redditPosts);
      } catch (error) {
        /* istanbul ignore next */
        cov_26t3yo6ic6().s[155]++;
        this.logger.warn(`Error getting sentiment for r/${subreddit}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_26t3yo6ic6().s[156]++;
    return breakdown;
  }
}
/* istanbul ignore next */
cov_26t3yo6ic6().s[157]++;
exports.RedditSentimentMonitor = RedditSentimentMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,