d37e89ec98996c77b974638674c8cc08
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - SYSTEM PERFORMANCE OPTIMIZER
 * =============================================================================
 *
 * This service provides comprehensive performance optimization for Intel NUC
 * systems running the AI crypto trading agent. It implements low-latency
 * trading optimizations, thermal management, and resource allocation.
 *
 * CRITICAL PERFORMANCE NOTICE:
 * This system optimizes hardware performance for trading operations. Poor
 * performance could impact trading decisions and result in financial losses.
 * All optimizations are continuously monitored and adjusted.
 *
 * Hardware Specifications:
 * - Intel NUC with i5 CPU
 * - 12GB RAM
 * - 256GB M.2 SSD
 * - Wireless and Gigabit Ethernet
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2cf8807yt9() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance-optimizer.ts";
  var hash = "10fb4e77373aa20a10bfa50a73a981f4705270c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "1": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "2": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "3": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 52
        }
      },
      "4": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "5": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 68
        }
      },
      "6": {
        start: {
          line: 31,
          column: 51
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "8": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 33
        }
      },
      "9": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 33
        }
      },
      "10": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "11": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "12": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "14": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 59,
          column: 4
        }
      },
      "15": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "17": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "18": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "19": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "20": {
        start: {
          line: 47,
          column: 77
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "21": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 26
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "25": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "26": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 23
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "28": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "29": {
        start: {
          line: 55,
          column: 38
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "30": {
        start: {
          line: 55,
          column: 56
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "31": {
        start: {
          line: 55,
          column: 78
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "32": {
        start: {
          line: 55,
          column: 102
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "33": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "35": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "36": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "37": {
        start: {
          line: 62,
          column: 11
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "38": {
        start: {
          line: 63,
          column: 17
        },
        end: {
          line: 63,
          column: 49
        }
      },
      "39": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "40": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "41": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 27
        }
      },
      "42": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 28
        }
      },
      "43": {
        start: {
          line: 75,
          column: 19
        },
        end: {
          line: 75,
          column: 24
        }
      },
      "44": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 43
        }
      },
      "45": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "46": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 72
        }
      },
      "47": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "48": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "49": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 79
        }
      },
      "50": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 51
        }
      },
      "51": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "52": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 48
        }
      },
      "53": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 88
        }
      },
      "54": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 127,
          column: 15
        }
      },
      "55": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 93
        }
      },
      "56": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 78
        }
      },
      "57": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "58": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 80
        }
      },
      "59": {
        start: {
          line: 143,
          column: 34
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "60": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "61": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 66
        }
      },
      "62": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "63": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "64": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "65": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 65
        }
      },
      "66": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "67": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 70
        }
      },
      "68": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 45
        }
      },
      "69": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 81
        }
      },
      "70": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 85
        }
      },
      "71": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "72": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "73": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 69
        }
      },
      "74": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "75": {
        start: {
          line: 179,
          column: 37
        },
        end: {
          line: 179,
          column: 66
        }
      },
      "76": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 144
        }
      },
      "77": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 90
        }
      },
      "78": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 97
        }
      },
      "79": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "80": {
        start: {
          line: 188,
          column: 37
        },
        end: {
          line: 188,
          column: 66
        }
      },
      "81": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 75
        }
      },
      "82": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "83": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 86
        }
      },
      "84": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "85": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 71
        }
      },
      "86": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "87": {
        start: {
          line: 209,
          column: 28
        },
        end: {
          line: 209,
          column: 42
        }
      },
      "88": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 210,
          column: 43
        }
      },
      "89": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "90": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 54
        }
      },
      "91": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 53
        }
      },
      "92": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 91
        }
      },
      "93": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 74
        }
      },
      "94": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "95": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 72
        }
      },
      "96": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "97": {
        start: {
          line: 232,
          column: 37
        },
        end: {
          line: 232,
          column: 66
        }
      },
      "98": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 119
        }
      },
      "99": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 100
        }
      },
      "100": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 83
        }
      },
      "101": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "102": {
        start: {
          line: 241,
          column: 37
        },
        end: {
          line: 241,
          column: 66
        }
      },
      "103": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 96
        }
      },
      "104": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 101
        }
      },
      "105": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 91
        }
      },
      "106": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 70
        }
      },
      "107": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 88
        }
      },
      "108": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 40
        }
      },
      "109": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 74
        }
      },
      "110": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "111": {
        start: {
          line: 265,
          column: 34
        },
        end: {
          line: 265,
          column: 91
        }
      },
      "112": {
        start: {
          line: 266,
          column: 32
        },
        end: {
          line: 266,
          column: 63
        }
      },
      "113": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 84
        }
      },
      "114": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "115": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 67
        }
      },
      "116": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 86
        }
      },
      "117": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 81
        }
      },
      "118": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "119": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 69
        }
      },
      "120": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "121": {
        start: {
          line: 288,
          column: 37
        },
        end: {
          line: 288,
          column: 66
        }
      },
      "122": {
        start: {
          line: 289,
          column: 37
        },
        end: {
          line: 289,
          column: 60
        }
      },
      "123": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "124": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "125": {
        start: {
          line: 292,
          column: 24
        },
        end: {
          line: 298,
          column: 25
        }
      },
      "126": {
        start: {
          line: 293,
          column: 28
        },
        end: {
          line: 293,
          column: 144
        }
      },
      "127": {
        start: {
          line: 294,
          column: 28
        },
        end: {
          line: 294,
          column: 121
        }
      },
      "128": {
        start: {
          line: 297,
          column: 28
        },
        end: {
          line: 297,
          column: 110
        }
      },
      "129": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 84
        }
      },
      "130": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 44
        }
      },
      "131": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 71
        }
      },
      "132": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "133": {
        start: {
          line: 319,
          column: 33
        },
        end: {
          line: 319,
          column: 62
        }
      },
      "134": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 78
        }
      },
      "135": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 93
        }
      },
      "136": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 60
        }
      },
      "137": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 78
        }
      },
      "138": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "139": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 73
        }
      },
      "140": {
        start: {
          line: 338,
          column: 33
        },
        end: {
          line: 338,
          column: 62
        }
      },
      "141": {
        start: {
          line: 340,
          column: 37
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "142": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 357,
          column: 13
        }
      },
      "143": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 356,
          column: 17
        }
      },
      "144": {
        start: {
          line: 352,
          column: 20
        },
        end: {
          line: 352,
          column: 105
        }
      },
      "145": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 101
        }
      },
      "146": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 365,
          column: 13
        }
      },
      "147": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 62
        }
      },
      "148": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 72
        }
      },
      "149": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 82
        }
      },
      "150": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 75
        }
      },
      "151": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "152": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 73
        }
      },
      "153": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 382,
          column: 22
        }
      },
      "154": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 54
        }
      },
      "155": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 72
        }
      },
      "156": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 79
        }
      },
      "157": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "158": {
        start: {
          line: 396,
          column: 28
        },
        end: {
          line: 396,
          column: 53
        }
      },
      "159": {
        start: {
          line: 397,
          column: 32
        },
        end: {
          line: 397,
          column: 49
        }
      },
      "160": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "161": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 63
        }
      },
      "162": {
        start: {
          line: 401,
          column: 17
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "163": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 53
        }
      },
      "164": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 73
        }
      },
      "165": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 441,
          column: 9
        }
      },
      "166": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 97
        }
      },
      "167": {
        start: {
          line: 420,
          column: 33
        },
        end: {
          line: 420,
          column: 62
        }
      },
      "168": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 426,
          column: 13
        }
      },
      "169": {
        start: {
          line: 422,
          column: 16
        },
        end: {
          line: 422,
          column: 127
        }
      },
      "170": {
        start: {
          line: 425,
          column: 16
        },
        end: {
          line: 425,
          column: 82
        }
      },
      "171": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 437,
          column: 15
        }
      },
      "172": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 82
        }
      },
      "173": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 463,
          column: 9
        }
      },
      "174": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 459,
          column: 13
        }
      },
      "175": {
        start: {
          line: 451,
          column: 37
        },
        end: {
          line: 451,
          column: 66
        }
      },
      "176": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 458,
          column: 17
        }
      },
      "177": {
        start: {
          line: 453,
          column: 20
        },
        end: {
          line: 453,
          column: 148
        }
      },
      "178": {
        start: {
          line: 454,
          column: 20
        },
        end: {
          line: 454,
          column: 103
        }
      },
      "179": {
        start: {
          line: 457,
          column: 20
        },
        end: {
          line: 457,
          column: 87
        }
      },
      "180": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 83
        }
      },
      "181": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "182": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 74
        }
      },
      "183": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 481,
          column: 49
        }
      },
      "184": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 480,
          column: 17
        }
      },
      "185": {
        start: {
          line: 475,
          column: 20
        },
        end: {
          line: 475,
          column: 52
        }
      },
      "186": {
        start: {
          line: 476,
          column: 20
        },
        end: {
          line: 476,
          column: 69
        }
      },
      "187": {
        start: {
          line: 479,
          column: 20
        },
        end: {
          line: 479,
          column: 84
        }
      },
      "188": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 69
        }
      },
      "189": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 86
        }
      },
      "190": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 555,
          column: 9
        }
      },
      "191": {
        start: {
          line: 495,
          column: 30
        },
        end: {
          line: 495,
          column: 53
        }
      },
      "192": {
        start: {
          line: 497,
          column: 28
        },
        end: {
          line: 497,
          column: 66
        }
      },
      "193": {
        start: {
          line: 499,
          column: 29
        },
        end: {
          line: 499,
          column: 64
        }
      },
      "194": {
        start: {
          line: 500,
          column: 32
        },
        end: {
          line: 500,
          column: 70
        }
      },
      "195": {
        start: {
          line: 501,
          column: 28
        },
        end: {
          line: 501,
          column: 62
        }
      },
      "196": {
        start: {
          line: 502,
          column: 33
        },
        end: {
          line: 502,
          column: 76
        }
      },
      "197": {
        start: {
          line: 503,
          column: 33
        },
        end: {
          line: 503,
          column: 67
        }
      },
      "198": {
        start: {
          line: 505,
          column: 28
        },
        end: {
          line: 505,
          column: 61
        }
      },
      "199": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 51
        }
      },
      "200": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 510,
          column: 13
        }
      },
      "201": {
        start: {
          line: 509,
          column: 16
        },
        end: {
          line: 509,
          column: 81
        }
      },
      "202": {
        start: {
          line: 512,
          column: 36
        },
        end: {
          line: 512,
          column: 87
        }
      },
      "203": {
        start: {
          line: 512,
          column: 81
        },
        end: {
          line: 512,
          column: 86
        }
      },
      "204": {
        start: {
          line: 513,
          column: 33
        },
        end: {
          line: 518,
          column: 13
        }
      },
      "205": {
        start: {
          line: 514,
          column: 67
        },
        end: {
          line: 514,
          column: 72
        }
      },
      "206": {
        start: {
          line: 520,
          column: 31
        },
        end: {
          line: 525,
          column: 13
        }
      },
      "207": {
        start: {
          line: 526,
          column: 33
        },
        end: {
          line: 526,
          column: 113
        }
      },
      "208": {
        start: {
          line: 527,
          column: 39
        },
        end: {
          line: 537,
          column: 13
        }
      },
      "209": {
        start: {
          line: 539,
          column: 12
        },
        end: {
          line: 539,
          column: 61
        }
      },
      "210": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 542,
          column: 13
        }
      },
      "211": {
        start: {
          line: 541,
          column: 16
        },
        end: {
          line: 541,
          column: 78
        }
      },
      "212": {
        start: {
          line: 543,
          column: 28
        },
        end: {
          line: 543,
          column: 51
        }
      },
      "213": {
        start: {
          line: 544,
          column: 36
        },
        end: {
          line: 544,
          column: 73
        }
      },
      "214": {
        start: {
          line: 545,
          column: 12
        },
        end: {
          line: 549,
          column: 15
        }
      },
      "215": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 550,
          column: 38
        }
      },
      "216": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 553,
          column: 78
        }
      },
      "217": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 554,
          column: 24
        }
      },
      "218": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 565,
          column: 21
        }
      },
      "219": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 21
        }
      },
      "220": {
        start: {
          line: 567,
          column: 33
        },
        end: {
          line: 567,
          column: 67
        }
      },
      "221": {
        start: {
          line: 568,
          column: 33
        },
        end: {
          line: 568,
          column: 80
        }
      },
      "222": {
        start: {
          line: 569,
          column: 31
        },
        end: {
          line: 569,
          column: 74
        }
      },
      "223": {
        start: {
          line: 570,
          column: 8
        },
        end: {
          line: 570,
          column: 86
        }
      },
      "224": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 580,
          column: 21
        }
      },
      "225": {
        start: {
          line: 580,
          column: 12
        },
        end: {
          line: 580,
          column: 21
        }
      },
      "226": {
        start: {
          line: 582,
          column: 33
        },
        end: {
          line: 582,
          column: 107
        }
      },
      "227": {
        start: {
          line: 583,
          column: 34
        },
        end: {
          line: 583,
          column: 82
        }
      },
      "228": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 70
        }
      },
      "229": {
        start: {
          line: 593,
          column: 8
        },
        end: {
          line: 594,
          column: 21
        }
      },
      "230": {
        start: {
          line: 594,
          column: 12
        },
        end: {
          line: 594,
          column: 21
        }
      },
      "231": {
        start: {
          line: 596,
          column: 33
        },
        end: {
          line: 596,
          column: 67
        }
      },
      "232": {
        start: {
          line: 597,
          column: 32
        },
        end: {
          line: 597,
          column: 103
        }
      },
      "233": {
        start: {
          line: 598,
          column: 28
        },
        end: {
          line: 598,
          column: 38
        }
      },
      "234": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 599,
          column: 82
        }
      },
      "235": {
        start: {
          line: 608,
          column: 8
        },
        end: {
          line: 609,
          column: 21
        }
      },
      "236": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 609,
          column: 21
        }
      },
      "237": {
        start: {
          line: 610,
          column: 33
        },
        end: {
          line: 610,
          column: 86
        }
      },
      "238": {
        start: {
          line: 610,
          column: 67
        },
        end: {
          line: 610,
          column: 73
        }
      },
      "239": {
        start: {
          line: 611,
          column: 34
        },
        end: {
          line: 611,
          column: 64
        }
      },
      "240": {
        start: {
          line: 612,
          column: 27
        },
        end: {
          line: 612,
          column: 101
        }
      },
      "241": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 613,
          column: 64
        }
      },
      "242": {
        start: {
          line: 621,
          column: 8
        },
        end: {
          line: 637,
          column: 9
        }
      },
      "243": {
        start: {
          line: 622,
          column: 28
        },
        end: {
          line: 622,
          column: 53
        }
      },
      "244": {
        start: {
          line: 623,
          column: 32
        },
        end: {
          line: 623,
          column: 49
        }
      },
      "245": {
        start: {
          line: 625,
          column: 12
        },
        end: {
          line: 626,
          column: 27
        }
      },
      "246": {
        start: {
          line: 626,
          column: 16
        },
        end: {
          line: 626,
          column: 27
        }
      },
      "247": {
        start: {
          line: 627,
          column: 12
        },
        end: {
          line: 628,
          column: 26
        }
      },
      "248": {
        start: {
          line: 628,
          column: 16
        },
        end: {
          line: 628,
          column: 26
        }
      },
      "249": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 630,
          column: 26
        }
      },
      "250": {
        start: {
          line: 630,
          column: 16
        },
        end: {
          line: 630,
          column: 26
        }
      },
      "251": {
        start: {
          line: 631,
          column: 12
        },
        end: {
          line: 632,
          column: 26
        }
      },
      "252": {
        start: {
          line: 632,
          column: 16
        },
        end: {
          line: 632,
          column: 26
        }
      },
      "253": {
        start: {
          line: 633,
          column: 12
        },
        end: {
          line: 633,
          column: 22
        }
      },
      "254": {
        start: {
          line: 636,
          column: 12
        },
        end: {
          line: 636,
          column: 22
        }
      },
      "255": {
        start: {
          line: 645,
          column: 22
        },
        end: {
          line: 645,
          column: 45
        }
      },
      "256": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 647,
          column: 60
        }
      },
      "257": {
        start: {
          line: 647,
          column: 37
        },
        end: {
          line: 647,
          column: 58
        }
      },
      "258": {
        start: {
          line: 648,
          column: 20
        },
        end: {
          line: 648,
          column: 43
        }
      },
      "259": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 42
        }
      },
      "260": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 659,
          column: 21
        }
      },
      "261": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 659,
          column: 21
        }
      },
      "262": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 96
        }
      },
      "263": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 671,
          column: 21
        }
      },
      "264": {
        start: {
          line: 671,
          column: 12
        },
        end: {
          line: 671,
          column: 21
        }
      },
      "265": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 673,
          column: 58
        }
      },
      "266": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 748,
          column: 9
        }
      },
      "267": {
        start: {
          line: 682,
          column: 36
        },
        end: {
          line: 682,
          column: 38
        }
      },
      "268": {
        start: {
          line: 683,
          column: 28
        },
        end: {
          line: 683,
          column: 66
        }
      },
      "269": {
        start: {
          line: 684,
          column: 38
        },
        end: {
          line: 684,
          column: 97
        }
      },
      "270": {
        start: {
          line: 686,
          column: 12
        },
        end: {
          line: 698,
          column: 13
        }
      },
      "271": {
        start: {
          line: 687,
          column: 16
        },
        end: {
          line: 697,
          column: 19
        }
      },
      "272": {
        start: {
          line: 700,
          column: 12
        },
        end: {
          line: 712,
          column: 13
        }
      },
      "273": {
        start: {
          line: 701,
          column: 16
        },
        end: {
          line: 711,
          column: 19
        }
      },
      "274": {
        start: {
          line: 714,
          column: 12
        },
        end: {
          line: 727,
          column: 13
        }
      },
      "275": {
        start: {
          line: 715,
          column: 16
        },
        end: {
          line: 726,
          column: 19
        }
      },
      "276": {
        start: {
          line: 729,
          column: 12
        },
        end: {
          line: 742,
          column: 13
        }
      },
      "277": {
        start: {
          line: 730,
          column: 16
        },
        end: {
          line: 741,
          column: 19
        }
      },
      "278": {
        start: {
          line: 743,
          column: 12
        },
        end: {
          line: 743,
          column: 35
        }
      },
      "279": {
        start: {
          line: 746,
          column: 12
        },
        end: {
          line: 746,
          column: 95
        }
      },
      "280": {
        start: {
          line: 747,
          column: 12
        },
        end: {
          line: 747,
          column: 22
        }
      },
      "281": {
        start: {
          line: 756,
          column: 8
        },
        end: {
          line: 785,
          column: 9
        }
      },
      "282": {
        start: {
          line: 757,
          column: 28
        },
        end: {
          line: 757,
          column: 53
        }
      },
      "283": {
        start: {
          line: 758,
          column: 32
        },
        end: {
          line: 758,
          column: 49
        }
      },
      "284": {
        start: {
          line: 759,
          column: 32
        },
        end: {
          line: 759,
          column: 63
        }
      },
      "285": {
        start: {
          line: 760,
          column: 33
        },
        end: {
          line: 760,
          column: 59
        }
      },
      "286": {
        start: {
          line: 761,
          column: 27
        },
        end: {
          line: 761,
          column: 29
        }
      },
      "287": {
        start: {
          line: 762,
          column: 36
        },
        end: {
          line: 762,
          column: 38
        }
      },
      "288": {
        start: {
          line: 763,
          column: 12
        },
        end: {
          line: 771,
          column: 13
        }
      },
      "289": {
        start: {
          line: 764,
          column: 16
        },
        end: {
          line: 764,
          column: 80
        }
      },
      "290": {
        start: {
          line: 765,
          column: 16
        },
        end: {
          line: 765,
          column: 77
        }
      },
      "291": {
        start: {
          line: 766,
          column: 16
        },
        end: {
          line: 766,
          column: 59
        }
      },
      "292": {
        start: {
          line: 768,
          column: 17
        },
        end: {
          line: 771,
          column: 13
        }
      },
      "293": {
        start: {
          line: 769,
          column: 16
        },
        end: {
          line: 769,
          column: 70
        }
      },
      "294": {
        start: {
          line: 770,
          column: 16
        },
        end: {
          line: 770,
          column: 72
        }
      },
      "295": {
        start: {
          line: 772,
          column: 41
        },
        end: {
          line: 772,
          column: 91
        }
      },
      "296": {
        start: {
          line: 773,
          column: 12
        },
        end: {
          line: 780,
          column: 14
        }
      },
      "297": {
        start: {
          line: 783,
          column: 12
        },
        end: {
          line: 783,
          column: 76
        }
      },
      "298": {
        start: {
          line: 784,
          column: 12
        },
        end: {
          line: 784,
          column: 24
        }
      },
      "299": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 793,
          column: 44
        }
      },
      "300": {
        start: {
          line: 801,
          column: 8
        },
        end: {
          line: 801,
          column: 83
        }
      },
      "301": {
        start: {
          line: 807,
          column: 8
        },
        end: {
          line: 811,
          column: 9
        }
      },
      "302": {
        start: {
          line: 808,
          column: 12
        },
        end: {
          line: 808,
          column: 53
        }
      },
      "303": {
        start: {
          line: 809,
          column: 12
        },
        end: {
          line: 809,
          column: 45
        }
      },
      "304": {
        start: {
          line: 810,
          column: 12
        },
        end: {
          line: 810,
          column: 72
        }
      },
      "305": {
        start: {
          line: 819,
          column: 30
        },
        end: {
          line: 819,
          column: 65
        }
      },
      "306": {
        start: {
          line: 820,
          column: 8
        },
        end: {
          line: 826,
          column: 10
        }
      },
      "307": {
        start: {
          line: 829,
          column: 0
        },
        end: {
          line: 829,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 27,
            column: 74
          },
          end: {
            line: 27,
            column: 75
          }
        },
        loc: {
          start: {
            line: 27,
            column: 96
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 31,
            column: 39
          }
        },
        loc: {
          start: {
            line: 31,
            column: 49
          },
          end: {
            line: 31,
            column: 65
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 80
          },
          end: {
            line: 38,
            column: 81
          }
        },
        loc: {
          start: {
            line: 38,
            column: 95
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 5
          },
          end: {
            line: 40,
            column: 6
          }
        },
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 51
          },
          end: {
            line: 43,
            column: 52
          }
        },
        loc: {
          start: {
            line: 43,
            column: 63
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 44,
            column: 19
          }
        },
        loc: {
          start: {
            line: 44,
            column: 30
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 49
          }
        },
        loc: {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 52,
            column: 12
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 52
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 76
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 24
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 86
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 46
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 107
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 38
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 140
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 35
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 174
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 207
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 38
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 227
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 27
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 262
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 34
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 283
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 31
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 317
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        loc: {
          start: {
            line: 335,
            column: 39
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 335
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 35
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 376
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 380,
            column: 24
          },
          end: {
            line: 380,
            column: 25
          }
        },
        loc: {
          start: {
            line: 380,
            column: 36
          },
          end: {
            line: 382,
            column: 13
          }
        },
        line: 380
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        loc: {
          start: {
            line: 394,
            column: 37
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 394
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 46
          },
          end: {
            line: 442,
            column: 5
          }
        },
        line: 416
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 36
          },
          end: {
            line: 464,
            column: 5
          }
        },
        line: 448
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        loc: {
          start: {
            line: 470,
            column: 39
          },
          end: {
            line: 487,
            column: 5
          }
        },
        line: 470
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 473,
            column: 52
          },
          end: {
            line: 473,
            column: 53
          }
        },
        loc: {
          start: {
            line: 473,
            column: 64
          },
          end: {
            line: 481,
            column: 13
          }
        },
        line: 473
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 31
          },
          end: {
            line: 556,
            column: 5
          }
        },
        line: 493
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 512,
            column: 71
          },
          end: {
            line: 512,
            column: 72
          }
        },
        loc: {
          start: {
            line: 512,
            column: 81
          },
          end: {
            line: 512,
            column: 86
          }
        },
        line: 512
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 514,
            column: 57
          },
          end: {
            line: 514,
            column: 58
          }
        },
        loc: {
          start: {
            line: 514,
            column: 67
          },
          end: {
            line: 514,
            column: 72
          }
        },
        line: 514
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 563,
            column: 4
          },
          end: {
            line: 563,
            column: 5
          }
        },
        loc: {
          start: {
            line: 563,
            column: 27
          },
          end: {
            line: 571,
            column: 5
          }
        },
        line: 563
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 578,
            column: 4
          },
          end: {
            line: 578,
            column: 5
          }
        },
        loc: {
          start: {
            line: 578,
            column: 30
          },
          end: {
            line: 585,
            column: 5
          }
        },
        line: 578
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 592,
            column: 4
          },
          end: {
            line: 592,
            column: 5
          }
        },
        loc: {
          start: {
            line: 592,
            column: 26
          },
          end: {
            line: 600,
            column: 5
          }
        },
        line: 592
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 607,
            column: 4
          },
          end: {
            line: 607,
            column: 5
          }
        },
        loc: {
          start: {
            line: 607,
            column: 35
          },
          end: {
            line: 614,
            column: 5
          }
        },
        line: 607
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 610,
            column: 60
          },
          end: {
            line: 610,
            column: 61
          }
        },
        loc: {
          start: {
            line: 610,
            column: 67
          },
          end: {
            line: 610,
            column: 73
          }
        },
        line: 610
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 620,
            column: 4
          },
          end: {
            line: 620,
            column: 5
          }
        },
        loc: {
          start: {
            line: 620,
            column: 34
          },
          end: {
            line: 638,
            column: 5
          }
        },
        line: 620
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 644,
            column: 4
          },
          end: {
            line: 644,
            column: 5
          }
        },
        loc: {
          start: {
            line: 644,
            column: 33
          },
          end: {
            line: 650,
            column: 5
          }
        },
        line: 644
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 647,
            column: 26
          },
          end: {
            line: 647,
            column: 27
          }
        },
        loc: {
          start: {
            line: 647,
            column: 37
          },
          end: {
            line: 647,
            column: 58
          }
        },
        line: 647
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 657,
            column: 4
          },
          end: {
            line: 657,
            column: 5
          }
        },
        loc: {
          start: {
            line: 657,
            column: 32
          },
          end: {
            line: 662,
            column: 5
          }
        },
        line: 657
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 669,
            column: 4
          },
          end: {
            line: 669,
            column: 5
          }
        },
        loc: {
          start: {
            line: 669,
            column: 34
          },
          end: {
            line: 674,
            column: 5
          }
        },
        line: 669
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 680,
            column: 4
          },
          end: {
            line: 680,
            column: 5
          }
        },
        loc: {
          start: {
            line: 680,
            column: 48
          },
          end: {
            line: 749,
            column: 5
          }
        },
        line: 680
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 755,
            column: 4
          },
          end: {
            line: 755,
            column: 5
          }
        },
        loc: {
          start: {
            line: 755,
            column: 29
          },
          end: {
            line: 786,
            column: 5
          }
        },
        line: 755
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 792,
            column: 4
          },
          end: {
            line: 792,
            column: 5
          }
        },
        loc: {
          start: {
            line: 792,
            column: 28
          },
          end: {
            line: 794,
            column: 5
          }
        },
        line: 792
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 800,
            column: 4
          },
          end: {
            line: 800,
            column: 5
          }
        },
        loc: {
          start: {
            line: 800,
            column: 35
          },
          end: {
            line: 802,
            column: 5
          }
        },
        line: 800
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 806,
            column: 4
          },
          end: {
            line: 806,
            column: 5
          }
        },
        loc: {
          start: {
            line: 806,
            column: 34
          },
          end: {
            line: 812,
            column: 5
          }
        },
        line: 806
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 818,
            column: 4
          },
          end: {
            line: 818,
            column: 5
          }
        },
        loc: {
          start: {
            line: 818,
            column: 16
          },
          end: {
            line: 827,
            column: 5
          }
        },
        line: 818
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 37,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: 27,
            column: 57
          },
          end: {
            line: 37,
            column: 2
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 57
          },
          end: {
            line: 37,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 74
          },
          end: {
            line: 34,
            column: 1
          }
        }, {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 47
          }
        }, {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 63
          }
        }, {
          start: {
            line: 30,
            column: 67
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 42,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 30
          }
        }, {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 57
          }
        }, {
          start: {
            line: 38,
            column: 63
          },
          end: {
            line: 42,
            column: 1
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 63
          },
          end: {
            line: 42,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 80
          },
          end: {
            line: 40,
            column: 1
          }
        }, {
          start: {
            line: 40,
            column: 5
          },
          end: {
            line: 42,
            column: 1
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 59,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 24
          }
        }, {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 45
          }
        }, {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 59,
            column: 4
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 18
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 18
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 49,
            column: 9
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 15
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 53,
            column: 33
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 78
          },
          end: {
            line: 55,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 78
          },
          end: {
            line: 55,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 49
          }
        }, {
          start: {
            line: 93,
            column: 53
          },
          end: {
            line: 93,
            column: 66
          }
        }],
        line: 93
      },
      "18": {
        loc: {
          start: {
            line: 94,
            column: 39
          },
          end: {
            line: 94,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 39
          },
          end: {
            line: 94,
            column: 68
          }
        }, {
          start: {
            line: 94,
            column: 72
          },
          end: {
            line: 94,
            column: 76
          }
        }],
        line: 94
      },
      "19": {
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 49
          }
        }, {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 66
          }
        }],
        line: 95
      },
      "20": {
        loc: {
          start: {
            line: 96,
            column: 40
          },
          end: {
            line: 96,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 40
          },
          end: {
            line: 96,
            column: 71
          }
        }, {
          start: {
            line: 96,
            column: 75
          },
          end: {
            line: 96,
            column: 85
          }
        }],
        line: 96
      },
      "21": {
        loc: {
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 97,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 97,
            column: 75
          }
        }, {
          start: {
            line: 97,
            column: 79
          },
          end: {
            line: 97,
            column: 83
          }
        }],
        line: 97
      },
      "22": {
        loc: {
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 98,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 98,
            column: 82
          }
        }, {
          start: {
            line: 98,
            column: 86
          },
          end: {
            line: 98,
            column: 93
          }
        }],
        line: 98
      },
      "23": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "24": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "27": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "28": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "29": {
        loc: {
          start: {
            line: 291,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "30": {
        loc: {
          start: {
            line: 291,
            column: 24
          },
          end: {
            line: 291,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 24
          },
          end: {
            line: 291,
            column: 46
          }
        }, {
          start: {
            line: 291,
            column: 50
          },
          end: {
            line: 291,
            column: 67
          }
        }],
        line: 291
      },
      "31": {
        loc: {
          start: {
            line: 397,
            column: 32
          },
          end: {
            line: 397,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 32
          },
          end: {
            line: 397,
            column: 44
          }
        }, {
          start: {
            line: 397,
            column: 48
          },
          end: {
            line: 397,
            column: 49
          }
        }],
        line: 397
      },
      "32": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        }, {
          start: {
            line: 401,
            column: 17
          },
          end: {
            line: 404,
            column: 13
          }
        }],
        line: 398
      },
      "33": {
        loc: {
          start: {
            line: 401,
            column: 17
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 17
          },
          end: {
            line: 404,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "34": {
        loc: {
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 459,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 459,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "35": {
        loc: {
          start: {
            line: 508,
            column: 12
          },
          end: {
            line: 510,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 12
          },
          end: {
            line: 510,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "36": {
        loc: {
          start: {
            line: 516,
            column: 21
          },
          end: {
            line: 516,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 21
          },
          end: {
            line: 516,
            column: 79
          }
        }, {
          start: {
            line: 516,
            column: 83
          },
          end: {
            line: 516,
            column: 84
          }
        }],
        line: 516
      },
      "37": {
        loc: {
          start: {
            line: 517,
            column: 21
          },
          end: {
            line: 517,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 21
          },
          end: {
            line: 517,
            column: 79
          }
        }, {
          start: {
            line: 517,
            column: 83
          },
          end: {
            line: 517,
            column: 84
          }
        }],
        line: 517
      },
      "38": {
        loc: {
          start: {
            line: 523,
            column: 26
          },
          end: {
            line: 523,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 26
          },
          end: {
            line: 523,
            column: 47
          }
        }, {
          start: {
            line: 523,
            column: 51
          },
          end: {
            line: 523,
            column: 77
          }
        }, {
          start: {
            line: 523,
            column: 81
          },
          end: {
            line: 523,
            column: 82
          }
        }],
        line: 523
      },
      "39": {
        loc: {
          start: {
            line: 524,
            column: 36
          },
          end: {
            line: 524,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 36
          },
          end: {
            line: 524,
            column: 66
          }
        }, {
          start: {
            line: 524,
            column: 70
          },
          end: {
            line: 524,
            column: 71
          }
        }],
        line: 524
      },
      "40": {
        loc: {
          start: {
            line: 524,
            column: 76
          },
          end: {
            line: 524,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 76
          },
          end: {
            line: 524,
            column: 104
          }
        }, {
          start: {
            line: 524,
            column: 108
          },
          end: {
            line: 524,
            column: 109
          }
        }],
        line: 524
      },
      "41": {
        loc: {
          start: {
            line: 540,
            column: 12
          },
          end: {
            line: 542,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 540,
            column: 12
          },
          end: {
            line: 542,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 540
      },
      "42": {
        loc: {
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 565,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 8
          },
          end: {
            line: 565,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 564
      },
      "43": {
        loc: {
          start: {
            line: 579,
            column: 8
          },
          end: {
            line: 580,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 8
          },
          end: {
            line: 580,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "44": {
        loc: {
          start: {
            line: 582,
            column: 33
          },
          end: {
            line: 582,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 582,
            column: 56
          },
          end: {
            line: 582,
            column: 59
          }
        }, {
          start: {
            line: 582,
            column: 62
          },
          end: {
            line: 582,
            column: 107
          }
        }],
        line: 582
      },
      "45": {
        loc: {
          start: {
            line: 593,
            column: 8
          },
          end: {
            line: 594,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 593,
            column: 8
          },
          end: {
            line: 594,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 593
      },
      "46": {
        loc: {
          start: {
            line: 608,
            column: 8
          },
          end: {
            line: 609,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 608,
            column: 8
          },
          end: {
            line: 609,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 608
      },
      "47": {
        loc: {
          start: {
            line: 610,
            column: 33
          },
          end: {
            line: 610,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 610,
            column: 33
          },
          end: {
            line: 610,
            column: 81
          }
        }, {
          start: {
            line: 610,
            column: 85
          },
          end: {
            line: 610,
            column: 86
          }
        }],
        line: 610
      },
      "48": {
        loc: {
          start: {
            line: 611,
            column: 34
          },
          end: {
            line: 611,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 611,
            column: 57
          },
          end: {
            line: 611,
            column: 60
          }
        }, {
          start: {
            line: 611,
            column: 63
          },
          end: {
            line: 611,
            column: 64
          }
        }],
        line: 611
      },
      "49": {
        loc: {
          start: {
            line: 623,
            column: 32
          },
          end: {
            line: 623,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 623,
            column: 32
          },
          end: {
            line: 623,
            column: 44
          }
        }, {
          start: {
            line: 623,
            column: 48
          },
          end: {
            line: 623,
            column: 49
          }
        }],
        line: 623
      },
      "50": {
        loc: {
          start: {
            line: 625,
            column: 12
          },
          end: {
            line: 626,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 12
          },
          end: {
            line: 626,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "51": {
        loc: {
          start: {
            line: 627,
            column: 12
          },
          end: {
            line: 628,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 12
          },
          end: {
            line: 628,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 627
      },
      "52": {
        loc: {
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 630,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 12
          },
          end: {
            line: 630,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 629
      },
      "53": {
        loc: {
          start: {
            line: 631,
            column: 12
          },
          end: {
            line: 632,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 12
          },
          end: {
            line: 632,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "54": {
        loc: {
          start: {
            line: 658,
            column: 8
          },
          end: {
            line: 659,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 658,
            column: 8
          },
          end: {
            line: 659,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 658
      },
      "55": {
        loc: {
          start: {
            line: 670,
            column: 8
          },
          end: {
            line: 671,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 670,
            column: 8
          },
          end: {
            line: 671,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 670
      },
      "56": {
        loc: {
          start: {
            line: 686,
            column: 12
          },
          end: {
            line: 698,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 686,
            column: 12
          },
          end: {
            line: 698,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 686
      },
      "57": {
        loc: {
          start: {
            line: 686,
            column: 16
          },
          end: {
            line: 686,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 686,
            column: 16
          },
          end: {
            line: 686,
            column: 27
          }
        }, {
          start: {
            line: 686,
            column: 31
          },
          end: {
            line: 686,
            column: 59
          }
        }],
        line: 686
      },
      "58": {
        loc: {
          start: {
            line: 700,
            column: 12
          },
          end: {
            line: 712,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 700,
            column: 12
          },
          end: {
            line: 712,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 700
      },
      "59": {
        loc: {
          start: {
            line: 700,
            column: 16
          },
          end: {
            line: 700,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 700,
            column: 16
          },
          end: {
            line: 700,
            column: 27
          }
        }, {
          start: {
            line: 700,
            column: 31
          },
          end: {
            line: 700,
            column: 59
          }
        }],
        line: 700
      },
      "60": {
        loc: {
          start: {
            line: 714,
            column: 12
          },
          end: {
            line: 727,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 714,
            column: 12
          },
          end: {
            line: 727,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 714
      },
      "61": {
        loc: {
          start: {
            line: 714,
            column: 16
          },
          end: {
            line: 714,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 714,
            column: 16
          },
          end: {
            line: 714,
            column: 27
          }
        }, {
          start: {
            line: 714,
            column: 31
          },
          end: {
            line: 714,
            column: 59
          }
        }],
        line: 714
      },
      "62": {
        loc: {
          start: {
            line: 729,
            column: 12
          },
          end: {
            line: 742,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 729,
            column: 12
          },
          end: {
            line: 742,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 729
      },
      "63": {
        loc: {
          start: {
            line: 729,
            column: 16
          },
          end: {
            line: 729,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 729,
            column: 16
          },
          end: {
            line: 729,
            column: 33
          }
        }, {
          start: {
            line: 729,
            column: 37
          },
          end: {
            line: 729,
            column: 72
          }
        }],
        line: 729
      },
      "64": {
        loc: {
          start: {
            line: 758,
            column: 32
          },
          end: {
            line: 758,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 758,
            column: 32
          },
          end: {
            line: 758,
            column: 44
          }
        }, {
          start: {
            line: 758,
            column: 48
          },
          end: {
            line: 758,
            column: 49
          }
        }],
        line: 758
      },
      "65": {
        loc: {
          start: {
            line: 763,
            column: 12
          },
          end: {
            line: 771,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 763,
            column: 12
          },
          end: {
            line: 771,
            column: 13
          }
        }, {
          start: {
            line: 768,
            column: 17
          },
          end: {
            line: 771,
            column: 13
          }
        }],
        line: 763
      },
      "66": {
        loc: {
          start: {
            line: 768,
            column: 17
          },
          end: {
            line: 771,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 768,
            column: 17
          },
          end: {
            line: 771,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 768
      },
      "67": {
        loc: {
          start: {
            line: 801,
            column: 15
          },
          end: {
            line: 801,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 801,
            column: 15
          },
          end: {
            line: 801,
            column: 74
          }
        }, {
          start: {
            line: 801,
            column: 78
          },
          end: {
            line: 801,
            column: 82
          }
        }],
        line: 801
      },
      "68": {
        loc: {
          start: {
            line: 807,
            column: 8
          },
          end: {
            line: 811,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 807,
            column: 8
          },
          end: {
            line: 811,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 807
      },
      "69": {
        loc: {
          start: {
            line: 824,
            column: 25
          },
          end: {
            line: 824,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 824,
            column: 25
          },
          end: {
            line: 824,
            column: 52
          }
        }, {
          start: {
            line: 824,
            column: 56
          },
          end: {
            line: 824,
            column: 60
          }
        }],
        line: 824
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance-optimizer.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance-optimizer.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - SYSTEM PERFORMANCE OPTIMIZER\r\n * =============================================================================\r\n * \r\n * This service provides comprehensive performance optimization for Intel NUC\r\n * systems running the AI crypto trading agent. It implements low-latency\r\n * trading optimizations, thermal management, and resource allocation.\r\n * \r\n * CRITICAL PERFORMANCE NOTICE:\r\n * This system optimizes hardware performance for trading operations. Poor\r\n * performance could impact trading decisions and result in financial losses.\r\n * All optimizations are continuously monitored and adjusted.\r\n * \r\n * Hardware Specifications:\r\n * - Intel NUC with i5 CPU\r\n * - 12GB RAM\r\n * - 256GB M.2 SSD\r\n * - Wireless and Gigabit Ethernet\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport * as si from 'systeminformation';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\nimport { SystemMonitor, CPUMetrics, RAMMetrics, SSDMetrics } from './system-monitor';\r\n\r\n/**\r\n * Interface for performance optimization configuration\r\n */\r\nexport interface PerformanceConfig {\r\n  /** Enable CPU performance optimization */\r\n  enableCPUOptimization: boolean;\r\n  /** Enable memory optimization */\r\n  enableMemoryOptimization: boolean;\r\n  /** Enable I/O optimization */\r\n  enableIOOptimization: boolean;\r\n  /** Enable network optimization */\r\n  enableNetworkOptimization: boolean;\r\n  /** Enable thermal management */\r\n  enableThermalManagement: boolean;\r\n  /** CPU governor mode */\r\n  cpuGovernor: 'performance' | 'powersave' | 'ondemand' | 'conservative';\r\n  /** Memory swappiness (0-100) */\r\n  memorySwappiness: number;\r\n  /** I/O scheduler */\r\n  ioScheduler: 'noop' | 'deadline' | 'cfq' | 'mq-deadline';\r\n  /** Network buffer sizes */\r\n  networkBufferSize: number;\r\n  /** Thermal throttling threshold */\r\n  thermalThrottleTemp: number;\r\n  /** Performance monitoring interval */\r\n  monitoringIntervalMs: number;\r\n}\r\n\r\n/**\r\n * Interface for performance metrics\r\n */\r\nexport interface PerformanceMetrics {\r\n  /** Overall performance score (0-100) */\r\n  overallScore: number;\r\n  /** CPU performance score */\r\n  cpuScore: number;\r\n  /** Memory performance score */\r\n  memoryScore: number;\r\n  /** I/O performance score */\r\n  ioScore: number;\r\n  /** Network performance score */\r\n  networkScore: number;\r\n  /** Thermal performance score */\r\n  thermalScore: number;\r\n  /** Latency metrics */\r\n  latency: {\r\n    /** Average system latency in microseconds */\r\n    average: number;\r\n    /** Maximum system latency in microseconds */\r\n    maximum: number;\r\n    /** 95th percentile latency */\r\n    p95: number;\r\n    /** 99th percentile latency */\r\n    p99: number;\r\n  };\r\n  /** Throughput metrics */\r\n  throughput: {\r\n    /** CPU operations per second */\r\n    cpuOps: number;\r\n    /** Memory bandwidth in MB/s */\r\n    memoryBandwidth: number;\r\n    /** Disk I/O operations per second */\r\n    diskIOPS: number;\r\n    /** Network throughput in Mbps */\r\n    networkThroughput: number;\r\n  };\r\n  /** Last measurement timestamp */\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Interface for optimization recommendation\r\n */\r\nexport interface OptimizationRecommendation {\r\n  /** Recommendation ID */\r\n  id: string;\r\n  /** Recommendation type */\r\n  type: 'CPU' | 'MEMORY' | 'IO' | 'NETWORK' | 'THERMAL';\r\n  /** Priority level */\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Recommendation title */\r\n  title: string;\r\n  /** Detailed description */\r\n  description: string;\r\n  /** Expected performance improvement */\r\n  expectedImprovement: number;\r\n  /** Implementation complexity */\r\n  complexity: 'EASY' | 'MEDIUM' | 'HARD';\r\n  /** Auto-apply capability */\r\n  canAutoApply: boolean;\r\n  /** Implementation command/action */\r\n  implementation?: string;\r\n  /** Timestamp */\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Interface for thermal management status\r\n */\r\nexport interface ThermalStatus {\r\n  /** Current CPU temperature */\r\n  currentTemp: number;\r\n  /** Maximum safe temperature */\r\n  maxSafeTemp: number;\r\n  /** Thermal throttling active */\r\n  isThrottling: boolean;\r\n  /** Cooling effectiveness (0-100) */\r\n  coolingEffectiveness: number;\r\n  /** Thermal alerts */\r\n  alerts: string[];\r\n  /** Recommended actions */\r\n  recommendations: string[];\r\n}\r\n\r\n/**\r\n * System Performance Optimizer\r\n * Provides comprehensive performance optimization for trading operations\r\n */\r\nexport class PerformanceOptimizer {\r\n  private systemMonitor: SystemMonitor;\r\n  private config: PerformanceConfig;\r\n  private optimizationInterval: NodeJS.Timeout | null = null;\r\n  private performanceHistory: PerformanceMetrics[] = [];\r\n  private latencyMeasurements: number[] = [];\r\n  private isOptimizing: boolean = false;\r\n\r\n  constructor(systemMonitor: SystemMonitor) {\r\n    this.systemMonitor = systemMonitor;\r\n    this.config = this.loadConfiguration();\r\n    logger.info('\u26A1 Performance Optimizer initializing...');\r\n  }\r\n\r\n  /**\r\n   * Load performance optimization configuration\r\n   * \r\n   * @returns PerformanceConfig Configuration object\r\n   */\r\n  private loadConfiguration(): PerformanceConfig {\r\n    return {\r\n      enableCPUOptimization: process.env.ENABLE_CPU_OPTIMIZATION === 'true',\r\n      enableMemoryOptimization: process.env.ENABLE_MEMORY_OPTIMIZATION === 'true',\r\n      enableIOOptimization: process.env.ENABLE_IO_OPTIMIZATION === 'true',\r\n      enableNetworkOptimization: process.env.ENABLE_NETWORK_OPTIMIZATION === 'true',\r\n      enableThermalManagement: process.env.ENABLE_THERMAL_MANAGEMENT !== 'false',\r\n      cpuGovernor: (process.env.CPU_GOVERNOR as any) || 'performance',\r\n      memorySwappiness: parseInt(process.env.MEMORY_SWAPPINESS || '10'),\r\n      ioScheduler: (process.env.IO_SCHEDULER as any) || 'mq-deadline',\r\n      networkBufferSize: parseInt(process.env.NETWORK_BUFFER_SIZE || '16777216'),\r\n      thermalThrottleTemp: parseInt(process.env.THERMAL_THROTTLE_TEMP || '75'),\r\n      monitoringIntervalMs: parseInt(process.env.PERF_MONITORING_INTERVAL_MS || '60000')\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize performance optimization\r\n   * Sets up all optimization systems and starts monitoring\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async initializePerformanceOptimization(): Promise<void> {\r\n    try {\r\n      logger.info('\u26A1 Initializing performance optimization...');\r\n\r\n      // Apply initial optimizations\r\n      await this.applyInitialOptimizations();\r\n\r\n      // Start performance monitoring\r\n      await this.startPerformanceMonitoring();\r\n\r\n      // Set up thermal management\r\n      await this.setupThermalManagement();\r\n\r\n      logger.info('\u2705 Performance optimization initialized successfully');\r\n\r\n      // Audit log\r\n      await auditService.createAuditEntry({\r\n        auditId: `perf_opt_init_${Date.now()}`,\r\n        eventType: 'PERFORMANCE_OPTIMIZATION_INIT',\r\n        actor: 'SYSTEM',\r\n        resource: 'PERFORMANCE_OPTIMIZER',\r\n        action: 'INITIALIZE',\r\n        result: 'SUCCESS',\r\n        timestamp: new Date(),\r\n        auditData: { config: this.config }\r\n      });\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize performance optimization:', error);\r\n      throw new Error('Performance optimization initialization failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply initial system optimizations\r\n   * Configures system for optimal trading performance\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async applyInitialOptimizations(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD27 Applying initial system optimizations...');\r\n\r\n      const optimizations: Promise<void>[] = [];\r\n\r\n      // CPU optimizations\r\n      if (this.config.enableCPUOptimization) {\r\n        optimizations.push(this.optimizeCPUPerformance());\r\n      }\r\n\r\n      // Memory optimizations\r\n      if (this.config.enableMemoryOptimization) {\r\n        optimizations.push(this.optimizeMemoryPerformance());\r\n      }\r\n\r\n      // I/O optimizations\r\n      if (this.config.enableIOOptimization) {\r\n        optimizations.push(this.optimizeIOPerformance());\r\n      }\r\n\r\n      // Network optimizations\r\n      if (this.config.enableNetworkOptimization) {\r\n        optimizations.push(this.optimizeNetworkPerformance());\r\n      }\r\n\r\n      // Apply all optimizations concurrently\r\n      await Promise.all(optimizations);\r\n\r\n      logger.info('\u2705 Initial optimizations applied successfully');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to apply initial optimizations:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimize CPU performance for low-latency trading\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async optimizeCPUPerformance(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD27 Optimizing CPU performance...');\r\n\r\n      // Set CPU governor to performance mode\r\n      try {\r\n        const { execSync } = await import('child_process');\r\n        execSync(`echo ${this.config.cpuGovernor} | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor`, \r\n          { stdio: 'pipe' });\r\n        logger.info(`\u2705 CPU governor set to: ${this.config.cpuGovernor}`);\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not set CPU governor (may require sudo):', error);\r\n      }\r\n\r\n      // Disable CPU idle states for consistent performance\r\n      try {\r\n        const { execSync } = await import('child_process');\r\n        execSync('sudo cpupower idle-set -D 0', { stdio: 'pipe' });\r\n        logger.info('\u2705 CPU idle states optimized');\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not optimize CPU idle states:', error);\r\n      }\r\n\r\n      // Set CPU affinity for trading processes\r\n      await this.setCPUAffinity();\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C CPU optimization failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set CPU affinity for optimal performance\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async setCPUAffinity(): Promise<void> {\r\n    try {\r\n      const cpuInfo = await si.cpu();\r\n      const coreCount = cpuInfo.cores;\r\n\r\n      if (coreCount >= 4) {\r\n        // Reserve cores 0-1 for trading operations, 2-3 for system\r\n        process.env.TRADING_CPU_CORES = '0,1';\r\n        process.env.SYSTEM_CPU_CORES = '2,3';\r\n        logger.info('\u2705 CPU affinity configured for trading optimization');\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.warn('\u26A0\uFE0F Could not set CPU affinity:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimize memory performance\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async optimizeMemoryPerformance(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD27 Optimizing memory performance...');\r\n\r\n      // Set memory swappiness for trading workload\r\n      try {\r\n        const { execSync } = await import('child_process');\r\n        execSync(`echo ${this.config.memorySwappiness} | sudo tee /proc/sys/vm/swappiness`, \r\n          { stdio: 'pipe' });\r\n        logger.info(`\u2705 Memory swappiness set to: ${this.config.memorySwappiness}`);\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not set memory swappiness:', error);\r\n      }\r\n\r\n      // Optimize memory allocation\r\n      try {\r\n        const { execSync } = await import('child_process');\r\n        // Reduce memory overcommit for stability\r\n        execSync('echo 2 | sudo tee /proc/sys/vm/overcommit_memory', { stdio: 'pipe' });\r\n        // Optimize dirty page writeback\r\n        execSync('echo 5 | sudo tee /proc/sys/vm/dirty_background_ratio', { stdio: 'pipe' });\r\n        execSync('echo 10 | sudo tee /proc/sys/vm/dirty_ratio', { stdio: 'pipe' });\r\n        logger.info('\u2705 Memory allocation optimized');\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not optimize memory allocation:', error);\r\n      }\r\n\r\n      // Configure Node.js memory settings\r\n      this.optimizeNodeJSMemory();\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Memory optimization failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimize Node.js memory settings\r\n   */\r\n  private optimizeNodeJSMemory(): void {\r\n    try {\r\n      // Set optimal heap sizes for trading application\r\n      const totalMemoryGB = Math.floor(require('os').totalmem() / 1024 / 1024 / 1024);\r\n      const maxHeapSize = Math.floor(totalMemoryGB * 0.6); // Use 60% of total memory\r\n\r\n      process.env.NODE_OPTIONS = `--max-old-space-size=${maxHeapSize * 1024}`;\r\n      \r\n      // Enable garbage collection optimizations\r\n      if (process.env.NODE_ENV === 'production') {\r\n        process.env.NODE_OPTIONS += ' --optimize-for-size';\r\n      }\r\n\r\n      logger.info(`\u2705 Node.js memory optimized: ${maxHeapSize}GB heap`);\r\n\r\n    } catch (error) {\r\n      logger.warn('\u26A0\uFE0F Could not optimize Node.js memory:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimize I/O performance\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async optimizeIOPerformance(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD27 Optimizing I/O performance...');\r\n\r\n      // Set I/O scheduler for SSD optimization\r\n      try {\r\n        const { execSync } = await import('child_process');\r\n        const blockDevices = await si.blockDevices();\r\n        \r\n        for (const device of blockDevices) {\r\n          if (device.type === 'disk' && !device.removable) {\r\n            try {\r\n              execSync(`echo ${this.config.ioScheduler} | sudo tee /sys/block/${device.name}/queue/scheduler`, \r\n                { stdio: 'pipe' });\r\n              logger.info(`\u2705 I/O scheduler set to ${this.config.ioScheduler} for ${device.name}`);\r\n            } catch (error) {\r\n              logger.warn(`\u26A0\uFE0F Could not set I/O scheduler for ${device.name}:`, error);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not optimize I/O scheduler:', error);\r\n      }\r\n\r\n      // Optimize file system parameters\r\n      await this.optimizeFileSystem();\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C I/O optimization failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimize file system parameters\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async optimizeFileSystem(): Promise<void> {\r\n    try {\r\n      const { execSync } = await import('child_process');\r\n\r\n      // Optimize read-ahead for sequential I/O\r\n      execSync('sudo blockdev --setra 256 /dev/sda', { stdio: 'pipe' });\r\n      \r\n      // Optimize file system cache\r\n      execSync('echo 1 | sudo tee /proc/sys/vm/vfs_cache_pressure', { stdio: 'pipe' });\r\n      \r\n      logger.info('\u2705 File system optimized');\r\n\r\n    } catch (error) {\r\n      logger.warn('\u26A0\uFE0F Could not optimize file system:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Optimize network performance\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async optimizeNetworkPerformance(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD27 Optimizing network performance...');\r\n\r\n      const { execSync } = await import('child_process');\r\n\r\n      // Optimize TCP settings for low latency\r\n      const tcpOptimizations = [\r\n        'net.core.rmem_max = 16777216',\r\n        'net.core.wmem_max = 16777216',\r\n        'net.ipv4.tcp_rmem = 4096 87380 16777216',\r\n        'net.ipv4.tcp_wmem = 4096 65536 16777216',\r\n        'net.ipv4.tcp_congestion_control = bbr',\r\n        'net.ipv4.tcp_fastopen = 3',\r\n        'net.ipv4.tcp_low_latency = 1',\r\n        'net.core.netdev_max_backlog = 5000'\r\n      ];\r\n\r\n      for (const optimization of tcpOptimizations) {\r\n        try {\r\n          execSync(`echo \"${optimization}\" | sudo tee -a /etc/sysctl.conf`, { stdio: 'pipe' });\r\n        } catch (error) {\r\n          logger.warn(`\u26A0\uFE0F Could not apply network optimization: ${optimization}`);\r\n        }\r\n      }\r\n\r\n      // Apply sysctl changes\r\n      try {\r\n        execSync('sudo sysctl -p', { stdio: 'pipe' });\r\n        logger.info('\u2705 Network performance optimized');\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not apply sysctl changes:', error);\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Network optimization failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup thermal management\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async setupThermalManagement(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83C\uDF21\uFE0F Setting up thermal management...');\r\n\r\n      // Start thermal monitoring\r\n      setInterval(async () => {\r\n        await this.monitorThermalConditions();\r\n      }, 10000); // Check every 10 seconds\r\n\r\n      logger.info('\u2705 Thermal management setup complete');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Thermal management setup failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Monitor thermal conditions and apply throttling if needed\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async monitorThermalConditions(): Promise<void> {\r\n    try {\r\n      const cpuTemp = await si.cpuTemperature();\r\n      const currentTemp = cpuTemp.main || 0;\r\n\r\n      if (currentTemp >= this.config.thermalThrottleTemp) {\r\n        await this.applyThermalThrottling(currentTemp);\r\n      } else if (currentTemp < this.config.thermalThrottleTemp - 5) {\r\n        // Remove throttling if temperature is safe\r\n        await this.removeThermalThrottling();\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Thermal monitoring failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply thermal throttling to prevent overheating\r\n   * \r\n   * @param currentTemp Current CPU temperature\r\n   * @returns Promise<void>\r\n   */\r\n  private async applyThermalThrottling(currentTemp: number): Promise<void> {\r\n    try {\r\n      logger.warn(`\uD83C\uDF21\uFE0F Applying thermal throttling - CPU temp: ${currentTemp}\xB0C`);\r\n\r\n      // Reduce CPU frequency\r\n      const { execSync } = await import('child_process');\r\n      try {\r\n        execSync('echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor', \r\n          { stdio: 'pipe' });\r\n      } catch (error) {\r\n        logger.warn('\u26A0\uFE0F Could not apply CPU throttling:', error);\r\n      }\r\n\r\n      // Audit critical thermal event\r\n      await auditService.createAuditEntry({\r\n        auditId: `thermal_throttle_${Date.now()}`,\r\n        eventType: 'THERMAL_THROTTLING_APPLIED',\r\n        actor: 'PERFORMANCE_OPTIMIZER',\r\n        resource: 'CPU_THERMAL',\r\n        action: 'APPLY_THROTTLING',\r\n        result: 'SUCCESS',\r\n        timestamp: new Date(),\r\n        auditData: { currentTemp, threshold: this.config.thermalThrottleTemp }\r\n      });\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to apply thermal throttling:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove thermal throttling when temperature is safe\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async removeThermalThrottling(): Promise<void> {\r\n    try {\r\n      if (this.config.enableCPUOptimization) {\r\n        const { execSync } = await import('child_process');\r\n        try {\r\n          execSync(`echo ${this.config.cpuGovernor} | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor`, \r\n            { stdio: 'pipe' });\r\n          logger.info('\u2705 Thermal throttling removed - normal performance restored');\r\n        } catch (error) {\r\n          logger.warn('\u26A0\uFE0F Could not remove CPU throttling:', error);\r\n        }\r\n      }\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to remove thermal throttling:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start performance monitoring\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async startPerformanceMonitoring(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDCCA Starting performance monitoring...');\r\n\r\n      this.optimizationInterval = setInterval(async () => {\r\n        try {\r\n          await this.measurePerformance();\r\n          await this.generateOptimizationRecommendations();\r\n        } catch (error) {\r\n          logger.error('\u274C Performance monitoring error:', error);\r\n        }\r\n      }, this.config.monitoringIntervalMs);\r\n\r\n      logger.info('\u2705 Performance monitoring started');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to start performance monitoring:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Measure system performance metrics\r\n   * \r\n   * @returns Promise<PerformanceMetrics>\r\n   */\r\n  public async measurePerformance(): Promise<PerformanceMetrics> {\r\n    try {\r\n      const startTime = process.hrtime.bigint();\r\n      \r\n      // Get current system metrics\r\n      const metrics = this.systemMonitor.getCurrentMetrics();\r\n      \r\n      // Calculate performance scores\r\n      const cpuScore = this.calculateCPUScore(metrics.cpu);\r\n      const memoryScore = this.calculateMemoryScore(metrics.ram);\r\n      const ioScore = this.calculateIOScore(metrics.ssd);\r\n      const networkScore = this.calculateNetworkScore(metrics.network);\r\n      const thermalScore = await this.calculateThermalScore();\r\n\r\n      // Measure latency\r\n      const latency = await this.measureSystemLatency();\r\n      this.latencyMeasurements.push(latency);\r\n      \r\n      // Keep only last 1000 measurements\r\n      if (this.latencyMeasurements.length > 1000) {\r\n        this.latencyMeasurements = this.latencyMeasurements.slice(-1000);\r\n      }\r\n\r\n      // Calculate latency statistics\r\n      const sortedLatencies = [...this.latencyMeasurements].sort((a, b) => a - b);\r\n      const latencyStats = {\r\n        average: this.latencyMeasurements.reduce((a, b) => a + b, 0) / this.latencyMeasurements.length,\r\n        maximum: Math.max(...this.latencyMeasurements),\r\n        p95: sortedLatencies[Math.floor(sortedLatencies.length * 0.95)] || 0,\r\n        p99: sortedLatencies[Math.floor(sortedLatencies.length * 0.99)] || 0\r\n      };\r\n\r\n      // Calculate throughput metrics\r\n      const throughput = {\r\n        cpuOps: this.calculateCPUThroughput(metrics.cpu),\r\n        memoryBandwidth: this.calculateMemoryBandwidth(metrics.ram),\r\n        diskIOPS: metrics.ssd?.readIOPS || 0 + metrics.ssd?.writeIOPS || 0,\r\n        networkThroughput: (metrics.network?.downloadSpeed || 0) + (metrics.network?.uploadSpeed || 0)\r\n      };\r\n\r\n      const overallScore = Math.round((cpuScore + memoryScore + ioScore + networkScore + thermalScore) / 5);\r\n\r\n      const performanceMetrics: PerformanceMetrics = {\r\n        overallScore,\r\n        cpuScore,\r\n        memoryScore,\r\n        ioScore,\r\n        networkScore,\r\n        thermalScore,\r\n        latency: latencyStats,\r\n        throughput,\r\n        timestamp: new Date()\r\n      };\r\n\r\n      // Store in history\r\n      this.performanceHistory.push(performanceMetrics);\r\n      if (this.performanceHistory.length > 100) {\r\n        this.performanceHistory = this.performanceHistory.slice(-100);\r\n      }\r\n\r\n      const endTime = process.hrtime.bigint();\r\n      const measurementTime = Number(endTime - startTime) / 1000000; // Convert to milliseconds\r\n\r\n      logger.debug('\uD83D\uDCCA Performance measurement completed', {\r\n        overallScore,\r\n        measurementTime: `${measurementTime.toFixed(2)}ms`,\r\n        latency: latencyStats\r\n      });\r\n\r\n      return performanceMetrics;\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Performance measurement failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate CPU performance score\r\n   * \r\n   * @param cpu CPU metrics\r\n   * @returns number Performance score (0-100)\r\n   */\r\n  private calculateCPUScore(cpu?: CPUMetrics): number {\r\n    if (!cpu) return 0;\r\n\r\n    // Lower utilization and temperature = higher score\r\n    const utilizationScore = Math.max(0, 100 - cpu.utilization);\r\n    const temperatureScore = Math.max(0, 100 - (cpu.temperature / 80) * 100);\r\n    const frequencyScore = Math.min(100, (cpu.frequency / 3000) * 100); // Assume 3GHz target\r\n\r\n    return Math.round((utilizationScore + temperatureScore + frequencyScore) / 3);\r\n  }\r\n\r\n  /**\r\n   * Calculate memory performance score\r\n   * \r\n   * @param ram RAM metrics\r\n   * @returns number Performance score (0-100)\r\n   */\r\n  private calculateMemoryScore(ram?: RAMMetrics): number {\r\n    if (!ram) return 0;\r\n\r\n    // Lower utilization = higher score, but some usage is expected\r\n    const utilizationScore = ram.utilization < 50 ? 100 : Math.max(0, 100 - (ram.utilization - 50) * 2);\r\n    const availabilityScore = Math.min(100, (ram.available / ram.total) * 200);\r\n\r\n    return Math.round((utilizationScore + availabilityScore) / 2);\r\n  }\r\n\r\n  /**\r\n   * Calculate I/O performance score\r\n   * \r\n   * @param ssd SSD metrics\r\n   * @returns number Performance score (0-100)\r\n   */\r\n  private calculateIOScore(ssd?: SSDMetrics): number {\r\n    if (!ssd) return 0;\r\n\r\n    // Higher throughput and lower utilization = higher score\r\n    const utilizationScore = Math.max(0, 100 - ssd.utilization);\r\n    const throughputScore = Math.min(100, ((ssd.readThroughput + ssd.writeThroughput) / 500) * 100);\r\n    const healthScore = ssd.health;\r\n\r\n    return Math.round((utilizationScore + throughputScore + healthScore) / 3);\r\n  }\r\n\r\n  /**\r\n   * Calculate network performance score\r\n   * \r\n   * @param network Network metrics\r\n   * @returns number Performance score (0-100)\r\n   */\r\n  private calculateNetworkScore(network?: any): number {\r\n    if (!network) return 0;\r\n\r\n    const activeInterfaces = network.interfaces?.filter((i: any) => i.isUp).length || 0;\r\n    const connectivityScore = activeInterfaces > 0 ? 100 : 0;\r\n    const speedScore = Math.min(100, ((network.downloadSpeed + network.uploadSpeed) / 100) * 100);\r\n\r\n    return Math.round((connectivityScore + speedScore) / 2);\r\n  }\r\n\r\n  /**\r\n   * Calculate thermal performance score\r\n   * \r\n   * @returns Promise<number> Performance score (0-100)\r\n   */\r\n  private async calculateThermalScore(): Promise<number> {\r\n    try {\r\n      const cpuTemp = await si.cpuTemperature();\r\n      const currentTemp = cpuTemp.main || 0;\r\n\r\n      // Lower temperature = higher score\r\n      if (currentTemp < 50) return 100;\r\n      if (currentTemp < 60) return 90;\r\n      if (currentTemp < 70) return 70;\r\n      if (currentTemp < 80) return 50;\r\n      return 20;\r\n\r\n    } catch (error) {\r\n      return 50; // Default score if measurement fails\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Measure system latency\r\n   * \r\n   * @returns Promise<number> Latency in microseconds\r\n   */\r\n  private async measureSystemLatency(): Promise<number> {\r\n    const start = process.hrtime.bigint();\r\n    \r\n    // Perform a small I/O operation to measure system responsiveness\r\n    await new Promise(resolve => setImmediate(resolve));\r\n    \r\n    const end = process.hrtime.bigint();\r\n    return Number(end - start) / 1000; // Convert to microseconds\r\n  }\r\n\r\n  /**\r\n   * Calculate CPU throughput\r\n   * \r\n   * @param cpu CPU metrics\r\n   * @returns number Operations per second\r\n   */\r\n  private calculateCPUThroughput(cpu?: CPUMetrics): number {\r\n    if (!cpu) return 0;\r\n    \r\n    // Estimate based on frequency and utilization\r\n    return Math.round((cpu.frequency * cpu.cores.logical * (cpu.utilization / 100)) / 1000);\r\n  }\r\n\r\n  /**\r\n   * Calculate memory bandwidth\r\n   * \r\n   * @param ram RAM metrics\r\n   * @returns number Bandwidth in MB/s\r\n   */\r\n  private calculateMemoryBandwidth(ram?: RAMMetrics): number {\r\n    if (!ram) return 0;\r\n    \r\n    // Estimate based on memory usage patterns\r\n    return Math.round((ram.used / ram.total) * 25600); // Assume DDR4-3200 theoretical max\r\n  }\r\n\r\n  /**\r\n   * Generate optimization recommendations\r\n   * \r\n   * @returns Promise<OptimizationRecommendation[]>\r\n   */\r\n  public async generateOptimizationRecommendations(): Promise<OptimizationRecommendation[]> {\r\n    try {\r\n      const recommendations: OptimizationRecommendation[] = [];\r\n      const metrics = this.systemMonitor.getCurrentMetrics();\r\n      const latestPerformance = this.performanceHistory[this.performanceHistory.length - 1];\r\n\r\n      // CPU recommendations\r\n      if (metrics.cpu && metrics.cpu.utilization > 80) {\r\n        recommendations.push({\r\n          id: `cpu_high_util_${Date.now()}`,\r\n          type: 'CPU',\r\n          priority: 'HIGH',\r\n          title: 'High CPU Utilization',\r\n          description: `CPU utilization is ${metrics.cpu.utilization}%. Consider reducing background processes or upgrading CPU.`,\r\n          expectedImprovement: 15,\r\n          complexity: 'MEDIUM',\r\n          canAutoApply: false,\r\n          timestamp: new Date()\r\n        });\r\n      }\r\n\r\n      // Memory recommendations\r\n      if (metrics.ram && metrics.ram.utilization > 85) {\r\n        recommendations.push({\r\n          id: `memory_high_util_${Date.now()}`,\r\n          type: 'MEMORY',\r\n          priority: 'HIGH',\r\n          title: 'High Memory Utilization',\r\n          description: `Memory utilization is ${metrics.ram.utilization}%. Consider adding more RAM or optimizing memory usage.`,\r\n          expectedImprovement: 20,\r\n          complexity: 'EASY',\r\n          canAutoApply: false,\r\n          timestamp: new Date()\r\n        });\r\n      }\r\n\r\n      // Thermal recommendations\r\n      if (metrics.cpu && metrics.cpu.temperature > 70) {\r\n        recommendations.push({\r\n          id: `thermal_high_temp_${Date.now()}`,\r\n          type: 'THERMAL',\r\n          priority: 'CRITICAL',\r\n          title: 'High CPU Temperature',\r\n          description: `CPU temperature is ${metrics.cpu.temperature}\xB0C. Check cooling system and ventilation.`,\r\n          expectedImprovement: 25,\r\n          complexity: 'MEDIUM',\r\n          canAutoApply: true,\r\n          implementation: 'apply_thermal_throttling',\r\n          timestamp: new Date()\r\n        });\r\n      }\r\n\r\n      // Performance recommendations\r\n      if (latestPerformance && latestPerformance.overallScore < 70) {\r\n        recommendations.push({\r\n          id: `perf_low_score_${Date.now()}`,\r\n          type: 'CPU',\r\n          priority: 'MEDIUM',\r\n          title: 'Low Performance Score',\r\n          description: `Overall performance score is ${latestPerformance.overallScore}%. System optimization recommended.`,\r\n          expectedImprovement: 30,\r\n          complexity: 'MEDIUM',\r\n          canAutoApply: true,\r\n          implementation: 'reapply_optimizations',\r\n          timestamp: new Date()\r\n        });\r\n      }\r\n\r\n      return recommendations;\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to generate optimization recommendations:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current thermal status\r\n   * \r\n   * @returns Promise<ThermalStatus>\r\n   */\r\n  public async getThermalStatus(): Promise<ThermalStatus> {\r\n    try {\r\n      const cpuTemp = await si.cpuTemperature();\r\n      const currentTemp = cpuTemp.main || 0;\r\n      const maxSafeTemp = this.config.thermalThrottleTemp;\r\n      const isThrottling = currentTemp >= maxSafeTemp;\r\n\r\n      const alerts: string[] = [];\r\n      const recommendations: string[] = [];\r\n\r\n      if (currentTemp > 80) {\r\n        alerts.push('Critical temperature - immediate action required');\r\n        recommendations.push('Check system cooling and ventilation');\r\n        recommendations.push('Reduce system load');\r\n      } else if (currentTemp > 70) {\r\n        alerts.push('High temperature - monitoring required');\r\n        recommendations.push('Verify cooling system operation');\r\n      }\r\n\r\n      const coolingEffectiveness = Math.max(0, 100 - ((currentTemp - 30) / 50) * 100);\r\n\r\n      return {\r\n        currentTemp,\r\n        maxSafeTemp,\r\n        isThrottling,\r\n        coolingEffectiveness: Math.round(coolingEffectiveness),\r\n        alerts,\r\n        recommendations\r\n      };\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to get thermal status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get performance history\r\n   * \r\n   * @returns PerformanceMetrics[] Performance history\r\n   */\r\n  public getPerformanceHistory(): PerformanceMetrics[] {\r\n    return [...this.performanceHistory];\r\n  }\r\n\r\n  /**\r\n   * Get current performance metrics\r\n   * \r\n   * @returns PerformanceMetrics | null Current metrics\r\n   */\r\n  public getCurrentPerformanceMetrics(): PerformanceMetrics | null {\r\n    return this.performanceHistory[this.performanceHistory.length - 1] || null;\r\n  }\r\n\r\n  /**\r\n   * Stop performance optimization\r\n   */\r\n  public stopPerformanceOptimization(): void {\r\n    if (this.optimizationInterval) {\r\n      clearInterval(this.optimizationInterval);\r\n      this.optimizationInterval = null;\r\n      logger.info('\uD83D\uDED1 Performance optimization stopped');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get optimizer status\r\n   * \r\n   * @returns Object containing status information\r\n   */\r\n  public getStatus(): {\r\n    isOptimizing: boolean;\r\n    config: PerformanceConfig;\r\n    performanceHistory: number;\r\n    latestScore: number | null;\r\n    timestamp: number;\r\n  } {\r\n    const latestMetrics = this.getCurrentPerformanceMetrics();\r\n    \r\n    return {\r\n      isOptimizing: this.optimizationInterval !== null,\r\n      config: this.config,\r\n      performanceHistory: this.performanceHistory.length,\r\n      latestScore: latestMetrics?.overallScore || null,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\n// =============================================================================\r\n// PERFORMANCE OPTIMIZATION NOTES\r\n// =============================================================================\r\n// 1. Low-latency optimizations for high-frequency trading operations\r\n// 2. Thermal management to prevent performance degradation\r\n// 3. Resource allocation optimization for consistent performance\r\n// 4. Real-time performance monitoring and adjustment\r\n// 5. Automatic optimization recommendations and implementation\r\n// 6. System health scoring for performance assessment\r\n// 7. Comprehensive logging and audit trails for all optimizations\r\n// 8. Hardware-specific optimizations for Intel NUC platform\r\n// ============================================================================="],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "10fb4e77373aa20a10bfa50a73a981f4705270c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cf8807yt9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cf8807yt9();
var __createBinding =
/* istanbul ignore next */
(cov_2cf8807yt9().s[0]++,
/* istanbul ignore next */
(cov_2cf8807yt9().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2cf8807yt9().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2cf8807yt9().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2cf8807yt9().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2cf8807yt9().f[0]++;
  cov_2cf8807yt9().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2cf8807yt9().b[2][0]++;
    cov_2cf8807yt9().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2cf8807yt9().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2cf8807yt9().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2cf8807yt9().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2cf8807yt9().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2cf8807yt9().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2cf8807yt9().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2cf8807yt9().b[5][1]++,
  /* istanbul ignore next */
  (cov_2cf8807yt9().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2cf8807yt9().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2cf8807yt9().b[3][0]++;
    cov_2cf8807yt9().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2cf8807yt9().f[1]++;
        cov_2cf8807yt9().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2cf8807yt9().b[3][1]++;
  }
  cov_2cf8807yt9().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2cf8807yt9().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2cf8807yt9().f[2]++;
  cov_2cf8807yt9().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2cf8807yt9().b[7][0]++;
    cov_2cf8807yt9().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2cf8807yt9().b[7][1]++;
  }
  cov_2cf8807yt9().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2cf8807yt9().s[11]++,
/* istanbul ignore next */
(cov_2cf8807yt9().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2cf8807yt9().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2cf8807yt9().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2cf8807yt9().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2cf8807yt9().f[3]++;
  cov_2cf8807yt9().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2cf8807yt9().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2cf8807yt9().f[4]++;
  cov_2cf8807yt9().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2cf8807yt9().s[14]++,
/* istanbul ignore next */
(cov_2cf8807yt9().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2cf8807yt9().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2cf8807yt9().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2cf8807yt9().f[5]++;
  cov_2cf8807yt9().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[6]++;
    cov_2cf8807yt9().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2cf8807yt9().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[17]++, []);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2cf8807yt9().b[12][0]++;
          cov_2cf8807yt9().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2cf8807yt9().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2cf8807yt9().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2cf8807yt9().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2cf8807yt9().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[8]++;
    cov_2cf8807yt9().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[13][0]++;
      cov_2cf8807yt9().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[26]++, {});
    /* istanbul ignore next */
    cov_2cf8807yt9().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[15][0]++;
      cov_2cf8807yt9().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2cf8807yt9().b[16][0]++;
          cov_2cf8807yt9().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2cf8807yt9().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[15][1]++;
    }
    cov_2cf8807yt9().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2cf8807yt9().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2cf8807yt9().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2cf8807yt9().s[36]++;
exports.PerformanceOptimizer = void 0;
const si =
/* istanbul ignore next */
(cov_2cf8807yt9().s[37]++, __importStar(require("systeminformation")));
const logger_1 =
/* istanbul ignore next */
(cov_2cf8807yt9().s[38]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_2cf8807yt9().s[39]++, require("@/security/audit-service"));
/**
 * System Performance Optimizer
 * Provides comprehensive performance optimization for trading operations
 */
class PerformanceOptimizer {
  systemMonitor;
  config;
  optimizationInterval =
  /* istanbul ignore next */
  (cov_2cf8807yt9().s[40]++, null);
  performanceHistory =
  /* istanbul ignore next */
  (cov_2cf8807yt9().s[41]++, []);
  latencyMeasurements =
  /* istanbul ignore next */
  (cov_2cf8807yt9().s[42]++, []);
  isOptimizing =
  /* istanbul ignore next */
  (cov_2cf8807yt9().s[43]++, false);
  constructor(systemMonitor) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[9]++;
    cov_2cf8807yt9().s[44]++;
    this.systemMonitor = systemMonitor;
    /* istanbul ignore next */
    cov_2cf8807yt9().s[45]++;
    this.config = this.loadConfiguration();
    /* istanbul ignore next */
    cov_2cf8807yt9().s[46]++;
    logger_1.logger.info('⚡ Performance Optimizer initializing...');
  }
  /**
   * Load performance optimization configuration
   *
   * @returns PerformanceConfig Configuration object
   */
  loadConfiguration() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[10]++;
    cov_2cf8807yt9().s[47]++;
    return {
      enableCPUOptimization: process.env.ENABLE_CPU_OPTIMIZATION === 'true',
      enableMemoryOptimization: process.env.ENABLE_MEMORY_OPTIMIZATION === 'true',
      enableIOOptimization: process.env.ENABLE_IO_OPTIMIZATION === 'true',
      enableNetworkOptimization: process.env.ENABLE_NETWORK_OPTIMIZATION === 'true',
      enableThermalManagement: process.env.ENABLE_THERMAL_MANAGEMENT !== 'false',
      cpuGovernor:
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[17][0]++, process.env.CPU_GOVERNOR) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[17][1]++, 'performance'),
      memorySwappiness: parseInt(
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[18][0]++, process.env.MEMORY_SWAPPINESS) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[18][1]++, '10')),
      ioScheduler:
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[19][0]++, process.env.IO_SCHEDULER) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[19][1]++, 'mq-deadline'),
      networkBufferSize: parseInt(
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[20][0]++, process.env.NETWORK_BUFFER_SIZE) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[20][1]++, '16777216')),
      thermalThrottleTemp: parseInt(
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[21][0]++, process.env.THERMAL_THROTTLE_TEMP) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[21][1]++, '75')),
      monitoringIntervalMs: parseInt(
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[22][0]++, process.env.PERF_MONITORING_INTERVAL_MS) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[22][1]++, '60000'))
    };
  }
  /**
   * Initialize performance optimization
   * Sets up all optimization systems and starts monitoring
   *
   * @returns Promise<void>
   */
  async initializePerformanceOptimization() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[11]++;
    cov_2cf8807yt9().s[48]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[49]++;
      logger_1.logger.info('⚡ Initializing performance optimization...');
      // Apply initial optimizations
      /* istanbul ignore next */
      cov_2cf8807yt9().s[50]++;
      await this.applyInitialOptimizations();
      // Start performance monitoring
      /* istanbul ignore next */
      cov_2cf8807yt9().s[51]++;
      await this.startPerformanceMonitoring();
      // Set up thermal management
      /* istanbul ignore next */
      cov_2cf8807yt9().s[52]++;
      await this.setupThermalManagement();
      /* istanbul ignore next */
      cov_2cf8807yt9().s[53]++;
      logger_1.logger.info('✅ Performance optimization initialized successfully');
      // Audit log
      /* istanbul ignore next */
      cov_2cf8807yt9().s[54]++;
      await audit_service_1.auditService.createAuditEntry({
        auditId: `perf_opt_init_${Date.now()}`,
        eventType: 'PERFORMANCE_OPTIMIZATION_INIT',
        actor: 'SYSTEM',
        resource: 'PERFORMANCE_OPTIMIZER',
        action: 'INITIALIZE',
        result: 'SUCCESS',
        timestamp: new Date(),
        auditData: {
          config: this.config
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[55]++;
      logger_1.logger.error('❌ Failed to initialize performance optimization:', error);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[56]++;
      throw new Error('Performance optimization initialization failed');
    }
  }
  /**
   * Apply initial system optimizations
   * Configures system for optimal trading performance
   *
   * @returns Promise<void>
   */
  async applyInitialOptimizations() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[12]++;
    cov_2cf8807yt9().s[57]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[58]++;
      logger_1.logger.info('🔧 Applying initial system optimizations...');
      const optimizations =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[59]++, []);
      // CPU optimizations
      /* istanbul ignore next */
      cov_2cf8807yt9().s[60]++;
      if (this.config.enableCPUOptimization) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[23][0]++;
        cov_2cf8807yt9().s[61]++;
        optimizations.push(this.optimizeCPUPerformance());
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[23][1]++;
      }
      // Memory optimizations
      cov_2cf8807yt9().s[62]++;
      if (this.config.enableMemoryOptimization) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[24][0]++;
        cov_2cf8807yt9().s[63]++;
        optimizations.push(this.optimizeMemoryPerformance());
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[24][1]++;
      }
      // I/O optimizations
      cov_2cf8807yt9().s[64]++;
      if (this.config.enableIOOptimization) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[25][0]++;
        cov_2cf8807yt9().s[65]++;
        optimizations.push(this.optimizeIOPerformance());
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[25][1]++;
      }
      // Network optimizations
      cov_2cf8807yt9().s[66]++;
      if (this.config.enableNetworkOptimization) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[26][0]++;
        cov_2cf8807yt9().s[67]++;
        optimizations.push(this.optimizeNetworkPerformance());
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[26][1]++;
      }
      // Apply all optimizations concurrently
      cov_2cf8807yt9().s[68]++;
      await Promise.all(optimizations);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[69]++;
      logger_1.logger.info('✅ Initial optimizations applied successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[70]++;
      logger_1.logger.error('❌ Failed to apply initial optimizations:', error);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[71]++;
      throw error;
    }
  }
  /**
   * Optimize CPU performance for low-latency trading
   *
   * @returns Promise<void>
   */
  async optimizeCPUPerformance() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[13]++;
    cov_2cf8807yt9().s[72]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[73]++;
      logger_1.logger.info('🔧 Optimizing CPU performance...');
      // Set CPU governor to performance mode
      /* istanbul ignore next */
      cov_2cf8807yt9().s[74]++;
      try {
        const {
          execSync
        } =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[75]++, await import('child_process'));
        /* istanbul ignore next */
        cov_2cf8807yt9().s[76]++;
        execSync(`echo ${this.config.cpuGovernor} | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor`, {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_2cf8807yt9().s[77]++;
        logger_1.logger.info(`✅ CPU governor set to: ${this.config.cpuGovernor}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[78]++;
        logger_1.logger.warn('⚠️ Could not set CPU governor (may require sudo):', error);
      }
      // Disable CPU idle states for consistent performance
      /* istanbul ignore next */
      cov_2cf8807yt9().s[79]++;
      try {
        const {
          execSync
        } =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[80]++, await import('child_process'));
        /* istanbul ignore next */
        cov_2cf8807yt9().s[81]++;
        execSync('sudo cpupower idle-set -D 0', {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_2cf8807yt9().s[82]++;
        logger_1.logger.info('✅ CPU idle states optimized');
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[83]++;
        logger_1.logger.warn('⚠️ Could not optimize CPU idle states:', error);
      }
      // Set CPU affinity for trading processes
      /* istanbul ignore next */
      cov_2cf8807yt9().s[84]++;
      await this.setCPUAffinity();
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[85]++;
      logger_1.logger.error('❌ CPU optimization failed:', error);
    }
  }
  /**
   * Set CPU affinity for optimal performance
   *
   * @returns Promise<void>
   */
  async setCPUAffinity() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[14]++;
    cov_2cf8807yt9().s[86]++;
    try {
      const cpuInfo =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[87]++, await si.cpu());
      const coreCount =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[88]++, cpuInfo.cores);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[89]++;
      if (coreCount >= 4) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[27][0]++;
        cov_2cf8807yt9().s[90]++;
        // Reserve cores 0-1 for trading operations, 2-3 for system
        process.env.TRADING_CPU_CORES = '0,1';
        /* istanbul ignore next */
        cov_2cf8807yt9().s[91]++;
        process.env.SYSTEM_CPU_CORES = '2,3';
        /* istanbul ignore next */
        cov_2cf8807yt9().s[92]++;
        logger_1.logger.info('✅ CPU affinity configured for trading optimization');
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[27][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[93]++;
      logger_1.logger.warn('⚠️ Could not set CPU affinity:', error);
    }
  }
  /**
   * Optimize memory performance
   *
   * @returns Promise<void>
   */
  async optimizeMemoryPerformance() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[15]++;
    cov_2cf8807yt9().s[94]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[95]++;
      logger_1.logger.info('🔧 Optimizing memory performance...');
      // Set memory swappiness for trading workload
      /* istanbul ignore next */
      cov_2cf8807yt9().s[96]++;
      try {
        const {
          execSync
        } =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[97]++, await import('child_process'));
        /* istanbul ignore next */
        cov_2cf8807yt9().s[98]++;
        execSync(`echo ${this.config.memorySwappiness} | sudo tee /proc/sys/vm/swappiness`, {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_2cf8807yt9().s[99]++;
        logger_1.logger.info(`✅ Memory swappiness set to: ${this.config.memorySwappiness}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[100]++;
        logger_1.logger.warn('⚠️ Could not set memory swappiness:', error);
      }
      // Optimize memory allocation
      /* istanbul ignore next */
      cov_2cf8807yt9().s[101]++;
      try {
        const {
          execSync
        } =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[102]++, await import('child_process'));
        // Reduce memory overcommit for stability
        /* istanbul ignore next */
        cov_2cf8807yt9().s[103]++;
        execSync('echo 2 | sudo tee /proc/sys/vm/overcommit_memory', {
          stdio: 'pipe'
        });
        // Optimize dirty page writeback
        /* istanbul ignore next */
        cov_2cf8807yt9().s[104]++;
        execSync('echo 5 | sudo tee /proc/sys/vm/dirty_background_ratio', {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_2cf8807yt9().s[105]++;
        execSync('echo 10 | sudo tee /proc/sys/vm/dirty_ratio', {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_2cf8807yt9().s[106]++;
        logger_1.logger.info('✅ Memory allocation optimized');
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[107]++;
        logger_1.logger.warn('⚠️ Could not optimize memory allocation:', error);
      }
      // Configure Node.js memory settings
      /* istanbul ignore next */
      cov_2cf8807yt9().s[108]++;
      this.optimizeNodeJSMemory();
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[109]++;
      logger_1.logger.error('❌ Memory optimization failed:', error);
    }
  }
  /**
   * Optimize Node.js memory settings
   */
  optimizeNodeJSMemory() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[16]++;
    cov_2cf8807yt9().s[110]++;
    try {
      // Set optimal heap sizes for trading application
      const totalMemoryGB =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[111]++, Math.floor(require('os').totalmem() / 1024 / 1024 / 1024));
      const maxHeapSize =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[112]++, Math.floor(totalMemoryGB * 0.6)); // Use 60% of total memory
      /* istanbul ignore next */
      cov_2cf8807yt9().s[113]++;
      process.env.NODE_OPTIONS = `--max-old-space-size=${maxHeapSize * 1024}`;
      // Enable garbage collection optimizations
      /* istanbul ignore next */
      cov_2cf8807yt9().s[114]++;
      if (process.env.NODE_ENV === 'production') {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[28][0]++;
        cov_2cf8807yt9().s[115]++;
        process.env.NODE_OPTIONS += ' --optimize-for-size';
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[28][1]++;
      }
      cov_2cf8807yt9().s[116]++;
      logger_1.logger.info(`✅ Node.js memory optimized: ${maxHeapSize}GB heap`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[117]++;
      logger_1.logger.warn('⚠️ Could not optimize Node.js memory:', error);
    }
  }
  /**
   * Optimize I/O performance
   *
   * @returns Promise<void>
   */
  async optimizeIOPerformance() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[17]++;
    cov_2cf8807yt9().s[118]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[119]++;
      logger_1.logger.info('🔧 Optimizing I/O performance...');
      // Set I/O scheduler for SSD optimization
      /* istanbul ignore next */
      cov_2cf8807yt9().s[120]++;
      try {
        const {
          execSync
        } =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[121]++, await import('child_process'));
        const blockDevices =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[122]++, await si.blockDevices());
        /* istanbul ignore next */
        cov_2cf8807yt9().s[123]++;
        for (const device of blockDevices) {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[124]++;
          if (
          /* istanbul ignore next */
          (cov_2cf8807yt9().b[30][0]++, device.type === 'disk') &&
          /* istanbul ignore next */
          (cov_2cf8807yt9().b[30][1]++, !device.removable)) {
            /* istanbul ignore next */
            cov_2cf8807yt9().b[29][0]++;
            cov_2cf8807yt9().s[125]++;
            try {
              /* istanbul ignore next */
              cov_2cf8807yt9().s[126]++;
              execSync(`echo ${this.config.ioScheduler} | sudo tee /sys/block/${device.name}/queue/scheduler`, {
                stdio: 'pipe'
              });
              /* istanbul ignore next */
              cov_2cf8807yt9().s[127]++;
              logger_1.logger.info(`✅ I/O scheduler set to ${this.config.ioScheduler} for ${device.name}`);
            } catch (error) {
              /* istanbul ignore next */
              cov_2cf8807yt9().s[128]++;
              logger_1.logger.warn(`⚠️ Could not set I/O scheduler for ${device.name}:`, error);
            }
          } else
          /* istanbul ignore next */
          {
            cov_2cf8807yt9().b[29][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[129]++;
        logger_1.logger.warn('⚠️ Could not optimize I/O scheduler:', error);
      }
      // Optimize file system parameters
      /* istanbul ignore next */
      cov_2cf8807yt9().s[130]++;
      await this.optimizeFileSystem();
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[131]++;
      logger_1.logger.error('❌ I/O optimization failed:', error);
    }
  }
  /**
   * Optimize file system parameters
   *
   * @returns Promise<void>
   */
  async optimizeFileSystem() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[18]++;
    cov_2cf8807yt9().s[132]++;
    try {
      const {
        execSync
      } =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[133]++, await import('child_process'));
      // Optimize read-ahead for sequential I/O
      /* istanbul ignore next */
      cov_2cf8807yt9().s[134]++;
      execSync('sudo blockdev --setra 256 /dev/sda', {
        stdio: 'pipe'
      });
      // Optimize file system cache
      /* istanbul ignore next */
      cov_2cf8807yt9().s[135]++;
      execSync('echo 1 | sudo tee /proc/sys/vm/vfs_cache_pressure', {
        stdio: 'pipe'
      });
      /* istanbul ignore next */
      cov_2cf8807yt9().s[136]++;
      logger_1.logger.info('✅ File system optimized');
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[137]++;
      logger_1.logger.warn('⚠️ Could not optimize file system:', error);
    }
  }
  /**
   * Optimize network performance
   *
   * @returns Promise<void>
   */
  async optimizeNetworkPerformance() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[19]++;
    cov_2cf8807yt9().s[138]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[139]++;
      logger_1.logger.info('🔧 Optimizing network performance...');
      const {
        execSync
      } =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[140]++, await import('child_process'));
      // Optimize TCP settings for low latency
      const tcpOptimizations =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[141]++, ['net.core.rmem_max = 16777216', 'net.core.wmem_max = 16777216', 'net.ipv4.tcp_rmem = 4096 87380 16777216', 'net.ipv4.tcp_wmem = 4096 65536 16777216', 'net.ipv4.tcp_congestion_control = bbr', 'net.ipv4.tcp_fastopen = 3', 'net.ipv4.tcp_low_latency = 1', 'net.core.netdev_max_backlog = 5000']);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[142]++;
      for (const optimization of tcpOptimizations) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[143]++;
        try {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[144]++;
          execSync(`echo "${optimization}" | sudo tee -a /etc/sysctl.conf`, {
            stdio: 'pipe'
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[145]++;
          logger_1.logger.warn(`⚠️ Could not apply network optimization: ${optimization}`);
        }
      }
      // Apply sysctl changes
      /* istanbul ignore next */
      cov_2cf8807yt9().s[146]++;
      try {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[147]++;
        execSync('sudo sysctl -p', {
          stdio: 'pipe'
        });
        /* istanbul ignore next */
        cov_2cf8807yt9().s[148]++;
        logger_1.logger.info('✅ Network performance optimized');
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[149]++;
        logger_1.logger.warn('⚠️ Could not apply sysctl changes:', error);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[150]++;
      logger_1.logger.error('❌ Network optimization failed:', error);
    }
  }
  /**
   * Setup thermal management
   *
   * @returns Promise<void>
   */
  async setupThermalManagement() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[20]++;
    cov_2cf8807yt9().s[151]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[152]++;
      logger_1.logger.info('🌡️ Setting up thermal management...');
      // Start thermal monitoring
      /* istanbul ignore next */
      cov_2cf8807yt9().s[153]++;
      setInterval(async () => {
        /* istanbul ignore next */
        cov_2cf8807yt9().f[21]++;
        cov_2cf8807yt9().s[154]++;
        await this.monitorThermalConditions();
      }, 10000); // Check every 10 seconds
      /* istanbul ignore next */
      cov_2cf8807yt9().s[155]++;
      logger_1.logger.info('✅ Thermal management setup complete');
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[156]++;
      logger_1.logger.error('❌ Thermal management setup failed:', error);
    }
  }
  /**
   * Monitor thermal conditions and apply throttling if needed
   *
   * @returns Promise<void>
   */
  async monitorThermalConditions() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[22]++;
    cov_2cf8807yt9().s[157]++;
    try {
      const cpuTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[158]++, await si.cpuTemperature());
      const currentTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[159]++,
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[31][0]++, cpuTemp.main) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[31][1]++, 0));
      /* istanbul ignore next */
      cov_2cf8807yt9().s[160]++;
      if (currentTemp >= this.config.thermalThrottleTemp) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[32][0]++;
        cov_2cf8807yt9().s[161]++;
        await this.applyThermalThrottling(currentTemp);
      } else {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[32][1]++;
        cov_2cf8807yt9().s[162]++;
        if (currentTemp < this.config.thermalThrottleTemp - 5) {
          /* istanbul ignore next */
          cov_2cf8807yt9().b[33][0]++;
          cov_2cf8807yt9().s[163]++;
          // Remove throttling if temperature is safe
          await this.removeThermalThrottling();
        } else
        /* istanbul ignore next */
        {
          cov_2cf8807yt9().b[33][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[164]++;
      logger_1.logger.error('❌ Thermal monitoring failed:', error);
    }
  }
  /**
   * Apply thermal throttling to prevent overheating
   *
   * @param currentTemp Current CPU temperature
   * @returns Promise<void>
   */
  async applyThermalThrottling(currentTemp) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[23]++;
    cov_2cf8807yt9().s[165]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[166]++;
      logger_1.logger.warn(`🌡️ Applying thermal throttling - CPU temp: ${currentTemp}°C`);
      // Reduce CPU frequency
      const {
        execSync
      } =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[167]++, await import('child_process'));
      /* istanbul ignore next */
      cov_2cf8807yt9().s[168]++;
      try {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[169]++;
        execSync('echo powersave | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor', {
          stdio: 'pipe'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2cf8807yt9().s[170]++;
        logger_1.logger.warn('⚠️ Could not apply CPU throttling:', error);
      }
      // Audit critical thermal event
      /* istanbul ignore next */
      cov_2cf8807yt9().s[171]++;
      await audit_service_1.auditService.createAuditEntry({
        auditId: `thermal_throttle_${Date.now()}`,
        eventType: 'THERMAL_THROTTLING_APPLIED',
        actor: 'PERFORMANCE_OPTIMIZER',
        resource: 'CPU_THERMAL',
        action: 'APPLY_THROTTLING',
        result: 'SUCCESS',
        timestamp: new Date(),
        auditData: {
          currentTemp,
          threshold: this.config.thermalThrottleTemp
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[172]++;
      logger_1.logger.error('❌ Failed to apply thermal throttling:', error);
    }
  }
  /**
   * Remove thermal throttling when temperature is safe
   *
   * @returns Promise<void>
   */
  async removeThermalThrottling() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[24]++;
    cov_2cf8807yt9().s[173]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[174]++;
      if (this.config.enableCPUOptimization) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[34][0]++;
        const {
          execSync
        } =
        /* istanbul ignore next */
        (cov_2cf8807yt9().s[175]++, await import('child_process'));
        /* istanbul ignore next */
        cov_2cf8807yt9().s[176]++;
        try {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[177]++;
          execSync(`echo ${this.config.cpuGovernor} | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor`, {
            stdio: 'pipe'
          });
          /* istanbul ignore next */
          cov_2cf8807yt9().s[178]++;
          logger_1.logger.info('✅ Thermal throttling removed - normal performance restored');
        } catch (error) {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[179]++;
          logger_1.logger.warn('⚠️ Could not remove CPU throttling:', error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[34][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[180]++;
      logger_1.logger.error('❌ Failed to remove thermal throttling:', error);
    }
  }
  /**
   * Start performance monitoring
   *
   * @returns Promise<void>
   */
  async startPerformanceMonitoring() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[25]++;
    cov_2cf8807yt9().s[181]++;
    try {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[182]++;
      logger_1.logger.info('📊 Starting performance monitoring...');
      /* istanbul ignore next */
      cov_2cf8807yt9().s[183]++;
      this.optimizationInterval = setInterval(async () => {
        /* istanbul ignore next */
        cov_2cf8807yt9().f[26]++;
        cov_2cf8807yt9().s[184]++;
        try {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[185]++;
          await this.measurePerformance();
          /* istanbul ignore next */
          cov_2cf8807yt9().s[186]++;
          await this.generateOptimizationRecommendations();
        } catch (error) {
          /* istanbul ignore next */
          cov_2cf8807yt9().s[187]++;
          logger_1.logger.error('❌ Performance monitoring error:', error);
        }
      }, this.config.monitoringIntervalMs);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[188]++;
      logger_1.logger.info('✅ Performance monitoring started');
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[189]++;
      logger_1.logger.error('❌ Failed to start performance monitoring:', error);
    }
  }
  /**
   * Measure system performance metrics
   *
   * @returns Promise<PerformanceMetrics>
   */
  async measurePerformance() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[27]++;
    cov_2cf8807yt9().s[190]++;
    try {
      const startTime =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[191]++, process.hrtime.bigint());
      // Get current system metrics
      const metrics =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[192]++, this.systemMonitor.getCurrentMetrics());
      // Calculate performance scores
      const cpuScore =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[193]++, this.calculateCPUScore(metrics.cpu));
      const memoryScore =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[194]++, this.calculateMemoryScore(metrics.ram));
      const ioScore =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[195]++, this.calculateIOScore(metrics.ssd));
      const networkScore =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[196]++, this.calculateNetworkScore(metrics.network));
      const thermalScore =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[197]++, await this.calculateThermalScore());
      // Measure latency
      const latency =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[198]++, await this.measureSystemLatency());
      /* istanbul ignore next */
      cov_2cf8807yt9().s[199]++;
      this.latencyMeasurements.push(latency);
      // Keep only last 1000 measurements
      /* istanbul ignore next */
      cov_2cf8807yt9().s[200]++;
      if (this.latencyMeasurements.length > 1000) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[35][0]++;
        cov_2cf8807yt9().s[201]++;
        this.latencyMeasurements = this.latencyMeasurements.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[35][1]++;
      }
      // Calculate latency statistics
      const sortedLatencies =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[202]++, [...this.latencyMeasurements].sort((a, b) => {
        /* istanbul ignore next */
        cov_2cf8807yt9().f[28]++;
        cov_2cf8807yt9().s[203]++;
        return a - b;
      }));
      const latencyStats =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[204]++, {
        average: this.latencyMeasurements.reduce((a, b) => {
          /* istanbul ignore next */
          cov_2cf8807yt9().f[29]++;
          cov_2cf8807yt9().s[205]++;
          return a + b;
        }, 0) / this.latencyMeasurements.length,
        maximum: Math.max(...this.latencyMeasurements),
        p95:
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[36][0]++, sortedLatencies[Math.floor(sortedLatencies.length * 0.95)]) ||
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[36][1]++, 0),
        p99:
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[37][0]++, sortedLatencies[Math.floor(sortedLatencies.length * 0.99)]) ||
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[37][1]++, 0)
      });
      // Calculate throughput metrics
      const throughput =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[206]++, {
        cpuOps: this.calculateCPUThroughput(metrics.cpu),
        memoryBandwidth: this.calculateMemoryBandwidth(metrics.ram),
        diskIOPS:
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[38][0]++, metrics.ssd?.readIOPS) ||
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[38][1]++, 0 + metrics.ssd?.writeIOPS) ||
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[38][2]++, 0),
        networkThroughput: (
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[39][0]++, metrics.network?.downloadSpeed) ||
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[39][1]++, 0)) + (
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[40][0]++, metrics.network?.uploadSpeed) ||
        /* istanbul ignore next */
        (cov_2cf8807yt9().b[40][1]++, 0))
      });
      const overallScore =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[207]++, Math.round((cpuScore + memoryScore + ioScore + networkScore + thermalScore) / 5));
      const performanceMetrics =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[208]++, {
        overallScore,
        cpuScore,
        memoryScore,
        ioScore,
        networkScore,
        thermalScore,
        latency: latencyStats,
        throughput,
        timestamp: new Date()
      });
      // Store in history
      /* istanbul ignore next */
      cov_2cf8807yt9().s[209]++;
      this.performanceHistory.push(performanceMetrics);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[210]++;
      if (this.performanceHistory.length > 100) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[41][0]++;
        cov_2cf8807yt9().s[211]++;
        this.performanceHistory = this.performanceHistory.slice(-100);
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[41][1]++;
      }
      const endTime =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[212]++, process.hrtime.bigint());
      const measurementTime =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[213]++, Number(endTime - startTime) / 1000000); // Convert to milliseconds
      /* istanbul ignore next */
      cov_2cf8807yt9().s[214]++;
      logger_1.logger.debug('📊 Performance measurement completed', {
        overallScore,
        measurementTime: `${measurementTime.toFixed(2)}ms`,
        latency: latencyStats
      });
      /* istanbul ignore next */
      cov_2cf8807yt9().s[215]++;
      return performanceMetrics;
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[216]++;
      logger_1.logger.error('❌ Performance measurement failed:', error);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[217]++;
      throw error;
    }
  }
  /**
   * Calculate CPU performance score
   *
   * @param cpu CPU metrics
   * @returns number Performance score (0-100)
   */
  calculateCPUScore(cpu) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[30]++;
    cov_2cf8807yt9().s[218]++;
    if (!cpu) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[42][0]++;
      cov_2cf8807yt9().s[219]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[42][1]++;
    }
    // Lower utilization and temperature = higher score
    const utilizationScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[220]++, Math.max(0, 100 - cpu.utilization));
    const temperatureScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[221]++, Math.max(0, 100 - cpu.temperature / 80 * 100));
    const frequencyScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[222]++, Math.min(100, cpu.frequency / 3000 * 100)); // Assume 3GHz target
    /* istanbul ignore next */
    cov_2cf8807yt9().s[223]++;
    return Math.round((utilizationScore + temperatureScore + frequencyScore) / 3);
  }
  /**
   * Calculate memory performance score
   *
   * @param ram RAM metrics
   * @returns number Performance score (0-100)
   */
  calculateMemoryScore(ram) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[31]++;
    cov_2cf8807yt9().s[224]++;
    if (!ram) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[43][0]++;
      cov_2cf8807yt9().s[225]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[43][1]++;
    }
    // Lower utilization = higher score, but some usage is expected
    const utilizationScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[226]++, ram.utilization < 50 ?
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[44][0]++, 100) :
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[44][1]++, Math.max(0, 100 - (ram.utilization - 50) * 2)));
    const availabilityScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[227]++, Math.min(100, ram.available / ram.total * 200));
    /* istanbul ignore next */
    cov_2cf8807yt9().s[228]++;
    return Math.round((utilizationScore + availabilityScore) / 2);
  }
  /**
   * Calculate I/O performance score
   *
   * @param ssd SSD metrics
   * @returns number Performance score (0-100)
   */
  calculateIOScore(ssd) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[32]++;
    cov_2cf8807yt9().s[229]++;
    if (!ssd) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[45][0]++;
      cov_2cf8807yt9().s[230]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[45][1]++;
    }
    // Higher throughput and lower utilization = higher score
    const utilizationScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[231]++, Math.max(0, 100 - ssd.utilization));
    const throughputScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[232]++, Math.min(100, (ssd.readThroughput + ssd.writeThroughput) / 500 * 100));
    const healthScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[233]++, ssd.health);
    /* istanbul ignore next */
    cov_2cf8807yt9().s[234]++;
    return Math.round((utilizationScore + throughputScore + healthScore) / 3);
  }
  /**
   * Calculate network performance score
   *
   * @param network Network metrics
   * @returns number Performance score (0-100)
   */
  calculateNetworkScore(network) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[33]++;
    cov_2cf8807yt9().s[235]++;
    if (!network) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[46][0]++;
      cov_2cf8807yt9().s[236]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[46][1]++;
    }
    const activeInterfaces =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[237]++,
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[47][0]++, network.interfaces?.filter(i => {
      /* istanbul ignore next */
      cov_2cf8807yt9().f[34]++;
      cov_2cf8807yt9().s[238]++;
      return i.isUp;
    }).length) ||
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[47][1]++, 0));
    const connectivityScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[239]++, activeInterfaces > 0 ?
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[48][0]++, 100) :
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[48][1]++, 0));
    const speedScore =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[240]++, Math.min(100, (network.downloadSpeed + network.uploadSpeed) / 100 * 100));
    /* istanbul ignore next */
    cov_2cf8807yt9().s[241]++;
    return Math.round((connectivityScore + speedScore) / 2);
  }
  /**
   * Calculate thermal performance score
   *
   * @returns Promise<number> Performance score (0-100)
   */
  async calculateThermalScore() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[35]++;
    cov_2cf8807yt9().s[242]++;
    try {
      const cpuTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[243]++, await si.cpuTemperature());
      const currentTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[244]++,
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[49][0]++, cpuTemp.main) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[49][1]++, 0));
      // Lower temperature = higher score
      /* istanbul ignore next */
      cov_2cf8807yt9().s[245]++;
      if (currentTemp < 50) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[50][0]++;
        cov_2cf8807yt9().s[246]++;
        return 100;
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[50][1]++;
      }
      cov_2cf8807yt9().s[247]++;
      if (currentTemp < 60) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[51][0]++;
        cov_2cf8807yt9().s[248]++;
        return 90;
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[51][1]++;
      }
      cov_2cf8807yt9().s[249]++;
      if (currentTemp < 70) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[52][0]++;
        cov_2cf8807yt9().s[250]++;
        return 70;
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[52][1]++;
      }
      cov_2cf8807yt9().s[251]++;
      if (currentTemp < 80) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[53][0]++;
        cov_2cf8807yt9().s[252]++;
        return 50;
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[53][1]++;
      }
      cov_2cf8807yt9().s[253]++;
      return 20;
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[254]++;
      return 50; // Default score if measurement fails
    }
  }
  /**
   * Measure system latency
   *
   * @returns Promise<number> Latency in microseconds
   */
  async measureSystemLatency() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[36]++;
    const start =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[255]++, process.hrtime.bigint());
    // Perform a small I/O operation to measure system responsiveness
    /* istanbul ignore next */
    cov_2cf8807yt9().s[256]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_2cf8807yt9().f[37]++;
      cov_2cf8807yt9().s[257]++;
      return setImmediate(resolve);
    });
    const end =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[258]++, process.hrtime.bigint());
    /* istanbul ignore next */
    cov_2cf8807yt9().s[259]++;
    return Number(end - start) / 1000; // Convert to microseconds
  }
  /**
   * Calculate CPU throughput
   *
   * @param cpu CPU metrics
   * @returns number Operations per second
   */
  calculateCPUThroughput(cpu) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[38]++;
    cov_2cf8807yt9().s[260]++;
    if (!cpu) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[54][0]++;
      cov_2cf8807yt9().s[261]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[54][1]++;
    }
    // Estimate based on frequency and utilization
    cov_2cf8807yt9().s[262]++;
    return Math.round(cpu.frequency * cpu.cores.logical * (cpu.utilization / 100) / 1000);
  }
  /**
   * Calculate memory bandwidth
   *
   * @param ram RAM metrics
   * @returns number Bandwidth in MB/s
   */
  calculateMemoryBandwidth(ram) {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[39]++;
    cov_2cf8807yt9().s[263]++;
    if (!ram) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[55][0]++;
      cov_2cf8807yt9().s[264]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[55][1]++;
    }
    // Estimate based on memory usage patterns
    cov_2cf8807yt9().s[265]++;
    return Math.round(ram.used / ram.total * 25600); // Assume DDR4-3200 theoretical max
  }
  /**
   * Generate optimization recommendations
   *
   * @returns Promise<OptimizationRecommendation[]>
   */
  async generateOptimizationRecommendations() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[40]++;
    cov_2cf8807yt9().s[266]++;
    try {
      const recommendations =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[267]++, []);
      const metrics =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[268]++, this.systemMonitor.getCurrentMetrics());
      const latestPerformance =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[269]++, this.performanceHistory[this.performanceHistory.length - 1]);
      // CPU recommendations
      /* istanbul ignore next */
      cov_2cf8807yt9().s[270]++;
      if (
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[57][0]++, metrics.cpu) &&
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[57][1]++, metrics.cpu.utilization > 80)) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[56][0]++;
        cov_2cf8807yt9().s[271]++;
        recommendations.push({
          id: `cpu_high_util_${Date.now()}`,
          type: 'CPU',
          priority: 'HIGH',
          title: 'High CPU Utilization',
          description: `CPU utilization is ${metrics.cpu.utilization}%. Consider reducing background processes or upgrading CPU.`,
          expectedImprovement: 15,
          complexity: 'MEDIUM',
          canAutoApply: false,
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[56][1]++;
      }
      // Memory recommendations
      cov_2cf8807yt9().s[272]++;
      if (
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[59][0]++, metrics.ram) &&
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[59][1]++, metrics.ram.utilization > 85)) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[58][0]++;
        cov_2cf8807yt9().s[273]++;
        recommendations.push({
          id: `memory_high_util_${Date.now()}`,
          type: 'MEMORY',
          priority: 'HIGH',
          title: 'High Memory Utilization',
          description: `Memory utilization is ${metrics.ram.utilization}%. Consider adding more RAM or optimizing memory usage.`,
          expectedImprovement: 20,
          complexity: 'EASY',
          canAutoApply: false,
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[58][1]++;
      }
      // Thermal recommendations
      cov_2cf8807yt9().s[274]++;
      if (
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[61][0]++, metrics.cpu) &&
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[61][1]++, metrics.cpu.temperature > 70)) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[60][0]++;
        cov_2cf8807yt9().s[275]++;
        recommendations.push({
          id: `thermal_high_temp_${Date.now()}`,
          type: 'THERMAL',
          priority: 'CRITICAL',
          title: 'High CPU Temperature',
          description: `CPU temperature is ${metrics.cpu.temperature}°C. Check cooling system and ventilation.`,
          expectedImprovement: 25,
          complexity: 'MEDIUM',
          canAutoApply: true,
          implementation: 'apply_thermal_throttling',
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[60][1]++;
      }
      // Performance recommendations
      cov_2cf8807yt9().s[276]++;
      if (
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[63][0]++, latestPerformance) &&
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[63][1]++, latestPerformance.overallScore < 70)) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[62][0]++;
        cov_2cf8807yt9().s[277]++;
        recommendations.push({
          id: `perf_low_score_${Date.now()}`,
          type: 'CPU',
          priority: 'MEDIUM',
          title: 'Low Performance Score',
          description: `Overall performance score is ${latestPerformance.overallScore}%. System optimization recommended.`,
          expectedImprovement: 30,
          complexity: 'MEDIUM',
          canAutoApply: true,
          implementation: 'reapply_optimizations',
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_2cf8807yt9().b[62][1]++;
      }
      cov_2cf8807yt9().s[278]++;
      return recommendations;
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[279]++;
      logger_1.logger.error('❌ Failed to generate optimization recommendations:', error);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[280]++;
      return [];
    }
  }
  /**
   * Get current thermal status
   *
   * @returns Promise<ThermalStatus>
   */
  async getThermalStatus() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[41]++;
    cov_2cf8807yt9().s[281]++;
    try {
      const cpuTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[282]++, await si.cpuTemperature());
      const currentTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[283]++,
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[64][0]++, cpuTemp.main) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[64][1]++, 0));
      const maxSafeTemp =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[284]++, this.config.thermalThrottleTemp);
      const isThrottling =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[285]++, currentTemp >= maxSafeTemp);
      const alerts =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[286]++, []);
      const recommendations =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[287]++, []);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[288]++;
      if (currentTemp > 80) {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[65][0]++;
        cov_2cf8807yt9().s[289]++;
        alerts.push('Critical temperature - immediate action required');
        /* istanbul ignore next */
        cov_2cf8807yt9().s[290]++;
        recommendations.push('Check system cooling and ventilation');
        /* istanbul ignore next */
        cov_2cf8807yt9().s[291]++;
        recommendations.push('Reduce system load');
      } else {
        /* istanbul ignore next */
        cov_2cf8807yt9().b[65][1]++;
        cov_2cf8807yt9().s[292]++;
        if (currentTemp > 70) {
          /* istanbul ignore next */
          cov_2cf8807yt9().b[66][0]++;
          cov_2cf8807yt9().s[293]++;
          alerts.push('High temperature - monitoring required');
          /* istanbul ignore next */
          cov_2cf8807yt9().s[294]++;
          recommendations.push('Verify cooling system operation');
        } else
        /* istanbul ignore next */
        {
          cov_2cf8807yt9().b[66][1]++;
        }
      }
      const coolingEffectiveness =
      /* istanbul ignore next */
      (cov_2cf8807yt9().s[295]++, Math.max(0, 100 - (currentTemp - 30) / 50 * 100));
      /* istanbul ignore next */
      cov_2cf8807yt9().s[296]++;
      return {
        currentTemp,
        maxSafeTemp,
        isThrottling,
        coolingEffectiveness: Math.round(coolingEffectiveness),
        alerts,
        recommendations
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2cf8807yt9().s[297]++;
      logger_1.logger.error('❌ Failed to get thermal status:', error);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[298]++;
      throw error;
    }
  }
  /**
   * Get performance history
   *
   * @returns PerformanceMetrics[] Performance history
   */
  getPerformanceHistory() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[42]++;
    cov_2cf8807yt9().s[299]++;
    return [...this.performanceHistory];
  }
  /**
   * Get current performance metrics
   *
   * @returns PerformanceMetrics | null Current metrics
   */
  getCurrentPerformanceMetrics() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[43]++;
    cov_2cf8807yt9().s[300]++;
    return /* istanbul ignore next */(cov_2cf8807yt9().b[67][0]++, this.performanceHistory[this.performanceHistory.length - 1]) ||
    /* istanbul ignore next */
    (cov_2cf8807yt9().b[67][1]++, null);
  }
  /**
   * Stop performance optimization
   */
  stopPerformanceOptimization() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[44]++;
    cov_2cf8807yt9().s[301]++;
    if (this.optimizationInterval) {
      /* istanbul ignore next */
      cov_2cf8807yt9().b[68][0]++;
      cov_2cf8807yt9().s[302]++;
      clearInterval(this.optimizationInterval);
      /* istanbul ignore next */
      cov_2cf8807yt9().s[303]++;
      this.optimizationInterval = null;
      /* istanbul ignore next */
      cov_2cf8807yt9().s[304]++;
      logger_1.logger.info('🛑 Performance optimization stopped');
    } else
    /* istanbul ignore next */
    {
      cov_2cf8807yt9().b[68][1]++;
    }
  }
  /**
   * Get optimizer status
   *
   * @returns Object containing status information
   */
  getStatus() {
    /* istanbul ignore next */
    cov_2cf8807yt9().f[45]++;
    const latestMetrics =
    /* istanbul ignore next */
    (cov_2cf8807yt9().s[305]++, this.getCurrentPerformanceMetrics());
    /* istanbul ignore next */
    cov_2cf8807yt9().s[306]++;
    return {
      isOptimizing: this.optimizationInterval !== null,
      config: this.config,
      performanceHistory: this.performanceHistory.length,
      latestScore:
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[69][0]++, latestMetrics?.overallScore) ||
      /* istanbul ignore next */
      (cov_2cf8807yt9().b[69][1]++, null),
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_2cf8807yt9().s[307]++;
exports.PerformanceOptimizer = PerformanceOptimizer;
// =============================================================================
// PERFORMANCE OPTIMIZATION NOTES
// =============================================================================
// 1. Low-latency optimizations for high-frequency trading operations
// 2. Thermal management to prevent performance degradation
// 3. Resource allocation optimization for consistent performance
// 4. Real-time performance monitoring and adjustment
// 5. Automatic optimization recommendations and implementation
// 6. System health scoring for performance assessment
// 7. Comprehensive logging and audit trails for all optimizations
// 8. Hardware-specific optimizations for Intel NUC platform
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,