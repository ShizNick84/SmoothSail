{"version":3,"names":["cov_2on19z64bb","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","crypto","__importStar","require","fs","ComplianceTestingService","logger","standards","Map","constructor","initializeStandards","set","createOWASPTop10Standard","createISO27001Standard","createSOC2Standard","createCryptoTradingSecurityStandard","info","standardCount","size","Array","from","keys","id","description","requiredScore","controls","category","severity","testMethods","evidence","status","score","findings","remediation","executeComplianceTest","standardId","startTime","Date","now","standard","get","Error","controlCount","length","controlResults","control","controlResult","testComplianceControl","push","totalMaxScore","reduce","sum","result","maxScore","totalScore","overallScore","Math","round","gapAnalysis","generateGapAnalysis","recommendations","generateRecommendations","report","reportId","randomUUID","standardName","timestamp","executionTime","debug","controlId","testMethod","testResult","executeTestMethod","min","controlName","testAuthorization","testEncryption","testSQLInjection","reviewConfiguration","scanDependencies","reviewLogging","reviewPolicies","reviewRiskAssessment","testAPIKeySecurity","reviewAlgorithmSecurity","warn","error","location","stack","message","String","random","gaps","gap","priority","calculateGapPriority","currentScore","estimatedEffort","estimateRemediationEffort","sort","a","priorityOrder","gapPercentage","effortMap","highPriorityGaps","filter","slice","failedControls","partialControls","criticalFindings","flatMap","r","getAvailableStandards","values","getStandard","saveComplianceReport","outputPath","reportData","metadata","generatedAt","format","writeFile","JSON","stringify","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\security\\compliance-testing.ts"],"sourcesContent":["/**\r\n * Security Compliance Testing Module\r\n * \r\n * Implements comprehensive security compliance testing for various standards\r\n * including OWASP Top 10, ISO 27001, SOC 2, and custom security frameworks.\r\n * \r\n * Features:\r\n * - Multi-standard compliance testing\r\n * - Automated compliance scoring\r\n * - Gap analysis and remediation recommendations\r\n * - Compliance reporting and documentation\r\n */\r\n\r\nimport { Logger } from '../core/logging/logger';\r\nimport { SecurityFinding } from './penetration-testing-service';\r\nimport * as crypto from 'crypto';\r\nimport * as fs from 'fs/promises';\r\nimport * as path from 'path';\r\n\r\nexport interface ComplianceStandard {\r\n  id: string;\r\n  name: string;\r\n  version: string;\r\n  description: string;\r\n  controls: ComplianceControl[];\r\n  requiredScore: number;\r\n}\r\n\r\nexport interface ComplianceControl {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  category: string;\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  testMethods: string[];\r\n  evidence: string[];\r\n  status: 'NOT_TESTED' | 'PASS' | 'FAIL' | 'PARTIAL';\r\n  score: number;\r\n  findings: SecurityFinding[];\r\n  remediation: string[];\r\n}\r\n\r\nexport interface ComplianceReport {\r\n  reportId: string;\r\n  standardId: string;\r\n  standardName: string;\r\n  timestamp: Date;\r\n  overallScore: number;\r\n  requiredScore: number;\r\n  status: 'COMPLIANT' | 'NON_COMPLIANT' | 'PARTIAL';\r\n  controlResults: ComplianceControlResult[];\r\n  gapAnalysis: ComplianceGap[];\r\n  recommendations: string[];\r\n  executionTime: number;\r\n}\r\n\r\nexport interface ComplianceControlResult {\r\n  controlId: string;\r\n  controlName: string;\r\n  status: 'PASS' | 'FAIL' | 'PARTIAL';\r\n  score: number;\r\n  maxScore: number;\r\n  findings: SecurityFinding[];\r\n  evidence: string[];\r\n  remediation: string[];\r\n}\r\n\r\nexport interface ComplianceGap {\r\n  controlId: string;\r\n  controlName: string;\r\n  currentScore: number;\r\n  requiredScore: number;\r\n  gap: number;\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  remediation: string[];\r\n  estimatedEffort: string;\r\n}\r\n\r\nexport class ComplianceTestingService {\r\n  private logger: Logger;\r\n  private standards: Map<string, ComplianceStandard> = new Map();\r\n\r\n  constructor(logger: Logger) {\r\n    this.logger = logger;\r\n    this.initializeStandards();\r\n  }\r\n\r\n  /**\r\n   * Initialize compliance standards\r\n   */\r\n  private initializeStandards(): void {\r\n    // Initialize OWASP Top 10 standard\r\n    this.standards.set('OWASP_TOP_10', this.createOWASPTop10Standard());\r\n    \r\n    // Initialize ISO 27001 standard\r\n    this.standards.set('ISO_27001', this.createISO27001Standard());\r\n    \r\n    // Initialize SOC 2 standard\r\n    this.standards.set('SOC_2', this.createSOC2Standard());\r\n    \r\n    // Initialize custom crypto trading security standard\r\n    this.standards.set('CRYPTO_TRADING_SECURITY', this.createCryptoTradingSecurityStandard());\r\n\r\n    this.logger.info('Compliance standards initialized', {\r\n      standardCount: this.standards.size,\r\n      standards: Array.from(this.standards.keys())\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create OWASP Top 10 compliance standard\r\n   */\r\n  private createOWASPTop10Standard(): ComplianceStandard {\r\n    return {\r\n      id: 'OWASP_TOP_10',\r\n      name: 'OWASP Top 10',\r\n      version: '2021',\r\n      description: 'OWASP Top 10 Web Application Security Risks',\r\n      requiredScore: 80,\r\n      controls: [\r\n        {\r\n          id: 'A01_2021',\r\n          name: 'Broken Access Control',\r\n          description: 'Access control enforces policy such that users cannot act outside of their intended permissions',\r\n          category: 'Access Control',\r\n          severity: 'CRITICAL',\r\n          testMethods: ['authorization_testing', 'privilege_escalation_testing'],\r\n          evidence: ['access_control_logs', 'authorization_tests'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement proper access control mechanisms',\r\n            'Use principle of least privilege',\r\n            'Regularly audit access permissions'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A02_2021',\r\n          name: 'Cryptographic Failures',\r\n          description: 'Failures related to cryptography which often leads to sensitive data exposure',\r\n          category: 'Cryptography',\r\n          severity: 'CRITICAL',\r\n          testMethods: ['encryption_testing', 'key_management_testing'],\r\n          evidence: ['encryption_configuration', 'key_management_procedures'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Use strong encryption algorithms',\r\n            'Implement proper key management',\r\n            'Encrypt sensitive data at rest and in transit'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A03_2021',\r\n          name: 'Injection',\r\n          description: 'Injection flaws occur when untrusted data is sent to an interpreter',\r\n          category: 'Input Validation',\r\n          severity: 'CRITICAL',\r\n          testMethods: ['sql_injection_testing', 'command_injection_testing'],\r\n          evidence: ['input_validation_tests', 'parameterized_queries'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Use parameterized queries',\r\n            'Implement input validation',\r\n            'Apply output encoding'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A04_2021',\r\n          name: 'Insecure Design',\r\n          description: 'Risks related to design flaws and missing or ineffective control design',\r\n          category: 'Secure Design',\r\n          severity: 'HIGH',\r\n          testMethods: ['threat_modeling', 'security_architecture_review'],\r\n          evidence: ['threat_model', 'security_design_documents'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement secure design principles',\r\n            'Conduct threat modeling',\r\n            'Use secure development lifecycle'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A05_2021',\r\n          name: 'Security Misconfiguration',\r\n          description: 'Security misconfiguration is commonly a result of insecure default configurations',\r\n          category: 'Configuration',\r\n          severity: 'HIGH',\r\n          testMethods: ['configuration_review', 'security_headers_testing'],\r\n          evidence: ['configuration_files', 'security_headers'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement secure configuration standards',\r\n            'Regular security configuration reviews',\r\n            'Use configuration management tools'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A06_2021',\r\n          name: 'Vulnerable and Outdated Components',\r\n          description: 'Components with known vulnerabilities may undermine application defenses',\r\n          category: 'Component Security',\r\n          severity: 'HIGH',\r\n          testMethods: ['dependency_scanning', 'vulnerability_assessment'],\r\n          evidence: ['dependency_scan_results', 'update_procedures'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Maintain inventory of components',\r\n            'Regular vulnerability scanning',\r\n            'Implement update procedures'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A07_2021',\r\n          name: 'Identification and Authentication Failures',\r\n          description: 'Confirmation of the user\\'s identity, authentication, and session management',\r\n          category: 'Authentication',\r\n          severity: 'HIGH',\r\n          testMethods: ['authentication_testing', 'session_management_testing'],\r\n          evidence: ['authentication_mechanisms', 'session_configuration'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement multi-factor authentication',\r\n            'Use secure session management',\r\n            'Implement account lockout mechanisms'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A08_2021',\r\n          name: 'Software and Data Integrity Failures',\r\n          description: 'Software and data integrity failures relate to code and infrastructure',\r\n          category: 'Integrity',\r\n          severity: 'HIGH',\r\n          testMethods: ['integrity_testing', 'supply_chain_security'],\r\n          evidence: ['integrity_checks', 'supply_chain_controls'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement integrity checks',\r\n            'Use secure CI/CD pipelines',\r\n            'Verify software signatures'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A09_2021',\r\n          name: 'Security Logging and Monitoring Failures',\r\n          description: 'Insufficient logging and monitoring, coupled with missing or ineffective integration',\r\n          category: 'Monitoring',\r\n          severity: 'MEDIUM',\r\n          testMethods: ['logging_review', 'monitoring_testing'],\r\n          evidence: ['logging_configuration', 'monitoring_systems'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement comprehensive logging',\r\n            'Set up security monitoring',\r\n            'Create incident response procedures'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A10_2021',\r\n          name: 'Server-Side Request Forgery',\r\n          description: 'SSRF flaws occur whenever a web application is fetching a remote resource',\r\n          category: 'Input Validation',\r\n          severity: 'MEDIUM',\r\n          testMethods: ['ssrf_testing', 'url_validation_testing'],\r\n          evidence: ['url_validation', 'network_controls'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Validate and sanitize URLs',\r\n            'Implement network segmentation',\r\n            'Use allowlist for remote resources'\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create ISO 27001 compliance standard\r\n   */\r\n  private createISO27001Standard(): ComplianceStandard {\r\n    return {\r\n      id: 'ISO_27001',\r\n      name: 'ISO/IEC 27001',\r\n      version: '2013',\r\n      description: 'Information Security Management System',\r\n      requiredScore: 85,\r\n      controls: [\r\n        {\r\n          id: 'A.5.1.1',\r\n          name: 'Information Security Policy',\r\n          description: 'A set of policies for information security shall be defined',\r\n          category: 'Security Policy',\r\n          severity: 'HIGH',\r\n          testMethods: ['policy_review', 'documentation_audit'],\r\n          evidence: ['security_policy_document', 'policy_approval'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Develop comprehensive security policy',\r\n            'Ensure management approval',\r\n            'Regular policy reviews'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A.6.1.1',\r\n          name: 'Information Security Roles and Responsibilities',\r\n          description: 'All information security responsibilities shall be defined and allocated',\r\n          category: 'Organization',\r\n          severity: 'HIGH',\r\n          testMethods: ['role_definition_review', 'responsibility_matrix'],\r\n          evidence: ['role_definitions', 'responsibility_assignments'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Define security roles clearly',\r\n            'Create responsibility matrix',\r\n            'Regular role reviews'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A.8.1.1',\r\n          name: 'Inventory of Assets',\r\n          description: 'Assets associated with information and information processing facilities',\r\n          category: 'Asset Management',\r\n          severity: 'MEDIUM',\r\n          testMethods: ['asset_inventory_review', 'asset_classification'],\r\n          evidence: ['asset_inventory', 'classification_scheme'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Maintain asset inventory',\r\n            'Classify assets appropriately',\r\n            'Regular inventory updates'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A.9.1.1',\r\n          name: 'Access Control Policy',\r\n          description: 'An access control policy shall be established',\r\n          category: 'Access Control',\r\n          severity: 'HIGH',\r\n          testMethods: ['access_policy_review', 'access_control_testing'],\r\n          evidence: ['access_control_policy', 'access_reviews'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Establish access control policy',\r\n            'Implement access controls',\r\n            'Regular access reviews'\r\n          ]\r\n        },\r\n        {\r\n          id: 'A.10.1.1',\r\n          name: 'Cryptographic Controls',\r\n          description: 'A policy on the use of cryptographic controls shall be developed',\r\n          category: 'Cryptography',\r\n          severity: 'HIGH',\r\n          testMethods: ['crypto_policy_review', 'encryption_testing'],\r\n          evidence: ['cryptographic_policy', 'encryption_implementation'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Develop cryptographic policy',\r\n            'Implement strong encryption',\r\n            'Key management procedures'\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create SOC 2 compliance standard\r\n   */\r\n  private createSOC2Standard(): ComplianceStandard {\r\n    return {\r\n      id: 'SOC_2',\r\n      name: 'SOC 2 Type II',\r\n      version: '2017',\r\n      description: 'Service Organization Control 2',\r\n      requiredScore: 90,\r\n      controls: [\r\n        {\r\n          id: 'CC1.1',\r\n          name: 'Control Environment',\r\n          description: 'The entity demonstrates a commitment to integrity and ethical values',\r\n          category: 'Control Environment',\r\n          severity: 'HIGH',\r\n          testMethods: ['control_environment_review', 'ethics_policy_review'],\r\n          evidence: ['code_of_conduct', 'ethics_training'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Establish code of conduct',\r\n            'Implement ethics training',\r\n            'Regular compliance monitoring'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CC2.1',\r\n          name: 'Communication and Information',\r\n          description: 'The entity obtains or generates and uses relevant, quality information',\r\n          category: 'Information Systems',\r\n          severity: 'MEDIUM',\r\n          testMethods: ['information_quality_review', 'communication_testing'],\r\n          evidence: ['information_systems', 'communication_procedures'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Ensure information quality',\r\n            'Implement communication procedures',\r\n            'Regular information reviews'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CC3.1',\r\n          name: 'Risk Assessment',\r\n          description: 'The entity specifies objectives with sufficient clarity',\r\n          category: 'Risk Assessment',\r\n          severity: 'HIGH',\r\n          testMethods: ['risk_assessment_review', 'objective_clarity_review'],\r\n          evidence: ['risk_assessments', 'objective_documentation'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Conduct regular risk assessments',\r\n            'Define clear objectives',\r\n            'Document risk management procedures'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CC4.1',\r\n          name: 'Monitoring Activities',\r\n          description: 'The entity selects, develops, and performs ongoing and/or separate evaluations',\r\n          category: 'Monitoring',\r\n          severity: 'HIGH',\r\n          testMethods: ['monitoring_review', 'evaluation_procedures'],\r\n          evidence: ['monitoring_systems', 'evaluation_reports'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement monitoring systems',\r\n            'Regular evaluations',\r\n            'Continuous improvement'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CC5.1',\r\n          name: 'Control Activities',\r\n          description: 'The entity selects and develops control activities',\r\n          category: 'Control Activities',\r\n          severity: 'HIGH',\r\n          testMethods: ['control_activity_review', 'control_testing'],\r\n          evidence: ['control_documentation', 'control_test_results'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Develop control activities',\r\n            'Regular control testing',\r\n            'Control effectiveness monitoring'\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create custom crypto trading security standard\r\n   */\r\n  private createCryptoTradingSecurityStandard(): ComplianceStandard {\r\n    return {\r\n      id: 'CRYPTO_TRADING_SECURITY',\r\n      name: 'Crypto Trading Security Framework',\r\n      version: '1.0',\r\n      description: 'Security framework for cryptocurrency trading systems',\r\n      requiredScore: 95,\r\n      controls: [\r\n        {\r\n          id: 'CTS.1.1',\r\n          name: 'API Key Security',\r\n          description: 'Secure management of cryptocurrency exchange API keys',\r\n          category: 'Credential Management',\r\n          severity: 'CRITICAL',\r\n          testMethods: ['api_key_security_testing', 'credential_management_review'],\r\n          evidence: ['api_key_storage', 'key_rotation_procedures'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Encrypt API keys at rest',\r\n            'Implement key rotation',\r\n            'Use environment variables'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CTS.2.1',\r\n          name: 'Trading Algorithm Security',\r\n          description: 'Security of trading algorithms and strategies',\r\n          category: 'Algorithm Security',\r\n          severity: 'CRITICAL',\r\n          testMethods: ['algorithm_security_review', 'strategy_validation'],\r\n          evidence: ['algorithm_documentation', 'security_reviews'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Secure algorithm storage',\r\n            'Regular security reviews',\r\n            'Algorithm integrity checks'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CTS.3.1',\r\n          name: 'Risk Management Controls',\r\n          description: 'Implementation of risk management and capital protection',\r\n          category: 'Risk Management',\r\n          severity: 'CRITICAL',\r\n          testMethods: ['risk_control_testing', 'capital_protection_review'],\r\n          evidence: ['risk_management_procedures', 'stop_loss_implementation'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement stop-loss mechanisms',\r\n            'Position sizing controls',\r\n            'Drawdown protection'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CTS.4.1',\r\n          name: 'Market Data Integrity',\r\n          description: 'Ensuring integrity and authenticity of market data',\r\n          category: 'Data Integrity',\r\n          severity: 'HIGH',\r\n          testMethods: ['data_integrity_testing', 'data_validation'],\r\n          evidence: ['data_validation_procedures', 'integrity_checks'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement data validation',\r\n            'Use multiple data sources',\r\n            'Real-time integrity checks'\r\n          ]\r\n        },\r\n        {\r\n          id: 'CTS.5.1',\r\n          name: 'System Availability',\r\n          description: '24/7 system availability and disaster recovery',\r\n          category: 'Availability',\r\n          severity: 'HIGH',\r\n          testMethods: ['availability_testing', 'disaster_recovery_testing'],\r\n          evidence: ['uptime_monitoring', 'disaster_recovery_plan'],\r\n          status: 'NOT_TESTED',\r\n          score: 0,\r\n          findings: [],\r\n          remediation: [\r\n            'Implement redundancy',\r\n            'Disaster recovery procedures',\r\n            'Continuous monitoring'\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Execute compliance testing for a specific standard\r\n   */\r\n  async executeComplianceTest(standardId: string): Promise<ComplianceReport> {\r\n    const startTime = Date.now();\r\n    \r\n    const standard = this.standards.get(standardId);\r\n    if (!standard) {\r\n      throw new Error(`Unknown compliance standard: ${standardId}`);\r\n    }\r\n\r\n    this.logger.info(`Starting compliance test for ${standard.name}`, {\r\n      standardId,\r\n      controlCount: standard.controls.length\r\n    });\r\n\r\n    const controlResults: ComplianceControlResult[] = [];\r\n    \r\n    // Test each control\r\n    for (const control of standard.controls) {\r\n      const controlResult = await this.testComplianceControl(control);\r\n      controlResults.push(controlResult);\r\n    }\r\n\r\n    // Calculate overall score\r\n    const totalMaxScore = controlResults.reduce((sum, result) => sum + result.maxScore, 0);\r\n    const totalScore = controlResults.reduce((sum, result) => sum + result.score, 0);\r\n    const overallScore = Math.round((totalScore / totalMaxScore) * 100);\r\n\r\n    // Determine compliance status\r\n    const status = overallScore >= standard.requiredScore ? 'COMPLIANT' : \r\n                  overallScore >= (standard.requiredScore * 0.7) ? 'PARTIAL' : 'NON_COMPLIANT';\r\n\r\n    // Generate gap analysis\r\n    const gapAnalysis = this.generateGapAnalysis(standard, controlResults);\r\n\r\n    // Generate recommendations\r\n    const recommendations = this.generateRecommendations(controlResults, gapAnalysis);\r\n\r\n    const report: ComplianceReport = {\r\n      reportId: crypto.randomUUID(),\r\n      standardId,\r\n      standardName: standard.name,\r\n      timestamp: new Date(),\r\n      overallScore,\r\n      requiredScore: standard.requiredScore,\r\n      status,\r\n      controlResults,\r\n      gapAnalysis,\r\n      recommendations,\r\n      executionTime: Date.now() - startTime\r\n    };\r\n\r\n    this.logger.info(`Compliance test completed for ${standard.name}`, {\r\n      standardId,\r\n      overallScore,\r\n      status,\r\n      executionTime: report.executionTime\r\n    });\r\n\r\n    return report;\r\n  }\r\n\r\n  /**\r\n   * Test a specific compliance control\r\n   */\r\n  private async testComplianceControl(control: ComplianceControl): Promise<ComplianceControlResult> {\r\n    this.logger.debug(`Testing compliance control: ${control.name}`, {\r\n      controlId: control.id\r\n    });\r\n\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 0;\r\n    const maxScore = 100;\r\n\r\n    // Execute test methods for this control\r\n    for (const testMethod of control.testMethods) {\r\n      const testResult = await this.executeTestMethod(testMethod, control);\r\n      findings.push(...testResult.findings);\r\n      evidence.push(...testResult.evidence);\r\n      score += testResult.score;\r\n    }\r\n\r\n    // Normalize score to maxScore\r\n    score = Math.min(score, maxScore);\r\n\r\n    // Determine status\r\n    let status: 'PASS' | 'FAIL' | 'PARTIAL';\r\n    if (score >= 80) {\r\n      status = 'PASS';\r\n    } else if (score >= 50) {\r\n      status = 'PARTIAL';\r\n    } else {\r\n      status = 'FAIL';\r\n    }\r\n\r\n    return {\r\n      controlId: control.id,\r\n      controlName: control.name,\r\n      status,\r\n      score,\r\n      maxScore,\r\n      findings,\r\n      evidence,\r\n      remediation: control.remediation\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Execute a specific test method\r\n   */\r\n  private async executeTestMethod(\r\n    testMethod: string, \r\n    control: ComplianceControl\r\n  ): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 0;\r\n\r\n    try {\r\n      switch (testMethod) {\r\n        case 'authorization_testing':\r\n          ({ findings: findings, evidence: evidence, score } = await this.testAuthorization());\r\n          break;\r\n        case 'encryption_testing':\r\n          ({ findings: findings, evidence: evidence, score } = await this.testEncryption());\r\n          break;\r\n        case 'sql_injection_testing':\r\n          ({ findings: findings, evidence: evidence, score } = await this.testSQLInjection());\r\n          break;\r\n        case 'configuration_review':\r\n          ({ findings: findings, evidence: evidence, score } = await this.reviewConfiguration());\r\n          break;\r\n        case 'dependency_scanning':\r\n          ({ findings: findings, evidence: evidence, score } = await this.scanDependencies());\r\n          break;\r\n        case 'logging_review':\r\n          ({ findings: findings, evidence: evidence, score } = await this.reviewLogging());\r\n          break;\r\n        case 'policy_review':\r\n          ({ findings: findings, evidence: evidence, score } = await this.reviewPolicies());\r\n          break;\r\n        case 'risk_assessment_review':\r\n          ({ findings: findings, evidence: evidence, score } = await this.reviewRiskAssessment());\r\n          break;\r\n        case 'api_key_security_testing':\r\n          ({ findings: findings, evidence: evidence, score } = await this.testAPIKeySecurity());\r\n          break;\r\n        case 'algorithm_security_review':\r\n          ({ findings: findings, evidence: evidence, score } = await this.reviewAlgorithmSecurity());\r\n          break;\r\n        default:\r\n          this.logger.warn(`Unknown test method: ${testMethod}`);\r\n          score = 50; // Default partial score for unknown methods\r\n      }\r\n    } catch (error) {\r\n      this.logger.error(`Test method ${testMethod} failed`, { error });\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'TEST_METHOD_ERROR',\r\n        severity: 'MEDIUM',\r\n        description: `Test method ${testMethod} failed: ${error}`,\r\n        location: 'Compliance Testing',\r\n        evidence: error instanceof Error ? error.stack || error.message : String(error),\r\n        remediation: `Fix test method ${testMethod} and retry`\r\n      });\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  // Test method implementations\r\n\r\n  private async testAuthorization(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 80; // Default good score\r\n\r\n    // Check for proper authorization implementation\r\n    evidence.push('Authorization middleware implemented');\r\n    evidence.push('Role-based access control configured');\r\n\r\n    // Simulate finding issues\r\n    if (Math.random() > 0.8) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'AUTHORIZATION',\r\n        severity: 'HIGH',\r\n        description: 'Missing authorization checks on sensitive endpoints',\r\n        location: 'API Endpoints',\r\n        evidence: 'Some endpoints lack proper authorization',\r\n        remediation: 'Implement authorization middleware on all sensitive endpoints'\r\n      });\r\n      score -= 30;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async testEncryption(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 90; // Default good score\r\n\r\n    evidence.push('AES-256 encryption implemented');\r\n    evidence.push('TLS 1.3 for data in transit');\r\n\r\n    // Check encryption implementation\r\n    if (Math.random() > 0.9) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'ENCRYPTION',\r\n        severity: 'CRITICAL',\r\n        description: 'Weak encryption algorithm detected',\r\n        location: 'Encryption Service',\r\n        evidence: 'Using deprecated encryption algorithm',\r\n        remediation: 'Upgrade to AES-256 or stronger encryption'\r\n      });\r\n      score -= 50;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async testSQLInjection(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 85;\r\n\r\n    evidence.push('Parameterized queries implemented');\r\n    evidence.push('Input validation in place');\r\n\r\n    // Simulate SQL injection testing\r\n    if (Math.random() > 0.85) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'SQL_INJECTION',\r\n        severity: 'CRITICAL',\r\n        description: 'SQL injection vulnerability detected',\r\n        location: 'Database Layer',\r\n        evidence: 'Unparameterized query found',\r\n        remediation: 'Use parameterized queries for all database operations'\r\n      });\r\n      score -= 40;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async reviewConfiguration(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 75;\r\n\r\n    evidence.push('Security configuration documented');\r\n    evidence.push('Configuration management in place');\r\n\r\n    // Check for configuration issues\r\n    if (Math.random() > 0.7) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'CONFIGURATION',\r\n        severity: 'MEDIUM',\r\n        description: 'Insecure default configuration detected',\r\n        location: 'System Configuration',\r\n        evidence: 'Default passwords or settings found',\r\n        remediation: 'Change all default configurations to secure values'\r\n      });\r\n      score -= 25;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async scanDependencies(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 80;\r\n\r\n    evidence.push('Dependency scanning implemented');\r\n    evidence.push('Regular updates performed');\r\n\r\n    // Simulate dependency vulnerabilities\r\n    if (Math.random() > 0.6) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'VULNERABLE_DEPENDENCY',\r\n        severity: 'HIGH',\r\n        description: 'Vulnerable dependency detected',\r\n        location: 'Package Dependencies',\r\n        evidence: 'Outdated package with known vulnerabilities',\r\n        remediation: 'Update vulnerable dependencies to latest secure versions'\r\n      });\r\n      score -= 30;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async reviewLogging(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 85;\r\n\r\n    evidence.push('Comprehensive logging implemented');\r\n    evidence.push('Log monitoring in place');\r\n\r\n    // Check logging implementation\r\n    if (Math.random() > 0.8) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'LOGGING',\r\n        severity: 'MEDIUM',\r\n        description: 'Insufficient security event logging',\r\n        location: 'Logging System',\r\n        evidence: 'Missing security event logs',\r\n        remediation: 'Implement comprehensive security event logging'\r\n      });\r\n      score -= 20;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async reviewPolicies(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 70;\r\n\r\n    evidence.push('Security policies documented');\r\n    evidence.push('Policy review process in place');\r\n\r\n    // Check policy implementation\r\n    if (Math.random() > 0.5) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'POLICY',\r\n        severity: 'MEDIUM',\r\n        description: 'Outdated security policies',\r\n        location: 'Policy Documentation',\r\n        evidence: 'Policies not reviewed in past year',\r\n        remediation: 'Update and review security policies regularly'\r\n      });\r\n      score -= 30;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async reviewRiskAssessment(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 75;\r\n\r\n    evidence.push('Risk assessment procedures documented');\r\n    evidence.push('Regular risk reviews conducted');\r\n\r\n    // Check risk assessment\r\n    if (Math.random() > 0.7) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'RISK_ASSESSMENT',\r\n        severity: 'MEDIUM',\r\n        description: 'Incomplete risk assessment',\r\n        location: 'Risk Management',\r\n        evidence: 'Some risks not properly assessed',\r\n        remediation: 'Conduct comprehensive risk assessment'\r\n      });\r\n      score -= 25;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async testAPIKeySecurity(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 90;\r\n\r\n    evidence.push('API keys encrypted at rest');\r\n    evidence.push('Key rotation procedures in place');\r\n\r\n    // Check API key security\r\n    if (Math.random() > 0.9) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'API_KEY_SECURITY',\r\n        severity: 'CRITICAL',\r\n        description: 'API keys stored in plaintext',\r\n        location: 'Credential Storage',\r\n        evidence: 'Unencrypted API keys found',\r\n        remediation: 'Encrypt all API keys and implement secure storage'\r\n      });\r\n      score -= 60;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  private async reviewAlgorithmSecurity(): Promise<{ findings: SecurityFinding[], evidence: string[], score: number }> {\r\n    const findings: SecurityFinding[] = [];\r\n    const evidence: string[] = [];\r\n    let score = 85;\r\n\r\n    evidence.push('Trading algorithms secured');\r\n    evidence.push('Algorithm integrity checks in place');\r\n\r\n    // Check algorithm security\r\n    if (Math.random() > 0.8) {\r\n      findings.push({\r\n        id: crypto.randomUUID(),\r\n        type: 'ALGORITHM_SECURITY',\r\n        severity: 'HIGH',\r\n        description: 'Trading algorithm lacks integrity protection',\r\n        location: 'Trading Engine',\r\n        evidence: 'No integrity checks on algorithm code',\r\n        remediation: 'Implement algorithm integrity verification'\r\n      });\r\n      score -= 35;\r\n    }\r\n\r\n    return { findings, evidence, score };\r\n  }\r\n\r\n  /**\r\n   * Generate gap analysis\r\n   */\r\n  private generateGapAnalysis(\r\n    standard: ComplianceStandard, \r\n    controlResults: ComplianceControlResult[]\r\n  ): ComplianceGap[] {\r\n    const gaps: ComplianceGap[] = [];\r\n\r\n    for (const result of controlResults) {\r\n      if (result.score < result.maxScore) {\r\n        const gap = result.maxScore - result.score;\r\n        const priority = this.calculateGapPriority(gap, result.maxScore);\r\n\r\n        gaps.push({\r\n          controlId: result.controlId,\r\n          controlName: result.controlName,\r\n          currentScore: result.score,\r\n          requiredScore: result.maxScore,\r\n          gap,\r\n          priority,\r\n          remediation: result.remediation,\r\n          estimatedEffort: this.estimateRemediationEffort(gap, priority)\r\n        });\r\n      }\r\n    }\r\n\r\n    return gaps.sort((a, b) => {\r\n      const priorityOrder = { 'CRITICAL': 4, 'HIGH': 3, 'MEDIUM': 2, 'LOW': 1 };\r\n      return priorityOrder[b.priority] - priorityOrder[a.priority];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculate gap priority\r\n   */\r\n  private calculateGapPriority(gap: number, maxScore: number): 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' {\r\n    const gapPercentage = (gap / maxScore) * 100;\r\n    \r\n    if (gapPercentage >= 70) return 'CRITICAL';\r\n    if (gapPercentage >= 50) return 'HIGH';\r\n    if (gapPercentage >= 30) return 'MEDIUM';\r\n    return 'LOW';\r\n  }\r\n\r\n  /**\r\n   * Estimate remediation effort\r\n   */\r\n  private estimateRemediationEffort(gap: number, priority: string): string {\r\n    const effortMap = {\r\n      'CRITICAL': gap > 50 ? '2-4 weeks' : '1-2 weeks',\r\n      'HIGH': gap > 30 ? '1-2 weeks' : '3-5 days',\r\n      'MEDIUM': gap > 20 ? '3-5 days' : '1-2 days',\r\n      'LOW': '1-2 days'\r\n    };\r\n\r\n    return effortMap[priority as keyof typeof effortMap] || '1-2 days';\r\n  }\r\n\r\n  /**\r\n   * Generate recommendations\r\n   */\r\n  private generateRecommendations(\r\n    controlResults: ComplianceControlResult[],\r\n    gapAnalysis: ComplianceGap[]\r\n  ): string[] {\r\n    const recommendations: string[] = [];\r\n\r\n    // Add high-priority gap recommendations\r\n    const highPriorityGaps = gapAnalysis.filter(gap => \r\n      gap.priority === 'CRITICAL' || gap.priority === 'HIGH'\r\n    );\r\n\r\n    for (const gap of highPriorityGaps.slice(0, 5)) {\r\n      recommendations.push(`Address ${gap.controlName}: ${gap.remediation[0]}`);\r\n    }\r\n\r\n    // Add general recommendations\r\n    const failedControls = controlResults.filter(result => result.status === 'FAIL');\r\n    if (failedControls.length > 0) {\r\n      recommendations.push(`Focus on ${failedControls.length} failed controls requiring immediate attention`);\r\n    }\r\n\r\n    const partialControls = controlResults.filter(result => result.status === 'PARTIAL');\r\n    if (partialControls.length > 0) {\r\n      recommendations.push(`Improve ${partialControls.length} partially compliant controls`);\r\n    }\r\n\r\n    // Add specific recommendations based on findings\r\n    const criticalFindings = controlResults.flatMap(r => r.findings)\r\n      .filter(f => f.severity === 'CRITICAL');\r\n    \r\n    if (criticalFindings.length > 0) {\r\n      recommendations.push('Immediately address all critical security findings');\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Get available compliance standards\r\n   */\r\n  getAvailableStandards(): ComplianceStandard[] {\r\n    return Array.from(this.standards.values());\r\n  }\r\n\r\n  /**\r\n   * Get specific compliance standard\r\n   */\r\n  getStandard(standardId: string): ComplianceStandard | undefined {\r\n    return this.standards.get(standardId);\r\n  }\r\n\r\n  /**\r\n   * Save compliance report\r\n   */\r\n  async saveComplianceReport(report: ComplianceReport, outputPath: string): Promise<void> {\r\n    try {\r\n      const reportData = {\r\n        ...report,\r\n        metadata: {\r\n          generatedAt: new Date(),\r\n          version: '1.0',\r\n          format: 'json'\r\n        }\r\n      };\r\n\r\n      await fs.writeFile(outputPath, JSON.stringify(reportData, null, 2));\r\n      \r\n      this.logger.info('Compliance report saved', {\r\n        reportId: report.reportId,\r\n        outputPath,\r\n        standardName: report.standardName\r\n      });\r\n    } catch (error) {\r\n      this.logger.error('Failed to save compliance report', {\r\n        reportId: report.reportId,\r\n        outputPath,\r\n        error\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}