{"version":3,"names":["cov_n3vfm84i2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","exampleSentimentAnalysis","integrateSentimentWithTrading","sentiment_engine_1","require","sentiment_config_1","logger_1","logger","info","config","createSentimentConfig","sentimentEngine","SentimentAnalysisEngine","startEngine","Promise","resolve","setTimeout","currentSentiment","getCurrentSentiment","score","aggregatedScore","confidence","map","source","volume","report","generateSentimentReport","overallScore","overall","trendsCount","trends","length","alertsCount","alerts","recommendationsCount","recommendations","baseSizePercent","adjustedSize","calculateSentimentPositionAdjustment","baseSize","adjustment","toFixed","history","getSentimentHistory","dataPoints","timeSpan","latestScore","status","getStatus","stopEngine","error","sentimentScore","technicalSignal","finalDecision","reasoning","positionSizeMultiplier","Math","abs","sentimentMultiplier","max","min","sentiment_engine_2","Object","defineProperty","enumerable","get","sentiment_config_2"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\sentiment\\example-usage.ts"],"sourcesContent":["/**\r\n * Sentiment Analysis Engine Usage Example\r\n * Demonstrates how to integrate and use the sentiment analysis engine\r\n */\r\n\r\nimport { SentimentAnalysisEngine } from './sentiment-engine';\r\nimport { createSentimentConfig } from '../../config/sentiment-config';\r\nimport { logger } from '../../core/logging/logger';\r\n\r\n/**\r\n * Example usage of the sentiment analysis engine\r\n */\r\nexport async function exampleSentimentAnalysis(): Promise<void> {\r\n  try {\r\n    logger.info('Starting sentiment analysis example');\r\n\r\n    // Create configuration\r\n    const config = createSentimentConfig();\r\n    \r\n    // Initialize sentiment engine\r\n    const sentimentEngine = new SentimentAnalysisEngine(config);\r\n    \r\n    // Start the engine (this would run continuously in production)\r\n    await sentimentEngine.startEngine(5); // 5-minute intervals\r\n    \r\n    // Wait a bit for initial data collection\r\n    await new Promise(resolve => setTimeout(resolve, 10000));\r\n    \r\n    // Get current sentiment\r\n    const currentSentiment = await sentimentEngine.getCurrentSentiment();\r\n    logger.info('Current sentiment:', {\r\n      score: currentSentiment.aggregatedScore,\r\n      confidence: currentSentiment.confidence,\r\n      sources: currentSentiment.sources.map(s => ({\r\n        source: s.source,\r\n        score: s.score,\r\n        confidence: s.confidence,\r\n        volume: s.volume\r\n      }))\r\n    });\r\n    \r\n    // Generate comprehensive report\r\n    const report = await sentimentEngine.generateSentimentReport();\r\n    logger.info('Sentiment report generated:', {\r\n      overallScore: report.overall.aggregatedScore,\r\n      trendsCount: report.trends.length,\r\n      alertsCount: report.alerts.length,\r\n      recommendationsCount: report.recommendations.length\r\n    });\r\n    \r\n    // Example of position sizing adjustment based on sentiment\r\n    const baseSizePercent = 2.0; // 2% risk per trade\r\n    const adjustedSize = sentimentEngine.calculateSentimentPositionAdjustment(baseSizePercent);\r\n    logger.info('Position sizing adjustment:', {\r\n      baseSize: baseSizePercent,\r\n      adjustedSize: adjustedSize,\r\n      adjustment: ((adjustedSize / baseSizePercent - 1) * 100).toFixed(2) + '%'\r\n    });\r\n    \r\n    // Get sentiment history\r\n    const history = sentimentEngine.getSentimentHistory(1); // Last 1 hour\r\n    logger.info('Sentiment history:', {\r\n      dataPoints: history.length,\r\n      timeSpan: '1 hour',\r\n      latestScore: history.length > 0 ? history[history.length - 1].aggregatedScore : 'N/A'\r\n    });\r\n    \r\n    // Get engine status\r\n    const status = sentimentEngine.getStatus();\r\n    logger.info('Engine status:', status);\r\n    \r\n    // Stop the engine\r\n    sentimentEngine.stopEngine();\r\n    logger.info('Sentiment analysis example completed');\r\n    \r\n  } catch (error) {\r\n    logger.error('Error in sentiment analysis example:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Example of integrating sentiment analysis with trading decisions\r\n */\r\nexport function integrateSentimentWithTrading(\r\n  sentimentScore: number,\r\n  confidence: number,\r\n  technicalSignal: 'BUY' | 'SELL' | 'HOLD'\r\n): {\r\n  finalDecision: 'BUY' | 'SELL' | 'HOLD';\r\n  reasoning: string;\r\n  positionSizeMultiplier: number;\r\n} {\r\n  let finalDecision = technicalSignal;\r\n  let reasoning = `Technical signal: ${technicalSignal}`;\r\n  let positionSizeMultiplier = 1.0;\r\n  \r\n  // Only consider sentiment if confidence is high enough\r\n  if (confidence > 60) {\r\n    if (sentimentScore > 50 && technicalSignal === 'BUY') {\r\n      // Strong positive sentiment reinforces buy signal\r\n      positionSizeMultiplier = 1.3;\r\n      reasoning += `, Strong positive sentiment (${sentimentScore}) reinforces buy signal`;\r\n    } else if (sentimentScore < -50 && technicalSignal === 'SELL') {\r\n      // Strong negative sentiment reinforces sell signal\r\n      positionSizeMultiplier = 1.3;\r\n      reasoning += `, Strong negative sentiment (${sentimentScore}) reinforces sell signal`;\r\n    } else if (sentimentScore > 70 && technicalSignal === 'HOLD') {\r\n      // Extremely positive sentiment might override hold\r\n      finalDecision = 'BUY';\r\n      positionSizeMultiplier = 1.2;\r\n      reasoning += `, Extremely positive sentiment (${sentimentScore}) overrides hold signal`;\r\n    } else if (sentimentScore < -70 && technicalSignal === 'HOLD') {\r\n      // Extremely negative sentiment might override hold\r\n      finalDecision = 'SELL';\r\n      positionSizeMultiplier = 1.2;\r\n      reasoning += `, Extremely negative sentiment (${sentimentScore}) overrides hold signal`;\r\n    } else if (Math.abs(sentimentScore) > 30) {\r\n      // Moderate sentiment affects position size\r\n      const sentimentMultiplier = 1 + (sentimentScore / 100) * 0.2;\r\n      positionSizeMultiplier = Math.max(0.5, Math.min(1.5, sentimentMultiplier));\r\n      reasoning += `, Sentiment (${sentimentScore}) adjusts position size`;\r\n    }\r\n  } else {\r\n    reasoning += `, Low sentiment confidence (${confidence}%) - relying on technical analysis`;\r\n  }\r\n  \r\n  return {\r\n    finalDecision,\r\n    reasoning,\r\n    positionSizeMultiplier\r\n  };\r\n}\r\n\r\n// Export for use in other modules\r\nexport { SentimentAnalysisEngine } from './sentiment-engine';\r\nexport { createSentimentConfig } from '../../config/sentiment-config';\r\n"],"mappings":"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C,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,K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","ignoreList":[]}