{"version":3,"names":["cov_1m1i8q56xj","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","express_1","__importDefault","require","http_1","socket_io_1","cors_1","helmet_1","logger_1","DashboardServer","logger","config","app","server","io","tradingEngine","aiEngine","database","security","isRunning","constructor","Logger","default","createServer","Server","cors","origin","credentials","setupMiddleware","setupRoutes","setupWebSocket","setTradingEngine","setAIEngine","setDatabase","setSecurity","Promise","resolve","reject","listen","port","host","info","on","error","stop","close","use","contentSecurityPolicy","directives","defaultSrc","styleSrc","scriptSrc","imgSrc","connectSrc","crossOriginEmbedderPolicy","callback","allowedOrigins","isAllowed","some","allowedOrigin","includes","pattern","replace","regex","RegExp","test","warn","methods","allowedHeaders","json","limit","urlencoded","extended","req","res","next","debug","method","get","userAgent","ip","status","timestamp","Date","toISOString","getStatus","dashboard","corsOrigins","network","clientIP","success","data","networkInfo","serverHost","serverPort","headers","send","toLocaleString","socket","id","emit","message","now","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts"],"sourcesContent":["/**\r\n * AI CRYPTO TRADING AGENT - DASHBOARD SERVER\r\n * Express.js server with WebSocket for real-time trading dashboard\r\n */\r\n\r\nimport express, { Express, Request, Response, NextFunction } from 'express';\r\nimport { createServer, Server } from 'http';\r\nimport { Server as SocketIOServer } from 'socket.io';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport { Logger } from '../core/logging/logger';\r\n\r\nexport interface DashboardServerConfig {\r\n  port: number;\r\n  host: string;\r\n  cors: {\r\n    origin: string[];\r\n    credentials: boolean;\r\n  };\r\n  auth: {\r\n    enabled: boolean;\r\n    secret: string;\r\n  };\r\n  rateLimit: {\r\n    windowMs: number;\r\n    max: number;\r\n  };\r\n}\r\n\r\nexport class DashboardServer {\r\n  private logger: Logger;\r\n  private config: DashboardServerConfig;\r\n  private app: Express;\r\n  private server: Server;\r\n  private io: SocketIOServer;\r\n  private tradingEngine: any = null;\r\n  private aiEngine: any = null;\r\n  private database: any = null;\r\n  private security: any = null;\r\n  private isRunning: boolean = false;\r\n\r\n  constructor(config: DashboardServerConfig) {\r\n    this.logger = new Logger('DashboardServer');\r\n    this.config = config;\r\n    \r\n    this.app = express();\r\n    this.server = createServer(this.app);\r\n    this.io = new SocketIOServer(this.server, {\r\n      cors: {\r\n        origin: config.cors.origin,\r\n        credentials: config.cors.credentials\r\n      }\r\n    });\r\n\r\n    this.setupMiddleware();\r\n    this.setupRoutes();\r\n    this.setupWebSocket();\r\n  }\r\n\r\n  setTradingEngine(tradingEngine: any): void {\r\n    this.tradingEngine = tradingEngine;\r\n  }\r\n\r\n  setAIEngine(aiEngine: any): void {\r\n    this.aiEngine = aiEngine;\r\n  }\r\n\r\n  setDatabase(database: any): void {\r\n    this.database = database;\r\n  }\r\n\r\n  setSecurity(security: any): void {\r\n    this.security = security;\r\n  }\r\n\r\n  async start(): Promise<void> {\r\n    if (this.isRunning) return;\r\n\r\n    try {\r\n      await new Promise<void>((resolve, reject) => {\r\n        this.server.listen(this.config.port, this.config.host, () => {\r\n          this.isRunning = true;\r\n          this.logger.info(`Dashboard Server started on http://${this.config.host}:${this.config.port}`);\r\n          resolve();\r\n        });\r\n        this.server.on('error', reject);\r\n      });\r\n    } catch (error) {\r\n      this.logger.error('Failed to start Dashboard Server:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async stop(): Promise<void> {\r\n    if (!this.isRunning) return;\r\n\r\n    this.io.close();\r\n    await new Promise<void>((resolve) => {\r\n      this.server.close(() => {\r\n        this.isRunning = false;\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  private setupMiddleware(): void {\r\n    // Configure Helmet for local network access\r\n    this.app.use(helmet({\r\n      contentSecurityPolicy: {\r\n        directives: {\r\n          defaultSrc: [\"'self'\"],\r\n          styleSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n          scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n          imgSrc: [\"'self'\", \"data:\", \"https:\"],\r\n          connectSrc: [\"'self'\", \"ws:\", \"wss:\"]\r\n        }\r\n      },\r\n      crossOriginEmbedderPolicy: false\r\n    }));\r\n\r\n    // Configure CORS for local network access\r\n    this.app.use(cors({\r\n      origin: (origin, callback) => {\r\n        // Allow requests with no origin (mobile apps, curl, etc.)\r\n        if (!origin) return callback(null, true);\r\n        \r\n        // Check if origin matches configured patterns\r\n        const allowedOrigins = this.config.cors.origin;\r\n        const isAllowed = allowedOrigins.some(allowedOrigin => {\r\n          if (allowedOrigin === '*') return true;\r\n          if (allowedOrigin === origin) return true;\r\n          \r\n          // Support wildcard patterns for local networks\r\n          if (allowedOrigin.includes('*')) {\r\n            const pattern = allowedOrigin.replace(/\\*/g, '.*');\r\n            const regex = new RegExp(`^${pattern}$`);\r\n            return regex.test(origin);\r\n          }\r\n          \r\n          return false;\r\n        });\r\n        \r\n        if (isAllowed) {\r\n          callback(null, true);\r\n        } else {\r\n          this.logger.warn(`CORS blocked origin: ${origin}`);\r\n          callback(null, false);\r\n        }\r\n      },\r\n      credentials: this.config.cors.credentials,\r\n      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n      allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']\r\n    }));\r\n\r\n    this.app.use(express.json({ limit: '10mb' }));\r\n    this.app.use(express.urlencoded({ extended: true, limit: '10mb' }));\r\n\r\n    // Add request logging for debugging\r\n    this.app.use((req: Request, res: Response, next: NextFunction) => {\r\n      this.logger.debug(`${req.method} ${req.path}`, {\r\n        origin: req.get('Origin'),\r\n        userAgent: req.get('User-Agent'),\r\n        ip: req.ip\r\n      });\r\n      next();\r\n    });\r\n  }\r\n\r\n  private setupRoutes(): void {\r\n    // Health check endpoint\r\n    this.app.get('/health', (req: Request, res: Response) => {\r\n      res.json({ \r\n        status: 'healthy', \r\n        timestamp: new Date().toISOString(),\r\n        host: this.config.host,\r\n        port: this.config.port\r\n      });\r\n    });\r\n\r\n    // System status API\r\n    this.app.get('/api/system/status', async (req: Request, res: Response) => {\r\n      try {\r\n        const status = {\r\n          tradingEngine: this.tradingEngine?.getStatus() || null,\r\n          aiEngine: this.aiEngine?.getStatus() || null,\r\n          database: this.database?.getStatus() || null,\r\n          dashboard: { \r\n            isRunning: this.isRunning,\r\n            host: this.config.host,\r\n            port: this.config.port,\r\n            corsOrigins: this.config.cors.origin\r\n          },\r\n          network: {\r\n            clientIP: req.ip,\r\n            origin: req.get('Origin'),\r\n            userAgent: req.get('User-Agent')\r\n          }\r\n        };\r\n        res.json({ success: true, data: status });\r\n      } catch (error) {\r\n        this.logger.error('Error getting system status:', error);\r\n        res.status(500).json({ success: false, error: 'Internal server error' });\r\n      }\r\n    });\r\n\r\n    // Network info endpoint for debugging\r\n    this.app.get('/api/network/info', (req: Request, res: Response) => {\r\n      const networkInfo = {\r\n        serverHost: this.config.host,\r\n        serverPort: this.config.port,\r\n        clientIP: req.ip,\r\n        origin: req.get('Origin'),\r\n        userAgent: req.get('User-Agent'),\r\n        headers: req.headers,\r\n        corsOrigins: this.config.cors.origin,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      res.json({ success: true, data: networkInfo });\r\n    });\r\n\r\n    // Main dashboard page\r\n    this.app.get('*', (req: Request, res: Response) => {\r\n      const clientIP = req.ip;\r\n      const origin = req.get('Origin') || 'Direct access';\r\n      \r\n      res.send(`\r\n        <!DOCTYPE html>\r\n        <html>\r\n        <head>\r\n          <title>AI Crypto Trading Agent - Intel NUC</title>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <style>\r\n            body { \r\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \r\n              margin: 0; padding: 20px; \r\n              background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%); \r\n              color: #e2e8f0; \r\n              min-height: 100vh;\r\n            }\r\n            .container { max-width: 1200px; margin: 0 auto; }\r\n            .header { text-align: center; margin-bottom: 40px; }\r\n            .status-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }\r\n            .status-card { \r\n              background: rgba(30, 41, 59, 0.8); \r\n              padding: 24px; \r\n              border-radius: 12px; \r\n              border: 1px solid rgba(59, 130, 246, 0.2);\r\n              backdrop-filter: blur(10px);\r\n            }\r\n            .status-card h3 { color: #3b82f6; margin-top: 0; }\r\n            .status-indicator { \r\n              display: inline-block; \r\n              width: 12px; \r\n              height: 12px; \r\n              border-radius: 50%; \r\n              background: #10b981; \r\n              margin-right: 8px;\r\n            }\r\n            .network-info { font-size: 0.9em; opacity: 0.8; }\r\n            .api-links { margin-top: 20px; }\r\n            .api-links a { \r\n              color: #60a5fa; \r\n              text-decoration: none; \r\n              margin-right: 15px;\r\n              padding: 8px 12px;\r\n              background: rgba(59, 130, 246, 0.1);\r\n              border-radius: 6px;\r\n              border: 1px solid rgba(59, 130, 246, 0.2);\r\n            }\r\n            .api-links a:hover { background: rgba(59, 130, 246, 0.2); }\r\n            @media (max-width: 768px) {\r\n              .status-grid { grid-template-columns: 1fr; }\r\n              body { padding: 10px; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">\r\n            <div class=\"header\">\r\n              <h1>🤖 AI Crypto Trading Agent</h1>\r\n              <p>Intel NUC Deployment - Local Network Dashboard</p>\r\n            </div>\r\n            \r\n            <div class=\"status-grid\">\r\n              <div class=\"status-card\">\r\n                <h3><span class=\"status-indicator\"></span>Dashboard Server</h3>\r\n                <p><strong>Status:</strong> Running</p>\r\n                <p><strong>Host:</strong> ${this.config.host}</p>\r\n                <p><strong>Port:</strong> ${this.config.port}</p>\r\n                <p><strong>Started:</strong> ${new Date().toLocaleString()}</p>\r\n              </div>\r\n              \r\n              <div class=\"status-card\">\r\n                <h3>🌐 Network Information</h3>\r\n                <p><strong>Your IP:</strong> ${clientIP}</p>\r\n                <p><strong>Origin:</strong> ${origin}</p>\r\n                <p><strong>Access URL:</strong> http://${req.get('host')}</p>\r\n                <div class=\"network-info\">\r\n                  <p>This dashboard is accessible from any device on your local network.</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"status-card\">\r\n                <h3>🔗 SSH Tunnel</h3>\r\n                <p><strong>Target:</strong> Oracle Cloud → Gate.io API</p>\r\n                <p><strong>Local Port:</strong> 8443</p>\r\n                <p><strong>Status:</strong> <span id=\"tunnel-status\">Checking...</span></p>\r\n              </div>\r\n              \r\n              <div class=\"status-card\">\r\n                <h3>💾 Database</h3>\r\n                <p><strong>Type:</strong> PostgreSQL</p>\r\n                <p><strong>Host:</strong> localhost:5432</p>\r\n                <p><strong>Status:</strong> <span id=\"db-status\">Checking...</span></p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"status-card\">\r\n              <h3>🔧 API Endpoints</h3>\r\n              <div class=\"api-links\">\r\n                <a href=\"/health\" target=\"_blank\">Health Check</a>\r\n                <a href=\"/api/system/status\" target=\"_blank\">System Status</a>\r\n                <a href=\"/api/network/info\" target=\"_blank\">Network Info</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <script>\r\n            // Auto-refresh status indicators\r\n            async function updateStatus() {\r\n              try {\r\n                const response = await fetch('/api/system/status');\r\n                const data = await response.json();\r\n                \r\n                if (data.success) {\r\n                  document.getElementById('tunnel-status').textContent = 'Connected';\r\n                  document.getElementById('db-status').textContent = 'Connected';\r\n                } else {\r\n                  document.getElementById('tunnel-status').textContent = 'Error';\r\n                  document.getElementById('db-status').textContent = 'Error';\r\n                }\r\n              } catch (error) {\r\n                document.getElementById('tunnel-status').textContent = 'Unknown';\r\n                document.getElementById('db-status').textContent = 'Unknown';\r\n              }\r\n            }\r\n            \r\n            // Update status on load and every 30 seconds\r\n            updateStatus();\r\n            setInterval(updateStatus, 30000);\r\n          </script>\r\n        </body>\r\n        </html>\r\n      `);\r\n    });\r\n  }\r\n\r\n  private setupWebSocket(): void {\r\n    this.io.on('connection', (socket) => {\r\n      this.logger.info('WebSocket client connected:', socket.id);\r\n      \r\n      socket.emit('welcome', {\r\n        message: 'Connected to AI Crypto Trading Agent',\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      socket.on('disconnect', () => {\r\n        this.logger.info('WebSocket client disconnected:', socket.id);\r\n      });\r\n    });\r\n  }\r\n\r\n  getStatus(): any {\r\n    return {\r\n      isRunning: this.isRunning,\r\n      port: this.config.port,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\nexport default DashboardServer;\r\n"],"mappings":";;AAAA;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAUA;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALA,MAAAiC,SAAA;AAAA;AAAA,CAAAjC,cAAA,GAAAoB,CAAA,OAAAc,eAAA,CAAAC,OAAA;AACA,MAAAC,MAAA;AAAA;AAAA,CAAApC,cAAA,GAAAoB,CAAA,OAAAe,OAAA;AACA,MAAAE,WAAA;AAAA;AAAA,CAAArC,cAAA,GAAAoB,CAAA,OAAAe,OAAA;AACA,MAAAG,MAAA;AAAA;AAAA,CAAAtC,cAAA,GAAAoB,CAAA,OAAAc,eAAA,CAAAC,OAAA;AACA,MAAAI,QAAA;AAAA;AAAA,CAAAvC,cAAA,GAAAoB,CAAA,OAAAc,eAAA,CAAAC,OAAA;AACA,MAAAK,QAAA;AAAA;AAAA,CAAAxC,cAAA,GAAAoB,CAAA,OAAAe,OAAA;AAmBA,MAAaM,eAAe;EAClBC,MAAM;EACNC,MAAM;EACNC,GAAG;EACHC,MAAM;EACNC,EAAE;EACFC,aAAa;EAAA;EAAA,CAAA/C,cAAA,GAAAoB,CAAA,QAAQ,IAAI;EACzB4B,QAAQ;EAAA;EAAA,CAAAhD,cAAA,GAAAoB,CAAA,QAAQ,IAAI;EACpB6B,QAAQ;EAAA;EAAA,CAAAjD,cAAA,GAAAoB,CAAA,QAAQ,IAAI;EACpB8B,QAAQ;EAAA;EAAA,CAAAlD,cAAA,GAAAoB,CAAA,QAAQ,IAAI;EACpB+B,SAAS;EAAA;EAAA,CAAAnD,cAAA,GAAAoB,CAAA,QAAY,KAAK;EAElCgC,YAAYT,MAA6B;IAAA;IAAA3C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvC,IAAI,CAACsB,MAAM,GAAG,IAAIF,QAAA,CAAAa,MAAM,CAAC,iBAAiB,CAAC;IAAC;IAAArD,cAAA,GAAAoB,CAAA;IAC5C,IAAI,CAACuB,MAAM,GAAGA,MAAM;IAAC;IAAA3C,cAAA,GAAAoB,CAAA;IAErB,IAAI,CAACwB,GAAG,GAAG,IAAAX,SAAA,CAAAqB,OAAO,GAAE;IAAC;IAAAtD,cAAA,GAAAoB,CAAA;IACrB,IAAI,CAACyB,MAAM,GAAG,IAAAT,MAAA,CAAAmB,YAAY,EAAC,IAAI,CAACX,GAAG,CAAC;IAAC;IAAA5C,cAAA,GAAAoB,CAAA;IACrC,IAAI,CAAC0B,EAAE,GAAG,IAAIT,WAAA,CAAAmB,MAAc,CAAC,IAAI,CAACX,MAAM,EAAE;MACxCY,IAAI,EAAE;QACJC,MAAM,EAAEf,MAAM,CAACc,IAAI,CAACC,MAAM;QAC1BC,WAAW,EAAEhB,MAAM,CAACc,IAAI,CAACE;;KAE5B,CAAC;IAAC;IAAA3D,cAAA,GAAAoB,CAAA;IAEH,IAAI,CAACwC,eAAe,EAAE;IAAC;IAAA5D,cAAA,GAAAoB,CAAA;IACvB,IAAI,CAACyC,WAAW,EAAE;IAAC;IAAA7D,cAAA,GAAAoB,CAAA;IACnB,IAAI,CAAC0C,cAAc,EAAE;EACvB;EAEAC,gBAAgBA,CAAChB,aAAkB;IAAA;IAAA/C,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjC,IAAI,CAAC2B,aAAa,GAAGA,aAAa;EACpC;EAEAiB,WAAWA,CAAChB,QAAa;IAAA;IAAAhD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvB,IAAI,CAAC4B,QAAQ,GAAGA,QAAQ;EAC1B;EAEAiB,WAAWA,CAAChB,QAAa;IAAA;IAAAjD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvB,IAAI,CAAC6B,QAAQ,GAAGA,QAAQ;EAC1B;EAEAiB,WAAWA,CAAChB,QAAa;IAAA;IAAAlD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACvB,IAAI,CAAC8B,QAAQ,GAAGA,QAAQ;EAC1B;EAEA,MAAM1C,KAAKA,CAAA;IAAA;IAAAR,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACT,IAAI,IAAI,CAAC+B,SAAS,EAAE;MAAA;MAAAnD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAE3B,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF,MAAM,IAAI+C,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAI;QAAA;QAAArE,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAC1C,IAAI,CAACyB,MAAM,CAACyB,MAAM,CAAC,IAAI,CAAC3B,MAAM,CAAC4B,IAAI,EAAE,IAAI,CAAC5B,MAAM,CAAC6B,IAAI,EAAE,MAAK;UAAA;UAAAxE,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UAC1D,IAAI,CAAC+B,SAAS,GAAG,IAAI;UAAC;UAAAnD,cAAA,GAAAoB,CAAA;UACtB,IAAI,CAACsB,MAAM,CAAC+B,IAAI,CAAC,sCAAsC,IAAI,CAAC9B,MAAM,CAAC6B,IAAI,IAAI,IAAI,CAAC7B,MAAM,CAAC4B,IAAI,EAAE,CAAC;UAAC;UAAAvE,cAAA,GAAAoB,CAAA;UAC/FgD,OAAO,EAAE;QACX,CAAC,CAAC;QAAC;QAAApE,cAAA,GAAAoB,CAAA;QACH,IAAI,CAACyB,MAAM,CAAC6B,EAAE,CAAC,OAAO,EAAEL,MAAM,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MAAA;MAAA3E,cAAA,GAAAoB,CAAA;MACd,IAAI,CAACsB,MAAM,CAACiC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAAC;MAAA3E,cAAA,GAAAoB,CAAA;MAC9D,MAAMuD,KAAK;IACb;EACF;EAEA,MAAMC,IAAIA,CAAA;IAAA;IAAA5E,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACR,IAAI,CAAC,IAAI,CAAC+B,SAAS,EAAE;MAAA;MAAAnD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAE5B,IAAI,CAAC0B,EAAE,CAAC+B,KAAK,EAAE;IAAC;IAAA7E,cAAA,GAAAoB,CAAA;IAChB,MAAM,IAAI+C,OAAO,CAAQC,OAAO,IAAI;MAAA;MAAApE,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAClC,IAAI,CAACyB,MAAM,CAACgC,KAAK,CAAC,MAAK;QAAA;QAAA7E,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QACrB,IAAI,CAAC+B,SAAS,GAAG,KAAK;QAAC;QAAAnD,cAAA,GAAAoB,CAAA;QACvBgD,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEQR,eAAeA,CAAA;IAAA;IAAA5D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACrB;IACA,IAAI,CAACwB,GAAG,CAACkC,GAAG,CAAC,IAAAvC,QAAA,CAAAe,OAAM,EAAC;MAClByB,qBAAqB,EAAE;QACrBC,UAAU,EAAE;UACVC,UAAU,EAAE,CAAC,QAAQ,CAAC;UACtBC,QAAQ,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;UACvCC,SAAS,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;UACxCC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;UACrCC,UAAU,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM;;OAEvC;MACDC,yBAAyB,EAAE;KAC5B,CAAC,CAAC;IAEH;IAAA;IAAAtF,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACwB,GAAG,CAACkC,GAAG,CAAC,IAAAxC,MAAA,CAAAgB,OAAI,EAAC;MAChBI,MAAM,EAAEA,CAACA,MAAM,EAAE6B,QAAQ,KAAI;QAAA;QAAAvF,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAC3B;QACA,IAAI,CAACsC,MAAM,EAAE;UAAA;UAAA1D,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UAAA,OAAOmE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;QAAA,CAAC;QAAA;QAAA;UAAAvF,cAAA,GAAAsB,CAAA;QAAA;QAEzC;QACA,MAAMkE,cAAc;QAAA;QAAA,CAAAxF,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACuB,MAAM,CAACc,IAAI,CAACC,MAAM;QAC9C,MAAM+B,SAAS;QAAA;QAAA,CAAAzF,cAAA,GAAAoB,CAAA,QAAGoE,cAAc,CAACE,IAAI,CAACC,aAAa,IAAG;UAAA;UAAA3F,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UACpD,IAAIuE,aAAa,KAAK,GAAG,EAAE;YAAA;YAAA3F,cAAA,GAAAsB,CAAA;YAAAtB,cAAA,GAAAoB,CAAA;YAAA,OAAO,IAAI;UAAA,CAAC;UAAA;UAAA;YAAApB,cAAA,GAAAsB,CAAA;UAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACvC,IAAIuE,aAAa,KAAKjC,MAAM,EAAE;YAAA;YAAA1D,cAAA,GAAAsB,CAAA;YAAAtB,cAAA,GAAAoB,CAAA;YAAA,OAAO,IAAI;UAAA,CAAC;UAAA;UAAA;YAAApB,cAAA,GAAAsB,CAAA;UAAA;UAE1C;UAAAtB,cAAA,GAAAoB,CAAA;UACA,IAAIuE,aAAa,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAAA;YAAA5F,cAAA,GAAAsB,CAAA;YAC/B,MAAMuE,OAAO;YAAA;YAAA,CAAA7F,cAAA,GAAAoB,CAAA,QAAGuE,aAAa,CAACG,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;YAClD,MAAMC,KAAK;YAAA;YAAA,CAAA/F,cAAA,GAAAoB,CAAA,QAAG,IAAI4E,MAAM,CAAC,IAAIH,OAAO,GAAG,CAAC;YAAC;YAAA7F,cAAA,GAAAoB,CAAA;YACzC,OAAO2E,KAAK,CAACE,IAAI,CAACvC,MAAM,CAAC;UAC3B,CAAC;UAAA;UAAA;YAAA1D,cAAA,GAAAsB,CAAA;UAAA;UAAAtB,cAAA,GAAAoB,CAAA;UAED,OAAO,KAAK;QACd,CAAC,CAAC;QAAC;QAAApB,cAAA,GAAAoB,CAAA;QAEH,IAAIqE,SAAS,EAAE;UAAA;UAAAzF,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACbmE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;QACtB,CAAC,MAAM;UAAA;UAAAvF,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACL,IAAI,CAACsB,MAAM,CAACwD,IAAI,CAAC,wBAAwBxC,MAAM,EAAE,CAAC;UAAC;UAAA1D,cAAA,GAAAoB,CAAA;UACnDmE,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC;QACvB;MACF,CAAC;MACD5B,WAAW,EAAE,IAAI,CAAChB,MAAM,CAACc,IAAI,CAACE,WAAW;MACzCwC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC;MACpDC,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,kBAAkB;KACrE,CAAC,CAAC;IAAC;IAAApG,cAAA,GAAAoB,CAAA;IAEJ,IAAI,CAACwB,GAAG,CAACkC,GAAG,CAAC7C,SAAA,CAAAqB,OAAO,CAAC+C,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAM,CAAE,CAAC,CAAC;IAAC;IAAAtG,cAAA,GAAAoB,CAAA;IAC9C,IAAI,CAACwB,GAAG,CAACkC,GAAG,CAAC7C,SAAA,CAAAqB,OAAO,CAACiD,UAAU,CAAC;MAAEC,QAAQ,EAAE,IAAI;MAAEF,KAAK,EAAE;IAAM,CAAE,CAAC,CAAC;IAEnE;IAAA;IAAAtG,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACwB,GAAG,CAACkC,GAAG,CAAC,CAAC2B,GAAY,EAAEC,GAAa,EAAEC,IAAkB,KAAI;MAAA;MAAA3G,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAC/D,IAAI,CAACsB,MAAM,CAACkE,KAAK,CAAC,GAAGH,GAAG,CAACI,MAAM,IAAIJ,GAAG,CAACxG,IAAI,EAAE,EAAE;QAC7CyD,MAAM,EAAE+C,GAAG,CAACK,GAAG,CAAC,QAAQ,CAAC;QACzBC,SAAS,EAAEN,GAAG,CAACK,GAAG,CAAC,YAAY,CAAC;QAChCE,EAAE,EAAEP,GAAG,CAACO;OACT,CAAC;MAAC;MAAAhH,cAAA,GAAAoB,CAAA;MACHuF,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EAEQ9C,WAAWA,CAAA;IAAA;IAAA7D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjB;IACA,IAAI,CAACwB,GAAG,CAACkE,GAAG,CAAC,SAAS,EAAE,CAACL,GAAY,EAAEC,GAAa,KAAI;MAAA;MAAA1G,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACtDsF,GAAG,CAACL,IAAI,CAAC;QACPY,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;QACnC5C,IAAI,EAAE,IAAI,CAAC7B,MAAM,CAAC6B,IAAI;QACtBD,IAAI,EAAE,IAAI,CAAC5B,MAAM,CAAC4B;OACnB,CAAC;IACJ,CAAC,CAAC;IAEF;IAAA;IAAAvE,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACwB,GAAG,CAACkE,GAAG,CAAC,oBAAoB,EAAE,OAAOL,GAAY,EAAEC,GAAa,KAAI;MAAA;MAAA1G,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MACvE,IAAI;QACF,MAAM6F,MAAM;QAAA;QAAA,CAAAjH,cAAA,GAAAoB,CAAA,QAAG;UACb2B,aAAa;UAAE;UAAA,CAAA/C,cAAA,GAAAsB,CAAA,eAAI,CAACyB,aAAa,EAAEsE,SAAS,EAAE;UAAA;UAAA,CAAArH,cAAA,GAAAsB,CAAA,WAAI,IAAI;UACtD0B,QAAQ;UAAE;UAAA,CAAAhD,cAAA,GAAAsB,CAAA,eAAI,CAAC0B,QAAQ,EAAEqE,SAAS,EAAE;UAAA;UAAA,CAAArH,cAAA,GAAAsB,CAAA,WAAI,IAAI;UAC5C2B,QAAQ;UAAE;UAAA,CAAAjD,cAAA,GAAAsB,CAAA,eAAI,CAAC2B,QAAQ,EAAEoE,SAAS,EAAE;UAAA;UAAA,CAAArH,cAAA,GAAAsB,CAAA,WAAI,IAAI;UAC5CgG,SAAS,EAAE;YACTnE,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBqB,IAAI,EAAE,IAAI,CAAC7B,MAAM,CAAC6B,IAAI;YACtBD,IAAI,EAAE,IAAI,CAAC5B,MAAM,CAAC4B,IAAI;YACtBgD,WAAW,EAAE,IAAI,CAAC5E,MAAM,CAACc,IAAI,CAACC;WAC/B;UACD8D,OAAO,EAAE;YACPC,QAAQ,EAAEhB,GAAG,CAACO,EAAE;YAChBtD,MAAM,EAAE+C,GAAG,CAACK,GAAG,CAAC,QAAQ,CAAC;YACzBC,SAAS,EAAEN,GAAG,CAACK,GAAG,CAAC,YAAY;;SAElC;QAAC;QAAA9G,cAAA,GAAAoB,CAAA;QACFsF,GAAG,CAACL,IAAI,CAAC;UAAEqB,OAAO,EAAE,IAAI;UAAEC,IAAI,EAAEV;QAAM,CAAE,CAAC;MAC3C,CAAC,CAAC,OAAOtC,KAAK,EAAE;QAAA;QAAA3E,cAAA,GAAAoB,CAAA;QACd,IAAI,CAACsB,MAAM,CAACiC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QAAC;QAAA3E,cAAA,GAAAoB,CAAA;QACzDsF,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACZ,IAAI,CAAC;UAAEqB,OAAO,EAAE,KAAK;UAAE/C,KAAK,EAAE;QAAuB,CAAE,CAAC;MAC1E;IACF,CAAC,CAAC;IAEF;IAAA;IAAA3E,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACwB,GAAG,CAACkE,GAAG,CAAC,mBAAmB,EAAE,CAACL,GAAY,EAAEC,GAAa,KAAI;MAAA;MAAA1G,cAAA,GAAAqB,CAAA;MAChE,MAAMuG,WAAW;MAAA;MAAA,CAAA5H,cAAA,GAAAoB,CAAA,QAAG;QAClByG,UAAU,EAAE,IAAI,CAAClF,MAAM,CAAC6B,IAAI;QAC5BsD,UAAU,EAAE,IAAI,CAACnF,MAAM,CAAC4B,IAAI;QAC5BkD,QAAQ,EAAEhB,GAAG,CAACO,EAAE;QAChBtD,MAAM,EAAE+C,GAAG,CAACK,GAAG,CAAC,QAAQ,CAAC;QACzBC,SAAS,EAAEN,GAAG,CAACK,GAAG,CAAC,YAAY,CAAC;QAChCiB,OAAO,EAAEtB,GAAG,CAACsB,OAAO;QACpBR,WAAW,EAAE,IAAI,CAAC5E,MAAM,CAACc,IAAI,CAACC,MAAM;QACpCwD,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;OAClC;MAAC;MAAApH,cAAA,GAAAoB,CAAA;MACFsF,GAAG,CAACL,IAAI,CAAC;QAAEqB,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAEC;MAAW,CAAE,CAAC;IAChD,CAAC,CAAC;IAEF;IAAA;IAAA5H,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACwB,GAAG,CAACkE,GAAG,CAAC,GAAG,EAAE,CAACL,GAAY,EAAEC,GAAa,KAAI;MAAA;MAAA1G,cAAA,GAAAqB,CAAA;MAChD,MAAMoG,QAAQ;MAAA;MAAA,CAAAzH,cAAA,GAAAoB,CAAA,QAAGqF,GAAG,CAACO,EAAE;MACvB,MAAMtD,MAAM;MAAA;MAAA,CAAA1D,cAAA,GAAAoB,CAAA;MAAG;MAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAmF,GAAG,CAACK,GAAG,CAAC,QAAQ,CAAC;MAAA;MAAA,CAAA9G,cAAA,GAAAsB,CAAA,WAAI,eAAe;MAAC;MAAAtB,cAAA,GAAAoB,CAAA;MAEpDsF,GAAG,CAACsB,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CA8D6B,IAAI,CAACrF,MAAM,CAAC6B,IAAI;4CAChB,IAAI,CAAC7B,MAAM,CAAC4B,IAAI;+CACb,IAAI4C,IAAI,EAAE,CAACc,cAAc,EAAE;;;;;+CAK3BR,QAAQ;8CACT/D,MAAM;yDACK+C,GAAG,CAACK,GAAG,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyDjE,CAAC;IACJ,CAAC,CAAC;EACJ;EAEQhD,cAAcA,CAAA;IAAA;IAAA9D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACpB,IAAI,CAAC0B,EAAE,CAAC4B,EAAE,CAAC,YAAY,EAAGwD,MAAM,IAAI;MAAA;MAAAlI,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAClC,IAAI,CAACsB,MAAM,CAAC+B,IAAI,CAAC,6BAA6B,EAAEyD,MAAM,CAACC,EAAE,CAAC;MAAC;MAAAnI,cAAA,GAAAoB,CAAA;MAE3D8G,MAAM,CAACE,IAAI,CAAC,SAAS,EAAE;QACrBC,OAAO,EAAE,sCAAsC;QAC/CnB,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW;OAClC,CAAC;MAAC;MAAApH,cAAA,GAAAoB,CAAA;MAEH8G,MAAM,CAACxD,EAAE,CAAC,YAAY,EAAE,MAAK;QAAA;QAAA1E,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAC3B,IAAI,CAACsB,MAAM,CAAC+B,IAAI,CAAC,gCAAgC,EAAEyD,MAAM,CAACC,EAAE,CAAC;MAC/D,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAd,SAASA,CAAA;IAAA;IAAArH,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACP,OAAO;MACL+B,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBoB,IAAI,EAAE,IAAI,CAAC5B,MAAM,CAAC4B,IAAI;MACtB2C,SAAS,EAAEC,IAAI,CAACmB,GAAG;KACpB;EACH;;AACD;AAAAtI,cAAA,GAAAoB,CAAA;AA9VDmH,OAAA,CAAA9F,eAAA,GAAAA,eAAA;AA8VC;AAAAzC,cAAA,GAAAoB,CAAA;AAEDmH,OAAA,CAAAjF,OAAA,GAAeb,eAAe","ignoreList":[]}