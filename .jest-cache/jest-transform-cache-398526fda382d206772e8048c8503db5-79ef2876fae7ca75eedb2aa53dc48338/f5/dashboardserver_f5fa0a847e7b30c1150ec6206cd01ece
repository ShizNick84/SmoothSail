1cd31dd1c0464254c13be85d9595f65e
"use strict";

/**
 * AI CRYPTO TRADING AGENT - DASHBOARD SERVER
 * Express.js server with WebSocket for real-time trading dashboard
 */
/* istanbul ignore next */
function cov_1m1i8q56xj() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts";
  var hash = "08a460a3325945e29fe7c64cd922073f9f775ec4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "4": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 53
        }
      },
      "5": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "6": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "7": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "8": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "9": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "10": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "11": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "12": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "13": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 21
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "18": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "19": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 31
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 27
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 43
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "25": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "26": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 33
        }
      },
      "27": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "28": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "29": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "30": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "31": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "32": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 42
        }
      },
      "33": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 115
        }
      },
      "34": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 30
        }
      },
      "35": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 48
        }
      },
      "36": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 74
        }
      },
      "37": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 24
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "39": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "40": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "41": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "42": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "43": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "44": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 26
        }
      },
      "45": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 97,
          column: 12
        }
      },
      "46": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 130,
          column: 12
        }
      },
      "47": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "48": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "49": {
        start: {
          line: 105,
          column: 39
        },
        end: {
          line: 105,
          column: 62
        }
      },
      "50": {
        start: {
          line: 106,
          column: 34
        },
        end: {
          line: 118,
          column: 18
        }
      },
      "51": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "52": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "53": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 110,
          column: 36
        }
      },
      "54": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 36
        }
      },
      "55": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 116,
          column: 21
        }
      },
      "56": {
        start: {
          line: 113,
          column: 40
        },
        end: {
          line: 113,
          column: 74
        }
      },
      "57": {
        start: {
          line: 114,
          column: 38
        },
        end: {
          line: 114,
          column: 64
        }
      },
      "58": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 115,
          column: 50
        }
      },
      "59": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "60": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "61": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "62": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 71
        }
      },
      "63": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 42
        }
      },
      "64": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 64
        }
      },
      "65": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 86
        }
      },
      "66": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "67": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "68": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "69": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "70": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "71": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "72": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "73": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 171,
          column: 17
        }
      },
      "74": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 58
        }
      },
      "75": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 73
        }
      },
      "76": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 89
        }
      },
      "77": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "78": {
        start: {
          line: 181,
          column: 32
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "79": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 59
        }
      },
      "80": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "81": {
        start: {
          line: 195,
          column: 29
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "82": {
        start: {
          line: 196,
          column: 27
        },
        end: {
          line: 196,
          column: 63
        }
      },
      "83": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "84": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 338,
          column: 11
        }
      },
      "85": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 71
        }
      },
      "86": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 334,
          column: 15
        }
      },
      "87": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 337,
          column: 15
        }
      },
      "88": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 78
        }
      },
      "89": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 345,
          column: 10
        }
      },
      "90": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 348,
          column: 42
        }
      },
      "91": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 349,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 6,
            column: 57
          }
        },
        loc: {
          start: {
            line: 6,
            column: 71
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 36
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 31
          }
        },
        loc: {
          start: {
            line: 59,
            column: 51
          },
          end: {
            line: 66,
            column: 13
          }
        },
        line: 59
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 71
          },
          end: {
            line: 60,
            column: 72
          }
        },
        loc: {
          start: {
            line: 60,
            column: 77
          },
          end: {
            line: 64,
            column: 17
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 17
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 73
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 77,
            column: 26
          },
          end: {
            line: 77,
            column: 27
          }
        },
        loc: {
          start: {
            line: 77,
            column: 39
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 77
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 31
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 81,
            column: 13
          }
        },
        line: 78
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 84
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 21
          }
        },
        loc: {
          start: {
            line: 100,
            column: 42
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 100
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 106,
            column: 54
          },
          end: {
            line: 106,
            column: 55
          }
        },
        loc: {
          start: {
            line: 106,
            column: 71
          },
          end: {
            line: 118,
            column: 17
          }
        },
        line: 106
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 134,
            column: 21
          },
          end: {
            line: 134,
            column: 22
          }
        },
        loc: {
          start: {
            line: 134,
            column: 41
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 134
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 18
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 143
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 145,
            column: 32
          },
          end: {
            line: 145,
            column: 33
          }
        },
        loc: {
          start: {
            line: 145,
            column: 46
          },
          end: {
            line: 152,
            column: 9
          }
        },
        line: 145
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 154,
            column: 43
          },
          end: {
            line: 154,
            column: 44
          }
        },
        loc: {
          start: {
            line: 154,
            column: 63
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 154
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 180,
            column: 42
          },
          end: {
            line: 180,
            column: 43
          }
        },
        loc: {
          start: {
            line: 180,
            column: 56
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 180
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 194,
            column: 27
          }
        },
        loc: {
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 326,
            column: 9
          }
        },
        line: 194
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 21
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 328
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 329,
            column: 33
          },
          end: {
            line: 329,
            column: 34
          }
        },
        loc: {
          start: {
            line: 329,
            column: 45
          },
          end: {
            line: 338,
            column: 9
          }
        },
        line: 329
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 335,
            column: 36
          },
          end: {
            line: 335,
            column: 37
          }
        },
        loc: {
          start: {
            line: 335,
            column: 42
          },
          end: {
            line: 337,
            column: 13
          }
        },
        line: 335
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 340
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 8,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 27
          }
        }, {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 51
          }
        }, {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 40
          }
        }, {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 7,
            column: 61
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 15
          }
        }, {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 33
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 75,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 75,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 103,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 103,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 108,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 108,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "7": {
        loc: {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 110,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 110,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "8": {
        loc: {
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        }, {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 125,
            column: 17
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 66
          }
        }, {
          start: {
            line: 157,
            column: 70
          },
          end: {
            line: 157,
            column: 74
          }
        }],
        line: 157
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 56
          }
        }, {
          start: {
            line: 158,
            column: 60
          },
          end: {
            line: 158,
            column: 64
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 56
          }
        }, {
          start: {
            line: 159,
            column: 60
          },
          end: {
            line: 159,
            column: 64
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 196,
            column: 27
          },
          end: {
            line: 196,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 27
          },
          end: {
            line: 196,
            column: 44
          }
        }, {
          start: {
            line: 196,
            column: 48
          },
          end: {
            line: 196,
            column: 63
          }
        }],
        line: 196
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts"],
      sourcesContent: ["/**\r\n * AI CRYPTO TRADING AGENT - DASHBOARD SERVER\r\n * Express.js server with WebSocket for real-time trading dashboard\r\n */\r\n\r\nimport express, { Express, Request, Response, NextFunction } from 'express';\r\nimport { createServer, Server } from 'http';\r\nimport { Server as SocketIOServer } from 'socket.io';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport { Logger } from '../core/logging/logger';\r\n\r\nexport interface DashboardServerConfig {\r\n  port: number;\r\n  host: string;\r\n  cors: {\r\n    origin: string[];\r\n    credentials: boolean;\r\n  };\r\n  auth: {\r\n    enabled: boolean;\r\n    secret: string;\r\n  };\r\n  rateLimit: {\r\n    windowMs: number;\r\n    max: number;\r\n  };\r\n}\r\n\r\nexport class DashboardServer {\r\n  private logger: Logger;\r\n  private config: DashboardServerConfig;\r\n  private app: Express;\r\n  private server: Server;\r\n  private io: SocketIOServer;\r\n  private tradingEngine: any = null;\r\n  private aiEngine: any = null;\r\n  private database: any = null;\r\n  private security: any = null;\r\n  private isRunning: boolean = false;\r\n\r\n  constructor(config: DashboardServerConfig) {\r\n    this.logger = new Logger('DashboardServer');\r\n    this.config = config;\r\n    \r\n    this.app = express();\r\n    this.server = createServer(this.app);\r\n    this.io = new SocketIOServer(this.server, {\r\n      cors: {\r\n        origin: config.cors.origin,\r\n        credentials: config.cors.credentials\r\n      }\r\n    });\r\n\r\n    this.setupMiddleware();\r\n    this.setupRoutes();\r\n    this.setupWebSocket();\r\n  }\r\n\r\n  setTradingEngine(tradingEngine: any): void {\r\n    this.tradingEngine = tradingEngine;\r\n  }\r\n\r\n  setAIEngine(aiEngine: any): void {\r\n    this.aiEngine = aiEngine;\r\n  }\r\n\r\n  setDatabase(database: any): void {\r\n    this.database = database;\r\n  }\r\n\r\n  setSecurity(security: any): void {\r\n    this.security = security;\r\n  }\r\n\r\n  async start(): Promise<void> {\r\n    if (this.isRunning) return;\r\n\r\n    try {\r\n      await new Promise<void>((resolve, reject) => {\r\n        this.server.listen(this.config.port, this.config.host, () => {\r\n          this.isRunning = true;\r\n          this.logger.info(`Dashboard Server started on http://${this.config.host}:${this.config.port}`);\r\n          resolve();\r\n        });\r\n        this.server.on('error', reject);\r\n      });\r\n    } catch (error) {\r\n      this.logger.error('Failed to start Dashboard Server:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async stop(): Promise<void> {\r\n    if (!this.isRunning) return;\r\n\r\n    this.io.close();\r\n    await new Promise<void>((resolve) => {\r\n      this.server.close(() => {\r\n        this.isRunning = false;\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  private setupMiddleware(): void {\r\n    // Configure Helmet for local network access\r\n    this.app.use(helmet({\r\n      contentSecurityPolicy: {\r\n        directives: {\r\n          defaultSrc: [\"'self'\"],\r\n          styleSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n          scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n          imgSrc: [\"'self'\", \"data:\", \"https:\"],\r\n          connectSrc: [\"'self'\", \"ws:\", \"wss:\"]\r\n        }\r\n      },\r\n      crossOriginEmbedderPolicy: false\r\n    }));\r\n\r\n    // Configure CORS for local network access\r\n    this.app.use(cors({\r\n      origin: (origin, callback) => {\r\n        // Allow requests with no origin (mobile apps, curl, etc.)\r\n        if (!origin) return callback(null, true);\r\n        \r\n        // Check if origin matches configured patterns\r\n        const allowedOrigins = this.config.cors.origin;\r\n        const isAllowed = allowedOrigins.some(allowedOrigin => {\r\n          if (allowedOrigin === '*') return true;\r\n          if (allowedOrigin === origin) return true;\r\n          \r\n          // Support wildcard patterns for local networks\r\n          if (allowedOrigin.includes('*')) {\r\n            const pattern = allowedOrigin.replace(/\\*/g, '.*');\r\n            const regex = new RegExp(`^${pattern}$`);\r\n            return regex.test(origin);\r\n          }\r\n          \r\n          return false;\r\n        });\r\n        \r\n        if (isAllowed) {\r\n          callback(null, true);\r\n        } else {\r\n          this.logger.warn(`CORS blocked origin: ${origin}`);\r\n          callback(null, false);\r\n        }\r\n      },\r\n      credentials: this.config.cors.credentials,\r\n      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n      allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']\r\n    }));\r\n\r\n    this.app.use(express.json({ limit: '10mb' }));\r\n    this.app.use(express.urlencoded({ extended: true, limit: '10mb' }));\r\n\r\n    // Add request logging for debugging\r\n    this.app.use((req: Request, res: Response, next: NextFunction) => {\r\n      this.logger.debug(`${req.method} ${req.path}`, {\r\n        origin: req.get('Origin'),\r\n        userAgent: req.get('User-Agent'),\r\n        ip: req.ip\r\n      });\r\n      next();\r\n    });\r\n  }\r\n\r\n  private setupRoutes(): void {\r\n    // Health check endpoint\r\n    this.app.get('/health', (req: Request, res: Response) => {\r\n      res.json({ \r\n        status: 'healthy', \r\n        timestamp: new Date().toISOString(),\r\n        host: this.config.host,\r\n        port: this.config.port\r\n      });\r\n    });\r\n\r\n    // System status API\r\n    this.app.get('/api/system/status', async (req: Request, res: Response) => {\r\n      try {\r\n        const status = {\r\n          tradingEngine: this.tradingEngine?.getStatus() || null,\r\n          aiEngine: this.aiEngine?.getStatus() || null,\r\n          database: this.database?.getStatus() || null,\r\n          dashboard: { \r\n            isRunning: this.isRunning,\r\n            host: this.config.host,\r\n            port: this.config.port,\r\n            corsOrigins: this.config.cors.origin\r\n          },\r\n          network: {\r\n            clientIP: req.ip,\r\n            origin: req.get('Origin'),\r\n            userAgent: req.get('User-Agent')\r\n          }\r\n        };\r\n        res.json({ success: true, data: status });\r\n      } catch (error) {\r\n        this.logger.error('Error getting system status:', error);\r\n        res.status(500).json({ success: false, error: 'Internal server error' });\r\n      }\r\n    });\r\n\r\n    // Network info endpoint for debugging\r\n    this.app.get('/api/network/info', (req: Request, res: Response) => {\r\n      const networkInfo = {\r\n        serverHost: this.config.host,\r\n        serverPort: this.config.port,\r\n        clientIP: req.ip,\r\n        origin: req.get('Origin'),\r\n        userAgent: req.get('User-Agent'),\r\n        headers: req.headers,\r\n        corsOrigins: this.config.cors.origin,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      res.json({ success: true, data: networkInfo });\r\n    });\r\n\r\n    // Main dashboard page\r\n    this.app.get('*', (req: Request, res: Response) => {\r\n      const clientIP = req.ip;\r\n      const origin = req.get('Origin') || 'Direct access';\r\n      \r\n      res.send(`\r\n        <!DOCTYPE html>\r\n        <html>\r\n        <head>\r\n          <title>AI Crypto Trading Agent - Intel NUC</title>\r\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n          <style>\r\n            body { \r\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; \r\n              margin: 0; padding: 20px; \r\n              background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%); \r\n              color: #e2e8f0; \r\n              min-height: 100vh;\r\n            }\r\n            .container { max-width: 1200px; margin: 0 auto; }\r\n            .header { text-align: center; margin-bottom: 40px; }\r\n            .status-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }\r\n            .status-card { \r\n              background: rgba(30, 41, 59, 0.8); \r\n              padding: 24px; \r\n              border-radius: 12px; \r\n              border: 1px solid rgba(59, 130, 246, 0.2);\r\n              backdrop-filter: blur(10px);\r\n            }\r\n            .status-card h3 { color: #3b82f6; margin-top: 0; }\r\n            .status-indicator { \r\n              display: inline-block; \r\n              width: 12px; \r\n              height: 12px; \r\n              border-radius: 50%; \r\n              background: #10b981; \r\n              margin-right: 8px;\r\n            }\r\n            .network-info { font-size: 0.9em; opacity: 0.8; }\r\n            .api-links { margin-top: 20px; }\r\n            .api-links a { \r\n              color: #60a5fa; \r\n              text-decoration: none; \r\n              margin-right: 15px;\r\n              padding: 8px 12px;\r\n              background: rgba(59, 130, 246, 0.1);\r\n              border-radius: 6px;\r\n              border: 1px solid rgba(59, 130, 246, 0.2);\r\n            }\r\n            .api-links a:hover { background: rgba(59, 130, 246, 0.2); }\r\n            @media (max-width: 768px) {\r\n              .status-grid { grid-template-columns: 1fr; }\r\n              body { padding: 10px; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">\r\n            <div class=\"header\">\r\n              <h1>\uD83E\uDD16 AI Crypto Trading Agent</h1>\r\n              <p>Intel NUC Deployment - Local Network Dashboard</p>\r\n            </div>\r\n            \r\n            <div class=\"status-grid\">\r\n              <div class=\"status-card\">\r\n                <h3><span class=\"status-indicator\"></span>Dashboard Server</h3>\r\n                <p><strong>Status:</strong> Running</p>\r\n                <p><strong>Host:</strong> ${this.config.host}</p>\r\n                <p><strong>Port:</strong> ${this.config.port}</p>\r\n                <p><strong>Started:</strong> ${new Date().toLocaleString()}</p>\r\n              </div>\r\n              \r\n              <div class=\"status-card\">\r\n                <h3>\uD83C\uDF10 Network Information</h3>\r\n                <p><strong>Your IP:</strong> ${clientIP}</p>\r\n                <p><strong>Origin:</strong> ${origin}</p>\r\n                <p><strong>Access URL:</strong> http://${req.get('host')}</p>\r\n                <div class=\"network-info\">\r\n                  <p>This dashboard is accessible from any device on your local network.</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"status-card\">\r\n                <h3>\uD83D\uDD17 SSH Tunnel</h3>\r\n                <p><strong>Target:</strong> Oracle Cloud \u2192 Gate.io API</p>\r\n                <p><strong>Local Port:</strong> 8443</p>\r\n                <p><strong>Status:</strong> <span id=\"tunnel-status\">Checking...</span></p>\r\n              </div>\r\n              \r\n              <div class=\"status-card\">\r\n                <h3>\uD83D\uDCBE Database</h3>\r\n                <p><strong>Type:</strong> PostgreSQL</p>\r\n                <p><strong>Host:</strong> localhost:5432</p>\r\n                <p><strong>Status:</strong> <span id=\"db-status\">Checking...</span></p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"status-card\">\r\n              <h3>\uD83D\uDD27 API Endpoints</h3>\r\n              <div class=\"api-links\">\r\n                <a href=\"/health\" target=\"_blank\">Health Check</a>\r\n                <a href=\"/api/system/status\" target=\"_blank\">System Status</a>\r\n                <a href=\"/api/network/info\" target=\"_blank\">Network Info</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <script>\r\n            // Auto-refresh status indicators\r\n            async function updateStatus() {\r\n              try {\r\n                const response = await fetch('/api/system/status');\r\n                const data = await response.json();\r\n                \r\n                if (data.success) {\r\n                  document.getElementById('tunnel-status').textContent = 'Connected';\r\n                  document.getElementById('db-status').textContent = 'Connected';\r\n                } else {\r\n                  document.getElementById('tunnel-status').textContent = 'Error';\r\n                  document.getElementById('db-status').textContent = 'Error';\r\n                }\r\n              } catch (error) {\r\n                document.getElementById('tunnel-status').textContent = 'Unknown';\r\n                document.getElementById('db-status').textContent = 'Unknown';\r\n              }\r\n            }\r\n            \r\n            // Update status on load and every 30 seconds\r\n            updateStatus();\r\n            setInterval(updateStatus, 30000);\r\n          </script>\r\n        </body>\r\n        </html>\r\n      `);\r\n    });\r\n  }\r\n\r\n  private setupWebSocket(): void {\r\n    this.io.on('connection', (socket) => {\r\n      this.logger.info('WebSocket client connected:', socket.id);\r\n      \r\n      socket.emit('welcome', {\r\n        message: 'Connected to AI Crypto Trading Agent',\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      socket.on('disconnect', () => {\r\n        this.logger.info('WebSocket client disconnected:', socket.id);\r\n      });\r\n    });\r\n  }\r\n\r\n  getStatus(): any {\r\n    return {\r\n      isRunning: this.isRunning,\r\n      port: this.config.port,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\nexport default DashboardServer;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "08a460a3325945e29fe7c64cd922073f9f775ec4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m1i8q56xj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m1i8q56xj();
var __importDefault =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[0]++,
/* istanbul ignore next */
(cov_1m1i8q56xj().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1m1i8q56xj().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1m1i8q56xj().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1m1i8q56xj().f[0]++;
  cov_1m1i8q56xj().s[1]++;
  return /* istanbul ignore next */(cov_1m1i8q56xj().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1m1i8q56xj().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1m1i8q56xj().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1m1i8q56xj().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1m1i8q56xj().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1m1i8q56xj().s[3]++;
exports.DashboardServer = void 0;
const express_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[4]++, __importDefault(require("express")));
const http_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[5]++, require("http"));
const socket_io_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[6]++, require("socket.io"));
const cors_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[7]++, __importDefault(require("cors")));
const helmet_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[8]++, __importDefault(require("helmet")));
const logger_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[9]++, require("../core/logging/logger"));
class DashboardServer {
  logger;
  config;
  app;
  server;
  io;
  tradingEngine =
  /* istanbul ignore next */
  (cov_1m1i8q56xj().s[10]++, null);
  aiEngine =
  /* istanbul ignore next */
  (cov_1m1i8q56xj().s[11]++, null);
  database =
  /* istanbul ignore next */
  (cov_1m1i8q56xj().s[12]++, null);
  security =
  /* istanbul ignore next */
  (cov_1m1i8q56xj().s[13]++, null);
  isRunning =
  /* istanbul ignore next */
  (cov_1m1i8q56xj().s[14]++, false);
  constructor(config) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[1]++;
    cov_1m1i8q56xj().s[15]++;
    this.logger = new logger_1.Logger('DashboardServer');
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[16]++;
    this.config = config;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[17]++;
    this.app = (0, express_1.default)();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[18]++;
    this.server = (0, http_1.createServer)(this.app);
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[19]++;
    this.io = new socket_io_1.Server(this.server, {
      cors: {
        origin: config.cors.origin,
        credentials: config.cors.credentials
      }
    });
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[20]++;
    this.setupMiddleware();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[21]++;
    this.setupRoutes();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[22]++;
    this.setupWebSocket();
  }
  setTradingEngine(tradingEngine) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[2]++;
    cov_1m1i8q56xj().s[23]++;
    this.tradingEngine = tradingEngine;
  }
  setAIEngine(aiEngine) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[3]++;
    cov_1m1i8q56xj().s[24]++;
    this.aiEngine = aiEngine;
  }
  setDatabase(database) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[4]++;
    cov_1m1i8q56xj().s[25]++;
    this.database = database;
  }
  setSecurity(security) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[5]++;
    cov_1m1i8q56xj().s[26]++;
    this.security = security;
  }
  async start() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[6]++;
    cov_1m1i8q56xj().s[27]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_1m1i8q56xj().b[3][0]++;
      cov_1m1i8q56xj().s[28]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1m1i8q56xj().b[3][1]++;
    }
    cov_1m1i8q56xj().s[29]++;
    try {
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[30]++;
      await new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[7]++;
        cov_1m1i8q56xj().s[31]++;
        this.server.listen(this.config.port, this.config.host, () => {
          /* istanbul ignore next */
          cov_1m1i8q56xj().f[8]++;
          cov_1m1i8q56xj().s[32]++;
          this.isRunning = true;
          /* istanbul ignore next */
          cov_1m1i8q56xj().s[33]++;
          this.logger.info(`Dashboard Server started on http://${this.config.host}:${this.config.port}`);
          /* istanbul ignore next */
          cov_1m1i8q56xj().s[34]++;
          resolve();
        });
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[35]++;
        this.server.on('error', reject);
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[36]++;
      this.logger.error('Failed to start Dashboard Server:', error);
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[37]++;
      throw error;
    }
  }
  async stop() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[9]++;
    cov_1m1i8q56xj().s[38]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_1m1i8q56xj().b[4][0]++;
      cov_1m1i8q56xj().s[39]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1m1i8q56xj().b[4][1]++;
    }
    cov_1m1i8q56xj().s[40]++;
    this.io.close();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[41]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[10]++;
      cov_1m1i8q56xj().s[42]++;
      this.server.close(() => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[11]++;
        cov_1m1i8q56xj().s[43]++;
        this.isRunning = false;
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[44]++;
        resolve();
      });
    });
  }
  setupMiddleware() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[12]++;
    cov_1m1i8q56xj().s[45]++;
    // Configure Helmet for local network access
    this.app.use((0, helmet_1.default)({
      contentSecurityPolicy: {
        directives: {
          defaultSrc: ["'self'"],
          styleSrc: ["'self'", "'unsafe-inline'"],
          scriptSrc: ["'self'", "'unsafe-inline'"],
          imgSrc: ["'self'", "data:", "https:"],
          connectSrc: ["'self'", "ws:", "wss:"]
        }
      },
      crossOriginEmbedderPolicy: false
    }));
    // Configure CORS for local network access
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[46]++;
    this.app.use((0, cors_1.default)({
      origin: (origin, callback) => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[13]++;
        cov_1m1i8q56xj().s[47]++;
        // Allow requests with no origin (mobile apps, curl, etc.)
        if (!origin) {
          /* istanbul ignore next */
          cov_1m1i8q56xj().b[5][0]++;
          cov_1m1i8q56xj().s[48]++;
          return callback(null, true);
        } else
        /* istanbul ignore next */
        {
          cov_1m1i8q56xj().b[5][1]++;
        }
        // Check if origin matches configured patterns
        const allowedOrigins =
        /* istanbul ignore next */
        (cov_1m1i8q56xj().s[49]++, this.config.cors.origin);
        const isAllowed =
        /* istanbul ignore next */
        (cov_1m1i8q56xj().s[50]++, allowedOrigins.some(allowedOrigin => {
          /* istanbul ignore next */
          cov_1m1i8q56xj().f[14]++;
          cov_1m1i8q56xj().s[51]++;
          if (allowedOrigin === '*') {
            /* istanbul ignore next */
            cov_1m1i8q56xj().b[6][0]++;
            cov_1m1i8q56xj().s[52]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1m1i8q56xj().b[6][1]++;
          }
          cov_1m1i8q56xj().s[53]++;
          if (allowedOrigin === origin) {
            /* istanbul ignore next */
            cov_1m1i8q56xj().b[7][0]++;
            cov_1m1i8q56xj().s[54]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1m1i8q56xj().b[7][1]++;
          }
          // Support wildcard patterns for local networks
          cov_1m1i8q56xj().s[55]++;
          if (allowedOrigin.includes('*')) {
            /* istanbul ignore next */
            cov_1m1i8q56xj().b[8][0]++;
            const pattern =
            /* istanbul ignore next */
            (cov_1m1i8q56xj().s[56]++, allowedOrigin.replace(/\*/g, '.*'));
            const regex =
            /* istanbul ignore next */
            (cov_1m1i8q56xj().s[57]++, new RegExp(`^${pattern}$`));
            /* istanbul ignore next */
            cov_1m1i8q56xj().s[58]++;
            return regex.test(origin);
          } else
          /* istanbul ignore next */
          {
            cov_1m1i8q56xj().b[8][1]++;
          }
          cov_1m1i8q56xj().s[59]++;
          return false;
        }));
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[60]++;
        if (isAllowed) {
          /* istanbul ignore next */
          cov_1m1i8q56xj().b[9][0]++;
          cov_1m1i8q56xj().s[61]++;
          callback(null, true);
        } else {
          /* istanbul ignore next */
          cov_1m1i8q56xj().b[9][1]++;
          cov_1m1i8q56xj().s[62]++;
          this.logger.warn(`CORS blocked origin: ${origin}`);
          /* istanbul ignore next */
          cov_1m1i8q56xj().s[63]++;
          callback(null, false);
        }
      },
      credentials: this.config.cors.credentials,
      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
      allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
    }));
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[64]++;
    this.app.use(express_1.default.json({
      limit: '10mb'
    }));
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[65]++;
    this.app.use(express_1.default.urlencoded({
      extended: true,
      limit: '10mb'
    }));
    // Add request logging for debugging
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[66]++;
    this.app.use((req, res, next) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[15]++;
      cov_1m1i8q56xj().s[67]++;
      this.logger.debug(`${req.method} ${req.path}`, {
        origin: req.get('Origin'),
        userAgent: req.get('User-Agent'),
        ip: req.ip
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[68]++;
      next();
    });
  }
  setupRoutes() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[16]++;
    cov_1m1i8q56xj().s[69]++;
    // Health check endpoint
    this.app.get('/health', (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[17]++;
      cov_1m1i8q56xj().s[70]++;
      res.json({
        status: 'healthy',
        timestamp: new Date().toISOString(),
        host: this.config.host,
        port: this.config.port
      });
    });
    // System status API
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[71]++;
    this.app.get('/api/system/status', async (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[18]++;
      cov_1m1i8q56xj().s[72]++;
      try {
        const status =
        /* istanbul ignore next */
        (cov_1m1i8q56xj().s[73]++, {
          tradingEngine:
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[10][0]++, this.tradingEngine?.getStatus()) ||
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[10][1]++, null),
          aiEngine:
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[11][0]++, this.aiEngine?.getStatus()) ||
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[11][1]++, null),
          database:
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[12][0]++, this.database?.getStatus()) ||
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[12][1]++, null),
          dashboard: {
            isRunning: this.isRunning,
            host: this.config.host,
            port: this.config.port,
            corsOrigins: this.config.cors.origin
          },
          network: {
            clientIP: req.ip,
            origin: req.get('Origin'),
            userAgent: req.get('User-Agent')
          }
        });
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[74]++;
        res.json({
          success: true,
          data: status
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[75]++;
        this.logger.error('Error getting system status:', error);
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[76]++;
        res.status(500).json({
          success: false,
          error: 'Internal server error'
        });
      }
    });
    // Network info endpoint for debugging
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[77]++;
    this.app.get('/api/network/info', (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[19]++;
      const networkInfo =
      /* istanbul ignore next */
      (cov_1m1i8q56xj().s[78]++, {
        serverHost: this.config.host,
        serverPort: this.config.port,
        clientIP: req.ip,
        origin: req.get('Origin'),
        userAgent: req.get('User-Agent'),
        headers: req.headers,
        corsOrigins: this.config.cors.origin,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[79]++;
      res.json({
        success: true,
        data: networkInfo
      });
    });
    // Main dashboard page
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[80]++;
    this.app.get('*', (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[20]++;
      const clientIP =
      /* istanbul ignore next */
      (cov_1m1i8q56xj().s[81]++, req.ip);
      const origin =
      /* istanbul ignore next */
      (cov_1m1i8q56xj().s[82]++,
      /* istanbul ignore next */
      (cov_1m1i8q56xj().b[13][0]++, req.get('Origin')) ||
      /* istanbul ignore next */
      (cov_1m1i8q56xj().b[13][1]++, 'Direct access'));
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[83]++;
      res.send(`
        <!DOCTYPE html>
        <html>
        <head>
          <title>AI Crypto Trading Agent - Intel NUC</title>
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <style>
            body { 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
              margin: 0; padding: 20px; 
              background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%); 
              color: #e2e8f0; 
              min-height: 100vh;
            }
            .container { max-width: 1200px; margin: 0 auto; }
            .header { text-align: center; margin-bottom: 40px; }
            .status-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }
            .status-card { 
              background: rgba(30, 41, 59, 0.8); 
              padding: 24px; 
              border-radius: 12px; 
              border: 1px solid rgba(59, 130, 246, 0.2);
              backdrop-filter: blur(10px);
            }
            .status-card h3 { color: #3b82f6; margin-top: 0; }
            .status-indicator { 
              display: inline-block; 
              width: 12px; 
              height: 12px; 
              border-radius: 50%; 
              background: #10b981; 
              margin-right: 8px;
            }
            .network-info { font-size: 0.9em; opacity: 0.8; }
            .api-links { margin-top: 20px; }
            .api-links a { 
              color: #60a5fa; 
              text-decoration: none; 
              margin-right: 15px;
              padding: 8px 12px;
              background: rgba(59, 130, 246, 0.1);
              border-radius: 6px;
              border: 1px solid rgba(59, 130, 246, 0.2);
            }
            .api-links a:hover { background: rgba(59, 130, 246, 0.2); }
            @media (max-width: 768px) {
              .status-grid { grid-template-columns: 1fr; }
              body { padding: 10px; }
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>🤖 AI Crypto Trading Agent</h1>
              <p>Intel NUC Deployment - Local Network Dashboard</p>
            </div>
            
            <div class="status-grid">
              <div class="status-card">
                <h3><span class="status-indicator"></span>Dashboard Server</h3>
                <p><strong>Status:</strong> Running</p>
                <p><strong>Host:</strong> ${this.config.host}</p>
                <p><strong>Port:</strong> ${this.config.port}</p>
                <p><strong>Started:</strong> ${new Date().toLocaleString()}</p>
              </div>
              
              <div class="status-card">
                <h3>🌐 Network Information</h3>
                <p><strong>Your IP:</strong> ${clientIP}</p>
                <p><strong>Origin:</strong> ${origin}</p>
                <p><strong>Access URL:</strong> http://${req.get('host')}</p>
                <div class="network-info">
                  <p>This dashboard is accessible from any device on your local network.</p>
                </div>
              </div>
              
              <div class="status-card">
                <h3>🔗 SSH Tunnel</h3>
                <p><strong>Target:</strong> Oracle Cloud → Gate.io API</p>
                <p><strong>Local Port:</strong> 8443</p>
                <p><strong>Status:</strong> <span id="tunnel-status">Checking...</span></p>
              </div>
              
              <div class="status-card">
                <h3>💾 Database</h3>
                <p><strong>Type:</strong> PostgreSQL</p>
                <p><strong>Host:</strong> localhost:5432</p>
                <p><strong>Status:</strong> <span id="db-status">Checking...</span></p>
              </div>
            </div>
            
            <div class="status-card">
              <h3>🔧 API Endpoints</h3>
              <div class="api-links">
                <a href="/health" target="_blank">Health Check</a>
                <a href="/api/system/status" target="_blank">System Status</a>
                <a href="/api/network/info" target="_blank">Network Info</a>
              </div>
            </div>
          </div>
          
          <script>
            // Auto-refresh status indicators
            async function updateStatus() {
              try {
                const response = await fetch('/api/system/status');
                const data = await response.json();
                
                if (data.success) {
                  document.getElementById('tunnel-status').textContent = 'Connected';
                  document.getElementById('db-status').textContent = 'Connected';
                } else {
                  document.getElementById('tunnel-status').textContent = 'Error';
                  document.getElementById('db-status').textContent = 'Error';
                }
              } catch (error) {
                document.getElementById('tunnel-status').textContent = 'Unknown';
                document.getElementById('db-status').textContent = 'Unknown';
              }
            }
            
            // Update status on load and every 30 seconds
            updateStatus();
            setInterval(updateStatus, 30000);
          </script>
        </body>
        </html>
      `);
    });
  }
  setupWebSocket() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[21]++;
    cov_1m1i8q56xj().s[84]++;
    this.io.on('connection', socket => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[22]++;
      cov_1m1i8q56xj().s[85]++;
      this.logger.info('WebSocket client connected:', socket.id);
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[86]++;
      socket.emit('welcome', {
        message: 'Connected to AI Crypto Trading Agent',
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[87]++;
      socket.on('disconnect', () => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[23]++;
        cov_1m1i8q56xj().s[88]++;
        this.logger.info('WebSocket client disconnected:', socket.id);
      });
    });
  }
  getStatus() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[24]++;
    cov_1m1i8q56xj().s[89]++;
    return {
      isRunning: this.isRunning,
      port: this.config.port,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_1m1i8q56xj().s[90]++;
exports.DashboardServer = DashboardServer;
/* istanbul ignore next */
cov_1m1i8q56xj().s[91]++;
exports.default = DashboardServer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,