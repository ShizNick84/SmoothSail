ae29ebee2bf501cf46fa7e547f68e2b8
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - DATABASE MANAGER
 * =============================================================================
 *
 * Core database management service that handles all data persistence,
 * connection management, and database operations for the trading system.
 *
 * Features:
 * - PostgreSQL connection management
 * - Schema management and migrations
 * - Trade history storage
 * - Portfolio state persistence
 * - AI analysis results storage
 * - System metrics logging
 * - Connection pooling
 * - Backup and recovery
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_s6xzxixiw() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\database\\database-manager.ts";
  var hash = "99cae01f57c7ad44a00185ac7a28bb6aa61de6b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\database\\database-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "1": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "2": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "3": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "4": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "5": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "6": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "7": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "8": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "9": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 61
        }
      },
      "10": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "11": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "12": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "13": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 68
        }
      },
      "14": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "15": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "16": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 89
        }
      },
      "17": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "18": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "19": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 38
        }
      },
      "20": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 75
        }
      },
      "21": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 82
        }
      },
      "22": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 72
        }
      },
      "23": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "24": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "25": {
        start: {
          line: 89,
          column: 23
        },
        end: {
          line: 89,
          column: 48
        }
      },
      "26": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "27": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 61
        }
      },
      "28": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "29": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 29
        }
      },
      "30": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "31": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "32": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "33": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 65
        }
      },
      "34": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "35": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 69
        }
      },
      "36": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "37": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "38": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 46
        }
      },
      "39": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "40": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "41": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 46
        }
      },
      "42": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 66
        }
      },
      "43": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 208,
          column: 7
        }
      },
      "44": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "45": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "46": {
        start: {
          line: 218,
          column: 27
        },
        end: {
          line: 218,
          column: 112
        }
      },
      "47": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "48": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 55
        }
      },
      "49": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 103
        }
      },
      "50": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 76
        }
      },
      "51": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "52": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 56
        }
      },
      "53": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 233,
          column: 36
        }
      },
      "54": {
        start: {
          line: 234,
          column: 23
        },
        end: {
          line: 234,
          column: 48
        }
      },
      "55": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "56": {
        start: {
          line: 236,
          column: 27
        },
        end: {
          line: 236,
          column: 60
        }
      },
      "57": {
        start: {
          line: 237,
          column: 34
        },
        end: {
          line: 237,
          column: 56
        }
      },
      "58": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 30
        }
      },
      "59": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 49
        }
      },
      "60": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "61": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 26
        }
      },
      "62": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "63": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 24
        }
      },
      "64": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 29
        }
      },
      "65": {
        start: {
          line: 264,
          column: 22
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "66": {
        start: {
          line: 269,
          column: 23
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "67": {
        start: {
          line: 281,
          column: 23
        },
        end: {
          line: 281,
          column: 61
        }
      },
      "68": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 33
        }
      },
      "69": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 288,
          column: 42
        }
      },
      "70": {
        start: {
          line: 289,
          column: 23
        },
        end: {
          line: 289,
          column: 25
        }
      },
      "71": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "72": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 42
        }
      },
      "73": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 32
        }
      },
      "74": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 74
        }
      },
      "75": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 27
        }
      },
      "76": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 296,
          column: 61
        }
      },
      "77": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 52
        }
      },
      "78": {
        start: {
          line: 303,
          column: 22
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "79": {
        start: {
          line: 308,
          column: 23
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "80": {
        start: {
          line: 316,
          column: 23
        },
        end: {
          line: 316,
          column: 61
        }
      },
      "81": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 33
        }
      },
      "82": {
        start: {
          line: 323,
          column: 22
        },
        end: {
          line: 323,
          column: 90
        }
      },
      "83": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 324,
          column: 62
        }
      },
      "84": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 333,
          column: 12
        }
      },
      "85": {
        start: {
          line: 325,
          column: 39
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "86": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 343,
          column: 5
        }
      },
      "87": {
        start: {
          line: 344,
          column: 23
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "88": {
        start: {
          line: 352,
          column: 23
        },
        end: {
          line: 352,
          column: 61
        }
      },
      "89": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 33
        }
      },
      "90": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 359,
          column: 57
        }
      },
      "91": {
        start: {
          line: 360,
          column: 23
        },
        end: {
          line: 360,
          column: 25
        }
      },
      "92": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "93": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 61
        }
      },
      "94": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 32
        }
      },
      "95": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "96": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 68
        }
      },
      "97": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 38
        }
      },
      "98": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 74
        }
      },
      "99": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 27
        }
      },
      "100": {
        start: {
          line: 371,
          column: 23
        },
        end: {
          line: 371,
          column: 61
        }
      },
      "101": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 380,
          column: 12
        }
      },
      "102": {
        start: {
          line: 372,
          column: 39
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "103": {
        start: {
          line: 386,
          column: 22
        },
        end: {
          line: 389,
          column: 5
        }
      },
      "104": {
        start: {
          line: 390,
          column: 23
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "105": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 47
        }
      },
      "106": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "107": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 414,
          column: 14
        }
      },
      "108": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "109": {
        start: {
          line: 417,
          column: 27
        },
        end: {
          line: 427,
          column: 13
        }
      },
      "110": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 48
        }
      },
      "111": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 26
        }
      },
      "112": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 443,
          column: 14
        }
      },
      "113": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "114": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 34
        }
      },
      "115": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 29
        }
      },
      "116": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 61
        }
      },
      "117": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 472,
          column: 10
        }
      },
      "118": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 483,
          column: 10
        }
      },
      "119": {
        start: {
          line: 486,
          column: 0
        },
        end: {
          line: 486,
          column: 42
        }
      },
      "120": {
        start: {
          line: 487,
          column: 0
        },
        end: {
          line: 487,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 51
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 75
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 100,
            column: 31
          }
        },
        loc: {
          start: {
            line: 100,
            column: 39
          },
          end: {
            line: 102,
            column: 9
          }
        },
        line: 100
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 33
          }
        },
        loc: {
          start: {
            line: 103,
            column: 38
          },
          end: {
            line: 105,
            column: 9
          }
        },
        line: 103
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 106,
            column: 31
          },
          end: {
            line: 106,
            column: 32
          }
        },
        loc: {
          start: {
            line: 106,
            column: 37
          },
          end: {
            line: 108,
            column: 9
          }
        },
        line: 106
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 113
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 26
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 200
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 43
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 229
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 263
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 47
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 287
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 42
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 302
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        loc: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 322
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 325,
            column: 31
          },
          end: {
            line: 325,
            column: 32
          }
        },
        loc: {
          start: {
            line: 325,
            column: 39
          },
          end: {
            line: 333,
            column: 9
          }
        },
        line: 325
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 35
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 338
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 66
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 358
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 372,
            column: 31
          },
          end: {
            line: 372,
            column: 32
          }
        },
        loc: {
          start: {
            line: 372,
            column: 39
          },
          end: {
            line: 380,
            column: 9
          }
        },
        line: 372
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 68
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 385
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 22
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 402
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 23
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 449
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 24
          },
          end: {
            line: 473,
            column: 5
          }
        },
        line: 459
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 477,
            column: 5
          }
        },
        loc: {
          start: {
            line: 477,
            column: 16
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 477
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 17
          },
          end: {
            line: 83,
            column: 43
          }
        }, {
          start: {
            line: 83,
            column: 47
          },
          end: {
            line: 83,
            column: 49
          }
        }],
        line: 83
      },
      "2": {
        loc: {
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 54
          }
        }, {
          start: {
            line: 84,
            column: 58
          },
          end: {
            line: 84,
            column: 63
          }
        }],
        line: 84
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 37
          },
          end: {
            line: 85,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 37
          },
          end: {
            line: 85,
            column: 66
          }
        }, {
          start: {
            line: 85,
            column: 70
          },
          end: {
            line: 85,
            column: 75
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "5": {
        loc: {
          start: {
            line: 229,
            column: 30
          },
          end: {
            line: 229,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 229,
            column: 39
          },
          end: {
            line: 229,
            column: 41
          }
        }],
        line: 229
      },
      "6": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "7": {
        loc: {
          start: {
            line: 243,
            column: 22
          },
          end: {
            line: 243,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 22
          },
          end: {
            line: 243,
            column: 41
          }
        }, {
          start: {
            line: 243,
            column: 45
          },
          end: {
            line: 243,
            column: 46
          }
        }],
        line: 243
      },
      "8": {
        loc: {
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 274,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 274,
            column: 21
          }
        }, {
          start: {
            line: 274,
            column: 25
          },
          end: {
            line: 274,
            column: 26
          }
        }],
        line: 274
      },
      "9": {
        loc: {
          start: {
            line: 287,
            column: 34
          },
          end: {
            line: 287,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 287,
            column: 42
          },
          end: {
            line: 287,
            column: 45
          }
        }],
        line: 287
      },
      "10": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "11": {
        loc: {
          start: {
            line: 322,
            column: 30
          },
          end: {
            line: 322,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 38
          },
          end: {
            line: 322,
            column: 41
          }
        }],
        line: 322
      },
      "12": {
        loc: {
          start: {
            line: 358,
            column: 53
          },
          end: {
            line: 358,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 358,
            column: 61
          },
          end: {
            line: 358,
            column: 64
          }
        }],
        line: 358
      },
      "13": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "14": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "15": {
        loc: {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 395,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 395,
            column: 23
          },
          end: {
            line: 395,
            column: 47
          }
        }, {
          start: {
            line: 395,
            column: 50
          },
          end: {
            line: 395,
            column: 54
          }
        }],
        line: 395
      },
      "16": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "17": {
        loc: {
          start: {
            line: 423,
            column: 34
          },
          end: {
            line: 423,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 423,
            column: 56
          },
          end: {
            line: 423,
            column: 93
          }
        }, {
          start: {
            line: 423,
            column: 96
          },
          end: {
            line: 423,
            column: 97
          }
        }],
        line: 423
      },
      "18": {
        loc: {
          start: {
            line: 440,
            column: 27
          },
          end: {
            line: 440,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 52
          },
          end: {
            line: 440,
            column: 65
          }
        }, {
          start: {
            line: 440,
            column: 68
          },
          end: {
            line: 440,
            column: 81
          }
        }],
        line: 440
      },
      "19": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "20": {
        loc: {
          start: {
            line: 466,
            column: 28
          },
          end: {
            line: 466,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 28
          },
          end: {
            line: 466,
            column: 35
          }
        }, {
          start: {
            line: 466,
            column: 39
          },
          end: {
            line: 466,
            column: 40
          }
        }],
        line: 466
      },
      "21": {
        loc: {
          start: {
            line: 470,
            column: 17
          },
          end: {
            line: 470,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 470,
            column: 27
          },
          end: {
            line: 470,
            column: 46
          }
        }, {
          start: {
            line: 470,
            column: 49
          },
          end: {
            line: 470,
            column: 58
          }
        }],
        line: 470
      },
      "22": {
        loc: {
          start: {
            line: 480,
            column: 29
          },
          end: {
            line: 480,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 480,
            column: 29
          },
          end: {
            line: 480,
            column: 50
          }
        }, {
          start: {
            line: 480,
            column: 54
          },
          end: {
            line: 480,
            column: 55
          }
        }],
        line: 480
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99cae01f57c7ad44a00185ac7a28bb6aa61de6b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_s6xzxixiw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_s6xzxixiw();
cov_s6xzxixiw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_s6xzxixiw().s[1]++;
exports.DatabaseManager = void 0;
const pg_1 =
/* istanbul ignore next */
(cov_s6xzxixiw().s[2]++, require("pg"));
const logger_1 =
/* istanbul ignore next */
(cov_s6xzxixiw().s[3]++, require("../logging/logger"));
/**
 * Main Database Manager class
 * Handles all database operations and connection management
 */
class DatabaseManager {
  constructor(config) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[0]++;
    cov_s6xzxixiw().s[4]++;
    this.pool = null;
    /* istanbul ignore next */
    cov_s6xzxixiw().s[5]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_s6xzxixiw().s[6]++;
    this.queryCount = 0;
    /* istanbul ignore next */
    cov_s6xzxixiw().s[7]++;
    this.totalQueryTime = 0;
    /* istanbul ignore next */
    cov_s6xzxixiw().s[8]++;
    this.startTime = new Date();
    /* istanbul ignore next */
    cov_s6xzxixiw().s[9]++;
    this.logger = new logger_1.Logger('DatabaseManager');
    /* istanbul ignore next */
    cov_s6xzxixiw().s[10]++;
    this.config = config;
    /* istanbul ignore next */
    cov_s6xzxixiw().s[11]++;
    this.logger.info('Database Manager created', {
      type: config.type,
      host: config.host,
      database: config.database
    });
  }
  /**
   * Initialize the database connection and schema
   */
  async initialize() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[1]++;
    cov_s6xzxixiw().s[12]++;
    try {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[13]++;
      this.logger.info('💾 Initializing Database Manager...');
      /* istanbul ignore next */
      cov_s6xzxixiw().s[14]++;
      if (this.config.type === 'postgresql') {
        /* istanbul ignore next */
        cov_s6xzxixiw().b[0][0]++;
        cov_s6xzxixiw().s[15]++;
        await this.initializePostgreSQL();
      } else {
        /* istanbul ignore next */
        cov_s6xzxixiw().b[0][1]++;
        cov_s6xzxixiw().s[16]++;
        throw new Error(`Database type ${this.config.type} not yet implemented`);
      }
      // Create tables if they don't exist
      /* istanbul ignore next */
      cov_s6xzxixiw().s[17]++;
      await this.createTables();
      // Run any pending migrations
      /* istanbul ignore next */
      cov_s6xzxixiw().s[18]++;
      await this.runMigrations();
      /* istanbul ignore next */
      cov_s6xzxixiw().s[19]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_s6xzxixiw().s[20]++;
      this.logger.info('✅ Database Manager initialization complete');
    } catch (error) {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[21]++;
      this.logger.error('❌ Database Manager initialization failed:', error);
      /* istanbul ignore next */
      cov_s6xzxixiw().s[22]++;
      throw new Error(`Database initialization failed: ${error}`);
    }
  }
  /**
   * Initialize PostgreSQL connection pool
   */
  async initializePostgreSQL() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[2]++;
    const poolConfig =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[23]++, {
      host: this.config.host,
      port: this.config.port,
      database: this.config.database,
      user: this.config.username,
      password: this.config.password,
      ssl: this.config.ssl,
      max:
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[1][0]++, this.config.maxConnections) ||
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[1][1]++, 20),
      idleTimeoutMillis:
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[2][0]++, this.config.idleTimeout) ||
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[2][1]++, 30000),
      connectionTimeoutMillis:
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[3][0]++, this.config.connectionTimeout) ||
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[3][1]++, 60000)
    });
    /* istanbul ignore next */
    cov_s6xzxixiw().s[24]++;
    this.pool = new pg_1.Pool(poolConfig);
    // Test connection
    const client =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[25]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_s6xzxixiw().s[26]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_s6xzxixiw().s[27]++, await client.query('SELECT NOW()'));
      /* istanbul ignore next */
      cov_s6xzxixiw().s[28]++;
      this.logger.info('✅ PostgreSQL connection established', {
        serverTime: result.rows[0].now
      });
    } finally {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[29]++;
      client.release();
    }
    // Set up error handling
    /* istanbul ignore next */
    cov_s6xzxixiw().s[30]++;
    this.pool.on('error', err => {
      /* istanbul ignore next */
      cov_s6xzxixiw().f[3]++;
      cov_s6xzxixiw().s[31]++;
      this.logger.error('PostgreSQL pool error:', err);
    });
    /* istanbul ignore next */
    cov_s6xzxixiw().s[32]++;
    this.pool.on('connect', () => {
      /* istanbul ignore next */
      cov_s6xzxixiw().f[4]++;
      cov_s6xzxixiw().s[33]++;
      this.logger.debug('New PostgreSQL client connected');
    });
    /* istanbul ignore next */
    cov_s6xzxixiw().s[34]++;
    this.pool.on('remove', () => {
      /* istanbul ignore next */
      cov_s6xzxixiw().f[5]++;
      cov_s6xzxixiw().s[35]++;
      this.logger.debug('PostgreSQL client removed from pool');
    });
  }
  /**
   * Create database tables
   */
  async createTables() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[6]++;
    const tables =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[36]++, [
    // Trades table
    `CREATE TABLE IF NOT EXISTS trades (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        symbol VARCHAR(20) NOT NULL,
        side VARCHAR(4) NOT NULL CHECK (side IN ('buy', 'sell')),
        amount DECIMAL(20, 8) NOT NULL,
        price DECIMAL(20, 8) NOT NULL,
        fee DECIMAL(20, 8) DEFAULT 0,
        timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
        order_id VARCHAR(100) NOT NULL,
        strategy VARCHAR(50),
        pnl DECIMAL(20, 8),
        status VARCHAR(20) NOT NULL DEFAULT 'pending',
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      )`,
    // Portfolio snapshots table
    `CREATE TABLE IF NOT EXISTS portfolio_snapshots (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
        total_value DECIMAL(20, 8) NOT NULL,
        balances JSONB NOT NULL,
        positions JSONB NOT NULL,
        pnl DECIMAL(20, 8) NOT NULL,
        drawdown DECIMAL(10, 4) NOT NULL,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      )`,
    // AI analysis results table
    `CREATE TABLE IF NOT EXISTS ai_analysis (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        symbol VARCHAR(20) NOT NULL,
        timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
        analysis_type VARCHAR(50) NOT NULL,
        result JSONB NOT NULL,
        confidence DECIMAL(5, 4) NOT NULL,
        execution_time INTEGER NOT NULL,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      )`,
    // System metrics table
    `CREATE TABLE IF NOT EXISTS system_metrics (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
        metric_type VARCHAR(50) NOT NULL,
        metric_name VARCHAR(100) NOT NULL,
        value DECIMAL(20, 8) NOT NULL,
        metadata JSONB,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      )`,
    // Orders table
    `CREATE TABLE IF NOT EXISTS orders (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        order_id VARCHAR(100) UNIQUE NOT NULL,
        symbol VARCHAR(20) NOT NULL,
        side VARCHAR(4) NOT NULL CHECK (side IN ('buy', 'sell')),
        type VARCHAR(20) NOT NULL,
        amount DECIMAL(20, 8) NOT NULL,
        price DECIMAL(20, 8),
        filled_amount DECIMAL(20, 8) DEFAULT 0,
        status VARCHAR(20) NOT NULL,
        strategy VARCHAR(50),
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      )`]);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[37]++;
    for (const tableSQL of tables) {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[38]++;
      await this.executeQuery(tableSQL);
    }
    // Create indexes
    const indexes =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[39]++, ['CREATE INDEX IF NOT EXISTS idx_trades_symbol_timestamp ON trades(symbol, timestamp)', 'CREATE INDEX IF NOT EXISTS idx_trades_timestamp ON trades(timestamp)', 'CREATE INDEX IF NOT EXISTS idx_portfolio_timestamp ON portfolio_snapshots(timestamp)', 'CREATE INDEX IF NOT EXISTS idx_ai_analysis_symbol_timestamp ON ai_analysis(symbol, timestamp)', 'CREATE INDEX IF NOT EXISTS idx_system_metrics_timestamp ON system_metrics(timestamp)', 'CREATE INDEX IF NOT EXISTS idx_orders_status ON orders(status)', 'CREATE INDEX IF NOT EXISTS idx_orders_symbol ON orders(symbol)']);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[40]++;
    for (const indexSQL of indexes) {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[41]++;
      await this.executeQuery(indexSQL);
    }
    /* istanbul ignore next */
    cov_s6xzxixiw().s[42]++;
    this.logger.info('✅ Database tables and indexes created');
  }
  /**
   * Run database migrations
   */
  async runMigrations() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[7]++;
    cov_s6xzxixiw().s[43]++;
    // Create migrations table if it doesn't exist
    await this.executeQuery(`
      CREATE TABLE IF NOT EXISTS migrations (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL UNIQUE,
        executed_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      )
    `);
    // Add any migrations here
    const migrations =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[44]++, [] // Example migration
    // {
    //   name: '001_add_user_preferences',
    //   sql: 'ALTER TABLE users ADD COLUMN preferences JSONB DEFAULT \'{}\'::jsonb'
    // }
    );
    /* istanbul ignore next */
    cov_s6xzxixiw().s[45]++;
    for (const migration of migrations) {
      const exists =
      /* istanbul ignore next */
      (cov_s6xzxixiw().s[46]++, await this.executeQuery('SELECT 1 FROM migrations WHERE name = $1', [migration.name]));
      /* istanbul ignore next */
      cov_s6xzxixiw().s[47]++;
      if (exists.rows.length === 0) {
        /* istanbul ignore next */
        cov_s6xzxixiw().b[4][0]++;
        cov_s6xzxixiw().s[48]++;
        await this.executeQuery(migration.sql);
        /* istanbul ignore next */
        cov_s6xzxixiw().s[49]++;
        await this.executeQuery('INSERT INTO migrations (name) VALUES ($1)', [migration.name]);
        /* istanbul ignore next */
        cov_s6xzxixiw().s[50]++;
        this.logger.info(`✅ Migration executed: ${migration.name}`);
      } else
      /* istanbul ignore next */
      {
        cov_s6xzxixiw().b[4][1]++;
      }
    }
  }
  /**
   * Execute a database query
   */
  async executeQuery(query, params =
  /* istanbul ignore next */
  (cov_s6xzxixiw().b[5][0]++, [])) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[8]++;
    cov_s6xzxixiw().s[51]++;
    if (!this.pool) {
      /* istanbul ignore next */
      cov_s6xzxixiw().b[6][0]++;
      cov_s6xzxixiw().s[52]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_s6xzxixiw().b[6][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[53]++, Date.now());
    const client =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[54]++, await this.pool.connect());
    /* istanbul ignore next */
    cov_s6xzxixiw().s[55]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_s6xzxixiw().s[56]++, await client.query(query, params));
      const executionTime =
      /* istanbul ignore next */
      (cov_s6xzxixiw().s[57]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_s6xzxixiw().s[58]++;
      this.queryCount++;
      /* istanbul ignore next */
      cov_s6xzxixiw().s[59]++;
      this.totalQueryTime += executionTime;
      /* istanbul ignore next */
      cov_s6xzxixiw().s[60]++;
      this.logger.debug('Query executed', {
        query: query.substring(0, 100),
        params: params.length,
        rows:
        /* istanbul ignore next */
        (cov_s6xzxixiw().b[7][0]++, result.rows?.length) ||
        /* istanbul ignore next */
        (cov_s6xzxixiw().b[7][1]++, 0),
        executionTime
      });
      /* istanbul ignore next */
      cov_s6xzxixiw().s[61]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[62]++;
      this.logger.error('Query execution failed', {
        query: query.substring(0, 100),
        params,
        error: error
      });
      /* istanbul ignore next */
      cov_s6xzxixiw().s[63]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[64]++;
      client.release();
    }
  }
  /**
   * Save trade record
   */
  async saveTrade(trade) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[9]++;
    const query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[65]++, `
      INSERT INTO trades (symbol, side, amount, price, fee, timestamp, order_id, strategy, pnl, status)
      VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
      RETURNING id
    `);
    const params =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[66]++, [trade.symbol, trade.side, trade.amount, trade.price,
    /* istanbul ignore next */
    (cov_s6xzxixiw().b[8][0]++, trade.fee) ||
    /* istanbul ignore next */
    (cov_s6xzxixiw().b[8][1]++, 0), trade.timestamp, trade.orderId, trade.strategy, trade.pnl, trade.status]);
    const result =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[67]++, await this.executeQuery(query, params));
    /* istanbul ignore next */
    cov_s6xzxixiw().s[68]++;
    return result.rows[0].id;
  }
  /**
   * Get trade history
   */
  async getTradeHistory(symbol, limit =
  /* istanbul ignore next */
  (cov_s6xzxixiw().b[9][0]++, 100)) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[10]++;
    let query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[69]++, 'SELECT * FROM trades');
    const params =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[70]++, []);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[71]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_s6xzxixiw().b[10][0]++;
      cov_s6xzxixiw().s[72]++;
      query += ' WHERE symbol = $1';
      /* istanbul ignore next */
      cov_s6xzxixiw().s[73]++;
      params.push(symbol);
    } else
    /* istanbul ignore next */
    {
      cov_s6xzxixiw().b[10][1]++;
    }
    cov_s6xzxixiw().s[74]++;
    query += ' ORDER BY timestamp DESC LIMIT $' + (params.length + 1);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[75]++;
    params.push(limit);
    const result =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[76]++, await this.executeQuery(query, params));
    /* istanbul ignore next */
    cov_s6xzxixiw().s[77]++;
    return result.rows.map(this.mapTradeRecord);
  }
  /**
   * Save portfolio snapshot
   */
  async savePortfolioSnapshot(snapshot) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[11]++;
    const query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[78]++, `
      INSERT INTO portfolio_snapshots (timestamp, total_value, balances, positions, pnl, drawdown)
      VALUES ($1, $2, $3, $4, $5, $6)
      RETURNING id
    `);
    const params =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[79]++, [snapshot.timestamp, snapshot.totalValue, JSON.stringify(snapshot.balances), JSON.stringify(snapshot.positions), snapshot.pnl, snapshot.drawdown]);
    const result =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[80]++, await this.executeQuery(query, params));
    /* istanbul ignore next */
    cov_s6xzxixiw().s[81]++;
    return result.rows[0].id;
  }
  /**
   * Get portfolio history
   */
  async getPortfolioHistory(limit =
  /* istanbul ignore next */
  (cov_s6xzxixiw().b[11][0]++, 100)) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[12]++;
    const query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[82]++, 'SELECT * FROM portfolio_snapshots ORDER BY timestamp DESC LIMIT $1');
    const result =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[83]++, await this.executeQuery(query, [limit]));
    /* istanbul ignore next */
    cov_s6xzxixiw().s[84]++;
    return result.rows.map(row => {
      /* istanbul ignore next */
      cov_s6xzxixiw().f[13]++;
      cov_s6xzxixiw().s[85]++;
      return {
        id: row.id,
        timestamp: row.timestamp,
        totalValue: parseFloat(row.total_value),
        balances: row.balances,
        positions: row.positions,
        pnl: parseFloat(row.pnl),
        drawdown: parseFloat(row.drawdown)
      };
    });
  }
  /**
   * Save AI analysis result
   */
  async saveAIAnalysis(analysis) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[14]++;
    const query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[86]++, `
      INSERT INTO ai_analysis (symbol, timestamp, analysis_type, result, confidence, execution_time)
      VALUES ($1, $2, $3, $4, $5, $6)
      RETURNING id
    `);
    const params =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[87]++, [analysis.symbol, analysis.timestamp, analysis.analysisType, JSON.stringify(analysis.result), analysis.confidence, analysis.executionTime]);
    const result =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[88]++, await this.executeQuery(query, params));
    /* istanbul ignore next */
    cov_s6xzxixiw().s[89]++;
    return result.rows[0].id;
  }
  /**
   * Get AI analysis history
   */
  async getAIAnalysisHistory(symbol, analysisType, limit =
  /* istanbul ignore next */
  (cov_s6xzxixiw().b[12][0]++, 100)) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[15]++;
    let query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[90]++, 'SELECT * FROM ai_analysis WHERE 1=1');
    const params =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[91]++, []);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[92]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_s6xzxixiw().b[13][0]++;
      cov_s6xzxixiw().s[93]++;
      query += ' AND symbol = $' + (params.length + 1);
      /* istanbul ignore next */
      cov_s6xzxixiw().s[94]++;
      params.push(symbol);
    } else
    /* istanbul ignore next */
    {
      cov_s6xzxixiw().b[13][1]++;
    }
    cov_s6xzxixiw().s[95]++;
    if (analysisType) {
      /* istanbul ignore next */
      cov_s6xzxixiw().b[14][0]++;
      cov_s6xzxixiw().s[96]++;
      query += ' AND analysis_type = $' + (params.length + 1);
      /* istanbul ignore next */
      cov_s6xzxixiw().s[97]++;
      params.push(analysisType);
    } else
    /* istanbul ignore next */
    {
      cov_s6xzxixiw().b[14][1]++;
    }
    cov_s6xzxixiw().s[98]++;
    query += ' ORDER BY timestamp DESC LIMIT $' + (params.length + 1);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[99]++;
    params.push(limit);
    const result =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[100]++, await this.executeQuery(query, params));
    /* istanbul ignore next */
    cov_s6xzxixiw().s[101]++;
    return result.rows.map(row => {
      /* istanbul ignore next */
      cov_s6xzxixiw().f[16]++;
      cov_s6xzxixiw().s[102]++;
      return {
        id: row.id,
        symbol: row.symbol,
        timestamp: row.timestamp,
        analysisType: row.analysis_type,
        result: row.result,
        confidence: parseFloat(row.confidence),
        executionTime: row.execution_time
      };
    });
  }
  /**
   * Save system metric
   */
  async saveSystemMetric(metricType, metricName, value, metadata) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[17]++;
    const query =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[103]++, `
      INSERT INTO system_metrics (timestamp, metric_type, metric_name, value, metadata)
      VALUES ($1, $2, $3, $4, $5)
    `);
    const params =
    /* istanbul ignore next */
    (cov_s6xzxixiw().s[104]++, [new Date(), metricType, metricName, value, metadata ?
    /* istanbul ignore next */
    (cov_s6xzxixiw().b[15][0]++, JSON.stringify(metadata)) :
    /* istanbul ignore next */
    (cov_s6xzxixiw().b[15][1]++, null)]);
    /* istanbul ignore next */
    cov_s6xzxixiw().s[105]++;
    await this.executeQuery(query, params);
  }
  /**
   * Get database health status
   */
  async getHealth() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[18]++;
    cov_s6xzxixiw().s[106]++;
    if (!this.pool) {
      /* istanbul ignore next */
      cov_s6xzxixiw().b[16][0]++;
      cov_s6xzxixiw().s[107]++;
      return {
        isHealthy: false,
        connectionCount: 0,
        activeConnections: 0,
        idleConnections: 0,
        totalQueries: this.queryCount,
        averageQueryTime: 0,
        lastError: 'Database not initialized',
        uptime: 0,
        timestamp: new Date()
      };
    } else
    /* istanbul ignore next */
    {
      cov_s6xzxixiw().b[16][1]++;
    }
    cov_s6xzxixiw().s[108]++;
    try {
      const health =
      /* istanbul ignore next */
      (cov_s6xzxixiw().s[109]++, {
        isHealthy: true,
        connectionCount: this.pool.totalCount,
        activeConnections: this.pool.totalCount - this.pool.idleCount,
        idleConnections: this.pool.idleCount,
        totalQueries: this.queryCount,
        averageQueryTime: this.queryCount > 0 ?
        /* istanbul ignore next */
        (cov_s6xzxixiw().b[17][0]++, this.totalQueryTime / this.queryCount) :
        /* istanbul ignore next */
        (cov_s6xzxixiw().b[17][1]++, 0),
        lastError: null,
        uptime: Date.now() - this.startTime.getTime(),
        timestamp: new Date()
      });
      // Test connection
      /* istanbul ignore next */
      cov_s6xzxixiw().s[110]++;
      await this.executeQuery('SELECT 1');
      /* istanbul ignore next */
      cov_s6xzxixiw().s[111]++;
      return health;
    } catch (error) {
      /* istanbul ignore next */
      cov_s6xzxixiw().s[112]++;
      return {
        isHealthy: false,
        connectionCount: 0,
        activeConnections: 0,
        idleConnections: 0,
        totalQueries: this.queryCount,
        averageQueryTime: 0,
        lastError: error instanceof Error ?
        /* istanbul ignore next */
        (cov_s6xzxixiw().b[18][0]++, error.message) :
        /* istanbul ignore next */
        (cov_s6xzxixiw().b[18][1]++, String(error)),
        uptime: Date.now() - this.startTime.getTime(),
        timestamp: new Date()
      };
    }
  }
  /**
   * Disconnect from database
   */
  async disconnect() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[19]++;
    cov_s6xzxixiw().s[113]++;
    if (this.pool) {
      /* istanbul ignore next */
      cov_s6xzxixiw().b[19][0]++;
      cov_s6xzxixiw().s[114]++;
      await this.pool.end();
      /* istanbul ignore next */
      cov_s6xzxixiw().s[115]++;
      this.pool = null;
      /* istanbul ignore next */
      cov_s6xzxixiw().s[116]++;
      this.logger.info('✅ Database connection closed');
    } else
    /* istanbul ignore next */
    {
      cov_s6xzxixiw().b[19][1]++;
    }
  }
  /**
   * Map database row to trade record
   */
  mapTradeRecord(row) {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[20]++;
    cov_s6xzxixiw().s[117]++;
    return {
      id: row.id,
      symbol: row.symbol,
      side: row.side,
      amount: parseFloat(row.amount),
      price: parseFloat(row.price),
      fee: parseFloat(
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[20][0]++, row.fee) ||
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[20][1]++, 0)),
      timestamp: row.timestamp,
      orderId: row.order_id,
      strategy: row.strategy,
      pnl: row.pnl ?
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[21][0]++, parseFloat(row.pnl)) :
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[21][1]++, undefined),
      status: row.status
    };
  }
  /**
   * Get database manager status for monitoring
   */
  getStatus() {
    /* istanbul ignore next */
    cov_s6xzxixiw().f[21]++;
    cov_s6xzxixiw().s[118]++;
    return {
      isInitialized: this.isInitialized,
      connectionCount:
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[22][0]++, this.pool?.totalCount) ||
      /* istanbul ignore next */
      (cov_s6xzxixiw().b[22][1]++, 0),
      totalQueries: this.queryCount,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_s6xzxixiw().s[119]++;
exports.DatabaseManager = DatabaseManager;
/* istanbul ignore next */
cov_s6xzxixiw().s[120]++;
exports.default = DatabaseManager;