f094c4f19e0c5ed219046d87bb574749
"use strict";

/**
 * Portfolio Risk Manager
 *
 * Implements sophisticated portfolio-level risk management with:
 * - Correlation analysis between positions
 * - Portfolio-level risk exposure monitoring
 * - Diversification requirements and enforcement
 * - Portfolio rebalancing recommendations
 */
/* istanbul ignore next */
function cov_1iduem191k() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\portfolio-risk-manager.ts";
  var hash = "6dea55b8487ce63e8c90b833b2eafa0039470e23";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\portfolio-risk-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "2": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "3": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "5": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 65
        }
      },
      "6": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 70
        }
      },
      "7": {
        start: {
          line: 29,
          column: 32
        },
        end: {
          line: 29,
          column: 77
        }
      },
      "8": {
        start: {
          line: 31,
          column: 34
        },
        end: {
          line: 31,
          column: 82
        }
      },
      "9": {
        start: {
          line: 33,
          column: 31
        },
        end: {
          line: 33,
          column: 110
        }
      },
      "10": {
        start: {
          line: 35,
          column: 43
        },
        end: {
          line: 35,
          column: 134
        }
      },
      "11": {
        start: {
          line: 37,
          column: 33
        },
        end: {
          line: 37,
          column: 114
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "13": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 53,
          column: 97
        }
      },
      "14": {
        start: {
          line: 53,
          column: 58
        },
        end: {
          line: 53,
          column: 93
        }
      },
      "15": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "16": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 65,
          column: 14
        }
      },
      "17": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 71
        }
      },
      "18": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 71
        }
      },
      "19": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "20": {
        start: {
          line: 73,
          column: 32
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "21": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 94
        }
      },
      "22": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 76,
          column: 64
        }
      },
      "23": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 82
        }
      },
      "24": {
        start: {
          line: 80,
          column: 34
        },
        end: {
          line: 80,
          column: 94
        }
      },
      "25": {
        start: {
          line: 82,
          column: 37
        },
        end: {
          line: 82,
          column: 82
        }
      },
      "26": {
        start: {
          line: 84,
          column: 34
        },
        end: {
          line: 84,
          column: 88
        }
      },
      "27": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "28": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 101,
          column: 97
        }
      },
      "29": {
        start: {
          line: 101,
          column: 58
        },
        end: {
          line: 101,
          column: 93
        }
      },
      "30": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "31": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "32": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "33": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 45
        }
      },
      "34": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 47
        }
      },
      "35": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 127,
          column: 55
        }
      },
      "36": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 111,
          column: 101
        }
      },
      "37": {
        start: {
          line: 111,
          column: 62
        },
        end: {
          line: 111,
          column: 97
        }
      },
      "38": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 112,
          column: 84
        }
      },
      "39": {
        start: {
          line: 112,
          column: 66
        },
        end: {
          line: 112,
          column: 80
        }
      },
      "40": {
        start: {
          line: 113,
          column: 38
        },
        end: {
          line: 113,
          column: 123
        }
      },
      "41": {
        start: {
          line: 113,
          column: 74
        },
        end: {
          line: 113,
          column: 107
        }
      },
      "42": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 114,
          column: 63
        }
      },
      "43": {
        start: {
          line: 115,
          column: 34
        },
        end: {
          line: 115,
          column: 97
        }
      },
      "44": {
        start: {
          line: 115,
          column: 70
        },
        end: {
          line: 115,
          column: 93
        }
      },
      "45": {
        start: {
          line: 116,
          column: 37
        },
        end: {
          line: 116,
          column: 108
        }
      },
      "46": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "47": {
        start: {
          line: 127,
          column: 26
        },
        end: {
          line: 127,
          column: 53
        }
      },
      "48": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "49": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 33
        }
      },
      "50": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "51": {
        start: {
          line: 144,
          column: 65
        },
        end: {
          line: 144,
          column: 82
        }
      },
      "52": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "53": {
        start: {
          line: 146,
          column: 27
        },
        end: {
          line: 146,
          column: 61
        }
      },
      "54": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "55": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 40
        }
      },
      "56": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 44
        }
      },
      "57": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 164,
          column: 55
        }
      },
      "58": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 77
        }
      },
      "59": {
        start: {
          line: 153,
          column: 56
        },
        end: {
          line: 153,
          column: 73
        }
      },
      "60": {
        start: {
          line: 154,
          column: 25
        },
        end: {
          line: 154,
          column: 57
        }
      },
      "61": {
        start: {
          line: 155,
          column: 38
        },
        end: {
          line: 155,
          column: 83
        }
      },
      "62": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 163,
          column: 14
        }
      },
      "63": {
        start: {
          line: 160,
          column: 40
        },
        end: {
          line: 160,
          column: 48
        }
      },
      "64": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 164,
          column: 53
        }
      },
      "65": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 170,
          column: 66
        }
      },
      "66": {
        start: {
          line: 170,
          column: 55
        },
        end: {
          line: 170,
          column: 63
        }
      },
      "67": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 38
        }
      },
      "68": {
        start: {
          line: 173,
          column: 35
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "69": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "70": {
        start: {
          line: 177,
          column: 21
        },
        end: {
          line: 177,
          column: 22
        }
      },
      "71": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "72": {
        start: {
          line: 178,
          column: 25
        },
        end: {
          line: 178,
          column: 30
        }
      },
      "73": {
        start: {
          line: 179,
          column: 32
        },
        end: {
          line: 179,
          column: 42
        }
      },
      "74": {
        start: {
          line: 180,
          column: 32
        },
        end: {
          line: 180,
          column: 42
        }
      },
      "75": {
        start: {
          line: 181,
          column: 36
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "76": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 71
        }
      },
      "77": {
        start: {
          line: 187,
          column: 41
        },
        end: {
          line: 187,
          column: 104
        }
      },
      "78": {
        start: {
          line: 188,
          column: 37
        },
        end: {
          line: 188,
          column: 88
        }
      },
      "79": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 194,
          column: 10
        }
      },
      "80": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "81": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "82": {
        start: {
          line: 202,
          column: 27
        },
        end: {
          line: 202,
          column: 97
        }
      },
      "83": {
        start: {
          line: 202,
          column: 58
        },
        end: {
          line: 202,
          column: 93
        }
      },
      "84": {
        start: {
          line: 203,
          column: 34
        },
        end: {
          line: 203,
          column: 35
        }
      },
      "85": {
        start: {
          line: 204,
          column: 26
        },
        end: {
          line: 204,
          column: 27
        }
      },
      "86": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "87": {
        start: {
          line: 206,
          column: 39
        },
        end: {
          line: 206,
          column: 54
        }
      },
      "88": {
        start: {
          line: 207,
          column: 30
        },
        end: {
          line: 209,
          column: 71
        }
      },
      "89": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 49
        }
      },
      "90": {
        start: {
          line: 209,
          column: 36
        },
        end: {
          line: 209,
          column: 67
        }
      },
      "91": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 212,
          column: 71
        }
      },
      "92": {
        start: {
          line: 211,
          column: 29
        },
        end: {
          line: 211,
          column: 49
        }
      },
      "93": {
        start: {
          line: 212,
          column: 36
        },
        end: {
          line: 212,
          column: 67
        }
      },
      "94": {
        start: {
          line: 213,
          column: 27
        },
        end: {
          line: 213,
          column: 78
        }
      },
      "95": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 66
        }
      },
      "96": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 34
        }
      },
      "97": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 71
        }
      },
      "98": {
        start: {
          line: 223,
          column: 27
        },
        end: {
          line: 223,
          column: 29
        }
      },
      "99": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "100": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "101": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 145
        }
      },
      "102": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "103": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "104": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 149
        }
      },
      "105": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "106": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 197
        }
      },
      "107": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "108": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 159
        }
      },
      "109": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 26
        }
      },
      "110": {
        start: {
          line: 250,
          column: 32
        },
        end: {
          line: 250,
          column: 34
        }
      },
      "111": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "112": {
        start: {
          line: 253,
          column: 37
        },
        end: {
          line: 253,
          column: 88
        }
      },
      "113": {
        start: {
          line: 254,
          column: 30
        },
        end: {
          line: 254,
          column: 75
        }
      },
      "114": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "115": {
        start: {
          line: 256,
          column: 33
        },
        end: {
          line: 257,
          column: 88
        }
      },
      "116": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "117": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "118": {
        start: {
          line: 280,
          column: 43
        },
        end: {
          line: 280,
          column: 106
        }
      },
      "119": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "120": {
        start: {
          line: 282,
          column: 43
        },
        end: {
          line: 282,
          column: 81
        }
      },
      "121": {
        start: {
          line: 283,
          column: 31
        },
        end: {
          line: 283,
          column: 77
        }
      },
      "122": {
        start: {
          line: 283,
          column: 56
        },
        end: {
          line: 283,
          column: 76
        }
      },
      "123": {
        start: {
          line: 284,
          column: 31
        },
        end: {
          line: 284,
          column: 77
        }
      },
      "124": {
        start: {
          line: 284,
          column: 56
        },
        end: {
          line: 284,
          column: 76
        }
      },
      "125": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 303,
          column: 17
        }
      },
      "126": {
        start: {
          line: 286,
          column: 43
        },
        end: {
          line: 286,
          column: 100
        }
      },
      "127": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 302,
          column: 23
        }
      },
      "128": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "129": {
        start: {
          line: 307,
          column: 34
        },
        end: {
          line: 307,
          column: 77
        }
      },
      "130": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 73
        }
      },
      "131": {
        start: {
          line: 315,
          column: 29
        },
        end: {
          line: 315,
          column: 30
        }
      },
      "132": {
        start: {
          line: 316,
          column: 22
        },
        end: {
          line: 316,
          column: 24
        }
      },
      "133": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 322,
          column: 11
        }
      },
      "134": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 321,
          column: 13
        }
      },
      "135": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 45
        }
      },
      "136": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 31
        }
      },
      "137": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 79
        }
      },
      "138": {
        start: {
          line: 329,
          column: 24
        },
        end: {
          line: 329,
          column: 25
        }
      },
      "139": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 52
        }
      },
      "140": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 69
        }
      },
      "141": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 41
        }
      },
      "142": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 60
        }
      },
      "143": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 55
        }
      },
      "144": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 53
        }
      },
      "145": {
        start: {
          line: 345,
          column: 28
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "146": {
        start: {
          line: 351,
          column: 27
        },
        end: {
          line: 351,
          column: 28
        }
      },
      "147": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "148": {
        start: {
          line: 353,
          column: 27
        },
        end: {
          line: 353,
          column: 69
        }
      },
      "149": {
        start: {
          line: 354,
          column: 25
        },
        end: {
          line: 354,
          column: 55
        }
      },
      "150": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 42
        }
      },
      "151": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 28
        }
      },
      "152": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "153": {
        start: {
          line: 364,
          column: 27
        },
        end: {
          line: 364,
          column: 97
        }
      },
      "154": {
        start: {
          line: 364,
          column: 58
        },
        end: {
          line: 364,
          column: 93
        }
      },
      "155": {
        start: {
          line: 365,
          column: 25
        },
        end: {
          line: 365,
          column: 83
        }
      },
      "156": {
        start: {
          line: 365,
          column: 56
        },
        end: {
          line: 365,
          column: 79
        }
      },
      "157": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 58
        }
      },
      "158": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 18
        }
      },
      "159": {
        start: {
          line: 373,
          column: 27
        },
        end: {
          line: 373,
          column: 71
        }
      },
      "160": {
        start: {
          line: 374,
          column: 23
        },
        end: {
          line: 374,
          column: 57
        }
      },
      "161": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 65
        }
      },
      "162": {
        start: {
          line: 378,
          column: 22
        },
        end: {
          line: 378,
          column: 82
        }
      },
      "163": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 27
        }
      },
      "164": {
        start: {
          line: 382,
          column: 29
        },
        end: {
          line: 382,
          column: 71
        }
      },
      "165": {
        start: {
          line: 382,
          column: 56
        },
        end: {
          line: 382,
          column: 64
        }
      },
      "166": {
        start: {
          line: 383,
          column: 31
        },
        end: {
          line: 383,
          column: 47
        }
      },
      "167": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 58
        }
      },
      "168": {
        start: {
          line: 387,
          column: 28
        },
        end: {
          line: 387,
          column: 37
        }
      },
      "169": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 391,
          column: 11
        }
      },
      "170": {
        start: {
          line: 389,
          column: 26
        },
        end: {
          line: 389,
          column: 53
        }
      },
      "171": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 84
        }
      },
      "172": {
        start: {
          line: 392,
          column: 28
        },
        end: {
          line: 392,
          column: 85
        }
      },
      "173": {
        start: {
          line: 392,
          column: 70
        },
        end: {
          line: 392,
          column: 84
        }
      },
      "174": {
        start: {
          line: 393,
          column: 32
        },
        end: {
          line: 393,
          column: 78
        }
      },
      "175": {
        start: {
          line: 393,
          column: 63
        },
        end: {
          line: 393,
          column: 74
        }
      },
      "176": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 31
        }
      },
      "177": {
        start: {
          line: 397,
          column: 27
        },
        end: {
          line: 397,
          column: 97
        }
      },
      "178": {
        start: {
          line: 397,
          column: 58
        },
        end: {
          line: 397,
          column: 93
        }
      },
      "179": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 398,
          column: 46
        }
      },
      "180": {
        start: {
          line: 399,
          column: 27
        },
        end: {
          line: 399,
          column: 30
        }
      },
      "181": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 41
        }
      },
      "182": {
        start: {
          line: 403,
          column: 28
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "183": {
        start: {
          line: 406,
          column: 27
        },
        end: {
          line: 406,
          column: 78
        }
      },
      "184": {
        start: {
          line: 406,
          column: 57
        },
        end: {
          line: 406,
          column: 74
        }
      },
      "185": {
        start: {
          line: 407,
          column: 27
        },
        end: {
          line: 407,
          column: 28
        }
      },
      "186": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 412,
          column: 11
        }
      },
      "187": {
        start: {
          line: 409,
          column: 27
        },
        end: {
          line: 409,
          column: 51
        }
      },
      "188": {
        start: {
          line: 410,
          column: 25
        },
        end: {
          line: 410,
          column: 57
        }
      },
      "189": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 42
        }
      },
      "190": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 28
        }
      },
      "191": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 19
        }
      },
      "192": {
        start: {
          line: 420,
          column: 28
        },
        end: {
          line: 420,
          column: 50
        }
      },
      "193": {
        start: {
          line: 421,
          column: 27
        },
        end: {
          line: 421,
          column: 78
        }
      },
      "194": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 40
        }
      },
      "195": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 55
        }
      },
      "196": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 34
        }
      },
      "197": {
        start: {
          line: 440,
          column: 26
        },
        end: {
          line: 442,
          column: 66
        }
      },
      "198": {
        start: {
          line: 443,
          column: 25
        },
        end: {
          line: 443,
          column: 58
        }
      },
      "199": {
        start: {
          line: 444,
          column: 35
        },
        end: {
          line: 444,
          column: 80
        }
      },
      "200": {
        start: {
          line: 445,
          column: 38
        },
        end: {
          line: 446,
          column: 80
        }
      },
      "201": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 452,
          column: 10
        }
      },
      "202": {
        start: {
          line: 455,
          column: 0
        },
        end: {
          line: 455,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 41
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 44
          },
          end: {
            line: 53,
            column: 45
          }
        },
        loc: {
          start: {
            line: 53,
            column: 58
          },
          end: {
            line: 53,
            column: 93
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 39
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 45
          }
        },
        loc: {
          start: {
            line: 101,
            column: 58
          },
          end: {
            line: 101,
            column: 93
          }
        },
        line: 101
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 104,
            column: 27
          }
        },
        loc: {
          start: {
            line: 104,
            column: 33
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 104
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 110,
            column: 51
          }
        },
        loc: {
          start: {
            line: 110,
            column: 80
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 110
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 48
          },
          end: {
            line: 111,
            column: 49
          }
        },
        loc: {
          start: {
            line: 111,
            column: 62
          },
          end: {
            line: 111,
            column: 97
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 112,
            column: 52
          },
          end: {
            line: 112,
            column: 53
          }
        },
        loc: {
          start: {
            line: 112,
            column: 66
          },
          end: {
            line: 112,
            column: 80
          }
        },
        line: 112
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 60
          },
          end: {
            line: 113,
            column: 61
          }
        },
        loc: {
          start: {
            line: 113,
            column: 74
          },
          end: {
            line: 113,
            column: 107
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 56
          },
          end: {
            line: 115,
            column: 57
          }
        },
        loc: {
          start: {
            line: 115,
            column: 70
          },
          end: {
            line: 115,
            column: 93
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 17
          }
        },
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 53
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 45
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 132
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 144,
            column: 49
          },
          end: {
            line: 144,
            column: 50
          }
        },
        loc: {
          start: {
            line: 144,
            column: 65
          },
          end: {
            line: 144,
            column: 82
          }
        },
        line: 144
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 145,
            column: 31
          },
          end: {
            line: 145,
            column: 32
          }
        },
        loc: {
          start: {
            line: 145,
            column: 40
          },
          end: {
            line: 151,
            column: 9
          }
        },
        line: 145
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 152,
            column: 49
          },
          end: {
            line: 152,
            column: 50
          }
        },
        loc: {
          start: {
            line: 152,
            column: 71
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 152
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 41
          }
        },
        loc: {
          start: {
            line: 153,
            column: 56
          },
          end: {
            line: 153,
            column: 73
          }
        },
        line: 153
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 160,
            column: 35
          },
          end: {
            line: 160,
            column: 36
          }
        },
        loc: {
          start: {
            line: 160,
            column: 40
          },
          end: {
            line: 160,
            column: 48
          }
        },
        line: 160
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 17
          }
        },
        loc: {
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 164,
            column: 53
          }
        },
        line: 164
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 48
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 169
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 170,
            column: 50
          },
          end: {
            line: 170,
            column: 51
          }
        },
        loc: {
          start: {
            line: 170,
            column: 55
          },
          end: {
            line: 170,
            column: 63
          }
        },
        line: 170
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 63
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 199
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 202,
            column: 44
          },
          end: {
            line: 202,
            column: 45
          }
        },
        loc: {
          start: {
            line: 202,
            column: 58
          },
          end: {
            line: 202,
            column: 93
          }
        },
        line: 202
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 205,
            column: 29
          },
          end: {
            line: 205,
            column: 30
          }
        },
        loc: {
          start: {
            line: 205,
            column: 52
          },
          end: {
            line: 216,
            column: 9
          }
        },
        line: 205
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 208,
            column: 25
          }
        },
        loc: {
          start: {
            line: 208,
            column: 29
          },
          end: {
            line: 208,
            column: 49
          }
        },
        line: 208
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 209,
            column: 24
          },
          end: {
            line: 209,
            column: 25
          }
        },
        loc: {
          start: {
            line: 209,
            column: 36
          },
          end: {
            line: 209,
            column: 67
          }
        },
        line: 209
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 211,
            column: 24
          },
          end: {
            line: 211,
            column: 25
          }
        },
        loc: {
          start: {
            line: 211,
            column: 29
          },
          end: {
            line: 211,
            column: 49
          }
        },
        line: 211
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 25
          }
        },
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 212,
            column: 67
          }
        },
        line: 212
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 79
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 222
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 225,
            column: 31
          },
          end: {
            line: 225,
            column: 32
          }
        },
        loc: {
          start: {
            line: 225,
            column: 40
          },
          end: {
            line: 229,
            column: 9
          }
        },
        line: 225
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 231,
            column: 32
          },
          end: {
            line: 231,
            column: 33
          }
        },
        loc: {
          start: {
            line: 231,
            column: 42
          },
          end: {
            line: 235,
            column: 9
          }
        },
        line: 231
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 91
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 249
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 252,
            column: 31
          },
          end: {
            line: 252,
            column: 32
          }
        },
        loc: {
          start: {
            line: 252,
            column: 40
          },
          end: {
            line: 277,
            column: 9
          }
        },
        line: 252
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 283,
            column: 51
          },
          end: {
            line: 283,
            column: 52
          }
        },
        loc: {
          start: {
            line: 283,
            column: 56
          },
          end: {
            line: 283,
            column: 76
          }
        },
        line: 283
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 284,
            column: 51
          },
          end: {
            line: 284,
            column: 52
          }
        },
        loc: {
          start: {
            line: 284,
            column: 56
          },
          end: {
            line: 284,
            column: 76
          }
        },
        line: 284
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 306,
            column: 36
          },
          end: {
            line: 306,
            column: 37
          }
        },
        loc: {
          start: {
            line: 306,
            column: 46
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 306
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 45
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 314
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 317,
            column: 29
          },
          end: {
            line: 317,
            column: 30
          }
        },
        loc: {
          start: {
            line: 317,
            column: 52
          },
          end: {
            line: 322,
            column: 9
          }
        },
        line: 317
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 74
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 328
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        loc: {
          start: {
            line: 343,
            column: 50
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 343
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 352,
            column: 26
          },
          end: {
            line: 352,
            column: 27
          }
        },
        loc: {
          start: {
            line: 352,
            column: 33
          },
          end: {
            line: 356,
            column: 9
          }
        },
        line: 352
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 44
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 359
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 40
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 363
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 364,
            column: 44
          },
          end: {
            line: 364,
            column: 45
          }
        },
        loc: {
          start: {
            line: 364,
            column: 58
          },
          end: {
            line: 364,
            column: 93
          }
        },
        line: 364
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 365,
            column: 42
          },
          end: {
            line: 365,
            column: 43
          }
        },
        loc: {
          start: {
            line: 365,
            column: 56
          },
          end: {
            line: 365,
            column: 79
          }
        },
        line: 365
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 36
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 368
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 60
          },
          end: {
            line: 376,
            column: 5
          }
        },
        line: 372
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 66
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 377
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 45
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 381
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 382,
            column: 51
          },
          end: {
            line: 382,
            column: 52
          }
        },
        loc: {
          start: {
            line: 382,
            column: 56
          },
          end: {
            line: 382,
            column: 64
          }
        },
        line: 382
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 54
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 386
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 388,
            column: 26
          },
          end: {
            line: 388,
            column: 27
          }
        },
        loc: {
          start: {
            line: 388,
            column: 33
          },
          end: {
            line: 391,
            column: 9
          }
        },
        line: 388
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 392,
            column: 65
          },
          end: {
            line: 392,
            column: 66
          }
        },
        loc: {
          start: {
            line: 392,
            column: 70
          },
          end: {
            line: 392,
            column: 84
          }
        },
        line: 392
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 393,
            column: 51
          },
          end: {
            line: 393,
            column: 52
          }
        },
        loc: {
          start: {
            line: 393,
            column: 63
          },
          end: {
            line: 393,
            column: 74
          }
        },
        line: 393
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 66
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 396
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 397,
            column: 44
          },
          end: {
            line: 397,
            column: 45
          }
        },
        loc: {
          start: {
            line: 397,
            column: 58
          },
          end: {
            line: 397,
            column: 93
          }
        },
        line: 397
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 32
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 402
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 406,
            column: 41
          },
          end: {
            line: 406,
            column: 42
          }
        },
        loc: {
          start: {
            line: 406,
            column: 57
          },
          end: {
            line: 406,
            column: 74
          }
        },
        line: 406
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 408,
            column: 23
          },
          end: {
            line: 408,
            column: 24
          }
        },
        loc: {
          start: {
            line: 408,
            column: 32
          },
          end: {
            line: 412,
            column: 9
          }
        },
        line: 408
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        loc: {
          start: {
            line: 415,
            column: 45
          },
          end: {
            line: 418,
            column: 5
          }
        },
        line: 415
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 52
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 419
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 28
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 427
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 16
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 433
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 5
          }
        },
        loc: {
          start: {
            line: 439,
            column: 36
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 439
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 28
          },
          end: {
            line: 74,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 90
          }
        }, {
          start: {
            line: 74,
            column: 93
          },
          end: {
            line: 74,
            column: 94
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "3": {
        loc: {
          start: {
            line: 146,
            column: 27
          },
          end: {
            line: 146,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 27
          },
          end: {
            line: 146,
            column: 50
          }
        }, {
          start: {
            line: 146,
            column: 54
          },
          end: {
            line: 146,
            column: 61
          }
        }],
        line: 146
      },
      "4": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "5": {
        loc: {
          start: {
            line: 181,
            column: 36
          },
          end: {
            line: 183,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 36
          },
          end: {
            line: 181,
            column: 74
          }
        }, {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 58
          }
        }, {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 23
          }
        }],
        line: 181
      },
      "6": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 201,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 201,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "7": {
        loc: {
          start: {
            line: 217,
            column: 15
          },
          end: {
            line: 217,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 33
          },
          end: {
            line: 217,
            column: 66
          }
        }, {
          start: {
            line: 217,
            column: 69
          },
          end: {
            line: 217,
            column: 70
          }
        }],
        line: 217
      },
      "8": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "9": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "10": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "11": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "12": {
        loc: {
          start: {
            line: 253,
            column: 37
          },
          end: {
            line: 253,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 37
          },
          end: {
            line: 253,
            column: 83
          }
        }, {
          start: {
            line: 253,
            column: 87
          },
          end: {
            line: 253,
            column: 88
          }
        }],
        line: 253
      },
      "13": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "14": {
        loc: {
          start: {
            line: 256,
            column: 33
          },
          end: {
            line: 257,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 89
          },
          end: {
            line: 256,
            column: 99
          }
        }, {
          start: {
            line: 257,
            column: 20
          },
          end: {
            line: 257,
            column: 88
          }
        }],
        line: 256
      },
      "15": {
        loc: {
          start: {
            line: 257,
            column: 20
          },
          end: {
            line: 257,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 71
          },
          end: {
            line: 257,
            column: 77
          }
        }, {
          start: {
            line: 257,
            column: 80
          },
          end: {
            line: 257,
            column: 88
          }
        }],
        line: 257
      },
      "16": {
        loc: {
          start: {
            line: 260,
            column: 26
          },
          end: {
            line: 260,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 64
          },
          end: {
            line: 260,
            column: 81
          }
        }, {
          start: {
            line: 260,
            column: 84
          },
          end: {
            line: 260,
            column: 103
          }
        }],
        line: 260
      },
      "17": {
        loc: {
          start: {
            line: 264,
            column: 28
          },
          end: {
            line: 266,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 26
          },
          end: {
            line: 265,
            column: 115
          }
        }, {
          start: {
            line: 266,
            column: 26
          },
          end: {
            line: 266,
            column: 117
          }
        }],
        line: 264
      },
      "18": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "19": {
        loc: {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "20": {
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 303,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 303,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "21": {
        loc: {
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 26
          }
        }, {
          start: {
            line: 285,
            column: 30
          },
          end: {
            line: 285,
            column: 36
          }
        }],
        line: 285
      },
      "22": {
        loc: {
          start: {
            line: 286,
            column: 43
          },
          end: {
            line: 286,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 83
          },
          end: {
            line: 286,
            column: 90
          }
        }, {
          start: {
            line: 286,
            column: 93
          },
          end: {
            line: 286,
            column: 100
          }
        }],
        line: 286
      },
      "23": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 321,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 321,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "24": {
        loc: {
          start: {
            line: 323,
            column: 15
          },
          end: {
            line: 323,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 323,
            column: 25
          },
          end: {
            line: 323,
            column: 71
          }
        }, {
          start: {
            line: 323,
            column: 74
          },
          end: {
            line: 323,
            column: 78
          }
        }],
        line: 323
      },
      "25": {
        loc: {
          start: {
            line: 354,
            column: 25
          },
          end: {
            line: 354,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 25
          },
          end: {
            line: 354,
            column: 48
          }
        }, {
          start: {
            line: 354,
            column: 52
          },
          end: {
            line: 354,
            column: 55
          }
        }],
        line: 354
      },
      "26": {
        loc: {
          start: {
            line: 366,
            column: 15
          },
          end: {
            line: 366,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 366,
            column: 53
          }
        }, {
          start: {
            line: 366,
            column: 56
          },
          end: {
            line: 366,
            column: 57
          }
        }],
        line: 366
      },
      "27": {
        loc: {
          start: {
            line: 374,
            column: 23
          },
          end: {
            line: 374,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 45
          },
          end: {
            line: 374,
            column: 50
          }
        }, {
          start: {
            line: 374,
            column: 53
          },
          end: {
            line: 374,
            column: 57
          }
        }],
        line: 374
      },
      "28": {
        loc: {
          start: {
            line: 390,
            column: 41
          },
          end: {
            line: 390,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 41
          },
          end: {
            line: 390,
            column: 68
          }
        }, {
          start: {
            line: 390,
            column: 72
          },
          end: {
            line: 390,
            column: 73
          }
        }],
        line: 390
      },
      "29": {
        loc: {
          start: {
            line: 410,
            column: 25
          },
          end: {
            line: 410,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 410,
            column: 25
          },
          end: {
            line: 410,
            column: 50
          }
        }, {
          start: {
            line: 410,
            column: 54
          },
          end: {
            line: 410,
            column: 57
          }
        }],
        line: 410
      },
      "30": {
        loc: {
          start: {
            line: 440,
            column: 26
          },
          end: {
            line: 442,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 57
          },
          end: {
            line: 440,
            column: 62
          }
        }, {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 442,
            column: 66
          }
        }],
        line: 440
      },
      "31": {
        loc: {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 442,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 441,
            column: 43
          },
          end: {
            line: 441,
            column: 51
          }
        }, {
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 442,
            column: 66
          }
        }],
        line: 441
      },
      "32": {
        loc: {
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 442,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 442,
            column: 47
          },
          end: {
            line: 442,
            column: 53
          }
        }, {
          start: {
            line: 442,
            column: 56
          },
          end: {
            line: 442,
            column: 66
          }
        }],
        line: 442
      },
      "33": {
        loc: {
          start: {
            line: 445,
            column: 38
          },
          end: {
            line: 446,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 445,
            column: 91
          },
          end: {
            line: 445,
            column: 97
          }
        }, {
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 446,
            column: 80
          }
        }],
        line: 445
      },
      "34": {
        loc: {
          start: {
            line: 446,
            column: 12
          },
          end: {
            line: 446,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 446,
            column: 65
          },
          end: {
            line: 446,
            column: 71
          }
        }, {
          start: {
            line: 446,
            column: 74
          },
          end: {
            line: 446,
            column: 80
          }
        }],
        line: 446
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\portfolio-risk-manager.ts",
      mappings: ";AAAA;;;;;;;;GAQG;;;AA+HH,MAAa,oBAAoB;IACvB,MAAM,CAAsB;IAC5B,gBAAgB,GAA0B,IAAI,GAAG,EAAE,CAAC;IACpD,gBAAgB,GAAwB,IAAI,GAAG,EAAE,CAAC;IAE1D,YAAY,MAA2B;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,oBAAoB,CAAC,SAAqB;QAC9C,8BAA8B;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;QAE1D,4BAA4B;QAC5B,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QAE/D,6BAA6B;QAC7B,MAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;QAEtE,+BAA+B;QAC/B,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC;QAE3E,2BAA2B;QAC3B,MAAM,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,cAAc,EAAE,eAAe,EAAE,iBAAiB,CAAC,CAAC;QAEvG,uCAAuC;QACvC,MAAM,0BAA0B,GAAG,IAAI,CAAC,kCAAkC,CACxE,cAAc,EACd,eAAe,EACf,iBAAiB,CAClB,CAAC;QAEF,+BAA+B;QAC/B,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CACrD,OAAO,EACP,cAAc,CAAC,MAAM,EACrB,iBAAiB,CAClB,CAAC;QAEF,OAAO;YACL,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,OAAO;YACP,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,cAAc;YACd,0BAA0B;YAC1B,gBAAgB;SACjB,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,yBAAyB,CAAC,SAAqB;QACrD,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1F,IAAI,UAAU,KAAK,CAAC,EAAE,CAAC;YACrB,OAAO;gBACL,UAAU,EAAE,CAAC;gBACb,IAAI,EAAE,CAAC;gBACP,UAAU,EAAE,CAAC;gBACb,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,iBAAiB,EAAE,CAAC;gBACpB,oBAAoB,EAAE,CAAC;gBACvB,iBAAiB,EAAE,CAAC;aACrB,CAAC;QACJ,CAAC;QAED,6DAA6D;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAEhE,iCAAiC;QACjC,MAAM,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;QAEhE,yDAAyD;QACzD,MAAM,YAAY,GAAG,IAAI,CAAC;QAC1B,MAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,WAAW,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,YAAY,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvF,6BAA6B;QAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAEzD,2CAA2C;QAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QAE3E,+BAA+B;QAC/B,MAAM,iBAAiB,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QAEvF,kCAAkC;QAClC,MAAM,oBAAoB,GAAG,IAAI,CAAC,6BAA6B,CAAC,SAAS,CAAC,CAAC;QAE3E,+BAA+B;QAC/B,MAAM,iBAAiB,GAAG,IAAI,CAAC,0BAA0B,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAEjF,OAAO;YACL,UAAU;YACV,IAAI;YACJ,UAAU;YACV,WAAW;YACX,WAAW;YACX,WAAW;YACX,iBAAiB;YACjB,oBAAoB;YACpB,iBAAiB;SAClB,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,uBAAuB,CAAC,SAAqB;QACnD,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1F,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAsB,CAAC;QAE/C,2BAA2B;QAC3B,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC9B,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC/B,CAAC;YACD,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE,EAAE;YACrE,MAAM,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1F,MAAM,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACzE,MAAM,iBAAiB,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC;YAChH,MAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YACpD,MAAM,aAAa,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YACtF,MAAM,gBAAgB,GAAG,IAAI,CAAC,8BAA8B,CAAC,MAAM,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;YAEjG,OAAO;gBACL,MAAM;gBACN,KAAK;gBACL,UAAU,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG;gBACtC,aAAa,EAAE,cAAc,CAAC,MAAM;gBACpC,iBAAiB;gBACjB,YAAY;gBACZ,aAAa;gBACb,gBAAgB;aACjB,CAAC;QACJ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACK,wBAAwB,CAAC,cAA+B;QAC9D,wBAAwB;QACxB,MAAM,SAAS,GAA2B;YACxC,KAAK,EAAE,cAAc;YACrB,KAAK,EAAE,iBAAiB;YACxB,KAAK,EAAE,iBAAiB;YACxB,KAAK,EAAE,kBAAkB;YACzB,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,MAAM,OAAO,GAAG,IAAI,GAAG,EAA2B,CAAC;QACnD,MAAM,UAAU,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAE/E,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC7B,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC1B,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,EAAE;YAC5D,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAClE,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAC9C,MAAM,iBAAiB,GAAG,IAAI,CAAC,gCAAgC,CAAC,MAAM,CAAC,CAAC;YAExE,OAAO;gBACL,MAAM;gBACN,KAAK;gBACL,UAAU,EAAE,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,GAAG;gBACtC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;gBACjC,IAAI;gBACJ,iBAAiB;aAClB,CAAC;QACJ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,0BAA0B,CAAC,SAAqB;QAC5D,MAAM,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,YAAY,GAAG,IAAI,GAAG,EAAkB,CAAC;QAE/C,wDAAwD;QACxD,MAAM,kBAAkB,GAA2C;YACjE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;YAClC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;SACnC,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5C,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,WAAW,GAAG,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;oBACxC,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;oBACtC,GAAG,CAAC,CAAC,0CAA0C;gBAEjE,YAAY,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;QAED,MAAM,wBAAwB,GAAG,IAAI,CAAC,iCAAiC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACjG,MAAM,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,wBAAwB,GAAG,GAAG,CAAC,CAAC,CAAC;QAEjF,OAAO;YACL,YAAY;YACZ,wBAAwB;YACxB,oBAAoB;YACpB,eAAe,EAAE,EAAE;SACpB,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,iCAAiC,CACvC,YAAiC,EACjC,SAAqB;QAErB,IAAI,YAAY,CAAC,IAAI,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC;QAEtC,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1F,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;YACzC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,SAAS,GAAG,SAAS;iBACxB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC;iBACjC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,MAAM,SAAS,GAAG,SAAS;iBACxB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC;iBACjC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1D,MAAM,MAAM,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC;YACnE,mBAAmB,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;YACtD,WAAW,IAAI,MAAM,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,mBAAmB,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;IAED;;OAEG;IACK,sBAAsB,CAC5B,cAA+B,EAC/B,eAAiC,EACjC,iBAAoC;QAEpC,MAAM,UAAU,GAAa,EAAE,CAAC;QAEhC,qCAAqC;QACrC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC7B,IAAI,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBAC1D,UAAU,CAAC,IAAI,CACb,GAAG,KAAK,CAAC,MAAM,aAAa,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,CAChH,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,+BAA+B;QAC/B,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;gBACtD,UAAU,CAAC,IAAI,CACb,GAAG,MAAM,CAAC,MAAM,oBAAoB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,CACpH,CAAC;YACJ,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,8BAA8B;QAC9B,IAAI,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC;YACrF,UAAU,CAAC,IAAI,CACb,8BAA8B,CAAC,iBAAiB,CAAC,wBAAwB,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CACxK,CAAC;QACJ,CAAC;QAED,8BAA8B;QAC9B,IAAI,iBAAiB,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC;YACjF,UAAU,CAAC,IAAI,CACb,yBAAyB,iBAAiB,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAClI,CAAC;QACJ,CAAC;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;OAEG;IACK,kCAAkC,CACxC,cAA+B,EAC/B,eAAiC,EACjC,iBAAoC;QAEpC,MAAM,eAAe,GAAgC,EAAE,CAAC;QAExD,yCAAyC;QACzC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC7B,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7E,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC,CAAC;YAEhE,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;gBACjD,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;oBACrE,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAErF,eAAe,CAAC,IAAI,CAAC;oBACnB,EAAE,EAAE,aAAa,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;oBAC7C,IAAI,EAAE,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,mBAAmB;oBACnF,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,iBAAiB,EAAE,KAAK,CAAC,UAAU;oBACnC,gBAAgB;oBAChB,MAAM,EAAE,KAAK,CAAC,UAAU,GAAG,gBAAgB;wBACzC,CAAC,CAAC,UAAU,KAAK,CAAC,MAAM,gBAAgB,CAAC,KAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;wBAC3F,CAAC,CAAC,YAAY,KAAK,CAAC,MAAM,gBAAgB,CAAC,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;oBAC/F,aAAa,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,gBAAgB,CAAC;oBACnE,QAAQ;oBACR,SAAS,EAAE,sBAAsB,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,0BAA0B,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;oBACpH,eAAe,EAAE;wBACf,aAAa,EAAE,SAAS,GAAG,CAAC,GAAG,EAAE,2BAA2B;wBAC5D,0BAA0B,EAAE,SAAS,GAAG,IAAI;wBAC5C,oBAAoB,EAAE,KAAK,CAAC,gBAAgB,GAAG,GAAG;qBACnD;iBACF,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,uCAAuC;QACvC,IAAI,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC;YACrF,MAAM,sBAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;YAC/F,IAAI,sBAAsB,EAAE,CAAC;gBAC3B,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClE,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC;gBAC9D,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC;gBAE9D,IAAI,MAAM,IAAI,MAAM,EAAE,CAAC;oBACrB,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;oBAEjF,eAAe,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,aAAa,cAAc,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;wBAC/C,IAAI,EAAE,WAAW;wBACjB,MAAM,EAAE,cAAc;wBACtB,iBAAiB,EAAE,CAAC,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;wBAC1D,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG;wBACtE,MAAM,EAAE,UAAU,cAAc,6BAA6B;wBAC7D,aAAa,EAAE,sBAAsB,CAAC,WAAW,GAAG,EAAE;wBACtD,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE,oBAAoB,CAAC,sBAAsB,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa,OAAO,QAAQ,OAAO,EAAE;wBACzH,eAAe,EAAE;4BACf,aAAa,EAAE,CAAC,CAAC;4BACjB,0BAA0B,EAAE,EAAE;4BAC9B,oBAAoB,EAAE,sBAAsB,CAAC,WAAW,GAAG,EAAE;yBAC9D;qBACF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;QAED,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,aAAa,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;YAClE,OAAO,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,0BAA0B,CAAC,YAAiC;QAClE,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,OAAO,GAAG,EAAE,CAAC;QAEjB,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE;YACzC,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC;gBACrD,cAAc,GAAG,WAAW,CAAC;gBAC7B,OAAO,GAAG,IAAI,CAAC;YACjB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IACzE,CAAC;IAED;;OAEG;IACK,yBAAyB,CAC/B,OAAyB,EACzB,cAAsB,EACtB,iBAAoC;QAEpC,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,+BAA+B;QAC/B,SAAS,IAAI,OAAO,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAE5C,wBAAwB;QACxB,SAAS,IAAI,iBAAiB,CAAC,wBAAwB,GAAG,EAAE,CAAC;QAE7D,uBAAuB;QACvB,SAAS,IAAI,cAAc,GAAG,EAAE,CAAC;QAEjC,uBAAuB;QACvB,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;QAEpD,qBAAqB;QACrB,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,kCAAkC;IAC1B,sBAAsB,CAAC,SAAqB,EAAE,UAAkB;QACtE,wEAAwE;QACxE,MAAM,WAAW,GAA2B;YAC1C,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,GAAG;SACX,CAAC;QAEF,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,MAAM,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;YAC1D,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;YAC5C,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,4BAA4B,CAAC,SAAqB;QACxD,oCAAoC;QACpC,OAAO,GAAG,CAAC,CAAC,6CAA6C;IAC3D,CAAC;IAEO,wBAAwB,CAAC,SAAqB;QACpD,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1F,MAAM,QAAQ,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAC5E,OAAO,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,oBAAoB,CAAC,SAAqB;QAChD,sCAAsC;QACtC,OAAO,EAAE,CAAC,CAAC,mBAAmB;IAChC,CAAC;IAEO,oBAAoB,CAAC,SAAqB,EAAE,UAAkB,EAAE,UAAkB;QACxF,MAAM,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;QAChE,MAAM,MAAM,GAAG,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,wBAAwB;QAC3E,OAAO,UAAU,GAAG,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY;IACxE,CAAC;IAEO,0BAA0B,CAAC,SAAqB,EAAE,UAAkB,EAAE,UAAkB;QAC9F,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAC3E,OAAO,KAAK,GAAG,GAAG,CAAC,CAAC,mDAAmD;IACzE,CAAC;IAEO,6BAA6B,CAAC,SAAqB;QACzD,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;QAChE,MAAM,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC;QACxC,OAAO,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;IACpD,CAAC;IAEO,0BAA0B,CAAC,SAAqB,EAAE,UAAkB;QAC1E,MAAM,WAAW,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC9C,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACtB,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC;YAC1C,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;QAC9E,MAAM,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvE,OAAO,eAAe,CAAC,CAAC,2DAA2D;IACrF,CAAC;IAEO,8BAA8B,CAAC,MAAc,EAAE,SAAqB,EAAE,UAAkB;QAC9F,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1F,MAAM,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC;QACvC,MAAM,UAAU,GAAG,GAAG,CAAC,CAAC,8BAA8B;QAEtD,OAAO,MAAM,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC,kCAAkC;IACtE,CAAC;IAEO,mBAAmB,CAAC,MAAuB;QACjD,MAAM,WAAW,GAA2B;YAC1C,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG;SAC/C,CAAC;QAEF,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvE,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrB,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;YACxC,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;YAC9C,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,gCAAgC,CAAC,MAAuB;QAC9D,2DAA2D;QAC3D,OAAO,GAAG,CAAC,CAAC,sCAAsC;IACpD,CAAC;IAEO,sBAAsB,CAAC,KAAoB,EAAE,gBAAwB;QAC3E,MAAM,WAAW,GAAG,KAAK,CAAC,gBAAgB,CAAC;QAC3C,MAAM,UAAU,GAAG,WAAW,GAAG,CAAC,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;QACvE,OAAO,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,SAAuC;QAClD,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,SAAS,EAAE,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,SAAS;QACP,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,uBAAuB,CAAC,MAA2B;QAMjD,MAAM,SAAS,GAAG,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACzC,MAAM,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;QAEpE,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,kBAAkB,GAAG,MAAM,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzE,MAAM,qBAAqB,GAAG,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC9D,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;QAElG,OAAO;YACL,SAAS;YACT,QAAQ;YACR,kBAAkB;YAClB,qBAAqB;SACtB,CAAC;IACJ,CAAC;CACF;AAtjBD,oDAsjBC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\portfolio-risk-manager.ts"],
      sourcesContent: ["/**\r\n * Portfolio Risk Manager\r\n * \r\n * Implements sophisticated portfolio-level risk management with:\r\n * - Correlation analysis between positions\r\n * - Portfolio-level risk exposure monitoring\r\n * - Diversification requirements and enforcement\r\n * - Portfolio rebalancing recommendations\r\n */\r\n\r\nimport { \r\n  Position, \r\n  CorrelationMatrix, \r\n  PositionAdjustment, \r\n  RiskMetrics \r\n} from './types.js';\r\n\r\nexport interface PortfolioRiskConfig {\r\n  /** Maximum portfolio correlation threshold */\r\n  maxPortfolioCorrelation: number;\r\n  /** Maximum single asset exposure (% of portfolio) */\r\n  maxSingleAssetExposure: number;\r\n  /** Maximum sector exposure (% of portfolio) */\r\n  maxSectorExposure: number;\r\n  /** Minimum diversification score required */\r\n  minDiversificationScore: number;\r\n  /** Maximum portfolio beta */\r\n  maxPortfolioBeta: number;\r\n  /** Rebalancing threshold (% deviation) */\r\n  rebalancingThreshold: number;\r\n  /** Target portfolio allocation */\r\n  targetAllocation: Map<string, number>;\r\n}\r\n\r\nexport interface PortfolioMetrics {\r\n  /** Total portfolio value */\r\n  totalValue: number;\r\n  /** Portfolio beta */\r\n  beta: number;\r\n  /** Portfolio volatility */\r\n  volatility: number;\r\n  /** Sharpe ratio */\r\n  sharpeRatio: number;\r\n  /** Maximum drawdown */\r\n  maxDrawdown: number;\r\n  /** Value at Risk (95% confidence) */\r\n  valueAtRisk: number;\r\n  /** Expected shortfall */\r\n  expectedShortfall: number;\r\n  /** Diversification ratio */\r\n  diversificationRatio: number;\r\n  /** Concentration risk score */\r\n  concentrationRisk: number;\r\n}\r\n\r\nexport interface AssetExposure {\r\n  /** Asset symbol */\r\n  symbol: string;\r\n  /** Position value */\r\n  value: number;\r\n  /** Percentage of portfolio */\r\n  percentage: number;\r\n  /** Number of positions */\r\n  positionCount: number;\r\n  /** Average entry price */\r\n  averageEntryPrice: number;\r\n  /** Current price */\r\n  currentPrice: number;\r\n  /** Unrealized P&L */\r\n  unrealizedPnL: number;\r\n  /** Risk contribution to portfolio */\r\n  riskContribution: number;\r\n}\r\n\r\nexport interface SectorExposure {\r\n  /** Sector name */\r\n  sector: string;\r\n  /** Total exposure value */\r\n  value: number;\r\n  /** Percentage of portfolio */\r\n  percentage: number;\r\n  /** Assets in sector */\r\n  assets: string[];\r\n  /** Sector beta */\r\n  beta: number;\r\n  /** Sector correlation with market */\r\n  marketCorrelation: number;\r\n}\r\n\r\nexport interface RebalancingRecommendation {\r\n  /** Recommendation ID */\r\n  id: string;\r\n  /** Recommendation type */\r\n  type: 'REDUCE_EXPOSURE' | 'INCREASE_EXPOSURE' | 'CLOSE_POSITION' | 'DIVERSIFY';\r\n  /** Asset symbol */\r\n  symbol: string;\r\n  /** Current allocation percentage */\r\n  currentAllocation: number;\r\n  /** Target allocation percentage */\r\n  targetAllocation: number;\r\n  /** Recommended action */\r\n  action: string;\r\n  /** Expected risk reduction */\r\n  riskReduction: number;\r\n  /** Priority level */\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Reasoning */\r\n  reasoning: string;\r\n  /** Estimated impact */\r\n  estimatedImpact: {\r\n    portfolioRisk: number;\r\n    diversificationImprovement: number;\r\n    correlationReduction: number;\r\n  };\r\n}\r\n\r\nexport interface PortfolioRiskReport {\r\n  /** Report timestamp */\r\n  timestamp: Date;\r\n  /** Portfolio metrics */\r\n  metrics: PortfolioMetrics;\r\n  /** Asset exposures */\r\n  assetExposures: AssetExposure[];\r\n  /** Sector exposures */\r\n  sectorExposures: SectorExposure[];\r\n  /** Correlation matrix */\r\n  correlationMatrix: CorrelationMatrix;\r\n  /** Risk violations */\r\n  riskViolations: string[];\r\n  /** Rebalancing recommendations */\r\n  rebalancingRecommendations: RebalancingRecommendation[];\r\n  /** Overall risk score (0-100) */\r\n  overallRiskScore: number;\r\n}\r\n\r\nexport class PortfolioRiskManager {\r\n  private config: PortfolioRiskConfig;\r\n  private historicalPrices: Map<string, number[]> = new Map();\r\n  private correlationCache: Map<string, number> = new Map();\r\n\r\n  constructor(config: PortfolioRiskConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Analyze portfolio risk and generate comprehensive report\r\n   */\r\n  async analyzePortfolioRisk(positions: Position[]): Promise<PortfolioRiskReport> {\r\n    // Calculate portfolio metrics\r\n    const metrics = this.calculatePortfolioMetrics(positions);\r\n    \r\n    // Calculate asset exposures\r\n    const assetExposures = this.calculateAssetExposures(positions);\r\n    \r\n    // Calculate sector exposures\r\n    const sectorExposures = this.calculateSectorExposures(assetExposures);\r\n    \r\n    // Calculate correlation matrix\r\n    const correlationMatrix = await this.calculateCorrelationMatrix(positions);\r\n    \r\n    // Identify risk violations\r\n    const riskViolations = this.identifyRiskViolations(assetExposures, sectorExposures, correlationMatrix);\r\n    \r\n    // Generate rebalancing recommendations\r\n    const rebalancingRecommendations = this.generateRebalancingRecommendations(\r\n      assetExposures, \r\n      sectorExposures, \r\n      correlationMatrix\r\n    );\r\n    \r\n    // Calculate overall risk score\r\n    const overallRiskScore = this.calculateOverallRiskScore(\r\n      metrics, \r\n      riskViolations.length, \r\n      correlationMatrix\r\n    );\r\n\r\n    return {\r\n      timestamp: new Date(),\r\n      metrics,\r\n      assetExposures,\r\n      sectorExposures,\r\n      correlationMatrix,\r\n      riskViolations,\r\n      rebalancingRecommendations,\r\n      overallRiskScore\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate comprehensive portfolio metrics\r\n   */\r\n  private calculatePortfolioMetrics(positions: Position[]): PortfolioMetrics {\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    \r\n    if (totalValue === 0) {\r\n      return {\r\n        totalValue: 0,\r\n        beta: 0,\r\n        volatility: 0,\r\n        sharpeRatio: 0,\r\n        maxDrawdown: 0,\r\n        valueAtRisk: 0,\r\n        expectedShortfall: 0,\r\n        diversificationRatio: 0,\r\n        concentrationRisk: 0\r\n      };\r\n    }\r\n\r\n    // Calculate portfolio beta (weighted average of asset betas)\r\n    const beta = this.calculatePortfolioBeta(positions, totalValue);\r\n    \r\n    // Calculate portfolio volatility\r\n    const volatility = this.calculatePortfolioVolatility(positions);\r\n    \r\n    // Calculate Sharpe ratio (assuming risk-free rate of 2%)\r\n    const riskFreeRate = 0.02;\r\n    const portfolioReturn = this.calculatePortfolioReturn(positions);\r\n    const sharpeRatio = volatility > 0 ? (portfolioReturn - riskFreeRate) / volatility : 0;\r\n    \r\n    // Calculate maximum drawdown\r\n    const maxDrawdown = this.calculateMaxDrawdown(positions);\r\n    \r\n    // Calculate Value at Risk (95% confidence)\r\n    const valueAtRisk = this.calculateValueAtRisk(positions, totalValue, 0.95);\r\n    \r\n    // Calculate Expected Shortfall\r\n    const expectedShortfall = this.calculateExpectedShortfall(positions, totalValue, 0.95);\r\n    \r\n    // Calculate diversification ratio\r\n    const diversificationRatio = this.calculateDiversificationRatio(positions);\r\n    \r\n    // Calculate concentration risk\r\n    const concentrationRisk = this.calculateConcentrationRisk(positions, totalValue);\r\n\r\n    return {\r\n      totalValue,\r\n      beta,\r\n      volatility,\r\n      sharpeRatio,\r\n      maxDrawdown,\r\n      valueAtRisk,\r\n      expectedShortfall,\r\n      diversificationRatio,\r\n      concentrationRisk\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate asset exposures\r\n   */\r\n  private calculateAssetExposures(positions: Position[]): AssetExposure[] {\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    const assetMap = new Map<string, Position[]>();\r\n\r\n    // Group positions by asset\r\n    positions.forEach(pos => {\r\n      if (!assetMap.has(pos.symbol)) {\r\n        assetMap.set(pos.symbol, []);\r\n      }\r\n      assetMap.get(pos.symbol)!.push(pos);\r\n    });\r\n\r\n    return Array.from(assetMap.entries()).map(([symbol, assetPositions]) => {\r\n      const value = assetPositions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n      const totalSize = assetPositions.reduce((sum, pos) => sum + pos.size, 0);\r\n      const averageEntryPrice = assetPositions.reduce((sum, pos) => sum + (pos.entryPrice * pos.size), 0) / totalSize;\r\n      const currentPrice = assetPositions[0].currentPrice;\r\n      const unrealizedPnL = assetPositions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\r\n      const riskContribution = this.calculateAssetRiskContribution(symbol, assetPositions, totalValue);\r\n\r\n      return {\r\n        symbol,\r\n        value,\r\n        percentage: (value / totalValue) * 100,\r\n        positionCount: assetPositions.length,\r\n        averageEntryPrice,\r\n        currentPrice,\r\n        unrealizedPnL,\r\n        riskContribution\r\n      };\r\n    }).sort((a, b) => b.percentage - a.percentage);\r\n  }\r\n\r\n  /**\r\n   * Calculate sector exposures\r\n   */\r\n  private calculateSectorExposures(assetExposures: AssetExposure[]): SectorExposure[] {\r\n    // Define crypto sectors\r\n    const sectorMap: Record<string, string> = {\r\n      'BTC': 'Digital Gold',\r\n      'ETH': 'Smart Contracts',\r\n      'ADA': 'Smart Contracts',\r\n      'DOT': 'Interoperability',\r\n      'LINK': 'Oracle',\r\n      'UNI': 'DeFi',\r\n      'AAVE': 'DeFi'\r\n    };\r\n\r\n    const sectors = new Map<string, AssetExposure[]>();\r\n    const totalValue = assetExposures.reduce((sum, asset) => sum + asset.value, 0);\r\n\r\n    assetExposures.forEach(asset => {\r\n      const sector = sectorMap[asset.symbol] || 'Other';\r\n      if (!sectors.has(sector)) {\r\n        sectors.set(sector, []);\r\n      }\r\n      sectors.get(sector)!.push(asset);\r\n    });\r\n\r\n    return Array.from(sectors.entries()).map(([sector, assets]) => {\r\n      const value = assets.reduce((sum, asset) => sum + asset.value, 0);\r\n      const beta = this.calculateSectorBeta(assets);\r\n      const marketCorrelation = this.calculateSectorMarketCorrelation(assets);\r\n\r\n      return {\r\n        sector,\r\n        value,\r\n        percentage: (value / totalValue) * 100,\r\n        assets: assets.map(a => a.symbol),\r\n        beta,\r\n        marketCorrelation\r\n      };\r\n    }).sort((a, b) => b.percentage - a.percentage);\r\n  }\r\n\r\n  /**\r\n   * Calculate correlation matrix between assets\r\n   */\r\n  private async calculateCorrelationMatrix(positions: Position[]): Promise<CorrelationMatrix> {\r\n    const symbols = [...new Set(positions.map(p => p.symbol))];\r\n    const correlations = new Map<string, number>();\r\n\r\n    // Predefined correlation coefficients for crypto assets\r\n    const cryptoCorrelations: Record<string, Record<string, number>> = {\r\n      'BTC': { 'ETH': 0.75, 'BTC': 1.0 },\r\n      'ETH': { 'BTC': 0.75, 'ETH': 1.0 }\r\n    };\r\n\r\n    for (let i = 0; i < symbols.length; i++) {\r\n      for (let j = i + 1; j < symbols.length; j++) {\r\n        const symbol1 = symbols[i];\r\n        const symbol2 = symbols[j];\r\n        const correlation = cryptoCorrelations[symbol1]?.[symbol2] || \r\n                          cryptoCorrelations[symbol2]?.[symbol1] || \r\n                          0.3; // Default moderate correlation for crypto\r\n\r\n        correlations.set(`${symbol1}-${symbol2}`, correlation);\r\n      }\r\n    }\r\n\r\n    const portfolioCorrelationRisk = this.calculatePortfolioCorrelationRisk(correlations, positions);\r\n    const diversificationScore = Math.max(0, 100 - (portfolioCorrelationRisk * 100));\r\n\r\n    return {\r\n      correlations,\r\n      portfolioCorrelationRisk,\r\n      diversificationScore,\r\n      recommendations: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate portfolio correlation risk\r\n   */\r\n  private calculatePortfolioCorrelationRisk(\r\n    correlations: Map<string, number>, \r\n    positions: Position[]\r\n  ): number {\r\n    if (correlations.size === 0) return 0;\r\n\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    let weightedCorrelation = 0;\r\n    let totalWeight = 0;\r\n\r\n    correlations.forEach((correlation, pair) => {\r\n      const [symbol1, symbol2] = pair.split('-');\r\n      const pos1Value = positions\r\n        .filter(p => p.symbol === symbol1)\r\n        .reduce((sum, p) => sum + (p.size * p.currentPrice), 0);\r\n      const pos2Value = positions\r\n        .filter(p => p.symbol === symbol2)\r\n        .reduce((sum, p) => sum + (p.size * p.currentPrice), 0);\r\n\r\n      const weight = (pos1Value * pos2Value) / (totalValue * totalValue);\r\n      weightedCorrelation += Math.abs(correlation) * weight;\r\n      totalWeight += weight;\r\n    });\r\n\r\n    return totalWeight > 0 ? weightedCorrelation / totalWeight : 0;\r\n  }\r\n\r\n  /**\r\n   * Identify risk violations\r\n   */\r\n  private identifyRiskViolations(\r\n    assetExposures: AssetExposure[],\r\n    sectorExposures: SectorExposure[],\r\n    correlationMatrix: CorrelationMatrix\r\n  ): string[] {\r\n    const violations: string[] = [];\r\n\r\n    // Check single asset exposure limits\r\n    assetExposures.forEach(asset => {\r\n      if (asset.percentage > this.config.maxSingleAssetExposure) {\r\n        violations.push(\r\n          `${asset.symbol} exposure ${asset.percentage.toFixed(1)}% exceeds limit ${this.config.maxSingleAssetExposure}%`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Check sector exposure limits\r\n    sectorExposures.forEach(sector => {\r\n      if (sector.percentage > this.config.maxSectorExposure) {\r\n        violations.push(\r\n          `${sector.sector} sector exposure ${sector.percentage.toFixed(1)}% exceeds limit ${this.config.maxSectorExposure}%`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Check portfolio correlation\r\n    if (correlationMatrix.portfolioCorrelationRisk > this.config.maxPortfolioCorrelation) {\r\n      violations.push(\r\n        `Portfolio correlation risk ${(correlationMatrix.portfolioCorrelationRisk * 100).toFixed(1)}% exceeds limit ${(this.config.maxPortfolioCorrelation * 100).toFixed(1)}%`\r\n      );\r\n    }\r\n\r\n    // Check diversification score\r\n    if (correlationMatrix.diversificationScore < this.config.minDiversificationScore) {\r\n      violations.push(\r\n        `Diversification score ${correlationMatrix.diversificationScore.toFixed(1)} below minimum ${this.config.minDiversificationScore}`\r\n      );\r\n    }\r\n\r\n    return violations;\r\n  }\r\n\r\n  /**\r\n   * Generate rebalancing recommendations\r\n   */\r\n  private generateRebalancingRecommendations(\r\n    assetExposures: AssetExposure[],\r\n    sectorExposures: SectorExposure[],\r\n    correlationMatrix: CorrelationMatrix\r\n  ): RebalancingRecommendation[] {\r\n    const recommendations: RebalancingRecommendation[] = [];\r\n\r\n    // Recommendations for overexposed assets\r\n    assetExposures.forEach(asset => {\r\n      const targetAllocation = this.config.targetAllocation.get(asset.symbol) || 0;\r\n      const deviation = Math.abs(asset.percentage - targetAllocation);\r\n\r\n      if (deviation > this.config.rebalancingThreshold) {\r\n        const priority = asset.percentage > this.config.maxSingleAssetExposure ? 'CRITICAL' : \r\n                        deviation > this.config.rebalancingThreshold * 2 ? 'HIGH' : 'MEDIUM';\r\n\r\n        recommendations.push({\r\n          id: `rebalance-${asset.symbol}-${Date.now()}`,\r\n          type: asset.percentage > targetAllocation ? 'REDUCE_EXPOSURE' : 'INCREASE_EXPOSURE',\r\n          symbol: asset.symbol,\r\n          currentAllocation: asset.percentage,\r\n          targetAllocation,\r\n          action: asset.percentage > targetAllocation \r\n            ? `Reduce ${asset.symbol} position by ${(asset.percentage - targetAllocation).toFixed(1)}%`\r\n            : `Increase ${asset.symbol} position by ${(targetAllocation - asset.percentage).toFixed(1)}%`,\r\n          riskReduction: this.calculateRiskReduction(asset, targetAllocation),\r\n          priority,\r\n          reasoning: `Current allocation ${asset.percentage.toFixed(1)}% deviates from target ${targetAllocation.toFixed(1)}%`,\r\n          estimatedImpact: {\r\n            portfolioRisk: deviation * -0.1, // Estimated risk reduction\r\n            diversificationImprovement: deviation * 0.05,\r\n            correlationReduction: asset.riskContribution * 0.1\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Recommendations for high correlation\r\n    if (correlationMatrix.portfolioCorrelationRisk > this.config.maxPortfolioCorrelation) {\r\n      const highestCorrelationPair = this.findHighestCorrelationPair(correlationMatrix.correlations);\r\n      if (highestCorrelationPair) {\r\n        const [symbol1, symbol2] = highestCorrelationPair.pair.split('-');\r\n        const asset1 = assetExposures.find(a => a.symbol === symbol1);\r\n        const asset2 = assetExposures.find(a => a.symbol === symbol2);\r\n\r\n        if (asset1 && asset2) {\r\n          const symbolToReduce = asset1.percentage > asset2.percentage ? symbol1 : symbol2;\r\n          \r\n          recommendations.push({\r\n            id: `diversify-${symbolToReduce}-${Date.now()}`,\r\n            type: 'DIVERSIFY',\r\n            symbol: symbolToReduce,\r\n            currentAllocation: (asset1.percentage + asset2.percentage),\r\n            targetAllocation: Math.max(asset1.percentage, asset2.percentage) * 0.7,\r\n            action: `Reduce ${symbolToReduce} to improve diversification`,\r\n            riskReduction: highestCorrelationPair.correlation * 10,\r\n            priority: 'HIGH',\r\n            reasoning: `High correlation ${(highestCorrelationPair.correlation * 100).toFixed(0)}% between ${symbol1} and ${symbol2}`,\r\n            estimatedImpact: {\r\n              portfolioRisk: -5,\r\n              diversificationImprovement: 10,\r\n              correlationReduction: highestCorrelationPair.correlation * 20\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return recommendations.sort((a, b) => {\r\n      const priorityOrder = { CRITICAL: 4, HIGH: 3, MEDIUM: 2, LOW: 1 };\r\n      return priorityOrder[b.priority] - priorityOrder[a.priority];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Find highest correlation pair\r\n   */\r\n  private findHighestCorrelationPair(correlations: Map<string, number>): { pair: string; correlation: number } | null {\r\n    let maxCorrelation = 0;\r\n    let maxPair = '';\r\n\r\n    correlations.forEach((correlation, pair) => {\r\n      if (Math.abs(correlation) > Math.abs(maxCorrelation)) {\r\n        maxCorrelation = correlation;\r\n        maxPair = pair;\r\n      }\r\n    });\r\n\r\n    return maxPair ? { pair: maxPair, correlation: maxCorrelation } : null;\r\n  }\r\n\r\n  /**\r\n   * Calculate overall risk score\r\n   */\r\n  private calculateOverallRiskScore(\r\n    metrics: PortfolioMetrics,\r\n    violationCount: number,\r\n    correlationMatrix: CorrelationMatrix\r\n  ): number {\r\n    let riskScore = 0;\r\n\r\n    // Base risk from concentration\r\n    riskScore += metrics.concentrationRisk * 30;\r\n\r\n    // Risk from correlation\r\n    riskScore += correlationMatrix.portfolioCorrelationRisk * 25;\r\n\r\n    // Risk from violations\r\n    riskScore += violationCount * 10;\r\n\r\n    // Risk from volatility\r\n    riskScore += Math.min(metrics.volatility * 100, 20);\r\n\r\n    // Risk from drawdown\r\n    riskScore += Math.min(metrics.maxDrawdown, 15);\r\n\r\n    return Math.min(100, Math.max(0, riskScore));\r\n  }\r\n\r\n  // Helper methods for calculations\r\n  private calculatePortfolioBeta(positions: Position[], totalValue: number): number {\r\n    // Simplified beta calculation - in production would use historical data\r\n    const cryptoBetas: Record<string, number> = {\r\n      'BTC': 1.0,\r\n      'ETH': 1.2,\r\n      'ADA': 1.5,\r\n      'DOT': 1.3\r\n    };\r\n\r\n    let weightedBeta = 0;\r\n    positions.forEach(pos => {\r\n      const weight = (pos.size * pos.currentPrice) / totalValue;\r\n      const beta = cryptoBetas[pos.symbol] || 1.0;\r\n      weightedBeta += weight * beta;\r\n    });\r\n\r\n    return weightedBeta;\r\n  }\r\n\r\n  private calculatePortfolioVolatility(positions: Position[]): number {\r\n    // Simplified volatility calculation\r\n    return 0.4; // 40% annual volatility for crypto portfolio\r\n  }\r\n\r\n  private calculatePortfolioReturn(positions: Position[]): number {\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    const totalPnL = positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\r\n    return totalValue > 0 ? totalPnL / totalValue : 0;\r\n  }\r\n\r\n  private calculateMaxDrawdown(positions: Position[]): number {\r\n    // Simplified max drawdown calculation\r\n    return 15; // 15% max drawdown\r\n  }\r\n\r\n  private calculateValueAtRisk(positions: Position[], totalValue: number, confidence: number): number {\r\n    const volatility = this.calculatePortfolioVolatility(positions);\r\n    const zScore = confidence === 0.95 ? 1.645 : 2.33; // 95% or 99% confidence\r\n    return totalValue * volatility * zScore / Math.sqrt(252); // Daily VaR\r\n  }\r\n\r\n  private calculateExpectedShortfall(positions: Position[], totalValue: number, confidence: number): number {\r\n    const var95 = this.calculateValueAtRisk(positions, totalValue, confidence);\r\n    return var95 * 1.3; // ES is typically 1.3x VaR for normal distribution\r\n  }\r\n\r\n  private calculateDiversificationRatio(positions: Position[]): number {\r\n    const uniqueAssets = new Set(positions.map(p => p.symbol)).size;\r\n    const totalPositions = positions.length;\r\n    return uniqueAssets / Math.max(1, totalPositions);\r\n  }\r\n\r\n  private calculateConcentrationRisk(positions: Position[], totalValue: number): number {\r\n    const assetValues = new Map<string, number>();\r\n    positions.forEach(pos => {\r\n      const value = pos.size * pos.currentPrice;\r\n      assetValues.set(pos.symbol, (assetValues.get(pos.symbol) || 0) + value);\r\n    });\r\n\r\n    const percentages = Array.from(assetValues.values()).map(v => v / totalValue);\r\n    const herfindahlIndex = percentages.reduce((sum, p) => sum + p * p, 0);\r\n    \r\n    return herfindahlIndex; // 0 = perfectly diversified, 1 = concentrated in one asset\r\n  }\r\n\r\n  private calculateAssetRiskContribution(symbol: string, positions: Position[], totalValue: number): number {\r\n    const assetValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    const weight = assetValue / totalValue;\r\n    const volatility = 0.5; // Simplified asset volatility\r\n    \r\n    return weight * volatility * 100; // Risk contribution as percentage\r\n  }\r\n\r\n  private calculateSectorBeta(assets: AssetExposure[]): number {\r\n    const cryptoBetas: Record<string, number> = {\r\n      'BTC': 1.0, 'ETH': 1.2, 'ADA': 1.5, 'DOT': 1.3\r\n    };\r\n\r\n    const totalValue = assets.reduce((sum, asset) => sum + asset.value, 0);\r\n    let weightedBeta = 0;\r\n\r\n    assets.forEach(asset => {\r\n      const weight = asset.value / totalValue;\r\n      const beta = cryptoBetas[asset.symbol] || 1.0;\r\n      weightedBeta += weight * beta;\r\n    });\r\n\r\n    return weightedBeta;\r\n  }\r\n\r\n  private calculateSectorMarketCorrelation(assets: AssetExposure[]): number {\r\n    // Simplified sector correlation with overall crypto market\r\n    return 0.8; // High correlation with crypto market\r\n  }\r\n\r\n  private calculateRiskReduction(asset: AssetExposure, targetAllocation: number): number {\r\n    const currentRisk = asset.riskContribution;\r\n    const targetRisk = currentRisk * (targetAllocation / asset.percentage);\r\n    return currentRisk - targetRisk;\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  updateConfig(newConfig: Partial<PortfolioRiskConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   */\r\n  getConfig(): PortfolioRiskConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Get portfolio risk summary\r\n   */\r\n  getPortfolioRiskSummary(report: PortfolioRiskReport): {\r\n    riskLevel: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n    keyRisks: string[];\r\n    topRecommendations: RebalancingRecommendation[];\r\n    diversificationStatus: 'GOOD' | 'FAIR' | 'POOR';\r\n  } {\r\n    const riskLevel = report.overallRiskScore < 25 ? 'LOW' :\r\n                     report.overallRiskScore < 50 ? 'MEDIUM' :\r\n                     report.overallRiskScore < 75 ? 'HIGH' : 'CRITICAL';\r\n\r\n    const keyRisks = report.riskViolations.slice(0, 3);\r\n    const topRecommendations = report.rebalancingRecommendations.slice(0, 3);\r\n    \r\n    const diversificationStatus = report.correlationMatrix.diversificationScore > 70 ? 'GOOD' :\r\n                                 report.correlationMatrix.diversificationScore > 40 ? 'FAIR' : 'POOR';\r\n\r\n    return {\r\n      riskLevel,\r\n      keyRisks,\r\n      topRecommendations,\r\n      diversificationStatus\r\n    };\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6dea55b8487ce63e8c90b833b2eafa0039470e23"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1iduem191k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1iduem191k();
cov_1iduem191k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1iduem191k().s[1]++;
exports.PortfolioRiskManager = void 0;
class PortfolioRiskManager {
  config;
  historicalPrices =
  /* istanbul ignore next */
  (cov_1iduem191k().s[2]++, new Map());
  correlationCache =
  /* istanbul ignore next */
  (cov_1iduem191k().s[3]++, new Map());
  constructor(config) {
    /* istanbul ignore next */
    cov_1iduem191k().f[0]++;
    cov_1iduem191k().s[4]++;
    this.config = config;
  }
  /**
   * Analyze portfolio risk and generate comprehensive report
   */
  async analyzePortfolioRisk(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[1]++;
    // Calculate portfolio metrics
    const metrics =
    /* istanbul ignore next */
    (cov_1iduem191k().s[5]++, this.calculatePortfolioMetrics(positions));
    // Calculate asset exposures
    const assetExposures =
    /* istanbul ignore next */
    (cov_1iduem191k().s[6]++, this.calculateAssetExposures(positions));
    // Calculate sector exposures
    const sectorExposures =
    /* istanbul ignore next */
    (cov_1iduem191k().s[7]++, this.calculateSectorExposures(assetExposures));
    // Calculate correlation matrix
    const correlationMatrix =
    /* istanbul ignore next */
    (cov_1iduem191k().s[8]++, await this.calculateCorrelationMatrix(positions));
    // Identify risk violations
    const riskViolations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[9]++, this.identifyRiskViolations(assetExposures, sectorExposures, correlationMatrix));
    // Generate rebalancing recommendations
    const rebalancingRecommendations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[10]++, this.generateRebalancingRecommendations(assetExposures, sectorExposures, correlationMatrix));
    // Calculate overall risk score
    const overallRiskScore =
    /* istanbul ignore next */
    (cov_1iduem191k().s[11]++, this.calculateOverallRiskScore(metrics, riskViolations.length, correlationMatrix));
    /* istanbul ignore next */
    cov_1iduem191k().s[12]++;
    return {
      timestamp: new Date(),
      metrics,
      assetExposures,
      sectorExposures,
      correlationMatrix,
      riskViolations,
      rebalancingRecommendations,
      overallRiskScore
    };
  }
  /**
   * Calculate comprehensive portfolio metrics
   */
  calculatePortfolioMetrics(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[2]++;
    const totalValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[13]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[3]++;
      cov_1iduem191k().s[14]++;
      return sum + pos.size * pos.currentPrice;
    }, 0));
    /* istanbul ignore next */
    cov_1iduem191k().s[15]++;
    if (totalValue === 0) {
      /* istanbul ignore next */
      cov_1iduem191k().b[0][0]++;
      cov_1iduem191k().s[16]++;
      return {
        totalValue: 0,
        beta: 0,
        volatility: 0,
        sharpeRatio: 0,
        maxDrawdown: 0,
        valueAtRisk: 0,
        expectedShortfall: 0,
        diversificationRatio: 0,
        concentrationRisk: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1iduem191k().b[0][1]++;
    }
    // Calculate portfolio beta (weighted average of asset betas)
    const beta =
    /* istanbul ignore next */
    (cov_1iduem191k().s[17]++, this.calculatePortfolioBeta(positions, totalValue));
    // Calculate portfolio volatility
    const volatility =
    /* istanbul ignore next */
    (cov_1iduem191k().s[18]++, this.calculatePortfolioVolatility(positions));
    // Calculate Sharpe ratio (assuming risk-free rate of 2%)
    const riskFreeRate =
    /* istanbul ignore next */
    (cov_1iduem191k().s[19]++, 0.02);
    const portfolioReturn =
    /* istanbul ignore next */
    (cov_1iduem191k().s[20]++, this.calculatePortfolioReturn(positions));
    const sharpeRatio =
    /* istanbul ignore next */
    (cov_1iduem191k().s[21]++, volatility > 0 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[1][0]++, (portfolioReturn - riskFreeRate) / volatility) :
    /* istanbul ignore next */
    (cov_1iduem191k().b[1][1]++, 0));
    // Calculate maximum drawdown
    const maxDrawdown =
    /* istanbul ignore next */
    (cov_1iduem191k().s[22]++, this.calculateMaxDrawdown(positions));
    // Calculate Value at Risk (95% confidence)
    const valueAtRisk =
    /* istanbul ignore next */
    (cov_1iduem191k().s[23]++, this.calculateValueAtRisk(positions, totalValue, 0.95));
    // Calculate Expected Shortfall
    const expectedShortfall =
    /* istanbul ignore next */
    (cov_1iduem191k().s[24]++, this.calculateExpectedShortfall(positions, totalValue, 0.95));
    // Calculate diversification ratio
    const diversificationRatio =
    /* istanbul ignore next */
    (cov_1iduem191k().s[25]++, this.calculateDiversificationRatio(positions));
    // Calculate concentration risk
    const concentrationRisk =
    /* istanbul ignore next */
    (cov_1iduem191k().s[26]++, this.calculateConcentrationRisk(positions, totalValue));
    /* istanbul ignore next */
    cov_1iduem191k().s[27]++;
    return {
      totalValue,
      beta,
      volatility,
      sharpeRatio,
      maxDrawdown,
      valueAtRisk,
      expectedShortfall,
      diversificationRatio,
      concentrationRisk
    };
  }
  /**
   * Calculate asset exposures
   */
  calculateAssetExposures(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[4]++;
    const totalValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[28]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[5]++;
      cov_1iduem191k().s[29]++;
      return sum + pos.size * pos.currentPrice;
    }, 0));
    const assetMap =
    /* istanbul ignore next */
    (cov_1iduem191k().s[30]++, new Map());
    // Group positions by asset
    /* istanbul ignore next */
    cov_1iduem191k().s[31]++;
    positions.forEach(pos => {
      /* istanbul ignore next */
      cov_1iduem191k().f[6]++;
      cov_1iduem191k().s[32]++;
      if (!assetMap.has(pos.symbol)) {
        /* istanbul ignore next */
        cov_1iduem191k().b[2][0]++;
        cov_1iduem191k().s[33]++;
        assetMap.set(pos.symbol, []);
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[2][1]++;
      }
      cov_1iduem191k().s[34]++;
      assetMap.get(pos.symbol).push(pos);
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[35]++;
    return Array.from(assetMap.entries()).map(([symbol, assetPositions]) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[7]++;
      const value =
      /* istanbul ignore next */
      (cov_1iduem191k().s[36]++, assetPositions.reduce((sum, pos) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[8]++;
        cov_1iduem191k().s[37]++;
        return sum + pos.size * pos.currentPrice;
      }, 0));
      const totalSize =
      /* istanbul ignore next */
      (cov_1iduem191k().s[38]++, assetPositions.reduce((sum, pos) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[9]++;
        cov_1iduem191k().s[39]++;
        return sum + pos.size;
      }, 0));
      const averageEntryPrice =
      /* istanbul ignore next */
      (cov_1iduem191k().s[40]++, assetPositions.reduce((sum, pos) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[10]++;
        cov_1iduem191k().s[41]++;
        return sum + pos.entryPrice * pos.size;
      }, 0) / totalSize);
      const currentPrice =
      /* istanbul ignore next */
      (cov_1iduem191k().s[42]++, assetPositions[0].currentPrice);
      const unrealizedPnL =
      /* istanbul ignore next */
      (cov_1iduem191k().s[43]++, assetPositions.reduce((sum, pos) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[11]++;
        cov_1iduem191k().s[44]++;
        return sum + pos.unrealizedPnL;
      }, 0));
      const riskContribution =
      /* istanbul ignore next */
      (cov_1iduem191k().s[45]++, this.calculateAssetRiskContribution(symbol, assetPositions, totalValue));
      /* istanbul ignore next */
      cov_1iduem191k().s[46]++;
      return {
        symbol,
        value,
        percentage: value / totalValue * 100,
        positionCount: assetPositions.length,
        averageEntryPrice,
        currentPrice,
        unrealizedPnL,
        riskContribution
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[12]++;
      cov_1iduem191k().s[47]++;
      return b.percentage - a.percentage;
    });
  }
  /**
   * Calculate sector exposures
   */
  calculateSectorExposures(assetExposures) {
    /* istanbul ignore next */
    cov_1iduem191k().f[13]++;
    // Define crypto sectors
    const sectorMap =
    /* istanbul ignore next */
    (cov_1iduem191k().s[48]++, {
      'BTC': 'Digital Gold',
      'ETH': 'Smart Contracts',
      'ADA': 'Smart Contracts',
      'DOT': 'Interoperability',
      'LINK': 'Oracle',
      'UNI': 'DeFi',
      'AAVE': 'DeFi'
    });
    const sectors =
    /* istanbul ignore next */
    (cov_1iduem191k().s[49]++, new Map());
    const totalValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[50]++, assetExposures.reduce((sum, asset) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[14]++;
      cov_1iduem191k().s[51]++;
      return sum + asset.value;
    }, 0));
    /* istanbul ignore next */
    cov_1iduem191k().s[52]++;
    assetExposures.forEach(asset => {
      /* istanbul ignore next */
      cov_1iduem191k().f[15]++;
      const sector =
      /* istanbul ignore next */
      (cov_1iduem191k().s[53]++,
      /* istanbul ignore next */
      (cov_1iduem191k().b[3][0]++, sectorMap[asset.symbol]) ||
      /* istanbul ignore next */
      (cov_1iduem191k().b[3][1]++, 'Other'));
      /* istanbul ignore next */
      cov_1iduem191k().s[54]++;
      if (!sectors.has(sector)) {
        /* istanbul ignore next */
        cov_1iduem191k().b[4][0]++;
        cov_1iduem191k().s[55]++;
        sectors.set(sector, []);
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[4][1]++;
      }
      cov_1iduem191k().s[56]++;
      sectors.get(sector).push(asset);
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[57]++;
    return Array.from(sectors.entries()).map(([sector, assets]) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[16]++;
      const value =
      /* istanbul ignore next */
      (cov_1iduem191k().s[58]++, assets.reduce((sum, asset) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[17]++;
        cov_1iduem191k().s[59]++;
        return sum + asset.value;
      }, 0));
      const beta =
      /* istanbul ignore next */
      (cov_1iduem191k().s[60]++, this.calculateSectorBeta(assets));
      const marketCorrelation =
      /* istanbul ignore next */
      (cov_1iduem191k().s[61]++, this.calculateSectorMarketCorrelation(assets));
      /* istanbul ignore next */
      cov_1iduem191k().s[62]++;
      return {
        sector,
        value,
        percentage: value / totalValue * 100,
        assets: assets.map(a => {
          /* istanbul ignore next */
          cov_1iduem191k().f[18]++;
          cov_1iduem191k().s[63]++;
          return a.symbol;
        }),
        beta,
        marketCorrelation
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[19]++;
      cov_1iduem191k().s[64]++;
      return b.percentage - a.percentage;
    });
  }
  /**
   * Calculate correlation matrix between assets
   */
  async calculateCorrelationMatrix(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[20]++;
    const symbols =
    /* istanbul ignore next */
    (cov_1iduem191k().s[65]++, [...new Set(positions.map(p => {
      /* istanbul ignore next */
      cov_1iduem191k().f[21]++;
      cov_1iduem191k().s[66]++;
      return p.symbol;
    }))]);
    const correlations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[67]++, new Map());
    // Predefined correlation coefficients for crypto assets
    const cryptoCorrelations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[68]++, {
      'BTC': {
        'ETH': 0.75,
        'BTC': 1.0
      },
      'ETH': {
        'BTC': 0.75,
        'ETH': 1.0
      }
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[69]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1iduem191k().s[70]++, 0); i < symbols.length; i++) {
      /* istanbul ignore next */
      cov_1iduem191k().s[71]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1iduem191k().s[72]++, i + 1); j < symbols.length; j++) {
        const symbol1 =
        /* istanbul ignore next */
        (cov_1iduem191k().s[73]++, symbols[i]);
        const symbol2 =
        /* istanbul ignore next */
        (cov_1iduem191k().s[74]++, symbols[j]);
        const correlation =
        /* istanbul ignore next */
        (cov_1iduem191k().s[75]++,
        /* istanbul ignore next */
        (cov_1iduem191k().b[5][0]++, cryptoCorrelations[symbol1]?.[symbol2]) ||
        /* istanbul ignore next */
        (cov_1iduem191k().b[5][1]++, cryptoCorrelations[symbol2]?.[symbol1]) ||
        /* istanbul ignore next */
        (cov_1iduem191k().b[5][2]++, 0.3)); // Default moderate correlation for crypto
        /* istanbul ignore next */
        cov_1iduem191k().s[76]++;
        correlations.set(`${symbol1}-${symbol2}`, correlation);
      }
    }
    const portfolioCorrelationRisk =
    /* istanbul ignore next */
    (cov_1iduem191k().s[77]++, this.calculatePortfolioCorrelationRisk(correlations, positions));
    const diversificationScore =
    /* istanbul ignore next */
    (cov_1iduem191k().s[78]++, Math.max(0, 100 - portfolioCorrelationRisk * 100));
    /* istanbul ignore next */
    cov_1iduem191k().s[79]++;
    return {
      correlations,
      portfolioCorrelationRisk,
      diversificationScore,
      recommendations: []
    };
  }
  /**
   * Calculate portfolio correlation risk
   */
  calculatePortfolioCorrelationRisk(correlations, positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[22]++;
    cov_1iduem191k().s[80]++;
    if (correlations.size === 0) {
      /* istanbul ignore next */
      cov_1iduem191k().b[6][0]++;
      cov_1iduem191k().s[81]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1iduem191k().b[6][1]++;
    }
    const totalValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[82]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[23]++;
      cov_1iduem191k().s[83]++;
      return sum + pos.size * pos.currentPrice;
    }, 0));
    let weightedCorrelation =
    /* istanbul ignore next */
    (cov_1iduem191k().s[84]++, 0);
    let totalWeight =
    /* istanbul ignore next */
    (cov_1iduem191k().s[85]++, 0);
    /* istanbul ignore next */
    cov_1iduem191k().s[86]++;
    correlations.forEach((correlation, pair) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[24]++;
      const [symbol1, symbol2] =
      /* istanbul ignore next */
      (cov_1iduem191k().s[87]++, pair.split('-'));
      const pos1Value =
      /* istanbul ignore next */
      (cov_1iduem191k().s[88]++, positions.filter(p => {
        /* istanbul ignore next */
        cov_1iduem191k().f[25]++;
        cov_1iduem191k().s[89]++;
        return p.symbol === symbol1;
      }).reduce((sum, p) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[26]++;
        cov_1iduem191k().s[90]++;
        return sum + p.size * p.currentPrice;
      }, 0));
      const pos2Value =
      /* istanbul ignore next */
      (cov_1iduem191k().s[91]++, positions.filter(p => {
        /* istanbul ignore next */
        cov_1iduem191k().f[27]++;
        cov_1iduem191k().s[92]++;
        return p.symbol === symbol2;
      }).reduce((sum, p) => {
        /* istanbul ignore next */
        cov_1iduem191k().f[28]++;
        cov_1iduem191k().s[93]++;
        return sum + p.size * p.currentPrice;
      }, 0));
      const weight =
      /* istanbul ignore next */
      (cov_1iduem191k().s[94]++, pos1Value * pos2Value / (totalValue * totalValue));
      /* istanbul ignore next */
      cov_1iduem191k().s[95]++;
      weightedCorrelation += Math.abs(correlation) * weight;
      /* istanbul ignore next */
      cov_1iduem191k().s[96]++;
      totalWeight += weight;
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[97]++;
    return totalWeight > 0 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[7][0]++, weightedCorrelation / totalWeight) :
    /* istanbul ignore next */
    (cov_1iduem191k().b[7][1]++, 0);
  }
  /**
   * Identify risk violations
   */
  identifyRiskViolations(assetExposures, sectorExposures, correlationMatrix) {
    /* istanbul ignore next */
    cov_1iduem191k().f[29]++;
    const violations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[98]++, []);
    // Check single asset exposure limits
    /* istanbul ignore next */
    cov_1iduem191k().s[99]++;
    assetExposures.forEach(asset => {
      /* istanbul ignore next */
      cov_1iduem191k().f[30]++;
      cov_1iduem191k().s[100]++;
      if (asset.percentage > this.config.maxSingleAssetExposure) {
        /* istanbul ignore next */
        cov_1iduem191k().b[8][0]++;
        cov_1iduem191k().s[101]++;
        violations.push(`${asset.symbol} exposure ${asset.percentage.toFixed(1)}% exceeds limit ${this.config.maxSingleAssetExposure}%`);
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[8][1]++;
      }
    });
    // Check sector exposure limits
    /* istanbul ignore next */
    cov_1iduem191k().s[102]++;
    sectorExposures.forEach(sector => {
      /* istanbul ignore next */
      cov_1iduem191k().f[31]++;
      cov_1iduem191k().s[103]++;
      if (sector.percentage > this.config.maxSectorExposure) {
        /* istanbul ignore next */
        cov_1iduem191k().b[9][0]++;
        cov_1iduem191k().s[104]++;
        violations.push(`${sector.sector} sector exposure ${sector.percentage.toFixed(1)}% exceeds limit ${this.config.maxSectorExposure}%`);
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[9][1]++;
      }
    });
    // Check portfolio correlation
    /* istanbul ignore next */
    cov_1iduem191k().s[105]++;
    if (correlationMatrix.portfolioCorrelationRisk > this.config.maxPortfolioCorrelation) {
      /* istanbul ignore next */
      cov_1iduem191k().b[10][0]++;
      cov_1iduem191k().s[106]++;
      violations.push(`Portfolio correlation risk ${(correlationMatrix.portfolioCorrelationRisk * 100).toFixed(1)}% exceeds limit ${(this.config.maxPortfolioCorrelation * 100).toFixed(1)}%`);
    } else
    /* istanbul ignore next */
    {
      cov_1iduem191k().b[10][1]++;
    }
    // Check diversification score
    cov_1iduem191k().s[107]++;
    if (correlationMatrix.diversificationScore < this.config.minDiversificationScore) {
      /* istanbul ignore next */
      cov_1iduem191k().b[11][0]++;
      cov_1iduem191k().s[108]++;
      violations.push(`Diversification score ${correlationMatrix.diversificationScore.toFixed(1)} below minimum ${this.config.minDiversificationScore}`);
    } else
    /* istanbul ignore next */
    {
      cov_1iduem191k().b[11][1]++;
    }
    cov_1iduem191k().s[109]++;
    return violations;
  }
  /**
   * Generate rebalancing recommendations
   */
  generateRebalancingRecommendations(assetExposures, sectorExposures, correlationMatrix) {
    /* istanbul ignore next */
    cov_1iduem191k().f[32]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[110]++, []);
    // Recommendations for overexposed assets
    /* istanbul ignore next */
    cov_1iduem191k().s[111]++;
    assetExposures.forEach(asset => {
      /* istanbul ignore next */
      cov_1iduem191k().f[33]++;
      const targetAllocation =
      /* istanbul ignore next */
      (cov_1iduem191k().s[112]++,
      /* istanbul ignore next */
      (cov_1iduem191k().b[12][0]++, this.config.targetAllocation.get(asset.symbol)) ||
      /* istanbul ignore next */
      (cov_1iduem191k().b[12][1]++, 0));
      const deviation =
      /* istanbul ignore next */
      (cov_1iduem191k().s[113]++, Math.abs(asset.percentage - targetAllocation));
      /* istanbul ignore next */
      cov_1iduem191k().s[114]++;
      if (deviation > this.config.rebalancingThreshold) {
        /* istanbul ignore next */
        cov_1iduem191k().b[13][0]++;
        const priority =
        /* istanbul ignore next */
        (cov_1iduem191k().s[115]++, asset.percentage > this.config.maxSingleAssetExposure ?
        /* istanbul ignore next */
        (cov_1iduem191k().b[14][0]++, 'CRITICAL') :
        /* istanbul ignore next */
        (cov_1iduem191k().b[14][1]++, deviation > this.config.rebalancingThreshold * 2 ?
        /* istanbul ignore next */
        (cov_1iduem191k().b[15][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_1iduem191k().b[15][1]++, 'MEDIUM')));
        /* istanbul ignore next */
        cov_1iduem191k().s[116]++;
        recommendations.push({
          id: `rebalance-${asset.symbol}-${Date.now()}`,
          type: asset.percentage > targetAllocation ?
          /* istanbul ignore next */
          (cov_1iduem191k().b[16][0]++, 'REDUCE_EXPOSURE') :
          /* istanbul ignore next */
          (cov_1iduem191k().b[16][1]++, 'INCREASE_EXPOSURE'),
          symbol: asset.symbol,
          currentAllocation: asset.percentage,
          targetAllocation,
          action: asset.percentage > targetAllocation ?
          /* istanbul ignore next */
          (cov_1iduem191k().b[17][0]++, `Reduce ${asset.symbol} position by ${(asset.percentage - targetAllocation).toFixed(1)}%`) :
          /* istanbul ignore next */
          (cov_1iduem191k().b[17][1]++, `Increase ${asset.symbol} position by ${(targetAllocation - asset.percentage).toFixed(1)}%`),
          riskReduction: this.calculateRiskReduction(asset, targetAllocation),
          priority,
          reasoning: `Current allocation ${asset.percentage.toFixed(1)}% deviates from target ${targetAllocation.toFixed(1)}%`,
          estimatedImpact: {
            portfolioRisk: deviation * -0.1,
            // Estimated risk reduction
            diversificationImprovement: deviation * 0.05,
            correlationReduction: asset.riskContribution * 0.1
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[13][1]++;
      }
    });
    // Recommendations for high correlation
    /* istanbul ignore next */
    cov_1iduem191k().s[117]++;
    if (correlationMatrix.portfolioCorrelationRisk > this.config.maxPortfolioCorrelation) {
      /* istanbul ignore next */
      cov_1iduem191k().b[18][0]++;
      const highestCorrelationPair =
      /* istanbul ignore next */
      (cov_1iduem191k().s[118]++, this.findHighestCorrelationPair(correlationMatrix.correlations));
      /* istanbul ignore next */
      cov_1iduem191k().s[119]++;
      if (highestCorrelationPair) {
        /* istanbul ignore next */
        cov_1iduem191k().b[19][0]++;
        const [symbol1, symbol2] =
        /* istanbul ignore next */
        (cov_1iduem191k().s[120]++, highestCorrelationPair.pair.split('-'));
        const asset1 =
        /* istanbul ignore next */
        (cov_1iduem191k().s[121]++, assetExposures.find(a => {
          /* istanbul ignore next */
          cov_1iduem191k().f[34]++;
          cov_1iduem191k().s[122]++;
          return a.symbol === symbol1;
        }));
        const asset2 =
        /* istanbul ignore next */
        (cov_1iduem191k().s[123]++, assetExposures.find(a => {
          /* istanbul ignore next */
          cov_1iduem191k().f[35]++;
          cov_1iduem191k().s[124]++;
          return a.symbol === symbol2;
        }));
        /* istanbul ignore next */
        cov_1iduem191k().s[125]++;
        if (
        /* istanbul ignore next */
        (cov_1iduem191k().b[21][0]++, asset1) &&
        /* istanbul ignore next */
        (cov_1iduem191k().b[21][1]++, asset2)) {
          /* istanbul ignore next */
          cov_1iduem191k().b[20][0]++;
          const symbolToReduce =
          /* istanbul ignore next */
          (cov_1iduem191k().s[126]++, asset1.percentage > asset2.percentage ?
          /* istanbul ignore next */
          (cov_1iduem191k().b[22][0]++, symbol1) :
          /* istanbul ignore next */
          (cov_1iduem191k().b[22][1]++, symbol2));
          /* istanbul ignore next */
          cov_1iduem191k().s[127]++;
          recommendations.push({
            id: `diversify-${symbolToReduce}-${Date.now()}`,
            type: 'DIVERSIFY',
            symbol: symbolToReduce,
            currentAllocation: asset1.percentage + asset2.percentage,
            targetAllocation: Math.max(asset1.percentage, asset2.percentage) * 0.7,
            action: `Reduce ${symbolToReduce} to improve diversification`,
            riskReduction: highestCorrelationPair.correlation * 10,
            priority: 'HIGH',
            reasoning: `High correlation ${(highestCorrelationPair.correlation * 100).toFixed(0)}% between ${symbol1} and ${symbol2}`,
            estimatedImpact: {
              portfolioRisk: -5,
              diversificationImprovement: 10,
              correlationReduction: highestCorrelationPair.correlation * 20
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_1iduem191k().b[20][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[19][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1iduem191k().b[18][1]++;
    }
    cov_1iduem191k().s[128]++;
    return recommendations.sort((a, b) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[36]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_1iduem191k().s[129]++, {
        CRITICAL: 4,
        HIGH: 3,
        MEDIUM: 2,
        LOW: 1
      });
      /* istanbul ignore next */
      cov_1iduem191k().s[130]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  }
  /**
   * Find highest correlation pair
   */
  findHighestCorrelationPair(correlations) {
    /* istanbul ignore next */
    cov_1iduem191k().f[37]++;
    let maxCorrelation =
    /* istanbul ignore next */
    (cov_1iduem191k().s[131]++, 0);
    let maxPair =
    /* istanbul ignore next */
    (cov_1iduem191k().s[132]++, '');
    /* istanbul ignore next */
    cov_1iduem191k().s[133]++;
    correlations.forEach((correlation, pair) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[38]++;
      cov_1iduem191k().s[134]++;
      if (Math.abs(correlation) > Math.abs(maxCorrelation)) {
        /* istanbul ignore next */
        cov_1iduem191k().b[23][0]++;
        cov_1iduem191k().s[135]++;
        maxCorrelation = correlation;
        /* istanbul ignore next */
        cov_1iduem191k().s[136]++;
        maxPair = pair;
      } else
      /* istanbul ignore next */
      {
        cov_1iduem191k().b[23][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[137]++;
    return maxPair ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[24][0]++, {
      pair: maxPair,
      correlation: maxCorrelation
    }) :
    /* istanbul ignore next */
    (cov_1iduem191k().b[24][1]++, null);
  }
  /**
   * Calculate overall risk score
   */
  calculateOverallRiskScore(metrics, violationCount, correlationMatrix) {
    /* istanbul ignore next */
    cov_1iduem191k().f[39]++;
    let riskScore =
    /* istanbul ignore next */
    (cov_1iduem191k().s[138]++, 0);
    // Base risk from concentration
    /* istanbul ignore next */
    cov_1iduem191k().s[139]++;
    riskScore += metrics.concentrationRisk * 30;
    // Risk from correlation
    /* istanbul ignore next */
    cov_1iduem191k().s[140]++;
    riskScore += correlationMatrix.portfolioCorrelationRisk * 25;
    // Risk from violations
    /* istanbul ignore next */
    cov_1iduem191k().s[141]++;
    riskScore += violationCount * 10;
    // Risk from volatility
    /* istanbul ignore next */
    cov_1iduem191k().s[142]++;
    riskScore += Math.min(metrics.volatility * 100, 20);
    // Risk from drawdown
    /* istanbul ignore next */
    cov_1iduem191k().s[143]++;
    riskScore += Math.min(metrics.maxDrawdown, 15);
    /* istanbul ignore next */
    cov_1iduem191k().s[144]++;
    return Math.min(100, Math.max(0, riskScore));
  }
  // Helper methods for calculations
  calculatePortfolioBeta(positions, totalValue) {
    /* istanbul ignore next */
    cov_1iduem191k().f[40]++;
    // Simplified beta calculation - in production would use historical data
    const cryptoBetas =
    /* istanbul ignore next */
    (cov_1iduem191k().s[145]++, {
      'BTC': 1.0,
      'ETH': 1.2,
      'ADA': 1.5,
      'DOT': 1.3
    });
    let weightedBeta =
    /* istanbul ignore next */
    (cov_1iduem191k().s[146]++, 0);
    /* istanbul ignore next */
    cov_1iduem191k().s[147]++;
    positions.forEach(pos => {
      /* istanbul ignore next */
      cov_1iduem191k().f[41]++;
      const weight =
      /* istanbul ignore next */
      (cov_1iduem191k().s[148]++, pos.size * pos.currentPrice / totalValue);
      const beta =
      /* istanbul ignore next */
      (cov_1iduem191k().s[149]++,
      /* istanbul ignore next */
      (cov_1iduem191k().b[25][0]++, cryptoBetas[pos.symbol]) ||
      /* istanbul ignore next */
      (cov_1iduem191k().b[25][1]++, 1.0));
      /* istanbul ignore next */
      cov_1iduem191k().s[150]++;
      weightedBeta += weight * beta;
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[151]++;
    return weightedBeta;
  }
  calculatePortfolioVolatility(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[42]++;
    cov_1iduem191k().s[152]++;
    // Simplified volatility calculation
    return 0.4; // 40% annual volatility for crypto portfolio
  }
  calculatePortfolioReturn(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[43]++;
    const totalValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[153]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[44]++;
      cov_1iduem191k().s[154]++;
      return sum + pos.size * pos.currentPrice;
    }, 0));
    const totalPnL =
    /* istanbul ignore next */
    (cov_1iduem191k().s[155]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[45]++;
      cov_1iduem191k().s[156]++;
      return sum + pos.unrealizedPnL;
    }, 0));
    /* istanbul ignore next */
    cov_1iduem191k().s[157]++;
    return totalValue > 0 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[26][0]++, totalPnL / totalValue) :
    /* istanbul ignore next */
    (cov_1iduem191k().b[26][1]++, 0);
  }
  calculateMaxDrawdown(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[46]++;
    cov_1iduem191k().s[158]++;
    // Simplified max drawdown calculation
    return 15; // 15% max drawdown
  }
  calculateValueAtRisk(positions, totalValue, confidence) {
    /* istanbul ignore next */
    cov_1iduem191k().f[47]++;
    const volatility =
    /* istanbul ignore next */
    (cov_1iduem191k().s[159]++, this.calculatePortfolioVolatility(positions));
    const zScore =
    /* istanbul ignore next */
    (cov_1iduem191k().s[160]++, confidence === 0.95 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[27][0]++, 1.645) :
    /* istanbul ignore next */
    (cov_1iduem191k().b[27][1]++, 2.33)); // 95% or 99% confidence
    /* istanbul ignore next */
    cov_1iduem191k().s[161]++;
    return totalValue * volatility * zScore / Math.sqrt(252); // Daily VaR
  }
  calculateExpectedShortfall(positions, totalValue, confidence) {
    /* istanbul ignore next */
    cov_1iduem191k().f[48]++;
    const var95 =
    /* istanbul ignore next */
    (cov_1iduem191k().s[162]++, this.calculateValueAtRisk(positions, totalValue, confidence));
    /* istanbul ignore next */
    cov_1iduem191k().s[163]++;
    return var95 * 1.3; // ES is typically 1.3x VaR for normal distribution
  }
  calculateDiversificationRatio(positions) {
    /* istanbul ignore next */
    cov_1iduem191k().f[49]++;
    const uniqueAssets =
    /* istanbul ignore next */
    (cov_1iduem191k().s[164]++, new Set(positions.map(p => {
      /* istanbul ignore next */
      cov_1iduem191k().f[50]++;
      cov_1iduem191k().s[165]++;
      return p.symbol;
    })).size);
    const totalPositions =
    /* istanbul ignore next */
    (cov_1iduem191k().s[166]++, positions.length);
    /* istanbul ignore next */
    cov_1iduem191k().s[167]++;
    return uniqueAssets / Math.max(1, totalPositions);
  }
  calculateConcentrationRisk(positions, totalValue) {
    /* istanbul ignore next */
    cov_1iduem191k().f[51]++;
    const assetValues =
    /* istanbul ignore next */
    (cov_1iduem191k().s[168]++, new Map());
    /* istanbul ignore next */
    cov_1iduem191k().s[169]++;
    positions.forEach(pos => {
      /* istanbul ignore next */
      cov_1iduem191k().f[52]++;
      const value =
      /* istanbul ignore next */
      (cov_1iduem191k().s[170]++, pos.size * pos.currentPrice);
      /* istanbul ignore next */
      cov_1iduem191k().s[171]++;
      assetValues.set(pos.symbol, (
      /* istanbul ignore next */
      (cov_1iduem191k().b[28][0]++, assetValues.get(pos.symbol)) ||
      /* istanbul ignore next */
      (cov_1iduem191k().b[28][1]++, 0)) + value);
    });
    const percentages =
    /* istanbul ignore next */
    (cov_1iduem191k().s[172]++, Array.from(assetValues.values()).map(v => {
      /* istanbul ignore next */
      cov_1iduem191k().f[53]++;
      cov_1iduem191k().s[173]++;
      return v / totalValue;
    }));
    const herfindahlIndex =
    /* istanbul ignore next */
    (cov_1iduem191k().s[174]++, percentages.reduce((sum, p) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[54]++;
      cov_1iduem191k().s[175]++;
      return sum + p * p;
    }, 0));
    /* istanbul ignore next */
    cov_1iduem191k().s[176]++;
    return herfindahlIndex; // 0 = perfectly diversified, 1 = concentrated in one asset
  }
  calculateAssetRiskContribution(symbol, positions, totalValue) {
    /* istanbul ignore next */
    cov_1iduem191k().f[55]++;
    const assetValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[177]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[56]++;
      cov_1iduem191k().s[178]++;
      return sum + pos.size * pos.currentPrice;
    }, 0));
    const weight =
    /* istanbul ignore next */
    (cov_1iduem191k().s[179]++, assetValue / totalValue);
    const volatility =
    /* istanbul ignore next */
    (cov_1iduem191k().s[180]++, 0.5); // Simplified asset volatility
    /* istanbul ignore next */
    cov_1iduem191k().s[181]++;
    return weight * volatility * 100; // Risk contribution as percentage
  }
  calculateSectorBeta(assets) {
    /* istanbul ignore next */
    cov_1iduem191k().f[57]++;
    const cryptoBetas =
    /* istanbul ignore next */
    (cov_1iduem191k().s[182]++, {
      'BTC': 1.0,
      'ETH': 1.2,
      'ADA': 1.5,
      'DOT': 1.3
    });
    const totalValue =
    /* istanbul ignore next */
    (cov_1iduem191k().s[183]++, assets.reduce((sum, asset) => {
      /* istanbul ignore next */
      cov_1iduem191k().f[58]++;
      cov_1iduem191k().s[184]++;
      return sum + asset.value;
    }, 0));
    let weightedBeta =
    /* istanbul ignore next */
    (cov_1iduem191k().s[185]++, 0);
    /* istanbul ignore next */
    cov_1iduem191k().s[186]++;
    assets.forEach(asset => {
      /* istanbul ignore next */
      cov_1iduem191k().f[59]++;
      const weight =
      /* istanbul ignore next */
      (cov_1iduem191k().s[187]++, asset.value / totalValue);
      const beta =
      /* istanbul ignore next */
      (cov_1iduem191k().s[188]++,
      /* istanbul ignore next */
      (cov_1iduem191k().b[29][0]++, cryptoBetas[asset.symbol]) ||
      /* istanbul ignore next */
      (cov_1iduem191k().b[29][1]++, 1.0));
      /* istanbul ignore next */
      cov_1iduem191k().s[189]++;
      weightedBeta += weight * beta;
    });
    /* istanbul ignore next */
    cov_1iduem191k().s[190]++;
    return weightedBeta;
  }
  calculateSectorMarketCorrelation(assets) {
    /* istanbul ignore next */
    cov_1iduem191k().f[60]++;
    cov_1iduem191k().s[191]++;
    // Simplified sector correlation with overall crypto market
    return 0.8; // High correlation with crypto market
  }
  calculateRiskReduction(asset, targetAllocation) {
    /* istanbul ignore next */
    cov_1iduem191k().f[61]++;
    const currentRisk =
    /* istanbul ignore next */
    (cov_1iduem191k().s[192]++, asset.riskContribution);
    const targetRisk =
    /* istanbul ignore next */
    (cov_1iduem191k().s[193]++, currentRisk * (targetAllocation / asset.percentage));
    /* istanbul ignore next */
    cov_1iduem191k().s[194]++;
    return currentRisk - targetRisk;
  }
  /**
   * Update configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_1iduem191k().f[62]++;
    cov_1iduem191k().s[195]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
  }
  /**
   * Get current configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_1iduem191k().f[63]++;
    cov_1iduem191k().s[196]++;
    return {
      ...this.config
    };
  }
  /**
   * Get portfolio risk summary
   */
  getPortfolioRiskSummary(report) {
    /* istanbul ignore next */
    cov_1iduem191k().f[64]++;
    const riskLevel =
    /* istanbul ignore next */
    (cov_1iduem191k().s[197]++, report.overallRiskScore < 25 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[30][0]++, 'LOW') :
    /* istanbul ignore next */
    (cov_1iduem191k().b[30][1]++, report.overallRiskScore < 50 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[31][0]++, 'MEDIUM') :
    /* istanbul ignore next */
    (cov_1iduem191k().b[31][1]++, report.overallRiskScore < 75 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[32][0]++, 'HIGH') :
    /* istanbul ignore next */
    (cov_1iduem191k().b[32][1]++, 'CRITICAL'))));
    const keyRisks =
    /* istanbul ignore next */
    (cov_1iduem191k().s[198]++, report.riskViolations.slice(0, 3));
    const topRecommendations =
    /* istanbul ignore next */
    (cov_1iduem191k().s[199]++, report.rebalancingRecommendations.slice(0, 3));
    const diversificationStatus =
    /* istanbul ignore next */
    (cov_1iduem191k().s[200]++, report.correlationMatrix.diversificationScore > 70 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[33][0]++, 'GOOD') :
    /* istanbul ignore next */
    (cov_1iduem191k().b[33][1]++, report.correlationMatrix.diversificationScore > 40 ?
    /* istanbul ignore next */
    (cov_1iduem191k().b[34][0]++, 'FAIR') :
    /* istanbul ignore next */
    (cov_1iduem191k().b[34][1]++, 'POOR')));
    /* istanbul ignore next */
    cov_1iduem191k().s[201]++;
    return {
      riskLevel,
      keyRisks,
      topRecommendations,
      diversificationStatus
    };
  }
}
/* istanbul ignore next */
cov_1iduem191k().s[202]++;
exports.PortfolioRiskManager = PortfolioRiskManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,