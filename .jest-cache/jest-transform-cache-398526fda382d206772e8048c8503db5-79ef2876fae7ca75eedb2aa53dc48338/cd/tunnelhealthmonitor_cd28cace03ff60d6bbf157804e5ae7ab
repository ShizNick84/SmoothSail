79bfa816f173e2265f3d99f4d871ec43
"use strict";

/* istanbul ignore next */
function cov_2qo9c4urn3() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\tunnel-health-monitor.ts";
  var hash = "2f0bf512d97165a2b92e0cf02b248bfa7a230994";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\tunnel-health-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "37": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 34
        }
      },
      "38": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 60
        }
      },
      "39": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 16
        }
      },
      "40": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "41": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 43
        }
      },
      "42": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 41
        }
      },
      "43": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "44": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "45": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 45
        }
      },
      "46": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "47": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "48": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 75
        }
      },
      "49": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "50": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 69
        }
      },
      "51": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 19
        }
      },
      "52": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "53": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 62
        }
      },
      "54": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 77,
          column: 66
        }
      },
      "55": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "56": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 58
        }
      },
      "57": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "58": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "59": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "60": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "61": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 39
        }
      },
      "62": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "63": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 65
        }
      },
      "64": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 19
        }
      },
      "65": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 34
        }
      },
      "66": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 62
        }
      },
      "67": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "68": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 36
        }
      },
      "69": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 58
        }
      },
      "70": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 39
        }
      },
      "71": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "72": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 80
        }
      },
      "73": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "74": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 87
        }
      },
      "75": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 51
        }
      },
      "76": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 129,
          column: 37
        }
      },
      "77": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "78": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 60
        }
      },
      "79": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 95
        }
      },
      "80": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 61
        }
      },
      "81": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 70
        }
      },
      "82": {
        start: {
          line: 132,
          column: 25
        },
        end: {
          line: 132,
          column: 62
        }
      },
      "83": {
        start: {
          line: 140,
          column: 25
        },
        end: {
          line: 140,
          column: 67
        }
      },
      "84": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "85": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 36
        }
      },
      "86": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 58
        }
      },
      "87": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 90
        }
      },
      "88": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 52
        }
      },
      "89": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 43
        }
      },
      "90": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 172,
          column: 71
        }
      },
      "91": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 60
        }
      },
      "92": {
        start: {
          line: 181,
          column: 27
        },
        end: {
          line: 181,
          column: 66
        }
      },
      "93": {
        start: {
          line: 182,
          column: 33
        },
        end: {
          line: 182,
          column: 50
        }
      },
      "94": {
        start: {
          line: 183,
          column: 35
        },
        end: {
          line: 183,
          column: 77
        }
      },
      "95": {
        start: {
          line: 183,
          column: 58
        },
        end: {
          line: 183,
          column: 69
        }
      },
      "96": {
        start: {
          line: 184,
          column: 37
        },
        end: {
          line: 184,
          column: 74
        }
      },
      "97": {
        start: {
          line: 185,
          column: 35
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "98": {
        start: {
          line: 186,
          column: 44
        },
        end: {
          line: 186,
          column: 63
        }
      },
      "99": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 188,
          column: 125
        }
      },
      "100": {
        start: {
          line: 188,
          column: 61
        },
        end: {
          line: 188,
          column: 121
        }
      },
      "101": {
        start: {
          line: 188,
          column: 88
        },
        end: {
          line: 188,
          column: 113
        }
      },
      "102": {
        start: {
          line: 189,
          column: 34
        },
        end: {
          line: 189,
          column: 89
        }
      },
      "103": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 197,
          column: 10
        }
      },
      "104": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "105": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 56
        }
      },
      "106": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 63
        }
      },
      "107": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 98
        }
      },
      "108": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 24
        }
      },
      "109": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "110": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 54
        }
      },
      "111": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 54
        }
      },
      "112": {
        start: {
          line: 242,
          column: 27
        },
        end: {
          line: 242,
          column: 73
        }
      },
      "113": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "114": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 87
        }
      },
      "115": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 19
        }
      },
      "116": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 247,
          column: 60
        }
      },
      "117": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "118": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 89
        }
      },
      "119": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "120": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "121": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 49
        }
      },
      "122": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "123": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 91
        }
      },
      "124": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 23
        }
      },
      "125": {
        start: {
          line: 261,
          column: 28
        },
        end: {
          line: 261,
          column: 65
        }
      },
      "126": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 38
        }
      },
      "127": {
        start: {
          line: 264,
          column: 31
        },
        end: {
          line: 264,
          column: 71
        }
      },
      "128": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 44
        }
      },
      "129": {
        start: {
          line: 267,
          column: 31
        },
        end: {
          line: 267,
          column: 71
        }
      },
      "130": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 44
        }
      },
      "131": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "132": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 79
        }
      },
      "133": {
        start: {
          line: 274,
          column: 27
        },
        end: {
          line: 274,
          column: 60
        }
      },
      "134": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 36
        }
      },
      "135": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 69
        }
      },
      "136": {
        start: {
          line: 279,
          column: 31
        },
        end: {
          line: 279,
          column: 48
        }
      },
      "137": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 68
        }
      },
      "138": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 297,
          column: 13
        }
      },
      "139": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 48
        }
      },
      "140": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 287,
          column: 17
        }
      },
      "141": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 84
        }
      },
      "142": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 72
        }
      },
      "143": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 46
        }
      },
      "144": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "145": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 294,
          column: 23
        }
      },
      "146": {
        start: {
          line: 293,
          column: 48
        },
        end: {
          line: 293,
          column: 57
        }
      },
      "147": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 74
        }
      },
      "148": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "149": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 308,
          column: 19
        }
      },
      "150": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 67
        }
      },
      "151": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 91
        }
      },
      "152": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 131
        }
      },
      "153": {
        start: {
          line: 325,
          column: 26
        },
        end: {
          line: 325,
          column: 36
        }
      },
      "154": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "155": {
        start: {
          line: 328,
          column: 24
        },
        end: {
          line: 328,
          column: 88
        }
      },
      "156": {
        start: {
          line: 328,
          column: 59
        },
        end: {
          line: 328,
          column: 87
        }
      },
      "157": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 345,
          column: 15
        }
      },
      "158": {
        start: {
          line: 330,
          column: 31
        },
        end: {
          line: 330,
          column: 47
        }
      },
      "159": {
        start: {
          line: 331,
          column: 32
        },
        end: {
          line: 334,
          column: 50
        }
      },
      "160": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 37
        }
      },
      "161": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 69
        }
      },
      "162": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 340,
          column: 19
        }
      },
      "163": {
        start: {
          line: 336,
          column: 36
        },
        end: {
          line: 336,
          column: 58
        }
      },
      "164": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 337,
          column: 42
        }
      },
      "165": {
        start: {
          line: 338,
          column: 20
        },
        end: {
          line: 338,
          column: 37
        }
      },
      "166": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 37
        }
      },
      "167": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 344,
          column: 19
        }
      },
      "168": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 342,
          column: 42
        }
      },
      "169": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 34
        }
      },
      "170": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 88
        }
      },
      "171": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 24
        }
      },
      "172": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "173": {
        start: {
          line: 361,
          column: 24
        },
        end: {
          line: 361,
          column: 88
        }
      },
      "174": {
        start: {
          line: 361,
          column: 59
        },
        end: {
          line: 361,
          column: 87
        }
      },
      "175": {
        start: {
          line: 362,
          column: 29
        },
        end: {
          line: 362,
          column: 52
        }
      },
      "176": {
        start: {
          line: 363,
          column: 30
        },
        end: {
          line: 363,
          column: 40
        }
      },
      "177": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 386,
          column: 15
        }
      },
      "178": {
        start: {
          line: 365,
          column: 31
        },
        end: {
          line: 365,
          column: 47
        }
      },
      "179": {
        start: {
          line: 366,
          column: 32
        },
        end: {
          line: 369,
          column: 50
        }
      },
      "180": {
        start: {
          line: 367,
          column: 20
        },
        end: {
          line: 367,
          column: 37
        }
      },
      "181": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 72
        }
      },
      "182": {
        start: {
          line: 370,
          column: 36
        },
        end: {
          line: 370,
          column: 37
        }
      },
      "183": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 373,
          column: 19
        }
      },
      "184": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 43
        }
      },
      "185": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 381,
          column: 19
        }
      },
      "186": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 49
        }
      },
      "187": {
        start: {
          line: 376,
          column: 37
        },
        end: {
          line: 376,
          column: 68
        }
      },
      "188": {
        start: {
          line: 377,
          column: 39
        },
        end: {
          line: 377,
          column: 63
        }
      },
      "189": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 378,
          column: 42
        }
      },
      "190": {
        start: {
          line: 379,
          column: 20
        },
        end: {
          line: 379,
          column: 37
        }
      },
      "191": {
        start: {
          line: 380,
          column: 20
        },
        end: {
          line: 380,
          column: 40
        }
      },
      "192": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 385,
          column: 19
        }
      },
      "193": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 42
        }
      },
      "194": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 384,
          column: 34
        }
      },
      "195": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 91
        }
      },
      "196": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 21
        }
      },
      "197": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "198": {
        start: {
          line: 402,
          column: 24
        },
        end: {
          line: 402,
          column: 88
        }
      },
      "199": {
        start: {
          line: 402,
          column: 59
        },
        end: {
          line: 402,
          column: 87
        }
      },
      "200": {
        start: {
          line: 403,
          column: 32
        },
        end: {
          line: 403,
          column: 34
        }
      },
      "201": {
        start: {
          line: 404,
          column: 34
        },
        end: {
          line: 404,
          column: 35
        }
      },
      "202": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 428,
          column: 13
        }
      },
      "203": {
        start: {
          line: 405,
          column: 25
        },
        end: {
          line: 405,
          column: 26
        }
      },
      "204": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 427,
          column: 17
        }
      },
      "205": {
        start: {
          line: 407,
          column: 20
        },
        end: {
          line: 423,
          column: 23
        }
      },
      "206": {
        start: {
          line: 408,
          column: 39
        },
        end: {
          line: 408,
          column: 55
        }
      },
      "207": {
        start: {
          line: 409,
          column: 40
        },
        end: {
          line: 412,
          column: 32
        }
      },
      "208": {
        start: {
          line: 410,
          column: 28
        },
        end: {
          line: 410,
          column: 45
        }
      },
      "209": {
        start: {
          line: 411,
          column: 28
        },
        end: {
          line: 411,
          column: 38
        }
      },
      "210": {
        start: {
          line: 413,
          column: 24
        },
        end: {
          line: 418,
          column: 27
        }
      },
      "211": {
        start: {
          line: 414,
          column: 28
        },
        end: {
          line: 414,
          column: 46
        }
      },
      "212": {
        start: {
          line: 415,
          column: 28
        },
        end: {
          line: 415,
          column: 50
        }
      },
      "213": {
        start: {
          line: 416,
          column: 28
        },
        end: {
          line: 416,
          column: 45
        }
      },
      "214": {
        start: {
          line: 417,
          column: 28
        },
        end: {
          line: 417,
          column: 38
        }
      },
      "215": {
        start: {
          line: 419,
          column: 24
        },
        end: {
          line: 422,
          column: 27
        }
      },
      "216": {
        start: {
          line: 420,
          column: 28
        },
        end: {
          line: 420,
          column: 50
        }
      },
      "217": {
        start: {
          line: 421,
          column: 28
        },
        end: {
          line: 421,
          column: 38
        }
      },
      "218": {
        start: {
          line: 429,
          column: 31
        },
        end: {
          line: 429,
          column: 84
        }
      },
      "219": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 58
        }
      },
      "220": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 92
        }
      },
      "221": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 23
        }
      },
      "222": {
        start: {
          line: 444,
          column: 23
        },
        end: {
          line: 444,
          column: 25
        }
      },
      "223": {
        start: {
          line: 445,
          column: 20
        },
        end: {
          line: 445,
          column: 30
        }
      },
      "224": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "225": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 453,
          column: 15
        }
      },
      "226": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 463,
          column: 9
        }
      },
      "227": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 462,
          column: 15
        }
      },
      "228": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 472,
          column: 9
        }
      },
      "229": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 471,
          column: 15
        }
      },
      "230": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "231": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 480,
          column: 15
        }
      },
      "232": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 22
        }
      },
      "233": {
        start: {
          line: 491,
          column: 20
        },
        end: {
          line: 491,
          column: 23
        }
      },
      "234": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 496,
          column: 9
        }
      },
      "235": {
        start: {
          line: 494,
          column: 35
        },
        end: {
          line: 494,
          column: 100
        }
      },
      "236": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 36
        }
      },
      "237": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 501,
          column: 9
        }
      },
      "238": {
        start: {
          line: 499,
          column: 38
        },
        end: {
          line: 499,
          column: 74
        }
      },
      "239": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 500,
          column: 39
        }
      },
      "240": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "241": {
        start: {
          line: 504,
          column: 38
        },
        end: {
          line: 504,
          column: 109
        }
      },
      "242": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 39
        }
      },
      "243": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 508,
          column: 50
        }
      },
      "244": {
        start: {
          line: 510,
          column: 31
        },
        end: {
          line: 510,
          column: 91
        }
      },
      "245": {
        start: {
          line: 510,
          column: 58
        },
        end: {
          line: 510,
          column: 83
        }
      },
      "246": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 37
        }
      },
      "247": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 49
        }
      },
      "248": {
        start: {
          line: 522,
          column: 34
        },
        end: {
          line: 522,
          column: 85
        }
      },
      "249": {
        start: {
          line: 522,
          column: 59
        },
        end: {
          line: 522,
          column: 84
        }
      },
      "250": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 525,
          column: 9
        }
      },
      "251": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 524,
          column: 25
        }
      },
      "252": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 529,
          column: 9
        }
      },
      "253": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 528,
          column: 25
        }
      },
      "254": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 533,
          column: 9
        }
      },
      "255": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 532,
          column: 25
        }
      },
      "256": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 20
        }
      },
      "257": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 34
        }
      },
      "258": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 38
        }
      },
      "259": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 32
        }
      },
      "260": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 551,
          column: 15
        }
      },
      "261": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 562,
          column: 9
        }
      },
      "262": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 561,
          column: 58
        }
      },
      "263": {
        start: {
          line: 563,
          column: 24
        },
        end: {
          line: 563,
          column: 65
        }
      },
      "264": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 41
        }
      },
      "265": {
        start: {
          line: 566,
          column: 31
        },
        end: {
          line: 566,
          column: 35
        }
      },
      "266": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 569,
          column: 9
        }
      },
      "267": {
        start: {
          line: 568,
          column: 12
        },
        end: {
          line: 568,
          column: 63
        }
      },
      "268": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 592,
          column: 9
        }
      },
      "269": {
        start: {
          line: 578,
          column: 23
        },
        end: {
          line: 578,
          column: 86
        }
      },
      "270": {
        start: {
          line: 578,
          column: 58
        },
        end: {
          line: 578,
          column: 85
        }
      },
      "271": {
        start: {
          line: 579,
          column: 25
        },
        end: {
          line: 579,
          column: 34
        }
      },
      "272": {
        start: {
          line: 580,
          column: 28
        },
        end: {
          line: 580,
          column: 29
        }
      },
      "273": {
        start: {
          line: 581,
          column: 28
        },
        end: {
          line: 581,
          column: 29
        }
      },
      "274": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 587,
          column: 13
        }
      },
      "275": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 585,
          column: 17
        }
      },
      "276": {
        start: {
          line: 584,
          column: 20
        },
        end: {
          line: 584,
          column: 49
        }
      },
      "277": {
        start: {
          line: 586,
          column: 16
        },
        end: {
          line: 586,
          column: 44
        }
      },
      "278": {
        start: {
          line: 588,
          column: 12
        },
        end: {
          line: 588,
          column: 55
        }
      },
      "279": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 591,
          column: 21
        }
      },
      "280": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 608,
          column: 9
        }
      },
      "281": {
        start: {
          line: 601,
          column: 23
        },
        end: {
          line: 601,
          column: 86
        }
      },
      "282": {
        start: {
          line: 601,
          column: 58
        },
        end: {
          line: 601,
          column: 85
        }
      },
      "283": {
        start: {
          line: 602,
          column: 29
        },
        end: {
          line: 602,
          column: 42
        }
      },
      "284": {
        start: {
          line: 603,
          column: 28
        },
        end: {
          line: 603,
          column: 40
        }
      },
      "285": {
        start: {
          line: 604,
          column: 12
        },
        end: {
          line: 604,
          column: 59
        }
      },
      "286": {
        start: {
          line: 607,
          column: 12
        },
        end: {
          line: 607,
          column: 21
        }
      },
      "287": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 618,
          column: 34
        }
      },
      "288": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 30
        }
      },
      "289": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 625,
          column: 35
        }
      },
      "290": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 626,
          column: 40
        }
      },
      "291": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 627,
          column: 68
        }
      },
      "292": {
        start: {
          line: 630,
          column: 0
        },
        end: {
          line: 630,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 61
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 69
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 82,
            column: 49
          },
          end: {
            line: 82,
            column: 50
          }
        },
        loc: {
          start: {
            line: 82,
            column: 65
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 82
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 86,
            column: 52
          },
          end: {
            line: 86,
            column: 53
          }
        },
        loc: {
          start: {
            line: 86,
            column: 68
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 86
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 94
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 113
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 122,
            column: 37
          },
          end: {
            line: 122,
            column: 38
          }
        },
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 129,
            column: 9
          }
        },
        line: 122
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 132,
            column: 19
          },
          end: {
            line: 132,
            column: 20
          }
        },
        loc: {
          start: {
            line: 132,
            column: 25
          },
          end: {
            line: 132,
            column: 62
          }
        },
        line: 132
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 43
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 139
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 35
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 153
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 26
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 161
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 47
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 171
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 28
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 180
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 183,
            column: 54
          }
        },
        loc: {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 183,
            column: 69
          }
        },
        line: 183
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 186,
            column: 33
          }
        },
        loc: {
          start: {
            line: 186,
            column: 44
          },
          end: {
            line: 186,
            column: 63
          }
        },
        line: 186
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 188,
            column: 49
          },
          end: {
            line: 188,
            column: 50
          }
        },
        loc: {
          start: {
            line: 188,
            column: 61
          },
          end: {
            line: 188,
            column: 121
          }
        },
        line: 188
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 188,
            column: 83
          },
          end: {
            line: 188,
            column: 84
          }
        },
        loc: {
          start: {
            line: 188,
            column: 88
          },
          end: {
            line: 188,
            column: 113
          }
        },
        line: 188
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 205
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 42
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 220
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 43
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 241
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 293,
            column: 43
          },
          end: {
            line: 293,
            column: 44
          }
        },
        loc: {
          start: {
            line: 293,
            column: 48
          },
          end: {
            line: 293,
            column: 57
          }
        },
        line: 293
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 37
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 324
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 328,
            column: 53
          },
          end: {
            line: 328,
            column: 54
          }
        },
        loc: {
          start: {
            line: 328,
            column: 59
          },
          end: {
            line: 328,
            column: 87
          }
        },
        line: 328
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 329,
            column: 31
          },
          end: {
            line: 329,
            column: 32
          }
        },
        loc: {
          start: {
            line: 329,
            column: 52
          },
          end: {
            line: 345,
            column: 13
          }
        },
        line: 329
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 331,
            column: 43
          },
          end: {
            line: 331,
            column: 44
          }
        },
        loc: {
          start: {
            line: 331,
            column: 49
          },
          end: {
            line: 334,
            column: 17
          }
        },
        line: 331
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 335,
            column: 73
          },
          end: {
            line: 335,
            column: 74
          }
        },
        loc: {
          start: {
            line: 335,
            column: 79
          },
          end: {
            line: 340,
            column: 17
          }
        },
        line: 335
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 341,
            column: 35
          },
          end: {
            line: 341,
            column: 36
          }
        },
        loc: {
          start: {
            line: 341,
            column: 46
          },
          end: {
            line: 344,
            column: 17
          }
        },
        line: 341
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 40
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 358
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 361,
            column: 53
          },
          end: {
            line: 361,
            column: 54
          }
        },
        loc: {
          start: {
            line: 361,
            column: 59
          },
          end: {
            line: 361,
            column: 87
          }
        },
        line: 361
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 364,
            column: 31
          },
          end: {
            line: 364,
            column: 32
          }
        },
        loc: {
          start: {
            line: 364,
            column: 52
          },
          end: {
            line: 386,
            column: 13
          }
        },
        line: 364
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 366,
            column: 43
          },
          end: {
            line: 366,
            column: 44
          }
        },
        loc: {
          start: {
            line: 366,
            column: 49
          },
          end: {
            line: 369,
            column: 17
          }
        },
        line: 366
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 371,
            column: 73
          },
          end: {
            line: 371,
            column: 74
          }
        },
        loc: {
          start: {
            line: 371,
            column: 79
          },
          end: {
            line: 373,
            column: 17
          }
        },
        line: 371
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 374,
            column: 34
          },
          end: {
            line: 374,
            column: 35
          }
        },
        loc: {
          start: {
            line: 374,
            column: 44
          },
          end: {
            line: 381,
            column: 17
          }
        },
        line: 374
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 382,
            column: 35
          },
          end: {
            line: 382,
            column: 36
          }
        },
        loc: {
          start: {
            line: 382,
            column: 46
          },
          end: {
            line: 385,
            column: 17
          }
        },
        line: 382
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 40
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 399
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 402,
            column: 53
          },
          end: {
            line: 402,
            column: 54
          }
        },
        loc: {
          start: {
            line: 402,
            column: 59
          },
          end: {
            line: 402,
            column: 87
          }
        },
        line: 402
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 407,
            column: 38
          },
          end: {
            line: 407,
            column: 39
          }
        },
        loc: {
          start: {
            line: 407,
            column: 59
          },
          end: {
            line: 423,
            column: 21
          }
        },
        line: 407
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 409,
            column: 51
          },
          end: {
            line: 409,
            column: 52
          }
        },
        loc: {
          start: {
            line: 409,
            column: 57
          },
          end: {
            line: 412,
            column: 25
          }
        },
        line: 409
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 413,
            column: 81
          },
          end: {
            line: 413,
            column: 82
          }
        },
        loc: {
          start: {
            line: 413,
            column: 87
          },
          end: {
            line: 418,
            column: 25
          }
        },
        line: 413
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 419,
            column: 43
          },
          end: {
            line: 419,
            column: 44
          }
        },
        loc: {
          start: {
            line: 419,
            column: 49
          },
          end: {
            line: 422,
            column: 25
          }
        },
        line: 419
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 33
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 443
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 34
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 490
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 510,
            column: 53
          },
          end: {
            line: 510,
            column: 54
          }
        },
        loc: {
          start: {
            line: 510,
            column: 58
          },
          end: {
            line: 510,
            column: 83
          }
        },
        line: 510
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 520,
            column: 4
          },
          end: {
            line: 520,
            column: 5
          }
        },
        loc: {
          start: {
            line: 520,
            column: 35
          },
          end: {
            line: 535,
            column: 5
          }
        },
        line: 520
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 522,
            column: 54
          },
          end: {
            line: 522,
            column: 55
          }
        },
        loc: {
          start: {
            line: 522,
            column: 59
          },
          end: {
            line: 522,
            column: 84
          }
        },
        line: 522
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 542,
            column: 5
          }
        },
        loc: {
          start: {
            line: 542,
            column: 45
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 542
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 559,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        loc: {
          start: {
            line: 559,
            column: 62
          },
          end: {
            line: 570,
            column: 5
          }
        },
        line: 559
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 576,
            column: 4
          },
          end: {
            line: 576,
            column: 5
          }
        },
        loc: {
          start: {
            line: 576,
            column: 24
          },
          end: {
            line: 593,
            column: 5
          }
        },
        line: 576
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 578,
            column: 52
          },
          end: {
            line: 578,
            column: 53
          }
        },
        loc: {
          start: {
            line: 578,
            column: 58
          },
          end: {
            line: 578,
            column: 85
          }
        },
        line: 578
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 599,
            column: 4
          },
          end: {
            line: 599,
            column: 5
          }
        },
        loc: {
          start: {
            line: 599,
            column: 27
          },
          end: {
            line: 609,
            column: 5
          }
        },
        line: 599
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 601,
            column: 52
          },
          end: {
            line: 601,
            column: 53
          }
        },
        loc: {
          start: {
            line: 601,
            column: 58
          },
          end: {
            line: 601,
            column: 85
          }
        },
        line: 601
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 615,
            column: 5
          }
        },
        loc: {
          start: {
            line: 615,
            column: 34
          },
          end: {
            line: 619,
            column: 5
          }
        },
        line: 615
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 623,
            column: 4
          },
          end: {
            line: 623,
            column: 5
          }
        },
        loc: {
          start: {
            line: 623,
            column: 14
          },
          end: {
            line: 628,
            column: 5
          }
        },
        line: 623
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "21": {
        loc: {
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 172,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 172,
            column: 65
          }
        }, {
          start: {
            line: 172,
            column: 69
          },
          end: {
            line: 172,
            column: 71
          }
        }],
        line: 172
      },
      "22": {
        loc: {
          start: {
            line: 173,
            column: 15
          },
          end: {
            line: 173,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 23
          },
          end: {
            line: 173,
            column: 44
          }
        }, {
          start: {
            line: 173,
            column: 47
          },
          end: {
            line: 173,
            column: 59
          }
        }],
        line: 173
      },
      "23": {
        loc: {
          start: {
            line: 185,
            column: 35
          },
          end: {
            line: 187,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 14
          },
          end: {
            line: 186,
            column: 86
          }
        }, {
          start: {
            line: 187,
            column: 14
          },
          end: {
            line: 187,
            column: 15
          }
        }],
        line: 185
      },
      "24": {
        loc: {
          start: {
            line: 208,
            column: 19
          },
          end: {
            line: 208,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 19
          },
          end: {
            line: 208,
            column: 54
          }
        }, {
          start: {
            line: 208,
            column: 58
          },
          end: {
            line: 208,
            column: 62
          }
        }],
        line: 208
      },
      "25": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "26": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "27": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "28": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 272,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 272,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "29": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 297,
            column: 13
          }
        }, {
          start: {
            line: 289,
            column: 17
          },
          end: {
            line: 297,
            column: 13
          }
        }],
        line: 282
      },
      "30": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 287,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 287,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "31": {
        loc: {
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 296,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 16
          },
          end: {
            line: 296,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "32": {
        loc: {
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "33": {
        loc: {
          start: {
            line: 315,
            column: 73
          },
          end: {
            line: 315,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 98
          },
          end: {
            line: 315,
            column: 111
          }
        }, {
          start: {
            line: 315,
            column: 114
          },
          end: {
            line: 315,
            column: 127
          }
        }],
        line: 315
      },
      "34": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "35": {
        loc: {
          start: {
            line: 450,
            column: 26
          },
          end: {
            line: 450,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 450,
            column: 73
          },
          end: {
            line: 450,
            column: 79
          }
        }, {
          start: {
            line: 450,
            column: 82
          },
          end: {
            line: 450,
            column: 90
          }
        }],
        line: 450
      },
      "36": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 463,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 463,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "37": {
        loc: {
          start: {
            line: 459,
            column: 26
          },
          end: {
            line: 459,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 459,
            column: 79
          },
          end: {
            line: 459,
            column: 85
          }
        }, {
          start: {
            line: 459,
            column: 88
          },
          end: {
            line: 459,
            column: 96
          }
        }],
        line: 459
      },
      "38": {
        loc: {
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 472,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 472,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 465
      },
      "39": {
        loc: {
          start: {
            line: 468,
            column: 26
          },
          end: {
            line: 468,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 79
          },
          end: {
            line: 468,
            column: 85
          }
        }, {
          start: {
            line: 468,
            column: 88
          },
          end: {
            line: 468,
            column: 96
          }
        }],
        line: 468
      },
      "40": {
        loc: {
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "41": {
        loc: {
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "42": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 501,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 501,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "43": {
        loc: {
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "44": {
        loc: {
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "45": {
        loc: {
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 529,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 529,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 527
      },
      "46": {
        loc: {
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 533,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 533,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 531
      },
      "47": {
        loc: {
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 562,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 562,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "48": {
        loc: {
          start: {
            line: 567,
            column: 8
          },
          end: {
            line: 569,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 567,
            column: 8
          },
          end: {
            line: 569,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 567
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f0bf512d97165a2b92e0cf02b248bfa7a230994"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qo9c4urn3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qo9c4urn3();
var __createBinding =
/* istanbul ignore next */
(cov_2qo9c4urn3().s[0]++,
/* istanbul ignore next */
(cov_2qo9c4urn3().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2qo9c4urn3().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_2qo9c4urn3().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_2qo9c4urn3().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2qo9c4urn3().f[0]++;
  cov_2qo9c4urn3().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().b[2][0]++;
    cov_2qo9c4urn3().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2qo9c4urn3().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_2qo9c4urn3().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_2qo9c4urn3().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_2qo9c4urn3().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_2qo9c4urn3().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_2qo9c4urn3().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_2qo9c4urn3().b[5][1]++,
  /* istanbul ignore next */
  (cov_2qo9c4urn3().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_2qo9c4urn3().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().b[3][0]++;
    cov_2qo9c4urn3().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[1]++;
        cov_2qo9c4urn3().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2qo9c4urn3().b[3][1]++;
  }
  cov_2qo9c4urn3().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_2qo9c4urn3().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_2qo9c4urn3().f[2]++;
  cov_2qo9c4urn3().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().b[7][0]++;
    cov_2qo9c4urn3().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_2qo9c4urn3().b[7][1]++;
  }
  cov_2qo9c4urn3().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_2qo9c4urn3().s[11]++,
/* istanbul ignore next */
(cov_2qo9c4urn3().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_2qo9c4urn3().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_2qo9c4urn3().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_2qo9c4urn3().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_2qo9c4urn3().f[3]++;
  cov_2qo9c4urn3().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_2qo9c4urn3().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_2qo9c4urn3().f[4]++;
  cov_2qo9c4urn3().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_2qo9c4urn3().s[14]++,
/* istanbul ignore next */
(cov_2qo9c4urn3().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_2qo9c4urn3().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_2qo9c4urn3().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_2qo9c4urn3().f[5]++;
  cov_2qo9c4urn3().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[6]++;
    cov_2qo9c4urn3().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[17]++, []);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_2qo9c4urn3().b[12][0]++;
          cov_2qo9c4urn3().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_2qo9c4urn3().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_2qo9c4urn3().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[8]++;
    cov_2qo9c4urn3().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[13][0]++;
      cov_2qo9c4urn3().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[26]++, {});
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[15][0]++;
      cov_2qo9c4urn3().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_2qo9c4urn3().b[16][0]++;
          cov_2qo9c4urn3().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_2qo9c4urn3().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[15][1]++;
    }
    cov_2qo9c4urn3().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_2qo9c4urn3().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2qo9c4urn3().s[36]++;
exports.TunnelHealthMonitor = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2qo9c4urn3().s[37]++, require("events"));
const ssh_tunnel_manager_1 =
/* istanbul ignore next */
(cov_2qo9c4urn3().s[38]++, require("./ssh-tunnel-manager"));
/**
 * Tunnel Health Monitor
 * Monitors SSH tunnel health with real-time metrics collection and alerting
 */
class TunnelHealthMonitor extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(logger, tunnelManager, stateTracker, config) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[9]++;
    cov_2qo9c4urn3().s[39]++;
    super();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[40]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[41]++;
    this.tunnelManager = tunnelManager;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[42]++;
    this.stateTracker = stateTracker;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[43]++;
    this.healthMetrics = new Map();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[44]++;
    this.performanceHistory = new Map();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[45]++;
    this.monitoringIntervals = new Map();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[46]++;
    this.isMonitoring = false;
    // Default configuration
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[47]++;
    this.config = {
      checkInterval: 30000,
      // 30 seconds
      maxLatency: 1000,
      // 1 second
      maxPacketLoss: 5,
      // 5%
      minThroughput: 1024,
      // 1 KB/s
      failureThreshold: 3,
      healthCheckTimeout: 10000,
      // 10 seconds
      enablePerformanceMonitoring: true,
      ...config
    };
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[48]++;
    this.logger.info('Tunnel Health Monitor initialized', this.config);
  }
  /**
   * Start monitoring all tunnel connections
   */
  startMonitoring() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[10]++;
    cov_2qo9c4urn3().s[49]++;
    if (this.isMonitoring) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[17][0]++;
      cov_2qo9c4urn3().s[50]++;
      this.logger.warn('Health monitoring is already running');
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[17][1]++;
    }
    cov_2qo9c4urn3().s[52]++;
    this.isMonitoring = true;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[53]++;
    this.logger.info('Starting tunnel health monitoring');
    // Monitor existing connections
    const connections =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[54]++, this.tunnelManager.getAllConnections());
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[55]++;
    for (const connection of connections) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[56]++;
      this.startMonitoringConnection(connection.id);
    }
    // Listen for new connections
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[57]++;
    this.tunnelManager.on('tunnelConnected', connection => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[11]++;
      cov_2qo9c4urn3().s[58]++;
      this.startMonitoringConnection(connection.id);
    });
    // Listen for disconnections
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[59]++;
    this.tunnelManager.on('tunnelDisconnected', connection => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[12]++;
      cov_2qo9c4urn3().s[60]++;
      this.stopMonitoringConnection(connection.id);
    });
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[61]++;
    this.emit('monitoringStarted');
  }
  /**
   * Stop monitoring all tunnel connections
   */
  stopMonitoring() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[13]++;
    cov_2qo9c4urn3().s[62]++;
    if (!this.isMonitoring) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[18][0]++;
      cov_2qo9c4urn3().s[63]++;
      this.logger.warn('Health monitoring is not running');
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[64]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[18][1]++;
    }
    cov_2qo9c4urn3().s[65]++;
    this.isMonitoring = false;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[66]++;
    this.logger.info('Stopping tunnel health monitoring');
    // Clear all monitoring intervals
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[67]++;
    for (const [connectionId, interval] of this.monitoringIntervals.entries()) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[68]++;
      clearInterval(interval);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[69]++;
      this.monitoringIntervals.delete(connectionId);
    }
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[70]++;
    this.emit('monitoringStopped');
  }
  /**
   * Start monitoring a specific connection
   *
   * @param connectionId - Connection identifier
   */
  startMonitoringConnection(connectionId) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[14]++;
    cov_2qo9c4urn3().s[71]++;
    if (this.monitoringIntervals.has(connectionId)) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[19][0]++;
      cov_2qo9c4urn3().s[72]++;
      this.logger.debug(`Already monitoring connection: ${connectionId}`);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[73]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[19][1]++;
    }
    cov_2qo9c4urn3().s[74]++;
    this.logger.info(`Starting health monitoring for connection: ${connectionId}`);
    // Initialize health metrics
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[75]++;
    this.initializeHealthMetrics(connectionId);
    // Start periodic health checks
    const interval =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[76]++, setInterval(async () => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[15]++;
      cov_2qo9c4urn3().s[77]++;
      try {
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[78]++;
        await this.performHealthCheck(connectionId);
      } catch (error) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[79]++;
        this.logger.error(`Health check failed for connection ${connectionId}`, error);
      }
    }, this.config.checkInterval));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[80]++;
    this.monitoringIntervals.set(connectionId, interval);
    // Perform initial health check
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[81]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[16]++;
      cov_2qo9c4urn3().s[82]++;
      return this.performHealthCheck(connectionId);
    }, 1000);
  }
  /**
   * Stop monitoring a specific connection
   *
   * @param connectionId - Connection identifier
   */
  stopMonitoringConnection(connectionId) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[17]++;
    const interval =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[83]++, this.monitoringIntervals.get(connectionId));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[84]++;
    if (interval) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[20][0]++;
      cov_2qo9c4urn3().s[85]++;
      clearInterval(interval);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[86]++;
      this.monitoringIntervals.delete(connectionId);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[87]++;
      this.logger.info(`Stopped health monitoring for connection: ${connectionId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[20][1]++;
    }
  }
  /**
   * Get health metrics for a connection
   *
   * @param connectionId - Connection identifier
   * @returns Health metrics or undefined
   */
  getHealthMetrics(connectionId) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[18]++;
    cov_2qo9c4urn3().s[88]++;
    return this.healthMetrics.get(connectionId);
  }
  /**
   * Get health metrics for all connections
   *
   * @returns Map of all health metrics
   */
  getAllHealthMetrics() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[19]++;
    cov_2qo9c4urn3().s[89]++;
    return new Map(this.healthMetrics);
  }
  /**
   * Get performance history for a connection
   *
   * @param connectionId - Connection identifier
   * @param limit - Maximum number of history entries
   * @returns Array of performance metrics
   */
  getPerformanceHistory(connectionId, limit) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[20]++;
    const history =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[90]++,
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[21][0]++, this.performanceHistory.get(connectionId)) ||
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[21][1]++, []));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[91]++;
    return limit ?
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[22][0]++, history.slice(-limit)) :
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[22][1]++, [...history]);
  }
  /**
   * Get overall system health status
   *
   * @returns System health summary
   */
  getSystemHealthStatus() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[21]++;
    const allMetrics =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[92]++, Array.from(this.healthMetrics.values()));
    const totalConnections =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[93]++, allMetrics.length);
    const healthyConnections =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[94]++, allMetrics.filter(m => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[22]++;
      cov_2qo9c4urn3().s[95]++;
      return m.isHealthy;
    }).length);
    const unhealthyConnections =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[96]++, totalConnections - healthyConnections);
    const averageHealthScore =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[97]++, totalConnections > 0 ?
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[23][0]++, allMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[23]++;
      cov_2qo9c4urn3().s[98]++;
      return sum + m.healthScore;
    }, 0) / totalConnections) :
    /* istanbul ignore next */
    (cov_2qo9c4urn3().b[23][1]++, 0));
    const criticalIssues =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[99]++, allMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[24]++;
      cov_2qo9c4urn3().s[100]++;
      return sum + m.issues.filter(i => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[25]++;
        cov_2qo9c4urn3().s[101]++;
        return i.severity === 'CRITICAL';
      }).length;
    }, 0));
    const systemHealthScore =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[102]++, Math.max(0, averageHealthScore - criticalIssues * 10));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[103]++;
    return {
      totalConnections,
      healthyConnections,
      unhealthyConnections,
      averageHealthScore,
      criticalIssues,
      systemHealthScore
    };
  }
  /**
   * Force health check for a connection
   *
   * @param connectionId - Connection identifier
   * @returns Health check results
   */
  async forceHealthCheck(connectionId) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[26]++;
    cov_2qo9c4urn3().s[104]++;
    try {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[105]++;
      await this.performHealthCheck(connectionId);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[106]++;
      return /* istanbul ignore next */(cov_2qo9c4urn3().b[24][0]++, this.getHealthMetrics(connectionId)) ||
      /* istanbul ignore next */
      (cov_2qo9c4urn3().b[24][1]++, null);
    } catch (error) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[107]++;
      this.logger.error(`Forced health check failed for connection ${connectionId}`, error);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[108]++;
      return null;
    }
  }
  /**
   * Initialize health metrics for a connection
   *
   * @param connectionId - Connection identifier
   */
  initializeHealthMetrics(connectionId) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[27]++;
    const metrics =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[109]++, {
      connectionId,
      isHealthy: false,
      latency: 0,
      throughput: 0,
      packetLoss: 0,
      uptime: 0,
      lastHealthCheck: new Date(),
      consecutiveFailures: 0,
      healthScore: 0,
      issues: []
    });
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[110]++;
    this.healthMetrics.set(connectionId, metrics);
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[111]++;
    this.performanceHistory.set(connectionId, []);
  }
  /**
   * Perform comprehensive health check for a connection
   *
   * @param connectionId - Connection identifier
   */
  async performHealthCheck(connectionId) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[28]++;
    const connection =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[112]++, this.tunnelManager.getConnection(connectionId));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[113]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[25][0]++;
      cov_2qo9c4urn3().s[114]++;
      this.logger.warn(`Connection not found for health check: ${connectionId}`);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[115]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[25][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[116]++, this.healthMetrics.get(connectionId));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[117]++;
    if (!metrics) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[26][0]++;
      cov_2qo9c4urn3().s[118]++;
      this.logger.warn(`Health metrics not found for connection: ${connectionId}`);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[119]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[26][1]++;
    }
    cov_2qo9c4urn3().s[120]++;
    try {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[121]++;
      // Update last health check timestamp
      metrics.lastHealthCheck = new Date();
      // Check connection state
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[122]++;
      if (connection.state !== ssh_tunnel_manager_1.TunnelState.CONNECTED) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().b[27][0]++;
        cov_2qo9c4urn3().s[123]++;
        this.markConnectionUnhealthy(metrics, 'Connection not in CONNECTED state');
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[124]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2qo9c4urn3().b[27][1]++;
      }
      // Perform latency test
      const latency =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[125]++, await this.measureLatency(connection));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[126]++;
      metrics.latency = latency;
      // Perform throughput test
      const throughput =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[127]++, await this.measureThroughput(connection));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[128]++;
      metrics.throughput = throughput;
      // Measure packet loss
      const packetLoss =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[129]++, await this.measurePacketLoss(connection));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[130]++;
      metrics.packetLoss = packetLoss;
      // Calculate uptime
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[131]++;
      if (connection.connectedAt) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().b[28][0]++;
        cov_2qo9c4urn3().s[132]++;
        metrics.uptime = Date.now() - connection.connectedAt.getTime();
      } else
      /* istanbul ignore next */
      {
        cov_2qo9c4urn3().b[28][1]++;
      }
      // Analyze health issues
      const issues =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[133]++, this.analyzeHealthIssues(metrics));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[134]++;
      metrics.issues = issues;
      // Calculate health score
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[135]++;
      metrics.healthScore = this.calculateHealthScore(metrics);
      // Determine overall health status
      const wasHealthy =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[136]++, metrics.isHealthy);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[137]++;
      metrics.isHealthy = this.determineHealthStatus(metrics);
      // Handle health status changes
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[138]++;
      if (metrics.isHealthy) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().b[29][0]++;
        cov_2qo9c4urn3().s[139]++;
        metrics.consecutiveFailures = 0;
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[140]++;
        if (!wasHealthy) {
          /* istanbul ignore next */
          cov_2qo9c4urn3().b[30][0]++;
          cov_2qo9c4urn3().s[141]++;
          this.logger.info(`Connection health restored: ${connectionId}`);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[142]++;
          this.emit('connectionHealthy', connection, metrics);
        } else
        /* istanbul ignore next */
        {
          cov_2qo9c4urn3().b[30][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_2qo9c4urn3().b[29][1]++;
        cov_2qo9c4urn3().s[143]++;
        metrics.consecutiveFailures++;
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[144]++;
        if (wasHealthy) {
          /* istanbul ignore next */
          cov_2qo9c4urn3().b[31][0]++;
          cov_2qo9c4urn3().s[145]++;
          this.logger.warn(`Connection health degraded: ${connectionId}`, {
            issues: issues.map(i => {
              /* istanbul ignore next */
              cov_2qo9c4urn3().f[29]++;
              cov_2qo9c4urn3().s[146]++;
              return i.message;
            })
          });
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[147]++;
          this.emit('connectionUnhealthy', connection, metrics);
        } else
        /* istanbul ignore next */
        {
          cov_2qo9c4urn3().b[31][1]++;
        }
      }
      // Store performance metrics
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[148]++;
      if (this.config.enablePerformanceMonitoring) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().b[32][0]++;
        cov_2qo9c4urn3().s[149]++;
        this.storePerformanceMetrics(connectionId, {
          timestamp: new Date(),
          latency,
          throughput,
          packetLoss,
          cpuUsage: await this.getCPUUsage(),
          memoryUsage: await this.getMemoryUsage(),
          networkUtilization: await this.getNetworkUtilization()
        });
      } else
      /* istanbul ignore next */
      {
        cov_2qo9c4urn3().b[32][1]++;
      }
      // Emit health check completed event
      cov_2qo9c4urn3().s[150]++;
      this.emit('healthCheckCompleted', connection, metrics);
    } catch (error) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[151]++;
      this.logger.error(`Health check failed for connection ${connectionId}`, error);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[152]++;
      this.markConnectionUnhealthy(metrics, `Health check error: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_2qo9c4urn3().b[33][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2qo9c4urn3().b[33][1]++, String(error))}`);
    }
  }
  /**
   * Measure connection latency using ping-like test
   *
   * @param connection - Tunnel connection
   * @returns Latency in milliseconds
   */
  async measureLatency(connection) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[30]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[153]++, Date.now());
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[154]++;
    try {
      // Simple TCP connection test to local tunnel port
      const net =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[155]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[31]++;
        cov_2qo9c4urn3().s[156]++;
        return __importStar(require('net'));
      }));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[157]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[32]++;
        const socket =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[158]++, new net.Socket());
        const timeout =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[159]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[33]++;
          cov_2qo9c4urn3().s[160]++;
          socket.destroy();
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[161]++;
          reject(new Error('Latency measurement timeout'));
        }, this.config.healthCheckTimeout));
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[162]++;
        socket.connect(connection.config.localPort, 'localhost', () => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[34]++;
          const latency =
          /* istanbul ignore next */
          (cov_2qo9c4urn3().s[163]++, Date.now() - startTime);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[164]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[165]++;
          socket.destroy();
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[166]++;
          resolve(latency);
        });
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[167]++;
        socket.on('error', error => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[35]++;
          cov_2qo9c4urn3().s[168]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[169]++;
          reject(error);
        });
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[170]++;
      this.logger.debug(`Latency measurement failed for ${connection.id}`, error);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[171]++;
      return 9999; // High latency indicates problem
    }
  }
  /**
   * Measure connection throughput
   *
   * @param connection - Tunnel connection
   * @returns Throughput in bytes per second
   */
  async measureThroughput(connection) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[36]++;
    cov_2qo9c4urn3().s[172]++;
    try {
      // Simple throughput test by sending small data packet
      const net =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[173]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[37]++;
        cov_2qo9c4urn3().s[174]++;
        return __importStar(require('net'));
      }));
      const testData =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[175]++, Buffer.alloc(1024, 'A')); // 1KB test data
      const startTime =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[176]++, Date.now());
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[177]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[38]++;
        const socket =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[178]++, new net.Socket());
        const timeout =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[179]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[39]++;
          cov_2qo9c4urn3().s[180]++;
          socket.destroy();
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[181]++;
          reject(new Error('Throughput measurement timeout'));
        }, this.config.healthCheckTimeout));
        let bytesReceived =
        /* istanbul ignore next */
        (cov_2qo9c4urn3().s[182]++, 0);
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[183]++;
        socket.connect(connection.config.localPort, 'localhost', () => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[40]++;
          cov_2qo9c4urn3().s[184]++;
          socket.write(testData);
        });
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[185]++;
        socket.on('data', data => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[41]++;
          cov_2qo9c4urn3().s[186]++;
          bytesReceived += data.length;
          const duration =
          /* istanbul ignore next */
          (cov_2qo9c4urn3().s[187]++, (Date.now() - startTime) / 1000); // seconds
          const throughput =
          /* istanbul ignore next */
          (cov_2qo9c4urn3().s[188]++, bytesReceived / duration);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[189]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[190]++;
          socket.destroy();
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[191]++;
          resolve(throughput);
        });
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[192]++;
        socket.on('error', error => {
          /* istanbul ignore next */
          cov_2qo9c4urn3().f[42]++;
          cov_2qo9c4urn3().s[193]++;
          clearTimeout(timeout);
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[194]++;
          reject(error);
        });
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[195]++;
      this.logger.debug(`Throughput measurement failed for ${connection.id}`, error);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[196]++;
      return 0; // No throughput indicates problem
    }
  }
  /**
   * Measure packet loss percentage
   *
   * @param connection - Tunnel connection
   * @returns Packet loss percentage
   */
  async measurePacketLoss(connection) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[43]++;
    cov_2qo9c4urn3().s[197]++;
    try {
      // Simple packet loss test by sending multiple small packets
      const net =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[198]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[44]++;
        cov_2qo9c4urn3().s[199]++;
        return __importStar(require('net'));
      }));
      const packetCount =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[200]++, 10);
      let packetsReceived =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[201]++, 0);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[202]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[203]++, 0); i < packetCount; i++) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[204]++;
        try {
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[205]++;
          await new Promise((resolve, reject) => {
            /* istanbul ignore next */
            cov_2qo9c4urn3().f[45]++;
            const socket =
            /* istanbul ignore next */
            (cov_2qo9c4urn3().s[206]++, new net.Socket());
            const timeout =
            /* istanbul ignore next */
            (cov_2qo9c4urn3().s[207]++, setTimeout(() => {
              /* istanbul ignore next */
              cov_2qo9c4urn3().f[46]++;
              cov_2qo9c4urn3().s[208]++;
              socket.destroy();
              /* istanbul ignore next */
              cov_2qo9c4urn3().s[209]++;
              resolve(); // Count as lost packet
            }, 1000));
            /* istanbul ignore next */
            cov_2qo9c4urn3().s[210]++;
            socket.connect(connection.config.localPort, 'localhost', () => {
              /* istanbul ignore next */
              cov_2qo9c4urn3().f[47]++;
              cov_2qo9c4urn3().s[211]++;
              packetsReceived++;
              /* istanbul ignore next */
              cov_2qo9c4urn3().s[212]++;
              clearTimeout(timeout);
              /* istanbul ignore next */
              cov_2qo9c4urn3().s[213]++;
              socket.destroy();
              /* istanbul ignore next */
              cov_2qo9c4urn3().s[214]++;
              resolve();
            });
            /* istanbul ignore next */
            cov_2qo9c4urn3().s[215]++;
            socket.on('error', () => {
              /* istanbul ignore next */
              cov_2qo9c4urn3().f[48]++;
              cov_2qo9c4urn3().s[216]++;
              clearTimeout(timeout);
              /* istanbul ignore next */
              cov_2qo9c4urn3().s[217]++;
              resolve(); // Count as lost packet
            });
          });
        } catch {
          // Packet lost
        }
      }
      const packetLoss =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[218]++, (packetCount - packetsReceived) / packetCount * 100);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[219]++;
      return Math.max(0, Math.min(100, packetLoss));
    } catch (error) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[220]++;
      this.logger.debug(`Packet loss measurement failed for ${connection.id}`, error);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[221]++;
      return 100; // Assume 100% loss on error
    }
  }
  /**
   * Analyze health issues based on metrics
   *
   * @param metrics - Health metrics
   * @returns Array of health issues
   */
  analyzeHealthIssues(metrics) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[49]++;
    const issues =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[222]++, []);
    const now =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[223]++, new Date());
    // Check latency
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[224]++;
    if (metrics.latency > this.config.maxLatency) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[34][0]++;
      cov_2qo9c4urn3().s[225]++;
      issues.push({
        type: 'HIGH_LATENCY',
        severity: metrics.latency > this.config.maxLatency * 2 ?
        /* istanbul ignore next */
        (cov_2qo9c4urn3().b[35][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_2qo9c4urn3().b[35][1]++, 'MEDIUM'),
        message: `High latency detected: ${metrics.latency}ms (max: ${this.config.maxLatency}ms)`,
        timestamp: now
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[34][1]++;
    }
    // Check packet loss
    cov_2qo9c4urn3().s[226]++;
    if (metrics.packetLoss > this.config.maxPacketLoss) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[36][0]++;
      cov_2qo9c4urn3().s[227]++;
      issues.push({
        type: 'PACKET_LOSS',
        severity: metrics.packetLoss > this.config.maxPacketLoss * 2 ?
        /* istanbul ignore next */
        (cov_2qo9c4urn3().b[37][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_2qo9c4urn3().b[37][1]++, 'MEDIUM'),
        message: `High packet loss detected: ${metrics.packetLoss}% (max: ${this.config.maxPacketLoss}%)`,
        timestamp: now
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[36][1]++;
    }
    // Check throughput
    cov_2qo9c4urn3().s[228]++;
    if (metrics.throughput < this.config.minThroughput) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[38][0]++;
      cov_2qo9c4urn3().s[229]++;
      issues.push({
        type: 'LOW_THROUGHPUT',
        severity: metrics.throughput < this.config.minThroughput / 2 ?
        /* istanbul ignore next */
        (cov_2qo9c4urn3().b[39][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_2qo9c4urn3().b[39][1]++, 'MEDIUM'),
        message: `Low throughput detected: ${metrics.throughput} bytes/s (min: ${this.config.minThroughput} bytes/s)`,
        timestamp: now
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[38][1]++;
    }
    // Check connection stability
    cov_2qo9c4urn3().s[230]++;
    if (metrics.consecutiveFailures >= this.config.failureThreshold) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[40][0]++;
      cov_2qo9c4urn3().s[231]++;
      issues.push({
        type: 'CONNECTION_UNSTABLE',
        severity: 'CRITICAL',
        message: `Connection unstable: ${metrics.consecutiveFailures} consecutive failures`,
        timestamp: now
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[40][1]++;
    }
    cov_2qo9c4urn3().s[232]++;
    return issues;
  }
  /**
   * Calculate health score based on metrics
   *
   * @param metrics - Health metrics
   * @returns Health score (0-100)
   */
  calculateHealthScore(metrics) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[50]++;
    let score =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[233]++, 100);
    // Deduct points for high latency
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[234]++;
    if (metrics.latency > this.config.maxLatency) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[41][0]++;
      const latencyPenalty =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[235]++, Math.min(30, (metrics.latency / this.config.maxLatency - 1) * 20));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[236]++;
      score -= latencyPenalty;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[41][1]++;
    }
    // Deduct points for packet loss
    cov_2qo9c4urn3().s[237]++;
    if (metrics.packetLoss > this.config.maxPacketLoss) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[42][0]++;
      const packetLossPenalty =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[238]++, Math.min(40, metrics.packetLoss * 2));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[239]++;
      score -= packetLossPenalty;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[42][1]++;
    }
    // Deduct points for low throughput
    cov_2qo9c4urn3().s[240]++;
    if (metrics.throughput < this.config.minThroughput) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[43][0]++;
      const throughputPenalty =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[241]++, Math.min(20, (1 - metrics.throughput / this.config.minThroughput) * 20));
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[242]++;
      score -= throughputPenalty;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[43][1]++;
    }
    // Deduct points for consecutive failures
    cov_2qo9c4urn3().s[243]++;
    score -= metrics.consecutiveFailures * 10;
    // Deduct points for critical issues
    const criticalIssues =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[244]++, metrics.issues.filter(i => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[51]++;
      cov_2qo9c4urn3().s[245]++;
      return i.severity === 'CRITICAL';
    }).length);
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[246]++;
    score -= criticalIssues * 20;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[247]++;
    return Math.max(0, Math.min(100, score));
  }
  /**
   * Determine overall health status
   *
   * @param metrics - Health metrics
   * @returns True if connection is healthy
   */
  determineHealthStatus(metrics) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[52]++;
    // Connection is unhealthy if there are critical issues
    const hasCriticalIssues =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[248]++, metrics.issues.some(i => {
      /* istanbul ignore next */
      cov_2qo9c4urn3().f[53]++;
      cov_2qo9c4urn3().s[249]++;
      return i.severity === 'CRITICAL';
    }));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[250]++;
    if (hasCriticalIssues) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[44][0]++;
      cov_2qo9c4urn3().s[251]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[44][1]++;
    }
    // Connection is unhealthy if health score is too low
    cov_2qo9c4urn3().s[252]++;
    if (metrics.healthScore < 50) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[45][0]++;
      cov_2qo9c4urn3().s[253]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[45][1]++;
    }
    // Connection is unhealthy if too many consecutive failures
    cov_2qo9c4urn3().s[254]++;
    if (metrics.consecutiveFailures >= this.config.failureThreshold) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[46][0]++;
      cov_2qo9c4urn3().s[255]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[46][1]++;
    }
    cov_2qo9c4urn3().s[256]++;
    return true;
  }
  /**
   * Mark connection as unhealthy
   *
   * @param metrics - Health metrics
   * @param reason - Reason for marking unhealthy
   */
  markConnectionUnhealthy(metrics, reason) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[54]++;
    cov_2qo9c4urn3().s[257]++;
    metrics.isHealthy = false;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[258]++;
    metrics.consecutiveFailures++;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[259]++;
    metrics.healthScore = 0;
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[260]++;
    metrics.issues = [{
      type: 'CONNECTION_UNSTABLE',
      severity: 'CRITICAL',
      message: reason,
      timestamp: new Date()
    }];
  }
  /**
   * Store performance metrics in history
   *
   * @param connectionId - Connection identifier
   * @param performanceMetrics - Performance metrics to store
   */
  storePerformanceMetrics(connectionId, performanceMetrics) {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[55]++;
    cov_2qo9c4urn3().s[261]++;
    if (!this.performanceHistory.has(connectionId)) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[47][0]++;
      cov_2qo9c4urn3().s[262]++;
      this.performanceHistory.set(connectionId, []);
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[47][1]++;
    }
    const history =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[263]++, this.performanceHistory.get(connectionId));
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[264]++;
    history.push(performanceMetrics);
    // Limit history size to prevent memory issues
    const maxHistorySize =
    /* istanbul ignore next */
    (cov_2qo9c4urn3().s[265]++, 1000);
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[266]++;
    if (history.length > maxHistorySize) {
      /* istanbul ignore next */
      cov_2qo9c4urn3().b[48][0]++;
      cov_2qo9c4urn3().s[267]++;
      history.splice(0, history.length - maxHistorySize);
    } else
    /* istanbul ignore next */
    {
      cov_2qo9c4urn3().b[48][1]++;
    }
  }
  /**
   * Get current CPU usage
   *
   * @returns CPU usage percentage
   */
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[56]++;
    cov_2qo9c4urn3().s[268]++;
    try {
      const os =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[269]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[57]++;
        cov_2qo9c4urn3().s[270]++;
        return __importStar(require('os'));
      }));
      const cpus =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[271]++, os.cpus());
      let totalIdle =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[272]++, 0);
      let totalTick =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[273]++, 0);
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[274]++;
      for (const cpu of cpus) {
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[275]++;
        for (const type in cpu.times) {
          /* istanbul ignore next */
          cov_2qo9c4urn3().s[276]++;
          totalTick += cpu.times[type];
        }
        /* istanbul ignore next */
        cov_2qo9c4urn3().s[277]++;
        totalIdle += cpu.times.idle;
      }
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[278]++;
      return 100 - totalIdle / totalTick * 100;
    } catch {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[279]++;
      return 0;
    }
  }
  /**
   * Get current memory usage
   *
   * @returns Memory usage percentage
   */
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[58]++;
    cov_2qo9c4urn3().s[280]++;
    try {
      const os =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[281]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2qo9c4urn3().f[59]++;
        cov_2qo9c4urn3().s[282]++;
        return __importStar(require('os'));
      }));
      const totalMem =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[283]++, os.totalmem());
      const freeMem =
      /* istanbul ignore next */
      (cov_2qo9c4urn3().s[284]++, os.freemem());
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[285]++;
      return (totalMem - freeMem) / totalMem * 100;
    } catch {
      /* istanbul ignore next */
      cov_2qo9c4urn3().s[286]++;
      return 0;
    }
  }
  /**
   * Get current network utilization
   *
   * @returns Network utilization percentage
   */
  async getNetworkUtilization() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[60]++;
    cov_2qo9c4urn3().s[287]++;
    // Simplified network utilization calculation
    // In a real implementation, this would measure actual network traffic
    return Math.random() * 10; // Placeholder
  }
  /**
   * Cleanup monitoring resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_2qo9c4urn3().f[61]++;
    cov_2qo9c4urn3().s[288]++;
    this.stopMonitoring();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[289]++;
    this.healthMetrics.clear();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[290]++;
    this.performanceHistory.clear();
    /* istanbul ignore next */
    cov_2qo9c4urn3().s[291]++;
    this.logger.info('Tunnel health monitor cleanup completed');
  }
}
/* istanbul ignore next */
cov_2qo9c4urn3().s[292]++;
exports.TunnelHealthMonitor = TunnelHealthMonitor;