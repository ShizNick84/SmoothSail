09dd7343c3837be74b63d8a44e64fd0c
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - COMPREHENSIVE LOGGING SYSTEM
 * =============================================================================
 *
 * This module provides a comprehensive logging system with security-focused
 * features for the AI crypto trading agent. All trading operations, security
 * events, and system activities are logged with appropriate detail levels.
 *
 * CRITICAL SECURITY NOTICE:
 * This logging system handles sensitive financial and security data.
 * All logs must be protected and never expose sensitive information.
 *
 * Features:
 * - Multiple log levels with appropriate filtering
 * - Automatic log rotation and archival
 * - Security-aware log sanitization
 * - Structured logging with JSON format
 * - Separate log files for different components
 * - Audit trail capabilities
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_uzcmlkyo7() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\logger.ts";
  var hash = "ce13c38ebcc8fea95b9c6203170c82948ddc999b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "1": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "2": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "3": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "4": {
        start: {
          line: 33,
          column: 18
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "5": {
        start: {
          line: 34,
          column: 36
        },
        end: {
          line: 34,
          column: 89
        }
      },
      "6": {
        start: {
          line: 35,
          column: 15
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "7": {
        start: {
          line: 36,
          column: 13
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "8": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 60
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "10": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 47
        }
      },
      "11": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 58
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 56
        }
      },
      "14": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "15": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "16": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "17": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 75
        }
      },
      "18": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "19": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "20": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "21": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "22": {
        start: {
          line: 177,
          column: 55
        },
        end: {
          line: 177,
          column: 59
        }
      },
      "23": {
        start: {
          line: 179,
          column: 33
        },
        end: {
          line: 179,
          column: 68
        }
      },
      "24": {
        start: {
          line: 180,
          column: 30
        },
        end: {
          line: 180,
          column: 78
        }
      },
      "25": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "26": {
        start: {
          line: 196,
          column: 55
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "27": {
        start: {
          line: 197,
          column: 33
        },
        end: {
          line: 197,
          column: 68
        }
      },
      "28": {
        start: {
          line: 198,
          column: 21
        },
        end: {
          line: 198,
          column: 81
        }
      },
      "29": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "30": {
        start: {
          line: 200,
          column: 34
        },
        end: {
          line: 200,
          column: 91
        }
      },
      "31": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 43
        }
      },
      "32": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "33": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "34": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 40
        }
      },
      "35": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 216,
          column: 28
        }
      },
      "36": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "37": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 225,
          column: 15
        }
      },
      "38": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "39": {
        start: {
          line: 221,
          column: 40
        },
        end: {
          line: 221,
          column: 78
        }
      },
      "40": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 62
        }
      },
      "41": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 40
        }
      },
      "42": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 25
        }
      },
      "43": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 63
        }
      },
      "44": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 62
        }
      },
      "45": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 62
        }
      },
      "46": {
        start: {
          line: 267,
          column: 19
        },
        end: {
          line: 267,
          column: 21
        }
      },
      "47": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "48": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 275,
          column: 14
        }
      },
      "49": {
        start: {
          line: 277,
          column: 13
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "50": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 25
        }
      },
      "51": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 63
        }
      },
      "52": {
        start: {
          line: 289,
          column: 30
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "53": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 60
        }
      },
      "54": {
        start: {
          line: 305,
          column: 29
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "55": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 56
        }
      },
      "56": {
        start: {
          line: 322,
          column: 28
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "57": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 54
        }
      },
      "58": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 344,
          column: 10
        }
      },
      "59": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 49
        }
      },
      "60": {
        start: {
          line: 354,
          column: 23
        },
        end: {
          line: 354,
          column: 62
        }
      },
      "61": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 46
        }
      },
      "62": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 382,
          column: 10
        }
      },
      "63": {
        start: {
          line: 385,
          column: 0
        },
        end: {
          line: 385,
          column: 24
        }
      },
      "64": {
        start: {
          line: 387,
          column: 0
        },
        end: {
          line: 395,
          column: 2
        }
      },
      "65": {
        start: {
          line: 397,
          column: 0
        },
        end: {
          line: 397,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 28,
            column: 56
          },
          end: {
            line: 28,
            column: 57
          }
        },
        loc: {
          start: {
            line: 28,
            column: 71
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 28
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 27
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 57
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 112
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 27
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 133
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 154
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 176
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 31
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 195
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 32
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 212
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 219,
            column: 51
          },
          end: {
            line: 219,
            column: 52
          }
        },
        loc: {
          start: {
            line: 219,
            column: 70
          },
          end: {
            line: 225,
            column: 13
          }
        },
        line: 219
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 236
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 246
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 256
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 266,
            column: 4
          },
          end: {
            line: 266,
            column: 5
          }
        },
        loc: {
          start: {
            line: 266,
            column: 26
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 266
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 22
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 288
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 39
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 304
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        loc: {
          start: {
            line: 321,
            column: 38
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 321
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 25
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 336
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 22
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 352
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 15
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 363
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 30,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 27
          }
        }, {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: 28,
            column: 56
          },
          end: {
            line: 30,
            column: 1
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 40
          }
        }, {
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 29,
            column: 61
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 15
          }
        }, {
          start: {
            line: 29,
            column: 19
          },
          end: {
            line: 29,
            column: 33
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 42
          }
        }, {
          start: {
            line: 43,
            column: 46
          },
          end: {
            line: 43,
            column: 59
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 31
          }
        }, {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 43
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 37
          }
        }, {
          start: {
            line: 60,
            column: 41
          },
          end: {
            line: 60,
            column: 55
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 40
          }
        }, {
          start: {
            line: 61,
            column: 44
          },
          end: {
            line: 61,
            column: 61
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 78,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 78,
            column: 40
          }
        }, {
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 78,
            column: 50
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 50
          },
          end: {
            line: 87,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 50
          },
          end: {
            line: 87,
            column: 69
          }
        }, {
          start: {
            line: 87,
            column: 73
          },
          end: {
            line: 87,
            column: 81
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 69
          }
        }, {
          start: {
            line: 96,
            column: 73
          },
          end: {
            line: 96,
            column: 81
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 118,
            column: 50
          },
          end: {
            line: 118,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 50
          },
          end: {
            line: 118,
            column: 75
          }
        }, {
          start: {
            line: 118,
            column: 79
          },
          end: {
            line: 118,
            column: 93
          }
        }],
        line: 118
      },
      "12": {
        loc: {
          start: {
            line: 139,
            column: 50
          },
          end: {
            line: 139,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 50
          },
          end: {
            line: 139,
            column: 78
          }
        }, {
          start: {
            line: 139,
            column: 82
          },
          end: {
            line: 139,
            column: 99
          }
        }],
        line: 139
      },
      "13": {
        loc: {
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 48
          }
        }, {
          start: {
            line: 156,
            column: 52
          },
          end: {
            line: 156,
            column: 58
          }
        }],
        line: 156
      },
      "14": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "15": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "16": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "17": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 279,
            column: 9
          }
        }],
        line: 268
      },
      "18": {
        loc: {
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "19": {
        loc: {
          start: {
            line: 291,
            column: 23
          },
          end: {
            line: 291,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 23
          },
          end: {
            line: 291,
            column: 43
          }
        }, {
          start: {
            line: 291,
            column: 47
          },
          end: {
            line: 291,
            column: 57
          }
        }],
        line: 291
      },
      "20": {
        loc: {
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 292,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 292,
            column: 39
          }
        }, {
          start: {
            line: 292,
            column: 43
          },
          end: {
            line: 292,
            column: 65
          }
        }],
        line: 292
      },
      "21": {
        loc: {
          start: {
            line: 308,
            column: 27
          },
          end: {
            line: 308,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 27
          },
          end: {
            line: 308,
            column: 47
          }
        }, {
          start: {
            line: 308,
            column: 51
          },
          end: {
            line: 308,
            column: 61
          }
        }],
        line: 308
      },
      "22": {
        loc: {
          start: {
            line: 339,
            column: 23
          },
          end: {
            line: 339,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 23
          },
          end: {
            line: 339,
            column: 38
          }
        }, {
          start: {
            line: 339,
            column: 42
          },
          end: {
            line: 339,
            column: 60
          }
        }],
        line: 339
      },
      "23": {
        loc: {
          start: {
            line: 343,
            column: 25
          },
          end: {
            line: 343,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 25
          },
          end: {
            line: 343,
            column: 45
          }
        }, {
          start: {
            line: 343,
            column: 49
          },
          end: {
            line: 343,
            column: 62
          }
        }],
        line: 343
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ce13c38ebcc8fea95b9c6203170c82948ddc999b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uzcmlkyo7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uzcmlkyo7();
var __importDefault =
/* istanbul ignore next */
(cov_uzcmlkyo7().s[0]++,
/* istanbul ignore next */
(cov_uzcmlkyo7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_uzcmlkyo7().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_uzcmlkyo7().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_uzcmlkyo7().f[0]++;
  cov_uzcmlkyo7().s[1]++;
  return /* istanbul ignore next */(cov_uzcmlkyo7().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_uzcmlkyo7().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_uzcmlkyo7().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_uzcmlkyo7().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_uzcmlkyo7().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uzcmlkyo7().s[3]++;
exports.logger = exports.Logger = void 0;
const winston_1 =
/* istanbul ignore next */
(cov_uzcmlkyo7().s[4]++, __importDefault(require("winston")));
const winston_daily_rotate_file_1 =
/* istanbul ignore next */
(cov_uzcmlkyo7().s[5]++, __importDefault(require("winston-daily-rotate-file")));
const path_1 =
/* istanbul ignore next */
(cov_uzcmlkyo7().s[6]++, require("path"));
const fs_1 =
/* istanbul ignore next */
(cov_uzcmlkyo7().s[7]++, require("fs"));
/**
 * Comprehensive logging service for the AI crypto trading agent
 * Provides secure, structured logging with automatic rotation and sanitization
 */
class Logger {
  constructor(componentName) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[1]++;
    cov_uzcmlkyo7().s[8]++;
    this.componentName =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[3][0]++, componentName) ||
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[3][1]++, 'Application');
    // Ensure log directories exist
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[9]++;
    this.ensureLogDirectories();
    // Initialize main logger
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[10]++;
    this.winston = this.createMainLogger();
    // Initialize specialized loggers
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[11]++;
    this.auditLogger = this.createAuditLogger();
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[12]++;
    this.securityLogger = this.createSecurityLogger();
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[13]++;
    this.tradingLogger = this.createTradingLogger();
  }
  /**
   * Ensure all required log directories exist
   * Creates directories with appropriate permissions
   */
  ensureLogDirectories() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[2]++;
    const logDirs =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[14]++, [
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[4][0]++, process.env.LOG_DIR) ||
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[4][1]++, './logs'),
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[5][0]++, process.env.AUDIT_LOG_DIR) ||
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[5][1]++, './logs/audit'),
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[6][0]++, process.env.SECURITY_LOG_DIR) ||
    /* istanbul ignore next */
    (cov_uzcmlkyo7().b[6][1]++, './logs/security'), './logs/trading']);
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[15]++;
    for (const dir of logDirs) {
      /* istanbul ignore next */
      cov_uzcmlkyo7().s[16]++;
      if (!(0, fs_1.existsSync)(dir)) {
        /* istanbul ignore next */
        cov_uzcmlkyo7().b[7][0]++;
        cov_uzcmlkyo7().s[17]++;
        (0, fs_1.mkdirSync)(dir, {
          recursive: true,
          mode: 0o750
        });
      } else
      /* istanbul ignore next */
      {
        cov_uzcmlkyo7().b[7][1]++;
      }
    }
  }
  /**
   * Create the main application logger
   * Handles general application logging with rotation
   *
   * @returns winston.Logger Configured main logger
   */
  createMainLogger() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[3]++;
    cov_uzcmlkyo7().s[18]++;
    return winston_1.default.createLogger({
      level:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[8][0]++, process.env.LOG_LEVEL) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[8][1]++, 'info'),
      format: winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.errors({
        stack: true
      }), winston_1.default.format.json(), winston_1.default.format.printf(this.formatLogMessage.bind(this))),
      transports: [
      // Console output for development
      new winston_1.default.transports.Console({
        format: winston_1.default.format.combine(winston_1.default.format.colorize(), winston_1.default.format.simple(), winston_1.default.format.printf(this.formatConsoleMessage.bind(this)))
      }),
      // Daily rotating file for general logs
      new winston_daily_rotate_file_1.default({
        filename: (0, path_1.resolve)(
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[9][0]++, process.env.LOG_DIR) ||
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[9][1]++, './logs'), 'application-%DATE%.log'),
        datePattern: 'YYYY-MM-DD',
        maxSize: '100m',
        maxFiles: '30d',
        zippedArchive: true,
        format: winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.json())
      }),
      // Error-only log file
      new winston_daily_rotate_file_1.default({
        filename: (0, path_1.resolve)(
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[10][0]++, process.env.LOG_DIR) ||
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[10][1]++, './logs'), 'error-%DATE%.log'),
        datePattern: 'YYYY-MM-DD',
        level: 'error',
        maxSize: '100m',
        maxFiles: '90d',
        zippedArchive: true
      })]
    });
  }
  /**
   * Create specialized audit logger for compliance and security
   * Maintains tamper-evident audit trails
   *
   * @returns winston.Logger Configured audit logger
   */
  createAuditLogger() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[4]++;
    cov_uzcmlkyo7().s[19]++;
    return winston_1.default.createLogger({
      level: 'info',
      format: winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.json()),
      transports: [new winston_daily_rotate_file_1.default({
        filename: (0, path_1.resolve)(
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[11][0]++, process.env.AUDIT_LOG_DIR) ||
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[11][1]++, './logs/audit'), 'audit-%DATE%.log'),
        datePattern: 'YYYY-MM-DD',
        maxSize: '50m',
        maxFiles: '365d',
        // Keep audit logs for 1 year
        zippedArchive: true
      })]
    });
  }
  /**
   * Create specialized security logger for threat monitoring
   * Logs all security-related events and incidents
   *
   * @returns winston.Logger Configured security logger
   */
  createSecurityLogger() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[5]++;
    cov_uzcmlkyo7().s[20]++;
    return winston_1.default.createLogger({
      level: 'debug',
      format: winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.json()),
      transports: [new winston_daily_rotate_file_1.default({
        filename: (0, path_1.resolve)(
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[12][0]++, process.env.SECURITY_LOG_DIR) ||
        /* istanbul ignore next */
        (cov_uzcmlkyo7().b[12][1]++, './logs/security'), 'security-%DATE%.log'),
        datePattern: 'YYYY-MM-DD',
        maxSize: '50m',
        maxFiles: '365d',
        // Keep security logs for 1 year
        zippedArchive: true
      })]
    });
  }
  /**
   * Create specialized trading logger for financial operations
   * Logs all trading activities and market data
   *
   * @returns winston.Logger Configured trading logger
   */
  createTradingLogger() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[6]++;
    cov_uzcmlkyo7().s[21]++;
    return winston_1.default.createLogger({
      level:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[13][0]++, process.env.TRADING_LOG_LEVEL) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[13][1]++, 'info'),
      format: winston_1.default.format.combine(winston_1.default.format.timestamp(), winston_1.default.format.json()),
      transports: [new winston_daily_rotate_file_1.default({
        filename: (0, path_1.resolve)('./logs/trading', 'trading-%DATE%.log'),
        datePattern: 'YYYY-MM-DD',
        maxSize: '100m',
        maxFiles: '90d',
        // Keep trading logs for 90 days
        zippedArchive: true
      })]
    });
  }
  /**
   * Format log messages with sanitization
   * Removes sensitive data and adds structured formatting
   *
   * @param info - Winston log info object
   * @returns string Formatted log message
   */
  formatLogMessage(info) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[7]++;
    const {
      timestamp,
      level,
      message,
      ...meta
    } =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[22]++, info);
    // Sanitize the message and metadata
    const sanitizedMessage =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[23]++, this.sanitizeSensitiveData(message));
    const sanitizedMeta =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[24]++, this.sanitizeSensitiveData(JSON.stringify(meta)));
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[25]++;
    return JSON.stringify({
      timestamp,
      level,
      message: sanitizedMessage,
      ...JSON.parse(sanitizedMeta)
    });
  }
  /**
   * Format console messages for development
   * Provides readable console output with colors
   *
   * @param info - Winston log info object
   * @returns string Formatted console message
   */
  formatConsoleMessage(info) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[8]++;
    const {
      timestamp,
      level,
      message,
      ...meta
    } =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[26]++, info);
    const sanitizedMessage =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[27]++, this.sanitizeSensitiveData(message));
    let output =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[28]++, `${timestamp} [${level.toUpperCase()}]: ${sanitizedMessage}`);
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[29]++;
    if (Object.keys(meta).length > 0) {
      /* istanbul ignore next */
      cov_uzcmlkyo7().b[14][0]++;
      const sanitizedMeta =
      /* istanbul ignore next */
      (cov_uzcmlkyo7().s[30]++, this.sanitizeSensitiveData(JSON.stringify(meta, null, 2)));
      /* istanbul ignore next */
      cov_uzcmlkyo7().s[31]++;
      output += `\n${sanitizedMeta}`;
    } else
    /* istanbul ignore next */
    {
      cov_uzcmlkyo7().b[14][1]++;
    }
    cov_uzcmlkyo7().s[32]++;
    return output;
  }
  /**
   * Sanitize sensitive data from log messages
   * Replaces sensitive patterns with masked values
   *
   * @param data - Data to sanitize (string or object)
   * @returns string Sanitized data
   */
  sanitizeSensitiveData(data) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[9]++;
    cov_uzcmlkyo7().s[33]++;
    if (typeof data !== 'string') {
      /* istanbul ignore next */
      cov_uzcmlkyo7().b[15][0]++;
      cov_uzcmlkyo7().s[34]++;
      data = JSON.stringify(data);
    } else
    /* istanbul ignore next */
    {
      cov_uzcmlkyo7().b[15][1]++;
    }
    let sanitized =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[35]++, data);
    // Replace sensitive patterns with masked values
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[36]++;
    for (const pattern of Logger.SENSITIVE_PATTERNS) {
      /* istanbul ignore next */
      cov_uzcmlkyo7().s[37]++;
      sanitized = sanitized.replace(pattern, (match, group1) => {
        /* istanbul ignore next */
        cov_uzcmlkyo7().f[10]++;
        cov_uzcmlkyo7().s[38]++;
        if (group1) {
          /* istanbul ignore next */
          cov_uzcmlkyo7().b[16][0]++;
          const maskedValue =
          /* istanbul ignore next */
          (cov_uzcmlkyo7().s[39]++, '*'.repeat(Math.min(group1.length, 8)));
          /* istanbul ignore next */
          cov_uzcmlkyo7().s[40]++;
          return match.replace(group1, maskedValue);
        } else
        /* istanbul ignore next */
        {
          cov_uzcmlkyo7().b[16][1]++;
        }
        cov_uzcmlkyo7().s[41]++;
        return '***REDACTED***';
      });
    }
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[42]++;
    return sanitized;
  }
  /**
   * Log debug messages
   * Used for detailed diagnostic information
   *
   * @param message - Log message
   * @param meta - Additional metadata
   */
  debug(message, meta) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[11]++;
    cov_uzcmlkyo7().s[43]++;
    this.winston.debug(message, this.enrichMetadata(meta));
  }
  /**
   * Log info messages
   * Used for general operational information
   *
   * @param message - Log message
   * @param meta - Additional metadata
   */
  info(message, meta) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[12]++;
    cov_uzcmlkyo7().s[44]++;
    this.winston.info(message, this.enrichMetadata(meta));
  }
  /**
   * Log warning messages
   * Used for potentially problematic situations
   *
   * @param message - Log message
   * @param meta - Additional metadata
   */
  warn(message, meta) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[13]++;
    cov_uzcmlkyo7().s[45]++;
    this.winston.warn(message, this.enrichMetadata(meta));
  }
  /**
   * Log error messages
   * Used for error conditions and exceptions
   *
   * @param message - Log message
   * @param error - Error object or additional metadata
   */
  error(message, error) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[14]++;
    let meta =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[46]++, {});
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[47]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_uzcmlkyo7().b[17][0]++;
      cov_uzcmlkyo7().s[48]++;
      meta = {
        error: {
          name: error.name,
          message: error.message,
          stack: error.stack
        }
      };
    } else {
      /* istanbul ignore next */
      cov_uzcmlkyo7().b[17][1]++;
      cov_uzcmlkyo7().s[49]++;
      if (error) {
        /* istanbul ignore next */
        cov_uzcmlkyo7().b[18][0]++;
        cov_uzcmlkyo7().s[50]++;
        meta = error;
      } else
      /* istanbul ignore next */
      {
        cov_uzcmlkyo7().b[18][1]++;
      }
    }
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[51]++;
    this.winston.error(message, this.enrichMetadata(meta));
  }
  /**
   * Log audit events for compliance and security
   * Creates tamper-evident audit trail entries
   *
   * @param auditEntry - Structured audit log entry
   */
  audit(auditEntry) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[15]++;
    const enrichedEntry =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[52]++, {
      ...auditEntry,
      timestamp:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[19][0]++, auditEntry.timestamp) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[19][1]++, new Date()),
      auditId:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[20][0]++, auditEntry.auditId) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[20][1]++, this.generateAuditId())
    });
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[53]++;
    this.auditLogger.info('AUDIT_EVENT', enrichedEntry);
  }
  /**
   * Log security events and incidents
   * Specialized logging for security monitoring
   *
   * @param eventType - Type of security event
   * @param message - Security event message
   * @param meta - Security event metadata
   */
  security(eventType, message, meta) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[16]++;
    const securityMeta =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[54]++, {
      ...this.enrichMetadata(meta),
      eventType,
      securityLevel:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[21][0]++, meta?.classification) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[21][1]++, 'INTERNAL'),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[55]++;
    this.securityLogger.info(message, securityMeta);
  }
  /**
   * Log trading operations and market data
   * Specialized logging for financial operations
   *
   * @param operation - Trading operation type
   * @param message - Trading message
   * @param meta - Trading metadata
   */
  trading(operation, message, meta) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[17]++;
    const tradingMeta =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[56]++, {
      ...this.enrichMetadata(meta),
      operation,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[57]++;
    this.tradingLogger.info(message, tradingMeta);
  }
  /**
   * Enrich metadata with common fields
   * Adds standard fields to all log entries
   *
   * @param meta - Original metadata
   * @returns LogMetadata Enriched metadata
   */
  enrichMetadata(meta) {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[18]++;
    cov_uzcmlkyo7().s[58]++;
    return {
      ...meta,
      component:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[22][0]++, meta?.component) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[22][1]++, this.componentName),
      pid: process.pid,
      hostname: require('os').hostname(),
      nodeVersion: process.version,
      environment:
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[23][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_uzcmlkyo7().b[23][1]++, 'development')
    };
  }
  /**
   * Generate unique audit ID
   * Creates a unique identifier for audit trail entries
   *
   * @returns string Unique audit ID
   */
  generateAuditId() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[19]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[59]++, Date.now().toString(36));
    const random =
    /* istanbul ignore next */
    (cov_uzcmlkyo7().s[60]++, Math.random().toString(36).substring(2));
    /* istanbul ignore next */
    cov_uzcmlkyo7().s[61]++;
    return `audit_${timestamp}_${random}`;
  }
  /**
   * Get logger statistics and health information
   * Returns current logging status for monitoring
   *
   * @returns Object containing logger statistics
   */
  getStats() {
    /* istanbul ignore next */
    cov_uzcmlkyo7().f[20]++;
    cov_uzcmlkyo7().s[62]++;
    return {
      mainLogger: {
        level: this.winston.level,
        transports: this.winston.transports.length
      },
      auditLogger: {
        level: this.auditLogger.level,
        transports: this.auditLogger.transports.length
      },
      securityLogger: {
        level: this.securityLogger.level,
        transports: this.securityLogger.transports.length
      },
      tradingLogger: {
        level: this.tradingLogger.level,
        transports: this.tradingLogger.transports.length
      },
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_uzcmlkyo7().s[63]++;
exports.Logger = Logger;
/** Sensitive data patterns to sanitize from logs */
/* istanbul ignore next */
cov_uzcmlkyo7().s[64]++;
Logger.SENSITIVE_PATTERNS = [/api[_-]?key["\s]*[:=]["\s]*([^"\s,}]+)/gi, /secret["\s]*[:=]["\s]*([^"\s,}]+)/gi, /password["\s]*[:=]["\s]*([^"\s,}]+)/gi, /token["\s]*[:=]["\s]*([^"\s,}]+)/gi, /authorization["\s]*[:=]["\s]*([^"\s,}]+)/gi, /private[_-]?key["\s]*[:=]["\s]*([^"\s,}]+)/gi, /\b[A-Za-z0-9]{32,}\b/g // Potential API keys or hashes
];
// Create and export singleton logger instance
/* istanbul ignore next */
cov_uzcmlkyo7().s[65]++;
exports.logger = new Logger();
// Export types for use in other modules
// =============================================================================
// LOGGING SECURITY NOTES
// =============================================================================
// 1. All sensitive data is automatically sanitized before logging
// 2. Audit logs are kept for 1 year for compliance requirements
// 3. Security logs are kept for 1 year for incident investigation
// 4. Log files are automatically rotated and compressed
// 5. Log directories have restricted permissions (750)
// 6. Never manually log sensitive information like API keys or passwords
// 7. Use appropriate log levels to control information exposure
// 8. Monitor log files for unauthorized access or tampering
// =============================================================================