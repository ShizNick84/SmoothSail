7c0572aeb0c3cb4cfa8389eacb911531
"use strict";

/**
 * =============================================================================
 * LOGGING INTEGRATION FOR INTEL NUC DEPLOYMENT
 * =============================================================================
 *
 * This module provides integration utilities to enhance existing logging
 * throughout the application with rich formatting and contextual information.
 *
 * Features:
 * - Automatic log enrichment with system context
 * - Performance monitoring integration
 * - Trading operation logging
 * - System health monitoring
 * - Error tracking and alerting
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2e42bakg0h() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\log-integration.ts";
  var hash = "c33ea90cfbb5aacc95bd314cd5029e25a9f2742f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\log-integration.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "2": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "3": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "4": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "5": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "6": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "7": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "8": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 74
        }
      },
      "10": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "11": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "12": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "13": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "14": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 54
        }
      },
      "15": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "16": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "17": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "18": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "19": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "20": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "21": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "22": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 81,
          column: 49
        }
      },
      "23": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 60
        }
      },
      "24": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 90,
          column: 20
        }
      },
      "25": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 61
        }
      },
      "26": {
        start: {
          line: 85,
          column: 32
        },
        end: {
          line: 85,
          column: 62
        }
      },
      "27": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 52
        }
      },
      "28": {
        start: {
          line: 87,
          column: 36
        },
        end: {
          line: 87,
          column: 75
        }
      },
      "29": {
        start: {
          line: 88,
          column: 38
        },
        end: {
          line: 88,
          column: 79
        }
      },
      "30": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 53
        }
      },
      "31": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "32": {
        start: {
          line: 98,
          column: 33
        },
        end: {
          line: 98,
          column: 57
        }
      },
      "33": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 99,
          column: 78
        }
      },
      "34": {
        start: {
          line: 100,
          column: 26
        },
        end: {
          line: 100,
          column: 52
        }
      },
      "35": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 50
        }
      },
      "36": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "37": {
        start: {
          line: 103,
          column: 31
        },
        end: {
          line: 103,
          column: 68
        }
      },
      "38": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 47
        }
      },
      "39": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "40": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 114,
          column: 75
        }
      },
      "41": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 115,
          column: 65
        }
      },
      "42": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 117,
          column: 21
        }
      },
      "43": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 21
        }
      },
      "44": {
        start: {
          line: 118,
          column: 22
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "45": {
        start: {
          line: 119,
          column: 21
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "46": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 42
        }
      },
      "47": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "48": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 127,
          column: 57
        }
      },
      "49": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 139
        }
      },
      "50": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "51": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "52": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 147,
          column: 65
        }
      },
      "53": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 175
        }
      },
      "54": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 73
        }
      },
      "55": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 80
        }
      },
      "56": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 164,
          column: 65
        }
      },
      "57": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "58": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 82
        }
      },
      "59": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 21
        }
      },
      "60": {
        start: {
          line: 169,
          column: 25
        },
        end: {
          line: 169,
          column: 67
        }
      },
      "61": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "62": {
        start: {
          line: 172,
          column: 22
        },
        end: {
          line: 173,
          column: 97
        }
      },
      "63": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 142
        }
      },
      "64": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "65": {
        start: {
          line: 181,
          column: 75
        },
        end: {
          line: 181,
          column: 82
        }
      },
      "66": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "67": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 187,
          column: 114
        }
      },
      "68": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 31
        }
      },
      "69": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "70": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 58
        }
      },
      "71": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 32
        }
      },
      "72": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 72
        }
      },
      "73": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 22
        }
      },
      "74": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 60
        }
      },
      "75": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 31
        }
      },
      "76": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 22
        }
      },
      "77": {
        start: {
          line: 200,
          column: 22
        },
        end: {
          line: 200,
          column: 68
        }
      },
      "78": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 202,
          column: 44
        }
      },
      "79": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 44
        }
      },
      "80": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 204,
          column: 50
        }
      },
      "81": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 50
        }
      },
      "82": {
        start: {
          line: 205,
          column: 29
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "83": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 70
        }
      },
      "84": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 62
        }
      },
      "85": {
        start: {
          line: 223,
          column: 26
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "86": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "87": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "88": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 61
        }
      },
      "89": {
        start: {
          line: 242,
          column: 29
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "90": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 168
        }
      },
      "91": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "92": {
        start: {
          line: 258,
          column: 26
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "93": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "94": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "95": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 71
        }
      },
      "96": {
        start: {
          line: 277,
          column: 29
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "97": {
        start: {
          line: 284,
          column: 28
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "98": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 103
        }
      },
      "99": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "100": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 74
        }
      },
      "101": {
        start: {
          line: 299,
          column: 28
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "102": {
        start: {
          line: 304,
          column: 22
        },
        end: {
          line: 304,
          column: 40
        }
      },
      "103": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 60
        }
      },
      "104": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 311,
          column: 11
        }
      },
      "105": {
        start: {
          line: 317,
          column: 24
        },
        end: {
          line: 317,
          column: 60
        }
      },
      "106": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 53
        }
      },
      "107": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 52
        }
      },
      "108": {
        start: {
          line: 330,
          column: 30
        },
        end: {
          line: 330,
          column: 59
        }
      },
      "109": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 337,
          column: 10
        }
      },
      "110": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 35
        }
      },
      "111": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 33
        }
      },
      "112": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 39
        }
      },
      "113": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 27
        }
      },
      "114": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 354,
          column: 40
        }
      },
      "115": {
        start: {
          line: 356,
          column: 0
        },
        end: {
          line: 356,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 57
          }
        },
        loc: {
          start: {
            line: 21,
            column: 71
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 49
          },
          end: {
            line: 44,
            column: 50
          }
        },
        loc: {
          start: {
            line: 44,
            column: 55
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 29
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 79
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 80,
            column: 28
          }
        },
        loc: {
          start: {
            line: 80,
            column: 40
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 24
          }
        },
        loc: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 83
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 29
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 29
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 157
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 48
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 163
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 50
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 180
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 56
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 222
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 40
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 241
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 63
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 252
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 60
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 276
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 55
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 298
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 35
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 316
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 25
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 323
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 33
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 329
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 19
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 342
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 16
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 350
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 23,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 22,
            column: 40
          }
        }, {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 22,
            column: 61
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 15
          }
        }, {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 33
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 117,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "5": {
        loc: {
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 35
          }
        }, {
          start: {
            line: 120,
            column: 39
          },
          end: {
            line: 120,
            column: 40
          }
        }],
        line: 120
      },
      "6": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "7": {
        loc: {
          start: {
            line: 172,
            column: 22
          },
          end: {
            line: 173,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 39
          },
          end: {
            line: 172,
            column: 71
          }
        }, {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 97
          }
        }],
        line: 172
      },
      "8": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 30
          },
          end: {
            line: 173,
            column: 62
          }
        }, {
          start: {
            line: 173,
            column: 65
          },
          end: {
            line: 173,
            column: 97
          }
        }],
        line: 173
      },
      "9": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 189,
            column: 22
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 194,
            column: 22
          }
        }, {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 198,
            column: 22
          }
        }],
        line: 184
      },
      "10": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 187,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 46
          },
          end: {
            line: 186,
            column: 77
          }
        }, {
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 187,
            column: 113
          }
        }],
        line: 186
      },
      "11": {
        loc: {
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 187,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 43
          },
          end: {
            line: 187,
            column: 75
          }
        }, {
          start: {
            line: 187,
            column: 78
          },
          end: {
            line: 187,
            column: 113
          }
        }],
        line: 187
      },
      "12": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 202,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 202,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "13": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 204,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 204,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "14": {
        loc: {
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 232,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 27
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 25
          }
        }],
        line: 229
      },
      "15": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "16": {
        loc: {
          start: {
            line: 264,
            column: 19
          },
          end: {
            line: 267,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 27
          },
          end: {
            line: 267,
            column: 13
          }
        }, {
          start: {
            line: 267,
            column: 16
          },
          end: {
            line: 267,
            column: 25
          }
        }],
        line: 264
      },
      "17": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "18": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "19": {
        loc: {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 31
          }
        }, {
          start: {
            line: 291,
            column: 35
          },
          end: {
            line: 291,
            column: 58
          }
        }],
        line: 291
      },
      "20": {
        loc: {
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 55
          }
        }, {
          start: {
            line: 317,
            column: 59
          },
          end: {
            line: 317,
            column: 60
          }
        }],
        line: 317
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c33ea90cfbb5aacc95bd314cd5029e25a9f2742f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e42bakg0h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e42bakg0h();
var __importDefault =
/* istanbul ignore next */
(cov_2e42bakg0h().s[0]++,
/* istanbul ignore next */
(cov_2e42bakg0h().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2e42bakg0h().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2e42bakg0h().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2e42bakg0h().f[0]++;
  cov_2e42bakg0h().s[1]++;
  return /* istanbul ignore next */(cov_2e42bakg0h().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2e42bakg0h().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2e42bakg0h().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2e42bakg0h().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2e42bakg0h().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2e42bakg0h().s[3]++;
exports.logIntegration = exports.LogIntegration = void 0;
const enhanced_logger_1 =
/* istanbul ignore next */
(cov_2e42bakg0h().s[4]++, require("./enhanced-logger"));
const os_1 =
/* istanbul ignore next */
(cov_2e42bakg0h().s[5]++, __importDefault(require("os")));
const perf_hooks_1 =
/* istanbul ignore next */
(cov_2e42bakg0h().s[6]++, require("perf_hooks"));
/**
 * Logging integration service for Intel NUC deployment
 */
class LogIntegration {
  constructor(componentName) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[1]++;
    cov_2e42bakg0h().s[7]++;
    this.performanceTimers = new Map();
    /* istanbul ignore next */
    cov_2e42bakg0h().s[8]++;
    this.errorCounts = new Map();
    /* istanbul ignore next */
    cov_2e42bakg0h().s[9]++;
    this.logger = new enhanced_logger_1.EnhancedLogger(componentName);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[10]++;
    this.startSystemMonitoring();
  }
  /**
   * Start system performance monitoring
   */
  startSystemMonitoring() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[2]++;
    cov_2e42bakg0h().s[11]++;
    // Monitor system metrics every 30 seconds
    this.systemMetricsInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2e42bakg0h().f[3]++;
      cov_2e42bakg0h().s[12]++;
      this.logSystemMetrics();
    }, 30000);
  }
  /**
   * Stop system monitoring
   */
  stopSystemMonitoring() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[4]++;
    cov_2e42bakg0h().s[13]++;
    if (this.systemMetricsInterval) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[3][0]++;
      cov_2e42bakg0h().s[14]++;
      clearInterval(this.systemMetricsInterval);
      /* istanbul ignore next */
      cov_2e42bakg0h().s[15]++;
      this.systemMetricsInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[3][1]++;
    }
  }
  /**
   * Get current system metrics
   */
  async getSystemMetrics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[5]++;
    const memUsage =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[16]++, process.memoryUsage());
    const totalMem =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[17]++, os_1.default.totalmem());
    const freeMem =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[18]++, os_1.default.freemem());
    const usedMem =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[19]++, totalMem - freeMem);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[20]++;
    return {
      cpuUsage: await this.getCPUUsage(),
      memoryUsage: {
        used: usedMem,
        total: totalMem,
        percentage: usedMem / totalMem * 100
      },
      diskUsage: await this.getDiskUsage(),
      uptime: os_1.default.uptime()
    };
  }
  /**
   * Get CPU usage percentage
   */
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[6]++;
    cov_2e42bakg0h().s[21]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2e42bakg0h().f[7]++;
      const startUsage =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[22]++, process.cpuUsage());
      const startTime =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[23]++, perf_hooks_1.performance.now());
      /* istanbul ignore next */
      cov_2e42bakg0h().s[24]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2e42bakg0h().f[8]++;
        const endUsage =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[25]++, process.cpuUsage(startUsage));
        const endTime =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[26]++, perf_hooks_1.performance.now());
        const timeDiff =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[27]++, endTime - startTime);
        const userPercent =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[28]++, endUsage.user / 1000 / timeDiff * 100);
        const systemPercent =
        /* istanbul ignore next */
        (cov_2e42bakg0h().s[29]++, endUsage.system / 1000 / timeDiff * 100);
        /* istanbul ignore next */
        cov_2e42bakg0h().s[30]++;
        resolve(userPercent + systemPercent);
      }, 100);
    });
  }
  /**
   * Get disk usage information
   */
  async getDiskUsage() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[9]++;
    cov_2e42bakg0h().s[31]++;
    try {
      const {
        execSync
      } =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[32]++, require('child_process'));
      const output =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[33]++, execSync('df -h / | tail -1', {
        encoding: 'utf8'
      }));
      const parts =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[34]++, output.trim().split(/\s+/));
      const total =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[35]++, this.parseSize(parts[1]));
      const used =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[36]++, this.parseSize(parts[2]));
      const percentage =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[37]++, parseFloat(parts[4].replace('%', '')));
      /* istanbul ignore next */
      cov_2e42bakg0h().s[38]++;
      return {
        used,
        total,
        percentage
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2e42bakg0h().s[39]++;
      return {
        used: 0,
        total: 0,
        percentage: 0
      };
    }
  }
  /**
   * Parse size string to bytes
   */
  parseSize(sizeStr) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[10]++;
    const units =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[40]++, {
      K: 1024,
      M: 1024 ** 2,
      G: 1024 ** 3,
      T: 1024 ** 4
    });
    const match =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[41]++, sizeStr.match(/^(\d+(?:\.\d+)?)([KMGT]?)$/));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[42]++;
    if (!match) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[4][0]++;
      cov_2e42bakg0h().s[43]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[4][1]++;
    }
    const value =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[44]++, parseFloat(match[1]));
    const unit =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[45]++, match[2]);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[46]++;
    return value * (
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[5][0]++, units[unit]) ||
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[5][1]++, 1));
  }
  /**
   * Log system metrics with visual indicators
   */
  async logSystemMetrics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[11]++;
    cov_2e42bakg0h().s[47]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[48]++, await this.getSystemMetrics());
      // Log CPU usage
      /* istanbul ignore next */
      cov_2e42bakg0h().s[49]++;
      this.logger.logPerformance('CPU Usage', metrics.cpuUsage, '%', {
        warning: 70,
        critical: 90
      }, {
        component: 'system_monitor'
      });
      // Log memory usage
      /* istanbul ignore next */
      cov_2e42bakg0h().s[50]++;
      this.logger.logPerformance('Memory Usage', metrics.memoryUsage.percentage, '%', {
        warning: 80,
        critical: 95
      }, {
        component: 'system_monitor',
        details: {
          used: `${(metrics.memoryUsage.used / 1024 ** 3).toFixed(2)}GB`,
          total: `${(metrics.memoryUsage.total / 1024 ** 3).toFixed(2)}GB`
        }
      });
      // Log disk usage
      /* istanbul ignore next */
      cov_2e42bakg0h().s[51]++;
      this.logger.logPerformance('Disk Usage', metrics.diskUsage.percentage, '%', {
        warning: 85,
        critical: 95
      }, {
        component: 'system_monitor',
        details: {
          used: `${(metrics.diskUsage.used / 1024 ** 3).toFixed(2)}GB`,
          total: `${(metrics.diskUsage.total / 1024 ** 3).toFixed(2)}GB`
        }
      });
      // Log system uptime
      const uptimeHours =
      /* istanbul ignore next */
      (cov_2e42bakg0h().s[52]++, Math.floor(metrics.uptime / 3600));
      /* istanbul ignore next */
      cov_2e42bakg0h().s[53]++;
      this.logger.logWithEmoji('info', enhanced_logger_1.LogEmojis.INFO, `System uptime: ${uptimeHours} hours`, {
        component: 'system_monitor',
        uptime: metrics.uptime
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2e42bakg0h().s[54]++;
      this.logger.error('Failed to collect system metrics', error);
    }
  }
  /**
   * Start performance timing for an operation
   */
  startTiming(operationId) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[12]++;
    cov_2e42bakg0h().s[55]++;
    this.performanceTimers.set(operationId, perf_hooks_1.performance.now());
  }
  /**
   * End performance timing and log the result
   */
  endTiming(operationId, operationName, meta) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[13]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[56]++, this.performanceTimers.get(operationId));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[57]++;
    if (!startTime) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[6][0]++;
      cov_2e42bakg0h().s[58]++;
      this.logger.warn(`No start time found for operation: ${operationId}`);
      /* istanbul ignore next */
      cov_2e42bakg0h().s[59]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[6][1]++;
    }
    const duration =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[60]++, perf_hooks_1.performance.now() - startTime);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[61]++;
    this.performanceTimers.delete(operationId);
    // Log the timing with appropriate emoji based on duration
    const emoji =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[62]++, duration < 100 ?
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[7][0]++, enhanced_logger_1.LogEmojis.FAST) :
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[7][1]++, duration < 1000 ?
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[8][0]++, enhanced_logger_1.LogEmojis.INFO) :
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[8][1]++, enhanced_logger_1.LogEmojis.SLOW)));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[63]++;
    this.logger.logWithEmoji('info', emoji, `${operationName} completed in ${duration.toFixed(2)}ms`, {
      ...meta,
      duration,
      operationId
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[64]++;
    return duration;
  }
  /**
   * Log trading operation with rich context
   */
  logTradingOperation(context, result, details) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[14]++;
    const {
      symbol,
      operation,
      amount,
      price,
      strategy,
      confidence
    } =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[65]++, context);
    let emoji;
    let level;
    /* istanbul ignore next */
    cov_2e42bakg0h().s[66]++;
    switch (result) {
      case 'success':
        /* istanbul ignore next */
        cov_2e42bakg0h().b[9][0]++;
        cov_2e42bakg0h().s[67]++;
        emoji = operation === 'buy' ?
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[10][0]++, enhanced_logger_1.LogEmojis.BUY) :
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[10][1]++, operation === 'sell' ?
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[11][0]++, enhanced_logger_1.LogEmojis.SELL) :
        /* istanbul ignore next */
        (cov_2e42bakg0h().b[11][1]++, enhanced_logger_1.LogEmojis.SUCCESS));
        /* istanbul ignore next */
        cov_2e42bakg0h().s[68]++;
        level = 'info';
        /* istanbul ignore next */
        cov_2e42bakg0h().s[69]++;
        break;
      case 'failed':
        /* istanbul ignore next */
        cov_2e42bakg0h().b[9][1]++;
        cov_2e42bakg0h().s[70]++;
        emoji = enhanced_logger_1.LogEmojis.ERROR;
        /* istanbul ignore next */
        cov_2e42bakg0h().s[71]++;
        level = 'error';
        /* istanbul ignore next */
        cov_2e42bakg0h().s[72]++;
        this.incrementErrorCount(`trading_${operation}_failed`);
        /* istanbul ignore next */
        cov_2e42bakg0h().s[73]++;
        break;
      case 'skipped':
        /* istanbul ignore next */
        cov_2e42bakg0h().b[9][2]++;
        cov_2e42bakg0h().s[74]++;
        emoji = enhanced_logger_1.LogEmojis.WARNING;
        /* istanbul ignore next */
        cov_2e42bakg0h().s[75]++;
        level = 'warn';
        /* istanbul ignore next */
        cov_2e42bakg0h().s[76]++;
        break;
    }
    let message =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[77]++, `Trading ${operation} ${result} for ${symbol}`);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[78]++;
    if (amount) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[12][0]++;
      cov_2e42bakg0h().s[79]++;
      message += ` (${amount} units)`;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[12][1]++;
    }
    cov_2e42bakg0h().s[80]++;
    if (price) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[13][0]++;
      cov_2e42bakg0h().s[81]++;
      message += ` at $${price.toFixed(4)}`;
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[13][1]++;
    }
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[82]++, {
      symbol,
      operation,
      result,
      amount,
      price,
      strategy,
      confidence,
      details,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[83]++;
    this.logger.logWithEmoji(level, emoji, message, enrichedMeta);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[84]++;
    this.logger.trading(operation, message, enrichedMeta);
  }
  /**
   * Log API connectivity status
   */
  logAPIConnectivity(apiName, status, latency, error) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[15]++;
    const statusMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[85]++, {
      connected: 'CONNECTED',
      disconnected: 'DISCONNECTED',
      error: 'TIMEOUT'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[86]++;
    this.logger.logConnectivity(apiName, statusMap[status], latency, {
      error: error ?
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[14][0]++, {
        name: error.name,
        message: error.message
      }) :
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[14][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[87]++;
    if (status === 'error') {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[15][0]++;
      cov_2e42bakg0h().s[88]++;
      this.incrementErrorCount(`api_${apiName}_error`);
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[15][1]++;
    }
  }
  /**
   * Log market analysis results
   */
  logMarketAnalysis(symbol, analysis) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[16]++;
    const sentimentMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[89]++, {
      bullish: 'BULLISH',
      bearish: 'BEARISH',
      neutral: 'NEUTRAL'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[90]++;
    this.logger.logMarketSentiment(symbol, sentimentMap[analysis.sentiment], analysis.confidence, analysis.indicators, {
      recommendation: analysis.recommendation
    });
  }
  /**
   * Log notification delivery
   */
  logNotificationDelivery(channel, status, recipient, error) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[17]++;
    const channelMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[91]++, {
      telegram: 'TELEGRAM',
      email: 'EMAIL',
      webhook: 'WEBHOOK'
    });
    const statusMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[92]++, {
      sent: 'SENT',
      failed: 'FAILED',
      queued: 'QUEUED'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[93]++;
    this.logger.logNotification(channelMap[channel], statusMap[status], recipient, {
      error: error ?
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[16][0]++, {
        name: error.name,
        message: error.message
      }) :
      /* istanbul ignore next */
      (cov_2e42bakg0h().b[16][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[94]++;
    if (status === 'failed') {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[17][0]++;
      cov_2e42bakg0h().s[95]++;
      this.incrementErrorCount(`notification_${channel}_failed`);
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[17][1]++;
    }
  }
  /**
   * Log security event
   */
  logSecurityEvent(eventType, severity, details, context) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[18]++;
    const eventTypeMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[96]++, {
      login: 'LOGIN',
      logout: 'LOGOUT',
      api_access: 'API_ACCESS',
      unauthorized: 'UNAUTHORIZED',
      suspicious: 'SUSPICIOUS'
    });
    const severityMap =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[97]++, {
      low: 'LOW',
      medium: 'MEDIUM',
      high: 'HIGH',
      critical: 'CRITICAL'
    });
    /* istanbul ignore next */
    cov_2e42bakg0h().s[98]++;
    this.logger.logSecurityEvent(eventTypeMap[eventType], severityMap[severity], details, context);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[99]++;
    if (
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[19][0]++, severity === 'high') ||
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[19][1]++, severity === 'critical')) {
      /* istanbul ignore next */
      cov_2e42bakg0h().b[18][0]++;
      cov_2e42bakg0h().s[100]++;
      this.incrementErrorCount(`security_${eventType}_${severity}`);
    } else
    /* istanbul ignore next */
    {
      cov_2e42bakg0h().b[18][1]++;
    }
  }
  /**
   * Log application startup/shutdown
   */
  logApplicationLifecycle(event, component, details) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[19]++;
    const eventEmojis =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[101]++, {
      startup: enhanced_logger_1.LogEmojis.START,
      shutdown: enhanced_logger_1.LogEmojis.STOP,
      restart: enhanced_logger_1.LogEmojis.RESTART
    });
    const emoji =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[102]++, eventEmojis[event]);
    const message =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[103]++, `Application ${event}: ${component}`);
    /* istanbul ignore next */
    cov_2e42bakg0h().s[104]++;
    this.logger.logWithEmoji('info', emoji, message, {
      component,
      event,
      details,
      timestamp: new Date().toISOString()
    });
  }
  /**
   * Increment error counter
   */
  incrementErrorCount(errorType) {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[20]++;
    const current =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[105]++,
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[20][0]++, this.errorCounts.get(errorType)) ||
    /* istanbul ignore next */
    (cov_2e42bakg0h().b[20][1]++, 0));
    /* istanbul ignore next */
    cov_2e42bakg0h().s[106]++;
    this.errorCounts.set(errorType, current + 1);
  }
  /**
   * Get error statistics
   */
  getErrorStatistics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[21]++;
    cov_2e42bakg0h().s[107]++;
    return Object.fromEntries(this.errorCounts);
  }
  /**
   * Generate comprehensive system report
   */
  async generateSystemReport() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[22]++;
    const systemMetrics =
    /* istanbul ignore next */
    (cov_2e42bakg0h().s[108]++, await this.getSystemMetrics());
    /* istanbul ignore next */
    cov_2e42bakg0h().s[109]++;
    return {
      timestamp: new Date().toISOString(),
      systemMetrics,
      performanceMetrics: this.logger.getPerformanceMetrics(),
      operationCounters: this.logger.getOperationCounters(),
      errorStatistics: this.getErrorStatistics()
    };
  }
  /**
   * Reset all metrics and counters
   */
  resetMetrics() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[23]++;
    cov_2e42bakg0h().s[110]++;
    this.logger.resetMetrics();
    /* istanbul ignore next */
    cov_2e42bakg0h().s[111]++;
    this.errorCounts.clear();
    /* istanbul ignore next */
    cov_2e42bakg0h().s[112]++;
    this.performanceTimers.clear();
  }
  /**
   * Get the underlying enhanced logger
   */
  getLogger() {
    /* istanbul ignore next */
    cov_2e42bakg0h().f[24]++;
    cov_2e42bakg0h().s[113]++;
    return this.logger;
  }
}
/* istanbul ignore next */
cov_2e42bakg0h().s[114]++;
exports.LogIntegration = LogIntegration;
// Create and export singleton instance
/* istanbul ignore next */
cov_2e42bakg0h().s[115]++;
exports.logIntegration = new LogIntegration();