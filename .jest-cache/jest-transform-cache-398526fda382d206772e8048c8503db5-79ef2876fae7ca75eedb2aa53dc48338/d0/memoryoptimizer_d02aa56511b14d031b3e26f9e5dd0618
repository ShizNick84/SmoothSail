8539a3c7788987bdc6f1f7f89fab1731
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - INTEL NUC MEMORY OPTIMIZER
 * =============================================================================
 *
 * This module provides comprehensive memory optimization for Intel NUC systems
 * with 12GB RAM limit. It monitors memory usage, implements garbage collection
 * optimization, and provides automatic cleanup mechanisms.
 *
 * CRITICAL PERFORMANCE NOTICE:
 * Memory optimization is crucial for stable 24/7 trading operations on Intel NUC.
 * Memory leaks or excessive usage could impact trading performance and system
 * stability, potentially resulting in missed trading opportunities.
 *
 * Intel NUC Specifications:
 * - 12GB RAM total
 * - Target usage: <75% (9GB)
 * - Critical threshold: 90% (10.8GB)
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1imyyby4wt() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance\\memory-optimizer.ts";
  var hash = "755e2fae345b39ee981ea072081d48e4f3d409ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\performance\\memory-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "1": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "2": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "3": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "4": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 16
        }
      },
      "5": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "6": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 43
        }
      },
      "7": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "8": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 32
        }
      },
      "10": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "11": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "12": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "13": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "14": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "15": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 81
        }
      },
      "16": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "17": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 41
        }
      },
      "18": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "19": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 43
        }
      },
      "20": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 44
        }
      },
      "21": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "22": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 52
        }
      },
      "23": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 79
        }
      },
      "24": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "25": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 83
        }
      },
      "26": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "27": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 67
        }
      },
      "28": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "29": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 51
        }
      },
      "30": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 43
        }
      },
      "31": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "32": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 55
        }
      },
      "33": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 47
        }
      },
      "34": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 62
        }
      },
      "35": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 41
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "37": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 57
        }
      },
      "38": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 38
        }
      },
      "39": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "40": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 70
        }
      },
      "41": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "42": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "43": {
        start: {
          line: 132,
          column: 32
        },
        end: {
          line: 132,
          column: 75
        }
      },
      "44": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "45": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 93
        }
      },
      "46": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 76
        }
      },
      "47": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 163,
          column: 45
        }
      },
      "48": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "49": {
        start: {
          line: 144,
          column: 32
        },
        end: {
          line: 144,
          column: 65
        }
      },
      "50": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 46
        }
      },
      "51": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 49
        }
      },
      "52": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 150,
          column: 17
        }
      },
      "53": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 47
        }
      },
      "54": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 54
        }
      },
      "55": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 53
        }
      },
      "56": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "57": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 50
        }
      },
      "58": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 75
        }
      },
      "59": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 80
        }
      },
      "60": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 177,
          column: 49
        }
      },
      "61": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "62": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 55
        }
      },
      "63": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 73
        }
      },
      "64": {
        start: {
          line: 184,
          column: 34
        },
        end: {
          line: 184,
          column: 58
        }
      },
      "65": {
        start: {
          line: 185,
          column: 33
        },
        end: {
          line: 185,
          column: 56
        }
      },
      "66": {
        start: {
          line: 186,
          column: 33
        },
        end: {
          line: 186,
          column: 69
        }
      },
      "67": {
        start: {
          line: 187,
          column: 34
        },
        end: {
          line: 187,
          column: 90
        }
      },
      "68": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 189,
          column: 51
        }
      },
      "69": {
        start: {
          line: 190,
          column: 35
        },
        end: {
          line: 190,
          column: 92
        }
      },
      "70": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "71": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 39
        }
      },
      "72": {
        start: {
          line: 196,
          column: 13
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "73": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 35
        }
      },
      "74": {
        start: {
          line: 199,
          column: 13
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "75": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 37
        }
      },
      "76": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 34
        }
      },
      "77": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 220,
          column: 10
        }
      },
      "78": {
        start: {
          line: 226,
          column: 23
        },
        end: {
          line: 226,
          column: 25
        }
      },
      "79": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "80": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "81": {
        start: {
          line: 245,
          column: 13
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "82": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 260,
          column: 15
        }
      },
      "83": {
        start: {
          line: 263,
          column: 32
        },
        end: {
          line: 263,
          column: 71
        }
      },
      "84": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "85": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 279,
          column: 15
        }
      },
      "86": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "87": {
        start: {
          line: 283,
          column: 32
        },
        end: {
          line: 283,
          column: 57
        }
      },
      "88": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 300,
          column: 13
        }
      },
      "89": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 299,
          column: 19
        }
      },
      "90": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "91": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 49
        }
      },
      "92": {
        start: {
          line: 312,
          column: 30
        },
        end: {
          line: 313,
          column: 78
        }
      },
      "93": {
        start: {
          line: 313,
          column: 23
        },
        end: {
          line: 313,
          column: 77
        }
      },
      "94": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "95": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 60
        }
      },
      "96": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 54
        }
      },
      "97": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 19
        }
      },
      "98": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 47
        }
      },
      "99": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "100": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 40
        }
      },
      "101": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "102": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 56
        }
      },
      "103": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 92
        }
      },
      "104": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "105": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "106": {
        start: {
          line: 346,
          column: 34
        },
        end: {
          line: 346,
          column: 44
        }
      },
      "107": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 28
        }
      },
      "108": {
        start: {
          line: 348,
          column: 31
        },
        end: {
          line: 348,
          column: 53
        }
      },
      "109": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 38
        }
      },
      "110": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 49
        }
      },
      "111": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 49
        }
      },
      "112": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 355,
          column: 19
        }
      },
      "113": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 45
        }
      },
      "114": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 49
        }
      },
      "115": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 86
        }
      },
      "116": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "117": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 19
        }
      },
      "118": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 33
        }
      },
      "119": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "120": {
        start: {
          line: 375,
          column: 34
        },
        end: {
          line: 375,
          column: 67
        }
      },
      "121": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "122": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 90
        }
      },
      "123": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 403,
          column: 17
        }
      },
      "124": {
        start: {
          line: 380,
          column: 38
        },
        end: {
          line: 380,
          column: 48
        }
      },
      "125": {
        start: {
          line: 381,
          column: 20
        },
        end: {
          line: 381,
          column: 32
        }
      },
      "126": {
        start: {
          line: 382,
          column: 35
        },
        end: {
          line: 382,
          column: 57
        }
      },
      "127": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 42
        }
      },
      "128": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 384,
          column: 53
        }
      },
      "129": {
        start: {
          line: 385,
          column: 20
        },
        end: {
          line: 385,
          column: 53
        }
      },
      "130": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 76
        }
      },
      "131": {
        start: {
          line: 387,
          column: 49
        },
        end: {
          line: 387,
          column: 74
        }
      },
      "132": {
        start: {
          line: 388,
          column: 41
        },
        end: {
          line: 388,
          column: 74
        }
      },
      "133": {
        start: {
          line: 389,
          column: 40
        },
        end: {
          line: 389,
          column: 114
        }
      },
      "134": {
        start: {
          line: 390,
          column: 20
        },
        end: {
          line: 396,
          column: 23
        }
      },
      "135": {
        start: {
          line: 397,
          column: 20
        },
        end: {
          line: 402,
          column: 23
        }
      },
      "136": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 70
        }
      },
      "137": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 38
        }
      },
      "138": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 71
        }
      },
      "139": {
        start: {
          line: 419,
          column: 30
        },
        end: {
          line: 419,
          column: 76
        }
      },
      "140": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 423,
          column: 11
        }
      },
      "141": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 75
        }
      },
      "142": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 440,
          column: 11
        }
      },
      "143": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 439,
          column: 13
        }
      },
      "144": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 437,
          column: 19
        }
      },
      "145": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 438,
          column: 53
        }
      },
      "146": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 63
        }
      },
      "147": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 463,
          column: 9
        }
      },
      "148": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "149": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 67
        }
      },
      "150": {
        start: {
          line: 453,
          column: 24
        },
        end: {
          line: 453,
          column: 34
        }
      },
      "151": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 458,
          column: 13
        }
      },
      "152": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 457,
          column: 17
        }
      },
      "153": {
        start: {
          line: 456,
          column: 20
        },
        end: {
          line: 456,
          column: 49
        }
      },
      "154": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 62
        }
      },
      "155": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 79
        }
      },
      "156": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "157": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 52
        }
      },
      "158": {
        start: {
          line: 472,
          column: 23
        },
        end: {
          line: 472,
          column: 51
        }
      },
      "159": {
        start: {
          line: 473,
          column: 22
        },
        end: {
          line: 473,
          column: 49
        }
      },
      "160": {
        start: {
          line: 474,
          column: 21
        },
        end: {
          line: 474,
          column: 64
        }
      },
      "161": {
        start: {
          line: 475,
          column: 21
        },
        end: {
          line: 475,
          column: 51
        }
      },
      "162": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 479,
          column: 10
        }
      },
      "163": {
        start: {
          line: 485,
          column: 32
        },
        end: {
          line: 485,
          column: 34
        }
      },
      "164": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 488,
          column: 9
        }
      },
      "165": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 487,
          column: 119
        }
      },
      "166": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "167": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 92
        }
      },
      "168": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "169": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 103
        }
      },
      "170": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "171": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 89
        }
      },
      "172": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 31
        }
      },
      "173": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 522,
          column: 11
        }
      },
      "174": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 35
        }
      },
      "175": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 39
        }
      },
      "176": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 54
        }
      },
      "177": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 546,
          column: 47
        }
      },
      "178": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 559,
          column: 10
        }
      },
      "179": {
        start: {
          line: 562,
          column: 0
        },
        end: {
          line: 562,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 35
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 67
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 23
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 95
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 111
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 28
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 140
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 142,
            column: 46
          },
          end: {
            line: 142,
            column: 47
          }
        },
        loc: {
          start: {
            line: 142,
            column: 58
          },
          end: {
            line: 163,
            column: 9
          }
        },
        line: 142
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 170,
            column: 50
          },
          end: {
            line: 170,
            column: 51
          }
        },
        loc: {
          start: {
            line: 170,
            column: 62
          },
          end: {
            line: 177,
            column: 9
          }
        },
        line: 170
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 182
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 37
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 225
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 36
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 310
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 313,
            column: 18
          },
          end: {
            line: 313,
            column: 19
          }
        },
        loc: {
          start: {
            line: 313,
            column: 23
          },
          end: {
            line: 313,
            column: 77
          }
        },
        line: 313
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 43
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 341
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 38
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 369
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 387,
            column: 38
          },
          end: {
            line: 387,
            column: 39
          }
        },
        loc: {
          start: {
            line: 387,
            column: 49
          },
          end: {
            line: 387,
            column: 74
          }
        },
        line: 387
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 416,
            column: 4
          },
          end: {
            line: 416,
            column: 5
          }
        },
        loc: {
          start: {
            line: 416,
            column: 31
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 416
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 35
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 428
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 431,
            column: 30
          },
          end: {
            line: 431,
            column: 31
          }
        },
        loc: {
          start: {
            line: 431,
            column: 43
          },
          end: {
            line: 440,
            column: 9
          }
        },
        line: 431
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 32
          },
          end: {
            line: 464,
            column: 5
          }
        },
        line: 445
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        loc: {
          start: {
            line: 468,
            column: 25
          },
          end: {
            line: 480,
            column: 5
          }
        },
        line: 468
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 484,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        },
        loc: {
          start: {
            line: 484,
            column: 43
          },
          end: {
            line: 499,
            column: 5
          }
        },
        line: 484
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        loc: {
          start: {
            line: 503,
            column: 29
          },
          end: {
            line: 523,
            column: 5
          }
        },
        line: 503
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 527,
            column: 4
          },
          end: {
            line: 527,
            column: 5
          }
        },
        loc: {
          start: {
            line: 527,
            column: 24
          },
          end: {
            line: 529,
            column: 5
          }
        },
        line: 527
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 533,
            column: 4
          },
          end: {
            line: 533,
            column: 5
          }
        },
        loc: {
          start: {
            line: 533,
            column: 23
          },
          end: {
            line: 535,
            column: 5
          }
        },
        line: 533
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 5
          }
        },
        loc: {
          start: {
            line: 539,
            column: 22
          },
          end: {
            line: 541,
            column: 5
          }
        },
        line: 539
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 545,
            column: 5
          }
        },
        loc: {
          start: {
            line: 545,
            column: 35
          },
          end: {
            line: 547,
            column: 5
          }
        },
        line: 545
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 551,
            column: 4
          },
          end: {
            line: 551,
            column: 5
          }
        },
        loc: {
          start: {
            line: 551,
            column: 16
          },
          end: {
            line: 560,
            column: 5
          }
        },
        line: 551
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "1": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "5": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "6": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: 196,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        }],
        line: 193
      },
      "9": {
        loc: {
          start: {
            line: 196,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: 199,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        }],
        line: 196
      },
      "10": {
        loc: {
          start: {
            line: 199,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: 202,
            column: 13
          },
          end: {
            line: 204,
            column: 9
          }
        }],
        line: 199
      },
      "11": {
        loc: {
          start: {
            line: 215,
            column: 29
          },
          end: {
            line: 215,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 55
          },
          end: {
            line: 215,
            column: 99
          }
        }, {
          start: {
            line: 215,
            column: 102
          },
          end: {
            line: 215,
            column: 103
          }
        }],
        line: 215
      },
      "12": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: 245,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        }],
        line: 228
      },
      "13": {
        loc: {
          start: {
            line: 245,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "14": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "15": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "16": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 300,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 300,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "17": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 284,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 284,
            column: 40
          }
        }, {
          start: {
            line: 284,
            column: 44
          },
          end: {
            line: 284,
            column: 64
          }
        }],
        line: 284
      },
      "18": {
        loc: {
          start: {
            line: 313,
            column: 23
          },
          end: {
            line: 313,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 23
          },
          end: {
            line: 313,
            column: 44
          }
        }, {
          start: {
            line: 313,
            column: 48
          },
          end: {
            line: 313,
            column: 77
          }
        }],
        line: 313
      },
      "19": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "20": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 336,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "21": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "22": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "23": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "24": {
        loc: {
          start: {
            line: 377,
            column: 16
          },
          end: {
            line: 377,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 16
          },
          end: {
            line: 377,
            column: 54
          }
        }, {
          start: {
            line: 377,
            column: 58
          },
          end: {
            line: 377,
            column: 100
          }
        }],
        line: 377
      },
      "25": {
        loc: {
          start: {
            line: 379,
            column: 16
          },
          end: {
            line: 403,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 16
          },
          end: {
            line: 403,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "26": {
        loc: {
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 439,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 12
          },
          end: {
            line: 439,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "27": {
        loc: {
          start: {
            line: 432,
            column: 16
          },
          end: {
            line: 433,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 16
          },
          end: {
            line: 432,
            column: 62
          }
        }, {
          start: {
            line: 433,
            column: 16
          },
          end: {
            line: 433,
            column: 50
          }
        }],
        line: 432
      },
      "28": {
        loc: {
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 12
          },
          end: {
            line: 451,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "29": {
        loc: {
          start: {
            line: 455,
            column: 16
          },
          end: {
            line: 457,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 16
          },
          end: {
            line: 457,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "30": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "31": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 488,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 488,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "32": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "33": {
        loc: {
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "34": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "755e2fae345b39ee981ea072081d48e4f3d409ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1imyyby4wt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1imyyby4wt();
cov_1imyyby4wt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1imyyby4wt().s[1]++;
exports.MemoryOptimizer = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1imyyby4wt().s[2]++, require("@/core/logging/logger"));
const events_1 =
/* istanbul ignore next */
(cov_1imyyby4wt().s[3]++, require("events"));
/**
 * Intel NUC Memory Optimizer
 * Provides comprehensive memory management and optimization for 12GB systems
 */
class MemoryOptimizer extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  constructor(config) {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[0]++;
    cov_1imyyby4wt().s[4]++;
    super();
    /* istanbul ignore next */
    cov_1imyyby4wt().s[5]++;
    this.monitoringInterval = null;
    /* istanbul ignore next */
    cov_1imyyby4wt().s[6]++;
    this.gcOptimizationInterval = null;
    /* istanbul ignore next */
    cov_1imyyby4wt().s[7]++;
    this.currentMetrics = null;
    /* istanbul ignore next */
    cov_1imyyby4wt().s[8]++;
    this.gcStats = {
      cycles: 0,
      totalTime: 0,
      lastGC: null
    };
    /* istanbul ignore next */
    cov_1imyyby4wt().s[9]++;
    this.memoryHistory = [];
    /* istanbul ignore next */
    cov_1imyyby4wt().s[10]++;
    this.activeAlerts = new Map();
    /* istanbul ignore next */
    cov_1imyyby4wt().s[11]++;
    this.isOptimizing = false;
    /* istanbul ignore next */
    cov_1imyyby4wt().s[12]++;
    this.config = {
      maxSystemUsagePercent: 75,
      criticalSystemUsagePercent: 90,
      maxProcessMemoryMB: 2048,
      monitoringIntervalMs: 30000,
      // 30 seconds
      gcOptimizationIntervalMs: 300000,
      // 5 minutes
      enableAutoGC: true,
      enablePressureDetection: true,
      cleanupThresholdPercent: 80,
      ...config
    };
    /* istanbul ignore next */
    cov_1imyyby4wt().s[13]++;
    logger_1.logger.info('🧠 Intel NUC Memory Optimizer initializing...', {
      component: 'MemoryOptimizer',
      config: this.config
    });
  }
  /**
   * Start memory optimization and monitoring
   */
  async startOptimization() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[1]++;
    cov_1imyyby4wt().s[14]++;
    try {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[15]++;
      logger_1.logger.info('🚀 Starting Intel NUC memory optimization...');
      // Perform initial memory assessment
      /* istanbul ignore next */
      cov_1imyyby4wt().s[16]++;
      await this.performMemoryAssessment();
      // Start memory monitoring
      /* istanbul ignore next */
      cov_1imyyby4wt().s[17]++;
      this.startMemoryMonitoring();
      // Start garbage collection optimization
      /* istanbul ignore next */
      cov_1imyyby4wt().s[18]++;
      if (this.config.enableAutoGC) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[0][0]++;
        cov_1imyyby4wt().s[19]++;
        this.startGCOptimization();
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[0][1]++;
      }
      // Set up process memory limits
      cov_1imyyby4wt().s[20]++;
      this.setupProcessMemoryLimits();
      // Set up memory pressure detection
      /* istanbul ignore next */
      cov_1imyyby4wt().s[21]++;
      if (this.config.enablePressureDetection) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[1][0]++;
        cov_1imyyby4wt().s[22]++;
        this.setupMemoryPressureDetection();
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[1][1]++;
      }
      cov_1imyyby4wt().s[23]++;
      logger_1.logger.info('✅ Memory optimization started successfully');
      /* istanbul ignore next */
      cov_1imyyby4wt().s[24]++;
      this.emit('optimizationStarted');
    } catch (error) {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[25]++;
      logger_1.logger.error('❌ Failed to start memory optimization:', error);
      /* istanbul ignore next */
      cov_1imyyby4wt().s[26]++;
      throw error;
    }
  }
  /**
   * Stop memory optimization
   */
  stopOptimization() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[2]++;
    cov_1imyyby4wt().s[27]++;
    logger_1.logger.info('🛑 Stopping memory optimization...');
    /* istanbul ignore next */
    cov_1imyyby4wt().s[28]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[2][0]++;
      cov_1imyyby4wt().s[29]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_1imyyby4wt().s[30]++;
      this.monitoringInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[2][1]++;
    }
    cov_1imyyby4wt().s[31]++;
    if (this.gcOptimizationInterval) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[3][0]++;
      cov_1imyyby4wt().s[32]++;
      clearInterval(this.gcOptimizationInterval);
      /* istanbul ignore next */
      cov_1imyyby4wt().s[33]++;
      this.gcOptimizationInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[3][1]++;
    }
    cov_1imyyby4wt().s[34]++;
    logger_1.logger.info('✅ Memory optimization stopped');
    /* istanbul ignore next */
    cov_1imyyby4wt().s[35]++;
    this.emit('optimizationStopped');
  }
  /**
   * Perform comprehensive memory assessment
   */
  async performMemoryAssessment() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[3]++;
    cov_1imyyby4wt().s[36]++;
    logger_1.logger.info('🔍 Performing Intel NUC memory assessment...');
    const metrics =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[37]++, await this.collectMemoryMetrics());
    /* istanbul ignore next */
    cov_1imyyby4wt().s[38]++;
    this.currentMetrics = metrics;
    // Log system memory information
    /* istanbul ignore next */
    cov_1imyyby4wt().s[39]++;
    logger_1.logger.info('📊 System Memory Assessment:', {
      totalSystemMemory: `${Math.round(metrics.totalSystemMemory / 1024 / 1024 / 1024 * 100) / 100}GB`,
      systemUtilization: `${metrics.systemUtilization}%`,
      processMemory: `${Math.round(metrics.processMemory.rss / 1024 / 1024)}MB`,
      processUtilization: `${metrics.processUtilization}%`,
      pressureLevel: metrics.pressureLevel
    });
    // Check if system meets Intel NUC requirements
    const totalGB =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[40]++, metrics.totalSystemMemory / 1024 / 1024 / 1024);
    /* istanbul ignore next */
    cov_1imyyby4wt().s[41]++;
    if (totalGB < 11.5) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[4][0]++;
      cov_1imyyby4wt().s[42]++;
      // Allow for some system overhead
      logger_1.logger.warn('⚠️ System memory below Intel NUC specification:', {
        detected: `${Math.round(totalGB * 100) / 100}GB`,
        required: '12GB'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[4][1]++;
    }
    // Generate initial recommendations
    const recommendations =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[43]++, this.generateMemoryRecommendations(metrics));
    /* istanbul ignore next */
    cov_1imyyby4wt().s[44]++;
    if (recommendations.length > 0) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[5][0]++;
      cov_1imyyby4wt().s[45]++;
      logger_1.logger.info('💡 Memory optimization recommendations:', recommendations);
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[5][1]++;
    }
  }
  /**
   * Start continuous memory monitoring
   */
  startMemoryMonitoring() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[4]++;
    cov_1imyyby4wt().s[46]++;
    logger_1.logger.info('📊 Starting continuous memory monitoring...');
    /* istanbul ignore next */
    cov_1imyyby4wt().s[47]++;
    this.monitoringInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_1imyyby4wt().f[5]++;
      cov_1imyyby4wt().s[48]++;
      try {
        const metrics =
        /* istanbul ignore next */
        (cov_1imyyby4wt().s[49]++, await this.collectMemoryMetrics());
        /* istanbul ignore next */
        cov_1imyyby4wt().s[50]++;
        this.currentMetrics = metrics;
        // Add to history (keep last 100 entries)
        /* istanbul ignore next */
        cov_1imyyby4wt().s[51]++;
        this.memoryHistory.push(metrics);
        /* istanbul ignore next */
        cov_1imyyby4wt().s[52]++;
        if (this.memoryHistory.length > 100) {
          /* istanbul ignore next */
          cov_1imyyby4wt().b[6][0]++;
          cov_1imyyby4wt().s[53]++;
          this.memoryHistory.shift();
        } else
        /* istanbul ignore next */
        {
          cov_1imyyby4wt().b[6][1]++;
        }
        // Check for memory alerts
        cov_1imyyby4wt().s[54]++;
        await this.checkMemoryAlerts(metrics);
        // Emit metrics update
        /* istanbul ignore next */
        cov_1imyyby4wt().s[55]++;
        this.emit('metricsUpdated', metrics);
        // Log periodic status
        /* istanbul ignore next */
        cov_1imyyby4wt().s[56]++;
        if (this.memoryHistory.length % 10 === 0) {
          /* istanbul ignore next */
          cov_1imyyby4wt().b[7][0]++;
          cov_1imyyby4wt().s[57]++;
          // Every 10 intervals
          this.logMemoryStatus(metrics);
        } else
        /* istanbul ignore next */
        {
          cov_1imyyby4wt().b[7][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1imyyby4wt().s[58]++;
        logger_1.logger.error('❌ Memory monitoring error:', error);
      }
    }, this.config.monitoringIntervalMs);
  }
  /**
   * Start garbage collection optimization
   */
  startGCOptimization() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[6]++;
    cov_1imyyby4wt().s[59]++;
    logger_1.logger.info('🗑️ Starting garbage collection optimization...');
    /* istanbul ignore next */
    cov_1imyyby4wt().s[60]++;
    this.gcOptimizationInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_1imyyby4wt().f[7]++;
      cov_1imyyby4wt().s[61]++;
      try {
        /* istanbul ignore next */
        cov_1imyyby4wt().s[62]++;
        await this.optimizeGarbageCollection();
      } catch (error) {
        /* istanbul ignore next */
        cov_1imyyby4wt().s[63]++;
        logger_1.logger.error('❌ GC optimization error:', error);
      }
    }, this.config.gcOptimizationIntervalMs);
  }
  /**
   * Collect comprehensive memory metrics
   */
  async collectMemoryMetrics() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[8]++;
    // Get system memory information
    const totalSystemMemory =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[64]++, require('os').totalmem());
    const freeSystemMemory =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[65]++, require('os').freemem());
    const usedSystemMemory =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[66]++, totalSystemMemory - freeSystemMemory);
    const systemUtilization =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[67]++, Math.round(usedSystemMemory / totalSystemMemory * 100));
    // Get process memory information
    const processMemory =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[68]++, process.memoryUsage());
    const processUtilization =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[69]++, Math.round(processMemory.rss / totalSystemMemory * 100));
    // Calculate memory pressure level
    let pressureLevel;
    /* istanbul ignore next */
    cov_1imyyby4wt().s[70]++;
    if (systemUtilization >= this.config.criticalSystemUsagePercent) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[8][0]++;
      cov_1imyyby4wt().s[71]++;
      pressureLevel = 'CRITICAL';
    } else {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[8][1]++;
      cov_1imyyby4wt().s[72]++;
      if (systemUtilization >= this.config.maxSystemUsagePercent) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[9][0]++;
        cov_1imyyby4wt().s[73]++;
        pressureLevel = 'HIGH';
      } else {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[9][1]++;
        cov_1imyyby4wt().s[74]++;
        if (systemUtilization >= 60) {
          /* istanbul ignore next */
          cov_1imyyby4wt().b[10][0]++;
          cov_1imyyby4wt().s[75]++;
          pressureLevel = 'MEDIUM';
        } else {
          /* istanbul ignore next */
          cov_1imyyby4wt().b[10][1]++;
          cov_1imyyby4wt().s[76]++;
          pressureLevel = 'LOW';
        }
      }
    }
    /* istanbul ignore next */
    cov_1imyyby4wt().s[77]++;
    return {
      totalSystemMemory,
      usedSystemMemory,
      freeSystemMemory,
      systemUtilization,
      processMemory,
      processUtilization,
      gcStats: {
        cycles: this.gcStats.cycles,
        totalTime: this.gcStats.totalTime,
        averageTime: this.gcStats.cycles > 0 ?
        /* istanbul ignore next */
        (cov_1imyyby4wt().b[11][0]++, this.gcStats.totalTime / this.gcStats.cycles) :
        /* istanbul ignore next */
        (cov_1imyyby4wt().b[11][1]++, 0),
        lastGC: this.gcStats.lastGC
      },
      pressureLevel,
      timestamp: new Date()
    };
  }
  /**
   * Check for memory alerts and generate notifications
   */
  async checkMemoryAlerts(metrics) {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[9]++;
    const alerts =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[78]++, []);
    // Check system memory usage
    /* istanbul ignore next */
    cov_1imyyby4wt().s[79]++;
    if (metrics.systemUtilization >= this.config.criticalSystemUsagePercent) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[12][0]++;
      cov_1imyyby4wt().s[80]++;
      alerts.push({
        id: `system_memory_critical_${Date.now()}`,
        type: 'MEMORY_CRITICAL',
        severity: 'CRITICAL',
        message: `System memory usage critical: ${metrics.systemUtilization}%`,
        currentUsage: metrics.systemUtilization,
        threshold: this.config.criticalSystemUsagePercent,
        timestamp: new Date(),
        recommendations: ['Immediate memory cleanup required', 'Consider restarting non-essential services', 'Monitor for memory leaks', 'Check for runaway processes']
      });
    } else {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[12][1]++;
      cov_1imyyby4wt().s[81]++;
      if (metrics.systemUtilization >= this.config.maxSystemUsagePercent) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[13][0]++;
        cov_1imyyby4wt().s[82]++;
        alerts.push({
          id: `system_memory_warning_${Date.now()}`,
          type: 'MEMORY_WARNING',
          severity: 'HIGH',
          message: `System memory usage high: ${metrics.systemUtilization}%`,
          currentUsage: metrics.systemUtilization,
          threshold: this.config.maxSystemUsagePercent,
          timestamp: new Date(),
          recommendations: ['Trigger garbage collection', 'Clear unnecessary caches', 'Monitor memory trends', 'Consider memory optimization']
        });
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[13][1]++;
      }
    }
    // Check process memory usage
    const processMemoryMB =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[83]++, metrics.processMemory.rss / 1024 / 1024);
    /* istanbul ignore next */
    cov_1imyyby4wt().s[84]++;
    if (processMemoryMB >= this.config.maxProcessMemoryMB) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[14][0]++;
      cov_1imyyby4wt().s[85]++;
      alerts.push({
        id: `process_memory_warning_${Date.now()}`,
        type: 'MEMORY_WARNING',
        severity: 'HIGH',
        message: `Process memory usage high: ${Math.round(processMemoryMB)}MB`,
        currentUsage: processMemoryMB,
        threshold: this.config.maxProcessMemoryMB,
        timestamp: new Date(),
        recommendations: ['Force garbage collection', 'Clear application caches', 'Check for memory leaks in application code', 'Consider process restart if persistent']
      });
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[14][1]++;
    }
    // Check for potential memory leaks
    cov_1imyyby4wt().s[86]++;
    if (this.memoryHistory.length >= 10) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[15][0]++;
      const recentTrend =
      /* istanbul ignore next */
      (cov_1imyyby4wt().s[87]++, this.analyzeMemoryTrend());
      /* istanbul ignore next */
      cov_1imyyby4wt().s[88]++;
      if (
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[17][0]++, recentTrend.isIncreasing) &&
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[17][1]++, recentTrend.rate > 5)) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[16][0]++;
        cov_1imyyby4wt().s[89]++;
        // 5% increase per interval
        alerts.push({
          id: `memory_leak_warning_${Date.now()}`,
          type: 'MEMORY_LEAK',
          severity: 'MEDIUM',
          message: `Potential memory leak detected: ${recentTrend.rate.toFixed(1)}% increase rate`,
          currentUsage: metrics.systemUtilization,
          threshold: 0,
          timestamp: new Date(),
          recommendations: ['Investigate memory leak sources', 'Review recent code changes', 'Monitor garbage collection effectiveness', 'Consider heap dump analysis']
        });
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[16][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[15][1]++;
    }
    // Process alerts
    cov_1imyyby4wt().s[90]++;
    for (const alert of alerts) {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[91]++;
      await this.processMemoryAlert(alert);
    }
  }
  /**
   * Process memory alert
   */
  async processMemoryAlert(alert) {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[10]++;
    // Check if similar alert already exists
    const existingAlert =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[92]++, Array.from(this.activeAlerts.values()).find(a => {
      /* istanbul ignore next */
      cov_1imyyby4wt().f[11]++;
      cov_1imyyby4wt().s[93]++;
      return /* istanbul ignore next */(cov_1imyyby4wt().b[18][0]++, a.type === alert.type) &&
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[18][1]++, a.severity === alert.severity);
    }));
    /* istanbul ignore next */
    cov_1imyyby4wt().s[94]++;
    if (existingAlert) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[19][0]++;
      cov_1imyyby4wt().s[95]++;
      // Update existing alert
      existingAlert.currentUsage = alert.currentUsage;
      /* istanbul ignore next */
      cov_1imyyby4wt().s[96]++;
      existingAlert.timestamp = alert.timestamp;
      /* istanbul ignore next */
      cov_1imyyby4wt().s[97]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[19][1]++;
    }
    // Add new alert
    cov_1imyyby4wt().s[98]++;
    this.activeAlerts.set(alert.id, alert);
    // Log alert
    /* istanbul ignore next */
    cov_1imyyby4wt().s[99]++;
    logger_1.logger.warn(`⚠️ Memory Alert: ${alert.message}`, {
      component: 'MemoryOptimizer',
      alertType: alert.type,
      severity: alert.severity,
      currentUsage: alert.currentUsage,
      threshold: alert.threshold,
      recommendations: alert.recommendations
    });
    // Emit alert event
    /* istanbul ignore next */
    cov_1imyyby4wt().s[100]++;
    this.emit('memoryAlert', alert);
    // Take automatic action for critical alerts
    /* istanbul ignore next */
    cov_1imyyby4wt().s[101]++;
    if (alert.severity === 'CRITICAL') {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[20][0]++;
      cov_1imyyby4wt().s[102]++;
      await this.handleCriticalMemoryAlert(alert);
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[20][1]++;
    }
  }
  /**
   * Handle critical memory alerts with automatic actions
   */
  async handleCriticalMemoryAlert(alert) {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[12]++;
    cov_1imyyby4wt().s[103]++;
    logger_1.logger.warn('🚨 Handling critical memory alert with automatic actions...');
    /* istanbul ignore next */
    cov_1imyyby4wt().s[104]++;
    try {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[105]++;
      // Force garbage collection
      if (global.gc) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[21][0]++;
        const startTime =
        /* istanbul ignore next */
        (cov_1imyyby4wt().s[106]++, Date.now());
        /* istanbul ignore next */
        cov_1imyyby4wt().s[107]++;
        global.gc();
        const gcTime =
        /* istanbul ignore next */
        (cov_1imyyby4wt().s[108]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1imyyby4wt().s[109]++;
        this.gcStats.cycles++;
        /* istanbul ignore next */
        cov_1imyyby4wt().s[110]++;
        this.gcStats.totalTime += gcTime;
        /* istanbul ignore next */
        cov_1imyyby4wt().s[111]++;
        this.gcStats.lastGC = new Date();
        /* istanbul ignore next */
        cov_1imyyby4wt().s[112]++;
        logger_1.logger.info('🗑️ Emergency garbage collection completed', {
          gcTime: `${gcTime}ms`,
          totalCycles: this.gcStats.cycles
        });
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[21][1]++;
      }
      // Clear internal caches
      cov_1imyyby4wt().s[113]++;
      await this.clearInternalCaches();
      // Emit emergency cleanup event
      /* istanbul ignore next */
      cov_1imyyby4wt().s[114]++;
      this.emit('emergencyCleanup', alert);
    } catch (error) {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[115]++;
      logger_1.logger.error('❌ Failed to handle critical memory alert:', error);
    }
  }
  /**
   * Optimize garbage collection
   */
  async optimizeGarbageCollection() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[13]++;
    cov_1imyyby4wt().s[116]++;
    if (this.isOptimizing) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[22][0]++;
      cov_1imyyby4wt().s[117]++;
      return; // Prevent concurrent optimization
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[22][1]++;
    }
    cov_1imyyby4wt().s[118]++;
    this.isOptimizing = true;
    /* istanbul ignore next */
    cov_1imyyby4wt().s[119]++;
    try {
      const beforeMetrics =
      /* istanbul ignore next */
      (cov_1imyyby4wt().s[120]++, await this.collectMemoryMetrics());
      // Check if GC optimization is needed
      /* istanbul ignore next */
      cov_1imyyby4wt().s[121]++;
      if (
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[24][0]++, beforeMetrics.pressureLevel === 'HIGH') ||
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[24][1]++, beforeMetrics.pressureLevel === 'CRITICAL')) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[23][0]++;
        cov_1imyyby4wt().s[122]++;
        logger_1.logger.info('🗑️ Performing garbage collection optimization...');
        /* istanbul ignore next */
        cov_1imyyby4wt().s[123]++;
        if (global.gc) {
          /* istanbul ignore next */
          cov_1imyyby4wt().b[25][0]++;
          const startTime =
          /* istanbul ignore next */
          (cov_1imyyby4wt().s[124]++, Date.now());
          /* istanbul ignore next */
          cov_1imyyby4wt().s[125]++;
          global.gc();
          const gcTime =
          /* istanbul ignore next */
          (cov_1imyyby4wt().s[126]++, Date.now() - startTime);
          /* istanbul ignore next */
          cov_1imyyby4wt().s[127]++;
          this.gcStats.cycles++;
          /* istanbul ignore next */
          cov_1imyyby4wt().s[128]++;
          this.gcStats.totalTime += gcTime;
          /* istanbul ignore next */
          cov_1imyyby4wt().s[129]++;
          this.gcStats.lastGC = new Date();
          // Wait a moment for GC to complete
          /* istanbul ignore next */
          cov_1imyyby4wt().s[130]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_1imyyby4wt().f[14]++;
            cov_1imyyby4wt().s[131]++;
            return setTimeout(resolve, 1000);
          });
          const afterMetrics =
          /* istanbul ignore next */
          (cov_1imyyby4wt().s[132]++, await this.collectMemoryMetrics());
          const memoryFreed =
          /* istanbul ignore next */
          (cov_1imyyby4wt().s[133]++, beforeMetrics.processMemory.heapUsed - afterMetrics.processMemory.heapUsed);
          /* istanbul ignore next */
          cov_1imyyby4wt().s[134]++;
          logger_1.logger.info('✅ Garbage collection completed', {
            gcTime: `${gcTime}ms`,
            memoryFreed: `${Math.round(memoryFreed / 1024 / 1024)}MB`,
            beforeUsage: `${beforeMetrics.systemUtilization}%`,
            afterUsage: `${afterMetrics.systemUtilization}%`,
            totalCycles: this.gcStats.cycles
          });
          /* istanbul ignore next */
          cov_1imyyby4wt().s[135]++;
          this.emit('gcOptimized', {
            gcTime,
            memoryFreed,
            beforeMetrics,
            afterMetrics
          });
        } else
        /* istanbul ignore next */
        {
          cov_1imyyby4wt().b[25][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[23][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[136]++;
      logger_1.logger.error('❌ GC optimization failed:', error);
    } finally {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[137]++;
      this.isOptimizing = false;
    }
  }
  /**
   * Setup process memory limits
   */
  setupProcessMemoryLimits() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[15]++;
    cov_1imyyby4wt().s[138]++;
    logger_1.logger.info('🔒 Setting up process memory limits...');
    // Set V8 heap size limit (if not already set)
    const maxHeapSizeMB =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[139]++, Math.min(this.config.maxProcessMemoryMB, 4096)); // Max 4GB for V8
    /* istanbul ignore next */
    cov_1imyyby4wt().s[140]++;
    logger_1.logger.info('📏 Process memory limits configured', {
      maxProcessMemory: `${this.config.maxProcessMemoryMB}MB`,
      maxHeapSize: `${maxHeapSizeMB}MB`
    });
  }
  /**
   * Setup memory pressure detection
   */
  setupMemoryPressureDetection() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[16]++;
    cov_1imyyby4wt().s[141]++;
    logger_1.logger.info('🔍 Setting up memory pressure detection...');
    // Monitor for memory pressure events
    /* istanbul ignore next */
    cov_1imyyby4wt().s[142]++;
    process.on('warning', warning => {
      /* istanbul ignore next */
      cov_1imyyby4wt().f[17]++;
      cov_1imyyby4wt().s[143]++;
      if (
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[27][0]++, warning.name === 'MaxListenersExceededWarning') ||
      /* istanbul ignore next */
      (cov_1imyyby4wt().b[27][1]++, warning.message.includes('memory'))) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[26][0]++;
        cov_1imyyby4wt().s[144]++;
        logger_1.logger.warn('⚠️ Memory pressure warning detected:', {
          name: warning.name,
          message: warning.message
        });
        /* istanbul ignore next */
        cov_1imyyby4wt().s[145]++;
        this.emit('memoryPressure', warning);
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[26][1]++;
      }
    });
  }
  /**
   * Clear internal caches and temporary data
   */
  async clearInternalCaches() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[18]++;
    cov_1imyyby4wt().s[146]++;
    logger_1.logger.info('🧹 Clearing internal caches...');
    /* istanbul ignore next */
    cov_1imyyby4wt().s[147]++;
    try {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[148]++;
      // Clear memory history (keep only recent entries)
      if (this.memoryHistory.length > 20) {
        /* istanbul ignore next */
        cov_1imyyby4wt().b[28][0]++;
        cov_1imyyby4wt().s[149]++;
        this.memoryHistory = this.memoryHistory.slice(-20);
      } else
      /* istanbul ignore next */
      {
        cov_1imyyby4wt().b[28][1]++;
      }
      // Clear old alerts
      const now =
      /* istanbul ignore next */
      (cov_1imyyby4wt().s[150]++, Date.now());
      /* istanbul ignore next */
      cov_1imyyby4wt().s[151]++;
      for (const [id, alert] of this.activeAlerts.entries()) {
        /* istanbul ignore next */
        cov_1imyyby4wt().s[152]++;
        if (now - alert.timestamp.getTime() > 300000) {
          /* istanbul ignore next */
          cov_1imyyby4wt().b[29][0]++;
          cov_1imyyby4wt().s[153]++;
          // 5 minutes old
          this.activeAlerts.delete(id);
        } else
        /* istanbul ignore next */
        {
          cov_1imyyby4wt().b[29][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1imyyby4wt().s[154]++;
      logger_1.logger.info('✅ Internal caches cleared');
    } catch (error) {
      /* istanbul ignore next */
      cov_1imyyby4wt().s[155]++;
      logger_1.logger.error('❌ Failed to clear internal caches:', error);
    }
  }
  /**
   * Analyze memory usage trend
   */
  analyzeMemoryTrend() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[19]++;
    cov_1imyyby4wt().s[156]++;
    if (this.memoryHistory.length < 5) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[30][0]++;
      cov_1imyyby4wt().s[157]++;
      return {
        isIncreasing: false,
        rate: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[30][1]++;
    }
    const recent =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[158]++, this.memoryHistory.slice(-5));
    const first =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[159]++, recent[0].systemUtilization);
    const last =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[160]++, recent[recent.length - 1].systemUtilization);
    const rate =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[161]++, (last - first) / first * 100);
    /* istanbul ignore next */
    cov_1imyyby4wt().s[162]++;
    return {
      isIncreasing: rate > 0,
      rate: Math.abs(rate)
    };
  }
  /**
   * Generate memory optimization recommendations
   */
  generateMemoryRecommendations(metrics) {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[20]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_1imyyby4wt().s[163]++, []);
    /* istanbul ignore next */
    cov_1imyyby4wt().s[164]++;
    if (metrics.systemUtilization > 80) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[31][0]++;
      cov_1imyyby4wt().s[165]++;
      recommendations.push('System memory usage is high - consider enabling more aggressive garbage collection');
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[31][1]++;
    }
    cov_1imyyby4wt().s[166]++;
    if (metrics.processUtilization > 15) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[32][0]++;
      cov_1imyyby4wt().s[167]++;
      recommendations.push('Process memory usage is high - monitor for memory leaks');
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[32][1]++;
    }
    cov_1imyyby4wt().s[168]++;
    if (metrics.gcStats.averageTime > 100) {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[33][0]++;
      cov_1imyyby4wt().s[169]++;
      recommendations.push('Garbage collection is taking too long - consider heap optimization');
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[33][1]++;
    }
    cov_1imyyby4wt().s[170]++;
    if (metrics.pressureLevel === 'CRITICAL') {
      /* istanbul ignore next */
      cov_1imyyby4wt().b[34][0]++;
      cov_1imyyby4wt().s[171]++;
      recommendations.push('Critical memory pressure - immediate action required');
    } else
    /* istanbul ignore next */
    {
      cov_1imyyby4wt().b[34][1]++;
    }
    cov_1imyyby4wt().s[172]++;
    return recommendations;
  }
  /**
   * Log memory status
   */
  logMemoryStatus(metrics) {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[21]++;
    cov_1imyyby4wt().s[173]++;
    logger_1.logger.debug('📊 Memory Status Update', {
      component: 'MemoryOptimizer',
      systemMemory: {
        total: `${Math.round(metrics.totalSystemMemory / 1024 / 1024 / 1024 * 100) / 100}GB`,
        used: `${Math.round(metrics.usedSystemMemory / 1024 / 1024 / 1024 * 100) / 100}GB`,
        utilization: `${metrics.systemUtilization}%`
      },
      processMemory: {
        rss: `${Math.round(metrics.processMemory.rss / 1024 / 1024)}MB`,
        heapUsed: `${Math.round(metrics.processMemory.heapUsed / 1024 / 1024)}MB`,
        heapTotal: `${Math.round(metrics.processMemory.heapTotal / 1024 / 1024)}MB`
      },
      gcStats: {
        cycles: metrics.gcStats.cycles,
        averageTime: `${Math.round(metrics.gcStats.averageTime)}ms`
      },
      pressureLevel: metrics.pressureLevel,
      activeAlerts: this.activeAlerts.size
    });
  }
  /**
   * Get current memory metrics
   */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[22]++;
    cov_1imyyby4wt().s[174]++;
    return this.currentMetrics;
  }
  /**
   * Get memory usage history
   */
  getMemoryHistory() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[23]++;
    cov_1imyyby4wt().s[175]++;
    return [...this.memoryHistory];
  }
  /**
   * Get active memory alerts
   */
  getActiveAlerts() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[24]++;
    cov_1imyyby4wt().s[176]++;
    return Array.from(this.activeAlerts.values());
  }
  /**
   * Force garbage collection
   */
  async forceGarbageCollection() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[25]++;
    cov_1imyyby4wt().s[177]++;
    await this.optimizeGarbageCollection();
  }
  /**
   * Get memory optimizer status
   */
  getStatus() {
    /* istanbul ignore next */
    cov_1imyyby4wt().f[26]++;
    cov_1imyyby4wt().s[178]++;
    return {
      isOptimizing: this.isOptimizing,
      isMonitoring: this.monitoringInterval !== null,
      currentMetrics: this.currentMetrics,
      activeAlerts: this.activeAlerts.size,
      gcStats: this.gcStats,
      config: this.config
    };
  }
}
/* istanbul ignore next */
cov_1imyyby4wt().s[179]++;
exports.MemoryOptimizer = MemoryOptimizer;