{"file":"C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\__tests__\\performance-calculator.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\__tests__\\performance-calculator.test.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * PERFORMANCE CALCULATOR TESTS\r\n * =============================================================================\r\n * \r\n * Comprehensive tests for the performance calculator module.\r\n * Tests all performance metrics calculations including Sharpe ratio,\r\n * drawdown analysis, and risk metrics.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { describe, test, expect } from '@jest/globals';\r\nimport { PerformanceCalculator } from '../performance-calculator';\r\nimport { BacktestTrade, BacktestPortfolio } from '../types';\r\nimport { TradingSignal } from '../../strategies/types';\r\n\r\n// Sample data for testing\r\nconst sampleSignal: TradingSignal = {\r\n  id: 'test_signal',\r\n  symbol: 'BTC_USDT',\r\n  type: 'BUY',\r\n  strength: 75,\r\n  confidence: 80,\r\n  indicators: ['MA_CROSSOVER'],\r\n  reasoning: 'Test signal',\r\n  riskReward: 2.0,\r\n  timestamp: new Date('2024-01-01T00:00:00Z'),\r\n};\r\n\r\nconst sampleTrades: BacktestTrade[] = [\r\n  {\r\n    id: 'trade_1',\r\n    symbol: 'BTC_USDT',\r\n    type: 'BUY',\r\n    quantity: 0.1,\r\n    entryPrice: 42000,\r\n    exitPrice: 43000,\r\n    entryTime: new Date('2024-01-01T00:00:00Z'),\r\n    exitTime: new Date('2024-01-01T01:00:00Z'),\r\n    strategy: 'TestStrategy',\r\n    signal: sampleSignal,\r\n    stopLoss: 41580,\r\n    takeProfit: 43050,\r\n    fees: 8.4,\r\n    slippage: 4.2,\r\n    pnl: 91.6,\r\n    pnlPercentage: 2.18,\r\n    status: 'CLOSED',\r\n    exitReason: 'TAKE_PROFIT',\r\n  },\r\n  {\r\n    id: 'trade_2',\r\n    symbol: 'BTC_USDT',\r\n    type: 'BUY',\r\n    quantity: 0.05,\r\n    entryPrice: 43000,\r\n    exitPrice: 42500,\r\n    entryTime: new Date('2024-01-01T01:00:00Z'),\r\n    exitTime: new Date('2024-01-01T02:00:00Z'),\r\n    strategy: 'TestStrategy',\r\n    signal: sampleSignal,\r\n    stopLoss: 42570,\r\n    takeProfit: 43645,\r\n    fees: 4.25,\r\n    slippage: 2.15,\r\n    pnl: -29.25,\r\n    pnlPercentage: -1.36,\r\n    status: 'CLOSED',\r\n    exitReason: 'STOP_LOSS',\r\n  },\r\n];\r\n\r\nconst samplePortfolioHistory: BacktestPortfolio[] = [\r\n  {\r\n    timestamp: new Date('2024-01-01T00:00:00Z'),\r\n    balance: 10000,\r\n    equity: 10000,\r\n    positions: [],\r\n    totalPnL: 0,\r\n    unrealizedPnL: 0,\r\n    realizedPnL: 0,\r\n    drawdown: 0,\r\n    drawdownPercentage: 0,\r\n    maxDrawdown: 0,\r\n    maxDrawdownPercentage: 0,\r\n  },\r\n  {\r\n    timestamp: new Date('2024-01-01T01:00:00Z'),\r\n    balance: 10000,\r\n    equity: 10091.6,\r\n    positions: [],\r\n    totalPnL: 91.6,\r\n    unrealizedPnL: 0,\r\n    realizedPnL: 91.6,\r\n    drawdown: 0,\r\n    drawdownPercentage: 0,\r\n    maxDrawdown: 0,\r\n    maxDrawdownPercentage: 0,\r\n  },\r\n  {\r\n    timestamp: new Date('2024-01-01T02:00:00Z'),\r\n    balance: 10000,\r\n    equity: 10062.35,\r\n    positions: [],\r\n    totalPnL: 62.35,\r\n    unrealizedPnL: 0,\r\n    realizedPnL: 62.35,\r\n    drawdown: 29.25,\r\n    drawdownPercentage: 0.29,\r\n    maxDrawdown: 29.25,\r\n    maxDrawdownPercentage: 0.29,\r\n  },\r\n];\r\n\r\ndescribe('PerformanceCalculator', () => {\r\n  describe('Performance Metrics Calculation', () => {\r\n    test('should calculate basic performance metrics correctly', () => {\r\n      const performance = PerformanceCalculator.calculatePerformanceMetrics(\r\n        sampleTrades,\r\n        samplePortfolioHistory,\r\n        10000\r\n      );\r\n\r\n      expect(performance.totalReturn).toBeCloseTo(62.35, 2);\r\n      expect(performance.totalReturnPercentage).toBeCloseTo(0.62, 2);\r\n      expect(performance.maxDrawdown).toBeCloseTo(29.25, 2);\r\n      expect(performance.maxDrawdownPercentage).toBeCloseTo(0.29, 2);\r\n    });\r\n\r\n    test('should calculate Sharpe ratio', () => {\r\n      const performance = PerformanceCalculator.calculatePerformanceMetrics(\r\n        sampleTrades,\r\n        samplePortfolioHistory,\r\n        10000\r\n      );\r\n\r\n      expect(performance.sharpeRatio).toBeDefined();\r\n      expect(typeof performance.sharpeRatio).toBe('number');\r\n    });\r\n\r\n    test('should calculate profit factor correctly', () => {\r\n      const performance = PerformanceCalculator.calculatePerformanceMetrics(\r\n        sampleTrades,\r\n        samplePortfolioHistory,\r\n        10000\r\n      );\r\n\r\n      expect(performance.profitFactor).toBeCloseTo(3.13, 1);\r\n    });\r\n  });\r\n\r\n  describe('Trade Statistics', () => {\r\n    test('should calculate trade statistics correctly', () => {\r\n      const tradeStats = PerformanceCalculator.calculateTradeStatistics(sampleTrades);\r\n\r\n      expect(tradeStats.total).toBe(2);\r\n      expect(tradeStats.winning).toBe(1);\r\n      expect(tradeStats.losing).toBe(1);\r\n      expect(tradeStats.winRate).toBe(50);\r\n      expect(tradeStats.averageWin).toBeCloseTo(91.6, 2);\r\n      expect(tradeStats.averageLoss).toBeCloseTo(29.25, 2);\r\n    });\r\n  });\r\n\r\n  describe('Risk Metrics', () => {\r\n    test('should calculate risk metrics correctly', () => {\r\n      const returns = [0.00916, -0.0029];\r\n      const riskMetrics = PerformanceCalculator.calculateRiskMetrics(returns);\r\n\r\n      expect(riskMetrics.volatility).toBeGreaterThan(0);\r\n      expect(riskMetrics.var95).toBeDefined();\r\n      expect(riskMetrics.cvar95).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('Curve Generation', () => {\r\n    test('should generate equity curve correctly', () => {\r\n      const equityCurve = PerformanceCalculator.generateEquityCurve(samplePortfolioHistory);\r\n\r\n      expect(equityCurve.length).toBe(samplePortfolioHistory.length);\r\n      expect(equityCurve[0].equity).toBe(10000);\r\n      expect(equityCurve[1].equity).toBeCloseTo(10091.6, 2);\r\n    });\r\n\r\n    test('should generate drawdown curve correctly', () => {\r\n      const drawdownCurve = PerformanceCalculator.generateDrawdownCurve(samplePortfolioHistory);\r\n\r\n      expect(drawdownCurve.length).toBe(samplePortfolioHistory.length);\r\n      expect(drawdownCurve[0].drawdown).toBe(0);\r\n      expect(drawdownCurve[2].drawdown).toBeCloseTo(29.25, 2);\r\n    });\r\n  });\r\n});"],"version":3}