a461ca4f127ef39e9723f57068cdb619
"use strict";

/**
 * =============================================================================
 * BACKTESTING ENGINE - REALISTIC EXECUTION SIMULATION
 * =============================================================================
 *
 * This module implements a comprehensive backtesting engine that simulates
 * realistic trading execution with proper slippage, fees, and market impact.
 * The engine processes historical market data and executes trading strategies
 * to validate their performance under real market conditions.
 *
 * CRITICAL FEATURES:
 * - NO MOCK DATA - only real historical market data
 * - Realistic execution simulation with slippage and fees
 * - Comprehensive risk management integration
 * - Strategy harmonization and signal processing
 * - Real-time progress tracking and reporting
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_2168gut2mt() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\backtesting-engine.ts";
  var hash = "745649022767face5b6170ad565624d662bc75c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\backtesting-engine.ts",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "1": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "2": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "3": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "4": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "5": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 59
        }
      },
      "6": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "7": {
        start: {
          line: 31,
          column: 33
        },
        end: {
          line: 31,
          column: 68
        }
      },
      "8": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "9": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 93
        }
      },
      "10": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 63
        }
      },
      "11": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "12": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "13": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "14": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 83
        }
      },
      "15": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 53
        }
      },
      "16": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 73
        }
      },
      "17": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 36
        }
      },
      "18": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "19": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 155
        }
      },
      "20": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 48
        }
      },
      "21": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "22": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 115
        }
      },
      "23": {
        start: {
          line: 94,
          column: 35
        },
        end: {
          line: 94,
          column: 82
        }
      },
      "24": {
        start: {
          line: 96,
          column: 35
        },
        end: {
          line: 96,
          column: 104
        }
      },
      "25": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "26": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 95
        }
      },
      "27": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 51
        }
      },
      "28": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 94
        }
      },
      "29": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 113
        }
      },
      "30": {
        start: {
          line: 104,
          column: 31
        },
        end: {
          line: 104,
          column: 95
        }
      },
      "31": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 105
        }
      },
      "32": {
        start: {
          line: 107,
          column: 37
        },
        end: {
          line: 107,
          column: 97
        }
      },
      "33": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 118
        }
      },
      "34": {
        start: {
          line: 110,
          column: 27
        },
        end: {
          line: 110,
          column: 104
        }
      },
      "35": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "36": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 121
        }
      },
      "37": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 91
        }
      },
      "38": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 201
        }
      },
      "39": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 26
        }
      },
      "40": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 66
        }
      },
      "41": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "42": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 117
        }
      },
      "43": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 24
        }
      },
      "44": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 41
        }
      },
      "45": {
        start: {
          line: 151,
          column: 27
        },
        end: {
          line: 151,
          column: 36
        }
      },
      "46": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "47": {
        start: {
          line: 153,
          column: 29
        },
        end: {
          line: 153,
          column: 62
        }
      },
      "48": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "49": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 79
        }
      },
      "50": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "51": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "52": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 92
        }
      },
      "53": {
        start: {
          line: 160,
          column: 32
        },
        end: {
          line: 160,
          column: 78
        }
      },
      "54": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 54
        }
      },
      "55": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 98
        }
      },
      "56": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 98
        }
      },
      "57": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 49
        }
      },
      "58": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 26
        }
      },
      "59": {
        start: {
          line: 175,
          column: 33
        },
        end: {
          line: 175,
          column: 35
        }
      },
      "60": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "61": {
        start: {
          line: 184,
          column: 31
        },
        end: {
          line: 184,
          column: 33
        }
      },
      "62": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "63": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "64": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 58
        }
      },
      "65": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 99
        }
      },
      "66": {
        start: {
          line: 190,
          column: 38
        },
        end: {
          line: 190,
          column: 97
        }
      },
      "67": {
        start: {
          line: 191,
          column: 26
        },
        end: {
          line: 191,
          column: 27
        }
      },
      "68": {
        start: {
          line: 192,
          column: 24
        },
        end: {
          line: 192,
          column: 45
        }
      },
      "69": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "70": {
        start: {
          line: 194,
          column: 21
        },
        end: {
          line: 194,
          column: 22
        }
      },
      "71": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "72": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 58
        }
      },
      "73": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 51
        }
      },
      "74": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "75": {
        start: {
          line: 202,
          column: 45
        },
        end: {
          line: 202,
          column: 72
        }
      },
      "76": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 93
        }
      },
      "77": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 30
        }
      },
      "78": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 74
        }
      },
      "79": {
        start: {
          line: 209,
          column: 37
        },
        end: {
          line: 209,
          column: 90
        }
      },
      "80": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 52
        }
      },
      "81": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "82": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 52
        }
      },
      "83": {
        start: {
          line: 216,
          column: 29
        },
        end: {
          line: 216,
          column: 78
        }
      },
      "84": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "85": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 222,
          column: 19
        }
      },
      "86": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "87": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 121
        }
      },
      "88": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 75
        }
      },
      "89": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "90": {
        start: {
          line: 233,
          column: 35
        },
        end: {
          line: 233,
          column: 76
        }
      },
      "91": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 74
        }
      },
      "92": {
        start: {
          line: 236,
          column: 35
        },
        end: {
          line: 236,
          column: 92
        }
      },
      "93": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 50
        }
      },
      "94": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 32
        }
      },
      "95": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "96": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 248,
          column: 23
        }
      },
      "97": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 23
        }
      },
      "98": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "99": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 86
        }
      },
      "100": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 23
        }
      },
      "101": {
        start: {
          line: 255,
          column: 33
        },
        end: {
          line: 255,
          column: 87
        }
      },
      "102": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "103": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 92
        }
      },
      "104": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 23
        }
      },
      "105": {
        start: {
          line: 261,
          column: 34
        },
        end: {
          line: 261,
          column: 128
        }
      },
      "106": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "107": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 60
        }
      },
      "108": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "109": {
        start: {
          line: 266,
          column: 37
        },
        end: {
          line: 277,
          column: 21
        }
      },
      "110": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 77
        }
      },
      "111": {
        start: {
          line: 280,
          column: 21
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "112": {
        start: {
          line: 282,
          column: 39
        },
        end: {
          line: 282,
          column: 78
        }
      },
      "113": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 296,
          column: 21
        }
      },
      "114": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 68
        }
      },
      "115": {
        start: {
          line: 286,
          column: 43
        },
        end: {
          line: 286,
          column: 102
        }
      },
      "116": {
        start: {
          line: 286,
          column: 82
        },
        end: {
          line: 286,
          column: 101
        }
      },
      "117": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 295,
          column: 25
        }
      },
      "118": {
        start: {
          line: 288,
          column: 42
        },
        end: {
          line: 288,
          column: 77
        }
      },
      "119": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 289,
          column: 71
        }
      },
      "120": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 290,
          column: 69
        }
      },
      "121": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 291,
          column: 52
        }
      },
      "122": {
        start: {
          line: 292,
          column: 28
        },
        end: {
          line: 292,
          column: 63
        }
      },
      "123": {
        start: {
          line: 293,
          column: 28
        },
        end: {
          line: 293,
          column: 70
        }
      },
      "124": {
        start: {
          line: 294,
          column: 28
        },
        end: {
          line: 294,
          column: 104
        }
      },
      "125": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 142
        }
      },
      "126": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 85
        }
      },
      "127": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "128": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 78
        }
      },
      "129": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 24
        }
      },
      "130": {
        start: {
          line: 315,
          column: 26
        },
        end: {
          line: 315,
          column: 85
        }
      },
      "131": {
        start: {
          line: 316,
          column: 31
        },
        end: {
          line: 316,
          column: 64
        }
      },
      "132": {
        start: {
          line: 317,
          column: 35
        },
        end: {
          line: 317,
          column: 107
        }
      },
      "133": {
        start: {
          line: 318,
          column: 31
        },
        end: {
          line: 320,
          column: 61
        }
      },
      "134": {
        start: {
          line: 322,
          column: 24
        },
        end: {
          line: 322,
          column: 85
        }
      },
      "135": {
        start: {
          line: 323,
          column: 21
        },
        end: {
          line: 323,
          column: 60
        }
      },
      "136": {
        start: {
          line: 325,
          column: 25
        },
        end: {
          line: 327,
          column: 77
        }
      },
      "137": {
        start: {
          line: 328,
          column: 27
        },
        end: {
          line: 328,
          column: 77
        }
      },
      "138": {
        start: {
          line: 329,
          column: 29
        },
        end: {
          line: 329,
          column: 82
        }
      },
      "139": {
        start: {
          line: 330,
          column: 27
        },
        end: {
          line: 332,
          column: 60
        }
      },
      "140": {
        start: {
          line: 334,
          column: 22
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "141": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 21
        }
      },
      "142": {
        start: {
          line: 355,
          column: 33
        },
        end: {
          line: 355,
          column: 35
        }
      },
      "143": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "144": {
        start: {
          line: 357,
          column: 33
        },
        end: {
          line: 357,
          column: 49
        }
      },
      "145": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "146": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 50
        }
      },
      "147": {
        start: {
          line: 363,
          column: 35
        },
        end: {
          line: 363,
          column: 94
        }
      },
      "148": {
        start: {
          line: 363,
          column: 74
        },
        end: {
          line: 363,
          column: 93
        }
      },
      "149": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 372,
          column: 17
        }
      },
      "150": {
        start: {
          line: 365,
          column: 34
        },
        end: {
          line: 365,
          column: 69
        }
      },
      "151": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 56
        }
      },
      "152": {
        start: {
          line: 367,
          column: 20
        },
        end: {
          line: 367,
          column: 58
        }
      },
      "153": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 45
        }
      },
      "154": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 51
        }
      },
      "155": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 62
        }
      },
      "156": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 96
        }
      },
      "157": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 25
        }
      },
      "158": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "159": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 50
        }
      },
      "160": {
        start: {
          line: 380,
          column: 35
        },
        end: {
          line: 380,
          column: 94
        }
      },
      "161": {
        start: {
          line: 380,
          column: 74
        },
        end: {
          line: 380,
          column: 93
        }
      },
      "162": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 389,
          column: 17
        }
      },
      "163": {
        start: {
          line: 382,
          column: 34
        },
        end: {
          line: 382,
          column: 69
        }
      },
      "164": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 58
        }
      },
      "165": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 384,
          column: 58
        }
      },
      "166": {
        start: {
          line: 385,
          column: 20
        },
        end: {
          line: 385,
          column: 44
        }
      },
      "167": {
        start: {
          line: 386,
          column: 20
        },
        end: {
          line: 386,
          column: 53
        }
      },
      "168": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 62
        }
      },
      "169": {
        start: {
          line: 388,
          column: 20
        },
        end: {
          line: 388,
          column: 96
        }
      },
      "170": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "171": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 56
        }
      },
      "172": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "173": {
        start: {
          line: 403,
          column: 31
        },
        end: {
          line: 403,
          column: 90
        }
      },
      "174": {
        start: {
          line: 403,
          column: 70
        },
        end: {
          line: 403,
          column: 89
        }
      },
      "175": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 412,
          column: 13
        }
      },
      "176": {
        start: {
          line: 405,
          column: 30
        },
        end: {
          line: 405,
          column: 65
        }
      },
      "177": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 406,
          column: 51
        }
      },
      "178": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 54
        }
      },
      "179": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 408,
          column: 40
        }
      },
      "180": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 409,
          column: 42
        }
      },
      "181": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 58
        }
      },
      "182": {
        start: {
          line: 411,
          column: 16
        },
        end: {
          line: 411,
          column: 92
        }
      },
      "183": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 41
        }
      },
      "184": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 74
        }
      },
      "185": {
        start: {
          line: 421,
          column: 23
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "186": {
        start: {
          line: 427,
          column: 28
        },
        end: {
          line: 427,
          column: 168
        }
      },
      "187": {
        start: {
          line: 429,
          column: 24
        },
        end: {
          line: 429,
          column: 63
        }
      },
      "188": {
        start: {
          line: 430,
          column: 21
        },
        end: {
          line: 430,
          column: 97
        }
      },
      "189": {
        start: {
          line: 432,
          column: 23
        },
        end: {
          line: 432,
          column: 119
        }
      },
      "190": {
        start: {
          line: 434,
          column: 36
        },
        end: {
          line: 434,
          column: 88
        }
      },
      "191": {
        start: {
          line: 436,
          column: 28
        },
        end: {
          line: 436,
          column: 112
        }
      },
      "192": {
        start: {
          line: 437,
          column: 30
        },
        end: {
          line: 437,
          column: 116
        }
      },
      "193": {
        start: {
          line: 438,
          column: 31
        },
        end: {
          line: 438,
          column: 143
        }
      },
      "194": {
        start: {
          line: 439,
          column: 23
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "195": {
        start: {
          line: 455,
          column: 63
        },
        end: {
          line: 455,
          column: 88
        }
      },
      "196": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 462,
          column: 22
        }
      },
      "197": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "198": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 50
        }
      },
      "199": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "200": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 66
        }
      },
      "201": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "202": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 64
        }
      },
      "203": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "204": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 71
        }
      },
      "205": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "206": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 484,
          column: 13
        }
      },
      "207": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 483,
          column: 71
        }
      },
      "208": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 497,
          column: 10
        }
      },
      "209": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 512,
          column: 10
        }
      },
      "210": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "211": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 517,
          column: 25
        }
      },
      "212": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "213": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 25
        }
      },
      "214": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 20
        }
      },
      "215": {
        start: {
          line: 526,
          column: 33
        },
        end: {
          line: 526,
          column: 61
        }
      },
      "216": {
        start: {
          line: 527,
          column: 27
        },
        end: {
          line: 527,
          column: 83
        }
      },
      "217": {
        start: {
          line: 529,
          column: 33
        },
        end: {
          line: 529,
          column: 73
        }
      },
      "218": {
        start: {
          line: 530,
          column: 30
        },
        end: {
          line: 530,
          column: 59
        }
      },
      "219": {
        start: {
          line: 531,
          column: 29
        },
        end: {
          line: 531,
          column: 61
        }
      },
      "220": {
        start: {
          line: 533,
          column: 37
        },
        end: {
          line: 533,
          column: 60
        }
      },
      "221": {
        start: {
          line: 534,
          column: 29
        },
        end: {
          line: 534,
          column: 64
        }
      },
      "222": {
        start: {
          line: 536,
          column: 24
        },
        end: {
          line: 536,
          column: 99
        }
      },
      "223": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 47
        }
      },
      "224": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 547,
          column: 9
        }
      },
      "225": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 546,
          column: 13
        }
      },
      "226": {
        start: {
          line: 543,
          column: 16
        },
        end: {
          line: 543,
          column: 57
        }
      },
      "227": {
        start: {
          line: 544,
          column: 16
        },
        end: {
          line: 544,
          column: 104
        }
      },
      "228": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 545,
          column: 138
        }
      },
      "229": {
        start: {
          line: 550,
          column: 26
        },
        end: {
          line: 550,
          column: 71
        }
      },
      "230": {
        start: {
          line: 551,
          column: 30
        },
        end: {
          line: 551,
          column: 88
        }
      },
      "231": {
        start: {
          line: 551,
          column: 61
        },
        end: {
          line: 551,
          column: 84
        }
      },
      "232": {
        start: {
          line: 552,
          column: 28
        },
        end: {
          line: 554,
          column: 47
        }
      },
      "233": {
        start: {
          line: 553,
          column: 25
        },
        end: {
          line: 553,
          column: 69
        }
      },
      "234": {
        start: {
          line: 554,
          column: 32
        },
        end: {
          line: 554,
          column: 43
        }
      },
      "235": {
        start: {
          line: 555,
          column: 23
        },
        end: {
          line: 555,
          column: 81
        }
      },
      "236": {
        start: {
          line: 556,
          column: 25
        },
        end: {
          line: 556,
          column: 56
        }
      },
      "237": {
        start: {
          line: 557,
          column: 35
        },
        end: {
          line: 557,
          column: 83
        }
      },
      "238": {
        start: {
          line: 558,
          column: 8
        },
        end: {
          line: 570,
          column: 10
        }
      },
      "239": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 574,
          column: 21
        }
      },
      "240": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 574,
          column: 21
        }
      },
      "241": {
        start: {
          line: 575,
          column: 20
        },
        end: {
          line: 577,
          column: 67
        }
      },
      "242": {
        start: {
          line: 578,
          column: 8
        },
        end: {
          line: 578,
          column: 32
        }
      },
      "243": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 585,
          column: 9
        }
      },
      "244": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 584,
          column: 13
        }
      },
      "245": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 583,
          column: 34
        }
      },
      "246": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 586,
          column: 20
        }
      },
      "247": {
        start: {
          line: 589,
          column: 24
        },
        end: {
          line: 589,
          column: 26
        }
      },
      "248": {
        start: {
          line: 590,
          column: 8
        },
        end: {
          line: 597,
          column: 9
        }
      },
      "249": {
        start: {
          line: 590,
          column: 21
        },
        end: {
          line: 590,
          column: 22
        }
      },
      "250": {
        start: {
          line: 591,
          column: 31
        },
        end: {
          line: 591,
          column: 61
        }
      },
      "251": {
        start: {
          line: 592,
          column: 31
        },
        end: {
          line: 592,
          column: 57
        }
      },
      "252": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 596,
          column: 13
        }
      },
      "253": {
        start: {
          line: 594,
          column: 35
        },
        end: {
          line: 594,
          column: 73
        }
      },
      "254": {
        start: {
          line: 595,
          column: 16
        },
        end: {
          line: 595,
          column: 41
        }
      },
      "255": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 598,
          column: 23
        }
      },
      "256": {
        start: {
          line: 601,
          column: 36
        },
        end: {
          line: 601,
          column: 38
        }
      },
      "257": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 630,
          column: 9
        }
      },
      "258": {
        start: {
          line: 603,
          column: 35
        },
        end: {
          line: 603,
          column: 99
        }
      },
      "259": {
        start: {
          line: 603,
          column: 71
        },
        end: {
          line: 603,
          column: 98
        }
      },
      "260": {
        start: {
          line: 604,
          column: 33
        },
        end: {
          line: 604,
          column: 105
        }
      },
      "261": {
        start: {
          line: 604,
          column: 60
        },
        end: {
          line: 604,
          column: 104
        }
      },
      "262": {
        start: {
          line: 605,
          column: 34
        },
        end: {
          line: 605,
          column: 69
        }
      },
      "263": {
        start: {
          line: 605,
          column: 59
        },
        end: {
          line: 605,
          column: 68
        }
      },
      "264": {
        start: {
          line: 606,
          column: 28
        },
        end: {
          line: 606,
          column: 108
        }
      },
      "265": {
        start: {
          line: 607,
          column: 32
        },
        end: {
          line: 607,
          column: 79
        }
      },
      "266": {
        start: {
          line: 607,
          column: 64
        },
        end: {
          line: 607,
          column: 75
        }
      },
      "267": {
        start: {
          line: 608,
          column: 32
        },
        end: {
          line: 608,
          column: 80
        }
      },
      "268": {
        start: {
          line: 608,
          column: 65
        },
        end: {
          line: 608,
          column: 76
        }
      },
      "269": {
        start: {
          line: 609,
          column: 30
        },
        end: {
          line: 609,
          column: 110
        }
      },
      "270": {
        start: {
          line: 609,
          column: 64
        },
        end: {
          line: 609,
          column: 73
        }
      },
      "271": {
        start: {
          line: 609,
          column: 94
        },
        end: {
          line: 609,
          column: 105
        }
      },
      "272": {
        start: {
          line: 610,
          column: 33
        },
        end: {
          line: 610,
          column: 105
        }
      },
      "273": {
        start: {
          line: 612,
          column: 35
        },
        end: {
          line: 614,
          column: 92
        }
      },
      "274": {
        start: {
          line: 613,
          column: 29
        },
        end: {
          line: 613,
          column: 39
        }
      },
      "275": {
        start: {
          line: 614,
          column: 26
        },
        end: {
          line: 614,
          column: 91
        }
      },
      "276": {
        start: {
          line: 615,
          column: 41
        },
        end: {
          line: 617,
          column: 19
        }
      },
      "277": {
        start: {
          line: 616,
          column: 52
        },
        end: {
          line: 616,
          column: 59
        }
      },
      "278": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 629,
          column: 14
        }
      },
      "279": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 35
        }
      },
      "280": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 637,
          column: 33
        }
      },
      "281": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 643,
          column: 37
        }
      },
      "282": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 644,
          column: 110
        }
      },
      "283": {
        start: {
          line: 645,
          column: 8
        },
        end: {
          line: 645,
          column: 63
        }
      },
      "284": {
        start: {
          line: 648,
          column: 0
        },
        end: {
          line: 648,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 41
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 77
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 84
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 60
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 150
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 60
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 174
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 29
          }
        },
        loc: {
          start: {
            line: 190,
            column: 38
          },
          end: {
            line: 190,
            column: 97
          }
        },
        line: 190
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 76
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 244
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 286,
            column: 77
          },
          end: {
            line: 286,
            column: 78
          }
        },
        loc: {
          start: {
            line: 286,
            column: 82
          },
          end: {
            line: 286,
            column: 101
          }
        },
        line: 286
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 94
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 308
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 61
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 354
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 363,
            column: 69
          },
          end: {
            line: 363,
            column: 70
          }
        },
        loc: {
          start: {
            line: 363,
            column: 74
          },
          end: {
            line: 363,
            column: 93
          }
        },
        line: 363
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 380,
            column: 69
          },
          end: {
            line: 380,
            column: 70
          }
        },
        loc: {
          start: {
            line: 380,
            column: 74
          },
          end: {
            line: 380,
            column: 93
          }
        },
        line: 380
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 48
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 400
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 403,
            column: 65
          },
          end: {
            line: 403,
            column: 66
          }
        },
        loc: {
          start: {
            line: 403,
            column: 70
          },
          end: {
            line: 403,
            column: 89
          }
        },
        line: 403
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        loc: {
          start: {
            line: 420,
            column: 77
          },
          end: {
            line: 463,
            column: 5
          }
        },
        line: 420
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 455,
            column: 49
          },
          end: {
            line: 455,
            column: 50
          }
        },
        loc: {
          start: {
            line: 455,
            column: 63
          },
          end: {
            line: 455,
            column: 88
          }
        },
        line: 455
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 467,
            column: 5
          }
        },
        loc: {
          start: {
            line: 467,
            column: 35
          },
          end: {
            line: 486,
            column: 5
          }
        },
        line: 467
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        loc: {
          start: {
            line: 487,
            column: 36
          },
          end: {
            line: 498,
            column: 5
          }
        },
        line: 487
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 499,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        },
        loc: {
          start: {
            line: 499,
            column: 47
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 499
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 35
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 514
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 54
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 525
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 5
          }
        },
        loc: {
          start: {
            line: 539,
            column: 38
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 539
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 549,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        },
        loc: {
          start: {
            line: 549,
            column: 53
          },
          end: {
            line: 571,
            column: 5
          }
        },
        line: 549
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 551,
            column: 47
          },
          end: {
            line: 551,
            column: 48
          }
        },
        loc: {
          start: {
            line: 551,
            column: 61
          },
          end: {
            line: 551,
            column: 84
          }
        },
        line: 551
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 553,
            column: 20
          },
          end: {
            line: 553,
            column: 21
          }
        },
        loc: {
          start: {
            line: 553,
            column: 25
          },
          end: {
            line: 553,
            column: 69
          }
        },
        line: 553
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 554,
            column: 20
          },
          end: {
            line: 554,
            column: 21
          }
        },
        loc: {
          start: {
            line: 554,
            column: 32
          },
          end: {
            line: 554,
            column: 43
          }
        },
        line: 554
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 572,
            column: 4
          },
          end: {
            line: 572,
            column: 5
          }
        },
        loc: {
          start: {
            line: 572,
            column: 29
          },
          end: {
            line: 579,
            column: 5
          }
        },
        line: 572
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 580,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        },
        loc: {
          start: {
            line: 580,
            column: 32
          },
          end: {
            line: 587,
            column: 5
          }
        },
        line: 580
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 588,
            column: 4
          },
          end: {
            line: 588,
            column: 5
          }
        },
        loc: {
          start: {
            line: 588,
            column: 39
          },
          end: {
            line: 599,
            column: 5
          }
        },
        line: 588
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 600,
            column: 4
          },
          end: {
            line: 600,
            column: 5
          }
        },
        loc: {
          start: {
            line: 600,
            column: 48
          },
          end: {
            line: 632,
            column: 5
          }
        },
        line: 600
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 603,
            column: 66
          },
          end: {
            line: 603,
            column: 67
          }
        },
        loc: {
          start: {
            line: 603,
            column: 71
          },
          end: {
            line: 603,
            column: 98
          }
        },
        line: 603
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 604,
            column: 55
          },
          end: {
            line: 604,
            column: 56
          }
        },
        loc: {
          start: {
            line: 604,
            column: 60
          },
          end: {
            line: 604,
            column: 104
          }
        },
        line: 604
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 605,
            column: 54
          },
          end: {
            line: 605,
            column: 55
          }
        },
        loc: {
          start: {
            line: 605,
            column: 59
          },
          end: {
            line: 605,
            column: 68
          }
        },
        line: 605
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 607,
            column: 52
          },
          end: {
            line: 607,
            column: 53
          }
        },
        loc: {
          start: {
            line: 607,
            column: 64
          },
          end: {
            line: 607,
            column: 75
          }
        },
        line: 607
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 608,
            column: 53
          },
          end: {
            line: 608,
            column: 54
          }
        },
        loc: {
          start: {
            line: 608,
            column: 65
          },
          end: {
            line: 608,
            column: 76
          }
        },
        line: 608
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 609,
            column: 59
          },
          end: {
            line: 609,
            column: 60
          }
        },
        loc: {
          start: {
            line: 609,
            column: 64
          },
          end: {
            line: 609,
            column: 73
          }
        },
        line: 609
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 609,
            column: 82
          },
          end: {
            line: 609,
            column: 83
          }
        },
        loc: {
          start: {
            line: 609,
            column: 94
          },
          end: {
            line: 609,
            column: 105
          }
        },
        line: 609
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 613,
            column: 24
          },
          end: {
            line: 613,
            column: 25
          }
        },
        loc: {
          start: {
            line: 613,
            column: 29
          },
          end: {
            line: 613,
            column: 39
          }
        },
        line: 613
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 614,
            column: 21
          },
          end: {
            line: 614,
            column: 22
          }
        },
        loc: {
          start: {
            line: 614,
            column: 26
          },
          end: {
            line: 614,
            column: 91
          }
        },
        line: 614
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 616,
            column: 40
          },
          end: {
            line: 616,
            column: 41
          }
        },
        loc: {
          start: {
            line: 616,
            column: 52
          },
          end: {
            line: 616,
            column: 59
          }
        },
        line: 616
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 636,
            column: 4
          },
          end: {
            line: 636,
            column: 5
          }
        },
        loc: {
          start: {
            line: 636,
            column: 15
          },
          end: {
            line: 638,
            column: 5
          }
        },
        line: 636
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 642,
            column: 4
          },
          end: {
            line: 642,
            column: 5
          }
        },
        loc: {
          start: {
            line: 642,
            column: 11
          },
          end: {
            line: 646,
            column: 5
          }
        },
        line: 642
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "1": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "2": {
        loc: {
          start: {
            line: 200,
            column: 19
          },
          end: {
            line: 201,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 19
          },
          end: {
            line: 200,
            column: 54
          }
        }, {
          start: {
            line: 201,
            column: 16
          },
          end: {
            line: 201,
            column: 84
          }
        }],
        line: 200
      },
      "3": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "4": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "5": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "6": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "7": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 248,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 248,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "8": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "9": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "10": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "11": {
        loc: {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        }, {
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 297,
            column: 17
          }
        }],
        line: 264
      },
      "12": {
        loc: {
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 297,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 297,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "13": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 296,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 296,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "14": {
        loc: {
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 295,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 24
          },
          end: {
            line: 295,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "15": {
        loc: {
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "16": {
        loc: {
          start: {
            line: 315,
            column: 26
          },
          end: {
            line: 315,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 50
          },
          end: {
            line: 315,
            column: 66
          }
        }, {
          start: {
            line: 315,
            column: 69
          },
          end: {
            line: 315,
            column: 85
          }
        }],
        line: 315
      },
      "17": {
        loc: {
          start: {
            line: 318,
            column: 31
          },
          end: {
            line: 320,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 14
          },
          end: {
            line: 319,
            column: 61
          }
        }, {
          start: {
            line: 320,
            column: 14
          },
          end: {
            line: 320,
            column: 61
          }
        }],
        line: 318
      },
      "18": {
        loc: {
          start: {
            line: 322,
            column: 24
          },
          end: {
            line: 322,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 48
          },
          end: {
            line: 322,
            column: 65
          }
        }, {
          start: {
            line: 322,
            column: 68
          },
          end: {
            line: 322,
            column: 85
          }
        }],
        line: 322
      },
      "19": {
        loc: {
          start: {
            line: 325,
            column: 25
          },
          end: {
            line: 327,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 14
          },
          end: {
            line: 326,
            column: 77
          }
        }, {
          start: {
            line: 327,
            column: 14
          },
          end: {
            line: 327,
            column: 77
          }
        }],
        line: 325
      },
      "20": {
        loc: {
          start: {
            line: 330,
            column: 27
          },
          end: {
            line: 332,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 14
          },
          end: {
            line: 331,
            column: 60
          }
        }, {
          start: {
            line: 332,
            column: 14
          },
          end: {
            line: 332,
            column: 60
          }
        }],
        line: 330
      },
      "21": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 374,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "22": {
        loc: {
          start: {
            line: 359,
            column: 16
          },
          end: {
            line: 360,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 17
          },
          end: {
            line: 359,
            column: 38
          }
        }, {
          start: {
            line: 359,
            column: 42
          },
          end: {
            line: 359,
            column: 75
          }
        }, {
          start: {
            line: 360,
            column: 17
          },
          end: {
            line: 360,
            column: 38
          }
        }, {
          start: {
            line: 360,
            column: 42
          },
          end: {
            line: 360,
            column: 75
          }
        }],
        line: 359
      },
      "23": {
        loc: {
          start: {
            line: 364,
            column: 16
          },
          end: {
            line: 372,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 16
          },
          end: {
            line: 372,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "24": {
        loc: {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 390,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "25": {
        loc: {
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 377,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 17
          },
          end: {
            line: 376,
            column: 38
          }
        }, {
          start: {
            line: 376,
            column: 42
          },
          end: {
            line: 376,
            column: 77
          }
        }, {
          start: {
            line: 377,
            column: 17
          },
          end: {
            line: 377,
            column: 38
          }
        }, {
          start: {
            line: 377,
            column: 42
          },
          end: {
            line: 377,
            column: 77
          }
        }],
        line: 376
      },
      "26": {
        loc: {
          start: {
            line: 381,
            column: 16
          },
          end: {
            line: 389,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 16
          },
          end: {
            line: 389,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "27": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 412,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 412,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "28": {
        loc: {
          start: {
            line: 454,
            column: 35
          },
          end: {
            line: 456,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 22
          },
          end: {
            line: 455,
            column: 121
          }
        }, {
          start: {
            line: 456,
            column: 22
          },
          end: {
            line: 456,
            column: 23
          }
        }],
        line: 454
      },
      "29": {
        loc: {
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "30": {
        loc: {
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 468,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 468,
            column: 26
          }
        }, {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 468,
            column: 57
          }
        }],
        line: 468
      },
      "31": {
        loc: {
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 471,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 471
      },
      "32": {
        loc: {
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 476,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 476,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "33": {
        loc: {
          start: {
            line: 477,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 477
      },
      "34": {
        loc: {
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 484,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 12
          },
          end: {
            line: 484,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "35": {
        loc: {
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "36": {
        loc: {
          start: {
            line: 516,
            column: 12
          },
          end: {
            line: 516,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 12
          },
          end: {
            line: 516,
            column: 32
          }
        }, {
          start: {
            line: 516,
            column: 36
          },
          end: {
            line: 516,
            column: 58
          }
        }],
        line: 516
      },
      "37": {
        loc: {
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "38": {
        loc: {
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 546,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 546,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "39": {
        loc: {
          start: {
            line: 553,
            column: 25
          },
          end: {
            line: 553,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 553,
            column: 25
          },
          end: {
            line: 553,
            column: 46
          }
        }, {
          start: {
            line: 553,
            column: 50
          },
          end: {
            line: 553,
            column: 69
          }
        }],
        line: 553
      },
      "40": {
        loc: {
          start: {
            line: 557,
            column: 35
          },
          end: {
            line: 557,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 557,
            column: 51
          },
          end: {
            line: 557,
            column: 79
          }
        }, {
          start: {
            line: 557,
            column: 82
          },
          end: {
            line: 557,
            column: 83
          }
        }],
        line: 557
      },
      "41": {
        loc: {
          start: {
            line: 573,
            column: 8
          },
          end: {
            line: 574,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 8
          },
          end: {
            line: 574,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "42": {
        loc: {
          start: {
            line: 575,
            column: 20
          },
          end: {
            line: 577,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 576,
            column: 14
          },
          end: {
            line: 576,
            column: 67
          }
        }, {
          start: {
            line: 577,
            column: 14
          },
          end: {
            line: 577,
            column: 67
          }
        }],
        line: 575
      },
      "43": {
        loc: {
          start: {
            line: 582,
            column: 12
          },
          end: {
            line: 584,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 12
          },
          end: {
            line: 584,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 582
      },
      "44": {
        loc: {
          start: {
            line: 593,
            column: 12
          },
          end: {
            line: 596,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 593,
            column: 12
          },
          end: {
            line: 596,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 593
      },
      "45": {
        loc: {
          start: {
            line: 604,
            column: 60
          },
          end: {
            line: 604,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 604,
            column: 60
          },
          end: {
            line: 604,
            column: 81
          }
        }, {
          start: {
            line: 604,
            column: 85
          },
          end: {
            line: 604,
            column: 104
          }
        }],
        line: 604
      },
      "46": {
        loc: {
          start: {
            line: 606,
            column: 28
          },
          end: {
            line: 606,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 606,
            column: 54
          },
          end: {
            line: 606,
            column: 104
          }
        }, {
          start: {
            line: 606,
            column: 107
          },
          end: {
            line: 606,
            column: 108
          }
        }],
        line: 606
      },
      "47": {
        loc: {
          start: {
            line: 610,
            column: 33
          },
          end: {
            line: 610,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 610,
            column: 49
          },
          end: {
            line: 610,
            column: 72
          }
        }, {
          start: {
            line: 610,
            column: 75
          },
          end: {
            line: 610,
            column: 105
          }
        }],
        line: 610
      },
      "48": {
        loc: {
          start: {
            line: 610,
            column: 75
          },
          end: {
            line: 610,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 610,
            column: 93
          },
          end: {
            line: 610,
            column: 101
          }
        }, {
          start: {
            line: 610,
            column: 104
          },
          end: {
            line: 610,
            column: 105
          }
        }],
        line: 610
      },
      "49": {
        loc: {
          start: {
            line: 615,
            column: 41
          },
          end: {
            line: 617,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 616,
            column: 18
          },
          end: {
            line: 616,
            column: 87
          }
        }, {
          start: {
            line: 617,
            column: 18
          },
          end: {
            line: 617,
            column: 19
          }
        }],
        line: 615
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\backtesting-engine.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\backtesting\\backtesting-engine.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * BACKTESTING ENGINE - REALISTIC EXECUTION SIMULATION\r\n * =============================================================================\r\n * \r\n * This module implements a comprehensive backtesting engine that simulates\r\n * realistic trading execution with proper slippage, fees, and market impact.\r\n * The engine processes historical market data and executes trading strategies\r\n * to validate their performance under real market conditions.\r\n * \r\n * CRITICAL FEATURES:\r\n * - NO MOCK DATA - only real historical market data\r\n * - Realistic execution simulation with slippage and fees\r\n * - Comprehensive risk management integration\r\n * - Strategy harmonization and signal processing\r\n * - Real-time progress tracking and reporting\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { AuditService } from '@/security/audit-service';\r\nimport { HistoricalDataFetcher } from './historical-data-fetcher';\r\nimport { PerformanceCalculator } from './performance-calculator';\r\nimport { \r\n  BacktestConfig,\r\n  BacktestResult,\r\n  BacktestTrade,\r\n  BacktestPortfolio,\r\n  BacktestPosition,\r\n  BacktestEngineState,\r\n  BacktestProgress,\r\n  HistoricalMarketData,\r\n  ValidationRules,\r\n  StrategyBacktestResult,\r\n  DataValidationResult\r\n} from './types';\r\nimport { TradingSignal, HarmonizedSignal } from '../strategies/types';\r\nimport { GateIOClient } from '../api/gate-io-client';\r\n\r\n/**\r\n * Strategy interface for backtesting\r\n */\r\ninterface BacktestStrategy {\r\n  name: string;\r\n  generateSignals(marketData: HistoricalMarketData[]): Promise<TradingSignal[]>;\r\n  harmonizeSignals?(signals: TradingSignal[]): Promise<HarmonizedSignal>;\r\n}\r\n\r\n/**\r\n * Execution simulation parameters\r\n */\r\ninterface ExecutionSimulation {\r\n  slippage: number; // Percentage slippage\r\n  marketImpact: number; // Additional impact for large orders\r\n  latency: number; // Execution delay in milliseconds\r\n  partialFills: boolean; // Allow partial order fills\r\n  rejectProbability: number; // Probability of order rejection\r\n}\r\n\r\n/**\r\n * Comprehensive Backtesting Engine\r\n */\r\nexport class BacktestingEngine extends EventEmitter {\r\n  private dataFetcher: HistoricalDataFetcher;\r\n  private auditService: AuditService;\r\n  private state: BacktestEngineState;\r\n  private strategies: Map<string, BacktestStrategy>;\r\n  private validationRules: ValidationRules;\r\n\r\n  constructor(gateIOClient: GateIOClient) {\r\n    super();\r\n    \r\n    this.dataFetcher = new HistoricalDataFetcher(gateIOClient);\r\n    this.auditService = new AuditService();\r\n    this.strategies = new Map();\r\n    \r\n    // Initialize state\r\n    this.state = {\r\n      currentTime: new Date(),\r\n      portfolio: this.createInitialPortfolio(new Date(), 0),\r\n      openPositions: new Map(),\r\n      tradeHistory: [],\r\n      signals: [],\r\n      marketData: [],\r\n      isRunning: false,\r\n      progress: 0,\r\n    };\r\n    \r\n    // Set validation rules\r\n    this.validationRules = {\r\n      minDataPoints: 100,\r\n      maxGapMinutes: 60,\r\n      requireRealData: true,\r\n      minTradeAmount: 10,\r\n      maxPositionSize: 0.1, // 10% of portfolio\r\n      maxOpenPositions: 5,\r\n      maxRiskPerTrade: 0.03, // 3%\r\n      maxTotalRisk: 0.15, // 15%\r\n      maxDrawdown: 0.2, // 20%\r\n      minSharpeRatio: 0.5,\r\n      minWinRate: 0.4, // 40%\r\n      minProfitFactor: 1.2,\r\n    };\r\n    \r\n    logger.info('\uD83D\uDE80 Backtesting Engine initialized - REAL DATA ONLY');\r\n  }\r\n\r\n  /**\r\n   * Register a trading strategy for backtesting\r\n   */\r\n  public registerStrategy(strategy: BacktestStrategy): void {\r\n    this.strategies.set(strategy.name, strategy);\r\n    logger.info(`\uD83D\uDCCA Strategy registered: ${strategy.name}`);\r\n  }\r\n\r\n  /**\r\n   * Run comprehensive backtesting\r\n   */\r\n  public async runBacktest(config: BacktestConfig): Promise<BacktestResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      logger.info(`\uD83C\uDFAF Starting backtesting for ${config.symbol} from ${config.startDate.toISOString()} to ${config.endDate.toISOString()}`);\r\n      \r\n      // Validate configuration\r\n      this.validateBacktestConfig(config);\r\n      \r\n      // Initialize state\r\n      this.initializeBacktestState(config);\r\n      \r\n      // Fetch and validate historical data\r\n      this.emit('progress', { status: 'INITIALIZING', progress: 0, message: 'Fetching historical data...' });\r\n      const historicalData = await this.dataFetcher.fetchForBacktest(config);\r\n      \r\n      // Validate data quality\r\n      const dataValidation = await this.dataFetcher.validateForBacktesting(historicalData, config);\r\n      if (!dataValidation.isValid) {\r\n        throw new Error(`Data validation failed: ${dataValidation.errors.join(', ')}`);\r\n      }\r\n      \r\n      this.state.marketData = historicalData;\r\n      logger.info(`\uD83D\uDCC8 Loaded ${historicalData.length} historical data points`);\r\n      \r\n      // Generate trading signals for all strategies\r\n      this.emit('progress', { status: 'RUNNING', progress: 10, message: 'Generating trading signals...' });\r\n      const allSignals = await this.generateAllSignals(historicalData, config.strategies);\r\n      \r\n      // Run simulation\r\n      this.emit('progress', { status: 'RUNNING', progress: 20, message: 'Running simulation...' });\r\n      const portfolioHistory = await this.runSimulation(historicalData, allSignals, config);\r\n      \r\n      // Calculate performance metrics\r\n      this.emit('progress', { status: 'RUNNING', progress: 80, message: 'Calculating performance metrics...' });\r\n      const result = await this.calculateBacktestResults(config, portfolioHistory, dataValidation);\r\n      \r\n      // Log audit event\r\n      await this.auditService.logSecurityEvent({\r\n        type: 'BACKTEST_COMPLETED',\r\n        severity: 'INFO',\r\n        details: {\r\n          symbol: config.symbol,\r\n          duration: Date.now() - startTime,\r\n          trades: result.trades.total,\r\n          performance: result.performance,\r\n        },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      this.emit('progress', { status: 'COMPLETED', progress: 100, message: 'Backtesting completed successfully' });\r\n      \r\n      logger.info(`\u2705 Backtesting completed in ${Date.now() - startTime}ms`);\r\n      logger.info(`\uD83D\uDCCA Results: ${result.trades.total} trades, ${result.performance.totalReturnPercentage.toFixed(2)}% return, ${result.performance.sharpeRatio.toFixed(2)} Sharpe ratio`);\r\n      \r\n      return result;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Backtesting failed:', error);\r\n      \r\n      await this.auditService.logSecurityEvent({\r\n        type: 'BACKTEST_FAILED',\r\n        severity: 'ERROR',\r\n        details: {\r\n          symbol: config.symbol,\r\n          error: error.message,\r\n          duration: Date.now() - startTime,\r\n        },\r\n        timestamp: new Date(),\r\n      });\r\n      \r\n      this.emit('progress', { status: 'ERROR', progress: 0, message: `Backtesting failed: ${error.message}` });\r\n      throw error;\r\n      \r\n    } finally {\r\n      this.state.isRunning = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate signals from all registered strategies\r\n   */\r\n  private async generateAllSignals(\r\n    historicalData: HistoricalMarketData[],\r\n    strategyNames: string[]\r\n  ): Promise<Map<string, TradingSignal[]>> {\r\n    const allSignals = new Map<string, TradingSignal[]>();\r\n    \r\n    for (const strategyName of strategyNames) {\r\n      const strategy = this.strategies.get(strategyName);\r\n      if (!strategy) {\r\n        logger.warn(`\u26A0\uFE0F Strategy not found: ${strategyName}`);\r\n        continue;\r\n      }\r\n      \r\n      try {\r\n        logger.info(`\uD83D\uDD04 Generating signals for strategy: ${strategyName}`);\r\n        const signals = await strategy.generateSignals(historicalData);\r\n        allSignals.set(strategyName, signals);\r\n        logger.info(`\u2705 Generated ${signals.length} signals for ${strategyName}`);\r\n        \r\n      } catch (error) {\r\n        logger.error(`\u274C Failed to generate signals for ${strategyName}:`, error);\r\n        allSignals.set(strategyName, []);\r\n      }\r\n    }\r\n    \r\n    return allSignals;\r\n  }\r\n\r\n  /**\r\n   * Run the main simulation loop\r\n   */\r\n  private async runSimulation(\r\n    historicalData: HistoricalMarketData[],\r\n    allSignals: Map<string, TradingSignal[]>,\r\n    config: BacktestConfig\r\n  ): Promise<BacktestPortfolio[]> {\r\n    const portfolioHistory: BacktestPortfolio[] = [];\r\n    const executionSim: ExecutionSimulation = {\r\n      slippage: config.slippage,\r\n      marketImpact: 0.001, // 0.1% additional impact\r\n      latency: 100, // 100ms execution delay\r\n      partialFills: true,\r\n      rejectProbability: 0.01, // 1% rejection rate\r\n    };\r\n    \r\n    // Combine and sort all signals by timestamp\r\n    const allSignalsList: Array<{ signal: TradingSignal; strategy: string }> = [];\r\n    for (const [strategy, signals] of allSignals) {\r\n      for (const signal of signals) {\r\n        allSignalsList.push({ signal, strategy });\r\n      }\r\n    }\r\n    allSignalsList.sort((a, b) => a.signal.timestamp.getTime() - b.signal.timestamp.getTime());\r\n    \r\n    let signalIndex = 0;\r\n    let maxEquity = config.initialBalance;\r\n    \r\n    // Process each data point\r\n    for (let i = 0; i < historicalData.length; i++) {\r\n      const marketData = historicalData[i];\r\n      this.state.currentTime = marketData.timestamp;\r\n      \r\n      // Update portfolio with current market prices\r\n      this.updatePortfolioValues(marketData);\r\n      \r\n      // Process signals at current timestamp\r\n      while (signalIndex < allSignalsList.length && \r\n             allSignalsList[signalIndex].signal.timestamp <= marketData.timestamp) {\r\n        \r\n        const { signal, strategy } = allSignalsList[signalIndex];\r\n        await this.processSignal(signal, strategy, marketData, config, executionSim);\r\n        signalIndex++;\r\n      }\r\n      \r\n      // Update stop losses and take profits\r\n      await this.updateStopLossesAndTakeProfits(marketData, config);\r\n      \r\n      // Calculate current portfolio state\r\n      const currentPortfolio = this.calculateCurrentPortfolio(marketData, maxEquity);\r\n      portfolioHistory.push(currentPortfolio);\r\n      \r\n      // Update max equity for drawdown calculation\r\n      if (currentPortfolio.equity > maxEquity) {\r\n        maxEquity = currentPortfolio.equity;\r\n      }\r\n      \r\n      // Update progress\r\n      const progress = 20 + Math.floor((i / historicalData.length) * 60);\r\n      if (i % Math.floor(historicalData.length / 20) === 0) {\r\n        this.emit('progress', { \r\n          status: 'RUNNING', \r\n          progress, \r\n          message: `Processing ${marketData.timestamp.toISOString()}...` \r\n        });\r\n      }\r\n      \r\n      // Risk management checks\r\n      if (currentPortfolio.drawdownPercentage > config.riskManagement.maxDrawdown * 100) {\r\n        logger.warn(`\u26A0\uFE0F Maximum drawdown exceeded: ${currentPortfolio.drawdownPercentage.toFixed(2)}%`);\r\n        // Close all positions in emergency\r\n        await this.closeAllPositions(marketData, 'EMERGENCY_STOP');\r\n      }\r\n    }\r\n    \r\n    // Close any remaining open positions at the end\r\n    if (this.state.openPositions.size > 0) {\r\n      const lastMarketData = historicalData[historicalData.length - 1];\r\n      await this.closeAllPositions(lastMarketData, 'END_OF_PERIOD');\r\n      \r\n      // Add final portfolio state\r\n      const finalPortfolio = this.calculateCurrentPortfolio(lastMarketData, maxEquity);\r\n      portfolioHistory.push(finalPortfolio);\r\n    }\r\n    \r\n    return portfolioHistory;\r\n  }\r\n\r\n  /**\r\n   * Process a trading signal\r\n   */\r\n  private async processSignal(\r\n    signal: TradingSignal,\r\n    strategy: string,\r\n    marketData: HistoricalMarketData,\r\n    config: BacktestConfig,\r\n    executionSim: ExecutionSimulation\r\n  ): Promise<void> {\r\n    try {\r\n      // Skip HOLD signals\r\n      if (signal.type === 'HOLD') return;\r\n      \r\n      // Validate signal\r\n      if (!this.validateSignal(signal, config)) {\r\n        logger.debug(`\u26A0\uFE0F Signal validation failed for ${signal.id}`);\r\n        return;\r\n      }\r\n      \r\n      // Calculate position size based on risk management\r\n      const positionSize = this.calculatePositionSize(signal, config, marketData);\r\n      if (positionSize <= 0) {\r\n        logger.debug(`\u26A0\uFE0F Position size too small for signal ${signal.id}`);\r\n        return;\r\n      }\r\n      \r\n      // Simulate execution with realistic conditions\r\n      const executedTrade = await this.simulateExecution(\r\n        signal,\r\n        strategy,\r\n        positionSize,\r\n        marketData,\r\n        config,\r\n        executionSim\r\n      );\r\n      \r\n      if (executedTrade) {\r\n        this.state.tradeHistory.push(executedTrade);\r\n        \r\n        if (signal.type === 'BUY') {\r\n          // Open new position\r\n          const position: BacktestPosition = {\r\n            symbol: signal.symbol,\r\n            quantity: executedTrade.quantity,\r\n            averagePrice: executedTrade.entryPrice,\r\n            currentPrice: marketData.close,\r\n            unrealizedPnL: 0,\r\n            unrealizedPnLPercentage: 0,\r\n            stopLoss: executedTrade.stopLoss,\r\n            takeProfit: executedTrade.takeProfit,\r\n            entryTime: executedTrade.entryTime,\r\n            strategy,\r\n          };\r\n          \r\n          this.state.openPositions.set(executedTrade.id, position);\r\n          \r\n        } else if (signal.type === 'SELL') {\r\n          // Close existing position\r\n          const positionId = this.findPositionToClose(signal.symbol);\r\n          if (positionId) {\r\n            this.state.openPositions.delete(positionId);\r\n            \r\n            // Update trade with exit information\r\n            const tradeIndex = this.state.tradeHistory.findIndex(t => t.id === positionId);\r\n            if (tradeIndex >= 0) {\r\n              const trade = this.state.tradeHistory[tradeIndex];\r\n              trade.exitPrice = executedTrade.entryPrice; // Exit price is entry price of sell order\r\n              trade.exitTime = executedTrade.entryTime;\r\n              trade.status = 'CLOSED';\r\n              trade.exitReason = 'STRATEGY_EXIT';\r\n              trade.pnl = this.calculateTradePnL(trade);\r\n              trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;\r\n            }\r\n          }\r\n        }\r\n        \r\n        logger.debug(`\u2705 Executed ${signal.type} signal for ${signal.symbol}: ${positionSize} @ ${executedTrade.entryPrice}`);\r\n      }\r\n      \r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to process signal ${signal.id}:`, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Simulate realistic trade execution\r\n   */\r\n  private async simulateExecution(\r\n    signal: TradingSignal,\r\n    strategy: string,\r\n    positionSize: number,\r\n    marketData: HistoricalMarketData,\r\n    config: BacktestConfig,\r\n    executionSim: ExecutionSimulation\r\n  ): Promise<BacktestTrade | null> {\r\n    // Simulate order rejection\r\n    if (Math.random() < executionSim.rejectProbability) {\r\n      logger.debug(`\u274C Order rejected for signal ${signal.id}`);\r\n      return null;\r\n    }\r\n    \r\n    // Calculate execution price with slippage\r\n    const basePrice = signal.type === 'BUY' ? marketData.close : marketData.close;\r\n    const slippageAmount = basePrice * executionSim.slippage;\r\n    const marketImpactAmount = basePrice * executionSim.marketImpact * Math.min(positionSize / 1000, 1);\r\n    \r\n    const executionPrice = signal.type === 'BUY' \r\n      ? basePrice + slippageAmount + marketImpactAmount\r\n      : basePrice - slippageAmount - marketImpactAmount;\r\n    \r\n    // Calculate fees\r\n    const feeRate = signal.type === 'BUY' ? config.fees.taker : config.fees.maker;\r\n    const fees = positionSize * executionPrice * feeRate;\r\n    \r\n    // Calculate stop loss and take profit levels\r\n    const stopLoss = signal.type === 'BUY' \r\n      ? executionPrice * (1 - config.riskManagement.stopLossPercentage)\r\n      : executionPrice * (1 + config.riskManagement.stopLossPercentage);\r\n    \r\n    const riskAmount = Math.abs(executionPrice - stopLoss) * positionSize;\r\n    const rewardAmount = riskAmount * config.riskManagement.minRiskRewardRatio;\r\n    const takeProfit = signal.type === 'BUY'\r\n      ? executionPrice + (rewardAmount / positionSize)\r\n      : executionPrice - (rewardAmount / positionSize);\r\n    \r\n    // Create trade record\r\n    const trade: BacktestTrade = {\r\n      id: uuidv4(),\r\n      symbol: signal.symbol,\r\n      type: signal.type,\r\n      quantity: positionSize,\r\n      entryPrice: executionPrice,\r\n      entryTime: new Date(marketData.timestamp.getTime() + executionSim.latency),\r\n      strategy,\r\n      signal,\r\n      stopLoss,\r\n      takeProfit,\r\n      fees,\r\n      slippage: slippageAmount,\r\n      status: 'OPEN',\r\n    };\r\n    \r\n    return trade;\r\n  }\r\n\r\n  /**\r\n   * Update stop losses and take profits\r\n   */\r\n  private async updateStopLossesAndTakeProfits(\r\n    marketData: HistoricalMarketData,\r\n    config: BacktestConfig\r\n  ): Promise<void> {\r\n    const positionsToClose: string[] = [];\r\n    \r\n    for (const [positionId, position] of this.state.openPositions) {\r\n      const currentPrice = marketData.close;\r\n      \r\n      // Check stop loss\r\n      if ((position.quantity > 0 && currentPrice <= position.stopLoss) ||\r\n          (position.quantity < 0 && currentPrice >= position.stopLoss)) {\r\n        positionsToClose.push(positionId);\r\n        \r\n        // Update trade record\r\n        const tradeIndex = this.state.tradeHistory.findIndex(t => t.id === positionId);\r\n        if (tradeIndex >= 0) {\r\n          const trade = this.state.tradeHistory[tradeIndex];\r\n          trade.exitPrice = position.stopLoss;\r\n          trade.exitTime = marketData.timestamp;\r\n          trade.status = 'STOPPED';\r\n          trade.exitReason = 'STOP_LOSS';\r\n          trade.pnl = this.calculateTradePnL(trade);\r\n          trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;\r\n        }\r\n        \r\n        continue;\r\n      }\r\n      \r\n      // Check take profit\r\n      if ((position.quantity > 0 && currentPrice >= position.takeProfit) ||\r\n          (position.quantity < 0 && currentPrice <= position.takeProfit)) {\r\n        positionsToClose.push(positionId);\r\n        \r\n        // Update trade record\r\n        const tradeIndex = this.state.tradeHistory.findIndex(t => t.id === positionId);\r\n        if (tradeIndex >= 0) {\r\n          const trade = this.state.tradeHistory[tradeIndex];\r\n          trade.exitPrice = position.takeProfit;\r\n          trade.exitTime = marketData.timestamp;\r\n          trade.status = 'CLOSED';\r\n          trade.exitReason = 'TAKE_PROFIT';\r\n          trade.pnl = this.calculateTradePnL(trade);\r\n          trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Remove closed positions\r\n    for (const positionId of positionsToClose) {\r\n      this.state.openPositions.delete(positionId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close all open positions\r\n   */\r\n  private async closeAllPositions(marketData: HistoricalMarketData, reason: string): Promise<void> {\r\n    for (const [positionId, position] of this.state.openPositions) {\r\n      // Update trade record\r\n      const tradeIndex = this.state.tradeHistory.findIndex(t => t.id === positionId);\r\n      if (tradeIndex >= 0) {\r\n        const trade = this.state.tradeHistory[tradeIndex];\r\n        trade.exitPrice = marketData.close;\r\n        trade.exitTime = marketData.timestamp;\r\n        trade.status = 'CLOSED';\r\n        trade.exitReason = reason as any;\r\n        trade.pnl = this.calculateTradePnL(trade);\r\n        trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;\r\n      }\r\n    }\r\n    \r\n    this.state.openPositions.clear();\r\n    logger.info(`\uD83D\uDD12 Closed all positions due to: ${reason}`);\r\n  }\r\n\r\n  /**\r\n   * Calculate comprehensive backtest results\r\n   */\r\n  private async calculateBacktestResults(\r\n    config: BacktestConfig,\r\n    portfolioHistory: BacktestPortfolio[],\r\n    dataValidation: DataValidationResult\r\n  ): Promise<BacktestResult> {\r\n    const period = {\r\n      start: config.startDate,\r\n      end: config.endDate,\r\n      durationDays: (config.endDate.getTime() - config.startDate.getTime()) / (1000 * 60 * 60 * 24),\r\n    };\r\n    \r\n    // Calculate performance metrics\r\n    const performance = PerformanceCalculator.calculatePerformanceMetrics(\r\n      this.state.tradeHistory,\r\n      portfolioHistory,\r\n      config.initialBalance\r\n    );\r\n    \r\n    // Calculate risk metrics\r\n    const returns = this.calculateReturns(portfolioHistory);\r\n    const risk = PerformanceCalculator.calculateRiskMetrics(returns);\r\n    \r\n    // Calculate trade statistics\r\n    const trades = PerformanceCalculator.calculateTradeStatistics(this.state.tradeHistory);\r\n    \r\n    // Generate strategy performance breakdown\r\n    const strategyPerformance = this.calculateStrategyPerformance(config.strategies);\r\n    \r\n    // Generate time series data\r\n    const equityCurve = PerformanceCalculator.generateEquityCurve(portfolioHistory);\r\n    const drawdownCurve = PerformanceCalculator.generateDrawdownCurve(portfolioHistory);\r\n    const monthlyReturns = PerformanceCalculator.generateMonthlyReturns(portfolioHistory, this.state.tradeHistory);\r\n    \r\n    const result: BacktestResult = {\r\n      config,\r\n      period,\r\n      trades,\r\n      performance,\r\n      risk,\r\n      strategyPerformance,\r\n      equityCurve,\r\n      drawdownCurve,\r\n      monthlyReturns,\r\n      dataQuality: {\r\n        totalDataPoints: dataValidation.totalPoints,\r\n        validDataPoints: dataValidation.validPoints,\r\n        dataIntegrityScore: dataValidation.integrityScore,\r\n        gapsDetected: dataValidation.gaps.length,\r\n        averageGapMinutes: dataValidation.gaps.length > 0 \r\n          ? dataValidation.gaps.reduce((sum, gap) => sum + gap.durationMinutes, 0) / dataValidation.gaps.length\r\n          : 0,\r\n        dataSource: 'GATE_IO_REAL_DATA',\r\n      },\r\n      executionDetails: this.state.tradeHistory,\r\n      portfolioHistory,\r\n    };\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Helper methods\r\n   */\r\n  private validateBacktestConfig(config: BacktestConfig): void {\r\n    if (!config.symbol || config.symbol.trim() === '') {\r\n      throw new Error('Symbol is required');\r\n    }\r\n    \r\n    if (config.startDate >= config.endDate) {\r\n      throw new Error('Start date must be before end date');\r\n    }\r\n    \r\n    if (config.initialBalance <= 0) {\r\n      throw new Error('Initial balance must be positive');\r\n    }\r\n    \r\n    if (config.strategies.length === 0) {\r\n      throw new Error('At least one strategy must be specified');\r\n    }\r\n    \r\n    // Validate strategies exist\r\n    for (const strategyName of config.strategies) {\r\n      if (!this.strategies.has(strategyName)) {\r\n        throw new Error(`Strategy not found: ${strategyName}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private initializeBacktestState(config: BacktestConfig): void {\r\n    this.state = {\r\n      currentTime: config.startDate,\r\n      portfolio: this.createInitialPortfolio(config.startDate, config.initialBalance),\r\n      openPositions: new Map(),\r\n      tradeHistory: [],\r\n      signals: [],\r\n      marketData: [],\r\n      isRunning: true,\r\n      progress: 0,\r\n    };\r\n  }\r\n\r\n  private createInitialPortfolio(timestamp: Date, balance: number): BacktestPortfolio {\r\n    return {\r\n      timestamp,\r\n      balance,\r\n      equity: balance,\r\n      positions: [],\r\n      totalPnL: 0,\r\n      unrealizedPnL: 0,\r\n      realizedPnL: 0,\r\n      drawdown: 0,\r\n      drawdownPercentage: 0,\r\n      maxDrawdown: 0,\r\n      maxDrawdownPercentage: 0,\r\n    };\r\n  }\r\n\r\n  private validateSignal(signal: TradingSignal, config: BacktestConfig): boolean {\r\n    // Check signal strength and confidence\r\n    if (signal.strength < 50 || signal.confidence < 60) {\r\n      return false;\r\n    }\r\n    \r\n    // Check risk-reward ratio\r\n    if (signal.riskReward < config.riskManagement.minRiskRewardRatio) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  private calculatePositionSize(\r\n    signal: TradingSignal,\r\n    config: BacktestConfig,\r\n    marketData: HistoricalMarketData\r\n  ): number {\r\n    const availableBalance = this.state.portfolio.balance;\r\n    const riskAmount = availableBalance * config.riskManagement.maxRiskPerTrade;\r\n    \r\n    // Calculate position size based on stop loss distance\r\n    const stopLossDistance = config.riskManagement.stopLossPercentage;\r\n    const positionValue = riskAmount / stopLossDistance;\r\n    const positionSize = positionValue / marketData.close;\r\n    \r\n    // Apply confidence-based sizing\r\n    const confidenceMultiplier = signal.confidence / 100;\r\n    const adjustedSize = positionSize * confidenceMultiplier;\r\n    \r\n    // Ensure minimum trade amount\r\n    const minSize = config.riskManagement.maxRiskPerTrade * availableBalance / marketData.close;\r\n    \r\n    return Math.max(adjustedSize, minSize);\r\n  }\r\n\r\n  private updatePortfolioValues(marketData: HistoricalMarketData): void {\r\n    // Update position values\r\n    for (const [positionId, position] of this.state.openPositions) {\r\n      if (position.symbol === marketData.symbol) {\r\n        position.currentPrice = marketData.close;\r\n        position.unrealizedPnL = (marketData.close - position.averagePrice) * position.quantity;\r\n        position.unrealizedPnLPercentage = (position.unrealizedPnL / (position.averagePrice * Math.abs(position.quantity))) * 100;\r\n      }\r\n    }\r\n  }\r\n\r\n  private calculateCurrentPortfolio(marketData: HistoricalMarketData, maxEquity: number): BacktestPortfolio {\r\n    const positions: BacktestPosition[] = Array.from(this.state.openPositions.values());\r\n    const unrealizedPnL = positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\r\n    const realizedPnL = this.state.tradeHistory\r\n      .filter(t => t.status === 'CLOSED' && t.pnl !== undefined)\r\n      .reduce((sum, t) => sum + t.pnl!, 0);\r\n    \r\n    const equity = this.state.portfolio.balance + unrealizedPnL + realizedPnL;\r\n    const drawdown = Math.max(0, maxEquity - equity);\r\n    const drawdownPercentage = maxEquity > 0 ? (drawdown / maxEquity) * 100 : 0;\r\n    \r\n    return {\r\n      timestamp: marketData.timestamp,\r\n      balance: this.state.portfolio.balance,\r\n      equity,\r\n      positions,\r\n      totalPnL: unrealizedPnL + realizedPnL,\r\n      unrealizedPnL,\r\n      realizedPnL,\r\n      drawdown,\r\n      drawdownPercentage,\r\n      maxDrawdown: Math.max(this.state.portfolio.maxDrawdown, drawdown),\r\n      maxDrawdownPercentage: Math.max(this.state.portfolio.maxDrawdownPercentage, drawdownPercentage),\r\n    };\r\n  }\r\n\r\n  private calculateTradePnL(trade: BacktestTrade): number {\r\n    if (!trade.exitPrice) return 0;\r\n    \r\n    const pnl = trade.type === 'BUY'\r\n      ? (trade.exitPrice - trade.entryPrice) * trade.quantity\r\n      : (trade.entryPrice - trade.exitPrice) * trade.quantity;\r\n    \r\n    return pnl - trade.fees;\r\n  }\r\n\r\n  private findPositionToClose(symbol: string): string | null {\r\n    for (const [positionId, position] of this.state.openPositions) {\r\n      if (position.symbol === symbol) {\r\n        return positionId;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private calculateReturns(portfolioHistory: BacktestPortfolio[]): number[] {\r\n    const returns: number[] = [];\r\n    \r\n    for (let i = 1; i < portfolioHistory.length; i++) {\r\n      const prevEquity = portfolioHistory[i - 1].equity;\r\n      const currEquity = portfolioHistory[i].equity;\r\n      \r\n      if (prevEquity > 0) {\r\n        const returnRate = (currEquity - prevEquity) / prevEquity;\r\n        returns.push(returnRate);\r\n      }\r\n    }\r\n    \r\n    return returns;\r\n  }\r\n\r\n  private calculateStrategyPerformance(strategyNames: string[]): Record<string, StrategyBacktestResult> {\r\n    const strategyPerformance: Record<string, StrategyBacktestResult> = {};\r\n    \r\n    for (const strategyName of strategyNames) {\r\n      const strategyTrades = this.state.tradeHistory.filter(t => t.strategy === strategyName);\r\n      const closedTrades = strategyTrades.filter(t => t.status === 'CLOSED' && t.pnl !== undefined);\r\n      \r\n      const winningTrades = closedTrades.filter(t => t.pnl! > 0);\r\n      const winRate = closedTrades.length > 0 ? (winningTrades.length / closedTrades.length) * 100 : 0;\r\n      \r\n      const totalReturn = closedTrades.reduce((sum, t) => sum + t.pnl!, 0);\r\n      const grossProfit = winningTrades.reduce((sum, t) => sum + t.pnl!, 0);\r\n      const grossLoss = Math.abs(closedTrades.filter(t => t.pnl! < 0).reduce((sum, t) => sum + t.pnl!, 0));\r\n      const profitFactor = grossLoss > 0 ? grossProfit / grossLoss : grossProfit > 0 ? Infinity : 0;\r\n      \r\n      // Calculate average holding period\r\n      const holdingPeriods = closedTrades\r\n        .filter(t => t.exitTime)\r\n        .map(t => (t.exitTime!.getTime() - t.entryTime.getTime()) / (1000 * 60 * 60)); // in hours\r\n      const averageHoldingPeriod = holdingPeriods.length > 0 \r\n        ? holdingPeriods.reduce((sum, h) => sum + h, 0) / holdingPeriods.length \r\n        : 0;\r\n      \r\n      strategyPerformance[strategyName] = {\r\n        strategyName,\r\n        trades: closedTrades.length,\r\n        winRate,\r\n        totalReturn,\r\n        sharpeRatio: 0, // Would need returns series for each strategy\r\n        maxDrawdown: 0, // Would need to track per-strategy drawdown\r\n        profitFactor,\r\n        averageHoldingPeriod,\r\n        signalAccuracy: winRate / 100,\r\n        contribution: 0, // Would need to calculate contribution to overall performance\r\n      };\r\n    }\r\n    \r\n    return strategyPerformance;\r\n  }\r\n\r\n  /**\r\n   * Get current backtesting state\r\n   */\r\n  public getState(): BacktestEngineState {\r\n    return { ...this.state };\r\n  }\r\n\r\n  /**\r\n   * Stop running backtest\r\n   */\r\n  public stop(): void {\r\n    this.state.isRunning = false;\r\n    this.emit('progress', { status: 'CANCELLED', progress: 0, message: 'Backtesting cancelled by user' });\r\n    logger.info('\uD83D\uDED1 Backtesting stopped by user');\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "745649022767face5b6170ad565624d662bc75c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2168gut2mt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2168gut2mt();
cov_2168gut2mt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2168gut2mt().s[1]++;
exports.BacktestingEngine = void 0;
const events_1 =
/* istanbul ignore next */
(cov_2168gut2mt().s[2]++, require("events"));
const uuid_1 =
/* istanbul ignore next */
(cov_2168gut2mt().s[3]++, require("uuid"));
const logger_1 =
/* istanbul ignore next */
(cov_2168gut2mt().s[4]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_2168gut2mt().s[5]++, require("@/security/audit-service"));
const historical_data_fetcher_1 =
/* istanbul ignore next */
(cov_2168gut2mt().s[6]++, require("./historical-data-fetcher"));
const performance_calculator_1 =
/* istanbul ignore next */
(cov_2168gut2mt().s[7]++, require("./performance-calculator"));
/**
 * Comprehensive Backtesting Engine
 */
class BacktestingEngine extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  dataFetcher;
  auditService;
  state;
  strategies;
  validationRules;
  constructor(gateIOClient) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[0]++;
    cov_2168gut2mt().s[8]++;
    super();
    /* istanbul ignore next */
    cov_2168gut2mt().s[9]++;
    this.dataFetcher = new historical_data_fetcher_1.HistoricalDataFetcher(gateIOClient);
    /* istanbul ignore next */
    cov_2168gut2mt().s[10]++;
    this.auditService = new audit_service_1.AuditService();
    /* istanbul ignore next */
    cov_2168gut2mt().s[11]++;
    this.strategies = new Map();
    // Initialize state
    /* istanbul ignore next */
    cov_2168gut2mt().s[12]++;
    this.state = {
      currentTime: new Date(),
      portfolio: this.createInitialPortfolio(new Date(), 0),
      openPositions: new Map(),
      tradeHistory: [],
      signals: [],
      marketData: [],
      isRunning: false,
      progress: 0
    };
    // Set validation rules
    /* istanbul ignore next */
    cov_2168gut2mt().s[13]++;
    this.validationRules = {
      minDataPoints: 100,
      maxGapMinutes: 60,
      requireRealData: true,
      minTradeAmount: 10,
      maxPositionSize: 0.1,
      // 10% of portfolio
      maxOpenPositions: 5,
      maxRiskPerTrade: 0.03,
      // 3%
      maxTotalRisk: 0.15,
      // 15%
      maxDrawdown: 0.2,
      // 20%
      minSharpeRatio: 0.5,
      minWinRate: 0.4,
      // 40%
      minProfitFactor: 1.2
    };
    /* istanbul ignore next */
    cov_2168gut2mt().s[14]++;
    logger_1.logger.info('🚀 Backtesting Engine initialized - REAL DATA ONLY');
  }
  /**
   * Register a trading strategy for backtesting
   */
  registerStrategy(strategy) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[1]++;
    cov_2168gut2mt().s[15]++;
    this.strategies.set(strategy.name, strategy);
    /* istanbul ignore next */
    cov_2168gut2mt().s[16]++;
    logger_1.logger.info(`📊 Strategy registered: ${strategy.name}`);
  }
  /**
   * Run comprehensive backtesting
   */
  async runBacktest(config) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[2]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[17]++, Date.now());
    /* istanbul ignore next */
    cov_2168gut2mt().s[18]++;
    try {
      /* istanbul ignore next */
      cov_2168gut2mt().s[19]++;
      logger_1.logger.info(`🎯 Starting backtesting for ${config.symbol} from ${config.startDate.toISOString()} to ${config.endDate.toISOString()}`);
      // Validate configuration
      /* istanbul ignore next */
      cov_2168gut2mt().s[20]++;
      this.validateBacktestConfig(config);
      // Initialize state
      /* istanbul ignore next */
      cov_2168gut2mt().s[21]++;
      this.initializeBacktestState(config);
      // Fetch and validate historical data
      /* istanbul ignore next */
      cov_2168gut2mt().s[22]++;
      this.emit('progress', {
        status: 'INITIALIZING',
        progress: 0,
        message: 'Fetching historical data...'
      });
      const historicalData =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[23]++, await this.dataFetcher.fetchForBacktest(config));
      // Validate data quality
      const dataValidation =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[24]++, await this.dataFetcher.validateForBacktesting(historicalData, config));
      /* istanbul ignore next */
      cov_2168gut2mt().s[25]++;
      if (!dataValidation.isValid) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[0][0]++;
        cov_2168gut2mt().s[26]++;
        throw new Error(`Data validation failed: ${dataValidation.errors.join(', ')}`);
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[0][1]++;
      }
      cov_2168gut2mt().s[27]++;
      this.state.marketData = historicalData;
      /* istanbul ignore next */
      cov_2168gut2mt().s[28]++;
      logger_1.logger.info(`📈 Loaded ${historicalData.length} historical data points`);
      // Generate trading signals for all strategies
      /* istanbul ignore next */
      cov_2168gut2mt().s[29]++;
      this.emit('progress', {
        status: 'RUNNING',
        progress: 10,
        message: 'Generating trading signals...'
      });
      const allSignals =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[30]++, await this.generateAllSignals(historicalData, config.strategies));
      // Run simulation
      /* istanbul ignore next */
      cov_2168gut2mt().s[31]++;
      this.emit('progress', {
        status: 'RUNNING',
        progress: 20,
        message: 'Running simulation...'
      });
      const portfolioHistory =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[32]++, await this.runSimulation(historicalData, allSignals, config));
      // Calculate performance metrics
      /* istanbul ignore next */
      cov_2168gut2mt().s[33]++;
      this.emit('progress', {
        status: 'RUNNING',
        progress: 80,
        message: 'Calculating performance metrics...'
      });
      const result =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[34]++, await this.calculateBacktestResults(config, portfolioHistory, dataValidation));
      // Log audit event
      /* istanbul ignore next */
      cov_2168gut2mt().s[35]++;
      await this.auditService.logSecurityEvent({
        type: 'BACKTEST_COMPLETED',
        severity: 'INFO',
        details: {
          symbol: config.symbol,
          duration: Date.now() - startTime,
          trades: result.trades.total,
          performance: result.performance
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2168gut2mt().s[36]++;
      this.emit('progress', {
        status: 'COMPLETED',
        progress: 100,
        message: 'Backtesting completed successfully'
      });
      /* istanbul ignore next */
      cov_2168gut2mt().s[37]++;
      logger_1.logger.info(`✅ Backtesting completed in ${Date.now() - startTime}ms`);
      /* istanbul ignore next */
      cov_2168gut2mt().s[38]++;
      logger_1.logger.info(`📊 Results: ${result.trades.total} trades, ${result.performance.totalReturnPercentage.toFixed(2)}% return, ${result.performance.sharpeRatio.toFixed(2)} Sharpe ratio`);
      /* istanbul ignore next */
      cov_2168gut2mt().s[39]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[40]++;
      logger_1.logger.error('❌ Backtesting failed:', error);
      /* istanbul ignore next */
      cov_2168gut2mt().s[41]++;
      await this.auditService.logSecurityEvent({
        type: 'BACKTEST_FAILED',
        severity: 'ERROR',
        details: {
          symbol: config.symbol,
          error: error.message,
          duration: Date.now() - startTime
        },
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_2168gut2mt().s[42]++;
      this.emit('progress', {
        status: 'ERROR',
        progress: 0,
        message: `Backtesting failed: ${error.message}`
      });
      /* istanbul ignore next */
      cov_2168gut2mt().s[43]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2168gut2mt().s[44]++;
      this.state.isRunning = false;
    }
  }
  /**
   * Generate signals from all registered strategies
   */
  async generateAllSignals(historicalData, strategyNames) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[3]++;
    const allSignals =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[45]++, new Map());
    /* istanbul ignore next */
    cov_2168gut2mt().s[46]++;
    for (const strategyName of strategyNames) {
      const strategy =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[47]++, this.strategies.get(strategyName));
      /* istanbul ignore next */
      cov_2168gut2mt().s[48]++;
      if (!strategy) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[1][0]++;
        cov_2168gut2mt().s[49]++;
        logger_1.logger.warn(`⚠️ Strategy not found: ${strategyName}`);
        /* istanbul ignore next */
        cov_2168gut2mt().s[50]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[1][1]++;
      }
      cov_2168gut2mt().s[51]++;
      try {
        /* istanbul ignore next */
        cov_2168gut2mt().s[52]++;
        logger_1.logger.info(`🔄 Generating signals for strategy: ${strategyName}`);
        const signals =
        /* istanbul ignore next */
        (cov_2168gut2mt().s[53]++, await strategy.generateSignals(historicalData));
        /* istanbul ignore next */
        cov_2168gut2mt().s[54]++;
        allSignals.set(strategyName, signals);
        /* istanbul ignore next */
        cov_2168gut2mt().s[55]++;
        logger_1.logger.info(`✅ Generated ${signals.length} signals for ${strategyName}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_2168gut2mt().s[56]++;
        logger_1.logger.error(`❌ Failed to generate signals for ${strategyName}:`, error);
        /* istanbul ignore next */
        cov_2168gut2mt().s[57]++;
        allSignals.set(strategyName, []);
      }
    }
    /* istanbul ignore next */
    cov_2168gut2mt().s[58]++;
    return allSignals;
  }
  /**
   * Run the main simulation loop
   */
  async runSimulation(historicalData, allSignals, config) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[4]++;
    const portfolioHistory =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[59]++, []);
    const executionSim =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[60]++, {
      slippage: config.slippage,
      marketImpact: 0.001,
      // 0.1% additional impact
      latency: 100,
      // 100ms execution delay
      partialFills: true,
      rejectProbability: 0.01 // 1% rejection rate
    });
    // Combine and sort all signals by timestamp
    const allSignalsList =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[61]++, []);
    /* istanbul ignore next */
    cov_2168gut2mt().s[62]++;
    for (const [strategy, signals] of allSignals) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[63]++;
      for (const signal of signals) {
        /* istanbul ignore next */
        cov_2168gut2mt().s[64]++;
        allSignalsList.push({
          signal,
          strategy
        });
      }
    }
    /* istanbul ignore next */
    cov_2168gut2mt().s[65]++;
    allSignalsList.sort((a, b) => {
      /* istanbul ignore next */
      cov_2168gut2mt().f[5]++;
      cov_2168gut2mt().s[66]++;
      return a.signal.timestamp.getTime() - b.signal.timestamp.getTime();
    });
    let signalIndex =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[67]++, 0);
    let maxEquity =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[68]++, config.initialBalance);
    // Process each data point
    /* istanbul ignore next */
    cov_2168gut2mt().s[69]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[70]++, 0); i < historicalData.length; i++) {
      const marketData =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[71]++, historicalData[i]);
      /* istanbul ignore next */
      cov_2168gut2mt().s[72]++;
      this.state.currentTime = marketData.timestamp;
      // Update portfolio with current market prices
      /* istanbul ignore next */
      cov_2168gut2mt().s[73]++;
      this.updatePortfolioValues(marketData);
      // Process signals at current timestamp
      /* istanbul ignore next */
      cov_2168gut2mt().s[74]++;
      while (
      /* istanbul ignore next */
      (cov_2168gut2mt().b[2][0]++, signalIndex < allSignalsList.length) &&
      /* istanbul ignore next */
      (cov_2168gut2mt().b[2][1]++, allSignalsList[signalIndex].signal.timestamp <= marketData.timestamp)) {
        const {
          signal,
          strategy
        } =
        /* istanbul ignore next */
        (cov_2168gut2mt().s[75]++, allSignalsList[signalIndex]);
        /* istanbul ignore next */
        cov_2168gut2mt().s[76]++;
        await this.processSignal(signal, strategy, marketData, config, executionSim);
        /* istanbul ignore next */
        cov_2168gut2mt().s[77]++;
        signalIndex++;
      }
      // Update stop losses and take profits
      /* istanbul ignore next */
      cov_2168gut2mt().s[78]++;
      await this.updateStopLossesAndTakeProfits(marketData, config);
      // Calculate current portfolio state
      const currentPortfolio =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[79]++, this.calculateCurrentPortfolio(marketData, maxEquity));
      /* istanbul ignore next */
      cov_2168gut2mt().s[80]++;
      portfolioHistory.push(currentPortfolio);
      // Update max equity for drawdown calculation
      /* istanbul ignore next */
      cov_2168gut2mt().s[81]++;
      if (currentPortfolio.equity > maxEquity) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[3][0]++;
        cov_2168gut2mt().s[82]++;
        maxEquity = currentPortfolio.equity;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[3][1]++;
      }
      // Update progress
      const progress =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[83]++, 20 + Math.floor(i / historicalData.length * 60));
      /* istanbul ignore next */
      cov_2168gut2mt().s[84]++;
      if (i % Math.floor(historicalData.length / 20) === 0) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[4][0]++;
        cov_2168gut2mt().s[85]++;
        this.emit('progress', {
          status: 'RUNNING',
          progress,
          message: `Processing ${marketData.timestamp.toISOString()}...`
        });
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[4][1]++;
      }
      // Risk management checks
      cov_2168gut2mt().s[86]++;
      if (currentPortfolio.drawdownPercentage > config.riskManagement.maxDrawdown * 100) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[5][0]++;
        cov_2168gut2mt().s[87]++;
        logger_1.logger.warn(`⚠️ Maximum drawdown exceeded: ${currentPortfolio.drawdownPercentage.toFixed(2)}%`);
        // Close all positions in emergency
        /* istanbul ignore next */
        cov_2168gut2mt().s[88]++;
        await this.closeAllPositions(marketData, 'EMERGENCY_STOP');
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[5][1]++;
      }
    }
    // Close any remaining open positions at the end
    /* istanbul ignore next */
    cov_2168gut2mt().s[89]++;
    if (this.state.openPositions.size > 0) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[6][0]++;
      const lastMarketData =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[90]++, historicalData[historicalData.length - 1]);
      /* istanbul ignore next */
      cov_2168gut2mt().s[91]++;
      await this.closeAllPositions(lastMarketData, 'END_OF_PERIOD');
      // Add final portfolio state
      const finalPortfolio =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[92]++, this.calculateCurrentPortfolio(lastMarketData, maxEquity));
      /* istanbul ignore next */
      cov_2168gut2mt().s[93]++;
      portfolioHistory.push(finalPortfolio);
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[6][1]++;
    }
    cov_2168gut2mt().s[94]++;
    return portfolioHistory;
  }
  /**
   * Process a trading signal
   */
  async processSignal(signal, strategy, marketData, config, executionSim) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[6]++;
    cov_2168gut2mt().s[95]++;
    try {
      /* istanbul ignore next */
      cov_2168gut2mt().s[96]++;
      // Skip HOLD signals
      if (signal.type === 'HOLD') {
        /* istanbul ignore next */
        cov_2168gut2mt().b[7][0]++;
        cov_2168gut2mt().s[97]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[7][1]++;
      }
      // Validate signal
      cov_2168gut2mt().s[98]++;
      if (!this.validateSignal(signal, config)) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[8][0]++;
        cov_2168gut2mt().s[99]++;
        logger_1.logger.debug(`⚠️ Signal validation failed for ${signal.id}`);
        /* istanbul ignore next */
        cov_2168gut2mt().s[100]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[8][1]++;
      }
      // Calculate position size based on risk management
      const positionSize =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[101]++, this.calculatePositionSize(signal, config, marketData));
      /* istanbul ignore next */
      cov_2168gut2mt().s[102]++;
      if (positionSize <= 0) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[9][0]++;
        cov_2168gut2mt().s[103]++;
        logger_1.logger.debug(`⚠️ Position size too small for signal ${signal.id}`);
        /* istanbul ignore next */
        cov_2168gut2mt().s[104]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[9][1]++;
      }
      // Simulate execution with realistic conditions
      const executedTrade =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[105]++, await this.simulateExecution(signal, strategy, positionSize, marketData, config, executionSim));
      /* istanbul ignore next */
      cov_2168gut2mt().s[106]++;
      if (executedTrade) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[10][0]++;
        cov_2168gut2mt().s[107]++;
        this.state.tradeHistory.push(executedTrade);
        /* istanbul ignore next */
        cov_2168gut2mt().s[108]++;
        if (signal.type === 'BUY') {
          /* istanbul ignore next */
          cov_2168gut2mt().b[11][0]++;
          // Open new position
          const position =
          /* istanbul ignore next */
          (cov_2168gut2mt().s[109]++, {
            symbol: signal.symbol,
            quantity: executedTrade.quantity,
            averagePrice: executedTrade.entryPrice,
            currentPrice: marketData.close,
            unrealizedPnL: 0,
            unrealizedPnLPercentage: 0,
            stopLoss: executedTrade.stopLoss,
            takeProfit: executedTrade.takeProfit,
            entryTime: executedTrade.entryTime,
            strategy
          });
          /* istanbul ignore next */
          cov_2168gut2mt().s[110]++;
          this.state.openPositions.set(executedTrade.id, position);
        } else {
          /* istanbul ignore next */
          cov_2168gut2mt().b[11][1]++;
          cov_2168gut2mt().s[111]++;
          if (signal.type === 'SELL') {
            /* istanbul ignore next */
            cov_2168gut2mt().b[12][0]++;
            // Close existing position
            const positionId =
            /* istanbul ignore next */
            (cov_2168gut2mt().s[112]++, this.findPositionToClose(signal.symbol));
            /* istanbul ignore next */
            cov_2168gut2mt().s[113]++;
            if (positionId) {
              /* istanbul ignore next */
              cov_2168gut2mt().b[13][0]++;
              cov_2168gut2mt().s[114]++;
              this.state.openPositions.delete(positionId);
              // Update trade with exit information
              const tradeIndex =
              /* istanbul ignore next */
              (cov_2168gut2mt().s[115]++, this.state.tradeHistory.findIndex(t => {
                /* istanbul ignore next */
                cov_2168gut2mt().f[7]++;
                cov_2168gut2mt().s[116]++;
                return t.id === positionId;
              }));
              /* istanbul ignore next */
              cov_2168gut2mt().s[117]++;
              if (tradeIndex >= 0) {
                /* istanbul ignore next */
                cov_2168gut2mt().b[14][0]++;
                const trade =
                /* istanbul ignore next */
                (cov_2168gut2mt().s[118]++, this.state.tradeHistory[tradeIndex]);
                /* istanbul ignore next */
                cov_2168gut2mt().s[119]++;
                trade.exitPrice = executedTrade.entryPrice; // Exit price is entry price of sell order
                /* istanbul ignore next */
                cov_2168gut2mt().s[120]++;
                trade.exitTime = executedTrade.entryTime;
                /* istanbul ignore next */
                cov_2168gut2mt().s[121]++;
                trade.status = 'CLOSED';
                /* istanbul ignore next */
                cov_2168gut2mt().s[122]++;
                trade.exitReason = 'STRATEGY_EXIT';
                /* istanbul ignore next */
                cov_2168gut2mt().s[123]++;
                trade.pnl = this.calculateTradePnL(trade);
                /* istanbul ignore next */
                cov_2168gut2mt().s[124]++;
                trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;
              } else
              /* istanbul ignore next */
              {
                cov_2168gut2mt().b[14][1]++;
              }
            } else
            /* istanbul ignore next */
            {
              cov_2168gut2mt().b[13][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2168gut2mt().b[12][1]++;
          }
        }
        /* istanbul ignore next */
        cov_2168gut2mt().s[125]++;
        logger_1.logger.debug(`✅ Executed ${signal.type} signal for ${signal.symbol}: ${positionSize} @ ${executedTrade.entryPrice}`);
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[10][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[126]++;
      logger_1.logger.error(`❌ Failed to process signal ${signal.id}:`, error);
    }
  }
  /**
   * Simulate realistic trade execution
   */
  async simulateExecution(signal, strategy, positionSize, marketData, config, executionSim) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[8]++;
    cov_2168gut2mt().s[127]++;
    // Simulate order rejection
    if (Math.random() < executionSim.rejectProbability) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[15][0]++;
      cov_2168gut2mt().s[128]++;
      logger_1.logger.debug(`❌ Order rejected for signal ${signal.id}`);
      /* istanbul ignore next */
      cov_2168gut2mt().s[129]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[15][1]++;
    }
    // Calculate execution price with slippage
    const basePrice =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[130]++, signal.type === 'BUY' ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[16][0]++, marketData.close) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[16][1]++, marketData.close));
    const slippageAmount =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[131]++, basePrice * executionSim.slippage);
    const marketImpactAmount =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[132]++, basePrice * executionSim.marketImpact * Math.min(positionSize / 1000, 1));
    const executionPrice =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[133]++, signal.type === 'BUY' ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[17][0]++, basePrice + slippageAmount + marketImpactAmount) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[17][1]++, basePrice - slippageAmount - marketImpactAmount));
    // Calculate fees
    const feeRate =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[134]++, signal.type === 'BUY' ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[18][0]++, config.fees.taker) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[18][1]++, config.fees.maker));
    const fees =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[135]++, positionSize * executionPrice * feeRate);
    // Calculate stop loss and take profit levels
    const stopLoss =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[136]++, signal.type === 'BUY' ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[19][0]++, executionPrice * (1 - config.riskManagement.stopLossPercentage)) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[19][1]++, executionPrice * (1 + config.riskManagement.stopLossPercentage)));
    const riskAmount =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[137]++, Math.abs(executionPrice - stopLoss) * positionSize);
    const rewardAmount =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[138]++, riskAmount * config.riskManagement.minRiskRewardRatio);
    const takeProfit =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[139]++, signal.type === 'BUY' ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[20][0]++, executionPrice + rewardAmount / positionSize) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[20][1]++, executionPrice - rewardAmount / positionSize));
    // Create trade record
    const trade =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[140]++, {
      id: (0, uuid_1.v4)(),
      symbol: signal.symbol,
      type: signal.type,
      quantity: positionSize,
      entryPrice: executionPrice,
      entryTime: new Date(marketData.timestamp.getTime() + executionSim.latency),
      strategy,
      signal,
      stopLoss,
      takeProfit,
      fees,
      slippage: slippageAmount,
      status: 'OPEN'
    });
    /* istanbul ignore next */
    cov_2168gut2mt().s[141]++;
    return trade;
  }
  /**
   * Update stop losses and take profits
   */
  async updateStopLossesAndTakeProfits(marketData, config) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[9]++;
    const positionsToClose =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[142]++, []);
    /* istanbul ignore next */
    cov_2168gut2mt().s[143]++;
    for (const [positionId, position] of this.state.openPositions) {
      const currentPrice =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[144]++, marketData.close);
      // Check stop loss
      /* istanbul ignore next */
      cov_2168gut2mt().s[145]++;
      if (
      /* istanbul ignore next */
      (cov_2168gut2mt().b[22][0]++, position.quantity > 0) &&
      /* istanbul ignore next */
      (cov_2168gut2mt().b[22][1]++, currentPrice <= position.stopLoss) ||
      /* istanbul ignore next */
      (cov_2168gut2mt().b[22][2]++, position.quantity < 0) &&
      /* istanbul ignore next */
      (cov_2168gut2mt().b[22][3]++, currentPrice >= position.stopLoss)) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[21][0]++;
        cov_2168gut2mt().s[146]++;
        positionsToClose.push(positionId);
        // Update trade record
        const tradeIndex =
        /* istanbul ignore next */
        (cov_2168gut2mt().s[147]++, this.state.tradeHistory.findIndex(t => {
          /* istanbul ignore next */
          cov_2168gut2mt().f[10]++;
          cov_2168gut2mt().s[148]++;
          return t.id === positionId;
        }));
        /* istanbul ignore next */
        cov_2168gut2mt().s[149]++;
        if (tradeIndex >= 0) {
          /* istanbul ignore next */
          cov_2168gut2mt().b[23][0]++;
          const trade =
          /* istanbul ignore next */
          (cov_2168gut2mt().s[150]++, this.state.tradeHistory[tradeIndex]);
          /* istanbul ignore next */
          cov_2168gut2mt().s[151]++;
          trade.exitPrice = position.stopLoss;
          /* istanbul ignore next */
          cov_2168gut2mt().s[152]++;
          trade.exitTime = marketData.timestamp;
          /* istanbul ignore next */
          cov_2168gut2mt().s[153]++;
          trade.status = 'STOPPED';
          /* istanbul ignore next */
          cov_2168gut2mt().s[154]++;
          trade.exitReason = 'STOP_LOSS';
          /* istanbul ignore next */
          cov_2168gut2mt().s[155]++;
          trade.pnl = this.calculateTradePnL(trade);
          /* istanbul ignore next */
          cov_2168gut2mt().s[156]++;
          trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;
        } else
        /* istanbul ignore next */
        {
          cov_2168gut2mt().b[23][1]++;
        }
        cov_2168gut2mt().s[157]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[21][1]++;
      }
      // Check take profit
      cov_2168gut2mt().s[158]++;
      if (
      /* istanbul ignore next */
      (cov_2168gut2mt().b[25][0]++, position.quantity > 0) &&
      /* istanbul ignore next */
      (cov_2168gut2mt().b[25][1]++, currentPrice >= position.takeProfit) ||
      /* istanbul ignore next */
      (cov_2168gut2mt().b[25][2]++, position.quantity < 0) &&
      /* istanbul ignore next */
      (cov_2168gut2mt().b[25][3]++, currentPrice <= position.takeProfit)) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[24][0]++;
        cov_2168gut2mt().s[159]++;
        positionsToClose.push(positionId);
        // Update trade record
        const tradeIndex =
        /* istanbul ignore next */
        (cov_2168gut2mt().s[160]++, this.state.tradeHistory.findIndex(t => {
          /* istanbul ignore next */
          cov_2168gut2mt().f[11]++;
          cov_2168gut2mt().s[161]++;
          return t.id === positionId;
        }));
        /* istanbul ignore next */
        cov_2168gut2mt().s[162]++;
        if (tradeIndex >= 0) {
          /* istanbul ignore next */
          cov_2168gut2mt().b[26][0]++;
          const trade =
          /* istanbul ignore next */
          (cov_2168gut2mt().s[163]++, this.state.tradeHistory[tradeIndex]);
          /* istanbul ignore next */
          cov_2168gut2mt().s[164]++;
          trade.exitPrice = position.takeProfit;
          /* istanbul ignore next */
          cov_2168gut2mt().s[165]++;
          trade.exitTime = marketData.timestamp;
          /* istanbul ignore next */
          cov_2168gut2mt().s[166]++;
          trade.status = 'CLOSED';
          /* istanbul ignore next */
          cov_2168gut2mt().s[167]++;
          trade.exitReason = 'TAKE_PROFIT';
          /* istanbul ignore next */
          cov_2168gut2mt().s[168]++;
          trade.pnl = this.calculateTradePnL(trade);
          /* istanbul ignore next */
          cov_2168gut2mt().s[169]++;
          trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;
        } else
        /* istanbul ignore next */
        {
          cov_2168gut2mt().b[26][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[24][1]++;
      }
    }
    // Remove closed positions
    /* istanbul ignore next */
    cov_2168gut2mt().s[170]++;
    for (const positionId of positionsToClose) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[171]++;
      this.state.openPositions.delete(positionId);
    }
  }
  /**
   * Close all open positions
   */
  async closeAllPositions(marketData, reason) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[12]++;
    cov_2168gut2mt().s[172]++;
    for (const [positionId, position] of this.state.openPositions) {
      // Update trade record
      const tradeIndex =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[173]++, this.state.tradeHistory.findIndex(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[13]++;
        cov_2168gut2mt().s[174]++;
        return t.id === positionId;
      }));
      /* istanbul ignore next */
      cov_2168gut2mt().s[175]++;
      if (tradeIndex >= 0) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[27][0]++;
        const trade =
        /* istanbul ignore next */
        (cov_2168gut2mt().s[176]++, this.state.tradeHistory[tradeIndex]);
        /* istanbul ignore next */
        cov_2168gut2mt().s[177]++;
        trade.exitPrice = marketData.close;
        /* istanbul ignore next */
        cov_2168gut2mt().s[178]++;
        trade.exitTime = marketData.timestamp;
        /* istanbul ignore next */
        cov_2168gut2mt().s[179]++;
        trade.status = 'CLOSED';
        /* istanbul ignore next */
        cov_2168gut2mt().s[180]++;
        trade.exitReason = reason;
        /* istanbul ignore next */
        cov_2168gut2mt().s[181]++;
        trade.pnl = this.calculateTradePnL(trade);
        /* istanbul ignore next */
        cov_2168gut2mt().s[182]++;
        trade.pnlPercentage = trade.pnl / (trade.entryPrice * trade.quantity) * 100;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[27][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2168gut2mt().s[183]++;
    this.state.openPositions.clear();
    /* istanbul ignore next */
    cov_2168gut2mt().s[184]++;
    logger_1.logger.info(`🔒 Closed all positions due to: ${reason}`);
  }
  /**
   * Calculate comprehensive backtest results
   */
  async calculateBacktestResults(config, portfolioHistory, dataValidation) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[14]++;
    const period =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[185]++, {
      start: config.startDate,
      end: config.endDate,
      durationDays: (config.endDate.getTime() - config.startDate.getTime()) / (1000 * 60 * 60 * 24)
    });
    // Calculate performance metrics
    const performance =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[186]++, performance_calculator_1.PerformanceCalculator.calculatePerformanceMetrics(this.state.tradeHistory, portfolioHistory, config.initialBalance));
    // Calculate risk metrics
    const returns =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[187]++, this.calculateReturns(portfolioHistory));
    const risk =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[188]++, performance_calculator_1.PerformanceCalculator.calculateRiskMetrics(returns));
    // Calculate trade statistics
    const trades =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[189]++, performance_calculator_1.PerformanceCalculator.calculateTradeStatistics(this.state.tradeHistory));
    // Generate strategy performance breakdown
    const strategyPerformance =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[190]++, this.calculateStrategyPerformance(config.strategies));
    // Generate time series data
    const equityCurve =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[191]++, performance_calculator_1.PerformanceCalculator.generateEquityCurve(portfolioHistory));
    const drawdownCurve =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[192]++, performance_calculator_1.PerformanceCalculator.generateDrawdownCurve(portfolioHistory));
    const monthlyReturns =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[193]++, performance_calculator_1.PerformanceCalculator.generateMonthlyReturns(portfolioHistory, this.state.tradeHistory));
    const result =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[194]++, {
      config,
      period,
      trades,
      performance,
      risk,
      strategyPerformance,
      equityCurve,
      drawdownCurve,
      monthlyReturns,
      dataQuality: {
        totalDataPoints: dataValidation.totalPoints,
        validDataPoints: dataValidation.validPoints,
        dataIntegrityScore: dataValidation.integrityScore,
        gapsDetected: dataValidation.gaps.length,
        averageGapMinutes: dataValidation.gaps.length > 0 ?
        /* istanbul ignore next */
        (cov_2168gut2mt().b[28][0]++, dataValidation.gaps.reduce((sum, gap) => {
          /* istanbul ignore next */
          cov_2168gut2mt().f[15]++;
          cov_2168gut2mt().s[195]++;
          return sum + gap.durationMinutes;
        }, 0) / dataValidation.gaps.length) :
        /* istanbul ignore next */
        (cov_2168gut2mt().b[28][1]++, 0),
        dataSource: 'GATE_IO_REAL_DATA'
      },
      executionDetails: this.state.tradeHistory,
      portfolioHistory
    });
    /* istanbul ignore next */
    cov_2168gut2mt().s[196]++;
    return result;
  }
  /**
   * Helper methods
   */
  validateBacktestConfig(config) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[16]++;
    cov_2168gut2mt().s[197]++;
    if (
    /* istanbul ignore next */
    (cov_2168gut2mt().b[30][0]++, !config.symbol) ||
    /* istanbul ignore next */
    (cov_2168gut2mt().b[30][1]++, config.symbol.trim() === '')) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[29][0]++;
      cov_2168gut2mt().s[198]++;
      throw new Error('Symbol is required');
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[29][1]++;
    }
    cov_2168gut2mt().s[199]++;
    if (config.startDate >= config.endDate) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[31][0]++;
      cov_2168gut2mt().s[200]++;
      throw new Error('Start date must be before end date');
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[31][1]++;
    }
    cov_2168gut2mt().s[201]++;
    if (config.initialBalance <= 0) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[32][0]++;
      cov_2168gut2mt().s[202]++;
      throw new Error('Initial balance must be positive');
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[32][1]++;
    }
    cov_2168gut2mt().s[203]++;
    if (config.strategies.length === 0) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[33][0]++;
      cov_2168gut2mt().s[204]++;
      throw new Error('At least one strategy must be specified');
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[33][1]++;
    }
    // Validate strategies exist
    cov_2168gut2mt().s[205]++;
    for (const strategyName of config.strategies) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[206]++;
      if (!this.strategies.has(strategyName)) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[34][0]++;
        cov_2168gut2mt().s[207]++;
        throw new Error(`Strategy not found: ${strategyName}`);
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[34][1]++;
      }
    }
  }
  initializeBacktestState(config) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[17]++;
    cov_2168gut2mt().s[208]++;
    this.state = {
      currentTime: config.startDate,
      portfolio: this.createInitialPortfolio(config.startDate, config.initialBalance),
      openPositions: new Map(),
      tradeHistory: [],
      signals: [],
      marketData: [],
      isRunning: true,
      progress: 0
    };
  }
  createInitialPortfolio(timestamp, balance) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[18]++;
    cov_2168gut2mt().s[209]++;
    return {
      timestamp,
      balance,
      equity: balance,
      positions: [],
      totalPnL: 0,
      unrealizedPnL: 0,
      realizedPnL: 0,
      drawdown: 0,
      drawdownPercentage: 0,
      maxDrawdown: 0,
      maxDrawdownPercentage: 0
    };
  }
  validateSignal(signal, config) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[19]++;
    cov_2168gut2mt().s[210]++;
    // Check signal strength and confidence
    if (
    /* istanbul ignore next */
    (cov_2168gut2mt().b[36][0]++, signal.strength < 50) ||
    /* istanbul ignore next */
    (cov_2168gut2mt().b[36][1]++, signal.confidence < 60)) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[35][0]++;
      cov_2168gut2mt().s[211]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[35][1]++;
    }
    // Check risk-reward ratio
    cov_2168gut2mt().s[212]++;
    if (signal.riskReward < config.riskManagement.minRiskRewardRatio) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[37][0]++;
      cov_2168gut2mt().s[213]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[37][1]++;
    }
    cov_2168gut2mt().s[214]++;
    return true;
  }
  calculatePositionSize(signal, config, marketData) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[20]++;
    const availableBalance =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[215]++, this.state.portfolio.balance);
    const riskAmount =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[216]++, availableBalance * config.riskManagement.maxRiskPerTrade);
    // Calculate position size based on stop loss distance
    const stopLossDistance =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[217]++, config.riskManagement.stopLossPercentage);
    const positionValue =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[218]++, riskAmount / stopLossDistance);
    const positionSize =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[219]++, positionValue / marketData.close);
    // Apply confidence-based sizing
    const confidenceMultiplier =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[220]++, signal.confidence / 100);
    const adjustedSize =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[221]++, positionSize * confidenceMultiplier);
    // Ensure minimum trade amount
    const minSize =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[222]++, config.riskManagement.maxRiskPerTrade * availableBalance / marketData.close);
    /* istanbul ignore next */
    cov_2168gut2mt().s[223]++;
    return Math.max(adjustedSize, minSize);
  }
  updatePortfolioValues(marketData) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[21]++;
    cov_2168gut2mt().s[224]++;
    // Update position values
    for (const [positionId, position] of this.state.openPositions) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[225]++;
      if (position.symbol === marketData.symbol) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[38][0]++;
        cov_2168gut2mt().s[226]++;
        position.currentPrice = marketData.close;
        /* istanbul ignore next */
        cov_2168gut2mt().s[227]++;
        position.unrealizedPnL = (marketData.close - position.averagePrice) * position.quantity;
        /* istanbul ignore next */
        cov_2168gut2mt().s[228]++;
        position.unrealizedPnLPercentage = position.unrealizedPnL / (position.averagePrice * Math.abs(position.quantity)) * 100;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[38][1]++;
      }
    }
  }
  calculateCurrentPortfolio(marketData, maxEquity) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[22]++;
    const positions =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[229]++, Array.from(this.state.openPositions.values()));
    const unrealizedPnL =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[230]++, positions.reduce((sum, pos) => {
      /* istanbul ignore next */
      cov_2168gut2mt().f[23]++;
      cov_2168gut2mt().s[231]++;
      return sum + pos.unrealizedPnL;
    }, 0));
    const realizedPnL =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[232]++, this.state.tradeHistory.filter(t => {
      /* istanbul ignore next */
      cov_2168gut2mt().f[24]++;
      cov_2168gut2mt().s[233]++;
      return /* istanbul ignore next */(cov_2168gut2mt().b[39][0]++, t.status === 'CLOSED') &&
      /* istanbul ignore next */
      (cov_2168gut2mt().b[39][1]++, t.pnl !== undefined);
    }).reduce((sum, t) => {
      /* istanbul ignore next */
      cov_2168gut2mt().f[25]++;
      cov_2168gut2mt().s[234]++;
      return sum + t.pnl;
    }, 0));
    const equity =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[235]++, this.state.portfolio.balance + unrealizedPnL + realizedPnL);
    const drawdown =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[236]++, Math.max(0, maxEquity - equity));
    const drawdownPercentage =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[237]++, maxEquity > 0 ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[40][0]++, drawdown / maxEquity * 100) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[40][1]++, 0));
    /* istanbul ignore next */
    cov_2168gut2mt().s[238]++;
    return {
      timestamp: marketData.timestamp,
      balance: this.state.portfolio.balance,
      equity,
      positions,
      totalPnL: unrealizedPnL + realizedPnL,
      unrealizedPnL,
      realizedPnL,
      drawdown,
      drawdownPercentage,
      maxDrawdown: Math.max(this.state.portfolio.maxDrawdown, drawdown),
      maxDrawdownPercentage: Math.max(this.state.portfolio.maxDrawdownPercentage, drawdownPercentage)
    };
  }
  calculateTradePnL(trade) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[26]++;
    cov_2168gut2mt().s[239]++;
    if (!trade.exitPrice) {
      /* istanbul ignore next */
      cov_2168gut2mt().b[41][0]++;
      cov_2168gut2mt().s[240]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2168gut2mt().b[41][1]++;
    }
    const pnl =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[241]++, trade.type === 'BUY' ?
    /* istanbul ignore next */
    (cov_2168gut2mt().b[42][0]++, (trade.exitPrice - trade.entryPrice) * trade.quantity) :
    /* istanbul ignore next */
    (cov_2168gut2mt().b[42][1]++, (trade.entryPrice - trade.exitPrice) * trade.quantity));
    /* istanbul ignore next */
    cov_2168gut2mt().s[242]++;
    return pnl - trade.fees;
  }
  findPositionToClose(symbol) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[27]++;
    cov_2168gut2mt().s[243]++;
    for (const [positionId, position] of this.state.openPositions) {
      /* istanbul ignore next */
      cov_2168gut2mt().s[244]++;
      if (position.symbol === symbol) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[43][0]++;
        cov_2168gut2mt().s[245]++;
        return positionId;
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[43][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2168gut2mt().s[246]++;
    return null;
  }
  calculateReturns(portfolioHistory) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[28]++;
    const returns =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[247]++, []);
    /* istanbul ignore next */
    cov_2168gut2mt().s[248]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[249]++, 1); i < portfolioHistory.length; i++) {
      const prevEquity =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[250]++, portfolioHistory[i - 1].equity);
      const currEquity =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[251]++, portfolioHistory[i].equity);
      /* istanbul ignore next */
      cov_2168gut2mt().s[252]++;
      if (prevEquity > 0) {
        /* istanbul ignore next */
        cov_2168gut2mt().b[44][0]++;
        const returnRate =
        /* istanbul ignore next */
        (cov_2168gut2mt().s[253]++, (currEquity - prevEquity) / prevEquity);
        /* istanbul ignore next */
        cov_2168gut2mt().s[254]++;
        returns.push(returnRate);
      } else
      /* istanbul ignore next */
      {
        cov_2168gut2mt().b[44][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2168gut2mt().s[255]++;
    return returns;
  }
  calculateStrategyPerformance(strategyNames) {
    /* istanbul ignore next */
    cov_2168gut2mt().f[29]++;
    const strategyPerformance =
    /* istanbul ignore next */
    (cov_2168gut2mt().s[256]++, {});
    /* istanbul ignore next */
    cov_2168gut2mt().s[257]++;
    for (const strategyName of strategyNames) {
      const strategyTrades =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[258]++, this.state.tradeHistory.filter(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[30]++;
        cov_2168gut2mt().s[259]++;
        return t.strategy === strategyName;
      }));
      const closedTrades =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[260]++, strategyTrades.filter(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[31]++;
        cov_2168gut2mt().s[261]++;
        return /* istanbul ignore next */(cov_2168gut2mt().b[45][0]++, t.status === 'CLOSED') &&
        /* istanbul ignore next */
        (cov_2168gut2mt().b[45][1]++, t.pnl !== undefined);
      }));
      const winningTrades =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[262]++, closedTrades.filter(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[32]++;
        cov_2168gut2mt().s[263]++;
        return t.pnl > 0;
      }));
      const winRate =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[264]++, closedTrades.length > 0 ?
      /* istanbul ignore next */
      (cov_2168gut2mt().b[46][0]++, winningTrades.length / closedTrades.length * 100) :
      /* istanbul ignore next */
      (cov_2168gut2mt().b[46][1]++, 0));
      const totalReturn =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[265]++, closedTrades.reduce((sum, t) => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[33]++;
        cov_2168gut2mt().s[266]++;
        return sum + t.pnl;
      }, 0));
      const grossProfit =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[267]++, winningTrades.reduce((sum, t) => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[34]++;
        cov_2168gut2mt().s[268]++;
        return sum + t.pnl;
      }, 0));
      const grossLoss =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[269]++, Math.abs(closedTrades.filter(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[35]++;
        cov_2168gut2mt().s[270]++;
        return t.pnl < 0;
      }).reduce((sum, t) => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[36]++;
        cov_2168gut2mt().s[271]++;
        return sum + t.pnl;
      }, 0)));
      const profitFactor =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[272]++, grossLoss > 0 ?
      /* istanbul ignore next */
      (cov_2168gut2mt().b[47][0]++, grossProfit / grossLoss) :
      /* istanbul ignore next */
      (cov_2168gut2mt().b[47][1]++, grossProfit > 0 ?
      /* istanbul ignore next */
      (cov_2168gut2mt().b[48][0]++, Infinity) :
      /* istanbul ignore next */
      (cov_2168gut2mt().b[48][1]++, 0)));
      // Calculate average holding period
      const holdingPeriods =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[273]++, closedTrades.filter(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[37]++;
        cov_2168gut2mt().s[274]++;
        return t.exitTime;
      }).map(t => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[38]++;
        cov_2168gut2mt().s[275]++;
        return (t.exitTime.getTime() - t.entryTime.getTime()) / (1000 * 60 * 60);
      })); // in hours
      const averageHoldingPeriod =
      /* istanbul ignore next */
      (cov_2168gut2mt().s[276]++, holdingPeriods.length > 0 ?
      /* istanbul ignore next */
      (cov_2168gut2mt().b[49][0]++, holdingPeriods.reduce((sum, h) => {
        /* istanbul ignore next */
        cov_2168gut2mt().f[39]++;
        cov_2168gut2mt().s[277]++;
        return sum + h;
      }, 0) / holdingPeriods.length) :
      /* istanbul ignore next */
      (cov_2168gut2mt().b[49][1]++, 0));
      /* istanbul ignore next */
      cov_2168gut2mt().s[278]++;
      strategyPerformance[strategyName] = {
        strategyName,
        trades: closedTrades.length,
        winRate,
        totalReturn,
        sharpeRatio: 0,
        // Would need returns series for each strategy
        maxDrawdown: 0,
        // Would need to track per-strategy drawdown
        profitFactor,
        averageHoldingPeriod,
        signalAccuracy: winRate / 100,
        contribution: 0 // Would need to calculate contribution to overall performance
      };
    }
    /* istanbul ignore next */
    cov_2168gut2mt().s[279]++;
    return strategyPerformance;
  }
  /**
   * Get current backtesting state
   */
  getState() {
    /* istanbul ignore next */
    cov_2168gut2mt().f[40]++;
    cov_2168gut2mt().s[280]++;
    return {
      ...this.state
    };
  }
  /**
   * Stop running backtest
   */
  stop() {
    /* istanbul ignore next */
    cov_2168gut2mt().f[41]++;
    cov_2168gut2mt().s[281]++;
    this.state.isRunning = false;
    /* istanbul ignore next */
    cov_2168gut2mt().s[282]++;
    this.emit('progress', {
      status: 'CANCELLED',
      progress: 0,
      message: 'Backtesting cancelled by user'
    });
    /* istanbul ignore next */
    cov_2168gut2mt().s[283]++;
    logger_1.logger.info('🛑 Backtesting stopped by user');
  }
}
/* istanbul ignore next */
cov_2168gut2mt().s[284]++;
exports.BacktestingEngine = BacktestingEngine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,