{"version":3,"names":["cov_cx0ufkpww","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","child_process_1","require","fs_1","path_1","logger_1","database_setup_1","configuration_manager_1","security_hardening_1","backup_recovery_1","FinalValidation","validationSuites","startTime","Date","constructor","initializeValidationSuites","runFullValidation","logger","info","results","totalTests","passedTests","failedTests","warningTests","skippedTests","criticalFailures","suite","enabled","test","tests","testStartTime","now","testResult","Promise","race","createTimeoutPromise","timeout","duration","status","success","result","category","message","details","critical","push","error","isTimeout","totalDuration","getTime","deploymentReady","report","timestamp","environment","process","env","NODE_ENV","getVersion","summary","total","passed","failed","warnings","skipped","criticalFailed","recommendations","generateRecommendations","saveValidationReport","logValidationSummary","description","majorVersion","parseInt","slice","split","memInfo","execSync","encoding","memLines","totalMem","availableMem","diskInfo","diskAvailable","stdio","configurationManager","validateConfiguration","valid","errors","join","apiKey","GATEIO_API_KEY","apiSecret","GATEIO_API_SECRET","length","oracleHost","ORACLE_HOST","sshKeyPath","ORACLE_SSH_KEY_PATH","existsSync","securityHardening","validateSecurityForDeployment","ready","criticalIssues","issues","criticalFiles","expectedPerms","stats","statSync","perms","mode","toString","ufwStatus","isActive","includes","databaseSetup","initialize","isValid","validateIntegrity","getStatistics","cwd","resolve","setTimeout","processes","processData","JSON","parse","runningProcesses","filter","p","pm2_env","responseTime","backupRecovery","performFullBackup","formatBytes","totalSize","size","plans","getRecoveryPlans","map","_","reject","Error","failedCritical","r","failedNonCritical","forEach","slowTests","securityFailures","toISOString","replace","reportPath","writeFileSync","stringify","repeat","Math","round","rec","packageJson","readFileSync","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","runValidationSuite","suiteName","find","getValidationSuites","exports","finalValidation"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\final-validation.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - FINAL VALIDATION AND TESTING\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive final validation and testing for the\r\n * AI crypto trading agent production deployment.\r\n */\r\n\r\nimport { execSync } from 'child_process';\r\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { logger } from '../core/logger';\r\nimport { databaseSetup } from './database-setup';\r\nimport { configurationManager } from './configuration-manager';\r\nimport { securityHardening } from './security-hardening';\r\nimport { monitoringAutomation } from './monitoring-automation';\r\nimport { backupRecovery } from './backup-recovery';\r\n\r\ninterface ValidationResult {\r\n  category: string;\r\n  name: string;\r\n  status: 'PASS' | 'FAIL' | 'WARNING' | 'SKIP';\r\n  message: string;\r\n  details?: any;\r\n  duration: number;\r\n  critical: boolean;\r\n}\r\n\r\ninterface ValidationSuite {\r\n  name: string;\r\n  description: string;\r\n  tests: ValidationTest[];\r\n  enabled: boolean;\r\n}\r\n\r\ninterface ValidationTest {\r\n  name: string;\r\n  description: string;\r\n  critical: boolean;\r\n  timeout: number;\r\n  test: () => Promise<{ success: boolean; message: string; details?: any }>;\r\n}\r\n\r\ninterface ValidationReport {\r\n  timestamp: Date;\r\n  environment: string;\r\n  version: string;\r\n  duration: number;\r\n  summary: {\r\n    total: number;\r\n    passed: number;\r\n    failed: number;\r\n    warnings: number;\r\n    skipped: number;\r\n    criticalFailed: number;\r\n  };\r\n  results: ValidationResult[];\r\n  recommendations: string[];\r\n  deploymentReady: boolean;\r\n}\r\n\r\nexport class FinalValidation {\r\n  private validationSuites: ValidationSuite[] = [];\r\n  private startTime: Date = new Date();\r\n\r\n  constructor() {\r\n    this.initializeValidationSuites();\r\n  }\r\n\r\n  /**\r\n   * Run complete validation suite\r\n   */\r\n  async runFullValidation(): Promise<ValidationReport> {\r\n    logger.info('🔍 Starting comprehensive deployment validation...');\r\n    this.startTime = new Date();\r\n\r\n    const results: ValidationResult[] = [];\r\n    let totalTests = 0;\r\n    let passedTests = 0;\r\n    let failedTests = 0;\r\n    let warningTests = 0;\r\n    let skippedTests = 0;\r\n    let criticalFailures = 0;\r\n\r\n    // Run all validation suites\r\n    for (const suite of this.validationSuites) {\r\n      if (!suite.enabled) {\r\n        logger.info(`⏭️ Skipping disabled suite: ${suite.name}`);\r\n        continue;\r\n      }\r\n\r\n      logger.info(`🧪 Running validation suite: ${suite.name}`);\r\n\r\n      for (const test of suite.tests) {\r\n        totalTests++;\r\n        const testStartTime = Date.now();\r\n\r\n        try {\r\n          logger.info(`  🔍 Running test: ${test.name}`);\r\n\r\n          // Run test with timeout\r\n          const testResult = await Promise.race([\r\n            test.test(),\r\n            this.createTimeoutPromise(test.timeout)\r\n          ]);\r\n\r\n          const duration = Date.now() - testStartTime;\r\n          const status = testResult.success ? 'PASS' : 'FAIL';\r\n\r\n          const result: ValidationResult = {\r\n            category: suite.name,\r\n            name: test.name,\r\n            status,\r\n            message: testResult.message,\r\n            details: testResult.details,\r\n            duration,\r\n            critical: test.critical\r\n          };\r\n\r\n          results.push(result);\r\n\r\n          if (status === 'PASS') {\r\n            passedTests++;\r\n            logger.info(`    ✅ ${test.name} - ${testResult.message}`);\r\n          } else {\r\n            failedTests++;\r\n            if (test.critical) {\r\n              criticalFailures++;\r\n            }\r\n            logger.error(`    ❌ ${test.name} - ${testResult.message}`);\r\n          }\r\n\r\n        } catch (error) {\r\n          const duration = Date.now() - testStartTime;\r\n          const isTimeout = error.message === 'Test timeout';\r\n          \r\n          const result: ValidationResult = {\r\n            category: suite.name,\r\n            name: test.name,\r\n            status: 'FAIL',\r\n            message: isTimeout ? 'Test timed out' : `Test error: ${error.message}`,\r\n            details: { error: error.message },\r\n            duration,\r\n            critical: test.critical\r\n          };\r\n\r\n          results.push(result);\r\n          failedTests++;\r\n          \r\n          if (test.critical) {\r\n            criticalFailures++;\r\n          }\r\n\r\n          logger.error(`    ❌ ${test.name} - ${result.message}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const totalDuration = Date.now() - this.startTime.getTime();\r\n    const deploymentReady = criticalFailures === 0;\r\n\r\n    const report: ValidationReport = {\r\n      timestamp: new Date(),\r\n      environment: process.env.NODE_ENV || 'development',\r\n      version: this.getVersion(),\r\n      duration: totalDuration,\r\n      summary: {\r\n        total: totalTests,\r\n        passed: passedTests,\r\n        failed: failedTests,\r\n        warnings: warningTests,\r\n        skipped: skippedTests,\r\n        criticalFailed: criticalFailures\r\n      },\r\n      results,\r\n      recommendations: this.generateRecommendations(results),\r\n      deploymentReady\r\n    };\r\n\r\n    // Save validation report\r\n    await this.saveValidationReport(report);\r\n\r\n    // Log summary\r\n    this.logValidationSummary(report);\r\n\r\n    return report;\r\n  }\r\n\r\n  /**\r\n   * Initialize validation test suites\r\n   */\r\n  private initializeValidationSuites(): void {\r\n    this.validationSuites = [\r\n      {\r\n        name: 'System Requirements',\r\n        description: 'Validate system requirements and dependencies',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Node.js Version',\r\n            description: 'Verify Node.js version compatibility',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const version = process.version;\r\n              const majorVersion = parseInt(version.slice(1).split('.')[0]);\r\n              \r\n              if (majorVersion >= 18) {\r\n                return { success: true, message: `Node.js ${version} is compatible` };\r\n              } else {\r\n                return { success: false, message: `Node.js ${version} is not supported (requires v18+)` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'System Resources',\r\n            description: 'Check available system resources',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              const memInfo = execSync('free -g', { encoding: 'utf-8' });\r\n              const memLines = memInfo.split('\\n')[1].split(/\\s+/);\r\n              const totalMem = parseInt(memLines[1]);\r\n              const availableMem = parseInt(memLines[6]);\r\n\r\n              const diskInfo = execSync(\"df -BG / | tail -1\", { encoding: 'utf-8' });\r\n              const diskAvailable = parseInt(diskInfo.split(/\\s+/)[3]);\r\n\r\n              if (totalMem < 8) {\r\n                return { success: false, message: `Insufficient RAM: ${totalMem}GB (minimum 8GB required)` };\r\n              }\r\n\r\n              if (availableMem < 2) {\r\n                return { success: false, message: `Insufficient available RAM: ${availableMem}GB (minimum 2GB required)` };\r\n              }\r\n\r\n              if (diskAvailable < 10) {\r\n                return { success: false, message: `Insufficient disk space: ${diskAvailable}GB (minimum 10GB required)` };\r\n              }\r\n\r\n              return { \r\n                success: true, \r\n                message: `System resources adequate: ${totalMem}GB RAM, ${diskAvailable}GB disk`,\r\n                details: { totalMem, availableMem, diskAvailable }\r\n              };\r\n            }\r\n          },\r\n          {\r\n            name: 'Network Connectivity',\r\n            description: 'Verify internet connectivity',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              try {\r\n                execSync('ping -c 1 google.com', { stdio: 'pipe' });\r\n                execSync('ping -c 1 api.gateio.ws', { stdio: 'pipe' });\r\n                return { success: true, message: 'Network connectivity verified' };\r\n              } catch {\r\n                return { success: false, message: 'Network connectivity issues detected' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Configuration Validation',\r\n        description: 'Validate all configuration settings',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Environment Configuration',\r\n            description: 'Validate environment variables',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              const result = await configurationManager.validateConfiguration();\r\n              \r\n              if (result.valid) {\r\n                return { \r\n                  success: true, \r\n                  message: 'Configuration validation passed',\r\n                  details: { warnings: result.warnings }\r\n                };\r\n              } else {\r\n                return { \r\n                  success: false, \r\n                  message: `Configuration validation failed: ${result.errors.join(', ')}`,\r\n                  details: { errors: result.errors, warnings: result.warnings }\r\n                };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'API Credentials',\r\n            description: 'Validate API credentials format',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const apiKey = process.env.GATEIO_API_KEY;\r\n              const apiSecret = process.env.GATEIO_API_SECRET;\r\n\r\n              if (!apiKey || apiKey.length < 10) {\r\n                return { success: false, message: 'Invalid or missing Gate.io API key' };\r\n              }\r\n\r\n              if (!apiSecret || apiSecret.length < 10) {\r\n                return { success: false, message: 'Invalid or missing Gate.io API secret' };\r\n              }\r\n\r\n              return { success: true, message: 'API credentials format validated' };\r\n            }\r\n          },\r\n          {\r\n            name: 'SSH Configuration',\r\n            description: 'Validate SSH tunnel configuration',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              const oracleHost = process.env.ORACLE_HOST;\r\n              const sshKeyPath = process.env.ORACLE_SSH_KEY_PATH;\r\n\r\n              if (!oracleHost) {\r\n                return { success: false, message: 'Oracle host not configured' };\r\n              }\r\n\r\n              if (!sshKeyPath || !existsSync(sshKeyPath)) {\r\n                return { success: false, message: 'SSH key not found or not configured' };\r\n              }\r\n\r\n              // Test SSH connection\r\n              try {\r\n                execSync(`ssh -i ${sshKeyPath} -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@${oracleHost} echo \"test\"`, { stdio: 'pipe' });\r\n                return { success: true, message: 'SSH tunnel configuration validated' };\r\n              } catch {\r\n                return { success: false, message: 'SSH connection test failed' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Security Validation',\r\n        description: 'Validate security configurations',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Security Hardening',\r\n            description: 'Verify security hardening measures',\r\n            critical: true,\r\n            timeout: 30000,\r\n            test: async () => {\r\n              const result = await securityHardening.validateSecurityForDeployment();\r\n              \r\n              if (result.ready) {\r\n                return { success: true, message: 'Security validation passed' };\r\n              } else {\r\n                return { \r\n                  success: false, \r\n                  message: `Security issues found: ${result.criticalIssues.join(', ')}`,\r\n                  details: { issues: result.criticalIssues }\r\n                };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'File Permissions',\r\n            description: 'Check critical file permissions',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const criticalFiles = [\r\n                { path: '.env', expectedPerms: '600' },\r\n                { path: 'keys', expectedPerms: '700' }\r\n              ];\r\n\r\n              for (const file of criticalFiles) {\r\n                if (existsSync(file.path)) {\r\n                  const stats = require('fs').statSync(file.path);\r\n                  const perms = (stats.mode & parseInt('777', 8)).toString(8);\r\n                  \r\n                  if (perms !== file.expectedPerms) {\r\n                    return { \r\n                      success: false, \r\n                      message: `Incorrect permissions for ${file.path}: ${perms} (expected ${file.expectedPerms})` \r\n                    };\r\n                  }\r\n                }\r\n              }\r\n\r\n              return { success: true, message: 'File permissions validated' };\r\n            }\r\n          },\r\n          {\r\n            name: 'Firewall Status',\r\n            description: 'Check firewall configuration',\r\n            critical: false,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              try {\r\n                const ufwStatus = execSync('sudo ufw status', { encoding: 'utf-8' });\r\n                const isActive = ufwStatus.includes('Status: active');\r\n                \r\n                if (isActive) {\r\n                  return { success: true, message: 'Firewall is active and configured' };\r\n                } else {\r\n                  return { success: false, message: 'Firewall is not active' };\r\n                }\r\n              } catch {\r\n                return { success: false, message: 'Unable to check firewall status' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Database Validation',\r\n        description: 'Validate database setup and integrity',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Database Initialization',\r\n            description: 'Verify database is properly initialized',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              try {\r\n                await databaseSetup.initialize();\r\n                return { success: true, message: 'Database initialization successful' };\r\n              } catch (error) {\r\n                return { success: false, message: `Database initialization failed: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Database Integrity',\r\n            description: 'Check database integrity',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              const isValid = await databaseSetup.validateIntegrity();\r\n              \r\n              if (isValid) {\r\n                return { success: true, message: 'Database integrity check passed' };\r\n              } else {\r\n                return { success: false, message: 'Database integrity check failed' };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Database Statistics',\r\n            description: 'Collect database statistics',\r\n            critical: false,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              try {\r\n                const stats = await databaseSetup.getStatistics();\r\n                return { \r\n                  success: true, \r\n                  message: 'Database statistics collected',\r\n                  details: stats\r\n                };\r\n              } catch (error) {\r\n                return { success: false, message: `Failed to collect database statistics: ${error.message}` };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Application Build',\r\n        description: 'Validate application build and dependencies',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Build Artifacts',\r\n            description: 'Check if application is properly built',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              if (!existsSync('dist/index.js')) {\r\n                return { success: false, message: 'Main application build artifact missing (dist/index.js)' };\r\n              }\r\n\r\n              if (existsSync('src/dashboard') && !existsSync('src/dashboard/.next')) {\r\n                return { success: false, message: 'Dashboard build artifacts missing' };\r\n              }\r\n\r\n              return { success: true, message: 'All build artifacts present' };\r\n            }\r\n          },\r\n          {\r\n            name: 'Dependencies',\r\n            description: 'Verify all dependencies are installed',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              try {\r\n                execSync('npm ls --production', { stdio: 'pipe' });\r\n                return { success: true, message: 'All production dependencies installed' };\r\n              } catch (error) {\r\n                return { success: false, message: 'Missing or incompatible dependencies detected' };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'TypeScript Compilation',\r\n            description: 'Verify TypeScript compilation',\r\n            critical: true,\r\n            timeout: 30000,\r\n            test: async () => {\r\n              try {\r\n                execSync('npx tsc --noEmit', { stdio: 'pipe' });\r\n                return { success: true, message: 'TypeScript compilation successful' };\r\n              } catch (error) {\r\n                return { success: false, message: 'TypeScript compilation errors detected' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Service Integration',\r\n        description: 'Test service integration and communication',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'PM2 Configuration',\r\n            description: 'Validate PM2 ecosystem configuration',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              if (!existsSync('ecosystem.config.js')) {\r\n                return { success: false, message: 'PM2 ecosystem configuration missing' };\r\n              }\r\n\r\n              try {\r\n                // Test PM2 configuration syntax\r\n                require(join(process.cwd(), 'ecosystem.config.js'));\r\n                return { success: true, message: 'PM2 configuration is valid' };\r\n              } catch (error) {\r\n                return { success: false, message: `PM2 configuration error: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Service Startup',\r\n            description: 'Test service startup without errors',\r\n            critical: true,\r\n            timeout: 30000,\r\n            test: async () => {\r\n              try {\r\n                // Start services in test mode\r\n                execSync('pm2 start ecosystem.config.js --env test', { stdio: 'pipe' });\r\n                \r\n                // Wait for services to start\r\n                await new Promise(resolve => setTimeout(resolve, 5000));\r\n                \r\n                // Check if services are running\r\n                const processes = execSync('pm2 jlist', { encoding: 'utf-8' });\r\n                const processData = JSON.parse(processes);\r\n                const runningProcesses = processData.filter(p => p.pm2_env.status === 'online');\r\n                \r\n                // Stop test services\r\n                execSync('pm2 stop all', { stdio: 'pipe' });\r\n                execSync('pm2 delete all', { stdio: 'pipe' });\r\n                \r\n                if (runningProcesses.length > 0) {\r\n                  return { \r\n                    success: true, \r\n                    message: `${runningProcesses.length} services started successfully`,\r\n                    details: { processes: runningProcesses.length }\r\n                  };\r\n                } else {\r\n                  return { success: false, message: 'No services started successfully' };\r\n                }\r\n              } catch (error) {\r\n                // Cleanup on error\r\n                try {\r\n                  execSync('pm2 stop all', { stdio: 'pipe' });\r\n                  execSync('pm2 delete all', { stdio: 'pipe' });\r\n                } catch {\r\n                  // Ignore cleanup errors\r\n                }\r\n                \r\n                return { success: false, message: `Service startup failed: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'API Health Check',\r\n            description: 'Test API endpoint availability',\r\n            critical: true,\r\n            timeout: 20000,\r\n            test: async () => {\r\n              try {\r\n                // Start API service temporarily\r\n                execSync('pm2 start ecosystem.config.js --only ai-crypto-trading-api', { stdio: 'pipe' });\r\n                \r\n                // Wait for service to start\r\n                await new Promise(resolve => setTimeout(resolve, 8000));\r\n                \r\n                // Test API health endpoint\r\n                const startTime = Date.now();\r\n                execSync('curl -f http://localhost:3001/api/v1/health', { stdio: 'pipe' });\r\n                const responseTime = Date.now() - startTime;\r\n                \r\n                // Stop test service\r\n                execSync('pm2 stop ai-crypto-trading-api', { stdio: 'pipe' });\r\n                execSync('pm2 delete ai-crypto-trading-api', { stdio: 'pipe' });\r\n                \r\n                return { \r\n                  success: true, \r\n                  message: `API health check passed (${responseTime}ms)`,\r\n                  details: { responseTime }\r\n                };\r\n              } catch (error) {\r\n                // Cleanup on error\r\n                try {\r\n                  execSync('pm2 stop ai-crypto-trading-api', { stdio: 'pipe' });\r\n                  execSync('pm2 delete ai-crypto-trading-api', { stdio: 'pipe' });\r\n                } catch {\r\n                  // Ignore cleanup errors\r\n                }\r\n                \r\n                return { success: false, message: `API health check failed: ${error.message}` };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Backup and Recovery',\r\n        description: 'Test backup and recovery systems',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Backup System',\r\n            description: 'Test backup creation',\r\n            critical: false,\r\n            timeout: 60000,\r\n            test: async () => {\r\n              try {\r\n                const result = await backupRecovery.performFullBackup();\r\n                \r\n                if (result.success) {\r\n                  return { \r\n                    success: true, \r\n                    message: `Backup created successfully (${this.formatBytes(result.totalSize)})`,\r\n                    details: { size: result.totalSize, duration: result.duration }\r\n                  };\r\n                } else {\r\n                  return { success: false, message: `Backup failed: ${result.error}` };\r\n                }\r\n              } catch (error) {\r\n                return { success: false, message: `Backup test failed: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Recovery Plans',\r\n            description: 'Validate recovery plan definitions',\r\n            critical: false,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const plans = backupRecovery.getRecoveryPlans();\r\n              \r\n              if (plans.length > 0) {\r\n                return { \r\n                  success: true, \r\n                  message: `${plans.length} recovery plans available`,\r\n                  details: { plans: plans.map(p => p.name) }\r\n                };\r\n              } else {\r\n                return { success: false, message: 'No recovery plans defined' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Create timeout promise\r\n   */\r\n  private createTimeoutPromise(timeout: number): Promise<never> {\r\n    return new Promise((_, reject) => {\r\n      setTimeout(() => reject(new Error('Test timeout')), timeout);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate recommendations based on validation results\r\n   */\r\n  private generateRecommendations(results: ValidationResult[]): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    const failedCritical = results.filter(r => r.status === 'FAIL' && r.critical);\r\n    const failedNonCritical = results.filter(r => r.status === 'FAIL' && !r.critical);\r\n    const warnings = results.filter(r => r.status === 'WARNING');\r\n\r\n    if (failedCritical.length > 0) {\r\n      recommendations.push('CRITICAL: Fix all critical test failures before deployment');\r\n      failedCritical.forEach(test => {\r\n        recommendations.push(`  - ${test.category}: ${test.name} - ${test.message}`);\r\n      });\r\n    }\r\n\r\n    if (failedNonCritical.length > 0) {\r\n      recommendations.push('Address non-critical test failures for optimal performance');\r\n    }\r\n\r\n    if (warnings.length > 0) {\r\n      recommendations.push('Review and address warning conditions');\r\n    }\r\n\r\n    // Performance recommendations\r\n    const slowTests = results.filter(r => r.duration > 10000);\r\n    if (slowTests.length > 0) {\r\n      recommendations.push('Some tests took longer than expected - monitor system performance');\r\n    }\r\n\r\n    // Security recommendations\r\n    const securityFailures = results.filter(r => r.category === 'Security Validation' && r.status === 'FAIL');\r\n    if (securityFailures.length > 0) {\r\n      recommendations.push('Security validation failures detected - review security configuration');\r\n    }\r\n\r\n    if (recommendations.length === 0) {\r\n      recommendations.push('All validations passed - system is ready for deployment');\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Save validation report\r\n   */\r\n  private async saveValidationReport(report: ValidationReport): Promise<void> {\r\n    const timestamp = report.timestamp.toISOString().replace(/[:.]/g, '-');\r\n    const reportPath = join(process.cwd(), 'logs', `validation-report-${timestamp}.json`);\r\n    \r\n    writeFileSync(reportPath, JSON.stringify(report, null, 2));\r\n    logger.info(`📊 Validation report saved: ${reportPath}`);\r\n  }\r\n\r\n  /**\r\n   * Log validation summary\r\n   */\r\n  private logValidationSummary(report: ValidationReport): void {\r\n    logger.info('\\n📊 VALIDATION SUMMARY');\r\n    logger.info('═'.repeat(50));\r\n    logger.info(`Environment: ${report.environment}`);\r\n    logger.info(`Duration: ${Math.round(report.duration / 1000)}s`);\r\n    logger.info(`Total Tests: ${report.summary.total}`);\r\n    logger.info(`✅ Passed: ${report.summary.passed}`);\r\n    logger.info(`❌ Failed: ${report.summary.failed}`);\r\n    logger.info(`⚠️ Warnings: ${report.summary.warnings}`);\r\n    logger.info(`⏭️ Skipped: ${report.summary.skipped}`);\r\n    logger.info(`🚨 Critical Failures: ${report.summary.criticalFailed}`);\r\n    logger.info(`🚀 Deployment Ready: ${report.deploymentReady ? 'YES' : 'NO'}`);\r\n\r\n    if (report.recommendations.length > 0) {\r\n      logger.info('\\n💡 RECOMMENDATIONS:');\r\n      report.recommendations.forEach(rec => {\r\n        logger.info(`  • ${rec}`);\r\n      });\r\n    }\r\n\r\n    if (!report.deploymentReady) {\r\n      logger.error('\\n❌ DEPLOYMENT BLOCKED - Critical issues must be resolved');\r\n    } else {\r\n      logger.info('\\n✅ VALIDATION PASSED - System ready for deployment');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get application version\r\n   */\r\n  private getVersion(): string {\r\n    try {\r\n      if (existsSync('package.json')) {\r\n        const packageJson = JSON.parse(readFileSync('package.json', 'utf-8'));\r\n        return packageJson.version || '1.0.0';\r\n      }\r\n    } catch {\r\n      // Ignore errors\r\n    }\r\n    return '1.0.0';\r\n  }\r\n\r\n  /**\r\n   * Format bytes utility\r\n   */\r\n  private formatBytes(bytes: number): string {\r\n    if (bytes === 0) return '0 Bytes';\r\n    \r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    \r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  /**\r\n   * Run specific validation suite\r\n   */\r\n  async runValidationSuite(suiteName: string): Promise<ValidationResult[]> {\r\n    const suite = this.validationSuites.find(s => s.name === suiteName);\r\n    if (!suite) {\r\n      throw new Error(`Validation suite not found: ${suiteName}`);\r\n    }\r\n\r\n    logger.info(`🧪 Running validation suite: ${suite.name}`);\r\n    const results: ValidationResult[] = [];\r\n\r\n    for (const test of suite.tests) {\r\n      const testStartTime = Date.now();\r\n\r\n      try {\r\n        const testResult = await Promise.race([\r\n          test.test(),\r\n          this.createTimeoutPromise(test.timeout)\r\n        ]);\r\n\r\n        const duration = Date.now() - testStartTime;\r\n        const status = testResult.success ? 'PASS' : 'FAIL';\r\n\r\n        results.push({\r\n          category: suite.name,\r\n          name: test.name,\r\n          status,\r\n          message: testResult.message,\r\n          details: testResult.details,\r\n          duration,\r\n          critical: test.critical\r\n        });\r\n\r\n      } catch (error) {\r\n        const duration = Date.now() - testStartTime;\r\n        \r\n        results.push({\r\n          category: suite.name,\r\n          name: test.name,\r\n          status: 'FAIL',\r\n          message: error.message === 'Test timeout' ? 'Test timed out' : `Test error: ${error.message}`,\r\n          details: { error: error.message },\r\n          duration,\r\n          critical: test.critical\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Get available validation suites\r\n   */\r\n  getValidationSuites(): ValidationSuite[] {\r\n    return this.validationSuites.map(suite => ({\r\n      ...suite,\r\n      tests: suite.tests.map(test => ({\r\n        name: test.name,\r\n        description: test.description,\r\n        critical: test.critical,\r\n        timeout: test.timeout,\r\n        test: undefined // Don't expose test functions\r\n      }))\r\n    }));\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const finalValidation = new FinalValidation();"],"mappings":"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","ignoreList":[]}