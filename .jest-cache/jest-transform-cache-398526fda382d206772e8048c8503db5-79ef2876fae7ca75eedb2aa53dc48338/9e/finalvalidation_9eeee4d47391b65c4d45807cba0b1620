955e5bce8cf616e9af53eeea6fe8b936
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - FINAL VALIDATION AND TESTING
 * =============================================================================
 *
 * This module provides comprehensive final validation and testing for the
 * AI crypto trading agent production deployment.
 */
/* istanbul ignore next */
function cov_cx0ufkpww() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\final-validation.ts";
  var hash = "2ca19735a83748de3d6e73671d51b63c4d11a158";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\final-validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 59
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "3": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "4": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "6": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "7": {
        start: {
          line: 17,
          column: 32
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "8": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 60
        }
      },
      "9": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 54
        }
      },
      "10": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "11": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 83
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 36
        }
      },
      "15": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "16": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 26
        }
      },
      "17": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "18": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 27
        }
      },
      "19": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "20": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "21": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "22": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "25": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 25
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 29
        }
      },
      "29": {
        start: {
          line: 48,
          column: 38
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "30": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 98,
          column: 17
        }
      },
      "31": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 76
        }
      },
      "32": {
        start: {
          line: 52,
          column: 39
        },
        end: {
          line: 55,
          column: 22
        }
      },
      "33": {
        start: {
          line: 56,
          column: 37
        },
        end: {
          line: 56,
          column: 63
        }
      },
      "34": {
        start: {
          line: 57,
          column: 35
        },
        end: {
          line: 57,
          column: 71
        }
      },
      "35": {
        start: {
          line: 58,
          column: 35
        },
        end: {
          line: 66,
          column: 21
        }
      },
      "36": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 41
        }
      },
      "37": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 78,
          column: 21
        }
      },
      "38": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 38
        }
      },
      "39": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 91
        }
      },
      "40": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "41": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "42": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "43": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 92
        }
      },
      "44": {
        start: {
          line: 81,
          column: 37
        },
        end: {
          line: 81,
          column: 63
        }
      },
      "45": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 82,
          column: 70
        }
      },
      "46": {
        start: {
          line: 83,
          column: 35
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "47": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 41
        }
      },
      "48": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "49": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 96,
          column: 21
        }
      },
      "50": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 43
        }
      },
      "51": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 84
        }
      },
      "52": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 101,
          column: 67
        }
      },
      "53": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 54
        }
      },
      "54": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "55": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 48
        }
      },
      "56": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 42
        }
      },
      "57": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 22
        }
      },
      "58": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 604,
          column: 10
        }
      },
      "59": {
        start: {
          line: 142,
          column: 44
        },
        end: {
          line: 142,
          column: 59
        }
      },
      "60": {
        start: {
          line: 143,
          column: 49
        },
        end: {
          line: 143,
          column: 89
        }
      },
      "61": {
        start: {
          line: 144,
          column: 28
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "62": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 102
        }
      },
      "63": {
        start: {
          line: 148,
          column: 32
        },
        end: {
          line: 148,
          column: 122
        }
      },
      "64": {
        start: {
          line: 158,
          column: 44
        },
        end: {
          line: 158,
          column: 107
        }
      },
      "65": {
        start: {
          line: 159,
          column: 45
        },
        end: {
          line: 159,
          column: 80
        }
      },
      "66": {
        start: {
          line: 160,
          column: 45
        },
        end: {
          line: 160,
          column: 66
        }
      },
      "67": {
        start: {
          line: 161,
          column: 49
        },
        end: {
          line: 161,
          column: 70
        }
      },
      "68": {
        start: {
          line: 162,
          column: 45
        },
        end: {
          line: 162,
          column: 119
        }
      },
      "69": {
        start: {
          line: 163,
          column: 50
        },
        end: {
          line: 163,
          column: 84
        }
      },
      "70": {
        start: {
          line: 164,
          column: 28
        },
        end: {
          line: 166,
          column: 29
        }
      },
      "71": {
        start: {
          line: 165,
          column: 32
        },
        end: {
          line: 165,
          column: 125
        }
      },
      "72": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "73": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 168,
          column: 139
        }
      },
      "74": {
        start: {
          line: 170,
          column: 28
        },
        end: {
          line: 172,
          column: 29
        }
      },
      "75": {
        start: {
          line: 171,
          column: 32
        },
        end: {
          line: 171,
          column: 138
        }
      },
      "76": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 177,
          column: 30
        }
      },
      "77": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "78": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 105
        }
      },
      "79": {
        start: {
          line: 188,
          column: 32
        },
        end: {
          line: 188,
          column: 108
        }
      },
      "80": {
        start: {
          line: 189,
          column: 32
        },
        end: {
          line: 189,
          column: 99
        }
      },
      "81": {
        start: {
          line: 192,
          column: 32
        },
        end: {
          line: 192,
          column: 107
        }
      },
      "82": {
        start: {
          line: 209,
          column: 43
        },
        end: {
          line: 209,
          column: 117
        }
      },
      "83": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 223,
          column: 29
        }
      },
      "84": {
        start: {
          line: 211,
          column: 32
        },
        end: {
          line: 215,
          column: 34
        }
      },
      "85": {
        start: {
          line: 218,
          column: 32
        },
        end: {
          line: 222,
          column: 34
        }
      },
      "86": {
        start: {
          line: 232,
          column: 43
        },
        end: {
          line: 232,
          column: 69
        }
      },
      "87": {
        start: {
          line: 233,
          column: 46
        },
        end: {
          line: 233,
          column: 75
        }
      },
      "88": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 236,
          column: 29
        }
      },
      "89": {
        start: {
          line: 235,
          column: 32
        },
        end: {
          line: 235,
          column: 105
        }
      },
      "90": {
        start: {
          line: 237,
          column: 28
        },
        end: {
          line: 239,
          column: 29
        }
      },
      "91": {
        start: {
          line: 238,
          column: 32
        },
        end: {
          line: 238,
          column: 108
        }
      },
      "92": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 240,
          column: 98
        }
      },
      "93": {
        start: {
          line: 249,
          column: 47
        },
        end: {
          line: 249,
          column: 70
        }
      },
      "94": {
        start: {
          line: 250,
          column: 47
        },
        end: {
          line: 250,
          column: 78
        }
      },
      "95": {
        start: {
          line: 251,
          column: 28
        },
        end: {
          line: 253,
          column: 29
        }
      },
      "96": {
        start: {
          line: 252,
          column: 32
        },
        end: {
          line: 252,
          column: 97
        }
      },
      "97": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 256,
          column: 29
        }
      },
      "98": {
        start: {
          line: 255,
          column: 32
        },
        end: {
          line: 255,
          column: 106
        }
      },
      "99": {
        start: {
          line: 258,
          column: 28
        },
        end: {
          line: 264,
          column: 29
        }
      },
      "100": {
        start: {
          line: 259,
          column: 32
        },
        end: {
          line: 259,
          column: 187
        }
      },
      "101": {
        start: {
          line: 260,
          column: 32
        },
        end: {
          line: 260,
          column: 104
        }
      },
      "102": {
        start: {
          line: 263,
          column: 32
        },
        end: {
          line: 263,
          column: 97
        }
      },
      "103": {
        start: {
          line: 280,
          column: 43
        },
        end: {
          line: 280,
          column: 119
        }
      },
      "104": {
        start: {
          line: 281,
          column: 28
        },
        end: {
          line: 290,
          column: 29
        }
      },
      "105": {
        start: {
          line: 282,
          column: 32
        },
        end: {
          line: 282,
          column: 96
        }
      },
      "106": {
        start: {
          line: 285,
          column: 32
        },
        end: {
          line: 289,
          column: 34
        }
      },
      "107": {
        start: {
          line: 299,
          column: 50
        },
        end: {
          line: 302,
          column: 29
        }
      },
      "108": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 314,
          column: 29
        }
      },
      "109": {
        start: {
          line: 304,
          column: 32
        },
        end: {
          line: 313,
          column: 33
        }
      },
      "110": {
        start: {
          line: 305,
          column: 50
        },
        end: {
          line: 305,
          column: 83
        }
      },
      "111": {
        start: {
          line: 306,
          column: 50
        },
        end: {
          line: 306,
          column: 95
        }
      },
      "112": {
        start: {
          line: 307,
          column: 36
        },
        end: {
          line: 312,
          column: 37
        }
      },
      "113": {
        start: {
          line: 308,
          column: 40
        },
        end: {
          line: 311,
          column: 42
        }
      },
      "114": {
        start: {
          line: 315,
          column: 28
        },
        end: {
          line: 315,
          column: 92
        }
      },
      "115": {
        start: {
          line: 324,
          column: 28
        },
        end: {
          line: 336,
          column: 29
        }
      },
      "116": {
        start: {
          line: 325,
          column: 50
        },
        end: {
          line: 325,
          column: 121
        }
      },
      "117": {
        start: {
          line: 326,
          column: 49
        },
        end: {
          line: 326,
          column: 85
        }
      },
      "118": {
        start: {
          line: 327,
          column: 32
        },
        end: {
          line: 332,
          column: 33
        }
      },
      "119": {
        start: {
          line: 328,
          column: 36
        },
        end: {
          line: 328,
          column: 107
        }
      },
      "120": {
        start: {
          line: 331,
          column: 36
        },
        end: {
          line: 331,
          column: 97
        }
      },
      "121": {
        start: {
          line: 335,
          column: 32
        },
        end: {
          line: 335,
          column: 102
        }
      },
      "122": {
        start: {
          line: 352,
          column: 28
        },
        end: {
          line: 358,
          column: 29
        }
      },
      "123": {
        start: {
          line: 353,
          column: 32
        },
        end: {
          line: 353,
          column: 82
        }
      },
      "124": {
        start: {
          line: 354,
          column: 32
        },
        end: {
          line: 354,
          column: 104
        }
      },
      "125": {
        start: {
          line: 357,
          column: 32
        },
        end: {
          line: 357,
          column: 119
        }
      },
      "126": {
        start: {
          line: 367,
          column: 44
        },
        end: {
          line: 367,
          column: 100
        }
      },
      "127": {
        start: {
          line: 368,
          column: 28
        },
        end: {
          line: 373,
          column: 29
        }
      },
      "128": {
        start: {
          line: 369,
          column: 32
        },
        end: {
          line: 369,
          column: 101
        }
      },
      "129": {
        start: {
          line: 372,
          column: 32
        },
        end: {
          line: 372,
          column: 102
        }
      },
      "130": {
        start: {
          line: 382,
          column: 28
        },
        end: {
          line: 392,
          column: 29
        }
      },
      "131": {
        start: {
          line: 383,
          column: 46
        },
        end: {
          line: 383,
          column: 98
        }
      },
      "132": {
        start: {
          line: 384,
          column: 32
        },
        end: {
          line: 388,
          column: 34
        }
      },
      "133": {
        start: {
          line: 391,
          column: 32
        },
        end: {
          line: 391,
          column: 126
        }
      },
      "134": {
        start: {
          line: 408,
          column: 28
        },
        end: {
          line: 410,
          column: 29
        }
      },
      "135": {
        start: {
          line: 409,
          column: 32
        },
        end: {
          line: 409,
          column: 126
        }
      },
      "136": {
        start: {
          line: 411,
          column: 28
        },
        end: {
          line: 413,
          column: 29
        }
      },
      "137": {
        start: {
          line: 412,
          column: 32
        },
        end: {
          line: 412,
          column: 104
        }
      },
      "138": {
        start: {
          line: 414,
          column: 28
        },
        end: {
          line: 414,
          column: 93
        }
      },
      "139": {
        start: {
          line: 423,
          column: 28
        },
        end: {
          line: 429,
          column: 29
        }
      },
      "140": {
        start: {
          line: 424,
          column: 32
        },
        end: {
          line: 424,
          column: 104
        }
      },
      "141": {
        start: {
          line: 425,
          column: 32
        },
        end: {
          line: 425,
          column: 107
        }
      },
      "142": {
        start: {
          line: 428,
          column: 32
        },
        end: {
          line: 428,
          column: 116
        }
      },
      "143": {
        start: {
          line: 438,
          column: 28
        },
        end: {
          line: 444,
          column: 29
        }
      },
      "144": {
        start: {
          line: 439,
          column: 32
        },
        end: {
          line: 439,
          column: 101
        }
      },
      "145": {
        start: {
          line: 440,
          column: 32
        },
        end: {
          line: 440,
          column: 103
        }
      },
      "146": {
        start: {
          line: 443,
          column: 32
        },
        end: {
          line: 443,
          column: 109
        }
      },
      "147": {
        start: {
          line: 460,
          column: 28
        },
        end: {
          line: 462,
          column: 29
        }
      },
      "148": {
        start: {
          line: 461,
          column: 32
        },
        end: {
          line: 461,
          column: 106
        }
      },
      "149": {
        start: {
          line: 463,
          column: 28
        },
        end: {
          line: 470,
          column: 29
        }
      },
      "150": {
        start: {
          line: 465,
          column: 32
        },
        end: {
          line: 465,
          column: 96
        }
      },
      "151": {
        start: {
          line: 466,
          column: 32
        },
        end: {
          line: 466,
          column: 96
        }
      },
      "152": {
        start: {
          line: 469,
          column: 32
        },
        end: {
          line: 469,
          column: 112
        }
      },
      "153": {
        start: {
          line: 479,
          column: 28
        },
        end: {
          line: 512,
          column: 29
        }
      },
      "154": {
        start: {
          line: 481,
          column: 32
        },
        end: {
          line: 481,
          column: 125
        }
      },
      "155": {
        start: {
          line: 483,
          column: 32
        },
        end: {
          line: 483,
          column: 88
        }
      },
      "156": {
        start: {
          line: 483,
          column: 61
        },
        end: {
          line: 483,
          column: 86
        }
      },
      "157": {
        start: {
          line: 485,
          column: 50
        },
        end: {
          line: 485,
          column: 115
        }
      },
      "158": {
        start: {
          line: 486,
          column: 52
        },
        end: {
          line: 486,
          column: 73
        }
      },
      "159": {
        start: {
          line: 487,
          column: 57
        },
        end: {
          line: 487,
          column: 111
        }
      },
      "160": {
        start: {
          line: 487,
          column: 81
        },
        end: {
          line: 487,
          column: 110
        }
      },
      "161": {
        start: {
          line: 489,
          column: 32
        },
        end: {
          line: 489,
          column: 97
        }
      },
      "162": {
        start: {
          line: 490,
          column: 32
        },
        end: {
          line: 490,
          column: 99
        }
      },
      "163": {
        start: {
          line: 491,
          column: 32
        },
        end: {
          line: 500,
          column: 33
        }
      },
      "164": {
        start: {
          line: 492,
          column: 36
        },
        end: {
          line: 496,
          column: 38
        }
      },
      "165": {
        start: {
          line: 499,
          column: 36
        },
        end: {
          line: 499,
          column: 107
        }
      },
      "166": {
        start: {
          line: 504,
          column: 32
        },
        end: {
          line: 510,
          column: 33
        }
      },
      "167": {
        start: {
          line: 505,
          column: 36
        },
        end: {
          line: 505,
          column: 101
        }
      },
      "168": {
        start: {
          line: 506,
          column: 36
        },
        end: {
          line: 506,
          column: 103
        }
      },
      "169": {
        start: {
          line: 511,
          column: 32
        },
        end: {
          line: 511,
          column: 111
        }
      },
      "170": {
        start: {
          line: 521,
          column: 28
        },
        end: {
          line: 549,
          column: 29
        }
      },
      "171": {
        start: {
          line: 523,
          column: 32
        },
        end: {
          line: 523,
          column: 143
        }
      },
      "172": {
        start: {
          line: 525,
          column: 32
        },
        end: {
          line: 525,
          column: 88
        }
      },
      "173": {
        start: {
          line: 525,
          column: 61
        },
        end: {
          line: 525,
          column: 86
        }
      },
      "174": {
        start: {
          line: 527,
          column: 50
        },
        end: {
          line: 527,
          column: 60
        }
      },
      "175": {
        start: {
          line: 528,
          column: 32
        },
        end: {
          line: 528,
          column: 128
        }
      },
      "176": {
        start: {
          line: 529,
          column: 53
        },
        end: {
          line: 529,
          column: 75
        }
      },
      "177": {
        start: {
          line: 531,
          column: 32
        },
        end: {
          line: 531,
          column: 115
        }
      },
      "178": {
        start: {
          line: 532,
          column: 32
        },
        end: {
          line: 532,
          column: 117
        }
      },
      "179": {
        start: {
          line: 533,
          column: 32
        },
        end: {
          line: 537,
          column: 34
        }
      },
      "180": {
        start: {
          line: 541,
          column: 32
        },
        end: {
          line: 547,
          column: 33
        }
      },
      "181": {
        start: {
          line: 542,
          column: 36
        },
        end: {
          line: 542,
          column: 119
        }
      },
      "182": {
        start: {
          line: 543,
          column: 36
        },
        end: {
          line: 543,
          column: 121
        }
      },
      "183": {
        start: {
          line: 548,
          column: 32
        },
        end: {
          line: 548,
          column: 112
        }
      },
      "184": {
        start: {
          line: 565,
          column: 28
        },
        end: {
          line: 580,
          column: 29
        }
      },
      "185": {
        start: {
          line: 566,
          column: 47
        },
        end: {
          line: 566,
          column: 105
        }
      },
      "186": {
        start: {
          line: 567,
          column: 32
        },
        end: {
          line: 576,
          column: 33
        }
      },
      "187": {
        start: {
          line: 568,
          column: 36
        },
        end: {
          line: 572,
          column: 38
        }
      },
      "188": {
        start: {
          line: 575,
          column: 36
        },
        end: {
          line: 575,
          column: 105
        }
      },
      "189": {
        start: {
          line: 579,
          column: 32
        },
        end: {
          line: 579,
          column: 107
        }
      },
      "190": {
        start: {
          line: 589,
          column: 42
        },
        end: {
          line: 589,
          column: 93
        }
      },
      "191": {
        start: {
          line: 590,
          column: 28
        },
        end: {
          line: 599,
          column: 29
        }
      },
      "192": {
        start: {
          line: 591,
          column: 32
        },
        end: {
          line: 595,
          column: 34
        }
      },
      "193": {
        start: {
          line: 594,
          column: 69
        },
        end: {
          line: 594,
          column: 75
        }
      },
      "194": {
        start: {
          line: 598,
          column: 32
        },
        end: {
          line: 598,
          column: 96
        }
      },
      "195": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 612,
          column: 11
        }
      },
      "196": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 611,
          column: 73
        }
      },
      "197": {
        start: {
          line: 611,
          column: 29
        },
        end: {
          line: 611,
          column: 62
        }
      },
      "198": {
        start: {
          line: 618,
          column: 32
        },
        end: {
          line: 618,
          column: 34
        }
      },
      "199": {
        start: {
          line: 619,
          column: 31
        },
        end: {
          line: 619,
          column: 85
        }
      },
      "200": {
        start: {
          line: 619,
          column: 51
        },
        end: {
          line: 619,
          column: 84
        }
      },
      "201": {
        start: {
          line: 620,
          column: 34
        },
        end: {
          line: 620,
          column: 89
        }
      },
      "202": {
        start: {
          line: 620,
          column: 54
        },
        end: {
          line: 620,
          column: 88
        }
      },
      "203": {
        start: {
          line: 621,
          column: 25
        },
        end: {
          line: 621,
          column: 68
        }
      },
      "204": {
        start: {
          line: 621,
          column: 45
        },
        end: {
          line: 621,
          column: 67
        }
      },
      "205": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 627,
          column: 9
        }
      },
      "206": {
        start: {
          line: 623,
          column: 12
        },
        end: {
          line: 623,
          column: 95
        }
      },
      "207": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 626,
          column: 15
        }
      },
      "208": {
        start: {
          line: 625,
          column: 16
        },
        end: {
          line: 625,
          column: 93
        }
      },
      "209": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 630,
          column: 9
        }
      },
      "210": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 95
        }
      },
      "211": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 633,
          column: 9
        }
      },
      "212": {
        start: {
          line: 632,
          column: 12
        },
        end: {
          line: 632,
          column: 74
        }
      },
      "213": {
        start: {
          line: 635,
          column: 26
        },
        end: {
          line: 635,
          column: 65
        }
      },
      "214": {
        start: {
          line: 635,
          column: 46
        },
        end: {
          line: 635,
          column: 64
        }
      },
      "215": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 638,
          column: 9
        }
      },
      "216": {
        start: {
          line: 637,
          column: 12
        },
        end: {
          line: 637,
          column: 102
        }
      },
      "217": {
        start: {
          line: 640,
          column: 33
        },
        end: {
          line: 640,
          column: 113
        }
      },
      "218": {
        start: {
          line: 640,
          column: 53
        },
        end: {
          line: 640,
          column: 112
        }
      },
      "219": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 643,
          column: 9
        }
      },
      "220": {
        start: {
          line: 642,
          column: 12
        },
        end: {
          line: 642,
          column: 106
        }
      },
      "221": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 646,
          column: 9
        }
      },
      "222": {
        start: {
          line: 645,
          column: 12
        },
        end: {
          line: 645,
          column: 92
        }
      },
      "223": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 647,
          column: 31
        }
      },
      "224": {
        start: {
          line: 653,
          column: 26
        },
        end: {
          line: 653,
          column: 78
        }
      },
      "225": {
        start: {
          line: 654,
          column: 27
        },
        end: {
          line: 654,
          column: 105
        }
      },
      "226": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 655,
          column: 77
        }
      },
      "227": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 656,
          column: 74
        }
      },
      "228": {
        start: {
          line: 662,
          column: 8
        },
        end: {
          line: 662,
          column: 56
        }
      },
      "229": {
        start: {
          line: 663,
          column: 8
        },
        end: {
          line: 663,
          column: 45
        }
      },
      "230": {
        start: {
          line: 664,
          column: 8
        },
        end: {
          line: 664,
          column: 67
        }
      },
      "231": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 81
        }
      },
      "232": {
        start: {
          line: 666,
          column: 8
        },
        end: {
          line: 666,
          column: 69
        }
      },
      "233": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 667,
          column: 67
        }
      },
      "234": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 668,
          column: 67
        }
      },
      "235": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 669,
          column: 72
        }
      },
      "236": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 70
        }
      },
      "237": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 87
        }
      },
      "238": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 672,
          column: 94
        }
      },
      "239": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 678,
          column: 9
        }
      },
      "240": {
        start: {
          line: 674,
          column: 12
        },
        end: {
          line: 674,
          column: 58
        }
      },
      "241": {
        start: {
          line: 675,
          column: 12
        },
        end: {
          line: 677,
          column: 15
        }
      },
      "242": {
        start: {
          line: 676,
          column: 16
        },
        end: {
          line: 676,
          column: 51
        }
      },
      "243": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 684,
          column: 9
        }
      },
      "244": {
        start: {
          line: 680,
          column: 12
        },
        end: {
          line: 680,
          column: 95
        }
      },
      "245": {
        start: {
          line: 683,
          column: 12
        },
        end: {
          line: 683,
          column: 88
        }
      },
      "246": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 698,
          column: 9
        }
      },
      "247": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 694,
          column: 13
        }
      },
      "248": {
        start: {
          line: 692,
          column: 36
        },
        end: {
          line: 692,
          column: 95
        }
      },
      "249": {
        start: {
          line: 693,
          column: 16
        },
        end: {
          line: 693,
          column: 54
        }
      },
      "250": {
        start: {
          line: 699,
          column: 8
        },
        end: {
          line: 699,
          column: 23
        }
      },
      "251": {
        start: {
          line: 705,
          column: 8
        },
        end: {
          line: 706,
          column: 29
        }
      },
      "252": {
        start: {
          line: 706,
          column: 12
        },
        end: {
          line: 706,
          column: 29
        }
      },
      "253": {
        start: {
          line: 707,
          column: 18
        },
        end: {
          line: 707,
          column: 22
        }
      },
      "254": {
        start: {
          line: 708,
          column: 22
        },
        end: {
          line: 708,
          column: 49
        }
      },
      "255": {
        start: {
          line: 709,
          column: 18
        },
        end: {
          line: 709,
          column: 59
        }
      },
      "256": {
        start: {
          line: 710,
          column: 8
        },
        end: {
          line: 710,
          column: 80
        }
      },
      "257": {
        start: {
          line: 716,
          column: 22
        },
        end: {
          line: 716,
          column: 75
        }
      },
      "258": {
        start: {
          line: 716,
          column: 54
        },
        end: {
          line: 716,
          column: 74
        }
      },
      "259": {
        start: {
          line: 717,
          column: 8
        },
        end: {
          line: 719,
          column: 9
        }
      },
      "260": {
        start: {
          line: 718,
          column: 12
        },
        end: {
          line: 718,
          column: 72
        }
      },
      "261": {
        start: {
          line: 720,
          column: 8
        },
        end: {
          line: 720,
          column: 75
        }
      },
      "262": {
        start: {
          line: 721,
          column: 24
        },
        end: {
          line: 721,
          column: 26
        }
      },
      "263": {
        start: {
          line: 722,
          column: 8
        },
        end: {
          line: 753,
          column: 9
        }
      },
      "264": {
        start: {
          line: 723,
          column: 34
        },
        end: {
          line: 723,
          column: 44
        }
      },
      "265": {
        start: {
          line: 724,
          column: 12
        },
        end: {
          line: 752,
          column: 13
        }
      },
      "266": {
        start: {
          line: 725,
          column: 35
        },
        end: {
          line: 728,
          column: 18
        }
      },
      "267": {
        start: {
          line: 729,
          column: 33
        },
        end: {
          line: 729,
          column: 59
        }
      },
      "268": {
        start: {
          line: 730,
          column: 31
        },
        end: {
          line: 730,
          column: 67
        }
      },
      "269": {
        start: {
          line: 731,
          column: 16
        },
        end: {
          line: 739,
          column: 19
        }
      },
      "270": {
        start: {
          line: 742,
          column: 33
        },
        end: {
          line: 742,
          column: 59
        }
      },
      "271": {
        start: {
          line: 743,
          column: 16
        },
        end: {
          line: 751,
          column: 19
        }
      },
      "272": {
        start: {
          line: 754,
          column: 8
        },
        end: {
          line: 754,
          column: 23
        }
      },
      "273": {
        start: {
          line: 760,
          column: 8
        },
        end: {
          line: 769,
          column: 12
        }
      },
      "274": {
        start: {
          line: 760,
          column: 51
        },
        end: {
          line: 769,
          column: 9
        }
      },
      "275": {
        start: {
          line: 762,
          column: 44
        },
        end: {
          line: 768,
          column: 13
        }
      },
      "276": {
        start: {
          line: 772,
          column: 0
        },
        end: {
          line: 772,
          column: 42
        }
      },
      "277": {
        start: {
          line: 774,
          column: 0
        },
        end: {
          line: 774,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 605,
            column: 5
          }
        },
        line: 129
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 141,
            column: 30
          },
          end: {
            line: 141,
            column: 31
          }
        },
        loc: {
          start: {
            line: 141,
            column: 42
          },
          end: {
            line: 150,
            column: 25
          }
        },
        line: 141
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 157,
            column: 30
          },
          end: {
            line: 157,
            column: 31
          }
        },
        loc: {
          start: {
            line: 157,
            column: 42
          },
          end: {
            line: 178,
            column: 25
          }
        },
        line: 157
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 185,
            column: 30
          },
          end: {
            line: 185,
            column: 31
          }
        },
        loc: {
          start: {
            line: 185,
            column: 42
          },
          end: {
            line: 194,
            column: 25
          }
        },
        line: 185
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 208,
            column: 30
          },
          end: {
            line: 208,
            column: 31
          }
        },
        loc: {
          start: {
            line: 208,
            column: 42
          },
          end: {
            line: 224,
            column: 25
          }
        },
        line: 208
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 231,
            column: 31
          }
        },
        loc: {
          start: {
            line: 231,
            column: 42
          },
          end: {
            line: 241,
            column: 25
          }
        },
        line: 231
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 248,
            column: 30
          },
          end: {
            line: 248,
            column: 31
          }
        },
        loc: {
          start: {
            line: 248,
            column: 42
          },
          end: {
            line: 265,
            column: 25
          }
        },
        line: 248
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 279,
            column: 30
          },
          end: {
            line: 279,
            column: 31
          }
        },
        loc: {
          start: {
            line: 279,
            column: 42
          },
          end: {
            line: 291,
            column: 25
          }
        },
        line: 279
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 298,
            column: 30
          },
          end: {
            line: 298,
            column: 31
          }
        },
        loc: {
          start: {
            line: 298,
            column: 42
          },
          end: {
            line: 316,
            column: 25
          }
        },
        line: 298
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 323,
            column: 30
          },
          end: {
            line: 323,
            column: 31
          }
        },
        loc: {
          start: {
            line: 323,
            column: 42
          },
          end: {
            line: 337,
            column: 25
          }
        },
        line: 323
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 351,
            column: 30
          },
          end: {
            line: 351,
            column: 31
          }
        },
        loc: {
          start: {
            line: 351,
            column: 42
          },
          end: {
            line: 359,
            column: 25
          }
        },
        line: 351
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 366,
            column: 30
          },
          end: {
            line: 366,
            column: 31
          }
        },
        loc: {
          start: {
            line: 366,
            column: 42
          },
          end: {
            line: 374,
            column: 25
          }
        },
        line: 366
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 381,
            column: 30
          },
          end: {
            line: 381,
            column: 31
          }
        },
        loc: {
          start: {
            line: 381,
            column: 42
          },
          end: {
            line: 393,
            column: 25
          }
        },
        line: 381
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 407,
            column: 30
          },
          end: {
            line: 407,
            column: 31
          }
        },
        loc: {
          start: {
            line: 407,
            column: 42
          },
          end: {
            line: 415,
            column: 25
          }
        },
        line: 407
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 422,
            column: 30
          },
          end: {
            line: 422,
            column: 31
          }
        },
        loc: {
          start: {
            line: 422,
            column: 42
          },
          end: {
            line: 430,
            column: 25
          }
        },
        line: 422
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 437,
            column: 30
          },
          end: {
            line: 437,
            column: 31
          }
        },
        loc: {
          start: {
            line: 437,
            column: 42
          },
          end: {
            line: 445,
            column: 25
          }
        },
        line: 437
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 459,
            column: 30
          },
          end: {
            line: 459,
            column: 31
          }
        },
        loc: {
          start: {
            line: 459,
            column: 42
          },
          end: {
            line: 471,
            column: 25
          }
        },
        line: 459
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 478,
            column: 30
          },
          end: {
            line: 478,
            column: 31
          }
        },
        loc: {
          start: {
            line: 478,
            column: 42
          },
          end: {
            line: 513,
            column: 25
          }
        },
        line: 478
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 483,
            column: 50
          },
          end: {
            line: 483,
            column: 51
          }
        },
        loc: {
          start: {
            line: 483,
            column: 61
          },
          end: {
            line: 483,
            column: 86
          }
        },
        line: 483
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 487,
            column: 76
          },
          end: {
            line: 487,
            column: 77
          }
        },
        loc: {
          start: {
            line: 487,
            column: 81
          },
          end: {
            line: 487,
            column: 110
          }
        },
        line: 487
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 520,
            column: 30
          },
          end: {
            line: 520,
            column: 31
          }
        },
        loc: {
          start: {
            line: 520,
            column: 42
          },
          end: {
            line: 550,
            column: 25
          }
        },
        line: 520
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 525,
            column: 50
          },
          end: {
            line: 525,
            column: 51
          }
        },
        loc: {
          start: {
            line: 525,
            column: 61
          },
          end: {
            line: 525,
            column: 86
          }
        },
        line: 525
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 564,
            column: 30
          },
          end: {
            line: 564,
            column: 31
          }
        },
        loc: {
          start: {
            line: 564,
            column: 42
          },
          end: {
            line: 581,
            column: 25
          }
        },
        line: 564
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 588,
            column: 30
          },
          end: {
            line: 588,
            column: 31
          }
        },
        loc: {
          start: {
            line: 588,
            column: 42
          },
          end: {
            line: 600,
            column: 25
          }
        },
        line: 588
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 594,
            column: 64
          },
          end: {
            line: 594,
            column: 65
          }
        },
        loc: {
          start: {
            line: 594,
            column: 69
          },
          end: {
            line: 594,
            column: 75
          }
        },
        line: 594
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 609,
            column: 4
          },
          end: {
            line: 609,
            column: 5
          }
        },
        loc: {
          start: {
            line: 609,
            column: 34
          },
          end: {
            line: 613,
            column: 5
          }
        },
        line: 609
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 610,
            column: 27
          },
          end: {
            line: 610,
            column: 28
          }
        },
        loc: {
          start: {
            line: 610,
            column: 42
          },
          end: {
            line: 612,
            column: 9
          }
        },
        line: 610
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 611,
            column: 23
          },
          end: {
            line: 611,
            column: 24
          }
        },
        loc: {
          start: {
            line: 611,
            column: 29
          },
          end: {
            line: 611,
            column: 62
          }
        },
        line: 611
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 617,
            column: 4
          },
          end: {
            line: 617,
            column: 5
          }
        },
        loc: {
          start: {
            line: 617,
            column: 37
          },
          end: {
            line: 648,
            column: 5
          }
        },
        line: 617
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 619,
            column: 46
          },
          end: {
            line: 619,
            column: 47
          }
        },
        loc: {
          start: {
            line: 619,
            column: 51
          },
          end: {
            line: 619,
            column: 84
          }
        },
        line: 619
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 620,
            column: 49
          },
          end: {
            line: 620,
            column: 50
          }
        },
        loc: {
          start: {
            line: 620,
            column: 54
          },
          end: {
            line: 620,
            column: 88
          }
        },
        line: 620
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 621,
            column: 40
          },
          end: {
            line: 621,
            column: 41
          }
        },
        loc: {
          start: {
            line: 621,
            column: 45
          },
          end: {
            line: 621,
            column: 67
          }
        },
        line: 621
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 624,
            column: 35
          },
          end: {
            line: 624,
            column: 36
          }
        },
        loc: {
          start: {
            line: 624,
            column: 43
          },
          end: {
            line: 626,
            column: 13
          }
        },
        line: 624
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 635,
            column: 41
          },
          end: {
            line: 635,
            column: 42
          }
        },
        loc: {
          start: {
            line: 635,
            column: 46
          },
          end: {
            line: 635,
            column: 64
          }
        },
        line: 635
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 640,
            column: 48
          },
          end: {
            line: 640,
            column: 49
          }
        },
        loc: {
          start: {
            line: 640,
            column: 53
          },
          end: {
            line: 640,
            column: 112
          }
        },
        line: 640
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 652,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        },
        loc: {
          start: {
            line: 652,
            column: 39
          },
          end: {
            line: 657,
            column: 5
          }
        },
        line: 652
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 661,
            column: 4
          },
          end: {
            line: 661,
            column: 5
          }
        },
        loc: {
          start: {
            line: 661,
            column: 33
          },
          end: {
            line: 685,
            column: 5
          }
        },
        line: 661
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 675,
            column: 43
          },
          end: {
            line: 675,
            column: 44
          }
        },
        loc: {
          start: {
            line: 675,
            column: 50
          },
          end: {
            line: 677,
            column: 13
          }
        },
        line: 675
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 689,
            column: 4
          },
          end: {
            line: 689,
            column: 5
          }
        },
        loc: {
          start: {
            line: 689,
            column: 17
          },
          end: {
            line: 700,
            column: 5
          }
        },
        line: 689
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 704,
            column: 4
          },
          end: {
            line: 704,
            column: 5
          }
        },
        loc: {
          start: {
            line: 704,
            column: 23
          },
          end: {
            line: 711,
            column: 5
          }
        },
        line: 704
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 715,
            column: 4
          },
          end: {
            line: 715,
            column: 5
          }
        },
        loc: {
          start: {
            line: 715,
            column: 40
          },
          end: {
            line: 755,
            column: 5
          }
        },
        line: 715
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 716,
            column: 49
          },
          end: {
            line: 716,
            column: 50
          }
        },
        loc: {
          start: {
            line: 716,
            column: 54
          },
          end: {
            line: 716,
            column: 74
          }
        },
        line: 716
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 759,
            column: 4
          },
          end: {
            line: 759,
            column: 5
          }
        },
        loc: {
          start: {
            line: 759,
            column: 26
          },
          end: {
            line: 770,
            column: 5
          }
        },
        line: 759
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 760,
            column: 41
          },
          end: {
            line: 760,
            column: 42
          }
        },
        loc: {
          start: {
            line: 760,
            column: 51
          },
          end: {
            line: 769,
            column: 9
          }
        },
        line: 760
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 762,
            column: 35
          },
          end: {
            line: 762,
            column: 36
          }
        },
        loc: {
          start: {
            line: 762,
            column: 44
          },
          end: {
            line: 768,
            column: 13
          }
        },
        line: 762
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 35
          },
          end: {
            line: 57,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 56
          },
          end: {
            line: 57,
            column: 62
          }
        }, {
          start: {
            line: 57,
            column: 65
          },
          end: {
            line: 57,
            column: 71
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 78,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 78,
            column: 21
          }
        }, {
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 78,
            column: 21
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 76,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 76,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 87,
            column: 33
          },
          end: {
            line: 87,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 45
          },
          end: {
            line: 87,
            column: 61
          }
        }, {
          start: {
            line: 87,
            column: 64
          },
          end: {
            line: 87,
            column: 94
          }
        }],
        line: 87
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 96,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 96,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 105,
            column: 25
          },
          end: {
            line: 105,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 25
          },
          end: {
            line: 105,
            column: 45
          }
        }, {
          start: {
            line: 105,
            column: 49
          },
          end: {
            line: 105,
            column: 62
          }
        }],
        line: 105
      },
      "7": {
        loc: {
          start: {
            line: 144,
            column: 28
          },
          end: {
            line: 149,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 28
          },
          end: {
            line: 149,
            column: 29
          }
        }, {
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 149,
            column: 29
          }
        }],
        line: 144
      },
      "8": {
        loc: {
          start: {
            line: 164,
            column: 28
          },
          end: {
            line: 166,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 28
          },
          end: {
            line: 166,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "9": {
        loc: {
          start: {
            line: 167,
            column: 28
          },
          end: {
            line: 169,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 28
          },
          end: {
            line: 169,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "10": {
        loc: {
          start: {
            line: 170,
            column: 28
          },
          end: {
            line: 172,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 28
          },
          end: {
            line: 172,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "11": {
        loc: {
          start: {
            line: 210,
            column: 28
          },
          end: {
            line: 223,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 28
          },
          end: {
            line: 223,
            column: 29
          }
        }, {
          start: {
            line: 217,
            column: 33
          },
          end: {
            line: 223,
            column: 29
          }
        }],
        line: 210
      },
      "12": {
        loc: {
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 236,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 236,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "13": {
        loc: {
          start: {
            line: 234,
            column: 32
          },
          end: {
            line: 234,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 32
          },
          end: {
            line: 234,
            column: 39
          }
        }, {
          start: {
            line: 234,
            column: 43
          },
          end: {
            line: 234,
            column: 61
          }
        }],
        line: 234
      },
      "14": {
        loc: {
          start: {
            line: 237,
            column: 28
          },
          end: {
            line: 239,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 28
          },
          end: {
            line: 239,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "15": {
        loc: {
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 42
          }
        }, {
          start: {
            line: 237,
            column: 46
          },
          end: {
            line: 237,
            column: 67
          }
        }],
        line: 237
      },
      "16": {
        loc: {
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 253,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 253,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "17": {
        loc: {
          start: {
            line: 254,
            column: 28
          },
          end: {
            line: 256,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 28
          },
          end: {
            line: 256,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "18": {
        loc: {
          start: {
            line: 254,
            column: 32
          },
          end: {
            line: 254,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 32
          },
          end: {
            line: 254,
            column: 43
          }
        }, {
          start: {
            line: 254,
            column: 47
          },
          end: {
            line: 254,
            column: 80
          }
        }],
        line: 254
      },
      "19": {
        loc: {
          start: {
            line: 281,
            column: 28
          },
          end: {
            line: 290,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 28
          },
          end: {
            line: 290,
            column: 29
          }
        }, {
          start: {
            line: 284,
            column: 33
          },
          end: {
            line: 290,
            column: 29
          }
        }],
        line: 281
      },
      "20": {
        loc: {
          start: {
            line: 304,
            column: 32
          },
          end: {
            line: 313,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 32
          },
          end: {
            line: 313,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "21": {
        loc: {
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 312,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 312,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "22": {
        loc: {
          start: {
            line: 327,
            column: 32
          },
          end: {
            line: 332,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 32
          },
          end: {
            line: 332,
            column: 33
          }
        }, {
          start: {
            line: 330,
            column: 37
          },
          end: {
            line: 332,
            column: 33
          }
        }],
        line: 327
      },
      "23": {
        loc: {
          start: {
            line: 368,
            column: 28
          },
          end: {
            line: 373,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 28
          },
          end: {
            line: 373,
            column: 29
          }
        }, {
          start: {
            line: 371,
            column: 33
          },
          end: {
            line: 373,
            column: 29
          }
        }],
        line: 368
      },
      "24": {
        loc: {
          start: {
            line: 408,
            column: 28
          },
          end: {
            line: 410,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 28
          },
          end: {
            line: 410,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "25": {
        loc: {
          start: {
            line: 411,
            column: 28
          },
          end: {
            line: 413,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 28
          },
          end: {
            line: 413,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "26": {
        loc: {
          start: {
            line: 411,
            column: 32
          },
          end: {
            line: 411,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 32
          },
          end: {
            line: 411,
            column: 69
          }
        }, {
          start: {
            line: 411,
            column: 73
          },
          end: {
            line: 411,
            column: 117
          }
        }],
        line: 411
      },
      "27": {
        loc: {
          start: {
            line: 460,
            column: 28
          },
          end: {
            line: 462,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 28
          },
          end: {
            line: 462,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "28": {
        loc: {
          start: {
            line: 491,
            column: 32
          },
          end: {
            line: 500,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 32
          },
          end: {
            line: 500,
            column: 33
          }
        }, {
          start: {
            line: 498,
            column: 37
          },
          end: {
            line: 500,
            column: 33
          }
        }],
        line: 491
      },
      "29": {
        loc: {
          start: {
            line: 567,
            column: 32
          },
          end: {
            line: 576,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 567,
            column: 32
          },
          end: {
            line: 576,
            column: 33
          }
        }, {
          start: {
            line: 574,
            column: 37
          },
          end: {
            line: 576,
            column: 33
          }
        }],
        line: 567
      },
      "30": {
        loc: {
          start: {
            line: 590,
            column: 28
          },
          end: {
            line: 599,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 590,
            column: 28
          },
          end: {
            line: 599,
            column: 29
          }
        }, {
          start: {
            line: 597,
            column: 33
          },
          end: {
            line: 599,
            column: 29
          }
        }],
        line: 590
      },
      "31": {
        loc: {
          start: {
            line: 619,
            column: 51
          },
          end: {
            line: 619,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 619,
            column: 51
          },
          end: {
            line: 619,
            column: 70
          }
        }, {
          start: {
            line: 619,
            column: 74
          },
          end: {
            line: 619,
            column: 84
          }
        }],
        line: 619
      },
      "32": {
        loc: {
          start: {
            line: 620,
            column: 54
          },
          end: {
            line: 620,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 620,
            column: 54
          },
          end: {
            line: 620,
            column: 73
          }
        }, {
          start: {
            line: 620,
            column: 77
          },
          end: {
            line: 620,
            column: 88
          }
        }],
        line: 620
      },
      "33": {
        loc: {
          start: {
            line: 622,
            column: 8
          },
          end: {
            line: 627,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 622,
            column: 8
          },
          end: {
            line: 627,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 622
      },
      "34": {
        loc: {
          start: {
            line: 628,
            column: 8
          },
          end: {
            line: 630,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 628,
            column: 8
          },
          end: {
            line: 630,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 628
      },
      "35": {
        loc: {
          start: {
            line: 631,
            column: 8
          },
          end: {
            line: 633,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 8
          },
          end: {
            line: 633,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "36": {
        loc: {
          start: {
            line: 636,
            column: 8
          },
          end: {
            line: 638,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 636,
            column: 8
          },
          end: {
            line: 638,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 636
      },
      "37": {
        loc: {
          start: {
            line: 640,
            column: 53
          },
          end: {
            line: 640,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 640,
            column: 53
          },
          end: {
            line: 640,
            column: 89
          }
        }, {
          start: {
            line: 640,
            column: 93
          },
          end: {
            line: 640,
            column: 112
          }
        }],
        line: 640
      },
      "38": {
        loc: {
          start: {
            line: 641,
            column: 8
          },
          end: {
            line: 643,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 641,
            column: 8
          },
          end: {
            line: 643,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 641
      },
      "39": {
        loc: {
          start: {
            line: 644,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 644,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 644
      },
      "40": {
        loc: {
          start: {
            line: 672,
            column: 53
          },
          end: {
            line: 672,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 672,
            column: 78
          },
          end: {
            line: 672,
            column: 83
          }
        }, {
          start: {
            line: 672,
            column: 86
          },
          end: {
            line: 672,
            column: 90
          }
        }],
        line: 672
      },
      "41": {
        loc: {
          start: {
            line: 673,
            column: 8
          },
          end: {
            line: 678,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 673,
            column: 8
          },
          end: {
            line: 678,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 673
      },
      "42": {
        loc: {
          start: {
            line: 679,
            column: 8
          },
          end: {
            line: 684,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 679,
            column: 8
          },
          end: {
            line: 684,
            column: 9
          }
        }, {
          start: {
            line: 682,
            column: 13
          },
          end: {
            line: 684,
            column: 9
          }
        }],
        line: 679
      },
      "43": {
        loc: {
          start: {
            line: 691,
            column: 12
          },
          end: {
            line: 694,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 691,
            column: 12
          },
          end: {
            line: 694,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 691
      },
      "44": {
        loc: {
          start: {
            line: 693,
            column: 23
          },
          end: {
            line: 693,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 693,
            column: 23
          },
          end: {
            line: 693,
            column: 42
          }
        }, {
          start: {
            line: 693,
            column: 46
          },
          end: {
            line: 693,
            column: 53
          }
        }],
        line: 693
      },
      "45": {
        loc: {
          start: {
            line: 705,
            column: 8
          },
          end: {
            line: 706,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 8
          },
          end: {
            line: 706,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 705
      },
      "46": {
        loc: {
          start: {
            line: 717,
            column: 8
          },
          end: {
            line: 719,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 717,
            column: 8
          },
          end: {
            line: 719,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 717
      },
      "47": {
        loc: {
          start: {
            line: 730,
            column: 31
          },
          end: {
            line: 730,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 730,
            column: 52
          },
          end: {
            line: 730,
            column: 58
          }
        }, {
          start: {
            line: 730,
            column: 61
          },
          end: {
            line: 730,
            column: 67
          }
        }],
        line: 730
      },
      "48": {
        loc: {
          start: {
            line: 747,
            column: 29
          },
          end: {
            line: 747,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 747,
            column: 64
          },
          end: {
            line: 747,
            column: 80
          }
        }, {
          start: {
            line: 747,
            column: 83
          },
          end: {
            line: 747,
            column: 113
          }
        }],
        line: 747
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\final-validation.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\deployment\\final-validation.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - FINAL VALIDATION AND TESTING\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive final validation and testing for the\r\n * AI crypto trading agent production deployment.\r\n */\r\n\r\nimport { execSync } from 'child_process';\r\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\r\nimport { join } from 'path';\r\nimport { logger } from '../core/logger';\r\nimport { databaseSetup } from './database-setup';\r\nimport { configurationManager } from './configuration-manager';\r\nimport { securityHardening } from './security-hardening';\r\nimport { monitoringAutomation } from './monitoring-automation';\r\nimport { backupRecovery } from './backup-recovery';\r\n\r\ninterface ValidationResult {\r\n  category: string;\r\n  name: string;\r\n  status: 'PASS' | 'FAIL' | 'WARNING' | 'SKIP';\r\n  message: string;\r\n  details?: any;\r\n  duration: number;\r\n  critical: boolean;\r\n}\r\n\r\ninterface ValidationSuite {\r\n  name: string;\r\n  description: string;\r\n  tests: ValidationTest[];\r\n  enabled: boolean;\r\n}\r\n\r\ninterface ValidationTest {\r\n  name: string;\r\n  description: string;\r\n  critical: boolean;\r\n  timeout: number;\r\n  test: () => Promise<{ success: boolean; message: string; details?: any }>;\r\n}\r\n\r\ninterface ValidationReport {\r\n  timestamp: Date;\r\n  environment: string;\r\n  version: string;\r\n  duration: number;\r\n  summary: {\r\n    total: number;\r\n    passed: number;\r\n    failed: number;\r\n    warnings: number;\r\n    skipped: number;\r\n    criticalFailed: number;\r\n  };\r\n  results: ValidationResult[];\r\n  recommendations: string[];\r\n  deploymentReady: boolean;\r\n}\r\n\r\nexport class FinalValidation {\r\n  private validationSuites: ValidationSuite[] = [];\r\n  private startTime: Date = new Date();\r\n\r\n  constructor() {\r\n    this.initializeValidationSuites();\r\n  }\r\n\r\n  /**\r\n   * Run complete validation suite\r\n   */\r\n  async runFullValidation(): Promise<ValidationReport> {\r\n    logger.info('\uD83D\uDD0D Starting comprehensive deployment validation...');\r\n    this.startTime = new Date();\r\n\r\n    const results: ValidationResult[] = [];\r\n    let totalTests = 0;\r\n    let passedTests = 0;\r\n    let failedTests = 0;\r\n    let warningTests = 0;\r\n    let skippedTests = 0;\r\n    let criticalFailures = 0;\r\n\r\n    // Run all validation suites\r\n    for (const suite of this.validationSuites) {\r\n      if (!suite.enabled) {\r\n        logger.info(`\u23ED\uFE0F Skipping disabled suite: ${suite.name}`);\r\n        continue;\r\n      }\r\n\r\n      logger.info(`\uD83E\uDDEA Running validation suite: ${suite.name}`);\r\n\r\n      for (const test of suite.tests) {\r\n        totalTests++;\r\n        const testStartTime = Date.now();\r\n\r\n        try {\r\n          logger.info(`  \uD83D\uDD0D Running test: ${test.name}`);\r\n\r\n          // Run test with timeout\r\n          const testResult = await Promise.race([\r\n            test.test(),\r\n            this.createTimeoutPromise(test.timeout)\r\n          ]);\r\n\r\n          const duration = Date.now() - testStartTime;\r\n          const status = testResult.success ? 'PASS' : 'FAIL';\r\n\r\n          const result: ValidationResult = {\r\n            category: suite.name,\r\n            name: test.name,\r\n            status,\r\n            message: testResult.message,\r\n            details: testResult.details,\r\n            duration,\r\n            critical: test.critical\r\n          };\r\n\r\n          results.push(result);\r\n\r\n          if (status === 'PASS') {\r\n            passedTests++;\r\n            logger.info(`    \u2705 ${test.name} - ${testResult.message}`);\r\n          } else {\r\n            failedTests++;\r\n            if (test.critical) {\r\n              criticalFailures++;\r\n            }\r\n            logger.error(`    \u274C ${test.name} - ${testResult.message}`);\r\n          }\r\n\r\n        } catch (error) {\r\n          const duration = Date.now() - testStartTime;\r\n          const isTimeout = error.message === 'Test timeout';\r\n          \r\n          const result: ValidationResult = {\r\n            category: suite.name,\r\n            name: test.name,\r\n            status: 'FAIL',\r\n            message: isTimeout ? 'Test timed out' : `Test error: ${error.message}`,\r\n            details: { error: error.message },\r\n            duration,\r\n            critical: test.critical\r\n          };\r\n\r\n          results.push(result);\r\n          failedTests++;\r\n          \r\n          if (test.critical) {\r\n            criticalFailures++;\r\n          }\r\n\r\n          logger.error(`    \u274C ${test.name} - ${result.message}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    const totalDuration = Date.now() - this.startTime.getTime();\r\n    const deploymentReady = criticalFailures === 0;\r\n\r\n    const report: ValidationReport = {\r\n      timestamp: new Date(),\r\n      environment: process.env.NODE_ENV || 'development',\r\n      version: this.getVersion(),\r\n      duration: totalDuration,\r\n      summary: {\r\n        total: totalTests,\r\n        passed: passedTests,\r\n        failed: failedTests,\r\n        warnings: warningTests,\r\n        skipped: skippedTests,\r\n        criticalFailed: criticalFailures\r\n      },\r\n      results,\r\n      recommendations: this.generateRecommendations(results),\r\n      deploymentReady\r\n    };\r\n\r\n    // Save validation report\r\n    await this.saveValidationReport(report);\r\n\r\n    // Log summary\r\n    this.logValidationSummary(report);\r\n\r\n    return report;\r\n  }\r\n\r\n  /**\r\n   * Initialize validation test suites\r\n   */\r\n  private initializeValidationSuites(): void {\r\n    this.validationSuites = [\r\n      {\r\n        name: 'System Requirements',\r\n        description: 'Validate system requirements and dependencies',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Node.js Version',\r\n            description: 'Verify Node.js version compatibility',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const version = process.version;\r\n              const majorVersion = parseInt(version.slice(1).split('.')[0]);\r\n              \r\n              if (majorVersion >= 18) {\r\n                return { success: true, message: `Node.js ${version} is compatible` };\r\n              } else {\r\n                return { success: false, message: `Node.js ${version} is not supported (requires v18+)` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'System Resources',\r\n            description: 'Check available system resources',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              const memInfo = execSync('free -g', { encoding: 'utf-8' });\r\n              const memLines = memInfo.split('\\n')[1].split(/\\s+/);\r\n              const totalMem = parseInt(memLines[1]);\r\n              const availableMem = parseInt(memLines[6]);\r\n\r\n              const diskInfo = execSync(\"df -BG / | tail -1\", { encoding: 'utf-8' });\r\n              const diskAvailable = parseInt(diskInfo.split(/\\s+/)[3]);\r\n\r\n              if (totalMem < 8) {\r\n                return { success: false, message: `Insufficient RAM: ${totalMem}GB (minimum 8GB required)` };\r\n              }\r\n\r\n              if (availableMem < 2) {\r\n                return { success: false, message: `Insufficient available RAM: ${availableMem}GB (minimum 2GB required)` };\r\n              }\r\n\r\n              if (diskAvailable < 10) {\r\n                return { success: false, message: `Insufficient disk space: ${diskAvailable}GB (minimum 10GB required)` };\r\n              }\r\n\r\n              return { \r\n                success: true, \r\n                message: `System resources adequate: ${totalMem}GB RAM, ${diskAvailable}GB disk`,\r\n                details: { totalMem, availableMem, diskAvailable }\r\n              };\r\n            }\r\n          },\r\n          {\r\n            name: 'Network Connectivity',\r\n            description: 'Verify internet connectivity',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              try {\r\n                execSync('ping -c 1 google.com', { stdio: 'pipe' });\r\n                execSync('ping -c 1 api.gateio.ws', { stdio: 'pipe' });\r\n                return { success: true, message: 'Network connectivity verified' };\r\n              } catch {\r\n                return { success: false, message: 'Network connectivity issues detected' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Configuration Validation',\r\n        description: 'Validate all configuration settings',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Environment Configuration',\r\n            description: 'Validate environment variables',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              const result = await configurationManager.validateConfiguration();\r\n              \r\n              if (result.valid) {\r\n                return { \r\n                  success: true, \r\n                  message: 'Configuration validation passed',\r\n                  details: { warnings: result.warnings }\r\n                };\r\n              } else {\r\n                return { \r\n                  success: false, \r\n                  message: `Configuration validation failed: ${result.errors.join(', ')}`,\r\n                  details: { errors: result.errors, warnings: result.warnings }\r\n                };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'API Credentials',\r\n            description: 'Validate API credentials format',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const apiKey = process.env.GATEIO_API_KEY;\r\n              const apiSecret = process.env.GATEIO_API_SECRET;\r\n\r\n              if (!apiKey || apiKey.length < 10) {\r\n                return { success: false, message: 'Invalid or missing Gate.io API key' };\r\n              }\r\n\r\n              if (!apiSecret || apiSecret.length < 10) {\r\n                return { success: false, message: 'Invalid or missing Gate.io API secret' };\r\n              }\r\n\r\n              return { success: true, message: 'API credentials format validated' };\r\n            }\r\n          },\r\n          {\r\n            name: 'SSH Configuration',\r\n            description: 'Validate SSH tunnel configuration',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              const oracleHost = process.env.ORACLE_HOST;\r\n              const sshKeyPath = process.env.ORACLE_SSH_KEY_PATH;\r\n\r\n              if (!oracleHost) {\r\n                return { success: false, message: 'Oracle host not configured' };\r\n              }\r\n\r\n              if (!sshKeyPath || !existsSync(sshKeyPath)) {\r\n                return { success: false, message: 'SSH key not found or not configured' };\r\n              }\r\n\r\n              // Test SSH connection\r\n              try {\r\n                execSync(`ssh -i ${sshKeyPath} -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@${oracleHost} echo \"test\"`, { stdio: 'pipe' });\r\n                return { success: true, message: 'SSH tunnel configuration validated' };\r\n              } catch {\r\n                return { success: false, message: 'SSH connection test failed' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Security Validation',\r\n        description: 'Validate security configurations',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Security Hardening',\r\n            description: 'Verify security hardening measures',\r\n            critical: true,\r\n            timeout: 30000,\r\n            test: async () => {\r\n              const result = await securityHardening.validateSecurityForDeployment();\r\n              \r\n              if (result.ready) {\r\n                return { success: true, message: 'Security validation passed' };\r\n              } else {\r\n                return { \r\n                  success: false, \r\n                  message: `Security issues found: ${result.criticalIssues.join(', ')}`,\r\n                  details: { issues: result.criticalIssues }\r\n                };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'File Permissions',\r\n            description: 'Check critical file permissions',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const criticalFiles = [\r\n                { path: '.env', expectedPerms: '600' },\r\n                { path: 'keys', expectedPerms: '700' }\r\n              ];\r\n\r\n              for (const file of criticalFiles) {\r\n                if (existsSync(file.path)) {\r\n                  const stats = require('fs').statSync(file.path);\r\n                  const perms = (stats.mode & parseInt('777', 8)).toString(8);\r\n                  \r\n                  if (perms !== file.expectedPerms) {\r\n                    return { \r\n                      success: false, \r\n                      message: `Incorrect permissions for ${file.path}: ${perms} (expected ${file.expectedPerms})` \r\n                    };\r\n                  }\r\n                }\r\n              }\r\n\r\n              return { success: true, message: 'File permissions validated' };\r\n            }\r\n          },\r\n          {\r\n            name: 'Firewall Status',\r\n            description: 'Check firewall configuration',\r\n            critical: false,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              try {\r\n                const ufwStatus = execSync('sudo ufw status', { encoding: 'utf-8' });\r\n                const isActive = ufwStatus.includes('Status: active');\r\n                \r\n                if (isActive) {\r\n                  return { success: true, message: 'Firewall is active and configured' };\r\n                } else {\r\n                  return { success: false, message: 'Firewall is not active' };\r\n                }\r\n              } catch {\r\n                return { success: false, message: 'Unable to check firewall status' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Database Validation',\r\n        description: 'Validate database setup and integrity',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Database Initialization',\r\n            description: 'Verify database is properly initialized',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              try {\r\n                await databaseSetup.initialize();\r\n                return { success: true, message: 'Database initialization successful' };\r\n              } catch (error) {\r\n                return { success: false, message: `Database initialization failed: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Database Integrity',\r\n            description: 'Check database integrity',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              const isValid = await databaseSetup.validateIntegrity();\r\n              \r\n              if (isValid) {\r\n                return { success: true, message: 'Database integrity check passed' };\r\n              } else {\r\n                return { success: false, message: 'Database integrity check failed' };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Database Statistics',\r\n            description: 'Collect database statistics',\r\n            critical: false,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              try {\r\n                const stats = await databaseSetup.getStatistics();\r\n                return { \r\n                  success: true, \r\n                  message: 'Database statistics collected',\r\n                  details: stats\r\n                };\r\n              } catch (error) {\r\n                return { success: false, message: `Failed to collect database statistics: ${error.message}` };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Application Build',\r\n        description: 'Validate application build and dependencies',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Build Artifacts',\r\n            description: 'Check if application is properly built',\r\n            critical: true,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              if (!existsSync('dist/index.js')) {\r\n                return { success: false, message: 'Main application build artifact missing (dist/index.js)' };\r\n              }\r\n\r\n              if (existsSync('src/dashboard') && !existsSync('src/dashboard/.next')) {\r\n                return { success: false, message: 'Dashboard build artifacts missing' };\r\n              }\r\n\r\n              return { success: true, message: 'All build artifacts present' };\r\n            }\r\n          },\r\n          {\r\n            name: 'Dependencies',\r\n            description: 'Verify all dependencies are installed',\r\n            critical: true,\r\n            timeout: 15000,\r\n            test: async () => {\r\n              try {\r\n                execSync('npm ls --production', { stdio: 'pipe' });\r\n                return { success: true, message: 'All production dependencies installed' };\r\n              } catch (error) {\r\n                return { success: false, message: 'Missing or incompatible dependencies detected' };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'TypeScript Compilation',\r\n            description: 'Verify TypeScript compilation',\r\n            critical: true,\r\n            timeout: 30000,\r\n            test: async () => {\r\n              try {\r\n                execSync('npx tsc --noEmit', { stdio: 'pipe' });\r\n                return { success: true, message: 'TypeScript compilation successful' };\r\n              } catch (error) {\r\n                return { success: false, message: 'TypeScript compilation errors detected' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Service Integration',\r\n        description: 'Test service integration and communication',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'PM2 Configuration',\r\n            description: 'Validate PM2 ecosystem configuration',\r\n            critical: true,\r\n            timeout: 10000,\r\n            test: async () => {\r\n              if (!existsSync('ecosystem.config.js')) {\r\n                return { success: false, message: 'PM2 ecosystem configuration missing' };\r\n              }\r\n\r\n              try {\r\n                // Test PM2 configuration syntax\r\n                require(join(process.cwd(), 'ecosystem.config.js'));\r\n                return { success: true, message: 'PM2 configuration is valid' };\r\n              } catch (error) {\r\n                return { success: false, message: `PM2 configuration error: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Service Startup',\r\n            description: 'Test service startup without errors',\r\n            critical: true,\r\n            timeout: 30000,\r\n            test: async () => {\r\n              try {\r\n                // Start services in test mode\r\n                execSync('pm2 start ecosystem.config.js --env test', { stdio: 'pipe' });\r\n                \r\n                // Wait for services to start\r\n                await new Promise(resolve => setTimeout(resolve, 5000));\r\n                \r\n                // Check if services are running\r\n                const processes = execSync('pm2 jlist', { encoding: 'utf-8' });\r\n                const processData = JSON.parse(processes);\r\n                const runningProcesses = processData.filter(p => p.pm2_env.status === 'online');\r\n                \r\n                // Stop test services\r\n                execSync('pm2 stop all', { stdio: 'pipe' });\r\n                execSync('pm2 delete all', { stdio: 'pipe' });\r\n                \r\n                if (runningProcesses.length > 0) {\r\n                  return { \r\n                    success: true, \r\n                    message: `${runningProcesses.length} services started successfully`,\r\n                    details: { processes: runningProcesses.length }\r\n                  };\r\n                } else {\r\n                  return { success: false, message: 'No services started successfully' };\r\n                }\r\n              } catch (error) {\r\n                // Cleanup on error\r\n                try {\r\n                  execSync('pm2 stop all', { stdio: 'pipe' });\r\n                  execSync('pm2 delete all', { stdio: 'pipe' });\r\n                } catch {\r\n                  // Ignore cleanup errors\r\n                }\r\n                \r\n                return { success: false, message: `Service startup failed: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'API Health Check',\r\n            description: 'Test API endpoint availability',\r\n            critical: true,\r\n            timeout: 20000,\r\n            test: async () => {\r\n              try {\r\n                // Start API service temporarily\r\n                execSync('pm2 start ecosystem.config.js --only ai-crypto-trading-api', { stdio: 'pipe' });\r\n                \r\n                // Wait for service to start\r\n                await new Promise(resolve => setTimeout(resolve, 8000));\r\n                \r\n                // Test API health endpoint\r\n                const startTime = Date.now();\r\n                execSync('curl -f http://localhost:3001/api/v1/health', { stdio: 'pipe' });\r\n                const responseTime = Date.now() - startTime;\r\n                \r\n                // Stop test service\r\n                execSync('pm2 stop ai-crypto-trading-api', { stdio: 'pipe' });\r\n                execSync('pm2 delete ai-crypto-trading-api', { stdio: 'pipe' });\r\n                \r\n                return { \r\n                  success: true, \r\n                  message: `API health check passed (${responseTime}ms)`,\r\n                  details: { responseTime }\r\n                };\r\n              } catch (error) {\r\n                // Cleanup on error\r\n                try {\r\n                  execSync('pm2 stop ai-crypto-trading-api', { stdio: 'pipe' });\r\n                  execSync('pm2 delete ai-crypto-trading-api', { stdio: 'pipe' });\r\n                } catch {\r\n                  // Ignore cleanup errors\r\n                }\r\n                \r\n                return { success: false, message: `API health check failed: ${error.message}` };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        name: 'Backup and Recovery',\r\n        description: 'Test backup and recovery systems',\r\n        enabled: true,\r\n        tests: [\r\n          {\r\n            name: 'Backup System',\r\n            description: 'Test backup creation',\r\n            critical: false,\r\n            timeout: 60000,\r\n            test: async () => {\r\n              try {\r\n                const result = await backupRecovery.performFullBackup();\r\n                \r\n                if (result.success) {\r\n                  return { \r\n                    success: true, \r\n                    message: `Backup created successfully (${this.formatBytes(result.totalSize)})`,\r\n                    details: { size: result.totalSize, duration: result.duration }\r\n                  };\r\n                } else {\r\n                  return { success: false, message: `Backup failed: ${result.error}` };\r\n                }\r\n              } catch (error) {\r\n                return { success: false, message: `Backup test failed: ${error.message}` };\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: 'Recovery Plans',\r\n            description: 'Validate recovery plan definitions',\r\n            critical: false,\r\n            timeout: 5000,\r\n            test: async () => {\r\n              const plans = backupRecovery.getRecoveryPlans();\r\n              \r\n              if (plans.length > 0) {\r\n                return { \r\n                  success: true, \r\n                  message: `${plans.length} recovery plans available`,\r\n                  details: { plans: plans.map(p => p.name) }\r\n                };\r\n              } else {\r\n                return { success: false, message: 'No recovery plans defined' };\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Create timeout promise\r\n   */\r\n  private createTimeoutPromise(timeout: number): Promise<never> {\r\n    return new Promise((_, reject) => {\r\n      setTimeout(() => reject(new Error('Test timeout')), timeout);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Generate recommendations based on validation results\r\n   */\r\n  private generateRecommendations(results: ValidationResult[]): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    const failedCritical = results.filter(r => r.status === 'FAIL' && r.critical);\r\n    const failedNonCritical = results.filter(r => r.status === 'FAIL' && !r.critical);\r\n    const warnings = results.filter(r => r.status === 'WARNING');\r\n\r\n    if (failedCritical.length > 0) {\r\n      recommendations.push('CRITICAL: Fix all critical test failures before deployment');\r\n      failedCritical.forEach(test => {\r\n        recommendations.push(`  - ${test.category}: ${test.name} - ${test.message}`);\r\n      });\r\n    }\r\n\r\n    if (failedNonCritical.length > 0) {\r\n      recommendations.push('Address non-critical test failures for optimal performance');\r\n    }\r\n\r\n    if (warnings.length > 0) {\r\n      recommendations.push('Review and address warning conditions');\r\n    }\r\n\r\n    // Performance recommendations\r\n    const slowTests = results.filter(r => r.duration > 10000);\r\n    if (slowTests.length > 0) {\r\n      recommendations.push('Some tests took longer than expected - monitor system performance');\r\n    }\r\n\r\n    // Security recommendations\r\n    const securityFailures = results.filter(r => r.category === 'Security Validation' && r.status === 'FAIL');\r\n    if (securityFailures.length > 0) {\r\n      recommendations.push('Security validation failures detected - review security configuration');\r\n    }\r\n\r\n    if (recommendations.length === 0) {\r\n      recommendations.push('All validations passed - system is ready for deployment');\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Save validation report\r\n   */\r\n  private async saveValidationReport(report: ValidationReport): Promise<void> {\r\n    const timestamp = report.timestamp.toISOString().replace(/[:.]/g, '-');\r\n    const reportPath = join(process.cwd(), 'logs', `validation-report-${timestamp}.json`);\r\n    \r\n    writeFileSync(reportPath, JSON.stringify(report, null, 2));\r\n    logger.info(`\uD83D\uDCCA Validation report saved: ${reportPath}`);\r\n  }\r\n\r\n  /**\r\n   * Log validation summary\r\n   */\r\n  private logValidationSummary(report: ValidationReport): void {\r\n    logger.info('\\n\uD83D\uDCCA VALIDATION SUMMARY');\r\n    logger.info('\u2550'.repeat(50));\r\n    logger.info(`Environment: ${report.environment}`);\r\n    logger.info(`Duration: ${Math.round(report.duration / 1000)}s`);\r\n    logger.info(`Total Tests: ${report.summary.total}`);\r\n    logger.info(`\u2705 Passed: ${report.summary.passed}`);\r\n    logger.info(`\u274C Failed: ${report.summary.failed}`);\r\n    logger.info(`\u26A0\uFE0F Warnings: ${report.summary.warnings}`);\r\n    logger.info(`\u23ED\uFE0F Skipped: ${report.summary.skipped}`);\r\n    logger.info(`\uD83D\uDEA8 Critical Failures: ${report.summary.criticalFailed}`);\r\n    logger.info(`\uD83D\uDE80 Deployment Ready: ${report.deploymentReady ? 'YES' : 'NO'}`);\r\n\r\n    if (report.recommendations.length > 0) {\r\n      logger.info('\\n\uD83D\uDCA1 RECOMMENDATIONS:');\r\n      report.recommendations.forEach(rec => {\r\n        logger.info(`  \u2022 ${rec}`);\r\n      });\r\n    }\r\n\r\n    if (!report.deploymentReady) {\r\n      logger.error('\\n\u274C DEPLOYMENT BLOCKED - Critical issues must be resolved');\r\n    } else {\r\n      logger.info('\\n\u2705 VALIDATION PASSED - System ready for deployment');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get application version\r\n   */\r\n  private getVersion(): string {\r\n    try {\r\n      if (existsSync('package.json')) {\r\n        const packageJson = JSON.parse(readFileSync('package.json', 'utf-8'));\r\n        return packageJson.version || '1.0.0';\r\n      }\r\n    } catch {\r\n      // Ignore errors\r\n    }\r\n    return '1.0.0';\r\n  }\r\n\r\n  /**\r\n   * Format bytes utility\r\n   */\r\n  private formatBytes(bytes: number): string {\r\n    if (bytes === 0) return '0 Bytes';\r\n    \r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    \r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  /**\r\n   * Run specific validation suite\r\n   */\r\n  async runValidationSuite(suiteName: string): Promise<ValidationResult[]> {\r\n    const suite = this.validationSuites.find(s => s.name === suiteName);\r\n    if (!suite) {\r\n      throw new Error(`Validation suite not found: ${suiteName}`);\r\n    }\r\n\r\n    logger.info(`\uD83E\uDDEA Running validation suite: ${suite.name}`);\r\n    const results: ValidationResult[] = [];\r\n\r\n    for (const test of suite.tests) {\r\n      const testStartTime = Date.now();\r\n\r\n      try {\r\n        const testResult = await Promise.race([\r\n          test.test(),\r\n          this.createTimeoutPromise(test.timeout)\r\n        ]);\r\n\r\n        const duration = Date.now() - testStartTime;\r\n        const status = testResult.success ? 'PASS' : 'FAIL';\r\n\r\n        results.push({\r\n          category: suite.name,\r\n          name: test.name,\r\n          status,\r\n          message: testResult.message,\r\n          details: testResult.details,\r\n          duration,\r\n          critical: test.critical\r\n        });\r\n\r\n      } catch (error) {\r\n        const duration = Date.now() - testStartTime;\r\n        \r\n        results.push({\r\n          category: suite.name,\r\n          name: test.name,\r\n          status: 'FAIL',\r\n          message: error.message === 'Test timeout' ? 'Test timed out' : `Test error: ${error.message}`,\r\n          details: { error: error.message },\r\n          duration,\r\n          critical: test.critical\r\n        });\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Get available validation suites\r\n   */\r\n  getValidationSuites(): ValidationSuite[] {\r\n    return this.validationSuites.map(suite => ({\r\n      ...suite,\r\n      tests: suite.tests.map(test => ({\r\n        name: test.name,\r\n        description: test.description,\r\n        critical: test.critical,\r\n        timeout: test.timeout,\r\n        test: undefined // Don't expose test functions\r\n      }))\r\n    }));\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const finalValidation = new FinalValidation();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2ca19735a83748de3d6e73671d51b63c4d11a158"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cx0ufkpww = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cx0ufkpww();
cov_cx0ufkpww().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_cx0ufkpww().s[1]++;
exports.finalValidation = exports.FinalValidation = void 0;
const child_process_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[2]++, require("child_process"));
const fs_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[3]++, require("fs"));
const path_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[4]++, require("path"));
const logger_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[5]++, require("../core/logger"));
const database_setup_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[6]++, require("./database-setup"));
const configuration_manager_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[7]++, require("./configuration-manager"));
const security_hardening_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[8]++, require("./security-hardening"));
const backup_recovery_1 =
/* istanbul ignore next */
(cov_cx0ufkpww().s[9]++, require("./backup-recovery"));
class FinalValidation {
  validationSuites =
  /* istanbul ignore next */
  (cov_cx0ufkpww().s[10]++, []);
  startTime =
  /* istanbul ignore next */
  (cov_cx0ufkpww().s[11]++, new Date());
  constructor() {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[0]++;
    cov_cx0ufkpww().s[12]++;
    this.initializeValidationSuites();
  }
  /**
   * Run complete validation suite
   */
  async runFullValidation() {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[1]++;
    cov_cx0ufkpww().s[13]++;
    logger_1.logger.info('🔍 Starting comprehensive deployment validation...');
    /* istanbul ignore next */
    cov_cx0ufkpww().s[14]++;
    this.startTime = new Date();
    const results =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[15]++, []);
    let totalTests =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[16]++, 0);
    let passedTests =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[17]++, 0);
    let failedTests =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[18]++, 0);
    let warningTests =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[19]++, 0);
    let skippedTests =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[20]++, 0);
    let criticalFailures =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[21]++, 0);
    // Run all validation suites
    /* istanbul ignore next */
    cov_cx0ufkpww().s[22]++;
    for (const suite of this.validationSuites) {
      /* istanbul ignore next */
      cov_cx0ufkpww().s[23]++;
      if (!suite.enabled) {
        /* istanbul ignore next */
        cov_cx0ufkpww().b[0][0]++;
        cov_cx0ufkpww().s[24]++;
        logger_1.logger.info(`⏭️ Skipping disabled suite: ${suite.name}`);
        /* istanbul ignore next */
        cov_cx0ufkpww().s[25]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_cx0ufkpww().b[0][1]++;
      }
      cov_cx0ufkpww().s[26]++;
      logger_1.logger.info(`🧪 Running validation suite: ${suite.name}`);
      /* istanbul ignore next */
      cov_cx0ufkpww().s[27]++;
      for (const test of suite.tests) {
        /* istanbul ignore next */
        cov_cx0ufkpww().s[28]++;
        totalTests++;
        const testStartTime =
        /* istanbul ignore next */
        (cov_cx0ufkpww().s[29]++, Date.now());
        /* istanbul ignore next */
        cov_cx0ufkpww().s[30]++;
        try {
          /* istanbul ignore next */
          cov_cx0ufkpww().s[31]++;
          logger_1.logger.info(`  🔍 Running test: ${test.name}`);
          // Run test with timeout
          const testResult =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[32]++, await Promise.race([test.test(), this.createTimeoutPromise(test.timeout)]));
          const duration =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[33]++, Date.now() - testStartTime);
          const status =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[34]++, testResult.success ?
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[1][0]++, 'PASS') :
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[1][1]++, 'FAIL'));
          const result =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[35]++, {
            category: suite.name,
            name: test.name,
            status,
            message: testResult.message,
            details: testResult.details,
            duration,
            critical: test.critical
          });
          /* istanbul ignore next */
          cov_cx0ufkpww().s[36]++;
          results.push(result);
          /* istanbul ignore next */
          cov_cx0ufkpww().s[37]++;
          if (status === 'PASS') {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[2][0]++;
            cov_cx0ufkpww().s[38]++;
            passedTests++;
            /* istanbul ignore next */
            cov_cx0ufkpww().s[39]++;
            logger_1.logger.info(`    ✅ ${test.name} - ${testResult.message}`);
          } else {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[2][1]++;
            cov_cx0ufkpww().s[40]++;
            failedTests++;
            /* istanbul ignore next */
            cov_cx0ufkpww().s[41]++;
            if (test.critical) {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[3][0]++;
              cov_cx0ufkpww().s[42]++;
              criticalFailures++;
            } else
            /* istanbul ignore next */
            {
              cov_cx0ufkpww().b[3][1]++;
            }
            cov_cx0ufkpww().s[43]++;
            logger_1.logger.error(`    ❌ ${test.name} - ${testResult.message}`);
          }
        } catch (error) {
          const duration =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[44]++, Date.now() - testStartTime);
          const isTimeout =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[45]++, error.message === 'Test timeout');
          const result =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[46]++, {
            category: suite.name,
            name: test.name,
            status: 'FAIL',
            message: isTimeout ?
            /* istanbul ignore next */
            (cov_cx0ufkpww().b[4][0]++, 'Test timed out') :
            /* istanbul ignore next */
            (cov_cx0ufkpww().b[4][1]++, `Test error: ${error.message}`),
            details: {
              error: error.message
            },
            duration,
            critical: test.critical
          });
          /* istanbul ignore next */
          cov_cx0ufkpww().s[47]++;
          results.push(result);
          /* istanbul ignore next */
          cov_cx0ufkpww().s[48]++;
          failedTests++;
          /* istanbul ignore next */
          cov_cx0ufkpww().s[49]++;
          if (test.critical) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[5][0]++;
            cov_cx0ufkpww().s[50]++;
            criticalFailures++;
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[5][1]++;
          }
          cov_cx0ufkpww().s[51]++;
          logger_1.logger.error(`    ❌ ${test.name} - ${result.message}`);
        }
      }
    }
    const totalDuration =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[52]++, Date.now() - this.startTime.getTime());
    const deploymentReady =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[53]++, criticalFailures === 0);
    const report =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[54]++, {
      timestamp: new Date(),
      environment:
      /* istanbul ignore next */
      (cov_cx0ufkpww().b[6][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_cx0ufkpww().b[6][1]++, 'development'),
      version: this.getVersion(),
      duration: totalDuration,
      summary: {
        total: totalTests,
        passed: passedTests,
        failed: failedTests,
        warnings: warningTests,
        skipped: skippedTests,
        criticalFailed: criticalFailures
      },
      results,
      recommendations: this.generateRecommendations(results),
      deploymentReady
    });
    // Save validation report
    /* istanbul ignore next */
    cov_cx0ufkpww().s[55]++;
    await this.saveValidationReport(report);
    // Log summary
    /* istanbul ignore next */
    cov_cx0ufkpww().s[56]++;
    this.logValidationSummary(report);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[57]++;
    return report;
  }
  /**
   * Initialize validation test suites
   */
  initializeValidationSuites() {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[2]++;
    cov_cx0ufkpww().s[58]++;
    this.validationSuites = [{
      name: 'System Requirements',
      description: 'Validate system requirements and dependencies',
      enabled: true,
      tests: [{
        name: 'Node.js Version',
        description: 'Verify Node.js version compatibility',
        critical: true,
        timeout: 5000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[3]++;
          const version =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[59]++, process.version);
          const majorVersion =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[60]++, parseInt(version.slice(1).split('.')[0]));
          /* istanbul ignore next */
          cov_cx0ufkpww().s[61]++;
          if (majorVersion >= 18) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[7][0]++;
            cov_cx0ufkpww().s[62]++;
            return {
              success: true,
              message: `Node.js ${version} is compatible`
            };
          } else {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[7][1]++;
            cov_cx0ufkpww().s[63]++;
            return {
              success: false,
              message: `Node.js ${version} is not supported (requires v18+)`
            };
          }
        }
      }, {
        name: 'System Resources',
        description: 'Check available system resources',
        critical: true,
        timeout: 10000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[4]++;
          const memInfo =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[64]++, (0, child_process_1.execSync)('free -g', {
            encoding: 'utf-8'
          }));
          const memLines =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[65]++, memInfo.split('\n')[1].split(/\s+/));
          const totalMem =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[66]++, parseInt(memLines[1]));
          const availableMem =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[67]++, parseInt(memLines[6]));
          const diskInfo =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[68]++, (0, child_process_1.execSync)("df -BG / | tail -1", {
            encoding: 'utf-8'
          }));
          const diskAvailable =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[69]++, parseInt(diskInfo.split(/\s+/)[3]));
          /* istanbul ignore next */
          cov_cx0ufkpww().s[70]++;
          if (totalMem < 8) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[8][0]++;
            cov_cx0ufkpww().s[71]++;
            return {
              success: false,
              message: `Insufficient RAM: ${totalMem}GB (minimum 8GB required)`
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[8][1]++;
          }
          cov_cx0ufkpww().s[72]++;
          if (availableMem < 2) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[9][0]++;
            cov_cx0ufkpww().s[73]++;
            return {
              success: false,
              message: `Insufficient available RAM: ${availableMem}GB (minimum 2GB required)`
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[9][1]++;
          }
          cov_cx0ufkpww().s[74]++;
          if (diskAvailable < 10) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[10][0]++;
            cov_cx0ufkpww().s[75]++;
            return {
              success: false,
              message: `Insufficient disk space: ${diskAvailable}GB (minimum 10GB required)`
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[10][1]++;
          }
          cov_cx0ufkpww().s[76]++;
          return {
            success: true,
            message: `System resources adequate: ${totalMem}GB RAM, ${diskAvailable}GB disk`,
            details: {
              totalMem,
              availableMem,
              diskAvailable
            }
          };
        }
      }, {
        name: 'Network Connectivity',
        description: 'Verify internet connectivity',
        critical: true,
        timeout: 15000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[5]++;
          cov_cx0ufkpww().s[77]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[78]++;
            (0, child_process_1.execSync)('ping -c 1 google.com', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[79]++;
            (0, child_process_1.execSync)('ping -c 1 api.gateio.ws', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[80]++;
            return {
              success: true,
              message: 'Network connectivity verified'
            };
          } catch {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[81]++;
            return {
              success: false,
              message: 'Network connectivity issues detected'
            };
          }
        }
      }]
    }, {
      name: 'Configuration Validation',
      description: 'Validate all configuration settings',
      enabled: true,
      tests: [{
        name: 'Environment Configuration',
        description: 'Validate environment variables',
        critical: true,
        timeout: 10000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[6]++;
          const result =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[82]++, await configuration_manager_1.configurationManager.validateConfiguration());
          /* istanbul ignore next */
          cov_cx0ufkpww().s[83]++;
          if (result.valid) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[11][0]++;
            cov_cx0ufkpww().s[84]++;
            return {
              success: true,
              message: 'Configuration validation passed',
              details: {
                warnings: result.warnings
              }
            };
          } else {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[11][1]++;
            cov_cx0ufkpww().s[85]++;
            return {
              success: false,
              message: `Configuration validation failed: ${result.errors.join(', ')}`,
              details: {
                errors: result.errors,
                warnings: result.warnings
              }
            };
          }
        }
      }, {
        name: 'API Credentials',
        description: 'Validate API credentials format',
        critical: true,
        timeout: 5000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[7]++;
          const apiKey =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[86]++, process.env.GATEIO_API_KEY);
          const apiSecret =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[87]++, process.env.GATEIO_API_SECRET);
          /* istanbul ignore next */
          cov_cx0ufkpww().s[88]++;
          if (
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[13][0]++, !apiKey) ||
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[13][1]++, apiKey.length < 10)) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[12][0]++;
            cov_cx0ufkpww().s[89]++;
            return {
              success: false,
              message: 'Invalid or missing Gate.io API key'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[12][1]++;
          }
          cov_cx0ufkpww().s[90]++;
          if (
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[15][0]++, !apiSecret) ||
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[15][1]++, apiSecret.length < 10)) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[14][0]++;
            cov_cx0ufkpww().s[91]++;
            return {
              success: false,
              message: 'Invalid or missing Gate.io API secret'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[14][1]++;
          }
          cov_cx0ufkpww().s[92]++;
          return {
            success: true,
            message: 'API credentials format validated'
          };
        }
      }, {
        name: 'SSH Configuration',
        description: 'Validate SSH tunnel configuration',
        critical: true,
        timeout: 15000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[8]++;
          const oracleHost =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[93]++, process.env.ORACLE_HOST);
          const sshKeyPath =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[94]++, process.env.ORACLE_SSH_KEY_PATH);
          /* istanbul ignore next */
          cov_cx0ufkpww().s[95]++;
          if (!oracleHost) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[16][0]++;
            cov_cx0ufkpww().s[96]++;
            return {
              success: false,
              message: 'Oracle host not configured'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[16][1]++;
          }
          cov_cx0ufkpww().s[97]++;
          if (
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[18][0]++, !sshKeyPath) ||
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[18][1]++, !(0, fs_1.existsSync)(sshKeyPath))) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[17][0]++;
            cov_cx0ufkpww().s[98]++;
            return {
              success: false,
              message: 'SSH key not found or not configured'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[17][1]++;
          }
          // Test SSH connection
          cov_cx0ufkpww().s[99]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[100]++;
            (0, child_process_1.execSync)(`ssh -i ${sshKeyPath} -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@${oracleHost} echo "test"`, {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[101]++;
            return {
              success: true,
              message: 'SSH tunnel configuration validated'
            };
          } catch {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[102]++;
            return {
              success: false,
              message: 'SSH connection test failed'
            };
          }
        }
      }]
    }, {
      name: 'Security Validation',
      description: 'Validate security configurations',
      enabled: true,
      tests: [{
        name: 'Security Hardening',
        description: 'Verify security hardening measures',
        critical: true,
        timeout: 30000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[9]++;
          const result =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[103]++, await security_hardening_1.securityHardening.validateSecurityForDeployment());
          /* istanbul ignore next */
          cov_cx0ufkpww().s[104]++;
          if (result.ready) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[19][0]++;
            cov_cx0ufkpww().s[105]++;
            return {
              success: true,
              message: 'Security validation passed'
            };
          } else {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[19][1]++;
            cov_cx0ufkpww().s[106]++;
            return {
              success: false,
              message: `Security issues found: ${result.criticalIssues.join(', ')}`,
              details: {
                issues: result.criticalIssues
              }
            };
          }
        }
      }, {
        name: 'File Permissions',
        description: 'Check critical file permissions',
        critical: true,
        timeout: 5000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[10]++;
          const criticalFiles =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[107]++, [{
            path: '.env',
            expectedPerms: '600'
          }, {
            path: 'keys',
            expectedPerms: '700'
          }]);
          /* istanbul ignore next */
          cov_cx0ufkpww().s[108]++;
          for (const file of criticalFiles) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[109]++;
            if ((0, fs_1.existsSync)(file.path)) {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[20][0]++;
              const stats =
              /* istanbul ignore next */
              (cov_cx0ufkpww().s[110]++, require('fs').statSync(file.path));
              const perms =
              /* istanbul ignore next */
              (cov_cx0ufkpww().s[111]++, (stats.mode & parseInt('777', 8)).toString(8));
              /* istanbul ignore next */
              cov_cx0ufkpww().s[112]++;
              if (perms !== file.expectedPerms) {
                /* istanbul ignore next */
                cov_cx0ufkpww().b[21][0]++;
                cov_cx0ufkpww().s[113]++;
                return {
                  success: false,
                  message: `Incorrect permissions for ${file.path}: ${perms} (expected ${file.expectedPerms})`
                };
              } else
              /* istanbul ignore next */
              {
                cov_cx0ufkpww().b[21][1]++;
              }
            } else
            /* istanbul ignore next */
            {
              cov_cx0ufkpww().b[20][1]++;
            }
          }
          /* istanbul ignore next */
          cov_cx0ufkpww().s[114]++;
          return {
            success: true,
            message: 'File permissions validated'
          };
        }
      }, {
        name: 'Firewall Status',
        description: 'Check firewall configuration',
        critical: false,
        timeout: 10000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[11]++;
          cov_cx0ufkpww().s[115]++;
          try {
            const ufwStatus =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[116]++, (0, child_process_1.execSync)('sudo ufw status', {
              encoding: 'utf-8'
            }));
            const isActive =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[117]++, ufwStatus.includes('Status: active'));
            /* istanbul ignore next */
            cov_cx0ufkpww().s[118]++;
            if (isActive) {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[22][0]++;
              cov_cx0ufkpww().s[119]++;
              return {
                success: true,
                message: 'Firewall is active and configured'
              };
            } else {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[22][1]++;
              cov_cx0ufkpww().s[120]++;
              return {
                success: false,
                message: 'Firewall is not active'
              };
            }
          } catch {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[121]++;
            return {
              success: false,
              message: 'Unable to check firewall status'
            };
          }
        }
      }]
    }, {
      name: 'Database Validation',
      description: 'Validate database setup and integrity',
      enabled: true,
      tests: [{
        name: 'Database Initialization',
        description: 'Verify database is properly initialized',
        critical: true,
        timeout: 15000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[12]++;
          cov_cx0ufkpww().s[122]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[123]++;
            await database_setup_1.databaseSetup.initialize();
            /* istanbul ignore next */
            cov_cx0ufkpww().s[124]++;
            return {
              success: true,
              message: 'Database initialization successful'
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[125]++;
            return {
              success: false,
              message: `Database initialization failed: ${error.message}`
            };
          }
        }
      }, {
        name: 'Database Integrity',
        description: 'Check database integrity',
        critical: true,
        timeout: 10000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[13]++;
          const isValid =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[126]++, await database_setup_1.databaseSetup.validateIntegrity());
          /* istanbul ignore next */
          cov_cx0ufkpww().s[127]++;
          if (isValid) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[23][0]++;
            cov_cx0ufkpww().s[128]++;
            return {
              success: true,
              message: 'Database integrity check passed'
            };
          } else {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[23][1]++;
            cov_cx0ufkpww().s[129]++;
            return {
              success: false,
              message: 'Database integrity check failed'
            };
          }
        }
      }, {
        name: 'Database Statistics',
        description: 'Collect database statistics',
        critical: false,
        timeout: 10000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[14]++;
          cov_cx0ufkpww().s[130]++;
          try {
            const stats =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[131]++, await database_setup_1.databaseSetup.getStatistics());
            /* istanbul ignore next */
            cov_cx0ufkpww().s[132]++;
            return {
              success: true,
              message: 'Database statistics collected',
              details: stats
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[133]++;
            return {
              success: false,
              message: `Failed to collect database statistics: ${error.message}`
            };
          }
        }
      }]
    }, {
      name: 'Application Build',
      description: 'Validate application build and dependencies',
      enabled: true,
      tests: [{
        name: 'Build Artifacts',
        description: 'Check if application is properly built',
        critical: true,
        timeout: 5000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[15]++;
          cov_cx0ufkpww().s[134]++;
          if (!(0, fs_1.existsSync)('dist/index.js')) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[24][0]++;
            cov_cx0ufkpww().s[135]++;
            return {
              success: false,
              message: 'Main application build artifact missing (dist/index.js)'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[24][1]++;
          }
          cov_cx0ufkpww().s[136]++;
          if (
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[26][0]++, (0, fs_1.existsSync)('src/dashboard')) &&
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[26][1]++, !(0, fs_1.existsSync)('src/dashboard/.next'))) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[25][0]++;
            cov_cx0ufkpww().s[137]++;
            return {
              success: false,
              message: 'Dashboard build artifacts missing'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[25][1]++;
          }
          cov_cx0ufkpww().s[138]++;
          return {
            success: true,
            message: 'All build artifacts present'
          };
        }
      }, {
        name: 'Dependencies',
        description: 'Verify all dependencies are installed',
        critical: true,
        timeout: 15000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[16]++;
          cov_cx0ufkpww().s[139]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[140]++;
            (0, child_process_1.execSync)('npm ls --production', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[141]++;
            return {
              success: true,
              message: 'All production dependencies installed'
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[142]++;
            return {
              success: false,
              message: 'Missing or incompatible dependencies detected'
            };
          }
        }
      }, {
        name: 'TypeScript Compilation',
        description: 'Verify TypeScript compilation',
        critical: true,
        timeout: 30000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[17]++;
          cov_cx0ufkpww().s[143]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[144]++;
            (0, child_process_1.execSync)('npx tsc --noEmit', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[145]++;
            return {
              success: true,
              message: 'TypeScript compilation successful'
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[146]++;
            return {
              success: false,
              message: 'TypeScript compilation errors detected'
            };
          }
        }
      }]
    }, {
      name: 'Service Integration',
      description: 'Test service integration and communication',
      enabled: true,
      tests: [{
        name: 'PM2 Configuration',
        description: 'Validate PM2 ecosystem configuration',
        critical: true,
        timeout: 10000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[18]++;
          cov_cx0ufkpww().s[147]++;
          if (!(0, fs_1.existsSync)('ecosystem.config.js')) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[27][0]++;
            cov_cx0ufkpww().s[148]++;
            return {
              success: false,
              message: 'PM2 ecosystem configuration missing'
            };
          } else
          /* istanbul ignore next */
          {
            cov_cx0ufkpww().b[27][1]++;
          }
          cov_cx0ufkpww().s[149]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[150]++;
            // Test PM2 configuration syntax
            require((0, path_1.join)(process.cwd(), 'ecosystem.config.js'));
            /* istanbul ignore next */
            cov_cx0ufkpww().s[151]++;
            return {
              success: true,
              message: 'PM2 configuration is valid'
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[152]++;
            return {
              success: false,
              message: `PM2 configuration error: ${error.message}`
            };
          }
        }
      }, {
        name: 'Service Startup',
        description: 'Test service startup without errors',
        critical: true,
        timeout: 30000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[19]++;
          cov_cx0ufkpww().s[153]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[154]++;
            // Start services in test mode
            (0, child_process_1.execSync)('pm2 start ecosystem.config.js --env test', {
              stdio: 'pipe'
            });
            // Wait for services to start
            /* istanbul ignore next */
            cov_cx0ufkpww().s[155]++;
            await new Promise(resolve => {
              /* istanbul ignore next */
              cov_cx0ufkpww().f[20]++;
              cov_cx0ufkpww().s[156]++;
              return setTimeout(resolve, 5000);
            });
            // Check if services are running
            const processes =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[157]++, (0, child_process_1.execSync)('pm2 jlist', {
              encoding: 'utf-8'
            }));
            const processData =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[158]++, JSON.parse(processes));
            const runningProcesses =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[159]++, processData.filter(p => {
              /* istanbul ignore next */
              cov_cx0ufkpww().f[21]++;
              cov_cx0ufkpww().s[160]++;
              return p.pm2_env.status === 'online';
            }));
            // Stop test services
            /* istanbul ignore next */
            cov_cx0ufkpww().s[161]++;
            (0, child_process_1.execSync)('pm2 stop all', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[162]++;
            (0, child_process_1.execSync)('pm2 delete all', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[163]++;
            if (runningProcesses.length > 0) {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[28][0]++;
              cov_cx0ufkpww().s[164]++;
              return {
                success: true,
                message: `${runningProcesses.length} services started successfully`,
                details: {
                  processes: runningProcesses.length
                }
              };
            } else {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[28][1]++;
              cov_cx0ufkpww().s[165]++;
              return {
                success: false,
                message: 'No services started successfully'
              };
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[166]++;
            // Cleanup on error
            try {
              /* istanbul ignore next */
              cov_cx0ufkpww().s[167]++;
              (0, child_process_1.execSync)('pm2 stop all', {
                stdio: 'pipe'
              });
              /* istanbul ignore next */
              cov_cx0ufkpww().s[168]++;
              (0, child_process_1.execSync)('pm2 delete all', {
                stdio: 'pipe'
              });
            } catch {
              // Ignore cleanup errors
            }
            /* istanbul ignore next */
            cov_cx0ufkpww().s[169]++;
            return {
              success: false,
              message: `Service startup failed: ${error.message}`
            };
          }
        }
      }, {
        name: 'API Health Check',
        description: 'Test API endpoint availability',
        critical: true,
        timeout: 20000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[22]++;
          cov_cx0ufkpww().s[170]++;
          try {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[171]++;
            // Start API service temporarily
            (0, child_process_1.execSync)('pm2 start ecosystem.config.js --only ai-crypto-trading-api', {
              stdio: 'pipe'
            });
            // Wait for service to start
            /* istanbul ignore next */
            cov_cx0ufkpww().s[172]++;
            await new Promise(resolve => {
              /* istanbul ignore next */
              cov_cx0ufkpww().f[23]++;
              cov_cx0ufkpww().s[173]++;
              return setTimeout(resolve, 8000);
            });
            // Test API health endpoint
            const startTime =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[174]++, Date.now());
            /* istanbul ignore next */
            cov_cx0ufkpww().s[175]++;
            (0, child_process_1.execSync)('curl -f http://localhost:3001/api/v1/health', {
              stdio: 'pipe'
            });
            const responseTime =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[176]++, Date.now() - startTime);
            // Stop test service
            /* istanbul ignore next */
            cov_cx0ufkpww().s[177]++;
            (0, child_process_1.execSync)('pm2 stop ai-crypto-trading-api', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[178]++;
            (0, child_process_1.execSync)('pm2 delete ai-crypto-trading-api', {
              stdio: 'pipe'
            });
            /* istanbul ignore next */
            cov_cx0ufkpww().s[179]++;
            return {
              success: true,
              message: `API health check passed (${responseTime}ms)`,
              details: {
                responseTime
              }
            };
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[180]++;
            // Cleanup on error
            try {
              /* istanbul ignore next */
              cov_cx0ufkpww().s[181]++;
              (0, child_process_1.execSync)('pm2 stop ai-crypto-trading-api', {
                stdio: 'pipe'
              });
              /* istanbul ignore next */
              cov_cx0ufkpww().s[182]++;
              (0, child_process_1.execSync)('pm2 delete ai-crypto-trading-api', {
                stdio: 'pipe'
              });
            } catch {
              // Ignore cleanup errors
            }
            /* istanbul ignore next */
            cov_cx0ufkpww().s[183]++;
            return {
              success: false,
              message: `API health check failed: ${error.message}`
            };
          }
        }
      }]
    }, {
      name: 'Backup and Recovery',
      description: 'Test backup and recovery systems',
      enabled: true,
      tests: [{
        name: 'Backup System',
        description: 'Test backup creation',
        critical: false,
        timeout: 60000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[24]++;
          cov_cx0ufkpww().s[184]++;
          try {
            const result =
            /* istanbul ignore next */
            (cov_cx0ufkpww().s[185]++, await backup_recovery_1.backupRecovery.performFullBackup());
            /* istanbul ignore next */
            cov_cx0ufkpww().s[186]++;
            if (result.success) {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[29][0]++;
              cov_cx0ufkpww().s[187]++;
              return {
                success: true,
                message: `Backup created successfully (${this.formatBytes(result.totalSize)})`,
                details: {
                  size: result.totalSize,
                  duration: result.duration
                }
              };
            } else {
              /* istanbul ignore next */
              cov_cx0ufkpww().b[29][1]++;
              cov_cx0ufkpww().s[188]++;
              return {
                success: false,
                message: `Backup failed: ${result.error}`
              };
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_cx0ufkpww().s[189]++;
            return {
              success: false,
              message: `Backup test failed: ${error.message}`
            };
          }
        }
      }, {
        name: 'Recovery Plans',
        description: 'Validate recovery plan definitions',
        critical: false,
        timeout: 5000,
        test: async () => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[25]++;
          const plans =
          /* istanbul ignore next */
          (cov_cx0ufkpww().s[190]++, backup_recovery_1.backupRecovery.getRecoveryPlans());
          /* istanbul ignore next */
          cov_cx0ufkpww().s[191]++;
          if (plans.length > 0) {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[30][0]++;
            cov_cx0ufkpww().s[192]++;
            return {
              success: true,
              message: `${plans.length} recovery plans available`,
              details: {
                plans: plans.map(p => {
                  /* istanbul ignore next */
                  cov_cx0ufkpww().f[26]++;
                  cov_cx0ufkpww().s[193]++;
                  return p.name;
                })
              }
            };
          } else {
            /* istanbul ignore next */
            cov_cx0ufkpww().b[30][1]++;
            cov_cx0ufkpww().s[194]++;
            return {
              success: false,
              message: 'No recovery plans defined'
            };
          }
        }
      }]
    }];
  }
  /**
   * Create timeout promise
   */
  createTimeoutPromise(timeout) {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[27]++;
    cov_cx0ufkpww().s[195]++;
    return new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[28]++;
      cov_cx0ufkpww().s[196]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_cx0ufkpww().f[29]++;
        cov_cx0ufkpww().s[197]++;
        return reject(new Error('Test timeout'));
      }, timeout);
    });
  }
  /**
   * Generate recommendations based on validation results
   */
  generateRecommendations(results) {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[30]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[198]++, []);
    const failedCritical =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[199]++, results.filter(r => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[31]++;
      cov_cx0ufkpww().s[200]++;
      return /* istanbul ignore next */(cov_cx0ufkpww().b[31][0]++, r.status === 'FAIL') &&
      /* istanbul ignore next */
      (cov_cx0ufkpww().b[31][1]++, r.critical);
    }));
    const failedNonCritical =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[201]++, results.filter(r => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[32]++;
      cov_cx0ufkpww().s[202]++;
      return /* istanbul ignore next */(cov_cx0ufkpww().b[32][0]++, r.status === 'FAIL') &&
      /* istanbul ignore next */
      (cov_cx0ufkpww().b[32][1]++, !r.critical);
    }));
    const warnings =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[203]++, results.filter(r => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[33]++;
      cov_cx0ufkpww().s[204]++;
      return r.status === 'WARNING';
    }));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[205]++;
    if (failedCritical.length > 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[33][0]++;
      cov_cx0ufkpww().s[206]++;
      recommendations.push('CRITICAL: Fix all critical test failures before deployment');
      /* istanbul ignore next */
      cov_cx0ufkpww().s[207]++;
      failedCritical.forEach(test => {
        /* istanbul ignore next */
        cov_cx0ufkpww().f[34]++;
        cov_cx0ufkpww().s[208]++;
        recommendations.push(`  - ${test.category}: ${test.name} - ${test.message}`);
      });
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[33][1]++;
    }
    cov_cx0ufkpww().s[209]++;
    if (failedNonCritical.length > 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[34][0]++;
      cov_cx0ufkpww().s[210]++;
      recommendations.push('Address non-critical test failures for optimal performance');
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[34][1]++;
    }
    cov_cx0ufkpww().s[211]++;
    if (warnings.length > 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[35][0]++;
      cov_cx0ufkpww().s[212]++;
      recommendations.push('Review and address warning conditions');
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[35][1]++;
    }
    // Performance recommendations
    const slowTests =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[213]++, results.filter(r => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[35]++;
      cov_cx0ufkpww().s[214]++;
      return r.duration > 10000;
    }));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[215]++;
    if (slowTests.length > 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[36][0]++;
      cov_cx0ufkpww().s[216]++;
      recommendations.push('Some tests took longer than expected - monitor system performance');
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[36][1]++;
    }
    // Security recommendations
    const securityFailures =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[217]++, results.filter(r => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[36]++;
      cov_cx0ufkpww().s[218]++;
      return /* istanbul ignore next */(cov_cx0ufkpww().b[37][0]++, r.category === 'Security Validation') &&
      /* istanbul ignore next */
      (cov_cx0ufkpww().b[37][1]++, r.status === 'FAIL');
    }));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[219]++;
    if (securityFailures.length > 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[38][0]++;
      cov_cx0ufkpww().s[220]++;
      recommendations.push('Security validation failures detected - review security configuration');
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[38][1]++;
    }
    cov_cx0ufkpww().s[221]++;
    if (recommendations.length === 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[39][0]++;
      cov_cx0ufkpww().s[222]++;
      recommendations.push('All validations passed - system is ready for deployment');
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[39][1]++;
    }
    cov_cx0ufkpww().s[223]++;
    return recommendations;
  }
  /**
   * Save validation report
   */
  async saveValidationReport(report) {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[37]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[224]++, report.timestamp.toISOString().replace(/[:.]/g, '-'));
    const reportPath =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[225]++, (0, path_1.join)(process.cwd(), 'logs', `validation-report-${timestamp}.json`));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[226]++;
    (0, fs_1.writeFileSync)(reportPath, JSON.stringify(report, null, 2));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[227]++;
    logger_1.logger.info(`📊 Validation report saved: ${reportPath}`);
  }
  /**
   * Log validation summary
   */
  logValidationSummary(report) {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[38]++;
    cov_cx0ufkpww().s[228]++;
    logger_1.logger.info('\n📊 VALIDATION SUMMARY');
    /* istanbul ignore next */
    cov_cx0ufkpww().s[229]++;
    logger_1.logger.info('═'.repeat(50));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[230]++;
    logger_1.logger.info(`Environment: ${report.environment}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[231]++;
    logger_1.logger.info(`Duration: ${Math.round(report.duration / 1000)}s`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[232]++;
    logger_1.logger.info(`Total Tests: ${report.summary.total}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[233]++;
    logger_1.logger.info(`✅ Passed: ${report.summary.passed}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[234]++;
    logger_1.logger.info(`❌ Failed: ${report.summary.failed}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[235]++;
    logger_1.logger.info(`⚠️ Warnings: ${report.summary.warnings}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[236]++;
    logger_1.logger.info(`⏭️ Skipped: ${report.summary.skipped}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[237]++;
    logger_1.logger.info(`🚨 Critical Failures: ${report.summary.criticalFailed}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[238]++;
    logger_1.logger.info(`🚀 Deployment Ready: ${report.deploymentReady ?
    /* istanbul ignore next */
    (cov_cx0ufkpww().b[40][0]++, 'YES') :
    /* istanbul ignore next */
    (cov_cx0ufkpww().b[40][1]++, 'NO')}`);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[239]++;
    if (report.recommendations.length > 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[41][0]++;
      cov_cx0ufkpww().s[240]++;
      logger_1.logger.info('\n💡 RECOMMENDATIONS:');
      /* istanbul ignore next */
      cov_cx0ufkpww().s[241]++;
      report.recommendations.forEach(rec => {
        /* istanbul ignore next */
        cov_cx0ufkpww().f[39]++;
        cov_cx0ufkpww().s[242]++;
        logger_1.logger.info(`  • ${rec}`);
      });
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[41][1]++;
    }
    cov_cx0ufkpww().s[243]++;
    if (!report.deploymentReady) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[42][0]++;
      cov_cx0ufkpww().s[244]++;
      logger_1.logger.error('\n❌ DEPLOYMENT BLOCKED - Critical issues must be resolved');
    } else {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[42][1]++;
      cov_cx0ufkpww().s[245]++;
      logger_1.logger.info('\n✅ VALIDATION PASSED - System ready for deployment');
    }
  }
  /**
   * Get application version
   */
  getVersion() {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[40]++;
    cov_cx0ufkpww().s[246]++;
    try {
      /* istanbul ignore next */
      cov_cx0ufkpww().s[247]++;
      if ((0, fs_1.existsSync)('package.json')) {
        /* istanbul ignore next */
        cov_cx0ufkpww().b[43][0]++;
        const packageJson =
        /* istanbul ignore next */
        (cov_cx0ufkpww().s[248]++, JSON.parse((0, fs_1.readFileSync)('package.json', 'utf-8')));
        /* istanbul ignore next */
        cov_cx0ufkpww().s[249]++;
        return /* istanbul ignore next */(cov_cx0ufkpww().b[44][0]++, packageJson.version) ||
        /* istanbul ignore next */
        (cov_cx0ufkpww().b[44][1]++, '1.0.0');
      } else
      /* istanbul ignore next */
      {
        cov_cx0ufkpww().b[43][1]++;
      }
    } catch {
      // Ignore errors
    }
    /* istanbul ignore next */
    cov_cx0ufkpww().s[250]++;
    return '1.0.0';
  }
  /**
   * Format bytes utility
   */
  formatBytes(bytes) {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[41]++;
    cov_cx0ufkpww().s[251]++;
    if (bytes === 0) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[45][0]++;
      cov_cx0ufkpww().s[252]++;
      return '0 Bytes';
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[45][1]++;
    }
    const k =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[253]++, 1024);
    const sizes =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[254]++, ['Bytes', 'KB', 'MB', 'GB']);
    const i =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[255]++, Math.floor(Math.log(bytes) / Math.log(k)));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[256]++;
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }
  /**
   * Run specific validation suite
   */
  async runValidationSuite(suiteName) {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[42]++;
    const suite =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[257]++, this.validationSuites.find(s => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[43]++;
      cov_cx0ufkpww().s[258]++;
      return s.name === suiteName;
    }));
    /* istanbul ignore next */
    cov_cx0ufkpww().s[259]++;
    if (!suite) {
      /* istanbul ignore next */
      cov_cx0ufkpww().b[46][0]++;
      cov_cx0ufkpww().s[260]++;
      throw new Error(`Validation suite not found: ${suiteName}`);
    } else
    /* istanbul ignore next */
    {
      cov_cx0ufkpww().b[46][1]++;
    }
    cov_cx0ufkpww().s[261]++;
    logger_1.logger.info(`🧪 Running validation suite: ${suite.name}`);
    const results =
    /* istanbul ignore next */
    (cov_cx0ufkpww().s[262]++, []);
    /* istanbul ignore next */
    cov_cx0ufkpww().s[263]++;
    for (const test of suite.tests) {
      const testStartTime =
      /* istanbul ignore next */
      (cov_cx0ufkpww().s[264]++, Date.now());
      /* istanbul ignore next */
      cov_cx0ufkpww().s[265]++;
      try {
        const testResult =
        /* istanbul ignore next */
        (cov_cx0ufkpww().s[266]++, await Promise.race([test.test(), this.createTimeoutPromise(test.timeout)]));
        const duration =
        /* istanbul ignore next */
        (cov_cx0ufkpww().s[267]++, Date.now() - testStartTime);
        const status =
        /* istanbul ignore next */
        (cov_cx0ufkpww().s[268]++, testResult.success ?
        /* istanbul ignore next */
        (cov_cx0ufkpww().b[47][0]++, 'PASS') :
        /* istanbul ignore next */
        (cov_cx0ufkpww().b[47][1]++, 'FAIL'));
        /* istanbul ignore next */
        cov_cx0ufkpww().s[269]++;
        results.push({
          category: suite.name,
          name: test.name,
          status,
          message: testResult.message,
          details: testResult.details,
          duration,
          critical: test.critical
        });
      } catch (error) {
        const duration =
        /* istanbul ignore next */
        (cov_cx0ufkpww().s[270]++, Date.now() - testStartTime);
        /* istanbul ignore next */
        cov_cx0ufkpww().s[271]++;
        results.push({
          category: suite.name,
          name: test.name,
          status: 'FAIL',
          message: error.message === 'Test timeout' ?
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[48][0]++, 'Test timed out') :
          /* istanbul ignore next */
          (cov_cx0ufkpww().b[48][1]++, `Test error: ${error.message}`),
          details: {
            error: error.message
          },
          duration,
          critical: test.critical
        });
      }
    }
    /* istanbul ignore next */
    cov_cx0ufkpww().s[272]++;
    return results;
  }
  /**
   * Get available validation suites
   */
  getValidationSuites() {
    /* istanbul ignore next */
    cov_cx0ufkpww().f[44]++;
    cov_cx0ufkpww().s[273]++;
    return this.validationSuites.map(suite => {
      /* istanbul ignore next */
      cov_cx0ufkpww().f[45]++;
      cov_cx0ufkpww().s[274]++;
      return {
        ...suite,
        tests: suite.tests.map(test => {
          /* istanbul ignore next */
          cov_cx0ufkpww().f[46]++;
          cov_cx0ufkpww().s[275]++;
          return {
            name: test.name,
            description: test.description,
            critical: test.critical,
            timeout: test.timeout,
            test: undefined // Don't expose test functions
          };
        })
      };
    });
  }
}
/* istanbul ignore next */
cov_cx0ufkpww().s[276]++;
exports.FinalValidation = FinalValidation;
// Export singleton instance
/* istanbul ignore next */
cov_cx0ufkpww().s[277]++;
exports.finalValidation = new FinalValidation();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,