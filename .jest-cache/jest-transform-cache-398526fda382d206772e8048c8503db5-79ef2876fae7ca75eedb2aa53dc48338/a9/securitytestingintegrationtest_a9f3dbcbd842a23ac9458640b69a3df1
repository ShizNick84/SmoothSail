e6c0cf00c2e6613569d190436cbce14b
"use strict";
/**
 * Security Testing Integration Tests
 *
 * Comprehensive integration tests for the security testing suite including
 * penetration testing, vulnerability scanning, and compliance validation.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = require("../../core/logging/logger");
const encryption_service_1 = require("../../security/encryption-service");
const threat_detection_engine_1 = require("../../security/threat-detection-engine");
describe('Security Testing Integration', () => {
    let logger;
    let encryptionService;
    let threatDetection;
    beforeEach(async () => {
        logger = new logger_1.Logger('SecurityTestingIntegration');
        encryptionService = new encryption_service_1.EncryptionService();
        threatDetection = new threat_detection_engine_1.ThreatDetectionEngine();
    });
    it('should initialize security services', async () => {
        expect(logger).toBeDefined();
        expect(encryptionService).toBeDefined();
        expect(threatDetection).toBeDefined();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxOaWNrXFxEZXNrdG9wXFxTbW9vdGhTYWlsXFxzcmNcXHRlc3RzXFxzZWN1cml0eVxcc2VjdXJpdHktdGVzdGluZy5pbnRlZ3JhdGlvbi50ZXN0LnRzIiwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7R0FLRzs7QUFFSCxzREFBbUQ7QUFDbkQsMEVBQXNFO0FBQ3RFLG9GQUErRTtBQVcvRSxRQUFRLENBQUMsOEJBQThCLEVBQUUsR0FBRyxFQUFFO0lBQzVDLElBQUksTUFBYyxDQUFDO0lBQ25CLElBQUksaUJBQW9DLENBQUM7SUFDekMsSUFBSSxlQUFzQyxDQUFDO0lBRTNDLFVBQVUsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUNwQixNQUFNLEdBQUcsSUFBSSxlQUFNLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUNsRCxpQkFBaUIsR0FBRyxJQUFJLHNDQUFpQixFQUFFLENBQUM7UUFDNUMsZUFBZSxHQUFHLElBQUksK0NBQXFCLEVBQUUsQ0FBQztJQUNoRCxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxxQ0FBcUMsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNuRCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDN0IsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDeEMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3hDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxOaWNrXFxEZXNrdG9wXFxTbW9vdGhTYWlsXFxzcmNcXHRlc3RzXFxzZWN1cml0eVxcc2VjdXJpdHktdGVzdGluZy5pbnRlZ3JhdGlvbi50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBTZWN1cml0eSBUZXN0aW5nIEludGVncmF0aW9uIFRlc3RzXHJcbiAqIFxyXG4gKiBDb21wcmVoZW5zaXZlIGludGVncmF0aW9uIHRlc3RzIGZvciB0aGUgc2VjdXJpdHkgdGVzdGluZyBzdWl0ZSBpbmNsdWRpbmdcclxuICogcGVuZXRyYXRpb24gdGVzdGluZywgdnVsbmVyYWJpbGl0eSBzY2FubmluZywgYW5kIGNvbXBsaWFuY2UgdmFsaWRhdGlvbi5cclxuICovXHJcblxyXG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICcuLi8uLi9jb3JlL2xvZ2dpbmcvbG9nZ2VyJztcclxuaW1wb3J0IHsgRW5jcnlwdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZWN1cml0eS9lbmNyeXB0aW9uLXNlcnZpY2UnO1xyXG5pbXBvcnQgeyBUaHJlYXREZXRlY3Rpb25FbmdpbmUgfSBmcm9tICcuLi8uLi9zZWN1cml0eS90aHJlYXQtZGV0ZWN0aW9uLWVuZ2luZSc7XHJcbmltcG9ydCB7IFBlbmV0cmF0aW9uVGVzdGluZ1NlcnZpY2UsIFBlbmV0cmF0aW9uVGVzdENvbmZpZyB9IGZyb20gJy4uLy4uL3NlY3VyaXR5L3BlbmV0cmF0aW9uLXRlc3Rpbmctc2VydmljZSc7XHJcbmltcG9ydCB7IEF1dG9tYXRlZFNlY3VyaXR5VGVzdGluZ1N1aXRlLCBTZWN1cml0eVRlc3RTdWl0ZUNvbmZpZyB9IGZyb20gJy4uLy4uL3NlY3VyaXR5L2F1dG9tYXRlZC1zZWN1cml0eS10ZXN0aW5nJztcclxuaW1wb3J0IHsgQ29tcGxpYW5jZVRlc3RpbmdTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VjdXJpdHkvY29tcGxpYW5jZS10ZXN0aW5nJztcclxuaW1wb3J0IHsgU2VjdXJpdHlNb25pdG9yaW5nU2VydmljZSB9IGZyb20gJy4uLy4uL3NlY3VyaXR5L3NlY3VyaXR5LW1vbml0b3Jpbmctc2VydmljZSc7XHJcbmltcG9ydCB7IEluY2lkZW50UmVzcG9uc2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VjdXJpdHkvaW5jaWRlbnQtcmVzcG9uc2Utc2VydmljZSc7XHJcbmltcG9ydCB7IE5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9jb3JlL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9uLXNlcnZpY2UnO1xyXG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcy9wcm9taXNlcyc7XHJcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJztcclxuXHJcbmRlc2NyaWJlKCdTZWN1cml0eSBUZXN0aW5nIEludGVncmF0aW9uJywgKCkgPT4ge1xyXG4gIGxldCBsb2dnZXI6IExvZ2dlcjtcclxuICBsZXQgZW5jcnlwdGlvblNlcnZpY2U6IEVuY3J5cHRpb25TZXJ2aWNlO1xyXG4gIGxldCB0aHJlYXREZXRlY3Rpb246IFRocmVhdERldGVjdGlvbkVuZ2luZTtcclxuXHJcbiAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiB7XHJcbiAgICBsb2dnZXIgPSBuZXcgTG9nZ2VyKCdTZWN1cml0eVRlc3RpbmdJbnRlZ3JhdGlvbicpO1xyXG4gICAgZW5jcnlwdGlvblNlcnZpY2UgPSBuZXcgRW5jcnlwdGlvblNlcnZpY2UoKTtcclxuICAgIHRocmVhdERldGVjdGlvbiA9IG5ldyBUaHJlYXREZXRlY3Rpb25FbmdpbmUoKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ3Nob3VsZCBpbml0aWFsaXplIHNlY3VyaXR5IHNlcnZpY2VzJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgZXhwZWN0KGxvZ2dlcikudG9CZURlZmluZWQoKTtcclxuICAgIGV4cGVjdChlbmNyeXB0aW9uU2VydmljZSkudG9CZURlZmluZWQoKTtcclxuICAgIGV4cGVjdCh0aHJlYXREZXRlY3Rpb24pLnRvQmVEZWZpbmVkKCk7XHJcbiAgfSk7XHJcbn0pOyJdLCJ2ZXJzaW9uIjozfQ==