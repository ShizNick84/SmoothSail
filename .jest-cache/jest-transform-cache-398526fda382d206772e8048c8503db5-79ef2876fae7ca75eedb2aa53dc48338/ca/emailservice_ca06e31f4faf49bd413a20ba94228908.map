{"version":3,"names":["cov_fly0yp66p","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","nodemailer_1","__importDefault","require","logger_1","encryption_service_1","EmailNotificationType","exports","EmailPriority","EmailService","transporter","encryptionService","deliveryTracking","templates","isInitialized","constructor","EncryptionService","Map","initialize","logger","info","smtpConfig","loadSMTPConfig","default","createTransporter","host","port","secure","auth","tls","requireTLS","connectionTimeout","greetingTimeout","socketTimeout","verifyConnection","loadEmailTemplates","error","sendNotification","notification","Error","to","join","htmlContent","generateEmailContent","mailOptions","from","process","env","SMTP_FROM_ADDRESS","cc","bcc","subject","html","attachments","priority","mapPriorityToNodemailer","headers","id","result","sendMail","deliveryStatus","messageId","status","timestamp","Date","retryAttempts","retryCount","set","message","sendTradeExecutionNotification","data","now","Math","random","toString","substr","TRADE_EXECUTION","HIGH","NOTIFICATION_EMAIL","action","symbol","templateData","systemName","toISOString","quantity","price","pnl","balance","strategy","sendDailySummary","DAILY_SUMMARY","NORMAL","date","toDateString","totalTrades","winRate","totalPnL","bestTrade","worstTrade","sendSecurityAlert","SECURITY_ALERT","threatLevel","CRITICAL","SECURITY_EMAIL","filter","Boolean","incidentType","description","affectedSystems","getDeliveryStatus","notificationId","get","verify","requiredEnvVars","envVar","smtpPass","decrypt","SMTP_PASS","SMTP_HOST","parseInt","SMTP_PORT","SMTP_SECURE","user","SMTP_USER","pass","rejectUnauthorized","SMTP_TLS_REJECT_UNAUTHORIZED","template","content","key","value","Object","entries","regex","RegExp","replace","String","LOW","cleanupDeliveryTracking","olderThanHours","cutoffTime","delete","getStatistics","totalSent","totalFailed","pendingDeliveries","values"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\email-service.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * EMAIL NOTIFICATION SERVICE\r\n * =============================================================================\r\n * \r\n * Implements SMTP email service with HTML formatting, delivery tracking,\r\n * and security features for the AI crypto trading agent.\r\n * \r\n * Features:\r\n * - Rich HTML email templates\r\n * - Secure SMTP with authentication\r\n * - Delivery tracking and confirmation\r\n * - Email encryption and security\r\n * - Template-based notifications\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport nodemailer from 'nodemailer';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { EncryptionService } from '@/security/encryption-service';\r\n\r\n/**\r\n * Email notification types for different system events\r\n */\r\nexport enum EmailNotificationType {\r\n  TRADE_EXECUTION = 'TRADE_EXECUTION',\r\n  PROFIT_TARGET = 'PROFIT_TARGET',\r\n  STOP_LOSS = 'STOP_LOSS',\r\n  SYSTEM_ALERT = 'SYSTEM_ALERT',\r\n  SECURITY_ALERT = 'SECURITY_ALERT',\r\n  DAILY_SUMMARY = 'DAILY_SUMMARY',\r\n  WEEKLY_SUMMARY = 'WEEKLY_SUMMARY',\r\n  SYSTEM_HEALTH = 'SYSTEM_HEALTH',\r\n  EMERGENCY = 'EMERGENCY'\r\n}\r\n\r\n/**\r\n * Email priority levels for routing and delivery\r\n */\r\nexport enum EmailPriority {\r\n  LOW = 'low',\r\n  NORMAL = 'normal',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical'\r\n}\r\n\r\n/**\r\n * Email notification data structure\r\n */\r\nexport interface EmailNotification {\r\n  id: string;\r\n  type: EmailNotificationType;\r\n  priority: EmailPriority;\r\n  to: string[];\r\n  cc?: string[];\r\n  bcc?: string[];\r\n  subject: string;\r\n  templateData: Record<string, any>;\r\n  attachments?: EmailAttachment[];\r\n  timestamp: Date;\r\n  retryCount?: number;\r\n  deliveryStatus?: EmailDeliveryStatus;\r\n}\r\n\r\n/**\r\n * Email attachment structure\r\n */\r\nexport interface EmailAttachment {\r\n  filename: string;\r\n  content: Buffer | string;\r\n  contentType: string;\r\n  encoding?: string;\r\n}\r\n\r\n/**\r\n * Email delivery status tracking\r\n */\r\nexport interface EmailDeliveryStatus {\r\n  messageId: string;\r\n  status: 'pending' | 'sent' | 'delivered' | 'failed' | 'bounced';\r\n  timestamp: Date;\r\n  error?: string;\r\n  retryAttempts: number;\r\n}\r\n\r\n/**\r\n * SMTP configuration interface\r\n */\r\nexport interface SMTPConfig {\r\n  host: string;\r\n  port: number;\r\n  secure: boolean;\r\n  auth: {\r\n    user: string;\r\n    pass: string;\r\n  };\r\n  tls?: {\r\n    rejectUnauthorized: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * Email template data for different notification types\r\n */\r\nexport interface EmailTemplateData {\r\n  // Common fields\r\n  systemName: string;\r\n  timestamp: string;\r\n  \r\n  // Trading-specific fields\r\n  symbol?: string;\r\n  action?: string;\r\n  quantity?: number;\r\n  price?: number;\r\n  pnl?: number;\r\n  balance?: number;\r\n  \r\n  // System health fields\r\n  cpuUsage?: number;\r\n  ramUsage?: number;\r\n  diskUsage?: number;\r\n  networkStatus?: string;\r\n  \r\n  // Security fields\r\n  threatLevel?: string;\r\n  incidentType?: string;\r\n  affectedSystems?: string[];\r\n  \r\n  // Performance summary fields\r\n  totalTrades?: number;\r\n  winRate?: number;\r\n  totalPnL?: number;\r\n  bestTrade?: number;\r\n  worstTrade?: number;\r\n}\r\n\r\n/**\r\n * Email service class for handling all email notifications\r\n */\r\nexport class EmailService {\r\n  private transporter: nodemailer.Transporter;\r\n  private encryptionService: EncryptionService;\r\n  private deliveryTracking: Map<string, EmailDeliveryStatus>;\r\n  private templates: Map<EmailNotificationType, string>;\r\n  private isInitialized: boolean = false;\r\n\r\n  constructor() {\r\n    this.encryptionService = new EncryptionService();\r\n    this.deliveryTracking = new Map();\r\n    this.templates = new Map();\r\n  }\r\n\r\n  /**\r\n   * Initialize the email service with SMTP configuration\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('üìß Initializing email notification service...');\r\n\r\n      // Load SMTP configuration from environment\r\n      const smtpConfig = await this.loadSMTPConfig();\r\n      \r\n      // Create nodemailer transporter with security settings\r\n      this.transporter = nodemailer.createTransporter({\r\n        host: smtpConfig.host,\r\n        port: smtpConfig.port,\r\n        secure: smtpConfig.secure,\r\n        auth: smtpConfig.auth,\r\n        tls: smtpConfig.tls,\r\n        // Additional security settings\r\n        requireTLS: true,\r\n        connectionTimeout: 30000,\r\n        greetingTimeout: 30000,\r\n        socketTimeout: 30000\r\n      });\r\n\r\n      // Verify SMTP connection\r\n      await this.verifyConnection();\r\n\r\n      // Load email templates\r\n      await this.loadEmailTemplates();\r\n\r\n      this.isInitialized = true;\r\n      logger.info('‚úÖ Email notification service initialized successfully');\r\n\r\n    } catch (error) {\r\n      logger.error('‚ùå Failed to initialize email service:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send email notification with template and tracking\r\n   */\r\n  public async sendNotification(notification: EmailNotification): Promise<string> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('Email service not initialized');\r\n    }\r\n\r\n    try {\r\n      logger.info(`üìß Sending ${notification.type} email to ${notification.to.join(', ')}`);\r\n\r\n      // Generate HTML content from template\r\n      const htmlContent = await this.generateEmailContent(notification);\r\n\r\n      // Prepare email options\r\n      const mailOptions = {\r\n        from: process.env.SMTP_FROM_ADDRESS,\r\n        to: notification.to,\r\n        cc: notification.cc,\r\n        bcc: notification.bcc,\r\n        subject: notification.subject,\r\n        html: htmlContent,\r\n        attachments: notification.attachments,\r\n        priority: this.mapPriorityToNodemailer(notification.priority),\r\n        headers: {\r\n          'X-Trading-Agent': 'AI-Crypto-Trading-Agent',\r\n          'X-Notification-Type': notification.type,\r\n          'X-Notification-ID': notification.id\r\n        }\r\n      };\r\n\r\n      // Send email\r\n      const result = await this.transporter.sendMail(mailOptions);\r\n\r\n      // Track delivery status\r\n      const deliveryStatus: EmailDeliveryStatus = {\r\n        messageId: result.messageId,\r\n        status: 'sent',\r\n        timestamp: new Date(),\r\n        retryAttempts: notification.retryCount || 0\r\n      };\r\n\r\n      this.deliveryTracking.set(notification.id, deliveryStatus);\r\n\r\n      logger.info(`‚úÖ Email sent successfully: ${result.messageId}`);\r\n      return result.messageId;\r\n\r\n    } catch (error) {\r\n      logger.error(`‚ùå Failed to send email notification:`, error);\r\n      \r\n      // Update delivery status with error\r\n      const deliveryStatus: EmailDeliveryStatus = {\r\n        messageId: '',\r\n        status: 'failed',\r\n        timestamp: new Date(),\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        retryAttempts: (notification.retryCount || 0) + 1\r\n      };\r\n\r\n      this.deliveryTracking.set(notification.id, deliveryStatus);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send trade execution notification\r\n   */\r\n  public async sendTradeExecutionNotification(data: {\r\n    symbol: string;\r\n    action: 'BUY' | 'SELL';\r\n    quantity: number;\r\n    price: number;\r\n    pnl?: number;\r\n    balance: number;\r\n    strategy: string;\r\n    timestamp: Date;\r\n  }): Promise<string> {\r\n    const notification: EmailNotification = {\r\n      id: `trade_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: EmailNotificationType.TRADE_EXECUTION,\r\n      priority: EmailPriority.HIGH,\r\n      to: [process.env.NOTIFICATION_EMAIL!],\r\n      subject: `üöÄ Trade Executed: ${data.action} ${data.symbol}`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent',\r\n        timestamp: data.timestamp.toISOString(),\r\n        symbol: data.symbol,\r\n        action: data.action,\r\n        quantity: data.quantity,\r\n        price: data.price,\r\n        pnl: data.pnl,\r\n        balance: data.balance,\r\n        strategy: data.strategy\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    return await this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * Send daily performance summary\r\n   */\r\n  public async sendDailySummary(data: {\r\n    totalTrades: number;\r\n    winRate: number;\r\n    totalPnL: number;\r\n    bestTrade: number;\r\n    worstTrade: number;\r\n    balance: number;\r\n    date: Date;\r\n  }): Promise<string> {\r\n    const notification: EmailNotification = {\r\n      id: `daily_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: EmailNotificationType.DAILY_SUMMARY,\r\n      priority: EmailPriority.NORMAL,\r\n      to: [process.env.NOTIFICATION_EMAIL!],\r\n      subject: `üìä Daily Trading Summary - ${data.date.toDateString()}`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent',\r\n        timestamp: data.date.toISOString(),\r\n        totalTrades: data.totalTrades,\r\n        winRate: data.winRate,\r\n        totalPnL: data.totalPnL,\r\n        bestTrade: data.bestTrade,\r\n        worstTrade: data.worstTrade,\r\n        balance: data.balance\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    return await this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * Send security alert notification\r\n   */\r\n  public async sendSecurityAlert(data: {\r\n    threatLevel: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n    incidentType: string;\r\n    description: string;\r\n    affectedSystems: string[];\r\n    timestamp: Date;\r\n  }): Promise<string> {\r\n    const notification: EmailNotification = {\r\n      id: `security_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: EmailNotificationType.SECURITY_ALERT,\r\n      priority: data.threatLevel === 'CRITICAL' ? EmailPriority.CRITICAL : EmailPriority.HIGH,\r\n      to: [process.env.NOTIFICATION_EMAIL!, process.env.SECURITY_EMAIL!].filter(Boolean),\r\n      subject: `üö® Security Alert: ${data.threatLevel} - ${data.incidentType}`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent',\r\n        timestamp: data.timestamp.toISOString(),\r\n        threatLevel: data.threatLevel,\r\n        incidentType: data.incidentType,\r\n        description: data.description,\r\n        affectedSystems: data.affectedSystems\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    return await this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * Get delivery status for a notification\r\n   */\r\n  public getDeliveryStatus(notificationId: string): EmailDeliveryStatus | undefined {\r\n    return this.deliveryTracking.get(notificationId);\r\n  }\r\n\r\n  /**\r\n   * Verify SMTP connection\r\n   */\r\n  private async verifyConnection(): Promise<void> {\r\n    try {\r\n      await this.transporter.verify();\r\n      logger.info('‚úÖ SMTP connection verified successfully');\r\n    } catch (error) {\r\n      logger.error('‚ùå SMTP connection verification failed:', error);\r\n      throw new Error('SMTP connection failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load SMTP configuration from environment variables\r\n   */\r\n  private async loadSMTPConfig(): Promise<SMTPConfig> {\r\n    const requiredEnvVars = [\r\n      'SMTP_HOST',\r\n      'SMTP_PORT',\r\n      'SMTP_USER',\r\n      'SMTP_PASS',\r\n      'SMTP_FROM_ADDRESS'\r\n    ];\r\n\r\n    for (const envVar of requiredEnvVars) {\r\n      if (!process.env[envVar]) {\r\n        throw new Error(`Missing required environment variable: ${envVar}`);\r\n      }\r\n    }\r\n\r\n    // Decrypt SMTP password if encrypted\r\n    const smtpPass = await this.encryptionService.decrypt(process.env.SMTP_PASS!);\r\n\r\n    return {\r\n      host: process.env.SMTP_HOST!,\r\n      port: parseInt(process.env.SMTP_PORT!),\r\n      secure: process.env.SMTP_SECURE === 'true',\r\n      auth: {\r\n        user: process.env.SMTP_USER!,\r\n        pass: smtpPass\r\n      },\r\n      tls: {\r\n        rejectUnauthorized: process.env.SMTP_TLS_REJECT_UNAUTHORIZED !== 'false'\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Load email templates for different notification types\r\n   */\r\n  private async loadEmailTemplates(): Promise<void> {\r\n    // Trade execution template\r\n    this.templates.set(EmailNotificationType.TRADE_EXECUTION, `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">üöÄ Trade Executed</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <h2 style=\"color: #333;\">{{action}} {{symbol}}</h2>\r\n          <table style=\"width: 100%; border-collapse: collapse;\">\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Symbol:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">{{symbol}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Action:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">{{action}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Quantity:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">{{quantity}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Price:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${{price}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>P&L:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${{pnl}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Balance:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${{balance}}</td></tr>\r\n          </table>\r\n          <p style=\"margin-top: 20px; color: #666;\">Executed at {{timestamp}}</p>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    // Daily summary template\r\n    this.templates.set(EmailNotificationType.DAILY_SUMMARY, `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">üìä Daily Trading Summary</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <h2 style=\"color: #333;\">Performance Overview</h2>\r\n          <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px;\">\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Total Trades</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;\">{{totalTrades}}</p>\r\n            </div>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Win Rate</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;\">{{winRate}}%</p>\r\n            </div>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Total P&L</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: {{#if (gt totalPnL 0)}}#28a745{{else}}#dc3545{{/if}};\">${{totalPnL}}</p>\r\n            </div>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Balance</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;\">${{balance}}</p>\r\n            </div>\r\n          </div>\r\n          <p style=\"margin-top: 20px; color: #666;\">Report generated at {{timestamp}}</p>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    // Security alert template\r\n    this.templates.set(EmailNotificationType.SECURITY_ALERT, `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">üö® Security Alert</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <div style=\"background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\r\n            <h2 style=\"color: #856404; margin: 0;\">{{threatLevel}} Threat Detected</h2>\r\n            <p style=\"color: #856404; margin: 5px 0;\"><strong>Type:</strong> {{incidentType}}</p>\r\n          </div>\r\n          <h3 style=\"color: #333;\">Incident Details</h3>\r\n          <p style=\"color: #666;\">{{description}}</p>\r\n          <h3 style=\"color: #333;\">Affected Systems</h3>\r\n          <ul style=\"color: #666;\">\r\n            {{#each affectedSystems}}\r\n            <li>{{this}}</li>\r\n            {{/each}}\r\n          </ul>\r\n          <p style=\"margin-top: 20px; color: #666;\"><strong>Detected at:</strong> {{timestamp}}</p>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    logger.info('‚úÖ Email templates loaded successfully');\r\n  }\r\n\r\n  /**\r\n   * Generate HTML content from template and data\r\n   */\r\n  private async generateEmailContent(notification: EmailNotification): Promise<string> {\r\n    const template = this.templates.get(notification.type);\r\n    if (!template) {\r\n      throw new Error(`No template found for notification type: ${notification.type}`);\r\n    }\r\n\r\n    // Simple template replacement (in production, consider using a proper template engine)\r\n    let content = template;\r\n    \r\n    for (const [key, value] of Object.entries(notification.templateData)) {\r\n      const regex = new RegExp(`{{${key}}}`, 'g');\r\n      content = content.replace(regex, String(value));\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * Map email priority to nodemailer priority\r\n   */\r\n  private mapPriorityToNodemailer(priority: EmailPriority): 'high' | 'normal' | 'low' {\r\n    switch (priority) {\r\n      case EmailPriority.CRITICAL:\r\n      case EmailPriority.HIGH:\r\n        return 'high';\r\n      case EmailPriority.LOW:\r\n        return 'low';\r\n      default:\r\n        return 'normal';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up delivery tracking (remove old entries)\r\n   */\r\n  public cleanupDeliveryTracking(olderThanHours: number = 24): void {\r\n    const cutoffTime = new Date(Date.now() - (olderThanHours * 60 * 60 * 1000));\r\n    \r\n    for (const [id, status] of this.deliveryTracking.entries()) {\r\n      if (status.timestamp < cutoffTime) {\r\n        this.deliveryTracking.delete(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get email service statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalSent: number;\r\n    totalFailed: number;\r\n    pendingDeliveries: number;\r\n  } {\r\n    let totalSent = 0;\r\n    let totalFailed = 0;\r\n    let pendingDeliveries = 0;\r\n\r\n    for (const status of this.deliveryTracking.values()) {\r\n      switch (status.status) {\r\n        case 'sent':\r\n        case 'delivered':\r\n          totalSent++;\r\n          break;\r\n        case 'failed':\r\n        case 'bounced':\r\n          totalFailed++;\r\n          break;\r\n        case 'pending':\r\n          pendingDeliveries++;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return { totalSent, totalFailed, pendingDeliveries };\r\n  }\r\n}\r\n\r\nexport default EmailService;\r\n"],"mappings":"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","ignoreList":[]}