52bdcd410da7767ac6f8eed408e82c27
"use strict";

/**
 * =============================================================================
 * EMAIL NOTIFICATION SERVICE
 * =============================================================================
 *
 * Implements SMTP email service with HTML formatting, delivery tracking,
 * and security features for the AI crypto trading agent.
 *
 * Features:
 * - Rich HTML email templates
 * - Secure SMTP with authentication
 * - Delivery tracking and confirmation
 * - Email encryption and security
 * - Template-based notifications
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * =============================================================================
 */
/* istanbul ignore next */
function cov_fly0yp66p() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\email-service.ts";
  var hash = "a6a1b7b31255545dd9d1a21ba919d0d6de94661d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\email-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "2": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "3": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 86
        }
      },
      "4": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 59
        }
      },
      "5": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "6": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "7": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 43,
          column: 90
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "9": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "10": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "11": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 59
        }
      },
      "12": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 61
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "15": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 61
        }
      },
      "16": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "17": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "18": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 33
        }
      },
      "19": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 39
        }
      },
      "20": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 35
        }
      },
      "21": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 43
        }
      },
      "22": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 78
        }
      },
      "24": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "25": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "26": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "27": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 82
        }
      },
      "28": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 75,
          column: 58
        }
      },
      "29": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 88,
          column: 15
        }
      },
      "30": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 42
        }
      },
      "31": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 44
        }
      },
      "32": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 38
        }
      },
      "33": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 90
        }
      },
      "34": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 82
        }
      },
      "35": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "36": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "37": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 61
        }
      },
      "38": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "39": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 107
        }
      },
      "40": {
        start: {
          line: 111,
          column: 32
        },
        end: {
          line: 111,
          column: 77
        }
      },
      "41": {
        start: {
          line: 113,
          column: 32
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "42": {
        start: {
          line: 129,
          column: 27
        },
        end: {
          line: 129,
          column: 71
        }
      },
      "43": {
        start: {
          line: 131,
          column: 35
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "44": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 71
        }
      },
      "45": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 83
        }
      },
      "46": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 36
        }
      },
      "47": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 81
        }
      },
      "48": {
        start: {
          line: 144,
          column: 35
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "49": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 71
        }
      },
      "50": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 24
        }
      },
      "51": {
        start: {
          line: 159,
          column: 29
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "52": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 57
        }
      },
      "53": {
        start: {
          line: 184,
          column: 29
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "54": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 57
        }
      },
      "55": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "56": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 57
        }
      },
      "57": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "58": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "59": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 44
        }
      },
      "60": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 76
        }
      },
      "61": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 83
        }
      },
      "62": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 54
        }
      },
      "63": {
        start: {
          line: 249,
          column: 32
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "64": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "65": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "66": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 84
        }
      },
      "67": {
        start: {
          line: 262,
          column: 25
        },
        end: {
          line: 262,
          column: 84
        }
      },
      "68": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "69": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "70": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "71": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 352,
          column: 7
        }
      },
      "72": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 70
        }
      },
      "73": {
        start: {
          line: 359,
          column: 25
        },
        end: {
          line: 359,
          column: 62
        }
      },
      "74": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "75": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 93
        }
      },
      "76": {
        start: {
          line: 364,
          column: 22
        },
        end: {
          line: 364,
          column: 30
        }
      },
      "77": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "78": {
        start: {
          line: 366,
          column: 26
        },
        end: {
          line: 366,
          column: 55
        }
      },
      "79": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 60
        }
      },
      "80": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 23
        }
      },
      "81": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "82": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 30
        }
      },
      "83": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 29
        }
      },
      "84": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 32
        }
      },
      "85": {
        start: {
          line: 389,
          column: 27
        },
        end: {
          line: 389,
          column: 83
        }
      },
      "86": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "87": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "88": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 49
        }
      },
      "89": {
        start: {
          line: 400,
          column: 24
        },
        end: {
          line: 400,
          column: 25
        }
      },
      "90": {
        start: {
          line: 401,
          column: 26
        },
        end: {
          line: 401,
          column: 27
        }
      },
      "91": {
        start: {
          line: 402,
          column: 32
        },
        end: {
          line: 402,
          column: 33
        }
      },
      "92": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "93": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "94": {
        start: {
          line: 407,
          column: 20
        },
        end: {
          line: 407,
          column: 32
        }
      },
      "95": {
        start: {
          line: 408,
          column: 20
        },
        end: {
          line: 408,
          column: 26
        }
      },
      "96": {
        start: {
          line: 411,
          column: 20
        },
        end: {
          line: 411,
          column: 34
        }
      },
      "97": {
        start: {
          line: 412,
          column: 20
        },
        end: {
          line: 412,
          column: 26
        }
      },
      "98": {
        start: {
          line: 414,
          column: 20
        },
        end: {
          line: 414,
          column: 40
        }
      },
      "99": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 415,
          column: 26
        }
      },
      "100": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 61
        }
      },
      "101": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 421,
          column: 36
        }
      },
      "102": {
        start: {
          line: 422,
          column: 0
        },
        end: {
          line: 422,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 57
          }
        },
        loc: {
          start: {
            line: 21,
            column: 71
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 1
          },
          end: {
            line: 33,
            column: 2
          }
        },
        loc: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 1
          },
          end: {
            line: 48,
            column: 2
          }
        },
        loc: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 18
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 23
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 104
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 47
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 158
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 33
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 183
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 34
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 207
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 229
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 29
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 235
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 248
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 279
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        loc: {
          start: {
            line: 358,
            column: 45
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 358
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 38
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 374
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 49
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 388
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 20
          },
          end: {
            line: 419,
            column: 5
          }
        },
        line: 399
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 23,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 22,
            column: 40
          }
        }, {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 22,
            column: 61
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 15
          }
        }, {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 33
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 3
          },
          end: {
            line: 43,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 3
          },
          end: {
            line: 43,
            column: 24
          }
        }, {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 87
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 3
          },
          end: {
            line: 53,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 3
          },
          end: {
            line: 53,
            column: 16
          }
        }, {
          start: {
            line: 53,
            column: 21
          },
          end: {
            line: 53,
            column: 63
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 135,
            column: 31
          },
          end: {
            line: 135,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 31
          },
          end: {
            line: 135,
            column: 54
          }
        }, {
          start: {
            line: 135,
            column: 58
          },
          end: {
            line: 135,
            column: 59
          }
        }],
        line: 135
      },
      "7": {
        loc: {
          start: {
            line: 148,
            column: 23
          },
          end: {
            line: 148,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 61
          }
        }, {
          start: {
            line: 148,
            column: 64
          },
          end: {
            line: 148,
            column: 79
          }
        }],
        line: 148
      },
      "8": {
        loc: {
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 149,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 149,
            column: 55
          }
        }, {
          start: {
            line: 149,
            column: 59
          },
          end: {
            line: 149,
            column: 60
          }
        }],
        line: 149
      },
      "9": {
        loc: {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 56
          },
          end: {
            line: 211,
            column: 78
          }
        }, {
          start: {
            line: 211,
            column: 81
          },
          end: {
            line: 211,
            column: 99
          }
        }],
        line: 211
      },
      "10": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "11": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 362,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "12": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 376,
            column: 40
          }
        }, {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 378,
            column: 30
          }
        }, {
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 380,
            column: 29
          }
        }, {
          start: {
            line: 381,
            column: 12
          },
          end: {
            line: 382,
            column: 32
          }
        }],
        line: 375
      },
      "13": {
        loc: {
          start: {
            line: 388,
            column: 28
          },
          end: {
            line: 388,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 388,
            column: 45
          },
          end: {
            line: 388,
            column: 47
          }
        }],
        line: 388
      },
      "14": {
        loc: {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "15": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 405,
            column: 28
          }
        }, {
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 408,
            column: 26
          }
        }, {
          start: {
            line: 409,
            column: 16
          },
          end: {
            line: 409,
            column: 30
          }
        }, {
          start: {
            line: 410,
            column: 16
          },
          end: {
            line: 412,
            column: 26
          }
        }, {
          start: {
            line: 413,
            column: 16
          },
          end: {
            line: 415,
            column: 26
          }
        }],
        line: 404
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\email-service.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\email-service.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * EMAIL NOTIFICATION SERVICE\r\n * =============================================================================\r\n * \r\n * Implements SMTP email service with HTML formatting, delivery tracking,\r\n * and security features for the AI crypto trading agent.\r\n * \r\n * Features:\r\n * - Rich HTML email templates\r\n * - Secure SMTP with authentication\r\n * - Delivery tracking and confirmation\r\n * - Email encryption and security\r\n * - Template-based notifications\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport nodemailer from 'nodemailer';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { EncryptionService } from '@/security/encryption-service';\r\n\r\n/**\r\n * Email notification types for different system events\r\n */\r\nexport enum EmailNotificationType {\r\n  TRADE_EXECUTION = 'TRADE_EXECUTION',\r\n  PROFIT_TARGET = 'PROFIT_TARGET',\r\n  STOP_LOSS = 'STOP_LOSS',\r\n  SYSTEM_ALERT = 'SYSTEM_ALERT',\r\n  SECURITY_ALERT = 'SECURITY_ALERT',\r\n  DAILY_SUMMARY = 'DAILY_SUMMARY',\r\n  WEEKLY_SUMMARY = 'WEEKLY_SUMMARY',\r\n  SYSTEM_HEALTH = 'SYSTEM_HEALTH',\r\n  EMERGENCY = 'EMERGENCY'\r\n}\r\n\r\n/**\r\n * Email priority levels for routing and delivery\r\n */\r\nexport enum EmailPriority {\r\n  LOW = 'low',\r\n  NORMAL = 'normal',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical'\r\n}\r\n\r\n/**\r\n * Email notification data structure\r\n */\r\nexport interface EmailNotification {\r\n  id: string;\r\n  type: EmailNotificationType;\r\n  priority: EmailPriority;\r\n  to: string[];\r\n  cc?: string[];\r\n  bcc?: string[];\r\n  subject: string;\r\n  templateData: Record<string, any>;\r\n  attachments?: EmailAttachment[];\r\n  timestamp: Date;\r\n  retryCount?: number;\r\n  deliveryStatus?: EmailDeliveryStatus;\r\n}\r\n\r\n/**\r\n * Email attachment structure\r\n */\r\nexport interface EmailAttachment {\r\n  filename: string;\r\n  content: Buffer | string;\r\n  contentType: string;\r\n  encoding?: string;\r\n}\r\n\r\n/**\r\n * Email delivery status tracking\r\n */\r\nexport interface EmailDeliveryStatus {\r\n  messageId: string;\r\n  status: 'pending' | 'sent' | 'delivered' | 'failed' | 'bounced';\r\n  timestamp: Date;\r\n  error?: string;\r\n  retryAttempts: number;\r\n}\r\n\r\n/**\r\n * SMTP configuration interface\r\n */\r\nexport interface SMTPConfig {\r\n  host: string;\r\n  port: number;\r\n  secure: boolean;\r\n  auth: {\r\n    user: string;\r\n    pass: string;\r\n  };\r\n  tls?: {\r\n    rejectUnauthorized: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * Email template data for different notification types\r\n */\r\nexport interface EmailTemplateData {\r\n  // Common fields\r\n  systemName: string;\r\n  timestamp: string;\r\n  \r\n  // Trading-specific fields\r\n  symbol?: string;\r\n  action?: string;\r\n  quantity?: number;\r\n  price?: number;\r\n  pnl?: number;\r\n  balance?: number;\r\n  \r\n  // System health fields\r\n  cpuUsage?: number;\r\n  ramUsage?: number;\r\n  diskUsage?: number;\r\n  networkStatus?: string;\r\n  \r\n  // Security fields\r\n  threatLevel?: string;\r\n  incidentType?: string;\r\n  affectedSystems?: string[];\r\n  \r\n  // Performance summary fields\r\n  totalTrades?: number;\r\n  winRate?: number;\r\n  totalPnL?: number;\r\n  bestTrade?: number;\r\n  worstTrade?: number;\r\n}\r\n\r\n/**\r\n * Email service class for handling all email notifications\r\n */\r\nexport class EmailService {\r\n  private transporter: nodemailer.Transporter;\r\n  private encryptionService: EncryptionService;\r\n  private deliveryTracking: Map<string, EmailDeliveryStatus>;\r\n  private templates: Map<EmailNotificationType, string>;\r\n  private isInitialized: boolean = false;\r\n\r\n  constructor() {\r\n    this.encryptionService = new EncryptionService();\r\n    this.deliveryTracking = new Map();\r\n    this.templates = new Map();\r\n  }\r\n\r\n  /**\r\n   * Initialize the email service with SMTP configuration\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDCE7 Initializing email notification service...');\r\n\r\n      // Load SMTP configuration from environment\r\n      const smtpConfig = await this.loadSMTPConfig();\r\n      \r\n      // Create nodemailer transporter with security settings\r\n      this.transporter = nodemailer.createTransporter({\r\n        host: smtpConfig.host,\r\n        port: smtpConfig.port,\r\n        secure: smtpConfig.secure,\r\n        auth: smtpConfig.auth,\r\n        tls: smtpConfig.tls,\r\n        // Additional security settings\r\n        requireTLS: true,\r\n        connectionTimeout: 30000,\r\n        greetingTimeout: 30000,\r\n        socketTimeout: 30000\r\n      });\r\n\r\n      // Verify SMTP connection\r\n      await this.verifyConnection();\r\n\r\n      // Load email templates\r\n      await this.loadEmailTemplates();\r\n\r\n      this.isInitialized = true;\r\n      logger.info('\u2705 Email notification service initialized successfully');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize email service:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send email notification with template and tracking\r\n   */\r\n  public async sendNotification(notification: EmailNotification): Promise<string> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('Email service not initialized');\r\n    }\r\n\r\n    try {\r\n      logger.info(`\uD83D\uDCE7 Sending ${notification.type} email to ${notification.to.join(', ')}`);\r\n\r\n      // Generate HTML content from template\r\n      const htmlContent = await this.generateEmailContent(notification);\r\n\r\n      // Prepare email options\r\n      const mailOptions = {\r\n        from: process.env.SMTP_FROM_ADDRESS,\r\n        to: notification.to,\r\n        cc: notification.cc,\r\n        bcc: notification.bcc,\r\n        subject: notification.subject,\r\n        html: htmlContent,\r\n        attachments: notification.attachments,\r\n        priority: this.mapPriorityToNodemailer(notification.priority),\r\n        headers: {\r\n          'X-Trading-Agent': 'AI-Crypto-Trading-Agent',\r\n          'X-Notification-Type': notification.type,\r\n          'X-Notification-ID': notification.id\r\n        }\r\n      };\r\n\r\n      // Send email\r\n      const result = await this.transporter.sendMail(mailOptions);\r\n\r\n      // Track delivery status\r\n      const deliveryStatus: EmailDeliveryStatus = {\r\n        messageId: result.messageId,\r\n        status: 'sent',\r\n        timestamp: new Date(),\r\n        retryAttempts: notification.retryCount || 0\r\n      };\r\n\r\n      this.deliveryTracking.set(notification.id, deliveryStatus);\r\n\r\n      logger.info(`\u2705 Email sent successfully: ${result.messageId}`);\r\n      return result.messageId;\r\n\r\n    } catch (error) {\r\n      logger.error(`\u274C Failed to send email notification:`, error);\r\n      \r\n      // Update delivery status with error\r\n      const deliveryStatus: EmailDeliveryStatus = {\r\n        messageId: '',\r\n        status: 'failed',\r\n        timestamp: new Date(),\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        retryAttempts: (notification.retryCount || 0) + 1\r\n      };\r\n\r\n      this.deliveryTracking.set(notification.id, deliveryStatus);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send trade execution notification\r\n   */\r\n  public async sendTradeExecutionNotification(data: {\r\n    symbol: string;\r\n    action: 'BUY' | 'SELL';\r\n    quantity: number;\r\n    price: number;\r\n    pnl?: number;\r\n    balance: number;\r\n    strategy: string;\r\n    timestamp: Date;\r\n  }): Promise<string> {\r\n    const notification: EmailNotification = {\r\n      id: `trade_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: EmailNotificationType.TRADE_EXECUTION,\r\n      priority: EmailPriority.HIGH,\r\n      to: [process.env.NOTIFICATION_EMAIL!],\r\n      subject: `\uD83D\uDE80 Trade Executed: ${data.action} ${data.symbol}`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent',\r\n        timestamp: data.timestamp.toISOString(),\r\n        symbol: data.symbol,\r\n        action: data.action,\r\n        quantity: data.quantity,\r\n        price: data.price,\r\n        pnl: data.pnl,\r\n        balance: data.balance,\r\n        strategy: data.strategy\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    return await this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * Send daily performance summary\r\n   */\r\n  public async sendDailySummary(data: {\r\n    totalTrades: number;\r\n    winRate: number;\r\n    totalPnL: number;\r\n    bestTrade: number;\r\n    worstTrade: number;\r\n    balance: number;\r\n    date: Date;\r\n  }): Promise<string> {\r\n    const notification: EmailNotification = {\r\n      id: `daily_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: EmailNotificationType.DAILY_SUMMARY,\r\n      priority: EmailPriority.NORMAL,\r\n      to: [process.env.NOTIFICATION_EMAIL!],\r\n      subject: `\uD83D\uDCCA Daily Trading Summary - ${data.date.toDateString()}`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent',\r\n        timestamp: data.date.toISOString(),\r\n        totalTrades: data.totalTrades,\r\n        winRate: data.winRate,\r\n        totalPnL: data.totalPnL,\r\n        bestTrade: data.bestTrade,\r\n        worstTrade: data.worstTrade,\r\n        balance: data.balance\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    return await this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * Send security alert notification\r\n   */\r\n  public async sendSecurityAlert(data: {\r\n    threatLevel: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n    incidentType: string;\r\n    description: string;\r\n    affectedSystems: string[];\r\n    timestamp: Date;\r\n  }): Promise<string> {\r\n    const notification: EmailNotification = {\r\n      id: `security_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: EmailNotificationType.SECURITY_ALERT,\r\n      priority: data.threatLevel === 'CRITICAL' ? EmailPriority.CRITICAL : EmailPriority.HIGH,\r\n      to: [process.env.NOTIFICATION_EMAIL!, process.env.SECURITY_EMAIL!].filter(Boolean),\r\n      subject: `\uD83D\uDEA8 Security Alert: ${data.threatLevel} - ${data.incidentType}`,\r\n      templateData: {\r\n        systemName: 'AI Crypto Trading Agent',\r\n        timestamp: data.timestamp.toISOString(),\r\n        threatLevel: data.threatLevel,\r\n        incidentType: data.incidentType,\r\n        description: data.description,\r\n        affectedSystems: data.affectedSystems\r\n      },\r\n      timestamp: new Date()\r\n    };\r\n\r\n    return await this.sendNotification(notification);\r\n  }\r\n\r\n  /**\r\n   * Get delivery status for a notification\r\n   */\r\n  public getDeliveryStatus(notificationId: string): EmailDeliveryStatus | undefined {\r\n    return this.deliveryTracking.get(notificationId);\r\n  }\r\n\r\n  /**\r\n   * Verify SMTP connection\r\n   */\r\n  private async verifyConnection(): Promise<void> {\r\n    try {\r\n      await this.transporter.verify();\r\n      logger.info('\u2705 SMTP connection verified successfully');\r\n    } catch (error) {\r\n      logger.error('\u274C SMTP connection verification failed:', error);\r\n      throw new Error('SMTP connection failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load SMTP configuration from environment variables\r\n   */\r\n  private async loadSMTPConfig(): Promise<SMTPConfig> {\r\n    const requiredEnvVars = [\r\n      'SMTP_HOST',\r\n      'SMTP_PORT',\r\n      'SMTP_USER',\r\n      'SMTP_PASS',\r\n      'SMTP_FROM_ADDRESS'\r\n    ];\r\n\r\n    for (const envVar of requiredEnvVars) {\r\n      if (!process.env[envVar]) {\r\n        throw new Error(`Missing required environment variable: ${envVar}`);\r\n      }\r\n    }\r\n\r\n    // Decrypt SMTP password if encrypted\r\n    const smtpPass = await this.encryptionService.decrypt(process.env.SMTP_PASS!);\r\n\r\n    return {\r\n      host: process.env.SMTP_HOST!,\r\n      port: parseInt(process.env.SMTP_PORT!),\r\n      secure: process.env.SMTP_SECURE === 'true',\r\n      auth: {\r\n        user: process.env.SMTP_USER!,\r\n        pass: smtpPass\r\n      },\r\n      tls: {\r\n        rejectUnauthorized: process.env.SMTP_TLS_REJECT_UNAUTHORIZED !== 'false'\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Load email templates for different notification types\r\n   */\r\n  private async loadEmailTemplates(): Promise<void> {\r\n    // Trade execution template\r\n    this.templates.set(EmailNotificationType.TRADE_EXECUTION, `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">\uD83D\uDE80 Trade Executed</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <h2 style=\"color: #333;\">{{action}} {{symbol}}</h2>\r\n          <table style=\"width: 100%; border-collapse: collapse;\">\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Symbol:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">{{symbol}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Action:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">{{action}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Quantity:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">{{quantity}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Price:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${{price}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>P&L:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${{pnl}}</td></tr>\r\n            <tr><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\"><strong>Balance:</strong></td><td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${{balance}}</td></tr>\r\n          </table>\r\n          <p style=\"margin-top: 20px; color: #666;\">Executed at {{timestamp}}</p>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    // Daily summary template\r\n    this.templates.set(EmailNotificationType.DAILY_SUMMARY, `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">\uD83D\uDCCA Daily Trading Summary</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <h2 style=\"color: #333;\">Performance Overview</h2>\r\n          <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px;\">\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Total Trades</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;\">{{totalTrades}}</p>\r\n            </div>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Win Rate</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;\">{{winRate}}%</p>\r\n            </div>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Total P&L</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: {{#if (gt totalPnL 0)}}#28a745{{else}}#dc3545{{/if}};\">${{totalPnL}}</p>\r\n            </div>\r\n            <div style=\"background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\r\n              <h3 style=\"margin: 0; color: #667eea;\">Balance</h3>\r\n              <p style=\"font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;\">${{balance}}</p>\r\n            </div>\r\n          </div>\r\n          <p style=\"margin-top: 20px; color: #666;\">Report generated at {{timestamp}}</p>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    // Security alert template\r\n    this.templates.set(EmailNotificationType.SECURITY_ALERT, `\r\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n        <div style=\"background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); padding: 20px; text-align: center;\">\r\n          <h1 style=\"color: white; margin: 0;\">\uD83D\uDEA8 Security Alert</h1>\r\n        </div>\r\n        <div style=\"padding: 20px; background: #f8f9fa;\">\r\n          <div style=\"background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 8px; margin-bottom: 20px;\">\r\n            <h2 style=\"color: #856404; margin: 0;\">{{threatLevel}} Threat Detected</h2>\r\n            <p style=\"color: #856404; margin: 5px 0;\"><strong>Type:</strong> {{incidentType}}</p>\r\n          </div>\r\n          <h3 style=\"color: #333;\">Incident Details</h3>\r\n          <p style=\"color: #666;\">{{description}}</p>\r\n          <h3 style=\"color: #333;\">Affected Systems</h3>\r\n          <ul style=\"color: #666;\">\r\n            {{#each affectedSystems}}\r\n            <li>{{this}}</li>\r\n            {{/each}}\r\n          </ul>\r\n          <p style=\"margin-top: 20px; color: #666;\"><strong>Detected at:</strong> {{timestamp}}</p>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    logger.info('\u2705 Email templates loaded successfully');\r\n  }\r\n\r\n  /**\r\n   * Generate HTML content from template and data\r\n   */\r\n  private async generateEmailContent(notification: EmailNotification): Promise<string> {\r\n    const template = this.templates.get(notification.type);\r\n    if (!template) {\r\n      throw new Error(`No template found for notification type: ${notification.type}`);\r\n    }\r\n\r\n    // Simple template replacement (in production, consider using a proper template engine)\r\n    let content = template;\r\n    \r\n    for (const [key, value] of Object.entries(notification.templateData)) {\r\n      const regex = new RegExp(`{{${key}}}`, 'g');\r\n      content = content.replace(regex, String(value));\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * Map email priority to nodemailer priority\r\n   */\r\n  private mapPriorityToNodemailer(priority: EmailPriority): 'high' | 'normal' | 'low' {\r\n    switch (priority) {\r\n      case EmailPriority.CRITICAL:\r\n      case EmailPriority.HIGH:\r\n        return 'high';\r\n      case EmailPriority.LOW:\r\n        return 'low';\r\n      default:\r\n        return 'normal';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up delivery tracking (remove old entries)\r\n   */\r\n  public cleanupDeliveryTracking(olderThanHours: number = 24): void {\r\n    const cutoffTime = new Date(Date.now() - (olderThanHours * 60 * 60 * 1000));\r\n    \r\n    for (const [id, status] of this.deliveryTracking.entries()) {\r\n      if (status.timestamp < cutoffTime) {\r\n        this.deliveryTracking.delete(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get email service statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalSent: number;\r\n    totalFailed: number;\r\n    pendingDeliveries: number;\r\n  } {\r\n    let totalSent = 0;\r\n    let totalFailed = 0;\r\n    let pendingDeliveries = 0;\r\n\r\n    for (const status of this.deliveryTracking.values()) {\r\n      switch (status.status) {\r\n        case 'sent':\r\n        case 'delivered':\r\n          totalSent++;\r\n          break;\r\n        case 'failed':\r\n        case 'bounced':\r\n          totalFailed++;\r\n          break;\r\n        case 'pending':\r\n          pendingDeliveries++;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return { totalSent, totalFailed, pendingDeliveries };\r\n  }\r\n}\r\n\r\nexport default EmailService;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a6a1b7b31255545dd9d1a21ba919d0d6de94661d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fly0yp66p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fly0yp66p();
var __importDefault =
/* istanbul ignore next */
(cov_fly0yp66p().s[0]++,
/* istanbul ignore next */
(cov_fly0yp66p().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_fly0yp66p().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_fly0yp66p().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_fly0yp66p().f[0]++;
  cov_fly0yp66p().s[1]++;
  return /* istanbul ignore next */(cov_fly0yp66p().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_fly0yp66p().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_fly0yp66p().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_fly0yp66p().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_fly0yp66p().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_fly0yp66p().s[3]++;
exports.EmailService = exports.EmailPriority = exports.EmailNotificationType = void 0;
const nodemailer_1 =
/* istanbul ignore next */
(cov_fly0yp66p().s[4]++, __importDefault(require("nodemailer")));
const logger_1 =
/* istanbul ignore next */
(cov_fly0yp66p().s[5]++, require("@/core/logging/logger"));
const encryption_service_1 =
/* istanbul ignore next */
(cov_fly0yp66p().s[6]++, require("@/security/encryption-service"));
/**
 * Email notification types for different system events
 */
var EmailNotificationType;
/* istanbul ignore next */
cov_fly0yp66p().s[7]++;
(function (EmailNotificationType) {
  /* istanbul ignore next */
  cov_fly0yp66p().f[1]++;
  cov_fly0yp66p().s[8]++;
  EmailNotificationType["TRADE_EXECUTION"] = "TRADE_EXECUTION";
  /* istanbul ignore next */
  cov_fly0yp66p().s[9]++;
  EmailNotificationType["PROFIT_TARGET"] = "PROFIT_TARGET";
  /* istanbul ignore next */
  cov_fly0yp66p().s[10]++;
  EmailNotificationType["STOP_LOSS"] = "STOP_LOSS";
  /* istanbul ignore next */
  cov_fly0yp66p().s[11]++;
  EmailNotificationType["SYSTEM_ALERT"] = "SYSTEM_ALERT";
  /* istanbul ignore next */
  cov_fly0yp66p().s[12]++;
  EmailNotificationType["SECURITY_ALERT"] = "SECURITY_ALERT";
  /* istanbul ignore next */
  cov_fly0yp66p().s[13]++;
  EmailNotificationType["DAILY_SUMMARY"] = "DAILY_SUMMARY";
  /* istanbul ignore next */
  cov_fly0yp66p().s[14]++;
  EmailNotificationType["WEEKLY_SUMMARY"] = "WEEKLY_SUMMARY";
  /* istanbul ignore next */
  cov_fly0yp66p().s[15]++;
  EmailNotificationType["SYSTEM_HEALTH"] = "SYSTEM_HEALTH";
  /* istanbul ignore next */
  cov_fly0yp66p().s[16]++;
  EmailNotificationType["EMERGENCY"] = "EMERGENCY";
})(
/* istanbul ignore next */
(cov_fly0yp66p().b[3][0]++, EmailNotificationType) ||
/* istanbul ignore next */
(cov_fly0yp66p().b[3][1]++, exports.EmailNotificationType = EmailNotificationType = {}));
/**
 * Email priority levels for routing and delivery
 */
var EmailPriority;
/* istanbul ignore next */
cov_fly0yp66p().s[17]++;
(function (EmailPriority) {
  /* istanbul ignore next */
  cov_fly0yp66p().f[2]++;
  cov_fly0yp66p().s[18]++;
  EmailPriority["LOW"] = "low";
  /* istanbul ignore next */
  cov_fly0yp66p().s[19]++;
  EmailPriority["NORMAL"] = "normal";
  /* istanbul ignore next */
  cov_fly0yp66p().s[20]++;
  EmailPriority["HIGH"] = "high";
  /* istanbul ignore next */
  cov_fly0yp66p().s[21]++;
  EmailPriority["CRITICAL"] = "critical";
})(
/* istanbul ignore next */
(cov_fly0yp66p().b[4][0]++, EmailPriority) ||
/* istanbul ignore next */
(cov_fly0yp66p().b[4][1]++, exports.EmailPriority = EmailPriority = {}));
/**
 * Email service class for handling all email notifications
 */
class EmailService {
  transporter;
  encryptionService;
  deliveryTracking;
  templates;
  isInitialized =
  /* istanbul ignore next */
  (cov_fly0yp66p().s[22]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_fly0yp66p().f[3]++;
    cov_fly0yp66p().s[23]++;
    this.encryptionService = new encryption_service_1.EncryptionService();
    /* istanbul ignore next */
    cov_fly0yp66p().s[24]++;
    this.deliveryTracking = new Map();
    /* istanbul ignore next */
    cov_fly0yp66p().s[25]++;
    this.templates = new Map();
  }
  /**
   * Initialize the email service with SMTP configuration
   */
  async initialize() {
    /* istanbul ignore next */
    cov_fly0yp66p().f[4]++;
    cov_fly0yp66p().s[26]++;
    try {
      /* istanbul ignore next */
      cov_fly0yp66p().s[27]++;
      logger_1.logger.info('📧 Initializing email notification service...');
      // Load SMTP configuration from environment
      const smtpConfig =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[28]++, await this.loadSMTPConfig());
      // Create nodemailer transporter with security settings
      /* istanbul ignore next */
      cov_fly0yp66p().s[29]++;
      this.transporter = nodemailer_1.default.createTransporter({
        host: smtpConfig.host,
        port: smtpConfig.port,
        secure: smtpConfig.secure,
        auth: smtpConfig.auth,
        tls: smtpConfig.tls,
        // Additional security settings
        requireTLS: true,
        connectionTimeout: 30000,
        greetingTimeout: 30000,
        socketTimeout: 30000
      });
      // Verify SMTP connection
      /* istanbul ignore next */
      cov_fly0yp66p().s[30]++;
      await this.verifyConnection();
      // Load email templates
      /* istanbul ignore next */
      cov_fly0yp66p().s[31]++;
      await this.loadEmailTemplates();
      /* istanbul ignore next */
      cov_fly0yp66p().s[32]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_fly0yp66p().s[33]++;
      logger_1.logger.info('✅ Email notification service initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_fly0yp66p().s[34]++;
      logger_1.logger.error('❌ Failed to initialize email service:', error);
      /* istanbul ignore next */
      cov_fly0yp66p().s[35]++;
      throw error;
    }
  }
  /**
   * Send email notification with template and tracking
   */
  async sendNotification(notification) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[5]++;
    cov_fly0yp66p().s[36]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_fly0yp66p().b[5][0]++;
      cov_fly0yp66p().s[37]++;
      throw new Error('Email service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_fly0yp66p().b[5][1]++;
    }
    cov_fly0yp66p().s[38]++;
    try {
      /* istanbul ignore next */
      cov_fly0yp66p().s[39]++;
      logger_1.logger.info(`📧 Sending ${notification.type} email to ${notification.to.join(', ')}`);
      // Generate HTML content from template
      const htmlContent =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[40]++, await this.generateEmailContent(notification));
      // Prepare email options
      const mailOptions =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[41]++, {
        from: process.env.SMTP_FROM_ADDRESS,
        to: notification.to,
        cc: notification.cc,
        bcc: notification.bcc,
        subject: notification.subject,
        html: htmlContent,
        attachments: notification.attachments,
        priority: this.mapPriorityToNodemailer(notification.priority),
        headers: {
          'X-Trading-Agent': 'AI-Crypto-Trading-Agent',
          'X-Notification-Type': notification.type,
          'X-Notification-ID': notification.id
        }
      });
      // Send email
      const result =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[42]++, await this.transporter.sendMail(mailOptions));
      // Track delivery status
      const deliveryStatus =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[43]++, {
        messageId: result.messageId,
        status: 'sent',
        timestamp: new Date(),
        retryAttempts:
        /* istanbul ignore next */
        (cov_fly0yp66p().b[6][0]++, notification.retryCount) ||
        /* istanbul ignore next */
        (cov_fly0yp66p().b[6][1]++, 0)
      });
      /* istanbul ignore next */
      cov_fly0yp66p().s[44]++;
      this.deliveryTracking.set(notification.id, deliveryStatus);
      /* istanbul ignore next */
      cov_fly0yp66p().s[45]++;
      logger_1.logger.info(`✅ Email sent successfully: ${result.messageId}`);
      /* istanbul ignore next */
      cov_fly0yp66p().s[46]++;
      return result.messageId;
    } catch (error) {
      /* istanbul ignore next */
      cov_fly0yp66p().s[47]++;
      logger_1.logger.error(`❌ Failed to send email notification:`, error);
      // Update delivery status with error
      const deliveryStatus =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[48]++, {
        messageId: '',
        status: 'failed',
        timestamp: new Date(),
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_fly0yp66p().b[7][0]++, error.message) :
        /* istanbul ignore next */
        (cov_fly0yp66p().b[7][1]++, 'Unknown error'),
        retryAttempts: (
        /* istanbul ignore next */
        (cov_fly0yp66p().b[8][0]++, notification.retryCount) ||
        /* istanbul ignore next */
        (cov_fly0yp66p().b[8][1]++, 0)) + 1
      });
      /* istanbul ignore next */
      cov_fly0yp66p().s[49]++;
      this.deliveryTracking.set(notification.id, deliveryStatus);
      /* istanbul ignore next */
      cov_fly0yp66p().s[50]++;
      throw error;
    }
  }
  /**
   * Send trade execution notification
   */
  async sendTradeExecutionNotification(data) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[6]++;
    const notification =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[51]++, {
      id: `trade_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      type: EmailNotificationType.TRADE_EXECUTION,
      priority: EmailPriority.HIGH,
      to: [process.env.NOTIFICATION_EMAIL],
      subject: `🚀 Trade Executed: ${data.action} ${data.symbol}`,
      templateData: {
        systemName: 'AI Crypto Trading Agent',
        timestamp: data.timestamp.toISOString(),
        symbol: data.symbol,
        action: data.action,
        quantity: data.quantity,
        price: data.price,
        pnl: data.pnl,
        balance: data.balance,
        strategy: data.strategy
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_fly0yp66p().s[52]++;
    return await this.sendNotification(notification);
  }
  /**
   * Send daily performance summary
   */
  async sendDailySummary(data) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[7]++;
    const notification =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[53]++, {
      id: `daily_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      type: EmailNotificationType.DAILY_SUMMARY,
      priority: EmailPriority.NORMAL,
      to: [process.env.NOTIFICATION_EMAIL],
      subject: `📊 Daily Trading Summary - ${data.date.toDateString()}`,
      templateData: {
        systemName: 'AI Crypto Trading Agent',
        timestamp: data.date.toISOString(),
        totalTrades: data.totalTrades,
        winRate: data.winRate,
        totalPnL: data.totalPnL,
        bestTrade: data.bestTrade,
        worstTrade: data.worstTrade,
        balance: data.balance
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_fly0yp66p().s[54]++;
    return await this.sendNotification(notification);
  }
  /**
   * Send security alert notification
   */
  async sendSecurityAlert(data) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[8]++;
    const notification =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[55]++, {
      id: `security_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      type: EmailNotificationType.SECURITY_ALERT,
      priority: data.threatLevel === 'CRITICAL' ?
      /* istanbul ignore next */
      (cov_fly0yp66p().b[9][0]++, EmailPriority.CRITICAL) :
      /* istanbul ignore next */
      (cov_fly0yp66p().b[9][1]++, EmailPriority.HIGH),
      to: [process.env.NOTIFICATION_EMAIL, process.env.SECURITY_EMAIL].filter(Boolean),
      subject: `🚨 Security Alert: ${data.threatLevel} - ${data.incidentType}`,
      templateData: {
        systemName: 'AI Crypto Trading Agent',
        timestamp: data.timestamp.toISOString(),
        threatLevel: data.threatLevel,
        incidentType: data.incidentType,
        description: data.description,
        affectedSystems: data.affectedSystems
      },
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_fly0yp66p().s[56]++;
    return await this.sendNotification(notification);
  }
  /**
   * Get delivery status for a notification
   */
  getDeliveryStatus(notificationId) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[9]++;
    cov_fly0yp66p().s[57]++;
    return this.deliveryTracking.get(notificationId);
  }
  /**
   * Verify SMTP connection
   */
  async verifyConnection() {
    /* istanbul ignore next */
    cov_fly0yp66p().f[10]++;
    cov_fly0yp66p().s[58]++;
    try {
      /* istanbul ignore next */
      cov_fly0yp66p().s[59]++;
      await this.transporter.verify();
      /* istanbul ignore next */
      cov_fly0yp66p().s[60]++;
      logger_1.logger.info('✅ SMTP connection verified successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_fly0yp66p().s[61]++;
      logger_1.logger.error('❌ SMTP connection verification failed:', error);
      /* istanbul ignore next */
      cov_fly0yp66p().s[62]++;
      throw new Error('SMTP connection failed');
    }
  }
  /**
   * Load SMTP configuration from environment variables
   */
  async loadSMTPConfig() {
    /* istanbul ignore next */
    cov_fly0yp66p().f[11]++;
    const requiredEnvVars =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[63]++, ['SMTP_HOST', 'SMTP_PORT', 'SMTP_USER', 'SMTP_PASS', 'SMTP_FROM_ADDRESS']);
    /* istanbul ignore next */
    cov_fly0yp66p().s[64]++;
    for (const envVar of requiredEnvVars) {
      /* istanbul ignore next */
      cov_fly0yp66p().s[65]++;
      if (!process.env[envVar]) {
        /* istanbul ignore next */
        cov_fly0yp66p().b[10][0]++;
        cov_fly0yp66p().s[66]++;
        throw new Error(`Missing required environment variable: ${envVar}`);
      } else
      /* istanbul ignore next */
      {
        cov_fly0yp66p().b[10][1]++;
      }
    }
    // Decrypt SMTP password if encrypted
    const smtpPass =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[67]++, await this.encryptionService.decrypt(process.env.SMTP_PASS));
    /* istanbul ignore next */
    cov_fly0yp66p().s[68]++;
    return {
      host: process.env.SMTP_HOST,
      port: parseInt(process.env.SMTP_PORT),
      secure: process.env.SMTP_SECURE === 'true',
      auth: {
        user: process.env.SMTP_USER,
        pass: smtpPass
      },
      tls: {
        rejectUnauthorized: process.env.SMTP_TLS_REJECT_UNAUTHORIZED !== 'false'
      }
    };
  }
  /**
   * Load email templates for different notification types
   */
  async loadEmailTemplates() {
    /* istanbul ignore next */
    cov_fly0yp66p().f[12]++;
    cov_fly0yp66p().s[69]++;
    // Trade execution template
    this.templates.set(EmailNotificationType.TRADE_EXECUTION, `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 20px; text-align: center;">
          <h1 style="color: white; margin: 0;">🚀 Trade Executed</h1>
        </div>
        <div style="padding: 20px; background: #f8f9fa;">
          <h2 style="color: #333;">{{action}} {{symbol}}</h2>
          <table style="width: 100%; border-collapse: collapse;">
            <tr><td style="padding: 8px; border-bottom: 1px solid #ddd;"><strong>Symbol:</strong></td><td style="padding: 8px; border-bottom: 1px solid #ddd;">{{symbol}}</td></tr>
            <tr><td style="padding: 8px; border-bottom: 1px solid #ddd;"><strong>Action:</strong></td><td style="padding: 8px; border-bottom: 1px solid #ddd;">{{action}}</td></tr>
            <tr><td style="padding: 8px; border-bottom: 1px solid #ddd;"><strong>Quantity:</strong></td><td style="padding: 8px; border-bottom: 1px solid #ddd;">{{quantity}}</td></tr>
            <tr><td style="padding: 8px; border-bottom: 1px solid #ddd;"><strong>Price:</strong></td><td style="padding: 8px; border-bottom: 1px solid #ddd;">${{
      price
    }}</td></tr>
            <tr><td style="padding: 8px; border-bottom: 1px solid #ddd;"><strong>P&L:</strong></td><td style="padding: 8px; border-bottom: 1px solid #ddd;">${{
      pnl
    }}</td></tr>
            <tr><td style="padding: 8px; border-bottom: 1px solid #ddd;"><strong>Balance:</strong></td><td style="padding: 8px; border-bottom: 1px solid #ddd;">${{
      balance
    }}</td></tr>
          </table>
          <p style="margin-top: 20px; color: #666;">Executed at {{timestamp}}</p>
        </div>
      </div>
    `);
    // Daily summary template
    /* istanbul ignore next */
    cov_fly0yp66p().s[70]++;
    this.templates.set(EmailNotificationType.DAILY_SUMMARY, `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%); padding: 20px; text-align: center;">
          <h1 style="color: white; margin: 0;">📊 Daily Trading Summary</h1>
        </div>
        <div style="padding: 20px; background: #f8f9fa;">
          <h2 style="color: #333;">Performance Overview</h2>
          <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
            <div style="background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="margin: 0; color: #667eea;">Total Trades</h3>
              <p style="font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;">{{totalTrades}}</p>
            </div>
            <div style="background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="margin: 0; color: #667eea;">Win Rate</h3>
              <p style="font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;">{{winRate}}%</p>
            </div>
            <div style="background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="margin: 0; color: #667eea;">Total P&L</h3>
              <p style="font-size: 24px; font-weight: bold; margin: 5px 0; color: {{#if (gt totalPnL 0)}}#28a745{{else}}#dc3545{{/if}};">${{
      totalPnL
    }}</p>
            </div>
            <div style="background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="margin: 0; color: #667eea;">Balance</h3>
              <p style="font-size: 24px; font-weight: bold; margin: 5px 0; color: #333;">${{
      balance
    }}</p>
            </div>
          </div>
          <p style="margin-top: 20px; color: #666;">Report generated at {{timestamp}}</p>
        </div>
      </div>
    `);
    // Security alert template
    /* istanbul ignore next */
    cov_fly0yp66p().s[71]++;
    this.templates.set(EmailNotificationType.SECURITY_ALERT, `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); padding: 20px; text-align: center;">
          <h1 style="color: white; margin: 0;">🚨 Security Alert</h1>
        </div>
        <div style="padding: 20px; background: #f8f9fa;">
          <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 8px; margin-bottom: 20px;">
            <h2 style="color: #856404; margin: 0;">{{threatLevel}} Threat Detected</h2>
            <p style="color: #856404; margin: 5px 0;"><strong>Type:</strong> {{incidentType}}</p>
          </div>
          <h3 style="color: #333;">Incident Details</h3>
          <p style="color: #666;">{{description}}</p>
          <h3 style="color: #333;">Affected Systems</h3>
          <ul style="color: #666;">
            {{#each affectedSystems}}
            <li>{{this}}</li>
            {{/each}}
          </ul>
          <p style="margin-top: 20px; color: #666;"><strong>Detected at:</strong> {{timestamp}}</p>
        </div>
      </div>
    `);
    /* istanbul ignore next */
    cov_fly0yp66p().s[72]++;
    logger_1.logger.info('✅ Email templates loaded successfully');
  }
  /**
   * Generate HTML content from template and data
   */
  async generateEmailContent(notification) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[13]++;
    const template =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[73]++, this.templates.get(notification.type));
    /* istanbul ignore next */
    cov_fly0yp66p().s[74]++;
    if (!template) {
      /* istanbul ignore next */
      cov_fly0yp66p().b[11][0]++;
      cov_fly0yp66p().s[75]++;
      throw new Error(`No template found for notification type: ${notification.type}`);
    } else
    /* istanbul ignore next */
    {
      cov_fly0yp66p().b[11][1]++;
    }
    // Simple template replacement (in production, consider using a proper template engine)
    let content =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[76]++, template);
    /* istanbul ignore next */
    cov_fly0yp66p().s[77]++;
    for (const [key, value] of Object.entries(notification.templateData)) {
      const regex =
      /* istanbul ignore next */
      (cov_fly0yp66p().s[78]++, new RegExp(`{{${key}}}`, 'g'));
      /* istanbul ignore next */
      cov_fly0yp66p().s[79]++;
      content = content.replace(regex, String(value));
    }
    /* istanbul ignore next */
    cov_fly0yp66p().s[80]++;
    return content;
  }
  /**
   * Map email priority to nodemailer priority
   */
  mapPriorityToNodemailer(priority) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[14]++;
    cov_fly0yp66p().s[81]++;
    switch (priority) {
      case EmailPriority.CRITICAL:
        /* istanbul ignore next */
        cov_fly0yp66p().b[12][0]++;
      case EmailPriority.HIGH:
        /* istanbul ignore next */
        cov_fly0yp66p().b[12][1]++;
        cov_fly0yp66p().s[82]++;
        return 'high';
      case EmailPriority.LOW:
        /* istanbul ignore next */
        cov_fly0yp66p().b[12][2]++;
        cov_fly0yp66p().s[83]++;
        return 'low';
      default:
        /* istanbul ignore next */
        cov_fly0yp66p().b[12][3]++;
        cov_fly0yp66p().s[84]++;
        return 'normal';
    }
  }
  /**
   * Clean up delivery tracking (remove old entries)
   */
  cleanupDeliveryTracking(olderThanHours =
  /* istanbul ignore next */
  (cov_fly0yp66p().b[13][0]++, 24)) {
    /* istanbul ignore next */
    cov_fly0yp66p().f[15]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[85]++, new Date(Date.now() - olderThanHours * 60 * 60 * 1000));
    /* istanbul ignore next */
    cov_fly0yp66p().s[86]++;
    for (const [id, status] of this.deliveryTracking.entries()) {
      /* istanbul ignore next */
      cov_fly0yp66p().s[87]++;
      if (status.timestamp < cutoffTime) {
        /* istanbul ignore next */
        cov_fly0yp66p().b[14][0]++;
        cov_fly0yp66p().s[88]++;
        this.deliveryTracking.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_fly0yp66p().b[14][1]++;
      }
    }
  }
  /**
   * Get email service statistics
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_fly0yp66p().f[16]++;
    let totalSent =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[89]++, 0);
    let totalFailed =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[90]++, 0);
    let pendingDeliveries =
    /* istanbul ignore next */
    (cov_fly0yp66p().s[91]++, 0);
    /* istanbul ignore next */
    cov_fly0yp66p().s[92]++;
    for (const status of this.deliveryTracking.values()) {
      /* istanbul ignore next */
      cov_fly0yp66p().s[93]++;
      switch (status.status) {
        case 'sent':
          /* istanbul ignore next */
          cov_fly0yp66p().b[15][0]++;
        case 'delivered':
          /* istanbul ignore next */
          cov_fly0yp66p().b[15][1]++;
          cov_fly0yp66p().s[94]++;
          totalSent++;
          /* istanbul ignore next */
          cov_fly0yp66p().s[95]++;
          break;
        case 'failed':
          /* istanbul ignore next */
          cov_fly0yp66p().b[15][2]++;
        case 'bounced':
          /* istanbul ignore next */
          cov_fly0yp66p().b[15][3]++;
          cov_fly0yp66p().s[96]++;
          totalFailed++;
          /* istanbul ignore next */
          cov_fly0yp66p().s[97]++;
          break;
        case 'pending':
          /* istanbul ignore next */
          cov_fly0yp66p().b[15][4]++;
          cov_fly0yp66p().s[98]++;
          pendingDeliveries++;
          /* istanbul ignore next */
          cov_fly0yp66p().s[99]++;
          break;
      }
    }
    /* istanbul ignore next */
    cov_fly0yp66p().s[100]++;
    return {
      totalSent,
      totalFailed,
      pendingDeliveries
    };
  }
}
/* istanbul ignore next */
cov_fly0yp66p().s[101]++;
exports.EmailService = EmailService;
/* istanbul ignore next */
cov_fly0yp66p().s[102]++;
exports.default = EmailService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZmx5MHlwNjZwIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwibm9kZW1haWxlcl8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsImxvZ2dlcl8xIiwiZW5jcnlwdGlvbl9zZXJ2aWNlXzEiLCJFbWFpbE5vdGlmaWNhdGlvblR5cGUiLCJleHBvcnRzIiwiRW1haWxQcmlvcml0eSIsIkVtYWlsU2VydmljZSIsInRyYW5zcG9ydGVyIiwiZW5jcnlwdGlvblNlcnZpY2UiLCJkZWxpdmVyeVRyYWNraW5nIiwidGVtcGxhdGVzIiwiaXNJbml0aWFsaXplZCIsImNvbnN0cnVjdG9yIiwiRW5jcnlwdGlvblNlcnZpY2UiLCJNYXAiLCJpbml0aWFsaXplIiwibG9nZ2VyIiwiaW5mbyIsInNtdHBDb25maWciLCJsb2FkU01UUENvbmZpZyIsImRlZmF1bHQiLCJjcmVhdGVUcmFuc3BvcnRlciIsImhvc3QiLCJwb3J0Iiwic2VjdXJlIiwiYXV0aCIsInRscyIsInJlcXVpcmVUTFMiLCJjb25uZWN0aW9uVGltZW91dCIsImdyZWV0aW5nVGltZW91dCIsInNvY2tldFRpbWVvdXQiLCJ2ZXJpZnlDb25uZWN0aW9uIiwibG9hZEVtYWlsVGVtcGxhdGVzIiwiZXJyb3IiLCJzZW5kTm90aWZpY2F0aW9uIiwibm90aWZpY2F0aW9uIiwiRXJyb3IiLCJ0byIsImpvaW4iLCJodG1sQ29udGVudCIsImdlbmVyYXRlRW1haWxDb250ZW50IiwibWFpbE9wdGlvbnMiLCJmcm9tIiwicHJvY2VzcyIsImVudiIsIlNNVFBfRlJPTV9BRERSRVNTIiwiY2MiLCJiY2MiLCJzdWJqZWN0IiwiaHRtbCIsImF0dGFjaG1lbnRzIiwicHJpb3JpdHkiLCJtYXBQcmlvcml0eVRvTm9kZW1haWxlciIsImhlYWRlcnMiLCJpZCIsInJlc3VsdCIsInNlbmRNYWlsIiwiZGVsaXZlcnlTdGF0dXMiLCJtZXNzYWdlSWQiLCJzdGF0dXMiLCJ0aW1lc3RhbXAiLCJEYXRlIiwicmV0cnlBdHRlbXB0cyIsInJldHJ5Q291bnQiLCJzZXQiLCJtZXNzYWdlIiwic2VuZFRyYWRlRXhlY3V0aW9uTm90aWZpY2F0aW9uIiwiZGF0YSIsIm5vdyIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsIlRSQURFX0VYRUNVVElPTiIsIkhJR0giLCJOT1RJRklDQVRJT05fRU1BSUwiLCJhY3Rpb24iLCJzeW1ib2wiLCJ0ZW1wbGF0ZURhdGEiLCJzeXN0ZW1OYW1lIiwidG9JU09TdHJpbmciLCJxdWFudGl0eSIsInByaWNlIiwicG5sIiwiYmFsYW5jZSIsInN0cmF0ZWd5Iiwic2VuZERhaWx5U3VtbWFyeSIsIkRBSUxZX1NVTU1BUlkiLCJOT1JNQUwiLCJkYXRlIiwidG9EYXRlU3RyaW5nIiwidG90YWxUcmFkZXMiLCJ3aW5SYXRlIiwidG90YWxQbkwiLCJiZXN0VHJhZGUiLCJ3b3JzdFRyYWRlIiwic2VuZFNlY3VyaXR5QWxlcnQiLCJTRUNVUklUWV9BTEVSVCIsInRocmVhdExldmVsIiwiQ1JJVElDQUwiLCJTRUNVUklUWV9FTUFJTCIsImZpbHRlciIsIkJvb2xlYW4iLCJpbmNpZGVudFR5cGUiLCJkZXNjcmlwdGlvbiIsImFmZmVjdGVkU3lzdGVtcyIsImdldERlbGl2ZXJ5U3RhdHVzIiwibm90aWZpY2F0aW9uSWQiLCJnZXQiLCJ2ZXJpZnkiLCJyZXF1aXJlZEVudlZhcnMiLCJlbnZWYXIiLCJzbXRwUGFzcyIsImRlY3J5cHQiLCJTTVRQX1BBU1MiLCJTTVRQX0hPU1QiLCJwYXJzZUludCIsIlNNVFBfUE9SVCIsIlNNVFBfU0VDVVJFIiwidXNlciIsIlNNVFBfVVNFUiIsInBhc3MiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJTTVRQX1RMU19SRUpFQ1RfVU5BVVRIT1JJWkVEIiwidGVtcGxhdGUiLCJjb250ZW50Iiwia2V5IiwidmFsdWUiLCJPYmplY3QiLCJlbnRyaWVzIiwicmVnZXgiLCJSZWdFeHAiLCJyZXBsYWNlIiwiU3RyaW5nIiwiTE9XIiwiY2xlYW51cERlbGl2ZXJ5VHJhY2tpbmciLCJvbGRlclRoYW5Ib3VycyIsImN1dG9mZlRpbWUiLCJkZWxldGUiLCJnZXRTdGF0aXN0aWNzIiwidG90YWxTZW50IiwidG90YWxGYWlsZWQiLCJwZW5kaW5nRGVsaXZlcmllcyIsInZhbHVlcyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlja1xcRGVza3RvcFxcU21vb3RoU2FpbFxcc3JjXFxjb3JlXFxub3RpZmljYXRpb25zXFxlbWFpbC1zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBFTUFJTCBOT1RJRklDQVRJT04gU0VSVklDRVxyXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBcclxuICogSW1wbGVtZW50cyBTTVRQIGVtYWlsIHNlcnZpY2Ugd2l0aCBIVE1MIGZvcm1hdHRpbmcsIGRlbGl2ZXJ5IHRyYWNraW5nLFxyXG4gKiBhbmQgc2VjdXJpdHkgZmVhdHVyZXMgZm9yIHRoZSBBSSBjcnlwdG8gdHJhZGluZyBhZ2VudC5cclxuICogXHJcbiAqIEZlYXR1cmVzOlxyXG4gKiAtIFJpY2ggSFRNTCBlbWFpbCB0ZW1wbGF0ZXNcclxuICogLSBTZWN1cmUgU01UUCB3aXRoIGF1dGhlbnRpY2F0aW9uXHJcbiAqIC0gRGVsaXZlcnkgdHJhY2tpbmcgYW5kIGNvbmZpcm1hdGlvblxyXG4gKiAtIEVtYWlsIGVuY3J5cHRpb24gYW5kIHNlY3VyaXR5XHJcbiAqIC0gVGVtcGxhdGUtYmFzZWQgbm90aWZpY2F0aW9uc1xyXG4gKiBcclxuICogQGF1dGhvciBBSSBDcnlwdG8gVHJhZGluZyBTeXN0ZW1cclxuICogQHZlcnNpb24gMS4wLjBcclxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICovXHJcblxyXG5pbXBvcnQgbm9kZW1haWxlciBmcm9tICdub2RlbWFpbGVyJztcclxuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnQC9jb3JlL2xvZ2dpbmcvbG9nZ2VyJztcclxuaW1wb3J0IHsgRW5jcnlwdGlvblNlcnZpY2UgfSBmcm9tICdAL3NlY3VyaXR5L2VuY3J5cHRpb24tc2VydmljZSc7XHJcblxyXG4vKipcclxuICogRW1haWwgbm90aWZpY2F0aW9uIHR5cGVzIGZvciBkaWZmZXJlbnQgc3lzdGVtIGV2ZW50c1xyXG4gKi9cclxuZXhwb3J0IGVudW0gRW1haWxOb3RpZmljYXRpb25UeXBlIHtcclxuICBUUkFERV9FWEVDVVRJT04gPSAnVFJBREVfRVhFQ1VUSU9OJyxcclxuICBQUk9GSVRfVEFSR0VUID0gJ1BST0ZJVF9UQVJHRVQnLFxyXG4gIFNUT1BfTE9TUyA9ICdTVE9QX0xPU1MnLFxyXG4gIFNZU1RFTV9BTEVSVCA9ICdTWVNURU1fQUxFUlQnLFxyXG4gIFNFQ1VSSVRZX0FMRVJUID0gJ1NFQ1VSSVRZX0FMRVJUJyxcclxuICBEQUlMWV9TVU1NQVJZID0gJ0RBSUxZX1NVTU1BUlknLFxyXG4gIFdFRUtMWV9TVU1NQVJZID0gJ1dFRUtMWV9TVU1NQVJZJyxcclxuICBTWVNURU1fSEVBTFRIID0gJ1NZU1RFTV9IRUFMVEgnLFxyXG4gIEVNRVJHRU5DWSA9ICdFTUVSR0VOQ1knXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFbWFpbCBwcmlvcml0eSBsZXZlbHMgZm9yIHJvdXRpbmcgYW5kIGRlbGl2ZXJ5XHJcbiAqL1xyXG5leHBvcnQgZW51bSBFbWFpbFByaW9yaXR5IHtcclxuICBMT1cgPSAnbG93JyxcclxuICBOT1JNQUwgPSAnbm9ybWFsJyxcclxuICBISUdIID0gJ2hpZ2gnLFxyXG4gIENSSVRJQ0FMID0gJ2NyaXRpY2FsJ1xyXG59XHJcblxyXG4vKipcclxuICogRW1haWwgbm90aWZpY2F0aW9uIGRhdGEgc3RydWN0dXJlXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEVtYWlsTm90aWZpY2F0aW9uIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIHR5cGU6IEVtYWlsTm90aWZpY2F0aW9uVHlwZTtcclxuICBwcmlvcml0eTogRW1haWxQcmlvcml0eTtcclxuICB0bzogc3RyaW5nW107XHJcbiAgY2M/OiBzdHJpbmdbXTtcclxuICBiY2M/OiBzdHJpbmdbXTtcclxuICBzdWJqZWN0OiBzdHJpbmc7XHJcbiAgdGVtcGxhdGVEYXRhOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG4gIGF0dGFjaG1lbnRzPzogRW1haWxBdHRhY2htZW50W107XHJcbiAgdGltZXN0YW1wOiBEYXRlO1xyXG4gIHJldHJ5Q291bnQ/OiBudW1iZXI7XHJcbiAgZGVsaXZlcnlTdGF0dXM/OiBFbWFpbERlbGl2ZXJ5U3RhdHVzO1xyXG59XHJcblxyXG4vKipcclxuICogRW1haWwgYXR0YWNobWVudCBzdHJ1Y3R1cmVcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRW1haWxBdHRhY2htZW50IHtcclxuICBmaWxlbmFtZTogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IEJ1ZmZlciB8IHN0cmluZztcclxuICBjb250ZW50VHlwZTogc3RyaW5nO1xyXG4gIGVuY29kaW5nPzogc3RyaW5nO1xyXG59XHJcblxyXG4vKipcclxuICogRW1haWwgZGVsaXZlcnkgc3RhdHVzIHRyYWNraW5nXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEVtYWlsRGVsaXZlcnlTdGF0dXMge1xyXG4gIG1lc3NhZ2VJZDogc3RyaW5nO1xyXG4gIHN0YXR1czogJ3BlbmRpbmcnIHwgJ3NlbnQnIHwgJ2RlbGl2ZXJlZCcgfCAnZmFpbGVkJyB8ICdib3VuY2VkJztcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcbiAgZXJyb3I/OiBzdHJpbmc7XHJcbiAgcmV0cnlBdHRlbXB0czogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogU01UUCBjb25maWd1cmF0aW9uIGludGVyZmFjZVxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBTTVRQQ29uZmlnIHtcclxuICBob3N0OiBzdHJpbmc7XHJcbiAgcG9ydDogbnVtYmVyO1xyXG4gIHNlY3VyZTogYm9vbGVhbjtcclxuICBhdXRoOiB7XHJcbiAgICB1c2VyOiBzdHJpbmc7XHJcbiAgICBwYXNzOiBzdHJpbmc7XHJcbiAgfTtcclxuICB0bHM/OiB7XHJcbiAgICByZWplY3RVbmF1dGhvcml6ZWQ6IGJvb2xlYW47XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEVtYWlsIHRlbXBsYXRlIGRhdGEgZm9yIGRpZmZlcmVudCBub3RpZmljYXRpb24gdHlwZXNcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRW1haWxUZW1wbGF0ZURhdGEge1xyXG4gIC8vIENvbW1vbiBmaWVsZHNcclxuICBzeXN0ZW1OYW1lOiBzdHJpbmc7XHJcbiAgdGltZXN0YW1wOiBzdHJpbmc7XHJcbiAgXHJcbiAgLy8gVHJhZGluZy1zcGVjaWZpYyBmaWVsZHNcclxuICBzeW1ib2w/OiBzdHJpbmc7XHJcbiAgYWN0aW9uPzogc3RyaW5nO1xyXG4gIHF1YW50aXR5PzogbnVtYmVyO1xyXG4gIHByaWNlPzogbnVtYmVyO1xyXG4gIHBubD86IG51bWJlcjtcclxuICBiYWxhbmNlPzogbnVtYmVyO1xyXG4gIFxyXG4gIC8vIFN5c3RlbSBoZWFsdGggZmllbGRzXHJcbiAgY3B1VXNhZ2U/OiBudW1iZXI7XHJcbiAgcmFtVXNhZ2U/OiBudW1iZXI7XHJcbiAgZGlza1VzYWdlPzogbnVtYmVyO1xyXG4gIG5ldHdvcmtTdGF0dXM/OiBzdHJpbmc7XHJcbiAgXHJcbiAgLy8gU2VjdXJpdHkgZmllbGRzXHJcbiAgdGhyZWF0TGV2ZWw/OiBzdHJpbmc7XHJcbiAgaW5jaWRlbnRUeXBlPzogc3RyaW5nO1xyXG4gIGFmZmVjdGVkU3lzdGVtcz86IHN0cmluZ1tdO1xyXG4gIFxyXG4gIC8vIFBlcmZvcm1hbmNlIHN1bW1hcnkgZmllbGRzXHJcbiAgdG90YWxUcmFkZXM/OiBudW1iZXI7XHJcbiAgd2luUmF0ZT86IG51bWJlcjtcclxuICB0b3RhbFBuTD86IG51bWJlcjtcclxuICBiZXN0VHJhZGU/OiBudW1iZXI7XHJcbiAgd29yc3RUcmFkZT86IG51bWJlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIEVtYWlsIHNlcnZpY2UgY2xhc3MgZm9yIGhhbmRsaW5nIGFsbCBlbWFpbCBub3RpZmljYXRpb25zXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgRW1haWxTZXJ2aWNlIHtcclxuICBwcml2YXRlIHRyYW5zcG9ydGVyOiBub2RlbWFpbGVyLlRyYW5zcG9ydGVyO1xyXG4gIHByaXZhdGUgZW5jcnlwdGlvblNlcnZpY2U6IEVuY3J5cHRpb25TZXJ2aWNlO1xyXG4gIHByaXZhdGUgZGVsaXZlcnlUcmFja2luZzogTWFwPHN0cmluZywgRW1haWxEZWxpdmVyeVN0YXR1cz47XHJcbiAgcHJpdmF0ZSB0ZW1wbGF0ZXM6IE1hcDxFbWFpbE5vdGlmaWNhdGlvblR5cGUsIHN0cmluZz47XHJcbiAgcHJpdmF0ZSBpc0luaXRpYWxpemVkOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5lbmNyeXB0aW9uU2VydmljZSA9IG5ldyBFbmNyeXB0aW9uU2VydmljZSgpO1xyXG4gICAgdGhpcy5kZWxpdmVyeVRyYWNraW5nID0gbmV3IE1hcCgpO1xyXG4gICAgdGhpcy50ZW1wbGF0ZXMgPSBuZXcgTWFwKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWFsaXplIHRoZSBlbWFpbCBzZXJ2aWNlIHdpdGggU01UUCBjb25maWd1cmF0aW9uXHJcbiAgICovXHJcbiAgcHVibGljIGFzeW5jIGluaXRpYWxpemUoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsb2dnZXIuaW5mbygn8J+TpyBJbml0aWFsaXppbmcgZW1haWwgbm90aWZpY2F0aW9uIHNlcnZpY2UuLi4nKTtcclxuXHJcbiAgICAgIC8vIExvYWQgU01UUCBjb25maWd1cmF0aW9uIGZyb20gZW52aXJvbm1lbnRcclxuICAgICAgY29uc3Qgc210cENvbmZpZyA9IGF3YWl0IHRoaXMubG9hZFNNVFBDb25maWcoKTtcclxuICAgICAgXHJcbiAgICAgIC8vIENyZWF0ZSBub2RlbWFpbGVyIHRyYW5zcG9ydGVyIHdpdGggc2VjdXJpdHkgc2V0dGluZ3NcclxuICAgICAgdGhpcy50cmFuc3BvcnRlciA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0ZXIoe1xyXG4gICAgICAgIGhvc3Q6IHNtdHBDb25maWcuaG9zdCxcclxuICAgICAgICBwb3J0OiBzbXRwQ29uZmlnLnBvcnQsXHJcbiAgICAgICAgc2VjdXJlOiBzbXRwQ29uZmlnLnNlY3VyZSxcclxuICAgICAgICBhdXRoOiBzbXRwQ29uZmlnLmF1dGgsXHJcbiAgICAgICAgdGxzOiBzbXRwQ29uZmlnLnRscyxcclxuICAgICAgICAvLyBBZGRpdGlvbmFsIHNlY3VyaXR5IHNldHRpbmdzXHJcbiAgICAgICAgcmVxdWlyZVRMUzogdHJ1ZSxcclxuICAgICAgICBjb25uZWN0aW9uVGltZW91dDogMzAwMDAsXHJcbiAgICAgICAgZ3JlZXRpbmdUaW1lb3V0OiAzMDAwMCxcclxuICAgICAgICBzb2NrZXRUaW1lb3V0OiAzMDAwMFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIC8vIFZlcmlmeSBTTVRQIGNvbm5lY3Rpb25cclxuICAgICAgYXdhaXQgdGhpcy52ZXJpZnlDb25uZWN0aW9uKCk7XHJcblxyXG4gICAgICAvLyBMb2FkIGVtYWlsIHRlbXBsYXRlc1xyXG4gICAgICBhd2FpdCB0aGlzLmxvYWRFbWFpbFRlbXBsYXRlcygpO1xyXG5cclxuICAgICAgdGhpcy5pc0luaXRpYWxpemVkID0gdHJ1ZTtcclxuICAgICAgbG9nZ2VyLmluZm8oJ+KchSBFbWFpbCBub3RpZmljYXRpb24gc2VydmljZSBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHknKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gaW5pdGlhbGl6ZSBlbWFpbCBzZXJ2aWNlOicsIGVycm9yKTtcclxuICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZW5kIGVtYWlsIG5vdGlmaWNhdGlvbiB3aXRoIHRlbXBsYXRlIGFuZCB0cmFja2luZ1xyXG4gICAqL1xyXG4gIHB1YmxpYyBhc3luYyBzZW5kTm90aWZpY2F0aW9uKG5vdGlmaWNhdGlvbjogRW1haWxOb3RpZmljYXRpb24pOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gICAgaWYgKCF0aGlzLmlzSW5pdGlhbGl6ZWQpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFbWFpbCBzZXJ2aWNlIG5vdCBpbml0aWFsaXplZCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGxvZ2dlci5pbmZvKGDwn5OnIFNlbmRpbmcgJHtub3RpZmljYXRpb24udHlwZX0gZW1haWwgdG8gJHtub3RpZmljYXRpb24udG8uam9pbignLCAnKX1gKTtcclxuXHJcbiAgICAgIC8vIEdlbmVyYXRlIEhUTUwgY29udGVudCBmcm9tIHRlbXBsYXRlXHJcbiAgICAgIGNvbnN0IGh0bWxDb250ZW50ID0gYXdhaXQgdGhpcy5nZW5lcmF0ZUVtYWlsQ29udGVudChub3RpZmljYXRpb24pO1xyXG5cclxuICAgICAgLy8gUHJlcGFyZSBlbWFpbCBvcHRpb25zXHJcbiAgICAgIGNvbnN0IG1haWxPcHRpb25zID0ge1xyXG4gICAgICAgIGZyb206IHByb2Nlc3MuZW52LlNNVFBfRlJPTV9BRERSRVNTLFxyXG4gICAgICAgIHRvOiBub3RpZmljYXRpb24udG8sXHJcbiAgICAgICAgY2M6IG5vdGlmaWNhdGlvbi5jYyxcclxuICAgICAgICBiY2M6IG5vdGlmaWNhdGlvbi5iY2MsXHJcbiAgICAgICAgc3ViamVjdDogbm90aWZpY2F0aW9uLnN1YmplY3QsXHJcbiAgICAgICAgaHRtbDogaHRtbENvbnRlbnQsXHJcbiAgICAgICAgYXR0YWNobWVudHM6IG5vdGlmaWNhdGlvbi5hdHRhY2htZW50cyxcclxuICAgICAgICBwcmlvcml0eTogdGhpcy5tYXBQcmlvcml0eVRvTm9kZW1haWxlcihub3RpZmljYXRpb24ucHJpb3JpdHkpLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICdYLVRyYWRpbmctQWdlbnQnOiAnQUktQ3J5cHRvLVRyYWRpbmctQWdlbnQnLFxyXG4gICAgICAgICAgJ1gtTm90aWZpY2F0aW9uLVR5cGUnOiBub3RpZmljYXRpb24udHlwZSxcclxuICAgICAgICAgICdYLU5vdGlmaWNhdGlvbi1JRCc6IG5vdGlmaWNhdGlvbi5pZFxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8vIFNlbmQgZW1haWxcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy50cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsT3B0aW9ucyk7XHJcblxyXG4gICAgICAvLyBUcmFjayBkZWxpdmVyeSBzdGF0dXNcclxuICAgICAgY29uc3QgZGVsaXZlcnlTdGF0dXM6IEVtYWlsRGVsaXZlcnlTdGF0dXMgPSB7XHJcbiAgICAgICAgbWVzc2FnZUlkOiByZXN1bHQubWVzc2FnZUlkLFxyXG4gICAgICAgIHN0YXR1czogJ3NlbnQnLFxyXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSxcclxuICAgICAgICByZXRyeUF0dGVtcHRzOiBub3RpZmljYXRpb24ucmV0cnlDb3VudCB8fCAwXHJcbiAgICAgIH07XHJcblxyXG4gICAgICB0aGlzLmRlbGl2ZXJ5VHJhY2tpbmcuc2V0KG5vdGlmaWNhdGlvbi5pZCwgZGVsaXZlcnlTdGF0dXMpO1xyXG5cclxuICAgICAgbG9nZ2VyLmluZm8oYOKchSBFbWFpbCBzZW50IHN1Y2Nlc3NmdWxseTogJHtyZXN1bHQubWVzc2FnZUlkfWApO1xyXG4gICAgICByZXR1cm4gcmVzdWx0Lm1lc3NhZ2VJZDtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIuZXJyb3IoYOKdjCBGYWlsZWQgdG8gc2VuZCBlbWFpbCBub3RpZmljYXRpb246YCwgZXJyb3IpO1xyXG4gICAgICBcclxuICAgICAgLy8gVXBkYXRlIGRlbGl2ZXJ5IHN0YXR1cyB3aXRoIGVycm9yXHJcbiAgICAgIGNvbnN0IGRlbGl2ZXJ5U3RhdHVzOiBFbWFpbERlbGl2ZXJ5U3RhdHVzID0ge1xyXG4gICAgICAgIG1lc3NhZ2VJZDogJycsXHJcbiAgICAgICAgc3RhdHVzOiAnZmFpbGVkJyxcclxuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXHJcbiAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InLFxyXG4gICAgICAgIHJldHJ5QXR0ZW1wdHM6IChub3RpZmljYXRpb24ucmV0cnlDb3VudCB8fCAwKSArIDFcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHRoaXMuZGVsaXZlcnlUcmFja2luZy5zZXQobm90aWZpY2F0aW9uLmlkLCBkZWxpdmVyeVN0YXR1cyk7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VuZCB0cmFkZSBleGVjdXRpb24gbm90aWZpY2F0aW9uXHJcbiAgICovXHJcbiAgcHVibGljIGFzeW5jIHNlbmRUcmFkZUV4ZWN1dGlvbk5vdGlmaWNhdGlvbihkYXRhOiB7XHJcbiAgICBzeW1ib2w6IHN0cmluZztcclxuICAgIGFjdGlvbjogJ0JVWScgfCAnU0VMTCc7XHJcbiAgICBxdWFudGl0eTogbnVtYmVyO1xyXG4gICAgcHJpY2U6IG51bWJlcjtcclxuICAgIHBubD86IG51bWJlcjtcclxuICAgIGJhbGFuY2U6IG51bWJlcjtcclxuICAgIHN0cmF0ZWd5OiBzdHJpbmc7XHJcbiAgICB0aW1lc3RhbXA6IERhdGU7XHJcbiAgfSk6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgICBjb25zdCBub3RpZmljYXRpb246IEVtYWlsTm90aWZpY2F0aW9uID0ge1xyXG4gICAgICBpZDogYHRyYWRlXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YCxcclxuICAgICAgdHlwZTogRW1haWxOb3RpZmljYXRpb25UeXBlLlRSQURFX0VYRUNVVElPTixcclxuICAgICAgcHJpb3JpdHk6IEVtYWlsUHJpb3JpdHkuSElHSCxcclxuICAgICAgdG86IFtwcm9jZXNzLmVudi5OT1RJRklDQVRJT05fRU1BSUwhXSxcclxuICAgICAgc3ViamVjdDogYPCfmoAgVHJhZGUgRXhlY3V0ZWQ6ICR7ZGF0YS5hY3Rpb259ICR7ZGF0YS5zeW1ib2x9YCxcclxuICAgICAgdGVtcGxhdGVEYXRhOiB7XHJcbiAgICAgICAgc3lzdGVtTmFtZTogJ0FJIENyeXB0byBUcmFkaW5nIEFnZW50JyxcclxuICAgICAgICB0aW1lc3RhbXA6IGRhdGEudGltZXN0YW1wLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgc3ltYm9sOiBkYXRhLnN5bWJvbCxcclxuICAgICAgICBhY3Rpb246IGRhdGEuYWN0aW9uLFxyXG4gICAgICAgIHF1YW50aXR5OiBkYXRhLnF1YW50aXR5LFxyXG4gICAgICAgIHByaWNlOiBkYXRhLnByaWNlLFxyXG4gICAgICAgIHBubDogZGF0YS5wbmwsXHJcbiAgICAgICAgYmFsYW5jZTogZGF0YS5iYWxhbmNlLFxyXG4gICAgICAgIHN0cmF0ZWd5OiBkYXRhLnN0cmF0ZWd5XHJcbiAgICAgIH0sXHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kTm90aWZpY2F0aW9uKG5vdGlmaWNhdGlvbik7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTZW5kIGRhaWx5IHBlcmZvcm1hbmNlIHN1bW1hcnlcclxuICAgKi9cclxuICBwdWJsaWMgYXN5bmMgc2VuZERhaWx5U3VtbWFyeShkYXRhOiB7XHJcbiAgICB0b3RhbFRyYWRlczogbnVtYmVyO1xyXG4gICAgd2luUmF0ZTogbnVtYmVyO1xyXG4gICAgdG90YWxQbkw6IG51bWJlcjtcclxuICAgIGJlc3RUcmFkZTogbnVtYmVyO1xyXG4gICAgd29yc3RUcmFkZTogbnVtYmVyO1xyXG4gICAgYmFsYW5jZTogbnVtYmVyO1xyXG4gICAgZGF0ZTogRGF0ZTtcclxuICB9KTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICAgIGNvbnN0IG5vdGlmaWNhdGlvbjogRW1haWxOb3RpZmljYXRpb24gPSB7XHJcbiAgICAgIGlkOiBgZGFpbHlfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gLFxyXG4gICAgICB0eXBlOiBFbWFpbE5vdGlmaWNhdGlvblR5cGUuREFJTFlfU1VNTUFSWSxcclxuICAgICAgcHJpb3JpdHk6IEVtYWlsUHJpb3JpdHkuTk9STUFMLFxyXG4gICAgICB0bzogW3Byb2Nlc3MuZW52Lk5PVElGSUNBVElPTl9FTUFJTCFdLFxyXG4gICAgICBzdWJqZWN0OiBg8J+TiiBEYWlseSBUcmFkaW5nIFN1bW1hcnkgLSAke2RhdGEuZGF0ZS50b0RhdGVTdHJpbmcoKX1gLFxyXG4gICAgICB0ZW1wbGF0ZURhdGE6IHtcclxuICAgICAgICBzeXN0ZW1OYW1lOiAnQUkgQ3J5cHRvIFRyYWRpbmcgQWdlbnQnLFxyXG4gICAgICAgIHRpbWVzdGFtcDogZGF0YS5kYXRlLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgdG90YWxUcmFkZXM6IGRhdGEudG90YWxUcmFkZXMsXHJcbiAgICAgICAgd2luUmF0ZTogZGF0YS53aW5SYXRlLFxyXG4gICAgICAgIHRvdGFsUG5MOiBkYXRhLnRvdGFsUG5MLFxyXG4gICAgICAgIGJlc3RUcmFkZTogZGF0YS5iZXN0VHJhZGUsXHJcbiAgICAgICAgd29yc3RUcmFkZTogZGF0YS53b3JzdFRyYWRlLFxyXG4gICAgICAgIGJhbGFuY2U6IGRhdGEuYmFsYW5jZVxyXG4gICAgICB9LFxyXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKClcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc2VuZE5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VuZCBzZWN1cml0eSBhbGVydCBub3RpZmljYXRpb25cclxuICAgKi9cclxuICBwdWJsaWMgYXN5bmMgc2VuZFNlY3VyaXR5QWxlcnQoZGF0YToge1xyXG4gICAgdGhyZWF0TGV2ZWw6ICdMT1cnIHwgJ01FRElVTScgfCAnSElHSCcgfCAnQ1JJVElDQUwnO1xyXG4gICAgaW5jaWRlbnRUeXBlOiBzdHJpbmc7XHJcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG4gICAgYWZmZWN0ZWRTeXN0ZW1zOiBzdHJpbmdbXTtcclxuICAgIHRpbWVzdGFtcDogRGF0ZTtcclxuICB9KTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICAgIGNvbnN0IG5vdGlmaWNhdGlvbjogRW1haWxOb3RpZmljYXRpb24gPSB7XHJcbiAgICAgIGlkOiBgc2VjdXJpdHlfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gLFxyXG4gICAgICB0eXBlOiBFbWFpbE5vdGlmaWNhdGlvblR5cGUuU0VDVVJJVFlfQUxFUlQsXHJcbiAgICAgIHByaW9yaXR5OiBkYXRhLnRocmVhdExldmVsID09PSAnQ1JJVElDQUwnID8gRW1haWxQcmlvcml0eS5DUklUSUNBTCA6IEVtYWlsUHJpb3JpdHkuSElHSCxcclxuICAgICAgdG86IFtwcm9jZXNzLmVudi5OT1RJRklDQVRJT05fRU1BSUwhLCBwcm9jZXNzLmVudi5TRUNVUklUWV9FTUFJTCFdLmZpbHRlcihCb29sZWFuKSxcclxuICAgICAgc3ViamVjdDogYPCfmqggU2VjdXJpdHkgQWxlcnQ6ICR7ZGF0YS50aHJlYXRMZXZlbH0gLSAke2RhdGEuaW5jaWRlbnRUeXBlfWAsXHJcbiAgICAgIHRlbXBsYXRlRGF0YToge1xyXG4gICAgICAgIHN5c3RlbU5hbWU6ICdBSSBDcnlwdG8gVHJhZGluZyBBZ2VudCcsXHJcbiAgICAgICAgdGltZXN0YW1wOiBkYXRhLnRpbWVzdGFtcC50b0lTT1N0cmluZygpLFxyXG4gICAgICAgIHRocmVhdExldmVsOiBkYXRhLnRocmVhdExldmVsLFxyXG4gICAgICAgIGluY2lkZW50VHlwZTogZGF0YS5pbmNpZGVudFR5cGUsXHJcbiAgICAgICAgZGVzY3JpcHRpb246IGRhdGEuZGVzY3JpcHRpb24sXHJcbiAgICAgICAgYWZmZWN0ZWRTeXN0ZW1zOiBkYXRhLmFmZmVjdGVkU3lzdGVtc1xyXG4gICAgICB9LFxyXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKClcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuc2VuZE5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IGRlbGl2ZXJ5IHN0YXR1cyBmb3IgYSBub3RpZmljYXRpb25cclxuICAgKi9cclxuICBwdWJsaWMgZ2V0RGVsaXZlcnlTdGF0dXMobm90aWZpY2F0aW9uSWQ6IHN0cmluZyk6IEVtYWlsRGVsaXZlcnlTdGF0dXMgfCB1bmRlZmluZWQge1xyXG4gICAgcmV0dXJuIHRoaXMuZGVsaXZlcnlUcmFja2luZy5nZXQobm90aWZpY2F0aW9uSWQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogVmVyaWZ5IFNNVFAgY29ubmVjdGlvblxyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgdmVyaWZ5Q29ubmVjdGlvbigpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGF3YWl0IHRoaXMudHJhbnNwb3J0ZXIudmVyaWZ5KCk7XHJcbiAgICAgIGxvZ2dlci5pbmZvKCfinIUgU01UUCBjb25uZWN0aW9uIHZlcmlmaWVkIHN1Y2Nlc3NmdWxseScpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgbG9nZ2VyLmVycm9yKCfinYwgU01UUCBjb25uZWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NNVFAgY29ubmVjdGlvbiBmYWlsZWQnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExvYWQgU01UUCBjb25maWd1cmF0aW9uIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBsb2FkU01UUENvbmZpZygpOiBQcm9taXNlPFNNVFBDb25maWc+IHtcclxuICAgIGNvbnN0IHJlcXVpcmVkRW52VmFycyA9IFtcclxuICAgICAgJ1NNVFBfSE9TVCcsXHJcbiAgICAgICdTTVRQX1BPUlQnLFxyXG4gICAgICAnU01UUF9VU0VSJyxcclxuICAgICAgJ1NNVFBfUEFTUycsXHJcbiAgICAgICdTTVRQX0ZST01fQUREUkVTUydcclxuICAgIF07XHJcblxyXG4gICAgZm9yIChjb25zdCBlbnZWYXIgb2YgcmVxdWlyZWRFbnZWYXJzKSB7XHJcbiAgICAgIGlmICghcHJvY2Vzcy5lbnZbZW52VmFyXSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZTogJHtlbnZWYXJ9YCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBEZWNyeXB0IFNNVFAgcGFzc3dvcmQgaWYgZW5jcnlwdGVkXHJcbiAgICBjb25zdCBzbXRwUGFzcyA9IGF3YWl0IHRoaXMuZW5jcnlwdGlvblNlcnZpY2UuZGVjcnlwdChwcm9jZXNzLmVudi5TTVRQX1BBU1MhKTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBob3N0OiBwcm9jZXNzLmVudi5TTVRQX0hPU1QhLFxyXG4gICAgICBwb3J0OiBwYXJzZUludChwcm9jZXNzLmVudi5TTVRQX1BPUlQhKSxcclxuICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5TTVRQX1NFQ1VSRSA9PT0gJ3RydWUnLFxyXG4gICAgICBhdXRoOiB7XHJcbiAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuU01UUF9VU0VSISxcclxuICAgICAgICBwYXNzOiBzbXRwUGFzc1xyXG4gICAgICB9LFxyXG4gICAgICB0bHM6IHtcclxuICAgICAgICByZWplY3RVbmF1dGhvcml6ZWQ6IHByb2Nlc3MuZW52LlNNVFBfVExTX1JFSkVDVF9VTkFVVEhPUklaRUQgIT09ICdmYWxzZSdcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExvYWQgZW1haWwgdGVtcGxhdGVzIGZvciBkaWZmZXJlbnQgbm90aWZpY2F0aW9uIHR5cGVzXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBhc3luYyBsb2FkRW1haWxUZW1wbGF0ZXMoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAvLyBUcmFkZSBleGVjdXRpb24gdGVtcGxhdGVcclxuICAgIHRoaXMudGVtcGxhdGVzLnNldChFbWFpbE5vdGlmaWNhdGlvblR5cGUuVFJBREVfRVhFQ1VUSU9OLCBgXHJcbiAgICAgIDxkaXYgc3R5bGU9XCJmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7IG1heC13aWR0aDogNjAwcHg7IG1hcmdpbjogMCBhdXRvO1wiPlxyXG4gICAgICAgIDxkaXYgc3R5bGU9XCJiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjNjY3ZWVhIDAlLCAjNzY0YmEyIDEwMCUpOyBwYWRkaW5nOiAyMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7XCI+XHJcbiAgICAgICAgICA8aDEgc3R5bGU9XCJjb2xvcjogd2hpdGU7IG1hcmdpbjogMDtcIj7wn5qAIFRyYWRlIEV4ZWN1dGVkPC9oMT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IHN0eWxlPVwicGFkZGluZzogMjBweDsgYmFja2dyb3VuZDogI2Y4ZjlmYTtcIj5cclxuICAgICAgICAgIDxoMiBzdHlsZT1cImNvbG9yOiAjMzMzO1wiPnt7YWN0aW9ufX0ge3tzeW1ib2x9fTwvaDI+XHJcbiAgICAgICAgICA8dGFibGUgc3R5bGU9XCJ3aWR0aDogMTAwJTsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcIj5cclxuICAgICAgICAgICAgPHRyPjx0ZCBzdHlsZT1cInBhZGRpbmc6IDhweDsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XCI+PHN0cm9uZz5TeW1ib2w6PC9zdHJvbmc+PC90ZD48dGQgc3R5bGU9XCJwYWRkaW5nOiA4cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1wiPnt7c3ltYm9sfX08L3RkPjwvdHI+XHJcbiAgICAgICAgICAgIDx0cj48dGQgc3R5bGU9XCJwYWRkaW5nOiA4cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1wiPjxzdHJvbmc+QWN0aW9uOjwvc3Ryb25nPjwvdGQ+PHRkIHN0eWxlPVwicGFkZGluZzogOHB4OyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcIj57e2FjdGlvbn19PC90ZD48L3RyPlxyXG4gICAgICAgICAgICA8dHI+PHRkIHN0eWxlPVwicGFkZGluZzogOHB4OyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcIj48c3Ryb25nPlF1YW50aXR5Ojwvc3Ryb25nPjwvdGQ+PHRkIHN0eWxlPVwicGFkZGluZzogOHB4OyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcIj57e3F1YW50aXR5fX08L3RkPjwvdHI+XHJcbiAgICAgICAgICAgIDx0cj48dGQgc3R5bGU9XCJwYWRkaW5nOiA4cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1wiPjxzdHJvbmc+UHJpY2U6PC9zdHJvbmc+PC90ZD48dGQgc3R5bGU9XCJwYWRkaW5nOiA4cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1wiPiR7e3ByaWNlfX08L3RkPjwvdHI+XHJcbiAgICAgICAgICAgIDx0cj48dGQgc3R5bGU9XCJwYWRkaW5nOiA4cHg7IGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1wiPjxzdHJvbmc+UCZMOjwvc3Ryb25nPjwvdGQ+PHRkIHN0eWxlPVwicGFkZGluZzogOHB4OyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcIj4ke3twbmx9fTwvdGQ+PC90cj5cclxuICAgICAgICAgICAgPHRyPjx0ZCBzdHlsZT1cInBhZGRpbmc6IDhweDsgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XCI+PHN0cm9uZz5CYWxhbmNlOjwvc3Ryb25nPjwvdGQ+PHRkIHN0eWxlPVwicGFkZGluZzogOHB4OyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcIj4ke3tiYWxhbmNlfX08L3RkPjwvdHI+XHJcbiAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgPHAgc3R5bGU9XCJtYXJnaW4tdG9wOiAyMHB4OyBjb2xvcjogIzY2NjtcIj5FeGVjdXRlZCBhdCB7e3RpbWVzdGFtcH19PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIGApO1xyXG5cclxuICAgIC8vIERhaWx5IHN1bW1hcnkgdGVtcGxhdGVcclxuICAgIHRoaXMudGVtcGxhdGVzLnNldChFbWFpbE5vdGlmaWNhdGlvblR5cGUuREFJTFlfU1VNTUFSWSwgYFxyXG4gICAgICA8ZGl2IHN0eWxlPVwiZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOyBtYXgtd2lkdGg6IDYwMHB4OyBtYXJnaW46IDAgYXV0bztcIj5cclxuICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzExOTk4ZSAwJSwgIzM4ZWY3ZCAxMDAlKTsgcGFkZGluZzogMjBweDsgdGV4dC1hbGlnbjogY2VudGVyO1wiPlxyXG4gICAgICAgICAgPGgxIHN0eWxlPVwiY29sb3I6IHdoaXRlOyBtYXJnaW46IDA7XCI+8J+TiiBEYWlseSBUcmFkaW5nIFN1bW1hcnk8L2gxPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9XCJwYWRkaW5nOiAyMHB4OyBiYWNrZ3JvdW5kOiAjZjhmOWZhO1wiPlxyXG4gICAgICAgICAgPGgyIHN0eWxlPVwiY29sb3I6ICMzMzM7XCI+UGVyZm9ybWFuY2UgT3ZlcnZpZXc8L2gyPlxyXG4gICAgICAgICAgPGRpdiBzdHlsZT1cImRpc3BsYXk6IGdyaWQ7IGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjsgZ2FwOiAyMHB4O1wiPlxyXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4xKTtcIj5cclxuICAgICAgICAgICAgICA8aDMgc3R5bGU9XCJtYXJnaW46IDA7IGNvbG9yOiAjNjY3ZWVhO1wiPlRvdGFsIFRyYWRlczwvaDM+XHJcbiAgICAgICAgICAgICAgPHAgc3R5bGU9XCJmb250LXNpemU6IDI0cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyBtYXJnaW46IDVweCAwOyBjb2xvcjogIzMzMztcIj57e3RvdGFsVHJhZGVzfX08L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4xKTtcIj5cclxuICAgICAgICAgICAgICA8aDMgc3R5bGU9XCJtYXJnaW46IDA7IGNvbG9yOiAjNjY3ZWVhO1wiPldpbiBSYXRlPC9oMz5cclxuICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMjRweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbjogNXB4IDA7IGNvbG9yOiAjMzMzO1wiPnt7d2luUmF0ZX19JTwvcD5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJiYWNrZ3JvdW5kOiB3aGl0ZTsgcGFkZGluZzogMTVweDsgYm9yZGVyLXJhZGl1czogOHB4OyBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjEpO1wiPlxyXG4gICAgICAgICAgICAgIDxoMyBzdHlsZT1cIm1hcmdpbjogMDsgY29sb3I6ICM2NjdlZWE7XCI+VG90YWwgUCZMPC9oMz5cclxuICAgICAgICAgICAgICA8cCBzdHlsZT1cImZvbnQtc2l6ZTogMjRweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbjogNXB4IDA7IGNvbG9yOiB7eyNpZiAoZ3QgdG90YWxQbkwgMCl9fSMyOGE3NDV7e2Vsc2V9fSNkYzM1NDV7ey9pZn19O1wiPiR7e3RvdGFsUG5MfX08L3A+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPVwiYmFja2dyb3VuZDogd2hpdGU7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4xKTtcIj5cclxuICAgICAgICAgICAgICA8aDMgc3R5bGU9XCJtYXJnaW46IDA7IGNvbG9yOiAjNjY3ZWVhO1wiPkJhbGFuY2U8L2gzPlxyXG4gICAgICAgICAgICAgIDxwIHN0eWxlPVwiZm9udC1zaXplOiAyNHB4OyBmb250LXdlaWdodDogYm9sZDsgbWFyZ2luOiA1cHggMDsgY29sb3I6ICMzMzM7XCI+JHt7YmFsYW5jZX19PC9wPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHAgc3R5bGU9XCJtYXJnaW4tdG9wOiAyMHB4OyBjb2xvcjogIzY2NjtcIj5SZXBvcnQgZ2VuZXJhdGVkIGF0IHt7dGltZXN0YW1wfX08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgYCk7XHJcblxyXG4gICAgLy8gU2VjdXJpdHkgYWxlcnQgdGVtcGxhdGVcclxuICAgIHRoaXMudGVtcGxhdGVzLnNldChFbWFpbE5vdGlmaWNhdGlvblR5cGUuU0VDVVJJVFlfQUxFUlQsIGBcclxuICAgICAgPGRpdiBzdHlsZT1cImZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsgbWF4LXdpZHRoOiA2MDBweDsgbWFyZ2luOiAwIGF1dG87XCI+XHJcbiAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjZiNmIgMCUsICNlZTVhMjQgMTAwJSk7IHBhZGRpbmc6IDIwcHg7IHRleHQtYWxpZ246IGNlbnRlcjtcIj5cclxuICAgICAgICAgIDxoMSBzdHlsZT1cImNvbG9yOiB3aGl0ZTsgbWFyZ2luOiAwO1wiPvCfmqggU2VjdXJpdHkgQWxlcnQ8L2gxPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgc3R5bGU9XCJwYWRkaW5nOiAyMHB4OyBiYWNrZ3JvdW5kOiAjZjhmOWZhO1wiPlxyXG4gICAgICAgICAgPGRpdiBzdHlsZT1cImJhY2tncm91bmQ6ICNmZmYzY2Q7IGJvcmRlcjogMXB4IHNvbGlkICNmZmVhYTc7IHBhZGRpbmc6IDE1cHg7IGJvcmRlci1yYWRpdXM6IDhweDsgbWFyZ2luLWJvdHRvbTogMjBweDtcIj5cclxuICAgICAgICAgICAgPGgyIHN0eWxlPVwiY29sb3I6ICM4NTY0MDQ7IG1hcmdpbjogMDtcIj57e3RocmVhdExldmVsfX0gVGhyZWF0IERldGVjdGVkPC9oMj5cclxuICAgICAgICAgICAgPHAgc3R5bGU9XCJjb2xvcjogIzg1NjQwNDsgbWFyZ2luOiA1cHggMDtcIj48c3Ryb25nPlR5cGU6PC9zdHJvbmc+IHt7aW5jaWRlbnRUeXBlfX08L3A+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxoMyBzdHlsZT1cImNvbG9yOiAjMzMzO1wiPkluY2lkZW50IERldGFpbHM8L2gzPlxyXG4gICAgICAgICAgPHAgc3R5bGU9XCJjb2xvcjogIzY2NjtcIj57e2Rlc2NyaXB0aW9ufX08L3A+XHJcbiAgICAgICAgICA8aDMgc3R5bGU9XCJjb2xvcjogIzMzMztcIj5BZmZlY3RlZCBTeXN0ZW1zPC9oMz5cclxuICAgICAgICAgIDx1bCBzdHlsZT1cImNvbG9yOiAjNjY2O1wiPlxyXG4gICAgICAgICAgICB7eyNlYWNoIGFmZmVjdGVkU3lzdGVtc319XHJcbiAgICAgICAgICAgIDxsaT57e3RoaXN9fTwvbGk+XHJcbiAgICAgICAgICAgIHt7L2VhY2h9fVxyXG4gICAgICAgICAgPC91bD5cclxuICAgICAgICAgIDxwIHN0eWxlPVwibWFyZ2luLXRvcDogMjBweDsgY29sb3I6ICM2NjY7XCI+PHN0cm9uZz5EZXRlY3RlZCBhdDo8L3N0cm9uZz4ge3t0aW1lc3RhbXB9fTwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICBgKTtcclxuXHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIEVtYWlsIHRlbXBsYXRlcyBsb2FkZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZW5lcmF0ZSBIVE1MIGNvbnRlbnQgZnJvbSB0ZW1wbGF0ZSBhbmQgZGF0YVxyXG4gICAqL1xyXG4gIHByaXZhdGUgYXN5bmMgZ2VuZXJhdGVFbWFpbENvbnRlbnQobm90aWZpY2F0aW9uOiBFbWFpbE5vdGlmaWNhdGlvbik6IFByb21pc2U8c3RyaW5nPiB7XHJcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IHRoaXMudGVtcGxhdGVzLmdldChub3RpZmljYXRpb24udHlwZSk7XHJcbiAgICBpZiAoIXRlbXBsYXRlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gdGVtcGxhdGUgZm91bmQgZm9yIG5vdGlmaWNhdGlvbiB0eXBlOiAke25vdGlmaWNhdGlvbi50eXBlfWApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFNpbXBsZSB0ZW1wbGF0ZSByZXBsYWNlbWVudCAoaW4gcHJvZHVjdGlvbiwgY29uc2lkZXIgdXNpbmcgYSBwcm9wZXIgdGVtcGxhdGUgZW5naW5lKVxyXG4gICAgbGV0IGNvbnRlbnQgPSB0ZW1wbGF0ZTtcclxuICAgIFxyXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMobm90aWZpY2F0aW9uLnRlbXBsYXRlRGF0YSkpIHtcclxuICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGB7eyR7a2V5fX19YCwgJ2cnKTtcclxuICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZShyZWdleCwgU3RyaW5nKHZhbHVlKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGNvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBNYXAgZW1haWwgcHJpb3JpdHkgdG8gbm9kZW1haWxlciBwcmlvcml0eVxyXG4gICAqL1xyXG4gIHByaXZhdGUgbWFwUHJpb3JpdHlUb05vZGVtYWlsZXIocHJpb3JpdHk6IEVtYWlsUHJpb3JpdHkpOiAnaGlnaCcgfCAnbm9ybWFsJyB8ICdsb3cnIHtcclxuICAgIHN3aXRjaCAocHJpb3JpdHkpIHtcclxuICAgICAgY2FzZSBFbWFpbFByaW9yaXR5LkNSSVRJQ0FMOlxyXG4gICAgICBjYXNlIEVtYWlsUHJpb3JpdHkuSElHSDpcclxuICAgICAgICByZXR1cm4gJ2hpZ2gnO1xyXG4gICAgICBjYXNlIEVtYWlsUHJpb3JpdHkuTE9XOlxyXG4gICAgICAgIHJldHVybiAnbG93JztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICByZXR1cm4gJ25vcm1hbCc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDbGVhbiB1cCBkZWxpdmVyeSB0cmFja2luZyAocmVtb3ZlIG9sZCBlbnRyaWVzKVxyXG4gICAqL1xyXG4gIHB1YmxpYyBjbGVhbnVwRGVsaXZlcnlUcmFja2luZyhvbGRlclRoYW5Ib3VyczogbnVtYmVyID0gMjQpOiB2b2lkIHtcclxuICAgIGNvbnN0IGN1dG9mZlRpbWUgPSBuZXcgRGF0ZShEYXRlLm5vdygpIC0gKG9sZGVyVGhhbkhvdXJzICogNjAgKiA2MCAqIDEwMDApKTtcclxuICAgIFxyXG4gICAgZm9yIChjb25zdCBbaWQsIHN0YXR1c10gb2YgdGhpcy5kZWxpdmVyeVRyYWNraW5nLmVudHJpZXMoKSkge1xyXG4gICAgICBpZiAoc3RhdHVzLnRpbWVzdGFtcCA8IGN1dG9mZlRpbWUpIHtcclxuICAgICAgICB0aGlzLmRlbGl2ZXJ5VHJhY2tpbmcuZGVsZXRlKGlkKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IGVtYWlsIHNlcnZpY2Ugc3RhdGlzdGljc1xyXG4gICAqL1xyXG4gIHB1YmxpYyBnZXRTdGF0aXN0aWNzKCk6IHtcclxuICAgIHRvdGFsU2VudDogbnVtYmVyO1xyXG4gICAgdG90YWxGYWlsZWQ6IG51bWJlcjtcclxuICAgIHBlbmRpbmdEZWxpdmVyaWVzOiBudW1iZXI7XHJcbiAgfSB7XHJcbiAgICBsZXQgdG90YWxTZW50ID0gMDtcclxuICAgIGxldCB0b3RhbEZhaWxlZCA9IDA7XHJcbiAgICBsZXQgcGVuZGluZ0RlbGl2ZXJpZXMgPSAwO1xyXG5cclxuICAgIGZvciAoY29uc3Qgc3RhdHVzIG9mIHRoaXMuZGVsaXZlcnlUcmFja2luZy52YWx1ZXMoKSkge1xyXG4gICAgICBzd2l0Y2ggKHN0YXR1cy5zdGF0dXMpIHtcclxuICAgICAgICBjYXNlICdzZW50JzpcclxuICAgICAgICBjYXNlICdkZWxpdmVyZWQnOlxyXG4gICAgICAgICAgdG90YWxTZW50Kys7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdmYWlsZWQnOlxyXG4gICAgICAgIGNhc2UgJ2JvdW5jZWQnOlxyXG4gICAgICAgICAgdG90YWxGYWlsZWQrKztcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3BlbmRpbmcnOlxyXG4gICAgICAgICAgcGVuZGluZ0RlbGl2ZXJpZXMrKztcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgdG90YWxTZW50LCB0b3RhbEZhaWxlZCwgcGVuZGluZ0RlbGl2ZXJpZXMgfTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVtYWlsU2VydmljZTtcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFB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