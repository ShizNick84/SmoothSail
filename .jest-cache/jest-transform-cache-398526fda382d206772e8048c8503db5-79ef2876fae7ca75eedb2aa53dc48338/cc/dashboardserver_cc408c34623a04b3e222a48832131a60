43893eddf406267b64bf0564a05cc806
"use strict";

/**
 * AI CRYPTO TRADING AGENT - DASHBOARD SERVER
 * Express.js server with WebSocket for real-time trading dashboard
 */
/* istanbul ignore next */
function cov_1m1i8q56xj() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts";
  var hash = "5b3e8cf8594938b52a19b735fedd1de0b9752c86";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\dashboard\\dashboard-server.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "4": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 53
        }
      },
      "5": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "6": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "7": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "8": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "9": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 29
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 43
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "17": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "18": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "19": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 44
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "21": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "22": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "23": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "24": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "25": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "26": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "29": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 49
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "32": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "34": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "35": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "36": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "37": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 115
        }
      },
      "38": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "39": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 48
        }
      },
      "40": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 74
        }
      },
      "41": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 24
        }
      },
      "42": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "43": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "44": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 24
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "46": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "47": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 39
        }
      },
      "48": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "49": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 100,
          column: 12
        }
      },
      "50": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 133,
          column: 12
        }
      },
      "51": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 106,
          column: 48
        }
      },
      "52": {
        start: {
          line: 106,
          column: 20
        },
        end: {
          line: 106,
          column: 48
        }
      },
      "53": {
        start: {
          line: 108,
          column: 39
        },
        end: {
          line: 108,
          column: 62
        }
      },
      "54": {
        start: {
          line: 109,
          column: 34
        },
        end: {
          line: 121,
          column: 18
        }
      },
      "55": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 111,
          column: 36
        }
      },
      "56": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 111,
          column: 36
        }
      },
      "57": {
        start: {
          line: 112,
          column: 20
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "58": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "59": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "60": {
        start: {
          line: 116,
          column: 40
        },
        end: {
          line: 116,
          column: 74
        }
      },
      "61": {
        start: {
          line: 117,
          column: 38
        },
        end: {
          line: 117,
          column: 64
        }
      },
      "62": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 50
        }
      },
      "63": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 33
        }
      },
      "64": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "65": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 41
        }
      },
      "66": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 71
        }
      },
      "67": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 42
        }
      },
      "68": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 64
        }
      },
      "69": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 86
        }
      },
      "70": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "71": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "72": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 19
        }
      },
      "73": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "74": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "75": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "76": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "77": {
        start: {
          line: 161,
          column: 31
        },
        end: {
          line: 176,
          column: 17
        }
      },
      "78": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 58
        }
      },
      "79": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 73
        }
      },
      "80": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 89
        }
      },
      "81": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "82": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "83": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "84": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "85": {
        start: {
          line: 200,
          column: 29
        },
        end: {
          line: 200,
          column: 35
        }
      },
      "86": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 63
        }
      },
      "87": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "88": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "89": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 98
        }
      },
      "90": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 339,
          column: 15
        }
      },
      "91": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 342,
          column: 15
        }
      },
      "92": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 105
        }
      },
      "93": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 350,
          column: 10
        }
      },
      "94": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 353,
          column: 42
        }
      },
      "95": {
        start: {
          line: 354,
          column: 0
        },
        end: {
          line: 354,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 6,
            column: 57
          }
        },
        loc: {
          start: {
            line: 6,
            column: 71
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 42
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 54
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 18
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 58
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 31
          }
        },
        loc: {
          start: {
            line: 62,
            column: 51
          },
          end: {
            line: 69,
            column: 13
          }
        },
        line: 62
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 63,
            column: 71
          },
          end: {
            line: 63,
            column: 72
          }
        },
        loc: {
          start: {
            line: 63,
            column: 77
          },
          end: {
            line: 67,
            column: 17
          }
        },
        line: 63
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 17
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 76
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 27
          }
        },
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 31
          }
        },
        loc: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 81
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 22
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 87
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 21
          }
        },
        loc: {
          start: {
            line: 103,
            column: 42
          },
          end: {
            line: 129,
            column: 13
          }
        },
        line: 103
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 109,
            column: 54
          },
          end: {
            line: 109,
            column: 55
          }
        },
        loc: {
          start: {
            line: 109,
            column: 71
          },
          end: {
            line: 121,
            column: 17
          }
        },
        line: 109
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 137,
            column: 22
          }
        },
        loc: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 137
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 18
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 148
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 150,
            column: 32
          },
          end: {
            line: 150,
            column: 33
          }
        },
        loc: {
          start: {
            line: 150,
            column: 46
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 150
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 159,
            column: 44
          }
        },
        loc: {
          start: {
            line: 159,
            column: 63
          },
          end: {
            line: 183,
            column: 9
          }
        },
        line: 159
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 185,
            column: 42
          },
          end: {
            line: 185,
            column: 43
          }
        },
        loc: {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 197,
            column: 9
          }
        },
        line: 185
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 199,
            column: 26
          },
          end: {
            line: 199,
            column: 27
          }
        },
        loc: {
          start: {
            line: 199,
            column: 40
          },
          end: {
            line: 331,
            column: 9
          }
        },
        line: 199
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 333
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 334,
            column: 33
          },
          end: {
            line: 334,
            column: 34
          }
        },
        loc: {
          start: {
            line: 334,
            column: 45
          },
          end: {
            line: 343,
            column: 9
          }
        },
        line: 334
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 340,
            column: 36
          },
          end: {
            line: 340,
            column: 37
          }
        },
        loc: {
          start: {
            line: 340,
            column: 42
          },
          end: {
            line: 342,
            column: 13
          }
        },
        line: 340
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 345
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 8,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 27
          }
        }, {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 51
          }
        }, {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 40
          }
        }, {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 7,
            column: 61
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 15
          }
        }, {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 33
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 60,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 78,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 106,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 106,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 111,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 111,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 113,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 20
          },
          end: {
            line: 113,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 119,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 119,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "9": {
        loc: {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        }, {
          start: {
            line: 125,
            column: 21
          },
          end: {
            line: 128,
            column: 17
          }
        }],
        line: 122
      },
      "10": {
        loc: {
          start: {
            line: 162,
            column: 35
          },
          end: {
            line: 162,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 35
          },
          end: {
            line: 162,
            column: 66
          }
        }, {
          start: {
            line: 162,
            column: 70
          },
          end: {
            line: 162,
            column: 74
          }
        }],
        line: 162
      },
      "11": {
        loc: {
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 163,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 163,
            column: 56
          }
        }, {
          start: {
            line: 163,
            column: 60
          },
          end: {
            line: 163,
            column: 64
          }
        }],
        line: 163
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 56
          }
        }, {
          start: {
            line: 164,
            column: 60
          },
          end: {
            line: 164,
            column: 64
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 201,
            column: 27
          },
          end: {
            line: 201,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 27
          },
          end: {
            line: 201,
            column: 44
          }
        }, {
          start: {
            line: 201,
            column: 48
          },
          end: {
            line: 201,
            column: 63
          }
        }],
        line: 201
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5b3e8cf8594938b52a19b735fedd1de0b9752c86"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m1i8q56xj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m1i8q56xj();
var __importDefault =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[0]++,
/* istanbul ignore next */
(cov_1m1i8q56xj().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1m1i8q56xj().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1m1i8q56xj().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1m1i8q56xj().f[0]++;
  cov_1m1i8q56xj().s[1]++;
  return /* istanbul ignore next */(cov_1m1i8q56xj().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1m1i8q56xj().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1m1i8q56xj().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1m1i8q56xj().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1m1i8q56xj().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1m1i8q56xj().s[3]++;
exports.DashboardServer = void 0;
const express_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[4]++, __importDefault(require("express")));
const http_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[5]++, require("http"));
const socket_io_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[6]++, require("socket.io"));
const cors_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[7]++, __importDefault(require("cors")));
const helmet_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[8]++, __importDefault(require("helmet")));
const logger_1 =
/* istanbul ignore next */
(cov_1m1i8q56xj().s[9]++, require("../core/logging/logger"));
class DashboardServer {
  constructor(config) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[1]++;
    cov_1m1i8q56xj().s[10]++;
    this.tradingEngine = null;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[11]++;
    this.aiEngine = null;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[12]++;
    this.database = null;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[13]++;
    this.security = null;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[14]++;
    this.sshTunnelManager = null;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[15]++;
    this.performanceIntegration = null;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[16]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[17]++;
    this.logger = new logger_1.Logger('DashboardServer');
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[18]++;
    this.config = config;
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[19]++;
    this.app = (0, express_1.default)();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[20]++;
    this.server = (0, http_1.createServer)(this.app);
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[21]++;
    this.io = new socket_io_1.Server(this.server, {
      cors: {
        origin: config.cors.origin,
        credentials: config.cors.credentials
      }
    });
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[22]++;
    this.setupMiddleware();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[23]++;
    this.setupRoutes();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[24]++;
    this.setupWebSocket();
  }
  setTradingEngine(tradingEngine) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[2]++;
    cov_1m1i8q56xj().s[25]++;
    this.tradingEngine = tradingEngine;
  }
  setAIEngine(aiEngine) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[3]++;
    cov_1m1i8q56xj().s[26]++;
    this.aiEngine = aiEngine;
  }
  setDatabase(database) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[4]++;
    cov_1m1i8q56xj().s[27]++;
    this.database = database;
  }
  setSecurity(security) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[5]++;
    cov_1m1i8q56xj().s[28]++;
    this.security = security;
  }
  setSSHTunnelManager(sshTunnelManager) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[6]++;
    cov_1m1i8q56xj().s[29]++;
    this.sshTunnelManager = sshTunnelManager;
  }
  setPerformanceIntegration(performanceIntegration) {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[7]++;
    cov_1m1i8q56xj().s[30]++;
    this.performanceIntegration = performanceIntegration;
  }
  async start() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[8]++;
    cov_1m1i8q56xj().s[31]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_1m1i8q56xj().b[3][0]++;
      cov_1m1i8q56xj().s[32]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1m1i8q56xj().b[3][1]++;
    }
    cov_1m1i8q56xj().s[33]++;
    try {
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[34]++;
      await new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[9]++;
        cov_1m1i8q56xj().s[35]++;
        this.server.listen(this.config.port, this.config.host, () => {
          /* istanbul ignore next */
          cov_1m1i8q56xj().f[10]++;
          cov_1m1i8q56xj().s[36]++;
          this.isRunning = true;
          /* istanbul ignore next */
          cov_1m1i8q56xj().s[37]++;
          this.logger.info(`Dashboard Server started on http://${this.config.host}:${this.config.port}`);
          /* istanbul ignore next */
          cov_1m1i8q56xj().s[38]++;
          resolve();
        });
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[39]++;
        this.server.on('error', reject);
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[40]++;
      this.logger.error('Failed to start Dashboard Server:', error);
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[41]++;
      throw error;
    }
  }
  async stop() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[11]++;
    cov_1m1i8q56xj().s[42]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_1m1i8q56xj().b[4][0]++;
      cov_1m1i8q56xj().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1m1i8q56xj().b[4][1]++;
    }
    cov_1m1i8q56xj().s[44]++;
    this.io.close();
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[45]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[12]++;
      cov_1m1i8q56xj().s[46]++;
      this.server.close(() => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[13]++;
        cov_1m1i8q56xj().s[47]++;
        this.isRunning = false;
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[48]++;
        resolve();
      });
    });
  }
  setupMiddleware() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[14]++;
    cov_1m1i8q56xj().s[49]++;
    // Configure Helmet for local network access
    this.app.use((0, helmet_1.default)({
      contentSecurityPolicy: {
        directives: {
          defaultSrc: ["'self'"],
          styleSrc: ["'self'", "'unsafe-inline'"],
          scriptSrc: ["'self'", "'unsafe-inline'"],
          imgSrc: ["'self'", "data:", "https:"],
          connectSrc: ["'self'", "ws:", "wss:"]
        }
      },
      crossOriginEmbedderPolicy: false
    }));
    // Configure CORS for local network access
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[50]++;
    this.app.use((0, cors_1.default)({
      origin: (origin, callback) => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[15]++;
        cov_1m1i8q56xj().s[51]++;
        // Allow requests with no origin (mobile apps, curl, etc.)
        if (!origin) {
          /* istanbul ignore next */
          cov_1m1i8q56xj().b[5][0]++;
          cov_1m1i8q56xj().s[52]++;
          return callback(null, true);
        } else
        /* istanbul ignore next */
        {
          cov_1m1i8q56xj().b[5][1]++;
        }
        // Check if origin matches configured patterns
        const allowedOrigins =
        /* istanbul ignore next */
        (cov_1m1i8q56xj().s[53]++, this.config.cors.origin);
        const isAllowed =
        /* istanbul ignore next */
        (cov_1m1i8q56xj().s[54]++, allowedOrigins.some(allowedOrigin => {
          /* istanbul ignore next */
          cov_1m1i8q56xj().f[16]++;
          cov_1m1i8q56xj().s[55]++;
          if (allowedOrigin === '*') {
            /* istanbul ignore next */
            cov_1m1i8q56xj().b[6][0]++;
            cov_1m1i8q56xj().s[56]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1m1i8q56xj().b[6][1]++;
          }
          cov_1m1i8q56xj().s[57]++;
          if (allowedOrigin === origin) {
            /* istanbul ignore next */
            cov_1m1i8q56xj().b[7][0]++;
            cov_1m1i8q56xj().s[58]++;
            return true;
          } else
          /* istanbul ignore next */
          {
            cov_1m1i8q56xj().b[7][1]++;
          }
          // Support wildcard patterns for local networks
          cov_1m1i8q56xj().s[59]++;
          if (allowedOrigin.includes('*')) {
            /* istanbul ignore next */
            cov_1m1i8q56xj().b[8][0]++;
            const pattern =
            /* istanbul ignore next */
            (cov_1m1i8q56xj().s[60]++, allowedOrigin.replace(/\*/g, '.*'));
            const regex =
            /* istanbul ignore next */
            (cov_1m1i8q56xj().s[61]++, new RegExp(`^${pattern}$`));
            /* istanbul ignore next */
            cov_1m1i8q56xj().s[62]++;
            return regex.test(origin);
          } else
          /* istanbul ignore next */
          {
            cov_1m1i8q56xj().b[8][1]++;
          }
          cov_1m1i8q56xj().s[63]++;
          return false;
        }));
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[64]++;
        if (isAllowed) {
          /* istanbul ignore next */
          cov_1m1i8q56xj().b[9][0]++;
          cov_1m1i8q56xj().s[65]++;
          callback(null, true);
        } else {
          /* istanbul ignore next */
          cov_1m1i8q56xj().b[9][1]++;
          cov_1m1i8q56xj().s[66]++;
          this.logger.warn(`CORS blocked origin: ${origin}`);
          /* istanbul ignore next */
          cov_1m1i8q56xj().s[67]++;
          callback(null, false);
        }
      },
      credentials: this.config.cors.credentials,
      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
      allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
    }));
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[68]++;
    this.app.use(express_1.default.json({
      limit: '10mb'
    }));
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[69]++;
    this.app.use(express_1.default.urlencoded({
      extended: true,
      limit: '10mb'
    }));
    // Add request logging for debugging
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[70]++;
    this.app.use((req, res, next) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[17]++;
      cov_1m1i8q56xj().s[71]++;
      this.logger.debug(`${req.method} ${req.path}`, {
        context: {
          origin: req.get('Origin'),
          userAgent: req.get('User-Agent'),
          ip: req.ip
        }
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[72]++;
      next();
    });
  }
  setupRoutes() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[18]++;
    cov_1m1i8q56xj().s[73]++;
    // Health check endpoint
    this.app.get('/health', (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[19]++;
      cov_1m1i8q56xj().s[74]++;
      res.json({
        status: 'healthy',
        timestamp: new Date().toISOString(),
        host: this.config.host,
        port: this.config.port
      });
    });
    // System status API
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[75]++;
    this.app.get('/api/system/status', async (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[20]++;
      cov_1m1i8q56xj().s[76]++;
      try {
        const status =
        /* istanbul ignore next */
        (cov_1m1i8q56xj().s[77]++, {
          tradingEngine:
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[10][0]++, this.tradingEngine?.getStatus()) ||
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[10][1]++, null),
          aiEngine:
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[11][0]++, this.aiEngine?.getStatus()) ||
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[11][1]++, null),
          database:
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[12][0]++, this.database?.getStatus()) ||
          /* istanbul ignore next */
          (cov_1m1i8q56xj().b[12][1]++, null),
          dashboard: {
            isRunning: this.isRunning,
            host: this.config.host,
            port: this.config.port,
            corsOrigins: this.config.cors.origin
          },
          network: {
            clientIP: req.ip,
            origin: req.get('Origin'),
            userAgent: req.get('User-Agent')
          }
        });
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[78]++;
        res.json({
          success: true,
          data: status
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[79]++;
        this.logger.error('Error getting system status:', error);
        /* istanbul ignore next */
        cov_1m1i8q56xj().s[80]++;
        res.status(500).json({
          success: false,
          error: 'Internal server error'
        });
      }
    });
    // Network info endpoint for debugging
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[81]++;
    this.app.get('/api/network/info', (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[21]++;
      const networkInfo =
      /* istanbul ignore next */
      (cov_1m1i8q56xj().s[82]++, {
        serverHost: this.config.host,
        serverPort: this.config.port,
        clientIP: req.ip,
        origin: req.get('Origin'),
        userAgent: req.get('User-Agent'),
        headers: req.headers,
        corsOrigins: this.config.cors.origin,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[83]++;
      res.json({
        success: true,
        data: networkInfo
      });
    });
    // Main dashboard page
    /* istanbul ignore next */
    cov_1m1i8q56xj().s[84]++;
    this.app.get('*', (req, res) => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[22]++;
      const clientIP =
      /* istanbul ignore next */
      (cov_1m1i8q56xj().s[85]++, req.ip);
      const origin =
      /* istanbul ignore next */
      (cov_1m1i8q56xj().s[86]++,
      /* istanbul ignore next */
      (cov_1m1i8q56xj().b[13][0]++, req.get('Origin')) ||
      /* istanbul ignore next */
      (cov_1m1i8q56xj().b[13][1]++, 'Direct access'));
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[87]++;
      res.send(`
        <!DOCTYPE html>
        <html>
        <head>
          <title>AI Crypto Trading Agent - Intel NUC</title>
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <style>
            body { 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
              margin: 0; padding: 20px; 
              background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%); 
              color: #e2e8f0; 
              min-height: 100vh;
            }
            .container { max-width: 1200px; margin: 0 auto; }
            .header { text-align: center; margin-bottom: 40px; }
            .status-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }
            .status-card { 
              background: rgba(30, 41, 59, 0.8); 
              padding: 24px; 
              border-radius: 12px; 
              border: 1px solid rgba(59, 130, 246, 0.2);
              backdrop-filter: blur(10px);
            }
            .status-card h3 { color: #3b82f6; margin-top: 0; }
            .status-indicator { 
              display: inline-block; 
              width: 12px; 
              height: 12px; 
              border-radius: 50%; 
              background: #10b981; 
              margin-right: 8px;
            }
            .network-info { font-size: 0.9em; opacity: 0.8; }
            .api-links { margin-top: 20px; }
            .api-links a { 
              color: #60a5fa; 
              text-decoration: none; 
              margin-right: 15px;
              padding: 8px 12px;
              background: rgba(59, 130, 246, 0.1);
              border-radius: 6px;
              border: 1px solid rgba(59, 130, 246, 0.2);
            }
            .api-links a:hover { background: rgba(59, 130, 246, 0.2); }
            @media (max-width: 768px) {
              .status-grid { grid-template-columns: 1fr; }
              body { padding: 10px; }
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>🤖 AI Crypto Trading Agent</h1>
              <p>Intel NUC Deployment - Local Network Dashboard</p>
            </div>
            
            <div class="status-grid">
              <div class="status-card">
                <h3><span class="status-indicator"></span>Dashboard Server</h3>
                <p><strong>Status:</strong> Running</p>
                <p><strong>Host:</strong> ${this.config.host}</p>
                <p><strong>Port:</strong> ${this.config.port}</p>
                <p><strong>Started:</strong> ${new Date().toLocaleString()}</p>
              </div>
              
              <div class="status-card">
                <h3>🌐 Network Information</h3>
                <p><strong>Your IP:</strong> ${clientIP}</p>
                <p><strong>Origin:</strong> ${origin}</p>
                <p><strong>Access URL:</strong> http://${req.get('host')}</p>
                <div class="network-info">
                  <p>This dashboard is accessible from any device on your local network.</p>
                </div>
              </div>
              
              <div class="status-card">
                <h3>🔗 SSH Tunnel</h3>
                <p><strong>Target:</strong> Oracle Cloud → Gate.io API</p>
                <p><strong>Local Port:</strong> 8443</p>
                <p><strong>Status:</strong> <span id="tunnel-status">Checking...</span></p>
              </div>
              
              <div class="status-card">
                <h3>💾 Database</h3>
                <p><strong>Type:</strong> PostgreSQL</p>
                <p><strong>Host:</strong> localhost:5432</p>
                <p><strong>Status:</strong> <span id="db-status">Checking...</span></p>
              </div>
            </div>
            
            <div class="status-card">
              <h3>🔧 API Endpoints</h3>
              <div class="api-links">
                <a href="/health" target="_blank">Health Check</a>
                <a href="/api/system/status" target="_blank">System Status</a>
                <a href="/api/network/info" target="_blank">Network Info</a>
              </div>
            </div>
          </div>
          
          <script>
            // Auto-refresh status indicators
            async function updateStatus() {
              try {
                const response = await fetch('/api/system/status');
                const data = await response.json();
                
                if (data.success) {
                  document.getElementById('tunnel-status').textContent = 'Connected';
                  document.getElementById('db-status').textContent = 'Connected';
                } else {
                  document.getElementById('tunnel-status').textContent = 'Error';
                  document.getElementById('db-status').textContent = 'Error';
                }
              } catch (error) {
                document.getElementById('tunnel-status').textContent = 'Unknown';
                document.getElementById('db-status').textContent = 'Unknown';
              }
            }
            
            // Update status on load and every 30 seconds
            updateStatus();
            setInterval(updateStatus, 30000);
          </script>
        </body>
        </html>
      `);
    });
  }
  setupWebSocket() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[23]++;
    cov_1m1i8q56xj().s[88]++;
    this.io.on('connection', socket => {
      /* istanbul ignore next */
      cov_1m1i8q56xj().f[24]++;
      cov_1m1i8q56xj().s[89]++;
      this.logger.info('WebSocket client connected:', {
        context: {
          socketId: socket.id
        }
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[90]++;
      socket.emit('welcome', {
        message: 'Connected to AI Crypto Trading Agent',
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_1m1i8q56xj().s[91]++;
      socket.on('disconnect', () => {
        /* istanbul ignore next */
        cov_1m1i8q56xj().f[25]++;
        cov_1m1i8q56xj().s[92]++;
        this.logger.info('WebSocket client disconnected:', {
          context: {
            socketId: socket.id
          }
        });
      });
    });
  }
  getStatus() {
    /* istanbul ignore next */
    cov_1m1i8q56xj().f[26]++;
    cov_1m1i8q56xj().s[93]++;
    return {
      isRunning: this.isRunning,
      port: this.config.port,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_1m1i8q56xj().s[94]++;
exports.DashboardServer = DashboardServer;
/* istanbul ignore next */
cov_1m1i8q56xj().s[95]++;
exports.default = DashboardServer;