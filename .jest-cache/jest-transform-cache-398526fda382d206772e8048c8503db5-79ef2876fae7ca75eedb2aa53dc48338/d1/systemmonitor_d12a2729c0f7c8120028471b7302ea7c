17d4537ced1d45d384933841203dc8c0
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - INTEL NUC SYSTEM MONITOR
 * =============================================================================
 *
 * This service provides comprehensive hardware monitoring for Intel NUC systems
 * running the AI crypto trading agent. It monitors CPU, RAM, SSD, network, and
 * thermal conditions to ensure optimal trading performance.
 *
 * CRITICAL PERFORMANCE NOTICE:
 * This system monitors hardware that controls trading operations. Hardware
 * failures or performance degradation could impact trading decisions and
 * result in financial losses. All metrics are continuously monitored.
 *
 * Hardware Specifications:
 * - Intel NUC with i5 CPU
 * - 12GB RAM
 * - 256GB M.2 SSD
 * - Wireless and Gigabit Ethernet
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_783ohuk0e() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\system-monitor.ts";
  var hash = "16a2d96a0dbbb719ce5a59aef5f2925f3360face";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\system-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "1": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "2": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "3": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 52
        }
      },
      "4": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "5": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 68
        }
      },
      "6": {
        start: {
          line: 31,
          column: 51
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "7": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "8": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 33
        }
      },
      "9": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 33
        }
      },
      "10": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "11": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "12": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "14": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 59,
          column: 4
        }
      },
      "15": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "17": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "18": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "19": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "20": {
        start: {
          line: 47,
          column: 77
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "21": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 26
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "25": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "26": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 23
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "28": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "29": {
        start: {
          line: 55,
          column: 38
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "30": {
        start: {
          line: 55,
          column: 56
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "31": {
        start: {
          line: 55,
          column: 78
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "32": {
        start: {
          line: 55,
          column: 102
        },
        end: {
          line: 55,
          column: 137
        }
      },
      "33": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "35": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "36": {
        start: {
          line: 61,
          column: 0
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "37": {
        start: {
          line: 62,
          column: 11
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "38": {
        start: {
          line: 63,
          column: 17
        },
        end: {
          line: 63,
          column: 49
        }
      },
      "39": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "40": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "41": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "42": {
        start: {
          line: 75,
          column: 19
        },
        end: {
          line: 75,
          column: 28
        }
      },
      "43": {
        start: {
          line: 77,
          column: 13
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "44": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 77
        }
      },
      "45": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "46": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 81
        }
      },
      "47": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "48": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 112,
          column: 49
        }
      },
      "49": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 111,
          column: 17
        }
      },
      "50": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 51
        }
      },
      "51": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 79
        }
      },
      "52": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 79
        }
      },
      "53": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "54": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 83
        }
      },
      "55": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 73
        }
      },
      "56": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "57": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 69
        }
      },
      "58": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 69
        }
      },
      "59": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "60": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 77
        }
      },
      "61": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 57
        }
      },
      "62": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "63": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 66
        }
      },
      "64": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "65": {
        start: {
          line: 164,
          column: 63
        },
        end: {
          line: 169,
          column: 14
        }
      },
      "66": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 182,
          column: 14
        }
      },
      "67": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 77
        }
      },
      "68": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "69": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "70": {
        start: {
          line: 197,
          column: 28
        },
        end: {
          line: 197,
          column: 42
        }
      },
      "71": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 211,
          column: 14
        }
      },
      "72": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 77
        }
      },
      "73": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 24
        }
      },
      "74": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "75": {
        start: {
          line: 226,
          column: 51
        },
        end: {
          line: 230,
          column: 14
        }
      },
      "76": {
        start: {
          line: 232,
          column: 32
        },
        end: {
          line: 232,
          column: 47
        }
      },
      "77": {
        start: {
          line: 233,
          column: 39
        },
        end: {
          line: 233,
          column: 60
        }
      },
      "78": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 245,
          column: 14
        }
      },
      "79": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 77
        }
      },
      "80": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 24
        }
      },
      "81": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "82": {
        start: {
          line: 260,
          column: 54
        },
        end: {
          line: 263,
          column: 14
        }
      },
      "83": {
        start: {
          line: 264,
          column: 31
        },
        end: {
          line: 273,
          column: 15
        }
      },
      "84": {
        start: {
          line: 264,
          column: 63
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "85": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 281,
          column: 15
        }
      },
      "86": {
        start: {
          line: 276,
          column: 30
        },
        end: {
          line: 276,
          column: 73
        }
      },
      "87": {
        start: {
          line: 276,
          column: 51
        },
        end: {
          line: 276,
          column: 72
        }
      },
      "88": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 280,
          column: 17
        }
      },
      "89": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 61
        }
      },
      "90": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 57
        }
      },
      "91": {
        start: {
          line: 282,
          column: 39
        },
        end: {
          line: 282,
          column: 104
        }
      },
      "92": {
        start: {
          line: 282,
          column: 74
        },
        end: {
          line: 282,
          column: 100
        }
      },
      "93": {
        start: {
          line: 283,
          column: 35
        },
        end: {
          line: 283,
          column: 100
        }
      },
      "94": {
        start: {
          line: 283,
          column: 70
        },
        end: {
          line: 283,
          column: 96
        }
      },
      "95": {
        start: {
          line: 285,
          column: 34
        },
        end: {
          line: 285,
          column: 115
        }
      },
      "96": {
        start: {
          line: 285,
          column: 69
        },
        end: {
          line: 285,
          column: 93
        }
      },
      "97": {
        start: {
          line: 286,
          column: 32
        },
        end: {
          line: 286,
          column: 113
        }
      },
      "98": {
        start: {
          line: 286,
          column: 67
        },
        end: {
          line: 286,
          column: 91
        }
      },
      "99": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 295,
          column: 14
        }
      },
      "100": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 81
        }
      },
      "101": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 24
        }
      },
      "102": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "103": {
        start: {
          line: 310,
          column: 27
        },
        end: {
          line: 310,
          column: 29
        }
      },
      "104": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 326,
          column: 13
        }
      },
      "105": {
        start: {
          line: 313,
          column: 28
        },
        end: {
          line: 313,
          column: 51
        }
      },
      "106": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "107": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 169
        }
      },
      "108": {
        start: {
          line: 317,
          column: 21
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "109": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 160
        }
      },
      "110": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 325,
          column: 17
        }
      },
      "111": {
        start: {
          line: 321,
          column: 20
        },
        end: {
          line: 321,
          column: 175
        }
      },
      "112": {
        start: {
          line: 323,
          column: 21
        },
        end: {
          line: 325,
          column: 17
        }
      },
      "113": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 324,
          column: 166
        }
      },
      "114": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "115": {
        start: {
          line: 329,
          column: 28
        },
        end: {
          line: 329,
          column: 51
        }
      },
      "116": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "117": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 172
        }
      },
      "118": {
        start: {
          line: 333,
          column: 21
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "119": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 163
        }
      },
      "120": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "121": {
        start: {
          line: 339,
          column: 28
        },
        end: {
          line: 339,
          column: 51
        }
      },
      "122": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 345,
          column: 17
        }
      },
      "123": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 173
        }
      },
      "124": {
        start: {
          line: 343,
          column: 21
        },
        end: {
          line: 345,
          column: 17
        }
      },
      "125": {
        start: {
          line: 344,
          column: 20
        },
        end: {
          line: 344,
          column: 164
        }
      },
      "126": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "127": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 47
        }
      },
      "128": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 73
        }
      },
      "129": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 377,
          column: 10
        }
      },
      "130": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "131": {
        start: {
          line: 389,
          column: 34
        },
        end: {
          line: 390,
          column: 96
        }
      },
      "132": {
        start: {
          line: 390,
          column: 27
        },
        end: {
          line: 390,
          column: 95
        }
      },
      "133": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "134": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 393,
          column: 64
        }
      },
      "135": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 58
        }
      },
      "136": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 23
        }
      },
      "137": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 51
        }
      },
      "138": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 405,
          column: 15
        }
      },
      "139": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 423,
          column: 13
        }
      },
      "140": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 422,
          column: 19
        }
      },
      "141": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 71
        }
      },
      "142": {
        start: {
          line: 436,
          column: 43
        },
        end: {
          line: 436,
          column: 62
        }
      },
      "143": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 459,
          column: 11
        }
      },
      "144": {
        start: {
          line: 456,
          column: 65
        },
        end: {
          line: 456,
          column: 71
        }
      },
      "145": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 513,
          column: 9
        }
      },
      "146": {
        start: {
          line: 469,
          column: 47
        },
        end: {
          line: 469,
          column: 66
        }
      },
      "147": {
        start: {
          line: 471,
          column: 30
        },
        end: {
          line: 471,
          column: 168
        }
      },
      "148": {
        start: {
          line: 472,
          column: 30
        },
        end: {
          line: 472,
          column: 171
        }
      },
      "149": {
        start: {
          line: 473,
          column: 30
        },
        end: {
          line: 473,
          column: 172
        }
      },
      "150": {
        start: {
          line: 474,
          column: 34
        },
        end: {
          line: 474,
          column: 174
        }
      },
      "151": {
        start: {
          line: 475,
          column: 34
        },
        end: {
          line: 481,
          column: 13
        }
      },
      "152": {
        start: {
          line: 476,
          column: 55
        },
        end: {
          line: 476,
          column: 61
        }
      },
      "153": {
        start: {
          line: 477,
          column: 56
        },
        end: {
          line: 477,
          column: 62
        }
      },
      "154": {
        start: {
          line: 478,
          column: 60
        },
        end: {
          line: 478,
          column: 66
        }
      },
      "155": {
        start: {
          line: 479,
          column: 55
        },
        end: {
          line: 479,
          column: 61
        }
      },
      "156": {
        start: {
          line: 483,
          column: 34
        },
        end: {
          line: 483,
          column: 147
        }
      },
      "157": {
        start: {
          line: 485,
          column: 36
        },
        end: {
          line: 485,
          column: 38
        }
      },
      "158": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 487,
          column: 83
        }
      },
      "159": {
        start: {
          line: 487,
          column: 16
        },
        end: {
          line: 487,
          column: 83
        }
      },
      "160": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 489,
          column: 86
        }
      },
      "161": {
        start: {
          line: 489,
          column: 16
        },
        end: {
          line: 489,
          column: 86
        }
      },
      "162": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 491,
          column: 72
        }
      },
      "163": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 491,
          column: 72
        }
      },
      "164": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 493,
          column: 77
        }
      },
      "165": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 493,
          column: 77
        }
      },
      "166": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 495,
          column: 67
        }
      },
      "167": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 495,
          column: 67
        }
      },
      "168": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 508,
          column: 14
        }
      },
      "169": {
        start: {
          line: 505,
          column: 75
        },
        end: {
          line: 505,
          column: 85
        }
      },
      "170": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 511,
          column: 82
        }
      },
      "171": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 24
        }
      },
      "172": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "173": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 102
        }
      },
      "174": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 32
        }
      },
      "175": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 532,
          column: 69
        }
      },
      "176": {
        start: {
          line: 534,
          column: 13
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "177": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 535,
          column: 122
        }
      },
      "178": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 31
        }
      },
      "179": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 69
        }
      },
      "180": {
        start: {
          line: 539,
          column: 13
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "181": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 79
        }
      },
      "182": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 28
        }
      },
      "183": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 65
        }
      },
      "184": {
        start: {
          line: 545,
          column: 12
        },
        end: {
          line: 545,
          column: 24
        }
      },
      "185": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 546,
          column: 33
        }
      },
      "186": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 547,
          column: 70
        }
      },
      "187": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 558,
          column: 10
        }
      },
      "188": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 594,
          column: 9
        }
      },
      "189": {
        start: {
          line: 568,
          column: 29
        },
        end: {
          line: 568,
          column: 31
        }
      },
      "190": {
        start: {
          line: 569,
          column: 36
        },
        end: {
          line: 569,
          column: 40
        }
      },
      "191": {
        start: {
          line: 570,
          column: 38
        },
        end: {
          line: 570,
          column: 57
        }
      },
      "192": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 574,
          column: 13
        }
      },
      "193": {
        start: {
          line: 573,
          column: 16
        },
        end: {
          line: 573,
          column: 111
        }
      },
      "194": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 579,
          column: 13
        }
      },
      "195": {
        start: {
          line: 577,
          column: 16
        },
        end: {
          line: 577,
          column: 124
        }
      },
      "196": {
        start: {
          line: 578,
          column: 16
        },
        end: {
          line: 578,
          column: 42
        }
      },
      "197": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 583,
          column: 13
        }
      },
      "198": {
        start: {
          line: 582,
          column: 16
        },
        end: {
          line: 582,
          column: 129
        }
      },
      "199": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 588,
          column: 13
        }
      },
      "200": {
        start: {
          line: 586,
          column: 16
        },
        end: {
          line: 586,
          column: 125
        }
      },
      "201": {
        start: {
          line: 587,
          column: 16
        },
        end: {
          line: 587,
          column: 42
        }
      },
      "202": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 589,
          column: 51
        }
      },
      "203": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 592,
          column: 86
        }
      },
      "204": {
        start: {
          line: 593,
          column: 12
        },
        end: {
          line: 593,
          column: 88
        }
      },
      "205": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 603,
          column: 42
        }
      },
      "206": {
        start: {
          line: 610,
          column: 8
        },
        end: {
          line: 614,
          column: 9
        }
      },
      "207": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 611,
          column: 51
        }
      },
      "208": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 43
        }
      },
      "209": {
        start: {
          line: 613,
          column: 12
        },
        end: {
          line: 613,
          column: 67
        }
      },
      "210": {
        start: {
          line: 621,
          column: 8
        },
        end: {
          line: 621,
          column: 87
        }
      },
      "211": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 77
        }
      },
      "212": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 81
        }
      },
      "213": {
        start: {
          line: 634,
          column: 8
        },
        end: {
          line: 634,
          column: 71
        }
      },
      "214": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 649,
          column: 10
        }
      },
      "215": {
        start: {
          line: 652,
          column: 0
        },
        end: {
          line: 652,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 27,
            column: 74
          },
          end: {
            line: 27,
            column: 75
          }
        },
        loc: {
          start: {
            line: 27,
            column: 96
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 31,
            column: 39
          }
        },
        loc: {
          start: {
            line: 31,
            column: 49
          },
          end: {
            line: 31,
            column: 65
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        loc: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 80
          },
          end: {
            line: 38,
            column: 81
          }
        },
        loc: {
          start: {
            line: 38,
            column: 95
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 5
          },
          end: {
            line: 40,
            column: 6
          }
        },
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 51
          },
          end: {
            line: 43,
            column: 52
          }
        },
        loc: {
          start: {
            line: 43,
            column: 63
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 44,
            column: 19
          }
        },
        loc: {
          start: {
            line: 44,
            column: 30
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 49
          }
        },
        loc: {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 52,
            column: 12
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 52
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 18
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 99
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 105,
            column: 50
          },
          end: {
            line: 105,
            column: 51
          }
        },
        loc: {
          start: {
            line: 105,
            column: 62
          },
          end: {
            line: 112,
            column: 13
          }
        },
        line: 105
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 30
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 137
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 30
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 162
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 195
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 224
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 34
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 258
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 264,
            column: 53
          },
          end: {
            line: 264,
            column: 54
          }
        },
        loc: {
          start: {
            line: 264,
            column: 63
          },
          end: {
            line: 273,
            column: 13
          }
        },
        line: 264
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 275,
            column: 33
          },
          end: {
            line: 275,
            column: 34
          }
        },
        loc: {
          start: {
            line: 275,
            column: 41
          },
          end: {
            line: 281,
            column: 13
          }
        },
        line: 275
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 276,
            column: 46
          },
          end: {
            line: 276,
            column: 47
          }
        },
        loc: {
          start: {
            line: 276,
            column: 51
          },
          end: {
            line: 276,
            column: 72
          }
        },
        line: 276
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 282,
            column: 59
          },
          end: {
            line: 282,
            column: 60
          }
        },
        loc: {
          start: {
            line: 282,
            column: 74
          },
          end: {
            line: 282,
            column: 100
          }
        },
        line: 282
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 283,
            column: 55
          },
          end: {
            line: 283,
            column: 56
          }
        },
        loc: {
          start: {
            line: 283,
            column: 70
          },
          end: {
            line: 283,
            column: 96
          }
        },
        line: 283
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 285,
            column: 54
          },
          end: {
            line: 285,
            column: 55
          }
        },
        loc: {
          start: {
            line: 285,
            column: 69
          },
          end: {
            line: 285,
            column: 93
          }
        },
        line: 285
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 286,
            column: 52
          },
          end: {
            line: 286,
            column: 53
          }
        },
        loc: {
          start: {
            line: 286,
            column: 67
          },
          end: {
            line: 286,
            column: 91
          }
        },
        line: 286
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 44
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 308
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 367,
            column: 5
          }
        },
        loc: {
          start: {
            line: 367,
            column: 66
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 367
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 30
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 386
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 390,
            column: 22
          },
          end: {
            line: 390,
            column: 23
          }
        },
        loc: {
          start: {
            line: 390,
            column: 27
          },
          end: {
            line: 390,
            column: 95
          }
        },
        line: 390
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 22
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 435
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 456,
            column: 60
          },
          end: {
            line: 456,
            column: 61
          }
        },
        loc: {
          start: {
            line: 456,
            column: 65
          },
          end: {
            line: 456,
            column: 71
          }
        },
        line: 456
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 467,
            column: 5
          }
        },
        loc: {
          start: {
            line: 467,
            column: 34
          },
          end: {
            line: 514,
            column: 5
          }
        },
        line: 467
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 476,
            column: 50
          },
          end: {
            line: 476,
            column: 51
          }
        },
        loc: {
          start: {
            line: 476,
            column: 55
          },
          end: {
            line: 476,
            column: 61
          }
        },
        line: 476
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 477,
            column: 51
          },
          end: {
            line: 477,
            column: 52
          }
        },
        loc: {
          start: {
            line: 477,
            column: 56
          },
          end: {
            line: 477,
            column: 62
          }
        },
        line: 477
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 478,
            column: 55
          },
          end: {
            line: 478,
            column: 56
          }
        },
        loc: {
          start: {
            line: 478,
            column: 60
          },
          end: {
            line: 478,
            column: 66
          }
        },
        line: 478
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 479,
            column: 50
          },
          end: {
            line: 479,
            column: 51
          }
        },
        loc: {
          start: {
            line: 479,
            column: 55
          },
          end: {
            line: 479,
            column: 61
          }
        },
        line: 479
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 505,
            column: 70
          },
          end: {
            line: 505,
            column: 71
          }
        },
        loc: {
          start: {
            line: 505,
            column: 75
          },
          end: {
            line: 505,
            column: 85
          }
        },
        line: 505
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 93
          },
          end: {
            line: 559,
            column: 5
          }
        },
        line: 525
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 566,
            column: 4
          },
          end: {
            line: 566,
            column: 5
          }
        },
        loc: {
          start: {
            line: 566,
            column: 39
          },
          end: {
            line: 595,
            column: 5
          }
        },
        line: 566
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 602,
            column: 4
          },
          end: {
            line: 602,
            column: 5
          }
        },
        loc: {
          start: {
            line: 602,
            column: 24
          },
          end: {
            line: 604,
            column: 5
          }
        },
        line: 602
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 609,
            column: 4
          },
          end: {
            line: 609,
            column: 5
          }
        },
        loc: {
          start: {
            line: 609,
            column: 29
          },
          end: {
            line: 615,
            column: 5
          }
        },
        line: 609
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 620,
            column: 4
          },
          end: {
            line: 620,
            column: 5
          }
        },
        loc: {
          start: {
            line: 620,
            column: 46
          },
          end: {
            line: 625,
            column: 5
          }
        },
        line: 620
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 630,
            column: 4
          },
          end: {
            line: 630,
            column: 5
          }
        },
        loc: {
          start: {
            line: 630,
            column: 35
          },
          end: {
            line: 635,
            column: 5
          }
        },
        line: 630
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 642,
            column: 4
          },
          end: {
            line: 642,
            column: 5
          }
        },
        loc: {
          start: {
            line: 642,
            column: 16
          },
          end: {
            line: 650,
            column: 5
          }
        },
        line: 642
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 37,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: 27,
            column: 57
          },
          end: {
            line: 37,
            column: 2
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 57
          },
          end: {
            line: 37,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 74
          },
          end: {
            line: 34,
            column: 1
          }
        }, {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 47
          }
        }, {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 63
          }
        }, {
          start: {
            line: 30,
            column: 67
          },
          end: {
            line: 30,
            column: 84
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 42,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 30
          }
        }, {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 57
          }
        }, {
          start: {
            line: 38,
            column: 63
          },
          end: {
            line: 42,
            column: 1
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 63
          },
          end: {
            line: 42,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 80
          },
          end: {
            line: 40,
            column: 1
          }
        }, {
          start: {
            line: 40,
            column: 5
          },
          end: {
            line: 42,
            column: 1
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 59,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 24
          }
        }, {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 45
          }
        }, {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 59,
            column: 4
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 18
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 18
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 49,
            column: 9
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 15
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 53,
            column: 33
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "16": {
        loc: {
          start: {
            line: 55,
            column: 78
          },
          end: {
            line: 55,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 78
          },
          end: {
            line: 55,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "17": {
        loc: {
          start: {
            line: 79,
            column: 38
          },
          end: {
            line: 79,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 38
          },
          end: {
            line: 79,
            column: 77
          }
        }, {
          start: {
            line: 79,
            column: 81
          },
          end: {
            line: 79,
            column: 85
          }
        }],
        line: 79
      },
      "18": {
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 80,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 80,
            column: 79
          }
        }, {
          start: {
            line: 80,
            column: 83
          },
          end: {
            line: 80,
            column: 87
          }
        }],
        line: 80
      },
      "19": {
        loc: {
          start: {
            line: 81,
            column: 38
          },
          end: {
            line: 81,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 38
          },
          end: {
            line: 81,
            column: 80
          }
        }, {
          start: {
            line: 81,
            column: 84
          },
          end: {
            line: 81,
            column: 88
          }
        }],
        line: 81
      },
      "20": {
        loc: {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 82,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 82,
            column: 82
          }
        }, {
          start: {
            line: 82,
            column: 86
          },
          end: {
            line: 82,
            column: 90
          }
        }],
        line: 82
      },
      "21": {
        loc: {
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 83,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 83,
            column: 78
          }
        }, {
          start: {
            line: 83,
            column: 82
          },
          end: {
            line: 83,
            column: 86
          }
        }],
        line: 83
      },
      "22": {
        loc: {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 80
          }
        }, {
          start: {
            line: 84,
            column: 84
          },
          end: {
            line: 84,
            column: 88
          }
        }],
        line: 84
      },
      "23": {
        loc: {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 77
          }
        }, {
          start: {
            line: 85,
            column: 81
          },
          end: {
            line: 85,
            column: 85
          }
        }],
        line: 85
      },
      "24": {
        loc: {
          start: {
            line: 86,
            column: 40
          },
          end: {
            line: 86,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 40
          },
          end: {
            line: 86,
            column: 79
          }
        }, {
          start: {
            line: 86,
            column: 83
          },
          end: {
            line: 86,
            column: 87
          }
        }],
        line: 86
      },
      "25": {
        loc: {
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 87,
            column: 78
          }
        }, {
          start: {
            line: 87,
            column: 82
          },
          end: {
            line: 87,
            column: 87
          }
        }],
        line: 87
      },
      "26": {
        loc: {
          start: {
            line: 88,
            column: 41
          },
          end: {
            line: 88,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 41
          },
          end: {
            line: 88,
            column: 80
          }
        }, {
          start: {
            line: 88,
            column: 84
          },
          end: {
            line: 88,
            column: 89
          }
        }],
        line: 88
      },
      "27": {
        loc: {
          start: {
            line: 172,
            column: 29
          },
          end: {
            line: 172,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 29
          },
          end: {
            line: 172,
            column: 41
          }
        }, {
          start: {
            line: 172,
            column: 45
          },
          end: {
            line: 172,
            column: 46
          }
        }],
        line: 172
      },
      "28": {
        loc: {
          start: {
            line: 173,
            column: 27
          },
          end: {
            line: 173,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 27
          },
          end: {
            line: 173,
            column: 40
          }
        }, {
          start: {
            line: 173,
            column: 44
          },
          end: {
            line: 173,
            column: 45
          }
        }],
        line: 173
      },
      "29": {
        loc: {
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 174,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 174,
            column: 49
          }
        }, {
          start: {
            line: 174,
            column: 53
          },
          end: {
            line: 174,
            column: 54
          }
        }],
        line: 174
      },
      "30": {
        loc: {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 40
          }
        }, {
          start: {
            line: 175,
            column: 44
          },
          end: {
            line: 175,
            column: 45
          }
        }],
        line: 175
      },
      "31": {
        loc: {
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 51
          }
        }, {
          start: {
            line: 177,
            column: 55
          },
          end: {
            line: 177,
            column: 56
          }
        }],
        line: 177
      },
      "32": {
        loc: {
          start: {
            line: 178,
            column: 29
          },
          end: {
            line: 178,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 29
          },
          end: {
            line: 178,
            column: 42
          }
        }, {
          start: {
            line: 178,
            column: 46
          },
          end: {
            line: 178,
            column: 47
          }
        }],
        line: 178
      },
      "33": {
        loc: {
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 180,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 180,
            column: 36
          }
        }, {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 49
          }
        }],
        line: 180
      },
      "34": {
        loc: {
          start: {
            line: 181,
            column: 23
          },
          end: {
            line: 181,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 23
          },
          end: {
            line: 181,
            column: 36
          }
        }, {
          start: {
            line: 181,
            column: 40
          },
          end: {
            line: 181,
            column: 41
          }
        }],
        line: 181
      },
      "35": {
        loc: {
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 38
          }
        }, {
          start: {
            line: 203,
            column: 42
          },
          end: {
            line: 203,
            column: 43
          }
        }],
        line: 203
      },
      "36": {
        loc: {
          start: {
            line: 204,
            column: 25
          },
          end: {
            line: 204,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 25
          },
          end: {
            line: 204,
            column: 40
          }
        }, {
          start: {
            line: 204,
            column: 44
          },
          end: {
            line: 204,
            column: 45
          }
        }],
        line: 204
      },
      "37": {
        loc: {
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 207,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 207,
            column: 44
          }
        }, {
          start: {
            line: 207,
            column: 48
          },
          end: {
            line: 207,
            column: 49
          }
        }],
        line: 207
      },
      "38": {
        loc: {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 208,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 208,
            column: 42
          }
        }, {
          start: {
            line: 208,
            column: 46
          },
          end: {
            line: 208,
            column: 47
          }
        }],
        line: 208
      },
      "39": {
        loc: {
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 209,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 209,
            column: 42
          }
        }, {
          start: {
            line: 209,
            column: 46
          },
          end: {
            line: 209,
            column: 47
          }
        }],
        line: 209
      },
      "40": {
        loc: {
          start: {
            line: 232,
            column: 32
          },
          end: {
            line: 232,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 32
          },
          end: {
            line: 232,
            column: 41
          }
        }, {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 232,
            column: 47
          }
        }],
        line: 232
      },
      "41": {
        loc: {
          start: {
            line: 233,
            column: 39
          },
          end: {
            line: 233,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 39
          },
          end: {
            line: 233,
            column: 54
          }
        }, {
          start: {
            line: 233,
            column: 58
          },
          end: {
            line: 233,
            column: 60
          }
        }],
        line: 233
      },
      "42": {
        loc: {
          start: {
            line: 235,
            column: 23
          },
          end: {
            line: 235,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 23
          },
          end: {
            line: 235,
            column: 39
          }
        }, {
          start: {
            line: 235,
            column: 43
          },
          end: {
            line: 235,
            column: 44
          }
        }],
        line: 235
      },
      "43": {
        loc: {
          start: {
            line: 236,
            column: 22
          },
          end: {
            line: 236,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 22
          },
          end: {
            line: 236,
            column: 38
          }
        }, {
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 236,
            column: 43
          }
        }],
        line: 236
      },
      "44": {
        loc: {
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 237,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 237,
            column: 43
          }
        }, {
          start: {
            line: 237,
            column: 47
          },
          end: {
            line: 237,
            column: 48
          }
        }],
        line: 237
      },
      "45": {
        loc: {
          start: {
            line: 238,
            column: 40
          },
          end: {
            line: 238,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 40
          },
          end: {
            line: 238,
            column: 55
          }
        }, {
          start: {
            line: 238,
            column: 59
          },
          end: {
            line: 238,
            column: 60
          }
        }],
        line: 238
      },
      "46": {
        loc: {
          start: {
            line: 239,
            column: 26
          },
          end: {
            line: 239,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 26
          },
          end: {
            line: 239,
            column: 36
          }
        }, {
          start: {
            line: 239,
            column: 40
          },
          end: {
            line: 239,
            column: 41
          }
        }],
        line: 239
      },
      "47": {
        loc: {
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 240,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 240,
            column: 37
          }
        }, {
          start: {
            line: 240,
            column: 41
          },
          end: {
            line: 240,
            column: 42
          }
        }],
        line: 240
      },
      "48": {
        loc: {
          start: {
            line: 241,
            column: 33
          },
          end: {
            line: 241,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 33
          },
          end: {
            line: 241,
            column: 47
          }
        }, {
          start: {
            line: 241,
            column: 51
          },
          end: {
            line: 241,
            column: 52
          }
        }],
        line: 241
      },
      "49": {
        loc: {
          start: {
            line: 242,
            column: 34
          },
          end: {
            line: 242,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 34
          },
          end: {
            line: 242,
            column: 48
          }
        }, {
          start: {
            line: 242,
            column: 52
          },
          end: {
            line: 242,
            column: 53
          }
        }],
        line: 242
      },
      "50": {
        loc: {
          start: {
            line: 244,
            column: 29
          },
          end: {
            line: 244,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 29
          },
          end: {
            line: 244,
            column: 59
          }
        }, {
          start: {
            line: 244,
            column: 63
          },
          end: {
            line: 244,
            column: 64
          }
        }],
        line: 244
      },
      "51": {
        loc: {
          start: {
            line: 266,
            column: 22
          },
          end: {
            line: 266,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 22
          },
          end: {
            line: 266,
            column: 32
          }
        }, {
          start: {
            line: 266,
            column: 36
          },
          end: {
            line: 266,
            column: 45
          }
        }],
        line: 266
      },
      "52": {
        loc: {
          start: {
            line: 267,
            column: 20
          },
          end: {
            line: 267,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 20
          },
          end: {
            line: 267,
            column: 29
          }
        }, {
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 267,
            column: 35
          }
        }],
        line: 267
      },
      "53": {
        loc: {
          start: {
            line: 268,
            column: 21
          },
          end: {
            line: 268,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 21
          },
          end: {
            line: 268,
            column: 30
          }
        }, {
          start: {
            line: 268,
            column: 34
          },
          end: {
            line: 268,
            column: 36
          }
        }],
        line: 268
      },
      "54": {
        loc: {
          start: {
            line: 269,
            column: 22
          },
          end: {
            line: 269,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 22
          },
          end: {
            line: 269,
            column: 37
          }
        }, {
          start: {
            line: 269,
            column: 41
          },
          end: {
            line: 269,
            column: 65
          }
        }],
        line: 269
      },
      "55": {
        loc: {
          start: {
            line: 270,
            column: 23
          },
          end: {
            line: 270,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 23
          },
          end: {
            line: 270,
            column: 34
          }
        }, {
          start: {
            line: 270,
            column: 38
          },
          end: {
            line: 270,
            column: 39
          }
        }],
        line: 270
      },
      "56": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 280,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 280,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "57": {
        loc: {
          start: {
            line: 278,
            column: 42
          },
          end: {
            line: 278,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 42
          },
          end: {
            line: 278,
            column: 55
          }
        }, {
          start: {
            line: 278,
            column: 59
          },
          end: {
            line: 278,
            column: 60
          }
        }],
        line: 278
      },
      "58": {
        loc: {
          start: {
            line: 279,
            column: 38
          },
          end: {
            line: 279,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 38
          },
          end: {
            line: 279,
            column: 51
          }
        }, {
          start: {
            line: 279,
            column: 55
          },
          end: {
            line: 279,
            column: 56
          }
        }],
        line: 279
      },
      "59": {
        loc: {
          start: {
            line: 282,
            column: 81
          },
          end: {
            line: 282,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 81
          },
          end: {
            line: 282,
            column: 94
          }
        }, {
          start: {
            line: 282,
            column: 98
          },
          end: {
            line: 282,
            column: 99
          }
        }],
        line: 282
      },
      "60": {
        loc: {
          start: {
            line: 283,
            column: 77
          },
          end: {
            line: 283,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 77
          },
          end: {
            line: 283,
            column: 90
          }
        }, {
          start: {
            line: 283,
            column: 94
          },
          end: {
            line: 283,
            column: 95
          }
        }],
        line: 283
      },
      "61": {
        loc: {
          start: {
            line: 285,
            column: 76
          },
          end: {
            line: 285,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 76
          },
          end: {
            line: 285,
            column: 87
          }
        }, {
          start: {
            line: 285,
            column: 91
          },
          end: {
            line: 285,
            column: 92
          }
        }],
        line: 285
      },
      "62": {
        loc: {
          start: {
            line: 286,
            column: 74
          },
          end: {
            line: 286,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 74
          },
          end: {
            line: 286,
            column: 85
          }
        }, {
          start: {
            line: 286,
            column: 89
          },
          end: {
            line: 286,
            column: 90
          }
        }],
        line: 286
      },
      "63": {
        loc: {
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 326,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 326,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "64": {
        loc: {
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 319,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 319,
            column: 17
          }
        }, {
          start: {
            line: 317,
            column: 21
          },
          end: {
            line: 319,
            column: 17
          }
        }],
        line: 314
      },
      "65": {
        loc: {
          start: {
            line: 317,
            column: 21
          },
          end: {
            line: 319,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 21
          },
          end: {
            line: 319,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "66": {
        loc: {
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 325,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 325,
            column: 17
          }
        }, {
          start: {
            line: 323,
            column: 21
          },
          end: {
            line: 325,
            column: 17
          }
        }],
        line: 320
      },
      "67": {
        loc: {
          start: {
            line: 323,
            column: 21
          },
          end: {
            line: 325,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 21
          },
          end: {
            line: 325,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "68": {
        loc: {
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "69": {
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        }, {
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 335,
            column: 17
          }
        }],
        line: 330
      },
      "70": {
        loc: {
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 335,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 21
          },
          end: {
            line: 335,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "71": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "72": {
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 345,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 345,
            column: 17
          }
        }, {
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 345,
            column: 17
          }
        }],
        line: 340
      },
      "73": {
        loc: {
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 345,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 345,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "74": {
        loc: {
          start: {
            line: 390,
            column: 27
          },
          end: {
            line: 390,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 27
          },
          end: {
            line: 390,
            column: 48
          }
        }, {
          start: {
            line: 390,
            column: 52
          },
          end: {
            line: 390,
            column: 81
          }
        }, {
          start: {
            line: 390,
            column: 85
          },
          end: {
            line: 390,
            column: 95
          }
        }],
        line: 390
      },
      "75": {
        loc: {
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 391,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 391
      },
      "76": {
        loc: {
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 423,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "77": {
        loc: {
          start: {
            line: 438,
            column: 17
          },
          end: {
            line: 442,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 438,
            column: 23
          },
          end: {
            line: 442,
            column: 13
          }
        }, {
          start: {
            line: 442,
            column: 16
          },
          end: {
            line: 442,
            column: 20
          }
        }],
        line: 438
      },
      "78": {
        loc: {
          start: {
            line: 443,
            column: 17
          },
          end: {
            line: 447,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 443,
            column: 23
          },
          end: {
            line: 447,
            column: 13
          }
        }, {
          start: {
            line: 447,
            column: 16
          },
          end: {
            line: 447,
            column: 20
          }
        }],
        line: 443
      },
      "79": {
        loc: {
          start: {
            line: 448,
            column: 17
          },
          end: {
            line: 452,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 448,
            column: 23
          },
          end: {
            line: 452,
            column: 13
          }
        }, {
          start: {
            line: 452,
            column: 16
          },
          end: {
            line: 452,
            column: 20
          }
        }],
        line: 448
      },
      "80": {
        loc: {
          start: {
            line: 453,
            column: 21
          },
          end: {
            line: 457,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 31
          },
          end: {
            line: 457,
            column: 13
          }
        }, {
          start: {
            line: 457,
            column: 16
          },
          end: {
            line: 457,
            column: 20
          }
        }],
        line: 453
      },
      "81": {
        loc: {
          start: {
            line: 471,
            column: 60
          },
          end: {
            line: 471,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 60
          },
          end: {
            line: 471,
            column: 76
          }
        }, {
          start: {
            line: 471,
            column: 80
          },
          end: {
            line: 471,
            column: 81
          }
        }],
        line: 471
      },
      "82": {
        loc: {
          start: {
            line: 472,
            column: 60
          },
          end: {
            line: 472,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 60
          },
          end: {
            line: 472,
            column: 76
          }
        }, {
          start: {
            line: 472,
            column: 80
          },
          end: {
            line: 472,
            column: 81
          }
        }],
        line: 472
      },
      "83": {
        loc: {
          start: {
            line: 473,
            column: 60
          },
          end: {
            line: 473,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 473,
            column: 60
          },
          end: {
            line: 473,
            column: 76
          }
        }, {
          start: {
            line: 473,
            column: 80
          },
          end: {
            line: 473,
            column: 81
          }
        }],
        line: 473
      },
      "84": {
        loc: {
          start: {
            line: 474,
            column: 64
          },
          end: {
            line: 474,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 64
          },
          end: {
            line: 474,
            column: 80
          }
        }, {
          start: {
            line: 474,
            column: 84
          },
          end: {
            line: 474,
            column: 85
          }
        }],
        line: 474
      },
      "85": {
        loc: {
          start: {
            line: 476,
            column: 23
          },
          end: {
            line: 476,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 476,
            column: 76
          },
          end: {
            line: 476,
            column: 79
          }
        }, {
          start: {
            line: 476,
            column: 82
          },
          end: {
            line: 476,
            column: 83
          }
        }],
        line: 476
      },
      "86": {
        loc: {
          start: {
            line: 477,
            column: 24
          },
          end: {
            line: 477,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 477,
            column: 77
          },
          end: {
            line: 477,
            column: 88
          }
        }, {
          start: {
            line: 477,
            column: 91
          },
          end: {
            line: 477,
            column: 101
          }
        }],
        line: 477
      },
      "87": {
        loc: {
          start: {
            line: 478,
            column: 28
          },
          end: {
            line: 478,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 28
          },
          end: {
            line: 478,
            column: 74
          }
        }, {
          start: {
            line: 478,
            column: 78
          },
          end: {
            line: 478,
            column: 79
          }
        }],
        line: 478
      },
      "88": {
        loc: {
          start: {
            line: 479,
            column: 23
          },
          end: {
            line: 479,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 23
          },
          end: {
            line: 479,
            column: 69
          }
        }, {
          start: {
            line: 479,
            column: 73
          },
          end: {
            line: 479,
            column: 74
          }
        }],
        line: 479
      },
      "89": {
        loc: {
          start: {
            line: 486,
            column: 12
          },
          end: {
            line: 487,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 12
          },
          end: {
            line: 487,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "90": {
        loc: {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 489,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 489,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "91": {
        loc: {
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 491,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 491,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "92": {
        loc: {
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 493,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 493,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "93": {
        loc: {
          start: {
            line: 494,
            column: 12
          },
          end: {
            line: 495,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 12
          },
          end: {
            line: 495,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "94": {
        loc: {
          start: {
            line: 529,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 529,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 534,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 529
      },
      "95": {
        loc: {
          start: {
            line: 534,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 539,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 534
      },
      "96": {
        loc: {
          start: {
            line: 539,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: 544,
            column: 13
          },
          end: {
            line: 548,
            column: 9
          }
        }],
        line: 539
      },
      "97": {
        loc: {
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 574,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 572,
            column: 12
          },
          end: {
            line: 574,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 572
      },
      "98": {
        loc: {
          start: {
            line: 572,
            column: 16
          },
          end: {
            line: 572,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 16
          },
          end: {
            line: 572,
            column: 19
          }
        }, {
          start: {
            line: 572,
            column: 23
          },
          end: {
            line: 572,
            column: 62
          }
        }, {
          start: {
            line: 572,
            column: 66
          },
          end: {
            line: 572,
            column: 105
          }
        }],
        line: 572
      },
      "99": {
        loc: {
          start: {
            line: 576,
            column: 12
          },
          end: {
            line: 579,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 576,
            column: 12
          },
          end: {
            line: 579,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 576
      },
      "100": {
        loc: {
          start: {
            line: 576,
            column: 16
          },
          end: {
            line: 576,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 576,
            column: 16
          },
          end: {
            line: 576,
            column: 19
          }
        }, {
          start: {
            line: 576,
            column: 23
          },
          end: {
            line: 576,
            column: 58
          }
        }],
        line: 576
      },
      "101": {
        loc: {
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 583,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 583,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 581
      },
      "102": {
        loc: {
          start: {
            line: 581,
            column: 16
          },
          end: {
            line: 581,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 581,
            column: 16
          },
          end: {
            line: 581,
            column: 19
          }
        }, {
          start: {
            line: 581,
            column: 23
          },
          end: {
            line: 581,
            column: 59
          }
        }],
        line: 581
      },
      "103": {
        loc: {
          start: {
            line: 585,
            column: 12
          },
          end: {
            line: 588,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 585,
            column: 12
          },
          end: {
            line: 588,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 585
      },
      "104": {
        loc: {
          start: {
            line: 585,
            column: 16
          },
          end: {
            line: 585,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 585,
            column: 16
          },
          end: {
            line: 585,
            column: 19
          }
        }, {
          start: {
            line: 585,
            column: 23
          },
          end: {
            line: 585,
            column: 57
          }
        }],
        line: 585
      },
      "105": {
        loc: {
          start: {
            line: 610,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 610,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 610
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\system-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\system-monitor.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - INTEL NUC SYSTEM MONITOR\r\n * =============================================================================\r\n * \r\n * This service provides comprehensive hardware monitoring for Intel NUC systems\r\n * running the AI crypto trading agent. It monitors CPU, RAM, SSD, network, and\r\n * thermal conditions to ensure optimal trading performance.\r\n * \r\n * CRITICAL PERFORMANCE NOTICE:\r\n * This system monitors hardware that controls trading operations. Hardware\r\n * failures or performance degradation could impact trading decisions and\r\n * result in financial losses. All metrics are continuously monitored.\r\n * \r\n * Hardware Specifications:\r\n * - Intel NUC with i5 CPU\r\n * - 12GB RAM\r\n * - 256GB M.2 SSD\r\n * - Wireless and Gigabit Ethernet\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport * as si from 'systeminformation';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\n\r\n/**\r\n * Interface for CPU metrics\r\n */\r\nexport interface CPUMetrics {\r\n  /** CPU utilization percentage */\r\n  utilization: number;\r\n  /** CPU temperature in Celsius */\r\n  temperature: number;\r\n  /** CPU frequency in MHz */\r\n  frequency: number;\r\n  /** Load average (1, 5, 15 minutes) */\r\n  loadAverage: number[];\r\n  /** Number of processes */\r\n  processes: number;\r\n  /** CPU cores information */\r\n  cores: {\r\n    physical: number;\r\n    logical: number;\r\n  };\r\n  /** CPU brand and model */\r\n  brand: string;\r\n  /** CPU speed in GHz */\r\n  speed: number;\r\n}\r\n\r\n/**\r\n * Interface for RAM metrics\r\n */\r\nexport interface RAMMetrics {\r\n  /** Total RAM in bytes */\r\n  total: number;\r\n  /** Used RAM in bytes */\r\n  used: number;\r\n  /** Free RAM in bytes */\r\n  free: number;\r\n  /** RAM utilization percentage */\r\n  utilization: number;\r\n  /** Cached memory in bytes */\r\n  cached: number;\r\n  /** Buffer memory in bytes */\r\n  buffers: number;\r\n  /** Available memory in bytes */\r\n  available: number;\r\n  /** Swap usage */\r\n  swap: {\r\n    total: number;\r\n    used: number;\r\n    free: number;\r\n  };\r\n}/**\r\n * \r\nInterface for SSD metrics\r\n */\r\nexport interface SSDMetrics {\r\n  /** Total storage in bytes */\r\n  total: number;\r\n  /** Used storage in bytes */\r\n  used: number;\r\n  /** Free storage in bytes */\r\n  free: number;\r\n  /** Storage utilization percentage */\r\n  utilization: number;\r\n  /** Read IOPS */\r\n  readIOPS: number;\r\n  /** Write IOPS */\r\n  writeIOPS: number;\r\n  /** Read throughput in MB/s */\r\n  readThroughput: number;\r\n  /** Write throughput in MB/s */\r\n  writeThroughput: number;\r\n  /** SSD health percentage */\r\n  health: number;\r\n  /** SSD temperature in Celsius */\r\n  temperature: number;\r\n}\r\n\r\n/**\r\n * Interface for network metrics\r\n */\r\nexport interface NetworkMetrics {\r\n  /** Network interfaces */\r\n  interfaces: NetworkInterface[];\r\n  /** Total bytes received */\r\n  totalBytesReceived: number;\r\n  /** Total bytes sent */\r\n  totalBytesSent: number;\r\n  /** Current download speed in Mbps */\r\n  downloadSpeed: number;\r\n  /** Current upload speed in Mbps */\r\n  uploadSpeed: number;\r\n  /** Network latency in ms */\r\n  latency: number;\r\n  /** Packet loss percentage */\r\n  packetLoss: number;\r\n}\r\n\r\n/**\r\n * Interface for network interface\r\n */\r\nexport interface NetworkInterface {\r\n  /** Interface name */\r\n  name: string;\r\n  /** Interface type (ethernet, wireless) */\r\n  type: string;\r\n  /** IP address */\r\n  ip: string;\r\n  /** MAC address */\r\n  mac: string;\r\n  /** Connection status */\r\n  isUp: boolean;\r\n  /** Link speed in Mbps */\r\n  speed: number;\r\n  /** Bytes received */\r\n  bytesReceived: number;\r\n  /** Bytes sent */\r\n  bytesSent: number;\r\n}\r\n\r\n/**\r\n * Interface for system health status\r\n */\r\nexport interface SystemHealthStatus {\r\n  /** Overall system health score (0-100) */\r\n  overallHealth: number;\r\n  /** Individual component health */\r\n  components: {\r\n    cpu: HealthStatus;\r\n    ram: HealthStatus;\r\n    ssd: HealthStatus;\r\n    network: HealthStatus;\r\n    thermal: HealthStatus;\r\n  };\r\n  /** System alerts */\r\n  alerts: SystemAlert[];\r\n  /** Performance recommendations */\r\n  recommendations: string[];\r\n  /** Last update timestamp */\r\n  lastUpdated: Date;\r\n}/**\r\n * Int\r\nerface for component health status\r\n */\r\nexport interface HealthStatus {\r\n  /** Health score (0-100) */\r\n  score: number;\r\n  /** Status level */\r\n  status: 'EXCELLENT' | 'GOOD' | 'WARNING' | 'CRITICAL';\r\n  /** Status message */\r\n  message: string;\r\n  /** Metric value */\r\n  value: number;\r\n  /** Threshold values */\r\n  thresholds: {\r\n    warning: number;\r\n    critical: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Interface for system alert\r\n */\r\nexport interface SystemAlert {\r\n  /** Alert ID */\r\n  id: string;\r\n  /** Alert type */\r\n  type: 'CPU' | 'RAM' | 'SSD' | 'NETWORK' | 'THERMAL';\r\n  /** Alert severity */\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Alert message */\r\n  message: string;\r\n  /** Current value */\r\n  currentValue: number;\r\n  /** Threshold value */\r\n  threshold: number;\r\n  /** Alert timestamp */\r\n  timestamp: Date;\r\n  /** Whether alert is active */\r\n  isActive: boolean;\r\n}\r\n\r\n/**\r\n * Intel NUC System Monitor\r\n * Provides comprehensive hardware monitoring and performance optimization\r\n */\r\nexport class SystemMonitor {\r\n  /** Monitoring interval in milliseconds */\r\n  private monitoringInterval: NodeJS.Timeout | null = null;\r\n  \r\n  /** Current system metrics */\r\n  private currentMetrics: {\r\n    cpu?: CPUMetrics;\r\n    ram?: RAMMetrics;\r\n    ssd?: SSDMetrics;\r\n    network?: NetworkMetrics;\r\n  } = {};\r\n  \r\n  /** Active system alerts */\r\n  private activeAlerts: Map<string, SystemAlert> = new Map();\r\n  \r\n  /** Monitoring configuration */\r\n  private config = {\r\n    monitoringIntervalMs: 30000, // 30 seconds\r\n    cpuWarningThreshold: parseInt(process.env.CPU_USAGE_WARNING_THRESHOLD || '70'),\r\n    cpuCriticalThreshold: parseInt(process.env.CPU_USAGE_CRITICAL_THRESHOLD || '85'),\r\n    ramWarningThreshold: parseInt(process.env.MEMORY_USAGE_WARNING_THRESHOLD || '75'),\r\n    ramCriticalThreshold: parseInt(process.env.MEMORY_USAGE_CRITICAL_THRESHOLD || '90'),\r\n    ssdWarningThreshold: parseInt(process.env.DISK_USAGE_WARNING_THRESHOLD || '80'),\r\n    ssdCriticalThreshold: parseInt(process.env.DISK_USAGE_CRITICAL_THRESHOLD || '95'),\r\n    tempWarningThreshold: parseInt(process.env.CPU_TEMP_WARNING_THRESHOLD || '70'),\r\n    tempCriticalThreshold: parseInt(process.env.CPU_TEMP_CRITICAL_THRESHOLD || '80'),\r\n    networkLatencyWarning: parseInt(process.env.NETWORK_LATENCY_WARNING_MS || '100'),\r\n    networkLatencyCritical: parseInt(process.env.NETWORK_LATENCY_CRITICAL_MS || '500')\r\n  };\r\n\r\n  constructor() {\r\n    logger.info('\uD83D\uDDA5\uFE0F Intel NUC System Monitor initializing...');\r\n  }\r\n\r\n  /**\r\n   * Start hardware monitoring\r\n   * Begins continuous monitoring of all system components\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async startHardwareMonitoring(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDCCA Starting Intel NUC hardware monitoring...');\r\n      \r\n      // Perform initial system scan\r\n      await this.performSystemScan();\r\n      \r\n      // Start continuous monitoring\r\n      this.monitoringInterval = setInterval(async () => {\r\n        try {\r\n          await this.performSystemScan();\r\n        } catch (error) {\r\n          logger.error('\u274C System monitoring error:', error);\r\n        }\r\n      }, this.config.monitoringIntervalMs);\r\n      \r\n      logger.info('\u2705 Hardware monitoring started successfully');\r\n      \r\n      // Audit log\r\n      await auditService.createAuditEntry({\r\n        auditId: `sys_mon_start_${Date.now()}`,\r\n        eventType: 'SYSTEM_MONITORING_START',\r\n        actor: 'SYSTEM',\r\n        resource: 'HARDWARE_MONITOR',\r\n        action: 'START_MONITORING',\r\n        result: 'SUCCESS',\r\n        timestamp: new Date(),\r\n        auditData: { monitoringInterval: this.config.monitoringIntervalMs }\r\n      });\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to start hardware monitoring:', error);\r\n      throw new Error('Hardware monitoring initialization failed');\r\n    }\r\n  }  /**\r\n  \r\n * Perform comprehensive system scan\r\n   * Collects metrics from all hardware components\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async performSystemScan(): Promise<void> {\r\n    try {\r\n      // Collect CPU metrics\r\n      this.currentMetrics.cpu = await this.collectCPUMetrics();\r\n      \r\n      // Collect RAM metrics\r\n      this.currentMetrics.ram = await this.collectRAMMetrics();\r\n      \r\n      // Collect SSD metrics\r\n      this.currentMetrics.ssd = await this.collectSSDMetrics();\r\n      \r\n      // Collect network metrics\r\n      this.currentMetrics.network = await this.collectNetworkMetrics();\r\n      \r\n      // Analyze metrics and generate alerts\r\n      await this.analyzeMetricsAndGenerateAlerts();\r\n      \r\n      // Log system status\r\n      this.logSystemStatus();\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C System scan failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect CPU metrics\r\n   * Gathers comprehensive CPU performance data\r\n   * \r\n   * @returns Promise<CPUMetrics> CPU metrics\r\n   */\r\n  private async collectCPUMetrics(): Promise<CPUMetrics> {\r\n    try {\r\n      const [cpuData, currentLoad, cpuTemp, processes] = await Promise.all([\r\n        si.cpu(),\r\n        si.currentLoad(),\r\n        si.cpuTemperature(),\r\n        si.processes()\r\n      ]);\r\n      \r\n      return {\r\n        utilization: Math.round(currentLoad.currentLoad),\r\n        temperature: cpuTemp.main || 0,\r\n        frequency: cpuData.speed || 0,\r\n        loadAverage: [currentLoad.avgLoad || 0],\r\n        processes: processes.all || 0,\r\n        cores: {\r\n          physical: cpuData.physicalCores || 0,\r\n          logical: cpuData.cores || 0\r\n        },\r\n        brand: cpuData.brand || 'Unknown',\r\n        speed: cpuData.speed || 0\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to collect CPU metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect RAM metrics\r\n   * Gathers comprehensive memory usage data\r\n   * \r\n   * @returns Promise<RAMMetrics> RAM metrics\r\n   */\r\n  private async collectRAMMetrics(): Promise<RAMMetrics> {\r\n    try {\r\n      const memData = await si.mem();\r\n      \r\n      return {\r\n        total: memData.total,\r\n        used: memData.used,\r\n        free: memData.free,\r\n        utilization: Math.round((memData.used / memData.total) * 100),\r\n        cached: memData.cached || 0,\r\n        buffers: memData.buffers || 0,\r\n        available: memData.available,\r\n        swap: {\r\n          total: memData.swaptotal || 0,\r\n          used: memData.swapused || 0,\r\n          free: memData.swapfree || 0\r\n        }\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to collect RAM metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect SSD metrics\r\n   * Gathers comprehensive storage performance data\r\n   * \r\n   * @returns Promise<SSDMetrics> SSD metrics\r\n   */\r\n  private async collectSSDMetrics(): Promise<SSDMetrics> {\r\n    try {\r\n      const [fsSize, diskIO, blockDevices] = await Promise.all([\r\n        si.fsSize(),\r\n        si.disksIO(),\r\n        si.blockDevices()\r\n      ]);\r\n      \r\n      // Get primary disk (usually the first one)\r\n      const primaryDisk = fsSize[0] || {};\r\n      const primaryBlockDevice = blockDevices[0] || {};\r\n      \r\n      return {\r\n        total: primaryDisk.size || 0,\r\n        used: primaryDisk.used || 0,\r\n        free: primaryDisk.available || 0,\r\n        utilization: Math.round(primaryDisk.use || 0),\r\n        readIOPS: diskIO.rIO || 0,\r\n        writeIOPS: diskIO.wIO || 0,\r\n        readThroughput: (diskIO.rIO_sec || 0) / 1024 / 1024, // Convert to MB/s\r\n        writeThroughput: (diskIO.wIO_sec || 0) / 1024 / 1024, // Convert to MB/s\r\n        health: 100, // Would need SMART data for actual health\r\n        temperature: primaryBlockDevice.temperature || 0\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to collect SSD metrics:', error);\r\n      throw error;\r\n    }\r\n  }  /**\r\n\r\n   * Collect network metrics\r\n   * Gathers comprehensive network performance data\r\n   * \r\n   * @returns Promise<NetworkMetrics> Network metrics\r\n   */\r\n  private async collectNetworkMetrics(): Promise<NetworkMetrics> {\r\n    try {\r\n      const [networkInterfaces, networkStats] = await Promise.all([\r\n        si.networkInterfaces(),\r\n        si.networkStats()\r\n      ]);\r\n      \r\n      const interfaces: NetworkInterface[] = networkInterfaces.map(iface => ({\r\n        name: iface.iface,\r\n        type: iface.type || 'unknown',\r\n        ip: iface.ip4 || '',\r\n        mac: iface.mac || '',\r\n        isUp: !iface.internal && iface.operstate === 'up',\r\n        speed: iface.speed || 0,\r\n        bytesReceived: 0, // Will be updated from networkStats\r\n        bytesSent: 0 // Will be updated from networkStats\r\n      }));\r\n      \r\n      // Update interface statistics\r\n      networkStats.forEach(stat => {\r\n        const iface = interfaces.find(i => i.name === stat.iface);\r\n        if (iface) {\r\n          iface.bytesReceived = stat.rx_bytes || 0;\r\n          iface.bytesSent = stat.tx_bytes || 0;\r\n        }\r\n      });\r\n      \r\n      const totalBytesReceived = networkStats.reduce((sum, stat) => sum + (stat.rx_bytes || 0), 0);\r\n      const totalBytesSent = networkStats.reduce((sum, stat) => sum + (stat.tx_bytes || 0), 0);\r\n      \r\n      // Calculate current speeds (simplified)\r\n      const downloadSpeed = networkStats.reduce((sum, stat) => sum + (stat.rx_sec || 0), 0) / 1024 / 1024 * 8; // Mbps\r\n      const uploadSpeed = networkStats.reduce((sum, stat) => sum + (stat.tx_sec || 0), 0) / 1024 / 1024 * 8; // Mbps\r\n      \r\n      return {\r\n        interfaces,\r\n        totalBytesReceived,\r\n        totalBytesSent,\r\n        downloadSpeed,\r\n        uploadSpeed,\r\n        latency: 0, // Would need ping test for actual latency\r\n        packetLoss: 0 // Would need ping test for packet loss\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to collect network metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analyze metrics and generate alerts\r\n   * Evaluates system metrics against thresholds and creates alerts\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async analyzeMetricsAndGenerateAlerts(): Promise<void> {\r\n    try {\r\n      const alerts: SystemAlert[] = [];\r\n      \r\n      // Analyze CPU metrics\r\n      if (this.currentMetrics.cpu) {\r\n        const cpu = this.currentMetrics.cpu;\r\n        \r\n        if (cpu.utilization >= this.config.cpuCriticalThreshold) {\r\n          alerts.push(this.createAlert('CPU', 'CRITICAL', \r\n            `CPU utilization critical: ${cpu.utilization}%`, \r\n            cpu.utilization, this.config.cpuCriticalThreshold));\r\n        } else if (cpu.utilization >= this.config.cpuWarningThreshold) {\r\n          alerts.push(this.createAlert('CPU', 'HIGH', \r\n            `CPU utilization high: ${cpu.utilization}%`, \r\n            cpu.utilization, this.config.cpuWarningThreshold));\r\n        }\r\n        \r\n        if (cpu.temperature >= this.config.tempCriticalThreshold) {\r\n          alerts.push(this.createAlert('THERMAL', 'CRITICAL', \r\n            `CPU temperature critical: ${cpu.temperature}\xB0C`, \r\n            cpu.temperature, this.config.tempCriticalThreshold));\r\n        } else if (cpu.temperature >= this.config.tempWarningThreshold) {\r\n          alerts.push(this.createAlert('THERMAL', 'HIGH', \r\n            `CPU temperature high: ${cpu.temperature}\xB0C`, \r\n            cpu.temperature, this.config.tempWarningThreshold));\r\n        }\r\n      }\r\n      \r\n      // Analyze RAM metrics\r\n      if (this.currentMetrics.ram) {\r\n        const ram = this.currentMetrics.ram;\r\n        \r\n        if (ram.utilization >= this.config.ramCriticalThreshold) {\r\n          alerts.push(this.createAlert('RAM', 'CRITICAL', \r\n            `Memory utilization critical: ${ram.utilization}%`, \r\n            ram.utilization, this.config.ramCriticalThreshold));\r\n        } else if (ram.utilization >= this.config.ramWarningThreshold) {\r\n          alerts.push(this.createAlert('RAM', 'HIGH', \r\n            `Memory utilization high: ${ram.utilization}%`, \r\n            ram.utilization, this.config.ramWarningThreshold));\r\n        }\r\n      }\r\n      \r\n      // Analyze SSD metrics\r\n      if (this.currentMetrics.ssd) {\r\n        const ssd = this.currentMetrics.ssd;\r\n        \r\n        if (ssd.utilization >= this.config.ssdCriticalThreshold) {\r\n          alerts.push(this.createAlert('SSD', 'CRITICAL', \r\n            `Storage utilization critical: ${ssd.utilization}%`, \r\n            ssd.utilization, this.config.ssdCriticalThreshold));\r\n        } else if (ssd.utilization >= this.config.ssdWarningThreshold) {\r\n          alerts.push(this.createAlert('SSD', 'HIGH', \r\n            `Storage utilization high: ${ssd.utilization}%`, \r\n            ssd.utilization, this.config.ssdWarningThreshold));\r\n        }\r\n      }\r\n      \r\n      // Process new alerts\r\n      for (const alert of alerts) {\r\n        await this.processAlert(alert);\r\n      }\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to analyze metrics:', error);\r\n    }\r\n  }  /**\r\n\r\n   * Create system alert\r\n   * Creates a new system alert with specified parameters\r\n   * \r\n   * @param type - Alert type\r\n   * @param severity - Alert severity\r\n   * @param message - Alert message\r\n   * @param currentValue - Current metric value\r\n   * @param threshold - Threshold value\r\n   * @returns SystemAlert New alert\r\n   */\r\n  private createAlert(\r\n    type: 'CPU' | 'RAM' | 'SSD' | 'NETWORK' | 'THERMAL',\r\n    severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL',\r\n    message: string,\r\n    currentValue: number,\r\n    threshold: number\r\n  ): SystemAlert {\r\n    return {\r\n      id: `${type.toLowerCase()}_${Date.now()}_${Math.random().toString(36).substring(2)}`,\r\n      type,\r\n      severity,\r\n      message,\r\n      currentValue,\r\n      threshold,\r\n      timestamp: new Date(),\r\n      isActive: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Process system alert\r\n   * Handles new alerts and triggers appropriate responses\r\n   * \r\n   * @param alert - System alert to process\r\n   * @returns Promise<void>\r\n   */\r\n  private async processAlert(alert: SystemAlert): Promise<void> {\r\n    try {\r\n      // Check if similar alert already exists\r\n      const existingAlert = Array.from(this.activeAlerts.values())\r\n        .find(a => a.type === alert.type && a.severity === alert.severity && a.isActive);\r\n      \r\n      if (existingAlert) {\r\n        // Update existing alert\r\n        existingAlert.currentValue = alert.currentValue;\r\n        existingAlert.timestamp = alert.timestamp;\r\n        return;\r\n      }\r\n      \r\n      // Add new alert\r\n      this.activeAlerts.set(alert.id, alert);\r\n      \r\n      // Log alert\r\n      logger.warn(`\u26A0\uFE0F System Alert: ${alert.message}`, {\r\n        type: alert.type,\r\n        severity: alert.severity,\r\n        currentValue: alert.currentValue,\r\n        threshold: alert.threshold\r\n      });\r\n      \r\n      // Create audit entry for critical alerts\r\n      if (alert.severity === 'CRITICAL') {\r\n        await auditService.createAuditEntry({\r\n          auditId: `sys_alert_${alert.id}`,\r\n          eventType: 'CRITICAL_SYSTEM_ALERT',\r\n          actor: 'SYSTEM_MONITOR',\r\n          resource: `HARDWARE_${alert.type}`,\r\n          action: 'GENERATE_ALERT',\r\n          result: 'SUCCESS',\r\n          timestamp: alert.timestamp,\r\n          auditData: {\r\n            alertType: alert.type,\r\n            severity: alert.severity,\r\n            currentValue: alert.currentValue,\r\n            threshold: alert.threshold\r\n          }\r\n        });\r\n      }\r\n      \r\n      // TODO: Send notifications for critical alerts\r\n      // This would integrate with notification service\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to process alert:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log system status\r\n   * Logs current system metrics for monitoring\r\n   */\r\n  private logSystemStatus(): void {\r\n    const { cpu, ram, ssd, network } = this.currentMetrics;\r\n    \r\n    logger.debug('\uD83D\uDCCA System Status Update', {\r\n      cpu: cpu ? {\r\n        utilization: cpu.utilization,\r\n        temperature: cpu.temperature,\r\n        frequency: cpu.frequency\r\n      } : null,\r\n      ram: ram ? {\r\n        utilization: ram.utilization,\r\n        used: Math.round(ram.used / 1024 / 1024 / 1024 * 100) / 100, // GB\r\n        total: Math.round(ram.total / 1024 / 1024 / 1024 * 100) / 100 // GB\r\n      } : null,\r\n      ssd: ssd ? {\r\n        utilization: ssd.utilization,\r\n        used: Math.round(ssd.used / 1024 / 1024 / 1024 * 100) / 100, // GB\r\n        total: Math.round(ssd.total / 1024 / 1024 / 1024 * 100) / 100 // GB\r\n      } : null,\r\n      network: network ? {\r\n        downloadSpeed: Math.round(network.downloadSpeed * 100) / 100,\r\n        uploadSpeed: Math.round(network.uploadSpeed * 100) / 100,\r\n        activeInterfaces: network.interfaces.filter(i => i.isUp).length\r\n      } : null,\r\n      activeAlerts: this.activeAlerts.size\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get current system health status\r\n   * Returns comprehensive system health information\r\n   * \r\n   * @returns Promise<SystemHealthStatus> System health status\r\n   */\r\n  public async getSystemHealthStatus(): Promise<SystemHealthStatus> {\r\n    try {\r\n      const { cpu, ram, ssd, network } = this.currentMetrics;\r\n      \r\n      // Calculate component health scores\r\n      const cpuHealth = this.calculateComponentHealth(\r\n        cpu?.utilization || 0, \r\n        this.config.cpuWarningThreshold, \r\n        this.config.cpuCriticalThreshold,\r\n        'CPU utilization'\r\n      );\r\n      \r\n      const ramHealth = this.calculateComponentHealth(\r\n        ram?.utilization || 0, \r\n        this.config.ramWarningThreshold, \r\n        this.config.ramCriticalThreshold,\r\n        'Memory utilization'\r\n      );\r\n      \r\n      const ssdHealth = this.calculateComponentHealth(\r\n        ssd?.utilization || 0, \r\n        this.config.ssdWarningThreshold, \r\n        this.config.ssdCriticalThreshold,\r\n        'Storage utilization'\r\n      );\r\n      \r\n      const thermalHealth = this.calculateComponentHealth(\r\n        cpu?.temperature || 0, \r\n        this.config.tempWarningThreshold, \r\n        this.config.tempCriticalThreshold,\r\n        'CPU temperature'\r\n      );\r\n      \r\n      const networkHealth: HealthStatus = {\r\n        score: network?.interfaces.filter(i => i.isUp).length > 0 ? 100 : 0,\r\n        status: network?.interfaces.filter(i => i.isUp).length > 0 ? 'EXCELLENT' : 'CRITICAL',\r\n        message: `${network?.interfaces.filter(i => i.isUp).length || 0} active interfaces`,\r\n        value: network?.interfaces.filter(i => i.isUp).length || 0,\r\n        thresholds: { warning: 1, critical: 0 }\r\n      };\r\n      \r\n      // Calculate overall health score\r\n      const overallHealth = Math.round(\r\n        (cpuHealth.score + ramHealth.score + ssdHealth.score + thermalHealth.score + networkHealth.score) / 5\r\n      );\r\n      \r\n      // Generate recommendations\r\n      const recommendations: string[] = [];\r\n      if (cpuHealth.score < 70) recommendations.push('Consider reducing CPU-intensive operations');\r\n      if (ramHealth.score < 70) recommendations.push('Consider freeing up memory or adding more RAM');\r\n      if (ssdHealth.score < 70) recommendations.push('Consider cleaning up disk space');\r\n      if (thermalHealth.score < 70) recommendations.push('Check system cooling and ventilation');\r\n      if (networkHealth.score < 70) recommendations.push('Check network connectivity');\r\n      \r\n      return {\r\n        overallHealth,\r\n        components: {\r\n          cpu: cpuHealth,\r\n          ram: ramHealth,\r\n          ssd: ssdHealth,\r\n          network: networkHealth,\r\n          thermal: thermalHealth\r\n        },\r\n        alerts: Array.from(this.activeAlerts.values()).filter(a => a.isActive),\r\n        recommendations,\r\n        lastUpdated: new Date()\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to get system health status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate component health score\r\n   * Determines health score based on current value and thresholds\r\n   * \r\n   * @param currentValue - Current metric value\r\n   * @param warningThreshold - Warning threshold\r\n   * @param criticalThreshold - Critical threshold\r\n   * @param description - Component description\r\n   * @returns HealthStatus Component health status\r\n   */\r\n  private calculateComponentHealth(\r\n    currentValue: number,\r\n    warningThreshold: number,\r\n    criticalThreshold: number,\r\n    description: string\r\n  ): HealthStatus {\r\n    let score: number;\r\n    let status: 'EXCELLENT' | 'GOOD' | 'WARNING' | 'CRITICAL';\r\n    let message: string;\r\n    \r\n    if (currentValue >= criticalThreshold) {\r\n      score = Math.max(0, 100 - ((currentValue - criticalThreshold) / criticalThreshold) * 100);\r\n      status = 'CRITICAL';\r\n      message = `${description} is critical (${currentValue})`;\r\n    } else if (currentValue >= warningThreshold) {\r\n      score = Math.max(30, 100 - ((currentValue - warningThreshold) / (criticalThreshold - warningThreshold)) * 70);\r\n      status = 'WARNING';\r\n      message = `${description} is elevated (${currentValue})`;\r\n    } else if (currentValue >= warningThreshold * 0.7) {\r\n      score = Math.max(70, 100 - (currentValue / warningThreshold) * 30);\r\n      status = 'GOOD';\r\n      message = `${description} is good (${currentValue})`;\r\n    } else {\r\n      score = 100;\r\n      status = 'EXCELLENT';\r\n      message = `${description} is excellent (${currentValue})`;\r\n    }\r\n    \r\n    return {\r\n      score: Math.round(score),\r\n      status,\r\n      message,\r\n      value: currentValue,\r\n      thresholds: {\r\n        warning: warningThreshold,\r\n        critical: criticalThreshold\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate system requirements\r\n   * Checks if system meets minimum requirements for trading\r\n   * \r\n   * @returns Promise<{ meetsRequirements: boolean; warnings: string[] }> Validation result\r\n   */\r\n  public async validateSystemRequirements(): Promise<{ meetsRequirements: boolean; warnings: string[] }> {\r\n    try {\r\n      const warnings: string[] = [];\r\n      let meetsRequirements = true;\r\n      \r\n      const { cpu, ram, ssd } = this.currentMetrics;\r\n      \r\n      // Check CPU requirements (i5 or better)\r\n      if (cpu && !cpu.brand.toLowerCase().includes('i5') && !cpu.brand.toLowerCase().includes('i7')) {\r\n        warnings.push(`CPU may not meet requirements: ${cpu.brand} (recommended: Intel i5 or better)`);\r\n      }\r\n      \r\n      // Check RAM requirements (12GB minimum)\r\n      if (ram && ram.total < 12 * 1024 * 1024 * 1024) {\r\n        warnings.push(`RAM below recommended: ${Math.round(ram.total / 1024 / 1024 / 1024)}GB (recommended: 12GB)`);\r\n        meetsRequirements = false;\r\n      }\r\n      \r\n      // Check SSD requirements (256GB minimum)\r\n      if (ssd && ssd.total < 256 * 1024 * 1024 * 1024) {\r\n        warnings.push(`Storage below recommended: ${Math.round(ssd.total / 1024 / 1024 / 1024)}GB (recommended: 256GB)`);\r\n      }\r\n      \r\n      // Check available storage (at least 50GB free)\r\n      if (ssd && ssd.free < 50 * 1024 * 1024 * 1024) {\r\n        warnings.push(`Low storage space: ${Math.round(ssd.free / 1024 / 1024 / 1024)}GB free (recommended: 50GB+)`);\r\n        meetsRequirements = false;\r\n      }\r\n      \r\n      return { meetsRequirements, warnings };\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to validate system requirements:', error);\r\n      return { meetsRequirements: false, warnings: ['System validation failed'] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current system metrics\r\n   * Returns the most recent system metrics\r\n   * \r\n   * @returns Current system metrics\r\n   */\r\n  public getCurrentMetrics(): {\r\n    cpu?: CPUMetrics;\r\n    ram?: RAMMetrics;\r\n    ssd?: SSDMetrics;\r\n    network?: NetworkMetrics;\r\n  } {\r\n    return { ...this.currentMetrics };\r\n  }\r\n\r\n  /**\r\n   * Stop hardware monitoring\r\n   * Stops continuous monitoring and cleans up resources\r\n   */\r\n  public stopHardwareMonitoring(): void {\r\n    if (this.monitoringInterval) {\r\n      clearInterval(this.monitoringInterval);\r\n      this.monitoringInterval = null;\r\n      logger.info('\uD83D\uDED1 Hardware monitoring stopped');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize performance optimization\r\n   * Sets up performance optimization integration\r\n   */\r\n  public async initializePerformanceOptimization(): Promise<void> {\r\n    logger.info('\u26A1 Initializing performance optimization integration...');\r\n    // Performance optimization is handled by PerformanceOptimizer class\r\n    // This method provides integration point for system monitoring\r\n    logger.info('\u2705 Performance optimization integration ready');\r\n  }\r\n\r\n  /**\r\n   * Setup thermal management\r\n   * Sets up thermal monitoring integration\r\n   */\r\n  public async setupThermalManagement(): Promise<void> {\r\n    logger.info('\uD83C\uDF21\uFE0F Setting up thermal management integration...');\r\n    // Thermal management is handled by PerformanceOptimizer class\r\n    // This method provides integration point for system monitoring\r\n    logger.info('\u2705 Thermal management integration ready');\r\n  }\r\n\r\n  /**\r\n   * Get system monitor status\r\n   * Returns current status for monitoring\r\n   * \r\n   * @returns Object containing status information\r\n   */\r\n  public getStatus(): {\r\n    isMonitoring: boolean;\r\n    activeAlerts: number;\r\n    lastScanTime: Date | null;\r\n    monitoringInterval: number;\r\n    timestamp: number;\r\n  } {\r\n    return {\r\n      isMonitoring: this.monitoringInterval !== null,\r\n      activeAlerts: this.activeAlerts.size,\r\n      lastScanTime: null, // Would track last scan time\r\n      monitoringInterval: this.config.monitoringIntervalMs,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\n// =============================================================================\r\n// INTEL NUC SYSTEM MONITORING NOTES\r\n// =============================================================================\r\n// 1. Continuous monitoring of CPU, RAM, SSD, and network performance\r\n// 2. Real-time alerting for performance issues and hardware problems\r\n// 3. Thermal monitoring to prevent overheating during intensive trading\r\n// 4. Storage monitoring to prevent disk space issues\r\n// 5. Network monitoring for connectivity and performance issues\r\n// 6. System health scoring for overall system assessment\r\n// 7. Hardware requirement validation for optimal trading performance\r\n// 8. Comprehensive logging and audit trails for all monitoring activities\r\n// =============================================================================\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "16a2d96a0dbbb719ce5a59aef5f2925f3360face"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_783ohuk0e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_783ohuk0e();
var __createBinding =
/* istanbul ignore next */
(cov_783ohuk0e().s[0]++,
/* istanbul ignore next */
(cov_783ohuk0e().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_783ohuk0e().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_783ohuk0e().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_783ohuk0e().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_783ohuk0e().f[0]++;
  cov_783ohuk0e().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_783ohuk0e().b[2][0]++;
    cov_783ohuk0e().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_783ohuk0e().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_783ohuk0e().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_783ohuk0e().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_783ohuk0e().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_783ohuk0e().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_783ohuk0e().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_783ohuk0e().b[5][1]++,
  /* istanbul ignore next */
  (cov_783ohuk0e().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_783ohuk0e().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_783ohuk0e().b[3][0]++;
    cov_783ohuk0e().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_783ohuk0e().f[1]++;
        cov_783ohuk0e().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_783ohuk0e().b[3][1]++;
  }
  cov_783ohuk0e().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_783ohuk0e().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_783ohuk0e().f[2]++;
  cov_783ohuk0e().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_783ohuk0e().b[7][0]++;
    cov_783ohuk0e().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_783ohuk0e().b[7][1]++;
  }
  cov_783ohuk0e().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_783ohuk0e().s[11]++,
/* istanbul ignore next */
(cov_783ohuk0e().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_783ohuk0e().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_783ohuk0e().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_783ohuk0e().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_783ohuk0e().f[3]++;
  cov_783ohuk0e().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_783ohuk0e().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_783ohuk0e().f[4]++;
  cov_783ohuk0e().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_783ohuk0e().s[14]++,
/* istanbul ignore next */
(cov_783ohuk0e().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_783ohuk0e().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_783ohuk0e().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_783ohuk0e().f[5]++;
  cov_783ohuk0e().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_783ohuk0e().f[6]++;
    cov_783ohuk0e().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_783ohuk0e().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_783ohuk0e().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[17]++, []);
      /* istanbul ignore next */
      cov_783ohuk0e().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_783ohuk0e().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[12][0]++;
          cov_783ohuk0e().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_783ohuk0e().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_783ohuk0e().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_783ohuk0e().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_783ohuk0e().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_783ohuk0e().f[8]++;
    cov_783ohuk0e().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_783ohuk0e().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_783ohuk0e().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_783ohuk0e().b[13][0]++;
      cov_783ohuk0e().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_783ohuk0e().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_783ohuk0e().s[26]++, {});
    /* istanbul ignore next */
    cov_783ohuk0e().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_783ohuk0e().b[15][0]++;
      cov_783ohuk0e().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_783ohuk0e().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_783ohuk0e().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_783ohuk0e().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_783ohuk0e().b[16][0]++;
          cov_783ohuk0e().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_783ohuk0e().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_783ohuk0e().b[15][1]++;
    }
    cov_783ohuk0e().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_783ohuk0e().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_783ohuk0e().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_783ohuk0e().s[36]++;
exports.SystemMonitor = void 0;
const si =
/* istanbul ignore next */
(cov_783ohuk0e().s[37]++, __importStar(require("systeminformation")));
const logger_1 =
/* istanbul ignore next */
(cov_783ohuk0e().s[38]++, require("@/core/logging/logger"));
const audit_service_1 =
/* istanbul ignore next */
(cov_783ohuk0e().s[39]++, require("@/security/audit-service"));
/**
 * Intel NUC System Monitor
 * Provides comprehensive hardware monitoring and performance optimization
 */
class SystemMonitor {
  /** Monitoring interval in milliseconds */
  monitoringInterval =
  /* istanbul ignore next */
  (cov_783ohuk0e().s[40]++, null);
  /** Current system metrics */
  currentMetrics =
  /* istanbul ignore next */
  (cov_783ohuk0e().s[41]++, {});
  /** Active system alerts */
  activeAlerts =
  /* istanbul ignore next */
  (cov_783ohuk0e().s[42]++, new Map());
  /** Monitoring configuration */
  config =
  /* istanbul ignore next */
  (cov_783ohuk0e().s[43]++, {
    monitoringIntervalMs: 30000,
    // 30 seconds
    cpuWarningThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[17][0]++, process.env.CPU_USAGE_WARNING_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[17][1]++, '70')),
    cpuCriticalThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[18][0]++, process.env.CPU_USAGE_CRITICAL_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[18][1]++, '85')),
    ramWarningThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[19][0]++, process.env.MEMORY_USAGE_WARNING_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[19][1]++, '75')),
    ramCriticalThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[20][0]++, process.env.MEMORY_USAGE_CRITICAL_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[20][1]++, '90')),
    ssdWarningThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[21][0]++, process.env.DISK_USAGE_WARNING_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[21][1]++, '80')),
    ssdCriticalThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[22][0]++, process.env.DISK_USAGE_CRITICAL_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[22][1]++, '95')),
    tempWarningThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[23][0]++, process.env.CPU_TEMP_WARNING_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[23][1]++, '70')),
    tempCriticalThreshold: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[24][0]++, process.env.CPU_TEMP_CRITICAL_THRESHOLD) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[24][1]++, '80')),
    networkLatencyWarning: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[25][0]++, process.env.NETWORK_LATENCY_WARNING_MS) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[25][1]++, '100')),
    networkLatencyCritical: parseInt(
    /* istanbul ignore next */
    (cov_783ohuk0e().b[26][0]++, process.env.NETWORK_LATENCY_CRITICAL_MS) ||
    /* istanbul ignore next */
    (cov_783ohuk0e().b[26][1]++, '500'))
  });
  constructor() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[9]++;
    cov_783ohuk0e().s[44]++;
    logger_1.logger.info('🖥️ Intel NUC System Monitor initializing...');
  }
  /**
   * Start hardware monitoring
   * Begins continuous monitoring of all system components
   *
   * @returns Promise<void>
   */
  async startHardwareMonitoring() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[10]++;
    cov_783ohuk0e().s[45]++;
    try {
      /* istanbul ignore next */
      cov_783ohuk0e().s[46]++;
      logger_1.logger.info('📊 Starting Intel NUC hardware monitoring...');
      // Perform initial system scan
      /* istanbul ignore next */
      cov_783ohuk0e().s[47]++;
      await this.performSystemScan();
      // Start continuous monitoring
      /* istanbul ignore next */
      cov_783ohuk0e().s[48]++;
      this.monitoringInterval = setInterval(async () => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[11]++;
        cov_783ohuk0e().s[49]++;
        try {
          /* istanbul ignore next */
          cov_783ohuk0e().s[50]++;
          await this.performSystemScan();
        } catch (error) {
          /* istanbul ignore next */
          cov_783ohuk0e().s[51]++;
          logger_1.logger.error('❌ System monitoring error:', error);
        }
      }, this.config.monitoringIntervalMs);
      /* istanbul ignore next */
      cov_783ohuk0e().s[52]++;
      logger_1.logger.info('✅ Hardware monitoring started successfully');
      // Audit log
      /* istanbul ignore next */
      cov_783ohuk0e().s[53]++;
      await audit_service_1.auditService.createAuditEntry({
        auditId: `sys_mon_start_${Date.now()}`,
        eventType: 'SYSTEM_MONITORING_START',
        actor: 'SYSTEM',
        resource: 'HARDWARE_MONITOR',
        action: 'START_MONITORING',
        result: 'SUCCESS',
        timestamp: new Date(),
        auditData: {
          monitoringInterval: this.config.monitoringIntervalMs
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[54]++;
      logger_1.logger.error('❌ Failed to start hardware monitoring:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[55]++;
      throw new Error('Hardware monitoring initialization failed');
    }
  } /**
      * Perform comprehensive system scan
    * Collects metrics from all hardware components
    *
    * @returns Promise<void>
    */
  async performSystemScan() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[12]++;
    cov_783ohuk0e().s[56]++;
    try {
      /* istanbul ignore next */
      cov_783ohuk0e().s[57]++;
      // Collect CPU metrics
      this.currentMetrics.cpu = await this.collectCPUMetrics();
      // Collect RAM metrics
      /* istanbul ignore next */
      cov_783ohuk0e().s[58]++;
      this.currentMetrics.ram = await this.collectRAMMetrics();
      // Collect SSD metrics
      /* istanbul ignore next */
      cov_783ohuk0e().s[59]++;
      this.currentMetrics.ssd = await this.collectSSDMetrics();
      // Collect network metrics
      /* istanbul ignore next */
      cov_783ohuk0e().s[60]++;
      this.currentMetrics.network = await this.collectNetworkMetrics();
      // Analyze metrics and generate alerts
      /* istanbul ignore next */
      cov_783ohuk0e().s[61]++;
      await this.analyzeMetricsAndGenerateAlerts();
      // Log system status
      /* istanbul ignore next */
      cov_783ohuk0e().s[62]++;
      this.logSystemStatus();
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[63]++;
      logger_1.logger.error('❌ System scan failed:', error);
    }
  }
  /**
   * Collect CPU metrics
   * Gathers comprehensive CPU performance data
   *
   * @returns Promise<CPUMetrics> CPU metrics
   */
  async collectCPUMetrics() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[13]++;
    cov_783ohuk0e().s[64]++;
    try {
      const [cpuData, currentLoad, cpuTemp, processes] =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[65]++, await Promise.all([si.cpu(), si.currentLoad(), si.cpuTemperature(), si.processes()]));
      /* istanbul ignore next */
      cov_783ohuk0e().s[66]++;
      return {
        utilization: Math.round(currentLoad.currentLoad),
        temperature:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[27][0]++, cpuTemp.main) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[27][1]++, 0),
        frequency:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[28][0]++, cpuData.speed) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[28][1]++, 0),
        loadAverage: [
        /* istanbul ignore next */
        (cov_783ohuk0e().b[29][0]++, currentLoad.avgLoad) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[29][1]++, 0)],
        processes:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[30][0]++, processes.all) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[30][1]++, 0),
        cores: {
          physical:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[31][0]++, cpuData.physicalCores) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[31][1]++, 0),
          logical:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[32][0]++, cpuData.cores) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[32][1]++, 0)
        },
        brand:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[33][0]++, cpuData.brand) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[33][1]++, 'Unknown'),
        speed:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[34][0]++, cpuData.speed) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[34][1]++, 0)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[67]++;
      logger_1.logger.error('❌ Failed to collect CPU metrics:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[68]++;
      throw error;
    }
  }
  /**
   * Collect RAM metrics
   * Gathers comprehensive memory usage data
   *
   * @returns Promise<RAMMetrics> RAM metrics
   */
  async collectRAMMetrics() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[14]++;
    cov_783ohuk0e().s[69]++;
    try {
      const memData =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[70]++, await si.mem());
      /* istanbul ignore next */
      cov_783ohuk0e().s[71]++;
      return {
        total: memData.total,
        used: memData.used,
        free: memData.free,
        utilization: Math.round(memData.used / memData.total * 100),
        cached:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[35][0]++, memData.cached) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[35][1]++, 0),
        buffers:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[36][0]++, memData.buffers) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[36][1]++, 0),
        available: memData.available,
        swap: {
          total:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[37][0]++, memData.swaptotal) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[37][1]++, 0),
          used:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[38][0]++, memData.swapused) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[38][1]++, 0),
          free:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[39][0]++, memData.swapfree) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[39][1]++, 0)
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[72]++;
      logger_1.logger.error('❌ Failed to collect RAM metrics:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[73]++;
      throw error;
    }
  }
  /**
   * Collect SSD metrics
   * Gathers comprehensive storage performance data
   *
   * @returns Promise<SSDMetrics> SSD metrics
   */
  async collectSSDMetrics() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[15]++;
    cov_783ohuk0e().s[74]++;
    try {
      const [fsSize, diskIO, blockDevices] =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[75]++, await Promise.all([si.fsSize(), si.disksIO(), si.blockDevices()]));
      // Get primary disk (usually the first one)
      const primaryDisk =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[76]++,
      /* istanbul ignore next */
      (cov_783ohuk0e().b[40][0]++, fsSize[0]) ||
      /* istanbul ignore next */
      (cov_783ohuk0e().b[40][1]++, {}));
      const primaryBlockDevice =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[77]++,
      /* istanbul ignore next */
      (cov_783ohuk0e().b[41][0]++, blockDevices[0]) ||
      /* istanbul ignore next */
      (cov_783ohuk0e().b[41][1]++, {}));
      /* istanbul ignore next */
      cov_783ohuk0e().s[78]++;
      return {
        total:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[42][0]++, primaryDisk.size) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[42][1]++, 0),
        used:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[43][0]++, primaryDisk.used) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[43][1]++, 0),
        free:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[44][0]++, primaryDisk.available) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[44][1]++, 0),
        utilization: Math.round(
        /* istanbul ignore next */
        (cov_783ohuk0e().b[45][0]++, primaryDisk.use) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[45][1]++, 0)),
        readIOPS:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[46][0]++, diskIO.rIO) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[46][1]++, 0),
        writeIOPS:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[47][0]++, diskIO.wIO) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[47][1]++, 0),
        readThroughput: (
        /* istanbul ignore next */
        (cov_783ohuk0e().b[48][0]++, diskIO.rIO_sec) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[48][1]++, 0)) / 1024 / 1024,
        // Convert to MB/s
        writeThroughput: (
        /* istanbul ignore next */
        (cov_783ohuk0e().b[49][0]++, diskIO.wIO_sec) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[49][1]++, 0)) / 1024 / 1024,
        // Convert to MB/s
        health: 100,
        // Would need SMART data for actual health
        temperature:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[50][0]++, primaryBlockDevice.temperature) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[50][1]++, 0)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[79]++;
      logger_1.logger.error('❌ Failed to collect SSD metrics:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[80]++;
      throw error;
    }
  } /**
      * Collect network metrics
    * Gathers comprehensive network performance data
    *
    * @returns Promise<NetworkMetrics> Network metrics
    */
  async collectNetworkMetrics() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[16]++;
    cov_783ohuk0e().s[81]++;
    try {
      const [networkInterfaces, networkStats] =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[82]++, await Promise.all([si.networkInterfaces(), si.networkStats()]));
      const interfaces =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[83]++, networkInterfaces.map(iface => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[17]++;
        cov_783ohuk0e().s[84]++;
        return {
          name: iface.iface,
          type:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[51][0]++, iface.type) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[51][1]++, 'unknown'),
          ip:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[52][0]++, iface.ip4) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[52][1]++, ''),
          mac:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[53][0]++, iface.mac) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[53][1]++, ''),
          isUp:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[54][0]++, !iface.internal) &&
          /* istanbul ignore next */
          (cov_783ohuk0e().b[54][1]++, iface.operstate === 'up'),
          speed:
          /* istanbul ignore next */
          (cov_783ohuk0e().b[55][0]++, iface.speed) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[55][1]++, 0),
          bytesReceived: 0,
          // Will be updated from networkStats
          bytesSent: 0 // Will be updated from networkStats
        };
      }));
      // Update interface statistics
      /* istanbul ignore next */
      cov_783ohuk0e().s[85]++;
      networkStats.forEach(stat => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[18]++;
        const iface =
        /* istanbul ignore next */
        (cov_783ohuk0e().s[86]++, interfaces.find(i => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[19]++;
          cov_783ohuk0e().s[87]++;
          return i.name === stat.iface;
        }));
        /* istanbul ignore next */
        cov_783ohuk0e().s[88]++;
        if (iface) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[56][0]++;
          cov_783ohuk0e().s[89]++;
          iface.bytesReceived =
          /* istanbul ignore next */
          (cov_783ohuk0e().b[57][0]++, stat.rx_bytes) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[57][1]++, 0);
          /* istanbul ignore next */
          cov_783ohuk0e().s[90]++;
          iface.bytesSent =
          /* istanbul ignore next */
          (cov_783ohuk0e().b[58][0]++, stat.tx_bytes) ||
          /* istanbul ignore next */
          (cov_783ohuk0e().b[58][1]++, 0);
        } else
        /* istanbul ignore next */
        {
          cov_783ohuk0e().b[56][1]++;
        }
      });
      const totalBytesReceived =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[91]++, networkStats.reduce((sum, stat) => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[20]++;
        cov_783ohuk0e().s[92]++;
        return sum + (
        /* istanbul ignore next */
        (cov_783ohuk0e().b[59][0]++, stat.rx_bytes) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[59][1]++, 0));
      }, 0));
      const totalBytesSent =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[93]++, networkStats.reduce((sum, stat) => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[21]++;
        cov_783ohuk0e().s[94]++;
        return sum + (
        /* istanbul ignore next */
        (cov_783ohuk0e().b[60][0]++, stat.tx_bytes) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[60][1]++, 0));
      }, 0));
      // Calculate current speeds (simplified)
      const downloadSpeed =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[95]++, networkStats.reduce((sum, stat) => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[22]++;
        cov_783ohuk0e().s[96]++;
        return sum + (
        /* istanbul ignore next */
        (cov_783ohuk0e().b[61][0]++, stat.rx_sec) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[61][1]++, 0));
      }, 0) / 1024 / 1024 * 8); // Mbps
      const uploadSpeed =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[97]++, networkStats.reduce((sum, stat) => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[23]++;
        cov_783ohuk0e().s[98]++;
        return sum + (
        /* istanbul ignore next */
        (cov_783ohuk0e().b[62][0]++, stat.tx_sec) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[62][1]++, 0));
      }, 0) / 1024 / 1024 * 8); // Mbps
      /* istanbul ignore next */
      cov_783ohuk0e().s[99]++;
      return {
        interfaces,
        totalBytesReceived,
        totalBytesSent,
        downloadSpeed,
        uploadSpeed,
        latency: 0,
        // Would need ping test for actual latency
        packetLoss: 0 // Would need ping test for packet loss
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[100]++;
      logger_1.logger.error('❌ Failed to collect network metrics:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[101]++;
      throw error;
    }
  }
  /**
   * Analyze metrics and generate alerts
   * Evaluates system metrics against thresholds and creates alerts
   *
   * @returns Promise<void>
   */
  async analyzeMetricsAndGenerateAlerts() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[24]++;
    cov_783ohuk0e().s[102]++;
    try {
      const alerts =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[103]++, []);
      // Analyze CPU metrics
      /* istanbul ignore next */
      cov_783ohuk0e().s[104]++;
      if (this.currentMetrics.cpu) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[63][0]++;
        const cpu =
        /* istanbul ignore next */
        (cov_783ohuk0e().s[105]++, this.currentMetrics.cpu);
        /* istanbul ignore next */
        cov_783ohuk0e().s[106]++;
        if (cpu.utilization >= this.config.cpuCriticalThreshold) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[64][0]++;
          cov_783ohuk0e().s[107]++;
          alerts.push(this.createAlert('CPU', 'CRITICAL', `CPU utilization critical: ${cpu.utilization}%`, cpu.utilization, this.config.cpuCriticalThreshold));
        } else {
          /* istanbul ignore next */
          cov_783ohuk0e().b[64][1]++;
          cov_783ohuk0e().s[108]++;
          if (cpu.utilization >= this.config.cpuWarningThreshold) {
            /* istanbul ignore next */
            cov_783ohuk0e().b[65][0]++;
            cov_783ohuk0e().s[109]++;
            alerts.push(this.createAlert('CPU', 'HIGH', `CPU utilization high: ${cpu.utilization}%`, cpu.utilization, this.config.cpuWarningThreshold));
          } else
          /* istanbul ignore next */
          {
            cov_783ohuk0e().b[65][1]++;
          }
        }
        /* istanbul ignore next */
        cov_783ohuk0e().s[110]++;
        if (cpu.temperature >= this.config.tempCriticalThreshold) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[66][0]++;
          cov_783ohuk0e().s[111]++;
          alerts.push(this.createAlert('THERMAL', 'CRITICAL', `CPU temperature critical: ${cpu.temperature}°C`, cpu.temperature, this.config.tempCriticalThreshold));
        } else {
          /* istanbul ignore next */
          cov_783ohuk0e().b[66][1]++;
          cov_783ohuk0e().s[112]++;
          if (cpu.temperature >= this.config.tempWarningThreshold) {
            /* istanbul ignore next */
            cov_783ohuk0e().b[67][0]++;
            cov_783ohuk0e().s[113]++;
            alerts.push(this.createAlert('THERMAL', 'HIGH', `CPU temperature high: ${cpu.temperature}°C`, cpu.temperature, this.config.tempWarningThreshold));
          } else
          /* istanbul ignore next */
          {
            cov_783ohuk0e().b[67][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[63][1]++;
      }
      // Analyze RAM metrics
      cov_783ohuk0e().s[114]++;
      if (this.currentMetrics.ram) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[68][0]++;
        const ram =
        /* istanbul ignore next */
        (cov_783ohuk0e().s[115]++, this.currentMetrics.ram);
        /* istanbul ignore next */
        cov_783ohuk0e().s[116]++;
        if (ram.utilization >= this.config.ramCriticalThreshold) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[69][0]++;
          cov_783ohuk0e().s[117]++;
          alerts.push(this.createAlert('RAM', 'CRITICAL', `Memory utilization critical: ${ram.utilization}%`, ram.utilization, this.config.ramCriticalThreshold));
        } else {
          /* istanbul ignore next */
          cov_783ohuk0e().b[69][1]++;
          cov_783ohuk0e().s[118]++;
          if (ram.utilization >= this.config.ramWarningThreshold) {
            /* istanbul ignore next */
            cov_783ohuk0e().b[70][0]++;
            cov_783ohuk0e().s[119]++;
            alerts.push(this.createAlert('RAM', 'HIGH', `Memory utilization high: ${ram.utilization}%`, ram.utilization, this.config.ramWarningThreshold));
          } else
          /* istanbul ignore next */
          {
            cov_783ohuk0e().b[70][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[68][1]++;
      }
      // Analyze SSD metrics
      cov_783ohuk0e().s[120]++;
      if (this.currentMetrics.ssd) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[71][0]++;
        const ssd =
        /* istanbul ignore next */
        (cov_783ohuk0e().s[121]++, this.currentMetrics.ssd);
        /* istanbul ignore next */
        cov_783ohuk0e().s[122]++;
        if (ssd.utilization >= this.config.ssdCriticalThreshold) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[72][0]++;
          cov_783ohuk0e().s[123]++;
          alerts.push(this.createAlert('SSD', 'CRITICAL', `Storage utilization critical: ${ssd.utilization}%`, ssd.utilization, this.config.ssdCriticalThreshold));
        } else {
          /* istanbul ignore next */
          cov_783ohuk0e().b[72][1]++;
          cov_783ohuk0e().s[124]++;
          if (ssd.utilization >= this.config.ssdWarningThreshold) {
            /* istanbul ignore next */
            cov_783ohuk0e().b[73][0]++;
            cov_783ohuk0e().s[125]++;
            alerts.push(this.createAlert('SSD', 'HIGH', `Storage utilization high: ${ssd.utilization}%`, ssd.utilization, this.config.ssdWarningThreshold));
          } else
          /* istanbul ignore next */
          {
            cov_783ohuk0e().b[73][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[71][1]++;
      }
      // Process new alerts
      cov_783ohuk0e().s[126]++;
      for (const alert of alerts) {
        /* istanbul ignore next */
        cov_783ohuk0e().s[127]++;
        await this.processAlert(alert);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[128]++;
      logger_1.logger.error('❌ Failed to analyze metrics:', error);
    }
  } /**
      * Create system alert
    * Creates a new system alert with specified parameters
    *
    * @param type - Alert type
    * @param severity - Alert severity
    * @param message - Alert message
    * @param currentValue - Current metric value
    * @param threshold - Threshold value
    * @returns SystemAlert New alert
    */
  createAlert(type, severity, message, currentValue, threshold) {
    /* istanbul ignore next */
    cov_783ohuk0e().f[25]++;
    cov_783ohuk0e().s[129]++;
    return {
      id: `${type.toLowerCase()}_${Date.now()}_${Math.random().toString(36).substring(2)}`,
      type,
      severity,
      message,
      currentValue,
      threshold,
      timestamp: new Date(),
      isActive: true
    };
  }
  /**
   * Process system alert
   * Handles new alerts and triggers appropriate responses
   *
   * @param alert - System alert to process
   * @returns Promise<void>
   */
  async processAlert(alert) {
    /* istanbul ignore next */
    cov_783ohuk0e().f[26]++;
    cov_783ohuk0e().s[130]++;
    try {
      // Check if similar alert already exists
      const existingAlert =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[131]++, Array.from(this.activeAlerts.values()).find(a => {
        /* istanbul ignore next */
        cov_783ohuk0e().f[27]++;
        cov_783ohuk0e().s[132]++;
        return /* istanbul ignore next */(cov_783ohuk0e().b[74][0]++, a.type === alert.type) &&
        /* istanbul ignore next */
        (cov_783ohuk0e().b[74][1]++, a.severity === alert.severity) &&
        /* istanbul ignore next */
        (cov_783ohuk0e().b[74][2]++, a.isActive);
      }));
      /* istanbul ignore next */
      cov_783ohuk0e().s[133]++;
      if (existingAlert) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[75][0]++;
        cov_783ohuk0e().s[134]++;
        // Update existing alert
        existingAlert.currentValue = alert.currentValue;
        /* istanbul ignore next */
        cov_783ohuk0e().s[135]++;
        existingAlert.timestamp = alert.timestamp;
        /* istanbul ignore next */
        cov_783ohuk0e().s[136]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[75][1]++;
      }
      // Add new alert
      cov_783ohuk0e().s[137]++;
      this.activeAlerts.set(alert.id, alert);
      // Log alert
      /* istanbul ignore next */
      cov_783ohuk0e().s[138]++;
      logger_1.logger.warn(`⚠️ System Alert: ${alert.message}`, {
        type: alert.type,
        severity: alert.severity,
        currentValue: alert.currentValue,
        threshold: alert.threshold
      });
      // Create audit entry for critical alerts
      /* istanbul ignore next */
      cov_783ohuk0e().s[139]++;
      if (alert.severity === 'CRITICAL') {
        /* istanbul ignore next */
        cov_783ohuk0e().b[76][0]++;
        cov_783ohuk0e().s[140]++;
        await audit_service_1.auditService.createAuditEntry({
          auditId: `sys_alert_${alert.id}`,
          eventType: 'CRITICAL_SYSTEM_ALERT',
          actor: 'SYSTEM_MONITOR',
          resource: `HARDWARE_${alert.type}`,
          action: 'GENERATE_ALERT',
          result: 'SUCCESS',
          timestamp: alert.timestamp,
          auditData: {
            alertType: alert.type,
            severity: alert.severity,
            currentValue: alert.currentValue,
            threshold: alert.threshold
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[76][1]++;
      }
      // TODO: Send notifications for critical alerts
      // This would integrate with notification service
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[141]++;
      logger_1.logger.error('❌ Failed to process alert:', error);
    }
  }
  /**
   * Log system status
   * Logs current system metrics for monitoring
   */
  logSystemStatus() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[28]++;
    const {
      cpu,
      ram,
      ssd,
      network
    } =
    /* istanbul ignore next */
    (cov_783ohuk0e().s[142]++, this.currentMetrics);
    /* istanbul ignore next */
    cov_783ohuk0e().s[143]++;
    logger_1.logger.debug('📊 System Status Update', {
      cpu: cpu ?
      /* istanbul ignore next */
      (cov_783ohuk0e().b[77][0]++, {
        utilization: cpu.utilization,
        temperature: cpu.temperature,
        frequency: cpu.frequency
      }) :
      /* istanbul ignore next */
      (cov_783ohuk0e().b[77][1]++, null),
      ram: ram ?
      /* istanbul ignore next */
      (cov_783ohuk0e().b[78][0]++, {
        utilization: ram.utilization,
        used: Math.round(ram.used / 1024 / 1024 / 1024 * 100) / 100,
        // GB
        total: Math.round(ram.total / 1024 / 1024 / 1024 * 100) / 100 // GB
      }) :
      /* istanbul ignore next */
      (cov_783ohuk0e().b[78][1]++, null),
      ssd: ssd ?
      /* istanbul ignore next */
      (cov_783ohuk0e().b[79][0]++, {
        utilization: ssd.utilization,
        used: Math.round(ssd.used / 1024 / 1024 / 1024 * 100) / 100,
        // GB
        total: Math.round(ssd.total / 1024 / 1024 / 1024 * 100) / 100 // GB
      }) :
      /* istanbul ignore next */
      (cov_783ohuk0e().b[79][1]++, null),
      network: network ?
      /* istanbul ignore next */
      (cov_783ohuk0e().b[80][0]++, {
        downloadSpeed: Math.round(network.downloadSpeed * 100) / 100,
        uploadSpeed: Math.round(network.uploadSpeed * 100) / 100,
        activeInterfaces: network.interfaces.filter(i => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[29]++;
          cov_783ohuk0e().s[144]++;
          return i.isUp;
        }).length
      }) :
      /* istanbul ignore next */
      (cov_783ohuk0e().b[80][1]++, null),
      activeAlerts: this.activeAlerts.size
    });
  }
  /**
   * Get current system health status
   * Returns comprehensive system health information
   *
   * @returns Promise<SystemHealthStatus> System health status
   */
  async getSystemHealthStatus() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[30]++;
    cov_783ohuk0e().s[145]++;
    try {
      const {
        cpu,
        ram,
        ssd,
        network
      } =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[146]++, this.currentMetrics);
      // Calculate component health scores
      const cpuHealth =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[147]++, this.calculateComponentHealth(
      /* istanbul ignore next */
      (cov_783ohuk0e().b[81][0]++, cpu?.utilization) ||
      /* istanbul ignore next */
      (cov_783ohuk0e().b[81][1]++, 0), this.config.cpuWarningThreshold, this.config.cpuCriticalThreshold, 'CPU utilization'));
      const ramHealth =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[148]++, this.calculateComponentHealth(
      /* istanbul ignore next */
      (cov_783ohuk0e().b[82][0]++, ram?.utilization) ||
      /* istanbul ignore next */
      (cov_783ohuk0e().b[82][1]++, 0), this.config.ramWarningThreshold, this.config.ramCriticalThreshold, 'Memory utilization'));
      const ssdHealth =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[149]++, this.calculateComponentHealth(
      /* istanbul ignore next */
      (cov_783ohuk0e().b[83][0]++, ssd?.utilization) ||
      /* istanbul ignore next */
      (cov_783ohuk0e().b[83][1]++, 0), this.config.ssdWarningThreshold, this.config.ssdCriticalThreshold, 'Storage utilization'));
      const thermalHealth =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[150]++, this.calculateComponentHealth(
      /* istanbul ignore next */
      (cov_783ohuk0e().b[84][0]++, cpu?.temperature) ||
      /* istanbul ignore next */
      (cov_783ohuk0e().b[84][1]++, 0), this.config.tempWarningThreshold, this.config.tempCriticalThreshold, 'CPU temperature'));
      const networkHealth =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[151]++, {
        score: network?.interfaces.filter(i => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[31]++;
          cov_783ohuk0e().s[152]++;
          return i.isUp;
        }).length > 0 ?
        /* istanbul ignore next */
        (cov_783ohuk0e().b[85][0]++, 100) :
        /* istanbul ignore next */
        (cov_783ohuk0e().b[85][1]++, 0),
        status: network?.interfaces.filter(i => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[32]++;
          cov_783ohuk0e().s[153]++;
          return i.isUp;
        }).length > 0 ?
        /* istanbul ignore next */
        (cov_783ohuk0e().b[86][0]++, 'EXCELLENT') :
        /* istanbul ignore next */
        (cov_783ohuk0e().b[86][1]++, 'CRITICAL'),
        message: `${
        /* istanbul ignore next */
        (cov_783ohuk0e().b[87][0]++, network?.interfaces.filter(i => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[33]++;
          cov_783ohuk0e().s[154]++;
          return i.isUp;
        }).length) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[87][1]++, 0)} active interfaces`,
        value:
        /* istanbul ignore next */
        (cov_783ohuk0e().b[88][0]++, network?.interfaces.filter(i => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[34]++;
          cov_783ohuk0e().s[155]++;
          return i.isUp;
        }).length) ||
        /* istanbul ignore next */
        (cov_783ohuk0e().b[88][1]++, 0),
        thresholds: {
          warning: 1,
          critical: 0
        }
      });
      // Calculate overall health score
      const overallHealth =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[156]++, Math.round((cpuHealth.score + ramHealth.score + ssdHealth.score + thermalHealth.score + networkHealth.score) / 5));
      // Generate recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[157]++, []);
      /* istanbul ignore next */
      cov_783ohuk0e().s[158]++;
      if (cpuHealth.score < 70) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[89][0]++;
        cov_783ohuk0e().s[159]++;
        recommendations.push('Consider reducing CPU-intensive operations');
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[89][1]++;
      }
      cov_783ohuk0e().s[160]++;
      if (ramHealth.score < 70) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[90][0]++;
        cov_783ohuk0e().s[161]++;
        recommendations.push('Consider freeing up memory or adding more RAM');
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[90][1]++;
      }
      cov_783ohuk0e().s[162]++;
      if (ssdHealth.score < 70) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[91][0]++;
        cov_783ohuk0e().s[163]++;
        recommendations.push('Consider cleaning up disk space');
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[91][1]++;
      }
      cov_783ohuk0e().s[164]++;
      if (thermalHealth.score < 70) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[92][0]++;
        cov_783ohuk0e().s[165]++;
        recommendations.push('Check system cooling and ventilation');
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[92][1]++;
      }
      cov_783ohuk0e().s[166]++;
      if (networkHealth.score < 70) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[93][0]++;
        cov_783ohuk0e().s[167]++;
        recommendations.push('Check network connectivity');
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[93][1]++;
      }
      cov_783ohuk0e().s[168]++;
      return {
        overallHealth,
        components: {
          cpu: cpuHealth,
          ram: ramHealth,
          ssd: ssdHealth,
          network: networkHealth,
          thermal: thermalHealth
        },
        alerts: Array.from(this.activeAlerts.values()).filter(a => {
          /* istanbul ignore next */
          cov_783ohuk0e().f[35]++;
          cov_783ohuk0e().s[169]++;
          return a.isActive;
        }),
        recommendations,
        lastUpdated: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[170]++;
      logger_1.logger.error('❌ Failed to get system health status:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[171]++;
      throw error;
    }
  }
  /**
   * Calculate component health score
   * Determines health score based on current value and thresholds
   *
   * @param currentValue - Current metric value
   * @param warningThreshold - Warning threshold
   * @param criticalThreshold - Critical threshold
   * @param description - Component description
   * @returns HealthStatus Component health status
   */
  calculateComponentHealth(currentValue, warningThreshold, criticalThreshold, description) {
    /* istanbul ignore next */
    cov_783ohuk0e().f[36]++;
    let score;
    let status;
    let message;
    /* istanbul ignore next */
    cov_783ohuk0e().s[172]++;
    if (currentValue >= criticalThreshold) {
      /* istanbul ignore next */
      cov_783ohuk0e().b[94][0]++;
      cov_783ohuk0e().s[173]++;
      score = Math.max(0, 100 - (currentValue - criticalThreshold) / criticalThreshold * 100);
      /* istanbul ignore next */
      cov_783ohuk0e().s[174]++;
      status = 'CRITICAL';
      /* istanbul ignore next */
      cov_783ohuk0e().s[175]++;
      message = `${description} is critical (${currentValue})`;
    } else {
      /* istanbul ignore next */
      cov_783ohuk0e().b[94][1]++;
      cov_783ohuk0e().s[176]++;
      if (currentValue >= warningThreshold) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[95][0]++;
        cov_783ohuk0e().s[177]++;
        score = Math.max(30, 100 - (currentValue - warningThreshold) / (criticalThreshold - warningThreshold) * 70);
        /* istanbul ignore next */
        cov_783ohuk0e().s[178]++;
        status = 'WARNING';
        /* istanbul ignore next */
        cov_783ohuk0e().s[179]++;
        message = `${description} is elevated (${currentValue})`;
      } else {
        /* istanbul ignore next */
        cov_783ohuk0e().b[95][1]++;
        cov_783ohuk0e().s[180]++;
        if (currentValue >= warningThreshold * 0.7) {
          /* istanbul ignore next */
          cov_783ohuk0e().b[96][0]++;
          cov_783ohuk0e().s[181]++;
          score = Math.max(70, 100 - currentValue / warningThreshold * 30);
          /* istanbul ignore next */
          cov_783ohuk0e().s[182]++;
          status = 'GOOD';
          /* istanbul ignore next */
          cov_783ohuk0e().s[183]++;
          message = `${description} is good (${currentValue})`;
        } else {
          /* istanbul ignore next */
          cov_783ohuk0e().b[96][1]++;
          cov_783ohuk0e().s[184]++;
          score = 100;
          /* istanbul ignore next */
          cov_783ohuk0e().s[185]++;
          status = 'EXCELLENT';
          /* istanbul ignore next */
          cov_783ohuk0e().s[186]++;
          message = `${description} is excellent (${currentValue})`;
        }
      }
    }
    /* istanbul ignore next */
    cov_783ohuk0e().s[187]++;
    return {
      score: Math.round(score),
      status,
      message,
      value: currentValue,
      thresholds: {
        warning: warningThreshold,
        critical: criticalThreshold
      }
    };
  }
  /**
   * Validate system requirements
   * Checks if system meets minimum requirements for trading
   *
   * @returns Promise<{ meetsRequirements: boolean; warnings: string[] }> Validation result
   */
  async validateSystemRequirements() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[37]++;
    cov_783ohuk0e().s[188]++;
    try {
      const warnings =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[189]++, []);
      let meetsRequirements =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[190]++, true);
      const {
        cpu,
        ram,
        ssd
      } =
      /* istanbul ignore next */
      (cov_783ohuk0e().s[191]++, this.currentMetrics);
      // Check CPU requirements (i5 or better)
      /* istanbul ignore next */
      cov_783ohuk0e().s[192]++;
      if (
      /* istanbul ignore next */
      (cov_783ohuk0e().b[98][0]++, cpu) &&
      /* istanbul ignore next */
      (cov_783ohuk0e().b[98][1]++, !cpu.brand.toLowerCase().includes('i5')) &&
      /* istanbul ignore next */
      (cov_783ohuk0e().b[98][2]++, !cpu.brand.toLowerCase().includes('i7'))) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[97][0]++;
        cov_783ohuk0e().s[193]++;
        warnings.push(`CPU may not meet requirements: ${cpu.brand} (recommended: Intel i5 or better)`);
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[97][1]++;
      }
      // Check RAM requirements (12GB minimum)
      cov_783ohuk0e().s[194]++;
      if (
      /* istanbul ignore next */
      (cov_783ohuk0e().b[100][0]++, ram) &&
      /* istanbul ignore next */
      (cov_783ohuk0e().b[100][1]++, ram.total < 12 * 1024 * 1024 * 1024)) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[99][0]++;
        cov_783ohuk0e().s[195]++;
        warnings.push(`RAM below recommended: ${Math.round(ram.total / 1024 / 1024 / 1024)}GB (recommended: 12GB)`);
        /* istanbul ignore next */
        cov_783ohuk0e().s[196]++;
        meetsRequirements = false;
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[99][1]++;
      }
      // Check SSD requirements (256GB minimum)
      cov_783ohuk0e().s[197]++;
      if (
      /* istanbul ignore next */
      (cov_783ohuk0e().b[102][0]++, ssd) &&
      /* istanbul ignore next */
      (cov_783ohuk0e().b[102][1]++, ssd.total < 256 * 1024 * 1024 * 1024)) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[101][0]++;
        cov_783ohuk0e().s[198]++;
        warnings.push(`Storage below recommended: ${Math.round(ssd.total / 1024 / 1024 / 1024)}GB (recommended: 256GB)`);
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[101][1]++;
      }
      // Check available storage (at least 50GB free)
      cov_783ohuk0e().s[199]++;
      if (
      /* istanbul ignore next */
      (cov_783ohuk0e().b[104][0]++, ssd) &&
      /* istanbul ignore next */
      (cov_783ohuk0e().b[104][1]++, ssd.free < 50 * 1024 * 1024 * 1024)) {
        /* istanbul ignore next */
        cov_783ohuk0e().b[103][0]++;
        cov_783ohuk0e().s[200]++;
        warnings.push(`Low storage space: ${Math.round(ssd.free / 1024 / 1024 / 1024)}GB free (recommended: 50GB+)`);
        /* istanbul ignore next */
        cov_783ohuk0e().s[201]++;
        meetsRequirements = false;
      } else
      /* istanbul ignore next */
      {
        cov_783ohuk0e().b[103][1]++;
      }
      cov_783ohuk0e().s[202]++;
      return {
        meetsRequirements,
        warnings
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_783ohuk0e().s[203]++;
      logger_1.logger.error('❌ Failed to validate system requirements:', error);
      /* istanbul ignore next */
      cov_783ohuk0e().s[204]++;
      return {
        meetsRequirements: false,
        warnings: ['System validation failed']
      };
    }
  }
  /**
   * Get current system metrics
   * Returns the most recent system metrics
   *
   * @returns Current system metrics
   */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[38]++;
    cov_783ohuk0e().s[205]++;
    return {
      ...this.currentMetrics
    };
  }
  /**
   * Stop hardware monitoring
   * Stops continuous monitoring and cleans up resources
   */
  stopHardwareMonitoring() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[39]++;
    cov_783ohuk0e().s[206]++;
    if (this.monitoringInterval) {
      /* istanbul ignore next */
      cov_783ohuk0e().b[105][0]++;
      cov_783ohuk0e().s[207]++;
      clearInterval(this.monitoringInterval);
      /* istanbul ignore next */
      cov_783ohuk0e().s[208]++;
      this.monitoringInterval = null;
      /* istanbul ignore next */
      cov_783ohuk0e().s[209]++;
      logger_1.logger.info('🛑 Hardware monitoring stopped');
    } else
    /* istanbul ignore next */
    {
      cov_783ohuk0e().b[105][1]++;
    }
  }
  /**
   * Initialize performance optimization
   * Sets up performance optimization integration
   */
  async initializePerformanceOptimization() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[40]++;
    cov_783ohuk0e().s[210]++;
    logger_1.logger.info('⚡ Initializing performance optimization integration...');
    // Performance optimization is handled by PerformanceOptimizer class
    // This method provides integration point for system monitoring
    /* istanbul ignore next */
    cov_783ohuk0e().s[211]++;
    logger_1.logger.info('✅ Performance optimization integration ready');
  }
  /**
   * Setup thermal management
   * Sets up thermal monitoring integration
   */
  async setupThermalManagement() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[41]++;
    cov_783ohuk0e().s[212]++;
    logger_1.logger.info('🌡️ Setting up thermal management integration...');
    // Thermal management is handled by PerformanceOptimizer class
    // This method provides integration point for system monitoring
    /* istanbul ignore next */
    cov_783ohuk0e().s[213]++;
    logger_1.logger.info('✅ Thermal management integration ready');
  }
  /**
   * Get system monitor status
   * Returns current status for monitoring
   *
   * @returns Object containing status information
   */
  getStatus() {
    /* istanbul ignore next */
    cov_783ohuk0e().f[42]++;
    cov_783ohuk0e().s[214]++;
    return {
      isMonitoring: this.monitoringInterval !== null,
      activeAlerts: this.activeAlerts.size,
      lastScanTime: null,
      // Would track last scan time
      monitoringInterval: this.config.monitoringIntervalMs,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_783ohuk0e().s[215]++;
exports.SystemMonitor = SystemMonitor;
// =============================================================================
// INTEL NUC SYSTEM MONITORING NOTES
// =============================================================================
// 1. Continuous monitoring of CPU, RAM, SSD, and network performance
// 2. Real-time alerting for performance issues and hardware problems
// 3. Thermal monitoring to prevent overheating during intensive trading
// 4. Storage monitoring to prevent disk space issues
// 5. Network monitoring for connectivity and performance issues
// 6. System health scoring for overall system assessment
// 7. Hardware requirement validation for optimal trading performance
// 8. Comprehensive logging and audit trails for all monitoring activities
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,