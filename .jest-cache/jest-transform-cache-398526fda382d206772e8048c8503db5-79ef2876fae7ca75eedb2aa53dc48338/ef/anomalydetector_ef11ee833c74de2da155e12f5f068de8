a1276b2fbfe47dc8a05a4e3fabb2a9ea
"use strict";

/**
 * =============================================================================
 * ANOMALY DETECTOR - AI-POWERED MARKET ANOMALY DETECTION
 * =============================================================================
 *
 * This module implements sophisticated anomaly detection for cryptocurrency
 * markets using AI and statistical methods. It identifies unusual patterns,
 * market irregularities, and potential trading opportunities or risks.
 *
 * Key Features:
 * - Real-time anomaly detection using multiple algorithms
 * - Pattern recognition for unusual market behavior
 * - Volume and price anomaly identification
 * - Sentiment-price divergence detection
 * - Liquidity and order book anomalies
 * - Alert generation and risk assessment
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_10ksclylsm() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\anomaly-detector.ts";
  var hash = "31a9901c59f1cb2d4f0da445da06bbb3914a4efc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\anomaly-detector.ts",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "1": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "2": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "3": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "4": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "5": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "6": {
        start: {
          line: 36,
          column: 19
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "7": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 25
        }
      },
      "8": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "9": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "10": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 16
        }
      },
      "11": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 35
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "13": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "14": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "15": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "16": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "17": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 59
        }
      },
      "18": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 59
        }
      },
      "19": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 38
        }
      },
      "20": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 80
        }
      },
      "21": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 37
        }
      },
      "22": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 85
        }
      },
      "23": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 24
        }
      },
      "24": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "25": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "26": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "27": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 74
        }
      },
      "28": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "29": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "30": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 68
        }
      },
      "31": {
        start: {
          line: 121,
          column: 30
        },
        end: {
          line: 121,
          column: 40
        }
      },
      "32": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 87
        }
      },
      "33": {
        start: {
          line: 124,
          column: 27
        },
        end: {
          line: 124,
          column: 64
        }
      },
      "34": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "35": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 68
        }
      },
      "36": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 65
        }
      },
      "37": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 60
        }
      },
      "38": {
        start: {
          line: 132,
          column: 113
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "39": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 146,
          column: 13
        }
      },
      "40": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "41": {
        start: {
          line: 149,
          column: 37
        },
        end: {
          line: 149,
          column: 110
        }
      },
      "42": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 51
        }
      },
      "43": {
        start: {
          line: 153,
          column: 37
        },
        end: {
          line: 153,
          column: 81
        }
      },
      "44": {
        start: {
          line: 154,
          column: 36
        },
        end: {
          line: 154,
          column: 89
        }
      },
      "45": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "46": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 38
        }
      },
      "47": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "48": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 75
        }
      },
      "49": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 132
        }
      },
      "50": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "51": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 26
        }
      },
      "52": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 74
        }
      },
      "53": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "54": {
        start: {
          line: 182,
          column: 45
        },
        end: {
          line: 182,
          column: 55
        }
      },
      "55": {
        start: {
          line: 183,
          column: 27
        },
        end: {
          line: 183,
          column: 55
        }
      },
      "56": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 30
        }
      },
      "57": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "58": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 42
        }
      },
      "59": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 61
        }
      },
      "60": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "61": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 84
        }
      },
      "62": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 197,
          column: 97
        }
      },
      "63": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 79
        }
      },
      "64": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 79
        }
      },
      "65": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "66": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 44
        }
      },
      "67": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 64
        }
      },
      "68": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 208,
          column: 55
        }
      },
      "69": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 98
        }
      },
      "70": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 211,
          column: 106
        }
      },
      "71": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 82
        }
      },
      "72": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 82
        }
      },
      "73": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "74": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 52
        }
      },
      "75": {
        start: {
          line: 220,
          column: 37
        },
        end: {
          line: 220,
          column: 63
        }
      },
      "76": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 114
        }
      },
      "77": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 223,
          column: 122
        }
      },
      "78": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 42
        }
      },
      "79": {
        start: {
          line: 231,
          column: 26
        },
        end: {
          line: 231,
          column: 28
        }
      },
      "80": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "81": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 29
        }
      },
      "82": {
        start: {
          line: 235,
          column: 27
        },
        end: {
          line: 235,
          column: 37
        }
      },
      "83": {
        start: {
          line: 236,
          column: 48
        },
        end: {
          line: 236,
          column: 56
        }
      },
      "84": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 238,
          column: 85
        }
      },
      "85": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "86": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 111
        }
      },
      "87": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 251,
          column: 15
        }
      },
      "88": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 50
        }
      },
      "89": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "90": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 265,
          column: 15
        }
      },
      "91": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 25
        }
      },
      "92": {
        start: {
          line: 273,
          column: 26
        },
        end: {
          line: 273,
          column: 28
        }
      },
      "93": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "94": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 29
        }
      },
      "95": {
        start: {
          line: 277,
          column: 43
        },
        end: {
          line: 277,
          column: 53
        }
      },
      "96": {
        start: {
          line: 278,
          column: 46
        },
        end: {
          line: 278,
          column: 54
        }
      },
      "97": {
        start: {
          line: 280,
          column: 30
        },
        end: {
          line: 280,
          column: 68
        }
      },
      "98": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "99": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 291,
          column: 15
        }
      },
      "100": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "101": {
        start: {
          line: 295,
          column: 27
        },
        end: {
          line: 295,
          column: 63
        }
      },
      "102": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "103": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 306,
          column: 19
        }
      },
      "104": {
        start: {
          line: 310,
          column: 35
        },
        end: {
          line: 310,
          column: 62
        }
      },
      "105": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "106": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 321,
          column: 15
        }
      },
      "107": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 25
        }
      },
      "108": {
        start: {
          line: 329,
          column: 26
        },
        end: {
          line: 329,
          column: 28
        }
      },
      "109": {
        start: {
          line: 331,
          column: 40
        },
        end: {
          line: 331,
          column: 50
        }
      },
      "110": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "111": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 343,
          column: 15
        }
      },
      "112": {
        start: {
          line: 346,
          column: 31
        },
        end: {
          line: 346,
          column: 104
        }
      },
      "113": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 358,
          column: 9
        }
      },
      "114": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 357,
          column: 15
        }
      },
      "115": {
        start: {
          line: 360,
          column: 24
        },
        end: {
          line: 360,
          column: 138
        }
      },
      "116": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "117": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 371,
          column: 15
        }
      },
      "118": {
        start: {
          line: 373,
          column: 13
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "119": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 383,
          column: 15
        }
      },
      "120": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 25
        }
      },
      "121": {
        start: {
          line: 391,
          column: 26
        },
        end: {
          line: 391,
          column: 28
        }
      },
      "122": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "123": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 29
        }
      },
      "124": {
        start: {
          line: 396,
          column: 28
        },
        end: {
          line: 396,
          column: 90
        }
      },
      "125": {
        start: {
          line: 397,
          column: 31
        },
        end: {
          line: 397,
          column: 52
        }
      },
      "126": {
        start: {
          line: 399,
          column: 31
        },
        end: {
          line: 399,
          column: 55
        }
      },
      "127": {
        start: {
          line: 400,
          column: 35
        },
        end: {
          line: 400,
          column: 62
        }
      },
      "128": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "129": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 411,
          column: 15
        }
      },
      "130": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "131": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 424,
          column: 15
        }
      },
      "132": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "133": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 437,
          column: 15
        }
      },
      "134": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 25
        }
      },
      "135": {
        start: {
          line: 445,
          column: 26
        },
        end: {
          line: 445,
          column: 28
        }
      },
      "136": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "137": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 29
        }
      },
      "138": {
        start: {
          line: 449,
          column: 34
        },
        end: {
          line: 449,
          column: 95
        }
      },
      "139": {
        start: {
          line: 450,
          column: 56
        },
        end: {
          line: 450,
          column: 64
        }
      },
      "140": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "141": {
        start: {
          line: 452,
          column: 27
        },
        end: {
          line: 452,
          column: 85
        }
      },
      "142": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 465,
          column: 13
        }
      },
      "143": {
        start: {
          line: 454,
          column: 33
        },
        end: {
          line: 454,
          column: 115
        }
      },
      "144": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 464,
          column: 19
        }
      },
      "145": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 25
        }
      },
      "146": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "147": {
        start: {
          line: 475,
          column: 27
        },
        end: {
          line: 475,
          column: 96
        }
      },
      "148": {
        start: {
          line: 477,
          column: 32
        },
        end: {
          line: 477,
          column: 72
        }
      },
      "149": {
        start: {
          line: 479,
          column: 33
        },
        end: {
          line: 479,
          column: 93
        }
      },
      "150": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 32
        }
      },
      "151": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 77
        }
      },
      "152": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 22
        }
      },
      "153": {
        start: {
          line: 491,
          column: 21
        },
        end: {
          line: 500,
          column: 63
        }
      },
      "154": {
        start: {
          line: 494,
          column: 36
        },
        end: {
          line: 494,
          column: 122
        }
      },
      "155": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 507,
          column: 9
        }
      },
      "156": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 506,
          column: 37
        }
      },
      "157": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 512,
          column: 58
        }
      },
      "158": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 22
        }
      },
      "159": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 530,
          column: 102
        }
      },
      "160": {
        start: {
          line: 536,
          column: 26
        },
        end: {
          line: 536,
          column: 28
        }
      },
      "161": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 550,
          column: 9
        }
      },
      "162": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 549,
          column: 15
        }
      },
      "163": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 562,
          column: 9
        }
      },
      "164": {
        start: {
          line: 552,
          column: 12
        },
        end: {
          line: 561,
          column: 15
        }
      },
      "165": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 563,
          column: 25
        }
      },
      "166": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 570,
          column: 21
        }
      },
      "167": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 570,
          column: 21
        }
      },
      "168": {
        start: {
          line: 571,
          column: 24
        },
        end: {
          line: 571,
          column: 25
        }
      },
      "169": {
        start: {
          line: 572,
          column: 32
        },
        end: {
          line: 572,
          column: 75
        }
      },
      "170": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 577,
          column: 9
        }
      },
      "171": {
        start: {
          line: 574,
          column: 27
        },
        end: {
          line: 574,
          column: 60
        }
      },
      "172": {
        start: {
          line: 575,
          column: 41
        },
        end: {
          line: 575,
          column: 65
        }
      },
      "173": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 576,
          column: 55
        }
      },
      "174": {
        start: {
          line: 579,
          column: 32
        },
        end: {
          line: 579,
          column: 52
        }
      },
      "175": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 66
        }
      },
      "176": {
        start: {
          line: 586,
          column: 25
        },
        end: {
          line: 586,
          column: 28
        }
      },
      "177": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 590,
          column: 9
        }
      },
      "178": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 589,
          column: 29
        }
      },
      "179": {
        start: {
          line: 592,
          column: 24
        },
        end: {
          line: 592,
          column: 67
        }
      },
      "180": {
        start: {
          line: 593,
          column: 8
        },
        end: {
          line: 595,
          column: 9
        }
      },
      "181": {
        start: {
          line: 594,
          column: 12
        },
        end: {
          line: 594,
          column: 29
        }
      },
      "182": {
        start: {
          line: 597,
          column: 8
        },
        end: {
          line: 600,
          column: 9
        }
      },
      "183": {
        start: {
          line: 598,
          column: 41
        },
        end: {
          line: 598,
          column: 111
        }
      },
      "184": {
        start: {
          line: 598,
          column: 70
        },
        end: {
          line: 598,
          column: 88
        }
      },
      "185": {
        start: {
          line: 599,
          column: 12
        },
        end: {
          line: 599,
          column: 65
        }
      },
      "186": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 601,
          column: 51
        }
      },
      "187": {
        start: {
          line: 607,
          column: 20
        },
        end: {
          line: 607,
          column: 30
        }
      },
      "188": {
        start: {
          line: 608,
          column: 25
        },
        end: {
          line: 608,
          column: 54
        }
      },
      "189": {
        start: {
          line: 610,
          column: 26
        },
        end: {
          line: 610,
          column: 57
        }
      },
      "190": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 613,
          column: 9
        }
      },
      "191": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 612,
          column: 19
        }
      },
      "192": {
        start: {
          line: 615,
          column: 29
        },
        end: {
          line: 617,
          column: 19
        }
      },
      "193": {
        start: {
          line: 616,
          column: 37
        },
        end: {
          line: 616,
          column: 105
        }
      },
      "194": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 620,
          column: 9
        }
      },
      "195": {
        start: {
          line: 619,
          column: 12
        },
        end: {
          line: 619,
          column: 19
        }
      },
      "196": {
        start: {
          line: 622,
          column: 34
        },
        end: {
          line: 622,
          column: 107
        }
      },
      "197": {
        start: {
          line: 622,
          column: 56
        },
        end: {
          line: 622,
          column: 106
        }
      },
      "198": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 631,
          column: 9
        }
      },
      "199": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 628,
          column: 15
        }
      },
      "200": {
        start: {
          line: 629,
          column: 12
        },
        end: {
          line: 629,
          column: 49
        }
      },
      "201": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 125
        }
      },
      "202": {
        start: {
          line: 630,
          column: 109
        },
        end: {
          line: 630,
          column: 122
        }
      },
      "203": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 637,
          column: 43
        }
      },
      "204": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 640,
          column: 9
        }
      },
      "205": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 639,
          column: 86
        }
      },
      "206": {
        start: {
          line: 646,
          column: 22
        },
        end: {
          line: 646,
          column: 43
        }
      },
      "207": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 649,
          column: 9
        }
      },
      "208": {
        start: {
          line: 648,
          column: 12
        },
        end: {
          line: 648,
          column: 123
        }
      },
      "209": {
        start: {
          line: 648,
          column: 47
        },
        end: {
          line: 648,
          column: 121
        }
      },
      "210": {
        start: {
          line: 648,
          column: 80
        },
        end: {
          line: 648,
          column: 120
        }
      },
      "211": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 652,
          column: 9
        }
      },
      "212": {
        start: {
          line: 651,
          column: 12
        },
        end: {
          line: 651,
          column: 44
        }
      },
      "213": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 653,
          column: 23
        }
      },
      "214": {
        start: {
          line: 659,
          column: 8
        },
        end: {
          line: 659,
          column: 39
        }
      },
      "215": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 55
        }
      },
      "216": {
        start: {
          line: 666,
          column: 8
        },
        end: {
          line: 666,
          column: 75
        }
      },
      "217": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 672,
          column: 34
        }
      },
      "218": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 678,
          column: 38
        }
      },
      "219": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 679,
          column: 49
        }
      },
      "220": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 64
        }
      },
      "221": {
        start: {
          line: 686,
          column: 8
        },
        end: {
          line: 698,
          column: 9
        }
      },
      "222": {
        start: {
          line: 687,
          column: 12
        },
        end: {
          line: 687,
          column: 73
        }
      },
      "223": {
        start: {
          line: 689,
          column: 12
        },
        end: {
          line: 689,
          column: 35
        }
      },
      "224": {
        start: {
          line: 690,
          column: 12
        },
        end: {
          line: 690,
          column: 39
        }
      },
      "225": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 691,
          column: 38
        }
      },
      "226": {
        start: {
          line: 692,
          column: 12
        },
        end: {
          line: 692,
          column: 39
        }
      },
      "227": {
        start: {
          line: 693,
          column: 12
        },
        end: {
          line: 693,
          column: 74
        }
      },
      "228": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 696,
          column: 86
        }
      },
      "229": {
        start: {
          line: 697,
          column: 12
        },
        end: {
          line: 697,
          column: 24
        }
      },
      "230": {
        start: {
          line: 701,
          column: 0
        },
        end: {
          line: 701,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 46
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 23
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 71
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 92
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 53
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 116
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 47
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 181
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 54
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 230
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 53
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 272
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 55
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 328
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 72
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 390
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 444,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        },
        loc: {
          start: {
            line: 444,
            column: 58
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 444
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        loc: {
          start: {
            line: 472,
            column: 70
          },
          end: {
            line: 486,
            column: 5
          }
        },
        line: 472
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 69
          },
          end: {
            line: 514,
            column: 5
          }
        },
        line: 490
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 494,
            column: 17
          }
        },
        loc: {
          start: {
            line: 494,
            column: 36
          },
          end: {
            line: 494,
            column: 122
          }
        },
        line: 494
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 518,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        },
        loc: {
          start: {
            line: 518,
            column: 40
          },
          end: {
            line: 531,
            column: 5
          }
        },
        line: 518
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 535,
            column: 5
          }
        },
        loc: {
          start: {
            line: 535,
            column: 49
          },
          end: {
            line: 564,
            column: 5
          }
        },
        line: 535
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 5
          }
        },
        loc: {
          start: {
            line: 568,
            column: 41
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 568
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 585,
            column: 4
          },
          end: {
            line: 585,
            column: 5
          }
        },
        loc: {
          start: {
            line: 585,
            column: 50
          },
          end: {
            line: 602,
            column: 5
          }
        },
        line: 585
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 598,
            column: 58
          },
          end: {
            line: 598,
            column: 59
          }
        },
        loc: {
          start: {
            line: 598,
            column: 70
          },
          end: {
            line: 598,
            column: 88
          }
        },
        line: 598
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 606,
            column: 4
          },
          end: {
            line: 606,
            column: 5
          }
        },
        loc: {
          start: {
            line: 606,
            column: 44
          },
          end: {
            line: 632,
            column: 5
          }
        },
        line: 606
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 616,
            column: 20
          },
          end: {
            line: 616,
            column: 21
          }
        },
        loc: {
          start: {
            line: 616,
            column: 37
          },
          end: {
            line: 616,
            column: 105
          }
        },
        line: 616
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 622,
            column: 51
          },
          end: {
            line: 622,
            column: 52
          }
        },
        loc: {
          start: {
            line: 622,
            column: 56
          },
          end: {
            line: 622,
            column: 106
          }
        },
        line: 622
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 630,
            column: 104
          },
          end: {
            line: 630,
            column: 105
          }
        },
        loc: {
          start: {
            line: 630,
            column: 109
          },
          end: {
            line: 630,
            column: 122
          }
        },
        line: 630
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 636,
            column: 4
          },
          end: {
            line: 636,
            column: 5
          }
        },
        loc: {
          start: {
            line: 636,
            column: 25
          },
          end: {
            line: 641,
            column: 5
          }
        },
        line: 636
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 645,
            column: 4
          },
          end: {
            line: 645,
            column: 5
          }
        },
        loc: {
          start: {
            line: 645,
            column: 39
          },
          end: {
            line: 654,
            column: 5
          }
        },
        line: 645
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 648,
            column: 37
          },
          end: {
            line: 648,
            column: 38
          }
        },
        loc: {
          start: {
            line: 648,
            column: 47
          },
          end: {
            line: 648,
            column: 121
          }
        },
        line: 648
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 648,
            column: 69
          },
          end: {
            line: 648,
            column: 70
          }
        },
        loc: {
          start: {
            line: 648,
            column: 80
          },
          end: {
            line: 648,
            column: 120
          }
        },
        line: 648
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 658,
            column: 4
          },
          end: {
            line: 658,
            column: 5
          }
        },
        loc: {
          start: {
            line: 658,
            column: 19
          },
          end: {
            line: 660,
            column: 5
          }
        },
        line: 658
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 664,
            column: 4
          },
          end: {
            line: 664,
            column: 5
          }
        },
        loc: {
          start: {
            line: 664,
            column: 28
          },
          end: {
            line: 667,
            column: 5
          }
        },
        line: 664
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 671,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        },
        loc: {
          start: {
            line: 671,
            column: 16
          },
          end: {
            line: 673,
            column: 5
          }
        },
        line: 671
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 677,
            column: 4
          },
          end: {
            line: 677,
            column: 5
          }
        },
        loc: {
          start: {
            line: 677,
            column: 32
          },
          end: {
            line: 681,
            column: 5
          }
        },
        line: 677
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 685,
            column: 4
          },
          end: {
            line: 685,
            column: 5
          }
        },
        loc: {
          start: {
            line: 685,
            column: 21
          },
          end: {
            line: 699,
            column: 5
          }
        },
        line: 685
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "1": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "2": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "3": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "4": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "5": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 48
          }
        }, {
          start: {
            line: 166,
            column: 52
          },
          end: {
            line: 166,
            column: 75
          }
        }],
        line: 166
      },
      "6": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: 191,
            column: 13
          },
          end: {
            line: 201,
            column: 9
          }
        }],
        line: 187
      },
      "7": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: 207,
            column: 13
          },
          end: {
            line: 214,
            column: 9
          }
        }],
        line: 203
      },
      "8": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 224,
            column: 9
          }
        }],
        line: 216
      },
      "9": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "10": {
        loc: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 42
          },
          end: {
            line: 238,
            column: 81
          }
        }, {
          start: {
            line: 238,
            column: 84
          },
          end: {
            line: 238,
            column: 85
          }
        }],
        line: 238
      },
      "11": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "12": {
        loc: {
          start: {
            line: 241,
            column: 29
          },
          end: {
            line: 241,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 94
          },
          end: {
            line: 241,
            column: 100
          }
        }, {
          start: {
            line: 241,
            column: 103
          },
          end: {
            line: 241,
            column: 111
          }
        }],
        line: 241
      },
      "13": {
        loc: {
          start: {
            line: 245,
            column: 39
          },
          end: {
            line: 245,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 245,
            column: 52
          },
          end: {
            line: 245,
            column: 59
          }
        }, {
          start: {
            line: 245,
            column: 62
          },
          end: {
            line: 245,
            column: 68
          }
        }],
        line: 245
      },
      "14": {
        loc: {
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 246,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 37
          },
          end: {
            line: 246,
            column: 77
          }
        }, {
          start: {
            line: 246,
            column: 80
          },
          end: {
            line: 246,
            column: 128
          }
        }],
        line: 246
      },
      "15": {
        loc: {
          start: {
            line: 247,
            column: 32
          },
          end: {
            line: 247,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 45
          },
          end: {
            line: 247,
            column: 86
          }
        }, {
          start: {
            line: 247,
            column: 89
          },
          end: {
            line: 247,
            column: 126
          }
        }],
        line: 247
      },
      "16": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "17": {
        loc: {
          start: {
            line: 258,
            column: 26
          },
          end: {
            line: 258,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 44
          },
          end: {
            line: 258,
            column: 54
          }
        }, {
          start: {
            line: 258,
            column: 57
          },
          end: {
            line: 258,
            column: 63
          }
        }],
        line: 258
      },
      "18": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "19": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "20": {
        loc: {
          start: {
            line: 284,
            column: 26
          },
          end: {
            line: 284,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 47
          },
          end: {
            line: 284,
            column: 53
          }
        }, {
          start: {
            line: 284,
            column: 56
          },
          end: {
            line: 284,
            column: 64
          }
        }],
        line: 284
      },
      "21": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "22": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "23": {
        loc: {
          start: {
            line: 299,
            column: 30
          },
          end: {
            line: 299,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 53
          },
          end: {
            line: 299,
            column: 63
          }
        }, {
          start: {
            line: 299,
            column: 66
          },
          end: {
            line: 299,
            column: 72
          }
        }],
        line: 299
      },
      "24": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "25": {
        loc: {
          start: {
            line: 314,
            column: 26
          },
          end: {
            line: 314,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 80
          },
          end: {
            line: 314,
            column: 86
          }
        }, {
          start: {
            line: 314,
            column: 89
          },
          end: {
            line: 314,
            column: 97
          }
        }],
        line: 314
      },
      "26": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "27": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 40
          }
        }, {
          start: {
            line: 333,
            column: 44
          },
          end: {
            line: 333,
            column: 72
          }
        }],
        line: 333
      },
      "28": {
        loc: {
          start: {
            line: 338,
            column: 24
          },
          end: {
            line: 338,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 338,
            column: 55
          },
          end: {
            line: 338,
            column: 87
          }
        }, {
          start: {
            line: 338,
            column: 90
          },
          end: {
            line: 338,
            column: 120
          }
        }],
        line: 338
      },
      "29": {
        loc: {
          start: {
            line: 339,
            column: 32
          },
          end: {
            line: 339,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 63
          },
          end: {
            line: 339,
            column: 100
          }
        }, {
          start: {
            line: 339,
            column: 103
          },
          end: {
            line: 339,
            column: 132
          }
        }],
        line: 339
      },
      "30": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "31": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: 373,
            column: 13
          },
          end: {
            line: 384,
            column: 9
          }
        }],
        line: 361
      },
      "32": {
        loc: {
          start: {
            line: 373,
            column: 13
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 373,
            column: 13
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 373
      },
      "33": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "34": {
        loc: {
          start: {
            line: 399,
            column: 31
          },
          end: {
            line: 399,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 49
          },
          end: {
            line: 399,
            column: 50
          }
        }, {
          start: {
            line: 399,
            column: 53
          },
          end: {
            line: 399,
            column: 55
          }
        }],
        line: 399
      },
      "35": {
        loc: {
          start: {
            line: 400,
            column: 35
          },
          end: {
            line: 400,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 400,
            column: 56
          },
          end: {
            line: 400,
            column: 57
          }
        }, {
          start: {
            line: 400,
            column: 60
          },
          end: {
            line: 400,
            column: 62
          }
        }],
        line: 400
      },
      "36": {
        loc: {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "37": {
        loc: {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 49
          }
        }, {
          start: {
            line: 401,
            column: 53
          },
          end: {
            line: 401,
            column: 120
          }
        }],
        line: 401
      },
      "38": {
        loc: {
          start: {
            line: 404,
            column: 26
          },
          end: {
            line: 404,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 58
          },
          end: {
            line: 404,
            column: 64
          }
        }, {
          start: {
            line: 404,
            column: 67
          },
          end: {
            line: 404,
            column: 75
          }
        }],
        line: 404
      },
      "39": {
        loc: {
          start: {
            line: 405,
            column: 66
          },
          end: {
            line: 405,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 405,
            column: 84
          },
          end: {
            line: 405,
            column: 88
          }
        }, {
          start: {
            line: 405,
            column: 91
          },
          end: {
            line: 405,
            column: 97
          }
        }],
        line: 405
      },
      "40": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "41": {
        loc: {
          start: {
            line: 417,
            column: 26
          },
          end: {
            line: 417,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 417,
            column: 58
          },
          end: {
            line: 417,
            column: 64
          }
        }, {
          start: {
            line: 417,
            column: 67
          },
          end: {
            line: 417,
            column: 75
          }
        }],
        line: 417
      },
      "42": {
        loc: {
          start: {
            line: 419,
            column: 24
          },
          end: {
            line: 419,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 419,
            column: 45
          },
          end: {
            line: 419,
            column: 83
          }
        }, {
          start: {
            line: 419,
            column: 86
          },
          end: {
            line: 419,
            column: 133
          }
        }],
        line: 419
      },
      "43": {
        loc: {
          start: {
            line: 420,
            column: 32
          },
          end: {
            line: 420,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 53
          },
          end: {
            line: 420,
            column: 86
          }
        }, {
          start: {
            line: 420,
            column: 89
          },
          end: {
            line: 420,
            column: 129
          }
        }],
        line: 420
      },
      "44": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "45": {
        loc: {
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "46": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "47": {
        loc: {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 465,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 465,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "48": {
        loc: {
          start: {
            line: 454,
            column: 33
          },
          end: {
            line: 454,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 454,
            column: 98
          },
          end: {
            line: 454,
            column: 104
          }
        }, {
          start: {
            line: 454,
            column: 107
          },
          end: {
            line: 454,
            column: 115
          }
        }],
        line: 454
      },
      "49": {
        loc: {
          start: {
            line: 459,
            column: 28
          },
          end: {
            line: 459,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 459,
            column: 41
          },
          end: {
            line: 459,
            column: 83
          }
        }, {
          start: {
            line: 459,
            column: 86
          },
          end: {
            line: 459,
            column: 136
          }
        }],
        line: 459
      },
      "50": {
        loc: {
          start: {
            line: 460,
            column: 36
          },
          end: {
            line: 460,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 460,
            column: 49
          },
          end: {
            line: 460,
            column: 90
          }
        }, {
          start: {
            line: 460,
            column: 93
          },
          end: {
            line: 460,
            column: 137
          }
        }],
        line: 460
      },
      "51": {
        loc: {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 507,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 507,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 501
      },
      "52": {
        loc: {
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 550,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 550,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "53": {
        loc: {
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 562,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 551,
            column: 8
          },
          end: {
            line: 562,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 551
      },
      "54": {
        loc: {
          start: {
            line: 569,
            column: 8
          },
          end: {
            line: 570,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 8
          },
          end: {
            line: 570,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 569
      },
      "55": {
        loc: {
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 590,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 590,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "56": {
        loc: {
          start: {
            line: 593,
            column: 8
          },
          end: {
            line: 595,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 593,
            column: 8
          },
          end: {
            line: 595,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 593
      },
      "57": {
        loc: {
          start: {
            line: 597,
            column: 8
          },
          end: {
            line: 600,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 8
          },
          end: {
            line: 600,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "58": {
        loc: {
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 613,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 8
          },
          end: {
            line: 613,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "59": {
        loc: {
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 611,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 611,
            column: 12
          },
          end: {
            line: 611,
            column: 21
          }
        }, {
          start: {
            line: 611,
            column: 25
          },
          end: {
            line: 611,
            column: 96
          }
        }],
        line: 611
      },
      "60": {
        loc: {
          start: {
            line: 616,
            column: 37
          },
          end: {
            line: 616,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 616,
            column: 37
          },
          end: {
            line: 616,
            column: 59
          }
        }, {
          start: {
            line: 616,
            column: 63
          },
          end: {
            line: 616,
            column: 105
          }
        }],
        line: 616
      },
      "61": {
        loc: {
          start: {
            line: 618,
            column: 8
          },
          end: {
            line: 620,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 618,
            column: 8
          },
          end: {
            line: 620,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 618
      },
      "62": {
        loc: {
          start: {
            line: 622,
            column: 56
          },
          end: {
            line: 622,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 622,
            column: 56
          },
          end: {
            line: 622,
            column: 77
          }
        }, {
          start: {
            line: 622,
            column: 81
          },
          end: {
            line: 622,
            column: 106
          }
        }],
        line: 622
      },
      "63": {
        loc: {
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 631,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 631,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 623
      },
      "64": {
        loc: {
          start: {
            line: 638,
            column: 8
          },
          end: {
            line: 640,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 638,
            column: 8
          },
          end: {
            line: 640,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 638
      },
      "65": {
        loc: {
          start: {
            line: 647,
            column: 8
          },
          end: {
            line: 649,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 647,
            column: 8
          },
          end: {
            line: 649,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 647
      },
      "66": {
        loc: {
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 652,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 652,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\anomaly-detector.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\anomaly-detector.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * ANOMALY DETECTOR - AI-POWERED MARKET ANOMALY DETECTION\r\n * =============================================================================\r\n * \r\n * This module implements sophisticated anomaly detection for cryptocurrency\r\n * markets using AI and statistical methods. It identifies unusual patterns,\r\n * market irregularities, and potential trading opportunities or risks.\r\n * \r\n * Key Features:\r\n * - Real-time anomaly detection using multiple algorithms\r\n * - Pattern recognition for unusual market behavior\r\n * - Volume and price anomaly identification\r\n * - Sentiment-price divergence detection\r\n * - Liquidity and order book anomalies\r\n * - Alert generation and risk assessment\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { LLMEngine } from './llm-engine';\r\nimport type { MarketDataInput, SentimentDataInput, MarketAnomaly } from './market-analyzer';\r\n\r\n/**\r\n * Interface for anomaly detection configuration\r\n */\r\ninterface AnomalyDetectionConfig {\r\n  // Sensitivity settings (0-100)\r\n  volumeAnomalySensitivity: number;\r\n  priceAnomalySensitivity: number;\r\n  sentimentAnomalySensitivity: number;\r\n  patternAnomalySensitivity: number;\r\n  \r\n  // Thresholds\r\n  volumeSpikeThreshold: number; // Multiple of average volume\r\n  priceGapThreshold: number; // Percentage gap\r\n  sentimentDivergenceThreshold: number; // Sentiment vs price divergence\r\n  \r\n  // Time windows\r\n  shortTermWindow: number; // Minutes\r\n  mediumTermWindow: number; // Hours\r\n  longTermWindow: number; // Days\r\n  \r\n  // Alert settings\r\n  enableRealTimeAlerts: boolean;\r\n  alertCooldownPeriod: number; // Milliseconds\r\n  maxAlertsPerHour: number;\r\n}\r\n\r\n/**\r\n * Interface for statistical baseline data\r\n */\r\ninterface StatisticalBaseline {\r\n  symbol: string;\r\n  timeframe: string;\r\n  \r\n  // Price statistics\r\n  averagePrice: number;\r\n  priceStdDev: number;\r\n  priceRange: { min: number; max: number };\r\n  \r\n  // Volume statistics\r\n  averageVolume: number;\r\n  volumeStdDev: number;\r\n  volumeRange: { min: number; max: number };\r\n  \r\n  // Volatility statistics\r\n  averageVolatility: number;\r\n  volatilityStdDev: number;\r\n  \r\n  // Pattern frequencies\r\n  patternFrequencies: Map<string, number>;\r\n  \r\n  lastUpdated: Date;\r\n  sampleSize: number;\r\n}\r\n\r\n/**\r\n * Interface for anomaly detection result\r\n */\r\ninterface AnomalyDetectionResult {\r\n  anomalies: MarketAnomaly[];\r\n  overallRiskScore: number; // 0-100\r\n  confidenceScore: number; // 0-100\r\n  detectionTime: number; // milliseconds\r\n  algorithmsUsed: string[];\r\n  baseline: StatisticalBaseline;\r\n}\r\n\r\n/**\r\n * Interface for pattern anomaly\r\n */\r\ninterface PatternAnomaly {\r\n  patternType: string;\r\n  description: string;\r\n  frequency: number; // How often this pattern typically occurs\r\n  currentOccurrence: number; // Current frequency\r\n  deviationScore: number; // How much it deviates from normal\r\n  significance: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n}\r\n\r\n/**\r\n * Interface for order book anomaly (for future implementation)\r\n */\r\ninterface OrderBookAnomaly {\r\n  type: 'BID_ASK_SPREAD' | 'DEPTH_IMBALANCE' | 'LARGE_ORDER' | 'SPOOFING';\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  description: string;\r\n  impact: string;\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Anomaly Detector class for market irregularity detection\r\n */\r\nexport class AnomalyDetector extends EventEmitter {\r\n  private llmEngine: LLMEngine;\r\n  private config: AnomalyDetectionConfig;\r\n  private baselines: Map<string, StatisticalBaseline> = new Map();\r\n  private detectionHistory: AnomalyDetectionResult[] = [];\r\n  private alertHistory: Map<string, Date> = new Map(); // For cooldown tracking\r\n  private isInitialized: boolean = false;\r\n  private maxHistorySize: number = 1000;\r\n\r\n  // Statistical constants\r\n  private readonly STATISTICAL_CONSTANTS = {\r\n    zScoreThreshold: 2.5, // 2.5 standard deviations\r\n    outlierThreshold: 3.0, // 3 standard deviations for outliers\r\n    minSampleSize: 100, // Minimum samples for reliable statistics\r\n    baselineUpdateFrequency: 3600000 // 1 hour in milliseconds\r\n  };\r\n\r\n  constructor(llmEngine: LLMEngine, config?: Partial<AnomalyDetectionConfig>) {\r\n    super();\r\n    this.llmEngine = llmEngine;\r\n    \r\n    // Default configuration\r\n    this.config = {\r\n      volumeAnomalySensitivity: 75,\r\n      priceAnomalySensitivity: 80,\r\n      sentimentAnomalySensitivity: 70,\r\n      patternAnomalySensitivity: 65,\r\n      \r\n      volumeSpikeThreshold: 3.0,\r\n      priceGapThreshold: 5.0,\r\n      sentimentDivergenceThreshold: 50,\r\n      \r\n      shortTermWindow: 15,\r\n      mediumTermWindow: 4,\r\n      longTermWindow: 1,\r\n      \r\n      enableRealTimeAlerts: true,\r\n      alertCooldownPeriod: 300000, // 5 minutes\r\n      maxAlertsPerHour: 10,\r\n      \r\n      ...config\r\n    };\r\n\r\n    logger.info('\uD83D\uDD0D Anomaly Detector initialized');\r\n  }\r\n\r\n  /**\r\n   * Initialize the anomaly detector\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Initializing Anomaly Detector...');\r\n\r\n      // Verify LLM engine is ready\r\n      if (!this.llmEngine.isReady()) {\r\n        throw new Error('LLM Engine is not ready');\r\n      }\r\n\r\n      // Initialize baselines for common symbols\r\n      await this.initializeBaselines(['BTC', 'ETH']);\r\n\r\n      this.isInitialized = true;\r\n      logger.info('\u2705 Anomaly Detector initialized successfully');\r\n\r\n      this.emit('initialized');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize Anomaly Detector:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize statistical baselines for symbols\r\n   */\r\n  private async initializeBaselines(symbols: string[]): Promise<void> {\r\n    for (const symbol of symbols) {\r\n      const baseline: StatisticalBaseline = {\r\n        symbol,\r\n        timeframe: '1h',\r\n        averagePrice: 0,\r\n        priceStdDev: 0,\r\n        priceRange: { min: 0, max: 0 },\r\n        averageVolume: 0,\r\n        volumeStdDev: 0,\r\n        volumeRange: { min: 0, max: 0 },\r\n        averageVolatility: 0,\r\n        volatilityStdDev: 0,\r\n        patternFrequencies: new Map(),\r\n        lastUpdated: new Date(),\r\n        sampleSize: 0\r\n      };\r\n\r\n      this.baselines.set(symbol, baseline);\r\n      logger.info(`\uD83D\uDCCA Initialized baseline for ${symbol}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detect anomalies in market data\r\n   */\r\n  public async detectAnomalies(\r\n    marketData: MarketDataInput,\r\n    sentimentData?: SentimentDataInput\r\n  ): Promise<AnomalyDetectionResult> {\r\n    try {\r\n      if (!this.isInitialized) {\r\n        throw new Error('Anomaly Detector not initialized');\r\n      }\r\n\r\n      const startTime = Date.now();\r\n      logger.info(`\uD83D\uDD0D Detecting anomalies for ${marketData.symbol}...`);\r\n\r\n      // Get or create baseline for symbol\r\n      let baseline = this.baselines.get(marketData.symbol);\r\n      if (!baseline) {\r\n        await this.initializeBaselines([marketData.symbol]);\r\n        baseline = this.baselines.get(marketData.symbol)!;\r\n      }\r\n\r\n      // Update baseline with new data\r\n      await this.updateBaseline(baseline, marketData);\r\n\r\n      // Run different anomaly detection algorithms\r\n      const [\r\n        volumeAnomalies,\r\n        priceAnomalies,\r\n        patternAnomalies,\r\n        sentimentAnomalies,\r\n        volatilityAnomalies\r\n      ] = await Promise.all([\r\n        this.detectVolumeAnomalies(marketData, baseline),\r\n        this.detectPriceAnomalies(marketData, baseline),\r\n        this.detectPatternAnomalies(marketData, baseline),\r\n        this.detectSentimentAnomalies(marketData, sentimentData, baseline),\r\n        this.detectVolatilityAnomalies(marketData, baseline)\r\n      ]);\r\n\r\n      // Combine all anomalies\r\n      const allAnomalies = [\r\n        ...volumeAnomalies,\r\n        ...priceAnomalies,\r\n        ...patternAnomalies,\r\n        ...sentimentAnomalies,\r\n        ...volatilityAnomalies\r\n      ];\r\n\r\n      // Use LLM for additional analysis if anomalies found\r\n      if (allAnomalies.length > 0) {\r\n        const llmAnomalies = await this.getLLMAnomalyAnalysis(marketData, allAnomalies, sentimentData);\r\n        allAnomalies.push(...llmAnomalies);\r\n      }\r\n\r\n      // Calculate overall risk and confidence scores\r\n      const overallRiskScore = this.calculateOverallRiskScore(allAnomalies);\r\n      const confidenceScore = this.calculateConfidenceScore(baseline, allAnomalies);\r\n\r\n      const result: AnomalyDetectionResult = {\r\n        anomalies: allAnomalies,\r\n        overallRiskScore,\r\n        confidenceScore,\r\n        detectionTime: Date.now() - startTime,\r\n        algorithmsUsed: ['volume', 'price', 'pattern', 'sentiment', 'volatility', 'llm'],\r\n        baseline\r\n      };\r\n\r\n      // Add to history\r\n      this.addToHistory(result);\r\n\r\n      // Generate alerts if enabled\r\n      if (this.config.enableRealTimeAlerts && allAnomalies.length > 0) {\r\n        await this.generateAlerts(allAnomalies, marketData.symbol);\r\n      }\r\n\r\n      logger.info(`\u2705 Anomaly detection completed for ${marketData.symbol} - Found ${allAnomalies.length} anomalies`);\r\n      \r\n      this.emit('anomaliesDetected', result);\r\n\r\n      return result;\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error in anomaly detection:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update statistical baseline with new market data\r\n   */\r\n  private async updateBaseline(baseline: StatisticalBaseline, marketData: MarketDataInput): Promise<void> {\r\n    const { price, volume, high, low } = marketData;\r\n    const volatility = ((high - low) / price) * 100;\r\n\r\n    // Update sample size\r\n    baseline.sampleSize++;\r\n\r\n    // Update price statistics (running average and std dev)\r\n    if (baseline.sampleSize === 1) {\r\n      baseline.averagePrice = price;\r\n      baseline.priceRange = { min: price, max: price };\r\n    } else {\r\n      // Running average\r\n      const oldAvg = baseline.averagePrice;\r\n      baseline.averagePrice = oldAvg + (price - oldAvg) / baseline.sampleSize;\r\n      \r\n      // Running standard deviation (Welford's algorithm)\r\n      baseline.priceStdDev = Math.sqrt(\r\n        ((baseline.sampleSize - 2) * Math.pow(baseline.priceStdDev, 2) + \r\n         (price - oldAvg) * (price - baseline.averagePrice)) / (baseline.sampleSize - 1)\r\n      );\r\n      \r\n      // Update range\r\n      baseline.priceRange.min = Math.min(baseline.priceRange.min, price);\r\n      baseline.priceRange.max = Math.max(baseline.priceRange.max, price);\r\n    }\r\n\r\n    // Update volume statistics\r\n    if (baseline.sampleSize === 1) {\r\n      baseline.averageVolume = volume;\r\n      baseline.volumeRange = { min: volume, max: volume };\r\n    } else {\r\n      const oldVolumeAvg = baseline.averageVolume;\r\n      baseline.averageVolume = oldVolumeAvg + (volume - oldVolumeAvg) / baseline.sampleSize;\r\n      \r\n      baseline.volumeStdDev = Math.sqrt(\r\n        ((baseline.sampleSize - 2) * Math.pow(baseline.volumeStdDev, 2) + \r\n         (volume - oldVolumeAvg) * (volume - baseline.averageVolume)) / (baseline.sampleSize - 1)\r\n      );\r\n      \r\n      baseline.volumeRange.min = Math.min(baseline.volumeRange.min, volume);\r\n      baseline.volumeRange.max = Math.max(baseline.volumeRange.max, volume);\r\n    }\r\n\r\n    // Update volatility statistics\r\n    if (baseline.sampleSize === 1) {\r\n      baseline.averageVolatility = volatility;\r\n    } else {\r\n      const oldVolatilityAvg = baseline.averageVolatility;\r\n      baseline.averageVolatility = oldVolatilityAvg + (volatility - oldVolatilityAvg) / baseline.sampleSize;\r\n      \r\n      baseline.volatilityStdDev = Math.sqrt(\r\n        ((baseline.sampleSize - 2) * Math.pow(baseline.volatilityStdDev, 2) + \r\n         (volatility - oldVolatilityAvg) * (volatility - baseline.averageVolatility)) / (baseline.sampleSize - 1)\r\n      );\r\n    }\r\n\r\n    baseline.lastUpdated = new Date();\r\n  }\r\n\r\n  /**\r\n   * Detect volume anomalies\r\n   */\r\n  private async detectVolumeAnomalies(\r\n    marketData: MarketDataInput,\r\n    baseline: StatisticalBaseline\r\n  ): Promise<MarketAnomaly[]> {\r\n    const anomalies: MarketAnomaly[] = [];\r\n    \r\n    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {\r\n      return anomalies; // Not enough data for reliable detection\r\n    }\r\n\r\n    const { volume } = marketData;\r\n    const { averageVolume, volumeStdDev } = baseline;\r\n\r\n    // Z-score calculation\r\n    const zScore = volumeStdDev > 0 ? (volume - averageVolume) / volumeStdDev : 0;\r\n\r\n    // Volume spike detection\r\n    if (Math.abs(zScore) > this.STATISTICAL_CONSTANTS.zScoreThreshold) {\r\n      const severity = Math.abs(zScore) > this.STATISTICAL_CONSTANTS.outlierThreshold ? 'HIGH' : 'MEDIUM';\r\n      \r\n      anomalies.push({\r\n        type: 'VOLUME_SPIKE',\r\n        severity: severity as MarketAnomaly['severity'],\r\n        description: `Volume ${zScore > 0 ? 'spike' : 'drop'} detected: ${(volume / averageVolume).toFixed(2)}x average`,\r\n        impact: zScore > 0 ? 'Potential breakout or significant news' : 'Potential lack of interest or liquidity issues',\r\n        recommendation: zScore > 0 ? 'Monitor for price movement confirmation' : 'Check for market conditions or news',\r\n        confidence: Math.min(95, 60 + Math.abs(zScore) * 10),\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    // Volume pattern anomalies\r\n    const volumeRatio = volume / averageVolume;\r\n    if (volumeRatio > this.config.volumeSpikeThreshold) {\r\n      anomalies.push({\r\n        type: 'VOLUME_SPIKE',\r\n        severity: volumeRatio > 5 ? 'CRITICAL' : 'HIGH',\r\n        description: `Extreme volume spike: ${volumeRatio.toFixed(1)}x normal volume`,\r\n        impact: 'Major market event or institutional activity',\r\n        recommendation: 'Immediate attention required - check news and order books',\r\n        confidence: 90,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Detect price anomalies\r\n   */\r\n  private async detectPriceAnomalies(\r\n    marketData: MarketDataInput,\r\n    baseline: StatisticalBaseline\r\n  ): Promise<MarketAnomaly[]> {\r\n    const anomalies: MarketAnomaly[] = [];\r\n    \r\n    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {\r\n      return anomalies;\r\n    }\r\n\r\n    const { price, open, high, low } = marketData;\r\n    const { averagePrice, priceStdDev } = baseline;\r\n\r\n    // Price gap detection\r\n    const gapPercentage = Math.abs((open - price) / price) * 100;\r\n    if (gapPercentage > this.config.priceGapThreshold) {\r\n      anomalies.push({\r\n        type: 'PRICE_GAP',\r\n        severity: gapPercentage > 10 ? 'HIGH' : 'MEDIUM',\r\n        description: `Price gap of ${gapPercentage.toFixed(2)}% detected`,\r\n        impact: 'Potential sentiment shift or news impact',\r\n        recommendation: 'Assess gap fill probability and market sentiment',\r\n        confidence: 80,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    // Price deviation from baseline\r\n    if (priceStdDev > 0) {\r\n      const zScore = (price - averagePrice) / priceStdDev;\r\n      \r\n      if (Math.abs(zScore) > this.STATISTICAL_CONSTANTS.outlierThreshold) {\r\n        anomalies.push({\r\n          type: 'UNUSUAL_PATTERN',\r\n          severity: Math.abs(zScore) > 4 ? 'CRITICAL' : 'HIGH',\r\n          description: `Price deviation: ${Math.abs(zScore).toFixed(2)} standard deviations from average`,\r\n          impact: 'Significant price movement outside normal range',\r\n          recommendation: 'Investigate underlying causes and market conditions',\r\n          confidence: 85,\r\n          timestamp: new Date(),\r\n          affectedSymbols: [marketData.symbol]\r\n        });\r\n      }\r\n    }\r\n\r\n    // Intraday volatility anomaly\r\n    const intradayVolatility = ((high - low) / open) * 100;\r\n    if (intradayVolatility > baseline.averageVolatility * 2) {\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: intradayVolatility > baseline.averageVolatility * 3 ? 'HIGH' : 'MEDIUM',\r\n        description: `Unusual intraday volatility: ${intradayVolatility.toFixed(2)}%`,\r\n        impact: 'Increased trading risk and potential opportunities',\r\n        recommendation: 'Adjust position sizes and risk management',\r\n        confidence: 75,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Detect pattern anomalies using statistical analysis\r\n   */\r\n  private async detectPatternAnomalies(\r\n    marketData: MarketDataInput,\r\n    baseline: StatisticalBaseline\r\n  ): Promise<MarketAnomaly[]> {\r\n    const anomalies: MarketAnomaly[] = [];\r\n    \r\n    // Technical indicator anomalies\r\n    const { technicalIndicators } = marketData;\r\n    \r\n    // RSI extreme values\r\n    if (technicalIndicators.rsi > 90 || technicalIndicators.rsi < 10) {\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: 'HIGH',\r\n        description: `Extreme RSI value: ${technicalIndicators.rsi.toFixed(2)}`,\r\n        impact: technicalIndicators.rsi > 90 ? 'Severely overbought conditions' : 'Severely oversold conditions',\r\n        recommendation: technicalIndicators.rsi > 90 ? 'Consider taking profits or shorting' : 'Consider buying opportunity',\r\n        confidence: 85,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    // MACD divergence anomaly\r\n    const macdDivergence = Math.abs(technicalIndicators.macd.macd - technicalIndicators.macd.signal);\r\n    if (macdDivergence > 0.01) { // Threshold for significant divergence\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: 'MEDIUM',\r\n        description: `Significant MACD divergence detected: ${macdDivergence.toFixed(4)}`,\r\n        impact: 'Potential trend change or momentum shift',\r\n        recommendation: 'Monitor for trend confirmation or reversal',\r\n        confidence: 70,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    // Bollinger Band squeeze/expansion\r\n    const bbWidth = (technicalIndicators.bollinger.upper - technicalIndicators.bollinger.lower) / technicalIndicators.bollinger.middle;\r\n    if (bbWidth < 0.02) { // Very tight bands\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: 'MEDIUM',\r\n        description: 'Bollinger Band squeeze detected - low volatility',\r\n        impact: 'Potential for significant price movement',\r\n        recommendation: 'Prepare for volatility expansion and breakout',\r\n        confidence: 75,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    } else if (bbWidth > 0.15) { // Very wide bands\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: 'MEDIUM',\r\n        description: 'Bollinger Band expansion detected - high volatility',\r\n        impact: 'Increased trading risk and opportunities',\r\n        recommendation: 'Use appropriate position sizing for high volatility',\r\n        confidence: 75,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Detect sentiment anomalies and divergences\r\n   */\r\n  private async detectSentimentAnomalies(\r\n    marketData: MarketDataInput,\r\n    sentimentData: SentimentDataInput | undefined,\r\n    baseline: StatisticalBaseline\r\n  ): Promise<MarketAnomaly[]> {\r\n    const anomalies: MarketAnomaly[] = [];\r\n    \r\n    if (!sentimentData) {\r\n      return anomalies;\r\n    }\r\n\r\n    // Price-sentiment divergence\r\n    const priceChange = ((marketData.close - marketData.open) / marketData.open) * 100;\r\n    const sentimentScore = sentimentData.overall;\r\n    \r\n    // Check for divergence\r\n    const priceDirection = priceChange > 0 ? 1 : -1;\r\n    const sentimentDirection = sentimentScore > 0 ? 1 : -1;\r\n    \r\n    if (priceDirection !== sentimentDirection && Math.abs(sentimentScore) > this.config.sentimentDivergenceThreshold) {\r\n      anomalies.push({\r\n        type: 'SENTIMENT_DIVERGENCE',\r\n        severity: Math.abs(sentimentScore) > 70 ? 'HIGH' : 'MEDIUM',\r\n        description: `Price-sentiment divergence: Price ${priceChange > 0 ? 'up' : 'down'} ${Math.abs(priceChange).toFixed(2)}%, sentiment ${sentimentScore.toFixed(0)}`,\r\n        impact: 'Potential reversal or sentiment correction incoming',\r\n        recommendation: 'Monitor for trend continuation or reversal signals',\r\n        confidence: Math.min(90, 50 + Math.abs(sentimentScore) * 0.5),\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    // Extreme sentiment levels\r\n    if (Math.abs(sentimentScore) > 80) {\r\n      anomalies.push({\r\n        type: 'SENTIMENT_DIVERGENCE',\r\n        severity: Math.abs(sentimentScore) > 90 ? 'HIGH' : 'MEDIUM',\r\n        description: `Extreme sentiment detected: ${sentimentScore.toFixed(0)}`,\r\n        impact: sentimentScore > 0 ? 'Potential euphoria and reversal risk' : 'Potential capitulation and bounce opportunity',\r\n        recommendation: sentimentScore > 0 ? 'Consider contrarian positioning' : 'Look for oversold bounce opportunities',\r\n        confidence: 80,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    // Sentiment confidence anomaly\r\n    if (sentimentData.confidence < 30) {\r\n      anomalies.push({\r\n        type: 'SENTIMENT_DIVERGENCE',\r\n        severity: 'LOW',\r\n        description: `Low sentiment confidence: ${sentimentData.confidence}%`,\r\n        impact: 'Unreliable sentiment data may affect analysis quality',\r\n        recommendation: 'Rely more on technical analysis until sentiment clarity improves',\r\n        confidence: 60,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [marketData.symbol]\r\n      });\r\n    }\r\n\r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Detect volatility anomalies\r\n   */\r\n  private async detectVolatilityAnomalies(\r\n    marketData: MarketDataInput,\r\n    baseline: StatisticalBaseline\r\n  ): Promise<MarketAnomaly[]> {\r\n    const anomalies: MarketAnomaly[] = [];\r\n    \r\n    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {\r\n      return anomalies;\r\n    }\r\n\r\n    const currentVolatility = ((marketData.high - marketData.low) / marketData.close) * 100;\r\n    const { averageVolatility, volatilityStdDev } = baseline;\r\n\r\n    if (volatilityStdDev > 0) {\r\n      const zScore = (currentVolatility - averageVolatility) / volatilityStdDev;\r\n      \r\n      if (Math.abs(zScore) > this.STATISTICAL_CONSTANTS.zScoreThreshold) {\r\n        const severity = Math.abs(zScore) > this.STATISTICAL_CONSTANTS.outlierThreshold ? 'HIGH' : 'MEDIUM';\r\n        \r\n        anomalies.push({\r\n          type: 'UNUSUAL_PATTERN',\r\n          severity: severity as MarketAnomaly['severity'],\r\n          description: `Volatility anomaly: ${currentVolatility.toFixed(2)}% (${Math.abs(zScore).toFixed(2)} std dev from average)`,\r\n          impact: zScore > 0 ? 'Increased risk and trading opportunities' : 'Unusually low volatility may precede major moves',\r\n          recommendation: zScore > 0 ? 'Reduce position sizes and tighten stops' : 'Prepare for potential volatility expansion',\r\n          confidence: Math.min(90, 60 + Math.abs(zScore) * 10),\r\n          timestamp: new Date(),\r\n          affectedSymbols: [marketData.symbol]\r\n        });\r\n      }\r\n    }\r\n\r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Get LLM analysis of detected anomalies\r\n   */\r\n  private async getLLMAnomalyAnalysis(\r\n    marketData: MarketDataInput,\r\n    anomalies: MarketAnomaly[],\r\n    sentimentData?: SentimentDataInput\r\n  ): Promise<MarketAnomaly[]> {\r\n    try {\r\n      // Build prompt for LLM analysis\r\n      const prompt = this.buildAnomalyAnalysisPrompt(marketData, anomalies, sentimentData);\r\n      \r\n      // Get LLM analysis (mock implementation)\r\n      const llmResponse = await this.getLLMAnomalyResponse(prompt);\r\n      \r\n      // Parse LLM response for additional anomalies\r\n      const llmAnomalies = this.parseLLMAnomalyResponse(llmResponse, marketData.symbol);\r\n      \r\n      return llmAnomalies;\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error in LLM anomaly analysis:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build prompt for LLM anomaly analysis\r\n   */\r\n  private buildAnomalyAnalysisPrompt(\r\n    marketData: MarketDataInput,\r\n    anomalies: MarketAnomaly[],\r\n    sentimentData?: SentimentDataInput\r\n  ): string {\r\n    let prompt = `Analyze the following market anomalies for ${marketData.symbol}:\r\n\r\nDETECTED ANOMALIES:\r\n${anomalies.map((anomaly, index) => \r\n  `${index + 1}. ${anomaly.type}: ${anomaly.description} (${anomaly.severity} severity)`\r\n).join('\\n')}\r\n\r\nMARKET DATA:\r\n- Price: $${marketData.price.toFixed(2)}\r\n- Volume: ${marketData.volume.toLocaleString()}\r\n- RSI: ${marketData.technicalIndicators.rsi.toFixed(2)}\r\n- MACD: ${marketData.technicalIndicators.macd.macd.toFixed(4)}`;\r\n\r\n    if (sentimentData) {\r\n      prompt += `\\n\\nSENTIMENT DATA:\r\n- Overall Sentiment: ${sentimentData.overall}\r\n- Twitter: ${sentimentData.twitter.score}\r\n- Reddit: ${sentimentData.reddit.score}\r\n- News: ${sentimentData.news.score}`;\r\n    }\r\n\r\n    prompt += `\\n\\nPlease identify any additional anomalies or patterns that might have been missed, and provide insights on:\r\n1. Potential market implications\r\n2. Risk assessment\r\n3. Trading recommendations\r\n4. Any interconnected anomalies that might amplify risks`;\r\n\r\n    return prompt;\r\n  }\r\n\r\n  /**\r\n   * Get LLM response for anomaly analysis (mock implementation)\r\n   */\r\n  private async getLLMAnomalyResponse(prompt: string): Promise<string> {\r\n    // Mock LLM response\r\n    return `Additional analysis reveals:\r\n\r\n1. The combination of volume spike and sentiment divergence suggests institutional activity that may not be reflected in public sentiment yet.\r\n\r\n2. The RSI extreme reading combined with price gap indicates potential exhaustion move that could lead to reversal.\r\n\r\n3. Cross-market correlation anomaly detected - this asset is moving independently of broader market trends, suggesting asset-specific news or events.\r\n\r\nRisk Assessment: ELEVATED - Multiple anomalies occurring simultaneously increases the probability of significant price movement.\r\n\r\nRecommendation: Reduce position sizes and implement tighter risk management until anomalies resolve.`;\r\n  }\r\n\r\n  /**\r\n   * Parse LLM response for additional anomalies\r\n   */\r\n  private parseLLMAnomalyResponse(llmResponse: string, symbol: string): MarketAnomaly[] {\r\n    const anomalies: MarketAnomaly[] = [];\r\n    \r\n    // In production, this would use sophisticated NLP parsing\r\n    // For now, create structured anomalies based on mock response\r\n    \r\n    if (llmResponse.includes('institutional activity')) {\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: 'MEDIUM',\r\n        description: 'Potential institutional activity detected by AI analysis',\r\n        impact: 'Large player involvement may drive significant price movements',\r\n        recommendation: 'Monitor order flow and volume patterns closely',\r\n        confidence: 75,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [symbol]\r\n      });\r\n    }\r\n    \r\n    if (llmResponse.includes('Cross-market correlation anomaly')) {\r\n      anomalies.push({\r\n        type: 'UNUSUAL_PATTERN',\r\n        severity: 'MEDIUM',\r\n        description: 'Asset moving independently of broader market trends',\r\n        impact: 'Asset-specific factors may be driving price action',\r\n        recommendation: 'Research asset-specific news and developments',\r\n        confidence: 70,\r\n        timestamp: new Date(),\r\n        affectedSymbols: [symbol]\r\n      });\r\n    }\r\n    \r\n    return anomalies;\r\n  }\r\n\r\n  /**\r\n   * Calculate overall risk score from anomalies\r\n   */\r\n  private calculateOverallRiskScore(anomalies: MarketAnomaly[]): number {\r\n    if (anomalies.length === 0) return 0;\r\n    \r\n    let totalRisk = 0;\r\n    const severityWeights = { LOW: 1, MEDIUM: 2, HIGH: 3, CRITICAL: 4 };\r\n    \r\n    for (const anomaly of anomalies) {\r\n      const weight = severityWeights[anomaly.severity];\r\n      const confidenceMultiplier = anomaly.confidence / 100;\r\n      totalRisk += weight * confidenceMultiplier;\r\n    }\r\n    \r\n    // Normalize to 0-100 scale\r\n    const maxPossibleRisk = anomalies.length * 4; // All critical with 100% confidence\r\n    return Math.min(100, (totalRisk / maxPossibleRisk) * 100);\r\n  }\r\n\r\n  /**\r\n   * Calculate confidence score for detection\r\n   */\r\n  private calculateConfidenceScore(baseline: StatisticalBaseline, anomalies: MarketAnomaly[]): number {\r\n    let confidence = 100;\r\n    \r\n    // Reduce confidence if baseline has insufficient data\r\n    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {\r\n      confidence -= 30;\r\n    }\r\n    \r\n    // Reduce confidence if data is stale\r\n    const dataAge = Date.now() - baseline.lastUpdated.getTime();\r\n    if (dataAge > this.STATISTICAL_CONSTANTS.baselineUpdateFrequency) {\r\n      confidence -= 20;\r\n    }\r\n    \r\n    // Average confidence of individual anomalies\r\n    if (anomalies.length > 0) {\r\n      const avgAnomalyConfidence = anomalies.reduce((sum, a) => sum + a.confidence, 0) / anomalies.length;\r\n      confidence = (confidence + avgAnomalyConfidence) / 2;\r\n    }\r\n    \r\n    return Math.max(0, Math.round(confidence));\r\n  }\r\n\r\n  /**\r\n   * Generate alerts for detected anomalies\r\n   */\r\n  private async generateAlerts(anomalies: MarketAnomaly[], symbol: string): Promise<void> {\r\n    const now = new Date();\r\n    const alertKey = `${symbol}_${now.getHours()}`;\r\n    \r\n    // Check cooldown period\r\n    const lastAlert = this.alertHistory.get(alertKey);\r\n    if (lastAlert && (now.getTime() - lastAlert.getTime()) < this.config.alertCooldownPeriod) {\r\n      return; // Still in cooldown\r\n    }\r\n    \r\n    // Check hourly alert limit\r\n    const hourlyAlerts = Array.from(this.alertHistory.entries())\r\n      .filter(([key, time]) => key.startsWith(symbol) && (now.getTime() - time.getTime()) < 3600000)\r\n      .length;\r\n    \r\n    if (hourlyAlerts >= this.config.maxAlertsPerHour) {\r\n      return; // Exceeded hourly limit\r\n    }\r\n    \r\n    // Generate alerts for high and critical severity anomalies\r\n    const criticalAnomalies = anomalies.filter(a => a.severity === 'HIGH' || a.severity === 'CRITICAL');\r\n    \r\n    if (criticalAnomalies.length > 0) {\r\n      this.emit('criticalAnomalies', {\r\n        symbol,\r\n        anomalies: criticalAnomalies,\r\n        timestamp: now\r\n      });\r\n      \r\n      this.alertHistory.set(alertKey, now);\r\n      \r\n      logger.warn(`\uD83D\uDEA8 Critical anomalies detected for ${symbol}:`, criticalAnomalies.map(a => a.description));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add detection result to history\r\n   */\r\n  private addToHistory(result: AnomalyDetectionResult): void {\r\n    this.detectionHistory.push(result);\r\n    \r\n    if (this.detectionHistory.length > this.maxHistorySize) {\r\n      this.detectionHistory = this.detectionHistory.slice(-this.maxHistorySize);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get detection history\r\n   */\r\n  public getDetectionHistory(symbol?: string, limit?: number): AnomalyDetectionResult[] {\r\n    let history = this.detectionHistory;\r\n    \r\n    if (symbol) {\r\n      history = history.filter(result => \r\n        result.anomalies.some(anomaly => anomaly.affectedSymbols.includes(symbol))\r\n      );\r\n    }\r\n    \r\n    if (limit) {\r\n      history = history.slice(-limit);\r\n    }\r\n    \r\n    return history;\r\n  }\r\n\r\n  /**\r\n   * Get current baselines\r\n   */\r\n  public getBaselines(): Map<string, StatisticalBaseline> {\r\n    return new Map(this.baselines);\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  public updateConfig(newConfig: Partial<AnomalyDetectionConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n    logger.info('\uD83D\uDD27 Anomaly detection configuration updated');\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   */\r\n  public getConfig(): AnomalyDetectionConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Reset baseline for a symbol\r\n   */\r\n  public async resetBaseline(symbol: string): Promise<void> {\r\n    this.baselines.delete(symbol);\r\n    await this.initializeBaselines([symbol]);\r\n    logger.info(`\uD83D\uDD04 Baseline reset for ${symbol}`);\r\n  }\r\n\r\n  /**\r\n   * Shutdown the anomaly detector\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDED1 Shutting down Anomaly Detector...');\r\n      \r\n      // Clear all data\r\n      this.baselines.clear();\r\n      this.detectionHistory = [];\r\n      this.alertHistory.clear();\r\n      \r\n      this.isInitialized = false;\r\n      \r\n      logger.info('\u2705 Anomaly Detector shutdown completed');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error during Anomaly Detector shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  AnomalyDetectionConfig,\r\n  StatisticalBaseline,\r\n  AnomalyDetectionResult,\r\n  PatternAnomaly,\r\n  OrderBookAnomaly\r\n};\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31a9901c59f1cb2d4f0da445da06bbb3914a4efc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10ksclylsm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10ksclylsm();
cov_10ksclylsm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10ksclylsm().s[1]++;
exports.AnomalyDetector = void 0;
const events_1 =
/* istanbul ignore next */
(cov_10ksclylsm().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_10ksclylsm().s[3]++, require("@/core/logging/logger"));
/**
 * Anomaly Detector class for market irregularity detection
 */
class AnomalyDetector extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  llmEngine;
  config;
  baselines =
  /* istanbul ignore next */
  (cov_10ksclylsm().s[4]++, new Map());
  detectionHistory =
  /* istanbul ignore next */
  (cov_10ksclylsm().s[5]++, []);
  alertHistory =
  /* istanbul ignore next */
  (cov_10ksclylsm().s[6]++, new Map()); // For cooldown tracking
  isInitialized =
  /* istanbul ignore next */
  (cov_10ksclylsm().s[7]++, false);
  maxHistorySize =
  /* istanbul ignore next */
  (cov_10ksclylsm().s[8]++, 1000);
  // Statistical constants
  STATISTICAL_CONSTANTS =
  /* istanbul ignore next */
  (cov_10ksclylsm().s[9]++, {
    zScoreThreshold: 2.5,
    // 2.5 standard deviations
    outlierThreshold: 3.0,
    // 3 standard deviations for outliers
    minSampleSize: 100,
    // Minimum samples for reliable statistics
    baselineUpdateFrequency: 3600000 // 1 hour in milliseconds
  });
  constructor(llmEngine, config) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[0]++;
    cov_10ksclylsm().s[10]++;
    super();
    /* istanbul ignore next */
    cov_10ksclylsm().s[11]++;
    this.llmEngine = llmEngine;
    // Default configuration
    /* istanbul ignore next */
    cov_10ksclylsm().s[12]++;
    this.config = {
      volumeAnomalySensitivity: 75,
      priceAnomalySensitivity: 80,
      sentimentAnomalySensitivity: 70,
      patternAnomalySensitivity: 65,
      volumeSpikeThreshold: 3.0,
      priceGapThreshold: 5.0,
      sentimentDivergenceThreshold: 50,
      shortTermWindow: 15,
      mediumTermWindow: 4,
      longTermWindow: 1,
      enableRealTimeAlerts: true,
      alertCooldownPeriod: 300000,
      // 5 minutes
      maxAlertsPerHour: 10,
      ...config
    };
    /* istanbul ignore next */
    cov_10ksclylsm().s[13]++;
    logger_1.logger.info('🔍 Anomaly Detector initialized');
  }
  /**
   * Initialize the anomaly detector
   */
  async initialize() {
    /* istanbul ignore next */
    cov_10ksclylsm().f[1]++;
    cov_10ksclylsm().s[14]++;
    try {
      /* istanbul ignore next */
      cov_10ksclylsm().s[15]++;
      logger_1.logger.info('🚀 Initializing Anomaly Detector...');
      // Verify LLM engine is ready
      /* istanbul ignore next */
      cov_10ksclylsm().s[16]++;
      if (!this.llmEngine.isReady()) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[0][0]++;
        cov_10ksclylsm().s[17]++;
        throw new Error('LLM Engine is not ready');
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[0][1]++;
      }
      // Initialize baselines for common symbols
      cov_10ksclylsm().s[18]++;
      await this.initializeBaselines(['BTC', 'ETH']);
      /* istanbul ignore next */
      cov_10ksclylsm().s[19]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_10ksclylsm().s[20]++;
      logger_1.logger.info('✅ Anomaly Detector initialized successfully');
      /* istanbul ignore next */
      cov_10ksclylsm().s[21]++;
      this.emit('initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_10ksclylsm().s[22]++;
      logger_1.logger.error('❌ Failed to initialize Anomaly Detector:', error);
      /* istanbul ignore next */
      cov_10ksclylsm().s[23]++;
      throw error;
    }
  }
  /**
   * Initialize statistical baselines for symbols
   */
  async initializeBaselines(symbols) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[2]++;
    cov_10ksclylsm().s[24]++;
    for (const symbol of symbols) {
      const baseline =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[25]++, {
        symbol,
        timeframe: '1h',
        averagePrice: 0,
        priceStdDev: 0,
        priceRange: {
          min: 0,
          max: 0
        },
        averageVolume: 0,
        volumeStdDev: 0,
        volumeRange: {
          min: 0,
          max: 0
        },
        averageVolatility: 0,
        volatilityStdDev: 0,
        patternFrequencies: new Map(),
        lastUpdated: new Date(),
        sampleSize: 0
      });
      /* istanbul ignore next */
      cov_10ksclylsm().s[26]++;
      this.baselines.set(symbol, baseline);
      /* istanbul ignore next */
      cov_10ksclylsm().s[27]++;
      logger_1.logger.info(`📊 Initialized baseline for ${symbol}`);
    }
  }
  /**
   * Detect anomalies in market data
   */
  async detectAnomalies(marketData, sentimentData) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[3]++;
    cov_10ksclylsm().s[28]++;
    try {
      /* istanbul ignore next */
      cov_10ksclylsm().s[29]++;
      if (!this.isInitialized) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[1][0]++;
        cov_10ksclylsm().s[30]++;
        throw new Error('Anomaly Detector not initialized');
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[1][1]++;
      }
      const startTime =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[31]++, Date.now());
      /* istanbul ignore next */
      cov_10ksclylsm().s[32]++;
      logger_1.logger.info(`🔍 Detecting anomalies for ${marketData.symbol}...`);
      // Get or create baseline for symbol
      let baseline =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[33]++, this.baselines.get(marketData.symbol));
      /* istanbul ignore next */
      cov_10ksclylsm().s[34]++;
      if (!baseline) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[2][0]++;
        cov_10ksclylsm().s[35]++;
        await this.initializeBaselines([marketData.symbol]);
        /* istanbul ignore next */
        cov_10ksclylsm().s[36]++;
        baseline = this.baselines.get(marketData.symbol);
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[2][1]++;
      }
      // Update baseline with new data
      cov_10ksclylsm().s[37]++;
      await this.updateBaseline(baseline, marketData);
      // Run different anomaly detection algorithms
      const [volumeAnomalies, priceAnomalies, patternAnomalies, sentimentAnomalies, volatilityAnomalies] =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[38]++, await Promise.all([this.detectVolumeAnomalies(marketData, baseline), this.detectPriceAnomalies(marketData, baseline), this.detectPatternAnomalies(marketData, baseline), this.detectSentimentAnomalies(marketData, sentimentData, baseline), this.detectVolatilityAnomalies(marketData, baseline)]));
      // Combine all anomalies
      const allAnomalies =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[39]++, [...volumeAnomalies, ...priceAnomalies, ...patternAnomalies, ...sentimentAnomalies, ...volatilityAnomalies]);
      // Use LLM for additional analysis if anomalies found
      /* istanbul ignore next */
      cov_10ksclylsm().s[40]++;
      if (allAnomalies.length > 0) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[3][0]++;
        const llmAnomalies =
        /* istanbul ignore next */
        (cov_10ksclylsm().s[41]++, await this.getLLMAnomalyAnalysis(marketData, allAnomalies, sentimentData));
        /* istanbul ignore next */
        cov_10ksclylsm().s[42]++;
        allAnomalies.push(...llmAnomalies);
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[3][1]++;
      }
      // Calculate overall risk and confidence scores
      const overallRiskScore =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[43]++, this.calculateOverallRiskScore(allAnomalies));
      const confidenceScore =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[44]++, this.calculateConfidenceScore(baseline, allAnomalies));
      const result =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[45]++, {
        anomalies: allAnomalies,
        overallRiskScore,
        confidenceScore,
        detectionTime: Date.now() - startTime,
        algorithmsUsed: ['volume', 'price', 'pattern', 'sentiment', 'volatility', 'llm'],
        baseline
      });
      // Add to history
      /* istanbul ignore next */
      cov_10ksclylsm().s[46]++;
      this.addToHistory(result);
      // Generate alerts if enabled
      /* istanbul ignore next */
      cov_10ksclylsm().s[47]++;
      if (
      /* istanbul ignore next */
      (cov_10ksclylsm().b[5][0]++, this.config.enableRealTimeAlerts) &&
      /* istanbul ignore next */
      (cov_10ksclylsm().b[5][1]++, allAnomalies.length > 0)) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[4][0]++;
        cov_10ksclylsm().s[48]++;
        await this.generateAlerts(allAnomalies, marketData.symbol);
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[4][1]++;
      }
      cov_10ksclylsm().s[49]++;
      logger_1.logger.info(`✅ Anomaly detection completed for ${marketData.symbol} - Found ${allAnomalies.length} anomalies`);
      /* istanbul ignore next */
      cov_10ksclylsm().s[50]++;
      this.emit('anomaliesDetected', result);
      /* istanbul ignore next */
      cov_10ksclylsm().s[51]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_10ksclylsm().s[52]++;
      logger_1.logger.error('❌ Error in anomaly detection:', error);
      /* istanbul ignore next */
      cov_10ksclylsm().s[53]++;
      throw error;
    }
  }
  /**
   * Update statistical baseline with new market data
   */
  async updateBaseline(baseline, marketData) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[4]++;
    const {
      price,
      volume,
      high,
      low
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[54]++, marketData);
    const volatility =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[55]++, (high - low) / price * 100);
    // Update sample size
    /* istanbul ignore next */
    cov_10ksclylsm().s[56]++;
    baseline.sampleSize++;
    // Update price statistics (running average and std dev)
    /* istanbul ignore next */
    cov_10ksclylsm().s[57]++;
    if (baseline.sampleSize === 1) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[6][0]++;
      cov_10ksclylsm().s[58]++;
      baseline.averagePrice = price;
      /* istanbul ignore next */
      cov_10ksclylsm().s[59]++;
      baseline.priceRange = {
        min: price,
        max: price
      };
    } else {
      /* istanbul ignore next */
      cov_10ksclylsm().b[6][1]++;
      // Running average
      const oldAvg =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[60]++, baseline.averagePrice);
      /* istanbul ignore next */
      cov_10ksclylsm().s[61]++;
      baseline.averagePrice = oldAvg + (price - oldAvg) / baseline.sampleSize;
      // Running standard deviation (Welford's algorithm)
      /* istanbul ignore next */
      cov_10ksclylsm().s[62]++;
      baseline.priceStdDev = Math.sqrt(((baseline.sampleSize - 2) * Math.pow(baseline.priceStdDev, 2) + (price - oldAvg) * (price - baseline.averagePrice)) / (baseline.sampleSize - 1));
      // Update range
      /* istanbul ignore next */
      cov_10ksclylsm().s[63]++;
      baseline.priceRange.min = Math.min(baseline.priceRange.min, price);
      /* istanbul ignore next */
      cov_10ksclylsm().s[64]++;
      baseline.priceRange.max = Math.max(baseline.priceRange.max, price);
    }
    // Update volume statistics
    /* istanbul ignore next */
    cov_10ksclylsm().s[65]++;
    if (baseline.sampleSize === 1) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[7][0]++;
      cov_10ksclylsm().s[66]++;
      baseline.averageVolume = volume;
      /* istanbul ignore next */
      cov_10ksclylsm().s[67]++;
      baseline.volumeRange = {
        min: volume,
        max: volume
      };
    } else {
      /* istanbul ignore next */
      cov_10ksclylsm().b[7][1]++;
      const oldVolumeAvg =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[68]++, baseline.averageVolume);
      /* istanbul ignore next */
      cov_10ksclylsm().s[69]++;
      baseline.averageVolume = oldVolumeAvg + (volume - oldVolumeAvg) / baseline.sampleSize;
      /* istanbul ignore next */
      cov_10ksclylsm().s[70]++;
      baseline.volumeStdDev = Math.sqrt(((baseline.sampleSize - 2) * Math.pow(baseline.volumeStdDev, 2) + (volume - oldVolumeAvg) * (volume - baseline.averageVolume)) / (baseline.sampleSize - 1));
      /* istanbul ignore next */
      cov_10ksclylsm().s[71]++;
      baseline.volumeRange.min = Math.min(baseline.volumeRange.min, volume);
      /* istanbul ignore next */
      cov_10ksclylsm().s[72]++;
      baseline.volumeRange.max = Math.max(baseline.volumeRange.max, volume);
    }
    // Update volatility statistics
    /* istanbul ignore next */
    cov_10ksclylsm().s[73]++;
    if (baseline.sampleSize === 1) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[8][0]++;
      cov_10ksclylsm().s[74]++;
      baseline.averageVolatility = volatility;
    } else {
      /* istanbul ignore next */
      cov_10ksclylsm().b[8][1]++;
      const oldVolatilityAvg =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[75]++, baseline.averageVolatility);
      /* istanbul ignore next */
      cov_10ksclylsm().s[76]++;
      baseline.averageVolatility = oldVolatilityAvg + (volatility - oldVolatilityAvg) / baseline.sampleSize;
      /* istanbul ignore next */
      cov_10ksclylsm().s[77]++;
      baseline.volatilityStdDev = Math.sqrt(((baseline.sampleSize - 2) * Math.pow(baseline.volatilityStdDev, 2) + (volatility - oldVolatilityAvg) * (volatility - baseline.averageVolatility)) / (baseline.sampleSize - 1));
    }
    /* istanbul ignore next */
    cov_10ksclylsm().s[78]++;
    baseline.lastUpdated = new Date();
  }
  /**
   * Detect volume anomalies
   */
  async detectVolumeAnomalies(marketData, baseline) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[5]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[79]++, []);
    /* istanbul ignore next */
    cov_10ksclylsm().s[80]++;
    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[9][0]++;
      cov_10ksclylsm().s[81]++;
      return anomalies; // Not enough data for reliable detection
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[9][1]++;
    }
    const {
      volume
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[82]++, marketData);
    const {
      averageVolume,
      volumeStdDev
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[83]++, baseline);
    // Z-score calculation
    const zScore =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[84]++, volumeStdDev > 0 ?
    /* istanbul ignore next */
    (cov_10ksclylsm().b[10][0]++, (volume - averageVolume) / volumeStdDev) :
    /* istanbul ignore next */
    (cov_10ksclylsm().b[10][1]++, 0));
    // Volume spike detection
    /* istanbul ignore next */
    cov_10ksclylsm().s[85]++;
    if (Math.abs(zScore) > this.STATISTICAL_CONSTANTS.zScoreThreshold) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[11][0]++;
      const severity =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[86]++, Math.abs(zScore) > this.STATISTICAL_CONSTANTS.outlierThreshold ?
      /* istanbul ignore next */
      (cov_10ksclylsm().b[12][0]++, 'HIGH') :
      /* istanbul ignore next */
      (cov_10ksclylsm().b[12][1]++, 'MEDIUM'));
      /* istanbul ignore next */
      cov_10ksclylsm().s[87]++;
      anomalies.push({
        type: 'VOLUME_SPIKE',
        severity: severity,
        description: `Volume ${zScore > 0 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[13][0]++, 'spike') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[13][1]++, 'drop')} detected: ${(volume / averageVolume).toFixed(2)}x average`,
        impact: zScore > 0 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[14][0]++, 'Potential breakout or significant news') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[14][1]++, 'Potential lack of interest or liquidity issues'),
        recommendation: zScore > 0 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[15][0]++, 'Monitor for price movement confirmation') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[15][1]++, 'Check for market conditions or news'),
        confidence: Math.min(95, 60 + Math.abs(zScore) * 10),
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[11][1]++;
    }
    // Volume pattern anomalies
    const volumeRatio =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[88]++, volume / averageVolume);
    /* istanbul ignore next */
    cov_10ksclylsm().s[89]++;
    if (volumeRatio > this.config.volumeSpikeThreshold) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[16][0]++;
      cov_10ksclylsm().s[90]++;
      anomalies.push({
        type: 'VOLUME_SPIKE',
        severity: volumeRatio > 5 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[17][0]++, 'CRITICAL') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[17][1]++, 'HIGH'),
        description: `Extreme volume spike: ${volumeRatio.toFixed(1)}x normal volume`,
        impact: 'Major market event or institutional activity',
        recommendation: 'Immediate attention required - check news and order books',
        confidence: 90,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[16][1]++;
    }
    cov_10ksclylsm().s[91]++;
    return anomalies;
  }
  /**
   * Detect price anomalies
   */
  async detectPriceAnomalies(marketData, baseline) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[6]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[92]++, []);
    /* istanbul ignore next */
    cov_10ksclylsm().s[93]++;
    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[18][0]++;
      cov_10ksclylsm().s[94]++;
      return anomalies;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[18][1]++;
    }
    const {
      price,
      open,
      high,
      low
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[95]++, marketData);
    const {
      averagePrice,
      priceStdDev
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[96]++, baseline);
    // Price gap detection
    const gapPercentage =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[97]++, Math.abs((open - price) / price) * 100);
    /* istanbul ignore next */
    cov_10ksclylsm().s[98]++;
    if (gapPercentage > this.config.priceGapThreshold) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[19][0]++;
      cov_10ksclylsm().s[99]++;
      anomalies.push({
        type: 'PRICE_GAP',
        severity: gapPercentage > 10 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[20][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[20][1]++, 'MEDIUM'),
        description: `Price gap of ${gapPercentage.toFixed(2)}% detected`,
        impact: 'Potential sentiment shift or news impact',
        recommendation: 'Assess gap fill probability and market sentiment',
        confidence: 80,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[19][1]++;
    }
    // Price deviation from baseline
    cov_10ksclylsm().s[100]++;
    if (priceStdDev > 0) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[21][0]++;
      const zScore =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[101]++, (price - averagePrice) / priceStdDev);
      /* istanbul ignore next */
      cov_10ksclylsm().s[102]++;
      if (Math.abs(zScore) > this.STATISTICAL_CONSTANTS.outlierThreshold) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[22][0]++;
        cov_10ksclylsm().s[103]++;
        anomalies.push({
          type: 'UNUSUAL_PATTERN',
          severity: Math.abs(zScore) > 4 ?
          /* istanbul ignore next */
          (cov_10ksclylsm().b[23][0]++, 'CRITICAL') :
          /* istanbul ignore next */
          (cov_10ksclylsm().b[23][1]++, 'HIGH'),
          description: `Price deviation: ${Math.abs(zScore).toFixed(2)} standard deviations from average`,
          impact: 'Significant price movement outside normal range',
          recommendation: 'Investigate underlying causes and market conditions',
          confidence: 85,
          timestamp: new Date(),
          affectedSymbols: [marketData.symbol]
        });
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[21][1]++;
    }
    // Intraday volatility anomaly
    const intradayVolatility =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[104]++, (high - low) / open * 100);
    /* istanbul ignore next */
    cov_10ksclylsm().s[105]++;
    if (intradayVolatility > baseline.averageVolatility * 2) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[24][0]++;
      cov_10ksclylsm().s[106]++;
      anomalies.push({
        type: 'UNUSUAL_PATTERN',
        severity: intradayVolatility > baseline.averageVolatility * 3 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[25][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[25][1]++, 'MEDIUM'),
        description: `Unusual intraday volatility: ${intradayVolatility.toFixed(2)}%`,
        impact: 'Increased trading risk and potential opportunities',
        recommendation: 'Adjust position sizes and risk management',
        confidence: 75,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[24][1]++;
    }
    cov_10ksclylsm().s[107]++;
    return anomalies;
  }
  /**
   * Detect pattern anomalies using statistical analysis
   */
  async detectPatternAnomalies(marketData, baseline) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[7]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[108]++, []);
    // Technical indicator anomalies
    const {
      technicalIndicators
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[109]++, marketData);
    // RSI extreme values
    /* istanbul ignore next */
    cov_10ksclylsm().s[110]++;
    if (
    /* istanbul ignore next */
    (cov_10ksclylsm().b[27][0]++, technicalIndicators.rsi > 90) ||
    /* istanbul ignore next */
    (cov_10ksclylsm().b[27][1]++, technicalIndicators.rsi < 10)) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[26][0]++;
      cov_10ksclylsm().s[111]++;
      anomalies.push({
        type: 'UNUSUAL_PATTERN',
        severity: 'HIGH',
        description: `Extreme RSI value: ${technicalIndicators.rsi.toFixed(2)}`,
        impact: technicalIndicators.rsi > 90 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[28][0]++, 'Severely overbought conditions') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[28][1]++, 'Severely oversold conditions'),
        recommendation: technicalIndicators.rsi > 90 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[29][0]++, 'Consider taking profits or shorting') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[29][1]++, 'Consider buying opportunity'),
        confidence: 85,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[26][1]++;
    }
    // MACD divergence anomaly
    const macdDivergence =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[112]++, Math.abs(technicalIndicators.macd.macd - technicalIndicators.macd.signal));
    /* istanbul ignore next */
    cov_10ksclylsm().s[113]++;
    if (macdDivergence > 0.01) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[30][0]++;
      cov_10ksclylsm().s[114]++;
      // Threshold for significant divergence
      anomalies.push({
        type: 'UNUSUAL_PATTERN',
        severity: 'MEDIUM',
        description: `Significant MACD divergence detected: ${macdDivergence.toFixed(4)}`,
        impact: 'Potential trend change or momentum shift',
        recommendation: 'Monitor for trend confirmation or reversal',
        confidence: 70,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[30][1]++;
    }
    // Bollinger Band squeeze/expansion
    const bbWidth =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[115]++, (technicalIndicators.bollinger.upper - technicalIndicators.bollinger.lower) / technicalIndicators.bollinger.middle);
    /* istanbul ignore next */
    cov_10ksclylsm().s[116]++;
    if (bbWidth < 0.02) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[31][0]++;
      cov_10ksclylsm().s[117]++;
      // Very tight bands
      anomalies.push({
        type: 'UNUSUAL_PATTERN',
        severity: 'MEDIUM',
        description: 'Bollinger Band squeeze detected - low volatility',
        impact: 'Potential for significant price movement',
        recommendation: 'Prepare for volatility expansion and breakout',
        confidence: 75,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else {
      /* istanbul ignore next */
      cov_10ksclylsm().b[31][1]++;
      cov_10ksclylsm().s[118]++;
      if (bbWidth > 0.15) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[32][0]++;
        cov_10ksclylsm().s[119]++;
        // Very wide bands
        anomalies.push({
          type: 'UNUSUAL_PATTERN',
          severity: 'MEDIUM',
          description: 'Bollinger Band expansion detected - high volatility',
          impact: 'Increased trading risk and opportunities',
          recommendation: 'Use appropriate position sizing for high volatility',
          confidence: 75,
          timestamp: new Date(),
          affectedSymbols: [marketData.symbol]
        });
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[32][1]++;
      }
    }
    /* istanbul ignore next */
    cov_10ksclylsm().s[120]++;
    return anomalies;
  }
  /**
   * Detect sentiment anomalies and divergences
   */
  async detectSentimentAnomalies(marketData, sentimentData, baseline) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[8]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[121]++, []);
    /* istanbul ignore next */
    cov_10ksclylsm().s[122]++;
    if (!sentimentData) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[33][0]++;
      cov_10ksclylsm().s[123]++;
      return anomalies;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[33][1]++;
    }
    // Price-sentiment divergence
    const priceChange =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[124]++, (marketData.close - marketData.open) / marketData.open * 100);
    const sentimentScore =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[125]++, sentimentData.overall);
    // Check for divergence
    const priceDirection =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[126]++, priceChange > 0 ?
    /* istanbul ignore next */
    (cov_10ksclylsm().b[34][0]++, 1) :
    /* istanbul ignore next */
    (cov_10ksclylsm().b[34][1]++, -1));
    const sentimentDirection =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[127]++, sentimentScore > 0 ?
    /* istanbul ignore next */
    (cov_10ksclylsm().b[35][0]++, 1) :
    /* istanbul ignore next */
    (cov_10ksclylsm().b[35][1]++, -1));
    /* istanbul ignore next */
    cov_10ksclylsm().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_10ksclylsm().b[37][0]++, priceDirection !== sentimentDirection) &&
    /* istanbul ignore next */
    (cov_10ksclylsm().b[37][1]++, Math.abs(sentimentScore) > this.config.sentimentDivergenceThreshold)) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[36][0]++;
      cov_10ksclylsm().s[129]++;
      anomalies.push({
        type: 'SENTIMENT_DIVERGENCE',
        severity: Math.abs(sentimentScore) > 70 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[38][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[38][1]++, 'MEDIUM'),
        description: `Price-sentiment divergence: Price ${priceChange > 0 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[39][0]++, 'up') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[39][1]++, 'down')} ${Math.abs(priceChange).toFixed(2)}%, sentiment ${sentimentScore.toFixed(0)}`,
        impact: 'Potential reversal or sentiment correction incoming',
        recommendation: 'Monitor for trend continuation or reversal signals',
        confidence: Math.min(90, 50 + Math.abs(sentimentScore) * 0.5),
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[36][1]++;
    }
    // Extreme sentiment levels
    cov_10ksclylsm().s[130]++;
    if (Math.abs(sentimentScore) > 80) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[40][0]++;
      cov_10ksclylsm().s[131]++;
      anomalies.push({
        type: 'SENTIMENT_DIVERGENCE',
        severity: Math.abs(sentimentScore) > 90 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[41][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[41][1]++, 'MEDIUM'),
        description: `Extreme sentiment detected: ${sentimentScore.toFixed(0)}`,
        impact: sentimentScore > 0 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[42][0]++, 'Potential euphoria and reversal risk') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[42][1]++, 'Potential capitulation and bounce opportunity'),
        recommendation: sentimentScore > 0 ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[43][0]++, 'Consider contrarian positioning') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[43][1]++, 'Look for oversold bounce opportunities'),
        confidence: 80,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[40][1]++;
    }
    // Sentiment confidence anomaly
    cov_10ksclylsm().s[132]++;
    if (sentimentData.confidence < 30) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[44][0]++;
      cov_10ksclylsm().s[133]++;
      anomalies.push({
        type: 'SENTIMENT_DIVERGENCE',
        severity: 'LOW',
        description: `Low sentiment confidence: ${sentimentData.confidence}%`,
        impact: 'Unreliable sentiment data may affect analysis quality',
        recommendation: 'Rely more on technical analysis until sentiment clarity improves',
        confidence: 60,
        timestamp: new Date(),
        affectedSymbols: [marketData.symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[44][1]++;
    }
    cov_10ksclylsm().s[134]++;
    return anomalies;
  }
  /**
   * Detect volatility anomalies
   */
  async detectVolatilityAnomalies(marketData, baseline) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[9]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[135]++, []);
    /* istanbul ignore next */
    cov_10ksclylsm().s[136]++;
    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[45][0]++;
      cov_10ksclylsm().s[137]++;
      return anomalies;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[45][1]++;
    }
    const currentVolatility =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[138]++, (marketData.high - marketData.low) / marketData.close * 100);
    const {
      averageVolatility,
      volatilityStdDev
    } =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[139]++, baseline);
    /* istanbul ignore next */
    cov_10ksclylsm().s[140]++;
    if (volatilityStdDev > 0) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[46][0]++;
      const zScore =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[141]++, (currentVolatility - averageVolatility) / volatilityStdDev);
      /* istanbul ignore next */
      cov_10ksclylsm().s[142]++;
      if (Math.abs(zScore) > this.STATISTICAL_CONSTANTS.zScoreThreshold) {
        /* istanbul ignore next */
        cov_10ksclylsm().b[47][0]++;
        const severity =
        /* istanbul ignore next */
        (cov_10ksclylsm().s[143]++, Math.abs(zScore) > this.STATISTICAL_CONSTANTS.outlierThreshold ?
        /* istanbul ignore next */
        (cov_10ksclylsm().b[48][0]++, 'HIGH') :
        /* istanbul ignore next */
        (cov_10ksclylsm().b[48][1]++, 'MEDIUM'));
        /* istanbul ignore next */
        cov_10ksclylsm().s[144]++;
        anomalies.push({
          type: 'UNUSUAL_PATTERN',
          severity: severity,
          description: `Volatility anomaly: ${currentVolatility.toFixed(2)}% (${Math.abs(zScore).toFixed(2)} std dev from average)`,
          impact: zScore > 0 ?
          /* istanbul ignore next */
          (cov_10ksclylsm().b[49][0]++, 'Increased risk and trading opportunities') :
          /* istanbul ignore next */
          (cov_10ksclylsm().b[49][1]++, 'Unusually low volatility may precede major moves'),
          recommendation: zScore > 0 ?
          /* istanbul ignore next */
          (cov_10ksclylsm().b[50][0]++, 'Reduce position sizes and tighten stops') :
          /* istanbul ignore next */
          (cov_10ksclylsm().b[50][1]++, 'Prepare for potential volatility expansion'),
          confidence: Math.min(90, 60 + Math.abs(zScore) * 10),
          timestamp: new Date(),
          affectedSymbols: [marketData.symbol]
        });
      } else
      /* istanbul ignore next */
      {
        cov_10ksclylsm().b[47][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[46][1]++;
    }
    cov_10ksclylsm().s[145]++;
    return anomalies;
  }
  /**
   * Get LLM analysis of detected anomalies
   */
  async getLLMAnomalyAnalysis(marketData, anomalies, sentimentData) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[10]++;
    cov_10ksclylsm().s[146]++;
    try {
      // Build prompt for LLM analysis
      const prompt =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[147]++, this.buildAnomalyAnalysisPrompt(marketData, anomalies, sentimentData));
      // Get LLM analysis (mock implementation)
      const llmResponse =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[148]++, await this.getLLMAnomalyResponse(prompt));
      // Parse LLM response for additional anomalies
      const llmAnomalies =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[149]++, this.parseLLMAnomalyResponse(llmResponse, marketData.symbol));
      /* istanbul ignore next */
      cov_10ksclylsm().s[150]++;
      return llmAnomalies;
    } catch (error) {
      /* istanbul ignore next */
      cov_10ksclylsm().s[151]++;
      logger_1.logger.error('❌ Error in LLM anomaly analysis:', error);
      /* istanbul ignore next */
      cov_10ksclylsm().s[152]++;
      return [];
    }
  }
  /**
   * Build prompt for LLM anomaly analysis
   */
  buildAnomalyAnalysisPrompt(marketData, anomalies, sentimentData) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[11]++;
    let prompt =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[153]++, `Analyze the following market anomalies for ${marketData.symbol}:

DETECTED ANOMALIES:
${anomalies.map((anomaly, index) => {
      /* istanbul ignore next */
      cov_10ksclylsm().f[12]++;
      cov_10ksclylsm().s[154]++;
      return `${index + 1}. ${anomaly.type}: ${anomaly.description} (${anomaly.severity} severity)`;
    }).join('\n')}

MARKET DATA:
- Price: $${marketData.price.toFixed(2)}
- Volume: ${marketData.volume.toLocaleString()}
- RSI: ${marketData.technicalIndicators.rsi.toFixed(2)}
- MACD: ${marketData.technicalIndicators.macd.macd.toFixed(4)}`);
    /* istanbul ignore next */
    cov_10ksclylsm().s[155]++;
    if (sentimentData) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[51][0]++;
      cov_10ksclylsm().s[156]++;
      prompt += `\n\nSENTIMENT DATA:
- Overall Sentiment: ${sentimentData.overall}
- Twitter: ${sentimentData.twitter.score}
- Reddit: ${sentimentData.reddit.score}
- News: ${sentimentData.news.score}`;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[51][1]++;
    }
    cov_10ksclylsm().s[157]++;
    prompt += `\n\nPlease identify any additional anomalies or patterns that might have been missed, and provide insights on:
1. Potential market implications
2. Risk assessment
3. Trading recommendations
4. Any interconnected anomalies that might amplify risks`;
    /* istanbul ignore next */
    cov_10ksclylsm().s[158]++;
    return prompt;
  }
  /**
   * Get LLM response for anomaly analysis (mock implementation)
   */
  async getLLMAnomalyResponse(prompt) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[13]++;
    cov_10ksclylsm().s[159]++;
    // Mock LLM response
    return `Additional analysis reveals:

1. The combination of volume spike and sentiment divergence suggests institutional activity that may not be reflected in public sentiment yet.

2. The RSI extreme reading combined with price gap indicates potential exhaustion move that could lead to reversal.

3. Cross-market correlation anomaly detected - this asset is moving independently of broader market trends, suggesting asset-specific news or events.

Risk Assessment: ELEVATED - Multiple anomalies occurring simultaneously increases the probability of significant price movement.

Recommendation: Reduce position sizes and implement tighter risk management until anomalies resolve.`;
  }
  /**
   * Parse LLM response for additional anomalies
   */
  parseLLMAnomalyResponse(llmResponse, symbol) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[14]++;
    const anomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[160]++, []);
    // In production, this would use sophisticated NLP parsing
    // For now, create structured anomalies based on mock response
    /* istanbul ignore next */
    cov_10ksclylsm().s[161]++;
    if (llmResponse.includes('institutional activity')) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[52][0]++;
      cov_10ksclylsm().s[162]++;
      anomalies.push({
        type: 'UNUSUAL_PATTERN',
        severity: 'MEDIUM',
        description: 'Potential institutional activity detected by AI analysis',
        impact: 'Large player involvement may drive significant price movements',
        recommendation: 'Monitor order flow and volume patterns closely',
        confidence: 75,
        timestamp: new Date(),
        affectedSymbols: [symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[52][1]++;
    }
    cov_10ksclylsm().s[163]++;
    if (llmResponse.includes('Cross-market correlation anomaly')) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[53][0]++;
      cov_10ksclylsm().s[164]++;
      anomalies.push({
        type: 'UNUSUAL_PATTERN',
        severity: 'MEDIUM',
        description: 'Asset moving independently of broader market trends',
        impact: 'Asset-specific factors may be driving price action',
        recommendation: 'Research asset-specific news and developments',
        confidence: 70,
        timestamp: new Date(),
        affectedSymbols: [symbol]
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[53][1]++;
    }
    cov_10ksclylsm().s[165]++;
    return anomalies;
  }
  /**
   * Calculate overall risk score from anomalies
   */
  calculateOverallRiskScore(anomalies) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[15]++;
    cov_10ksclylsm().s[166]++;
    if (anomalies.length === 0) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[54][0]++;
      cov_10ksclylsm().s[167]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[54][1]++;
    }
    let totalRisk =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[168]++, 0);
    const severityWeights =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[169]++, {
      LOW: 1,
      MEDIUM: 2,
      HIGH: 3,
      CRITICAL: 4
    });
    /* istanbul ignore next */
    cov_10ksclylsm().s[170]++;
    for (const anomaly of anomalies) {
      const weight =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[171]++, severityWeights[anomaly.severity]);
      const confidenceMultiplier =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[172]++, anomaly.confidence / 100);
      /* istanbul ignore next */
      cov_10ksclylsm().s[173]++;
      totalRisk += weight * confidenceMultiplier;
    }
    // Normalize to 0-100 scale
    const maxPossibleRisk =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[174]++, anomalies.length * 4); // All critical with 100% confidence
    /* istanbul ignore next */
    cov_10ksclylsm().s[175]++;
    return Math.min(100, totalRisk / maxPossibleRisk * 100);
  }
  /**
   * Calculate confidence score for detection
   */
  calculateConfidenceScore(baseline, anomalies) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[16]++;
    let confidence =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[176]++, 100);
    // Reduce confidence if baseline has insufficient data
    /* istanbul ignore next */
    cov_10ksclylsm().s[177]++;
    if (baseline.sampleSize < this.STATISTICAL_CONSTANTS.minSampleSize) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[55][0]++;
      cov_10ksclylsm().s[178]++;
      confidence -= 30;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[55][1]++;
    }
    // Reduce confidence if data is stale
    const dataAge =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[179]++, Date.now() - baseline.lastUpdated.getTime());
    /* istanbul ignore next */
    cov_10ksclylsm().s[180]++;
    if (dataAge > this.STATISTICAL_CONSTANTS.baselineUpdateFrequency) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[56][0]++;
      cov_10ksclylsm().s[181]++;
      confidence -= 20;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[56][1]++;
    }
    // Average confidence of individual anomalies
    cov_10ksclylsm().s[182]++;
    if (anomalies.length > 0) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[57][0]++;
      const avgAnomalyConfidence =
      /* istanbul ignore next */
      (cov_10ksclylsm().s[183]++, anomalies.reduce((sum, a) => {
        /* istanbul ignore next */
        cov_10ksclylsm().f[17]++;
        cov_10ksclylsm().s[184]++;
        return sum + a.confidence;
      }, 0) / anomalies.length);
      /* istanbul ignore next */
      cov_10ksclylsm().s[185]++;
      confidence = (confidence + avgAnomalyConfidence) / 2;
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[57][1]++;
    }
    cov_10ksclylsm().s[186]++;
    return Math.max(0, Math.round(confidence));
  }
  /**
   * Generate alerts for detected anomalies
   */
  async generateAlerts(anomalies, symbol) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[18]++;
    const now =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[187]++, new Date());
    const alertKey =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[188]++, `${symbol}_${now.getHours()}`);
    // Check cooldown period
    const lastAlert =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[189]++, this.alertHistory.get(alertKey));
    /* istanbul ignore next */
    cov_10ksclylsm().s[190]++;
    if (
    /* istanbul ignore next */
    (cov_10ksclylsm().b[59][0]++, lastAlert) &&
    /* istanbul ignore next */
    (cov_10ksclylsm().b[59][1]++, now.getTime() - lastAlert.getTime() < this.config.alertCooldownPeriod)) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[58][0]++;
      cov_10ksclylsm().s[191]++;
      return; // Still in cooldown
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[58][1]++;
    }
    // Check hourly alert limit
    const hourlyAlerts =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[192]++, Array.from(this.alertHistory.entries()).filter(([key, time]) => {
      /* istanbul ignore next */
      cov_10ksclylsm().f[19]++;
      cov_10ksclylsm().s[193]++;
      return /* istanbul ignore next */(cov_10ksclylsm().b[60][0]++, key.startsWith(symbol)) &&
      /* istanbul ignore next */
      (cov_10ksclylsm().b[60][1]++, now.getTime() - time.getTime() < 3600000);
    }).length);
    /* istanbul ignore next */
    cov_10ksclylsm().s[194]++;
    if (hourlyAlerts >= this.config.maxAlertsPerHour) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[61][0]++;
      cov_10ksclylsm().s[195]++;
      return; // Exceeded hourly limit
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[61][1]++;
    }
    // Generate alerts for high and critical severity anomalies
    const criticalAnomalies =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[196]++, anomalies.filter(a => {
      /* istanbul ignore next */
      cov_10ksclylsm().f[20]++;
      cov_10ksclylsm().s[197]++;
      return /* istanbul ignore next */(cov_10ksclylsm().b[62][0]++, a.severity === 'HIGH') ||
      /* istanbul ignore next */
      (cov_10ksclylsm().b[62][1]++, a.severity === 'CRITICAL');
    }));
    /* istanbul ignore next */
    cov_10ksclylsm().s[198]++;
    if (criticalAnomalies.length > 0) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[63][0]++;
      cov_10ksclylsm().s[199]++;
      this.emit('criticalAnomalies', {
        symbol,
        anomalies: criticalAnomalies,
        timestamp: now
      });
      /* istanbul ignore next */
      cov_10ksclylsm().s[200]++;
      this.alertHistory.set(alertKey, now);
      /* istanbul ignore next */
      cov_10ksclylsm().s[201]++;
      logger_1.logger.warn(`🚨 Critical anomalies detected for ${symbol}:`, criticalAnomalies.map(a => {
        /* istanbul ignore next */
        cov_10ksclylsm().f[21]++;
        cov_10ksclylsm().s[202]++;
        return a.description;
      }));
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[63][1]++;
    }
  }
  /**
   * Add detection result to history
   */
  addToHistory(result) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[22]++;
    cov_10ksclylsm().s[203]++;
    this.detectionHistory.push(result);
    /* istanbul ignore next */
    cov_10ksclylsm().s[204]++;
    if (this.detectionHistory.length > this.maxHistorySize) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[64][0]++;
      cov_10ksclylsm().s[205]++;
      this.detectionHistory = this.detectionHistory.slice(-this.maxHistorySize);
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[64][1]++;
    }
  }
  /**
   * Get detection history
   */
  getDetectionHistory(symbol, limit) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[23]++;
    let history =
    /* istanbul ignore next */
    (cov_10ksclylsm().s[206]++, this.detectionHistory);
    /* istanbul ignore next */
    cov_10ksclylsm().s[207]++;
    if (symbol) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[65][0]++;
      cov_10ksclylsm().s[208]++;
      history = history.filter(result => {
        /* istanbul ignore next */
        cov_10ksclylsm().f[24]++;
        cov_10ksclylsm().s[209]++;
        return result.anomalies.some(anomaly => {
          /* istanbul ignore next */
          cov_10ksclylsm().f[25]++;
          cov_10ksclylsm().s[210]++;
          return anomaly.affectedSymbols.includes(symbol);
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[65][1]++;
    }
    cov_10ksclylsm().s[211]++;
    if (limit) {
      /* istanbul ignore next */
      cov_10ksclylsm().b[66][0]++;
      cov_10ksclylsm().s[212]++;
      history = history.slice(-limit);
    } else
    /* istanbul ignore next */
    {
      cov_10ksclylsm().b[66][1]++;
    }
    cov_10ksclylsm().s[213]++;
    return history;
  }
  /**
   * Get current baselines
   */
  getBaselines() {
    /* istanbul ignore next */
    cov_10ksclylsm().f[26]++;
    cov_10ksclylsm().s[214]++;
    return new Map(this.baselines);
  }
  /**
   * Update configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[27]++;
    cov_10ksclylsm().s[215]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
    /* istanbul ignore next */
    cov_10ksclylsm().s[216]++;
    logger_1.logger.info('🔧 Anomaly detection configuration updated');
  }
  /**
   * Get current configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_10ksclylsm().f[28]++;
    cov_10ksclylsm().s[217]++;
    return {
      ...this.config
    };
  }
  /**
   * Reset baseline for a symbol
   */
  async resetBaseline(symbol) {
    /* istanbul ignore next */
    cov_10ksclylsm().f[29]++;
    cov_10ksclylsm().s[218]++;
    this.baselines.delete(symbol);
    /* istanbul ignore next */
    cov_10ksclylsm().s[219]++;
    await this.initializeBaselines([symbol]);
    /* istanbul ignore next */
    cov_10ksclylsm().s[220]++;
    logger_1.logger.info(`🔄 Baseline reset for ${symbol}`);
  }
  /**
   * Shutdown the anomaly detector
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_10ksclylsm().f[30]++;
    cov_10ksclylsm().s[221]++;
    try {
      /* istanbul ignore next */
      cov_10ksclylsm().s[222]++;
      logger_1.logger.info('🛑 Shutting down Anomaly Detector...');
      // Clear all data
      /* istanbul ignore next */
      cov_10ksclylsm().s[223]++;
      this.baselines.clear();
      /* istanbul ignore next */
      cov_10ksclylsm().s[224]++;
      this.detectionHistory = [];
      /* istanbul ignore next */
      cov_10ksclylsm().s[225]++;
      this.alertHistory.clear();
      /* istanbul ignore next */
      cov_10ksclylsm().s[226]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_10ksclylsm().s[227]++;
      logger_1.logger.info('✅ Anomaly Detector shutdown completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_10ksclylsm().s[228]++;
      logger_1.logger.error('❌ Error during Anomaly Detector shutdown:', error);
      /* istanbul ignore next */
      cov_10ksclylsm().s[229]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_10ksclylsm().s[230]++;
exports.AnomalyDetector = AnomalyDetector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,