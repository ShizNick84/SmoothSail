8b1b9069d9205ee2c4099989116e30c5
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - AI ENGINE
 * =============================================================================
 *
 * Core AI engine that provides intelligent market analysis, trade signal
 * generation, and adaptive learning capabilities using Google Gemini AI.
 *
 * Features:
 * - Market sentiment analysis
 * - Trade signal generation
 * - Risk assessment
 * - Performance prediction
 * - Adaptive learning
 * - Anomaly detection
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1nhvlyjug3() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\ai-engine.ts";
  var hash = "77a6c479e03720eb6362bc02e5ea20aae3b85393";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\ai-engine.ts",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 62
        }
      },
      "1": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "2": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "3": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "4": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 44
        }
      },
      "5": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "6": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "7": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "8": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "9": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 25
        }
      },
      "10": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 21
        }
      },
      "11": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 27
        }
      },
      "12": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "13": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 16
        }
      },
      "14": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 54
        }
      },
      "15": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "16": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "17": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 83
        }
      },
      "18": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 72
        }
      },
      "19": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "20": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 93
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "22": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "23": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 61
        }
      },
      "24": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 46
        }
      },
      "25": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 57
        }
      },
      "26": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "27": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 62
        }
      },
      "28": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "29": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 56
        }
      },
      "30": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 67
        }
      },
      "31": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "32": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 56
        }
      },
      "33": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 67
        }
      },
      "34": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 52
        }
      },
      "35": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 63
        }
      },
      "36": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 44
        }
      },
      "37": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 59
        }
      },
      "38": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "39": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 68
        }
      },
      "40": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 37
        }
      },
      "41": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 75
        }
      },
      "42": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 73
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "44": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 77
        }
      },
      "45": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "46": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 61
        }
      },
      "47": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 19
        }
      },
      "48": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "49": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 57
        }
      },
      "50": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 43
        }
      },
      "51": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "52": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 47
        }
      },
      "53": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 34
        }
      },
      "54": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 65
        }
      },
      "55": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 33
        }
      },
      "56": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 69
        }
      },
      "57": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 24
        }
      },
      "58": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "59": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 57
        }
      },
      "60": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 19
        }
      },
      "61": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "62": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "63": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "64": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 53
        }
      },
      "65": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 45
        }
      },
      "66": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "67": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "68": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 48
        }
      },
      "69": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 46
        }
      },
      "70": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "71": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 55
        }
      },
      "72": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 35
        }
      },
      "73": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 62
        }
      },
      "74": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 34
        }
      },
      "75": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 75
        }
      },
      "76": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 24
        }
      },
      "77": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "78": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 64
        }
      },
      "79": {
        start: {
          line: 181,
          column: 29
        },
        end: {
          line: 181,
          column: 82
        }
      },
      "80": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "81": {
        start: {
          line: 184,
          column: 34
        },
        end: {
          line: 184,
          column: 88
        }
      },
      "82": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "83": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 59
        }
      },
      "84": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 95
        }
      },
      "85": {
        start: {
          line: 187,
          column: 79
        },
        end: {
          line: 187,
          column: 92
        }
      },
      "86": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "87": {
        start: {
          line: 192,
          column: 41
        },
        end: {
          line: 192,
          column: 87
        }
      },
      "88": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 88
        }
      },
      "89": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 199,
          column: 15
        }
      },
      "90": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 50
        }
      },
      "91": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 28
        }
      },
      "92": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 78
        }
      },
      "93": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 24
        }
      },
      "94": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "95": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 71
        }
      },
      "96": {
        start: {
          line: 215,
          column: 29
        },
        end: {
          line: 215,
          column: 73
        }
      },
      "97": {
        start: {
          line: 217,
          column: 27
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "98": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "99": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 38
        }
      },
      "100": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 108
        }
      },
      "101": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 79
        }
      },
      "102": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "103": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 64
        }
      },
      "104": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 66
        }
      },
      "105": {
        start: {
          line: 234,
          column: 17
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "106": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 39
        }
      },
      "107": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 108
        }
      },
      "108": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 79
        }
      },
      "109": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 53
        }
      },
      "110": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "111": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 66
        }
      },
      "112": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "113": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 41
        }
      },
      "114": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 81
        }
      },
      "115": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "116": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 45
        }
      },
      "117": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 26
        }
      },
      "118": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 86
        }
      },
      "119": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 24
        }
      },
      "120": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "121": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 19
        }
      },
      "122": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "123": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 67
        }
      },
      "124": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "125": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 68
        }
      },
      "126": {
        start: {
          line: 281,
          column: 23
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "127": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "128": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 75
        }
      },
      "129": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 79
        }
      },
      "130": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 305,
          column: 56
        }
      },
      "131": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 307,
          column: 56
        }
      },
      "132": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 81
        }
      },
      "133": {
        start: {
          line: 310,
          column: 34
        },
        end: {
          line: 310,
          column: 71
        }
      },
      "134": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 71
        }
      },
      "135": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 65
        }
      },
      "136": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 79
        }
      },
      "137": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 88
        }
      },
      "138": {
        start: {
          line: 315,
          column: 80
        },
        end: {
          line: 315,
          column: 86
        }
      },
      "139": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "140": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 78
        }
      },
      "141": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "142": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 67
        }
      },
      "143": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "144": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 64
        }
      },
      "145": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 37
        }
      },
      "146": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 64
        }
      },
      "147": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 22
        }
      },
      "148": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "149": {
        start: {
          line: 339,
          column: 33
        },
        end: {
          line: 339,
          column: 135
        }
      },
      "150": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "151": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 77
        }
      },
      "152": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 60
        }
      },
      "153": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 69
        }
      },
      "154": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 69
        }
      },
      "155": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 372,
          column: 19
        }
      },
      "156": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "157": {
        start: {
          line: 357,
          column: 32
        },
        end: {
          line: 357,
          column: 56
        }
      },
      "158": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 367,
          column: 17
        }
      },
      "159": {
        start: {
          line: 360,
          column: 43
        },
        end: {
          line: 365,
          column: 21
        }
      },
      "160": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 69
        }
      },
      "161": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 71
        }
      },
      "162": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 63
        }
      },
      "163": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "164": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 389,
          column: 13
        }
      },
      "165": {
        start: {
          line: 381,
          column: 31
        },
        end: {
          line: 381,
          column: 59
        }
      },
      "166": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 385,
          column: 17
        }
      },
      "167": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 85
        }
      },
      "168": {
        start: {
          line: 384,
          column: 20
        },
        end: {
          line: 384,
          column: 55
        }
      },
      "169": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 72
        }
      },
      "170": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 57
        }
      },
      "171": {
        start: {
          line: 397,
          column: 26
        },
        end: {
          line: 397,
          column: 36
        }
      },
      "172": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "173": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 72
        }
      },
      "174": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 42
        }
      },
      "175": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 22
        }
      },
      "176": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "177": {
        start: {
          line: 419,
          column: 0
        },
        end: {
          line: 419,
          column: 28
        }
      },
      "178": {
        start: {
          line: 420,
          column: 0
        },
        end: {
          line: 420,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 48
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 75
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 18
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 113
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 142
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 44
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 177
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 187,
            column: 74
          },
          end: {
            line: 187,
            column: 75
          }
        },
        loc: {
          start: {
            line: 187,
            column: 79
          },
          end: {
            line: 187,
            column: 92
          }
        },
        line: 187
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 50
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 211
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 38
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 262
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 280
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 315,
            column: 70
          },
          end: {
            line: 315,
            column: 71
          }
        },
        loc: {
          start: {
            line: 315,
            column: 80
          },
          end: {
            line: 315,
            column: 86
          }
        },
        line: 315
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 31
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 336
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 30
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 353
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 354,
            column: 44
          },
          end: {
            line: 354,
            column: 45
          }
        },
        loc: {
          start: {
            line: 354,
            column: 56
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 354
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 378,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        loc: {
          start: {
            line: 378,
            column: 28
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 378
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 379,
            column: 47
          },
          end: {
            line: 379,
            column: 48
          }
        },
        loc: {
          start: {
            line: 379,
            column: 59
          },
          end: {
            line: 390,
            column: 9
          }
        },
        line: 379
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 32
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 396
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 16
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 409
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "1": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "2": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "3": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "4": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "5": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "6": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 158,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "7": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "8": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "9": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "10": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "11": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 241,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 241,
            column: 13
          }
        }, {
          start: {
            line: 234,
            column: 17
          },
          end: {
            line: 241,
            column: 13
          }
        }],
        line: 226
      },
      "12": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 46
          }
        }, {
          start: {
            line: 226,
            column: 50
          },
          end: {
            line: 226,
            column: 96
          }
        }],
        line: 226
      },
      "13": {
        loc: {
          start: {
            line: 234,
            column: 17
          },
          end: {
            line: 241,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 17
          },
          end: {
            line: 241,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "14": {
        loc: {
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 234,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 234,
            column: 52
          }
        }, {
          start: {
            line: 234,
            column: 56
          },
          end: {
            line: 234,
            column: 102
          }
        }],
        line: 234
      },
      "15": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "16": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "17": {
        loc: {
          start: {
            line: 304,
            column: 48
          },
          end: {
            line: 305,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 16
          },
          end: {
            line: 305,
            column: 48
          }
        }, {
          start: {
            line: 305,
            column: 51
          },
          end: {
            line: 305,
            column: 55
          }
        }],
        line: 304
      },
      "18": {
        loc: {
          start: {
            line: 306,
            column: 48
          },
          end: {
            line: 307,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 16
          },
          end: {
            line: 307,
            column: 48
          }
        }, {
          start: {
            line: 307,
            column: 51
          },
          end: {
            line: 307,
            column: 55
          }
        }],
        line: 306
      },
      "19": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "20": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "21": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "22": {
        loc: {
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 342,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 342,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "23": {
        loc: {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 340,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 340,
            column: 29
          }
        }, {
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 57
          }
        }],
        line: 340
      },
      "24": {
        loc: {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 385,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 385,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\ai-engine.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;;;;;;GAoBG;;;AAEH,mCAAsC;AACtC,mDAAgD;AAChD,6CAAyC;AACzC,uDAAmD;AACnD,yDAAqD;AACrD,yDAAqD;AACrD,yDAAqD;AA6FrD;;;GAGG;AACH,MAAa,QAAS,SAAQ,qBAAY;IAChC,MAAM,CAAS;IACf,MAAM,CAAiB;IACvB,SAAS,CAAY;IACrB,cAAc,CAAiB;IAC/B,eAAe,CAAkB;IACjC,eAAe,CAAkB;IACjC,eAAe,CAAkB;IACjC,aAAa,GAAY,KAAK,CAAC;IAC/B,SAAS,GAAY,KAAK,CAAC;IAC3B,gBAAgB,GAA0B,IAAI,CAAC;IAC/C,mBAAmB,GAA0B,IAAI,CAAC;IAE1D,YAAY,MAAsB;QAChC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,eAAM,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,2BAA2B;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,sBAAS,CAAC;YAC7B,QAAQ,EAAE,MAAM,CAAC,WAAW;YAC5B,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,gCAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,eAAe,GAAG,IAAI,kCAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,kCAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,IAAI,kCAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAElE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;YACpC,QAAQ,EAAE,MAAM,CAAC,WAAW;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,eAAe,EAAE,MAAM,CAAC,cAAc;YACtC,uBAAuB,EAAE,MAAM,CAAC,sBAAsB;SACvD,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,UAAU;QACd,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAEjD,wBAAwB;YACxB,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAE7C,6BAA6B;YAC7B,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YAElD,yCAAyC;YACzC,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBACvC,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;gBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YACrD,CAAC;YAED,yCAAyC;YACzC,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC/B,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;gBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YACrD,CAAC;YAED,8BAA8B;YAC9B,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YAEnD,uBAAuB;YACvB,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YAE/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;YAExD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YAC/D,MAAM,IAAI,KAAK,CAAC,oCAAoC,KAAK,EAAE,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QAED,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAE7C,mCAAmC;YACnC,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAE/B,0BAA0B;YAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,4BAA4B;YAC5B,MAAM,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAEnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;YAErD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,QAAQ;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;YAC7C,OAAO;QACT,CAAC;QAED,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YAElD,2BAA2B;YAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC/B,CAAC;YAED,yBAAyB;YACzB,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC7B,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACxC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAClC,CAAC;YAED,2BAA2B;YAC3B,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAElC,gCAAgC;YAChC,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC/B,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;YACzC,CAAC;YAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;YAElD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAExB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YAC/D,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,aAAa,CAAC,MAAc,EAAE,UAAe;QACjD,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,MAAM,EAAE,CAAC,CAAC;YAEpD,wCAAwC;YACxC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAEvE,iCAAiC;YACjC,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBACvC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;gBACzE,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACzB,QAAQ,CAAC,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC;oBACvC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7E,CAAC;YACH,CAAC;YAED,qCAAqC;YACrC,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBAC/B,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACxE,QAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,gBAAgB,CAAC,oBAAoB,CAAC;YAC1E,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,MAAM,EAAE,EAAE;gBAC1D,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,KAAK;gBACnC,KAAK,EAAE,QAAQ,CAAC,iBAAiB,CAAC,KAAK;gBACvC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,SAAS;aAC1C,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;YACtC,OAAO,QAAQ,CAAC;QAElB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,MAAM,GAAG,EAAE,KAAK,CAAC,CAAC;YAClE,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,mBAAmB,CAAC,MAAc,EAAE,UAAe;QACvD,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,MAAM,EAAE,CAAC,CAAC;YAE3D,sBAAsB;YACtB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAE9D,0CAA0C;YAC1C,MAAM,MAAM,GAAgB;gBAC1B,MAAM;gBACN,MAAM,EAAE,MAAM;gBACd,UAAU,EAAE,CAAC;gBACb,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC;YAEF,qCAAqC;YACrC,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,IAAI,QAAQ,CAAC,iBAAiB,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;gBACrF,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;gBACtB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC5F,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;gBAC/D,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC;gBACrC,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,eAAe;gBAChE,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,iBAAiB;YACtE,CAAC;iBAAM,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,iBAAiB,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;gBAC7F,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;gBACvB,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC5F,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;gBAC/D,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC;gBACrC,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,eAAe;gBAChE,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,iBAAiB;YACtE,CAAC;YAED,6CAA6C;YAC7C,IAAI,QAAQ,CAAC,cAAc,CAAC,KAAK,KAAK,MAAM,EAAE,CAAC;gBAC7C,MAAM,CAAC,UAAU,IAAI,GAAG,CAAC;gBACzB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;YACnE,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,MAAM,EAAE,EAAE;gBACxD,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,UAAU,EAAE,MAAM,CAAC,UAAU;aAC9B,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YACjC,OAAO,MAAM,CAAC;QAEhB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sCAAsC,MAAM,GAAG,EAAE,KAAK,CAAC,CAAC;YAC1E,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc,CAAC,WAAgB;QACnC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;YAChC,OAAO;QACT,CAAC;QAED,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,EAAE;gBAC9C,MAAM,EAAE,WAAW,CAAC,MAAM;gBAC1B,OAAO,EAAE,WAAW,CAAC,UAAU;aAChC,CAAC,CAAC;QAEL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe;QACnB,MAAM,MAAM,GAAmB;YAC7B,SAAS,EAAE,IAAI;YACf,UAAU,EAAE;gBACV,SAAS,EAAE,KAAK;gBAChB,cAAc,EAAE,KAAK;gBACrB,eAAe,EAAE,KAAK;gBACtB,eAAe,EAAE,KAAK;gBACtB,eAAe,EAAE,KAAK;aACvB;YACD,WAAW,EAAE;gBACX,YAAY,EAAE,CAAC;gBACf,QAAQ,EAAE,CAAC;gBACX,WAAW,EAAE,CAAC;gBACd,QAAQ,EAAE,CAAC;aACZ;YACD,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;SACb,CAAC;QAEF,IAAI,CAAC;YACH,yBAAyB;YACzB,MAAM,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;YAC/D,MAAM,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;YACnE,MAAM,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;gBACtE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1C,MAAM,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;gBAC9D,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1C,MAAM,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;YAErE,0BAA0B;YAC1B,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;YAC5D,MAAM,CAAC,WAAW,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;YAC3D,MAAM,CAAC,WAAW,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;YACrD,MAAM,CAAC,WAAW,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAEnE,iBAAiB;YACjB,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YAE5E,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;gBACtB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAyC,CAAC,CAAC;YAChE,CAAC;YAED,wBAAwB;YACxB,IAAI,MAAM,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;gBAC5E,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YACrD,CAAC;YAED,IAAI,MAAM,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;gBAC3E,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAClD,CAAC;QAEH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,KAAK,EAAE,CAAC,CAAC;QACtD,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB;QAC9B,IAAI,CAAC;YACH,kBAAkB;YAClB,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CACxD,+DAA+D,CAChE,CAAC;YAEF,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC;gBAC9C,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAC/D,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QAElD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;YACzD,MAAM,IAAI,KAAK,CAAC,gCAAgC,KAAK,EAAE,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED;;OAEG;IACK,uBAAuB;QAC7B,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;YAC7C,IAAI,CAAC;gBACH,8BAA8B;gBAC9B,MAAM,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;gBAEzC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;oBAC7B,kCAAkC;oBAClC,MAAM,cAAc,GAAG;wBACrB,MAAM;wBACN,KAAK,EAAE,KAAK;wBACZ,MAAM,EAAE,OAAO;wBACf,SAAS,EAAE,IAAI,IAAI,EAAE;qBACtB,CAAC;oBAEF,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;gBACnD,CAAC;YAEH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YACzD,CAAC;QACH,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,0BAA0B;QAEtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;IACzD,CAAC;IAED;;OAEG;IACK,qBAAqB;QAC3B,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;YAChD,IAAI,CAAC;gBACH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;gBAC5C,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;oBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;oBACjE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,wBAAwB;QAEpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,mBAAmB;QAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;YAC5D,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;QAChC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,SAAS;QAOP,OAAO;YACL,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;YAC3C,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB;YAC3D,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;SACtB,CAAC;IACJ,CAAC;CACF;AAlcD,4BAkcC;AAED,kBAAe,QAAQ,CAAC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\ai-engine.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - AI ENGINE\r\n * =============================================================================\r\n * \r\n * Core AI engine that provides intelligent market analysis, trade signal\r\n * generation, and adaptive learning capabilities using Google Gemini AI.\r\n * \r\n * Features:\r\n * - Market sentiment analysis\r\n * - Trade signal generation\r\n * - Risk assessment\r\n * - Performance prediction\r\n * - Adaptive learning\r\n * - Anomaly detection\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { Logger } from '../core/logging/logger';\r\nimport { LLMEngine } from './llm-engine';\r\nimport { MarketAnalyzer } from './market-analyzer';\r\nimport { AnomalyDetector } from './anomaly-detector';\r\nimport { AdaptiveLearner } from './adaptive-learner';\r\nimport { ResourceMonitor } from './resource-monitor';\r\n\r\n/**\r\n * AI Engine configuration interface\r\n */\r\nexport interface AIEngineConfig {\r\n  llmProvider: 'google' | 'openai' | 'anthropic';\r\n  modelName: string;\r\n  apiKey: string;\r\n  maxTokens: number;\r\n  temperature: number;\r\n  enableLearning: boolean;\r\n  enableAnomalyDetection: boolean;\r\n  resourceLimits: {\r\n    maxMemoryMB: number;\r\n    maxCpuPercent: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Market analysis result interface\r\n */\r\nexport interface MarketAnalysis {\r\n  symbol: string;\r\n  timestamp: Date;\r\n  sentiment: {\r\n    score: number; // -1 to 1\r\n    confidence: number; // 0 to 1\r\n    factors: string[];\r\n  };\r\n  technicalAnalysis: {\r\n    trend: 'bullish' | 'bearish' | 'neutral';\r\n    strength: number; // 0 to 1\r\n    support: number;\r\n    resistance: number;\r\n    indicators: Record<string, number>;\r\n  };\r\n  fundamentalAnalysis: {\r\n    score: number; // -1 to 1\r\n    factors: string[];\r\n  };\r\n  prediction: {\r\n    direction: 'up' | 'down' | 'sideways';\r\n    confidence: number; // 0 to 1\r\n    timeframe: string;\r\n    targetPrice?: number;\r\n  };\r\n  riskAssessment: {\r\n    level: 'low' | 'medium' | 'high';\r\n    factors: string[];\r\n    score: number; // 0 to 1\r\n  };\r\n}\r\n\r\n/**\r\n * Trade signal interface\r\n */\r\nexport interface TradeSignal {\r\n  symbol: string;\r\n  action: 'buy' | 'sell' | 'hold';\r\n  confidence: number; // 0 to 1\r\n  reasoning: string[];\r\n  entryPrice?: number;\r\n  stopLoss?: number;\r\n  takeProfit?: number;\r\n  positionSize?: number;\r\n  timeframe: string;\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * AI system health interface\r\n */\r\nexport interface AISystemHealth {\r\n  isHealthy: boolean;\r\n  components: {\r\n    llmEngine: boolean;\r\n    marketAnalyzer: boolean;\r\n    anomalyDetector: boolean;\r\n    adaptiveLearner: boolean;\r\n    resourceMonitor: boolean;\r\n  };\r\n  performance: {\r\n    responseTime: number;\r\n    accuracy: number;\r\n    memoryUsage: number;\r\n    cpuUsage: number;\r\n  };\r\n  lastUpdate: Date;\r\n  errors: string[];\r\n  warnings: string[];\r\n}\r\n\r\n/**\r\n * Main AI Engine class\r\n * Orchestrates all AI components and provides intelligent trading insights\r\n */\r\nexport class AIEngine extends EventEmitter {\r\n  private logger: Logger;\r\n  private config: AIEngineConfig;\r\n  private llmEngine: LLMEngine;\r\n  private marketAnalyzer: MarketAnalyzer;\r\n  private anomalyDetector: AnomalyDetector;\r\n  private adaptiveLearner: AdaptiveLearner;\r\n  private resourceMonitor: ResourceMonitor;\r\n  private isInitialized: boolean = false;\r\n  private isRunning: boolean = false;\r\n  private analysisInterval: NodeJS.Timeout | null = null;\r\n  private healthCheckInterval: NodeJS.Timeout | null = null;\r\n\r\n  constructor(config: AIEngineConfig) {\r\n    super();\r\n    this.logger = new Logger('AIEngine');\r\n    this.config = config;\r\n\r\n    // Initialize AI components\r\n    this.llmEngine = new LLMEngine({\r\n      provider: config.llmProvider,\r\n      modelName: config.modelName,\r\n      apiKey: config.apiKey,\r\n      maxTokens: config.maxTokens,\r\n      temperature: config.temperature\r\n    });\r\n\r\n    this.marketAnalyzer = new MarketAnalyzer(this.llmEngine);\r\n    this.anomalyDetector = new AnomalyDetector();\r\n    this.adaptiveLearner = new AdaptiveLearner();\r\n    this.resourceMonitor = new ResourceMonitor(config.resourceLimits);\r\n\r\n    this.logger.info('AI Engine created', {\r\n      provider: config.llmProvider,\r\n      model: config.modelName,\r\n      learningEnabled: config.enableLearning,\r\n      anomalyDetectionEnabled: config.enableAnomalyDetection\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize the AI Engine\r\n   * Sets up all AI components and validates connections\r\n   */\r\n  async initialize(): Promise<void> {\r\n    try {\r\n      this.logger.info('\uD83E\uDD16 Initializing AI Engine...');\r\n\r\n      // Initialize LLM engine\r\n      await this.llmEngine.initialize();\r\n      this.logger.info('\u2705 LLM engine initialized');\r\n\r\n      // Initialize market analyzer\r\n      await this.marketAnalyzer.initialize();\r\n      this.logger.info('\u2705 Market analyzer initialized');\r\n\r\n      // Initialize anomaly detector if enabled\r\n      if (this.config.enableAnomalyDetection) {\r\n        await this.anomalyDetector.initialize();\r\n        this.logger.info('\u2705 Anomaly detector initialized');\r\n      }\r\n\r\n      // Initialize adaptive learner if enabled\r\n      if (this.config.enableLearning) {\r\n        await this.adaptiveLearner.initialize();\r\n        this.logger.info('\u2705 Adaptive learner initialized');\r\n      }\r\n\r\n      // Initialize resource monitor\r\n      await this.resourceMonitor.initialize();\r\n      this.logger.info('\u2705 Resource monitor initialized');\r\n\r\n      // Test AI capabilities\r\n      await this.testAICapabilities();\r\n      this.logger.info('\u2705 AI capabilities verified');\r\n\r\n      this.isInitialized = true;\r\n      this.logger.info('\u2705 AI Engine initialization complete');\r\n\r\n      this.emit('initialized');\r\n\r\n    } catch (error) {\r\n      this.logger.error('\u274C AI Engine initialization failed:', error);\r\n      throw new Error(`AI Engine initialization failed: ${error}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start AI operations\r\n   * Begins continuous market analysis and learning\r\n   */\r\n  async start(): Promise<void> {\r\n    if (!this.isInitialized) {\r\n      throw new Error('AI Engine must be initialized before starting');\r\n    }\r\n\r\n    if (this.isRunning) {\r\n      this.logger.warn('AI Engine is already running');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.logger.info('\uD83D\uDE80 Starting AI Engine...');\r\n\r\n      // Start continuous market analysis\r\n      this.startContinuousAnalysis();\r\n\r\n      // Start health monitoring\r\n      this.startHealthMonitoring();\r\n\r\n      // Start resource monitoring\r\n      await this.resourceMonitor.start();\r\n\r\n      this.isRunning = true;\r\n      this.logger.info('\u2705 AI Engine started successfully');\r\n\r\n      this.emit('started');\r\n\r\n    } catch (error) {\r\n      this.logger.error('\u274C Failed to start AI Engine:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop AI operations\r\n   * Gracefully shuts down all AI activities\r\n   */\r\n  async shutdown(): Promise<void> {\r\n    if (!this.isRunning) {\r\n      this.logger.warn('AI Engine is not running');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.logger.info('\uD83D\uDED1 Shutting down AI Engine...');\r\n\r\n      // Stop continuous analysis\r\n      if (this.analysisInterval) {\r\n        clearInterval(this.analysisInterval);\r\n        this.analysisInterval = null;\r\n      }\r\n\r\n      // Stop health monitoring\r\n      if (this.healthCheckInterval) {\r\n        clearInterval(this.healthCheckInterval);\r\n        this.healthCheckInterval = null;\r\n      }\r\n\r\n      // Stop resource monitoring\r\n      await this.resourceMonitor.stop();\r\n\r\n      // Save learning data if enabled\r\n      if (this.config.enableLearning) {\r\n        await this.adaptiveLearner.saveModel();\r\n      }\r\n\r\n      this.isRunning = false;\r\n      this.logger.info('\u2705 AI Engine shutdown complete');\r\n\r\n      this.emit('shutdown');\r\n\r\n    } catch (error) {\r\n      this.logger.error('\u274C Error during AI Engine shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analyze market conditions for a specific symbol\r\n   */\r\n  async analyzeMarket(symbol: string, marketData: any): Promise<MarketAnalysis> {\r\n    try {\r\n      this.logger.debug(`Analyzing market for ${symbol}`);\r\n\r\n      // Perform comprehensive market analysis\r\n      const analysis = await this.marketAnalyzer.analyze(symbol, marketData);\r\n\r\n      // Check for anomalies if enabled\r\n      if (this.config.enableAnomalyDetection) {\r\n        const anomalies = await this.anomalyDetector.detectAnomalies(marketData);\r\n        if (anomalies.length > 0) {\r\n          analysis.riskAssessment.level = 'high';\r\n          analysis.riskAssessment.factors.push(...anomalies.map(a => a.description));\r\n        }\r\n      }\r\n\r\n      // Apply learning insights if enabled\r\n      if (this.config.enableLearning) {\r\n        const learningInsights = await this.adaptiveLearner.getInsights(symbol);\r\n        analysis.prediction.confidence *= learningInsights.confidenceMultiplier;\r\n      }\r\n\r\n      this.logger.debug(`Market analysis complete for ${symbol}`, {\r\n        sentiment: analysis.sentiment.score,\r\n        trend: analysis.technicalAnalysis.trend,\r\n        prediction: analysis.prediction.direction\r\n      });\r\n\r\n      this.emit('marketAnalysis', analysis);\r\n      return analysis;\r\n\r\n    } catch (error) {\r\n      this.logger.error(`Market analysis failed for ${symbol}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate trading signal based on market analysis\r\n   */\r\n  async generateTradeSignal(symbol: string, marketData: any): Promise<TradeSignal> {\r\n    try {\r\n      this.logger.debug(`Generating trade signal for ${symbol}`);\r\n\r\n      // Get market analysis\r\n      const analysis = await this.analyzeMarket(symbol, marketData);\r\n\r\n      // Generate trade signal based on analysis\r\n      const signal: TradeSignal = {\r\n        symbol,\r\n        action: 'hold',\r\n        confidence: 0,\r\n        reasoning: [],\r\n        timeframe: '1h',\r\n        timestamp: new Date()\r\n      };\r\n\r\n      // Determine action based on analysis\r\n      if (analysis.sentiment.score > 0.3 && analysis.technicalAnalysis.trend === 'bullish') {\r\n        signal.action = 'buy';\r\n        signal.confidence = Math.min(analysis.sentiment.confidence, analysis.prediction.confidence);\r\n        signal.reasoning.push('Bullish sentiment and technical trend');\r\n        signal.entryPrice = marketData.price;\r\n        signal.stopLoss = marketData.price * (1 - 0.02); // 2% stop loss\r\n        signal.takeProfit = marketData.price * (1 + 0.06); // 6% take profit\r\n      } else if (analysis.sentiment.score < -0.3 && analysis.technicalAnalysis.trend === 'bearish') {\r\n        signal.action = 'sell';\r\n        signal.confidence = Math.min(analysis.sentiment.confidence, analysis.prediction.confidence);\r\n        signal.reasoning.push('Bearish sentiment and technical trend');\r\n        signal.entryPrice = marketData.price;\r\n        signal.stopLoss = marketData.price * (1 + 0.02); // 2% stop loss\r\n        signal.takeProfit = marketData.price * (1 - 0.06); // 6% take profit\r\n      }\r\n\r\n      // Adjust confidence based on risk assessment\r\n      if (analysis.riskAssessment.level === 'high') {\r\n        signal.confidence *= 0.5;\r\n        signal.reasoning.push('High risk detected - reduced confidence');\r\n      }\r\n\r\n      this.logger.debug(`Trade signal generated for ${symbol}`, {\r\n        action: signal.action,\r\n        confidence: signal.confidence\r\n      });\r\n\r\n      this.emit('tradeSignal', signal);\r\n      return signal;\r\n\r\n    } catch (error) {\r\n      this.logger.error(`Trade signal generation failed for ${symbol}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Learn from trade results to improve future predictions\r\n   */\r\n  async learnFromTrade(tradeResult: any): Promise<void> {\r\n    if (!this.config.enableLearning) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.adaptiveLearner.learnFromTrade(tradeResult);\r\n      this.logger.debug('Learning from trade result', {\r\n        symbol: tradeResult.symbol,\r\n        success: tradeResult.profitable\r\n      });\r\n\r\n    } catch (error) {\r\n      this.logger.error('Learning from trade failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get AI system health status\r\n   */\r\n  async getSystemHealth(): Promise<AISystemHealth> {\r\n    const health: AISystemHealth = {\r\n      isHealthy: true,\r\n      components: {\r\n        llmEngine: false,\r\n        marketAnalyzer: false,\r\n        anomalyDetector: false,\r\n        adaptiveLearner: false,\r\n        resourceMonitor: false\r\n      },\r\n      performance: {\r\n        responseTime: 0,\r\n        accuracy: 0,\r\n        memoryUsage: 0,\r\n        cpuUsage: 0\r\n      },\r\n      lastUpdate: new Date(),\r\n      errors: [],\r\n      warnings: []\r\n    };\r\n\r\n    try {\r\n      // Check component health\r\n      health.components.llmEngine = await this.llmEngine.isHealthy();\r\n      health.components.marketAnalyzer = this.marketAnalyzer.isHealthy();\r\n      health.components.anomalyDetector = this.config.enableAnomalyDetection ? \r\n        this.anomalyDetector.isHealthy() : true;\r\n      health.components.adaptiveLearner = this.config.enableLearning ? \r\n        this.adaptiveLearner.isHealthy() : true;\r\n      health.components.resourceMonitor = this.resourceMonitor.isHealthy();\r\n\r\n      // Get performance metrics\r\n      const resourceStats = await this.resourceMonitor.getStats();\r\n      health.performance.memoryUsage = resourceStats.memoryUsage;\r\n      health.performance.cpuUsage = resourceStats.cpuUsage;\r\n      health.performance.responseTime = await this.measureResponseTime();\r\n\r\n      // Overall health\r\n      health.isHealthy = Object.values(health.components).every(status => status);\r\n\r\n      if (!health.isHealthy) {\r\n        health.errors.push('One or more AI components are unhealthy');\r\n      }\r\n\r\n      // Check resource limits\r\n      if (health.performance.memoryUsage > this.config.resourceLimits.maxMemoryMB) {\r\n        health.warnings.push('Memory usage exceeds limit');\r\n      }\r\n\r\n      if (health.performance.cpuUsage > this.config.resourceLimits.maxCpuPercent) {\r\n        health.warnings.push('CPU usage exceeds limit');\r\n      }\r\n\r\n    } catch (error) {\r\n      health.isHealthy = false;\r\n      health.errors.push(`Health check failed: ${error}`);\r\n    }\r\n\r\n    return health;\r\n  }\r\n\r\n  /**\r\n   * Test AI capabilities\r\n   */\r\n  private async testAICapabilities(): Promise<void> {\r\n    try {\r\n      // Test LLM engine\r\n      const testResponse = await this.llmEngine.generateResponse(\r\n        'Analyze the current Bitcoin market sentiment in one sentence.'\r\n      );\r\n\r\n      if (!testResponse || testResponse.length < 10) {\r\n        throw new Error('LLM engine test failed - invalid response');\r\n      }\r\n\r\n      this.logger.info('AI capabilities test passed');\r\n\r\n    } catch (error) {\r\n      this.logger.error('AI capabilities test failed:', error);\r\n      throw new Error(`AI capabilities test failed: ${error}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start continuous market analysis\r\n   */\r\n  private startContinuousAnalysis(): void {\r\n    this.analysisInterval = setInterval(async () => {\r\n      try {\r\n        // Analyze major trading pairs\r\n        const symbols = ['BTC_USDT', 'ETH_USDT'];\r\n        \r\n        for (const symbol of symbols) {\r\n          // This would get real market data\r\n          const mockMarketData = {\r\n            symbol,\r\n            price: 50000,\r\n            volume: 1000000,\r\n            timestamp: new Date()\r\n          };\r\n\r\n          await this.analyzeMarket(symbol, mockMarketData);\r\n        }\r\n\r\n      } catch (error) {\r\n        this.logger.error('Continuous analysis error:', error);\r\n      }\r\n    }, 300000); // Analyze every 5 minutes\r\n\r\n    this.logger.info('Continuous market analysis started');\r\n  }\r\n\r\n  /**\r\n   * Start health monitoring\r\n   */\r\n  private startHealthMonitoring(): void {\r\n    this.healthCheckInterval = setInterval(async () => {\r\n      try {\r\n        const health = await this.getSystemHealth();\r\n        if (!health.isHealthy) {\r\n          this.logger.warn('AI system health check failed', health.errors);\r\n          this.emit('healthWarning', health);\r\n        }\r\n      } catch (error) {\r\n        this.logger.error('AI health monitoring error:', error);\r\n      }\r\n    }, 120000); // Check every 2 minutes\r\n\r\n    this.logger.info('AI health monitoring started');\r\n  }\r\n\r\n  /**\r\n   * Measure AI response time\r\n   */\r\n  private async measureResponseTime(): Promise<number> {\r\n    const startTime = Date.now();\r\n    try {\r\n      await this.llmEngine.generateResponse('Test response time');\r\n      return Date.now() - startTime;\r\n    } catch (error) {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get AI engine status for monitoring\r\n   */\r\n  getStatus(): {\r\n    isRunning: boolean;\r\n    isInitialized: boolean;\r\n    learningEnabled: boolean;\r\n    anomalyDetectionEnabled: boolean;\r\n    timestamp: number;\r\n  } {\r\n    return {\r\n      isRunning: this.isRunning,\r\n      isInitialized: this.isInitialized,\r\n      learningEnabled: this.config.enableLearning,\r\n      anomalyDetectionEnabled: this.config.enableAnomalyDetection,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\nexport default AIEngine;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "77a6c479e03720eb6362bc02e5ea20aae3b85393"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nhvlyjug3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nhvlyjug3();
cov_1nhvlyjug3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nhvlyjug3().s[1]++;
exports.AIEngine = void 0;
const events_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[3]++, require("../core/logging/logger"));
const llm_engine_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[4]++, require("./llm-engine"));
const market_analyzer_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[5]++, require("./market-analyzer"));
const anomaly_detector_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[6]++, require("./anomaly-detector"));
const adaptive_learner_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[7]++, require("./adaptive-learner"));
const resource_monitor_1 =
/* istanbul ignore next */
(cov_1nhvlyjug3().s[8]++, require("./resource-monitor"));
/**
 * Main AI Engine class
 * Orchestrates all AI components and provides intelligent trading insights
 */
class AIEngine extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  logger;
  config;
  llmEngine;
  marketAnalyzer;
  anomalyDetector;
  adaptiveLearner;
  resourceMonitor;
  isInitialized =
  /* istanbul ignore next */
  (cov_1nhvlyjug3().s[9]++, false);
  isRunning =
  /* istanbul ignore next */
  (cov_1nhvlyjug3().s[10]++, false);
  analysisInterval =
  /* istanbul ignore next */
  (cov_1nhvlyjug3().s[11]++, null);
  healthCheckInterval =
  /* istanbul ignore next */
  (cov_1nhvlyjug3().s[12]++, null);
  constructor(config) {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[0]++;
    cov_1nhvlyjug3().s[13]++;
    super();
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[14]++;
    this.logger = new logger_1.Logger('AIEngine');
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[15]++;
    this.config = config;
    // Initialize AI components
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[16]++;
    this.llmEngine = new llm_engine_1.LLMEngine({
      provider: config.llmProvider,
      modelName: config.modelName,
      apiKey: config.apiKey,
      maxTokens: config.maxTokens,
      temperature: config.temperature
    });
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[17]++;
    this.marketAnalyzer = new market_analyzer_1.MarketAnalyzer(this.llmEngine);
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[18]++;
    this.anomalyDetector = new anomaly_detector_1.AnomalyDetector();
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[19]++;
    this.adaptiveLearner = new adaptive_learner_1.AdaptiveLearner();
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[20]++;
    this.resourceMonitor = new resource_monitor_1.ResourceMonitor(config.resourceLimits);
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[21]++;
    this.logger.info('AI Engine created', {
      provider: config.llmProvider,
      model: config.modelName,
      learningEnabled: config.enableLearning,
      anomalyDetectionEnabled: config.enableAnomalyDetection
    });
  }
  /**
   * Initialize the AI Engine
   * Sets up all AI components and validates connections
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[1]++;
    cov_1nhvlyjug3().s[22]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[23]++;
      this.logger.info('🤖 Initializing AI Engine...');
      // Initialize LLM engine
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[24]++;
      await this.llmEngine.initialize();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[25]++;
      this.logger.info('✅ LLM engine initialized');
      // Initialize market analyzer
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[26]++;
      await this.marketAnalyzer.initialize();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[27]++;
      this.logger.info('✅ Market analyzer initialized');
      // Initialize anomaly detector if enabled
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[28]++;
      if (this.config.enableAnomalyDetection) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[0][0]++;
        cov_1nhvlyjug3().s[29]++;
        await this.anomalyDetector.initialize();
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[30]++;
        this.logger.info('✅ Anomaly detector initialized');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[0][1]++;
      }
      // Initialize adaptive learner if enabled
      cov_1nhvlyjug3().s[31]++;
      if (this.config.enableLearning) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[1][0]++;
        cov_1nhvlyjug3().s[32]++;
        await this.adaptiveLearner.initialize();
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[33]++;
        this.logger.info('✅ Adaptive learner initialized');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[1][1]++;
      }
      // Initialize resource monitor
      cov_1nhvlyjug3().s[34]++;
      await this.resourceMonitor.initialize();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[35]++;
      this.logger.info('✅ Resource monitor initialized');
      // Test AI capabilities
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[36]++;
      await this.testAICapabilities();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[37]++;
      this.logger.info('✅ AI capabilities verified');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[38]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[39]++;
      this.logger.info('✅ AI Engine initialization complete');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[40]++;
      this.emit('initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[41]++;
      this.logger.error('❌ AI Engine initialization failed:', error);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[42]++;
      throw new Error(`AI Engine initialization failed: ${error}`);
    }
  }
  /**
   * Start AI operations
   * Begins continuous market analysis and learning
   */
  async start() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[2]++;
    cov_1nhvlyjug3().s[43]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().b[2][0]++;
      cov_1nhvlyjug3().s[44]++;
      throw new Error('AI Engine must be initialized before starting');
    } else
    /* istanbul ignore next */
    {
      cov_1nhvlyjug3().b[2][1]++;
    }
    cov_1nhvlyjug3().s[45]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().b[3][0]++;
      cov_1nhvlyjug3().s[46]++;
      this.logger.warn('AI Engine is already running');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1nhvlyjug3().b[3][1]++;
    }
    cov_1nhvlyjug3().s[48]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[49]++;
      this.logger.info('🚀 Starting AI Engine...');
      // Start continuous market analysis
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[50]++;
      this.startContinuousAnalysis();
      // Start health monitoring
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[51]++;
      this.startHealthMonitoring();
      // Start resource monitoring
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[52]++;
      await this.resourceMonitor.start();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[53]++;
      this.isRunning = true;
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[54]++;
      this.logger.info('✅ AI Engine started successfully');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[55]++;
      this.emit('started');
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[56]++;
      this.logger.error('❌ Failed to start AI Engine:', error);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[57]++;
      throw error;
    }
  }
  /**
   * Stop AI operations
   * Gracefully shuts down all AI activities
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[3]++;
    cov_1nhvlyjug3().s[58]++;
    if (!this.isRunning) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().b[4][0]++;
      cov_1nhvlyjug3().s[59]++;
      this.logger.warn('AI Engine is not running');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[60]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1nhvlyjug3().b[4][1]++;
    }
    cov_1nhvlyjug3().s[61]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[62]++;
      this.logger.info('🛑 Shutting down AI Engine...');
      // Stop continuous analysis
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[63]++;
      if (this.analysisInterval) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[5][0]++;
        cov_1nhvlyjug3().s[64]++;
        clearInterval(this.analysisInterval);
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[65]++;
        this.analysisInterval = null;
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[5][1]++;
      }
      // Stop health monitoring
      cov_1nhvlyjug3().s[66]++;
      if (this.healthCheckInterval) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[6][0]++;
        cov_1nhvlyjug3().s[67]++;
        clearInterval(this.healthCheckInterval);
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[68]++;
        this.healthCheckInterval = null;
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[6][1]++;
      }
      // Stop resource monitoring
      cov_1nhvlyjug3().s[69]++;
      await this.resourceMonitor.stop();
      // Save learning data if enabled
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[70]++;
      if (this.config.enableLearning) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[7][0]++;
        cov_1nhvlyjug3().s[71]++;
        await this.adaptiveLearner.saveModel();
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[7][1]++;
      }
      cov_1nhvlyjug3().s[72]++;
      this.isRunning = false;
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[73]++;
      this.logger.info('✅ AI Engine shutdown complete');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[74]++;
      this.emit('shutdown');
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[75]++;
      this.logger.error('❌ Error during AI Engine shutdown:', error);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[76]++;
      throw error;
    }
  }
  /**
   * Analyze market conditions for a specific symbol
   */
  async analyzeMarket(symbol, marketData) {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[4]++;
    cov_1nhvlyjug3().s[77]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[78]++;
      this.logger.debug(`Analyzing market for ${symbol}`);
      // Perform comprehensive market analysis
      const analysis =
      /* istanbul ignore next */
      (cov_1nhvlyjug3().s[79]++, await this.marketAnalyzer.analyze(symbol, marketData));
      // Check for anomalies if enabled
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[80]++;
      if (this.config.enableAnomalyDetection) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[8][0]++;
        const anomalies =
        /* istanbul ignore next */
        (cov_1nhvlyjug3().s[81]++, await this.anomalyDetector.detectAnomalies(marketData));
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[82]++;
        if (anomalies.length > 0) {
          /* istanbul ignore next */
          cov_1nhvlyjug3().b[9][0]++;
          cov_1nhvlyjug3().s[83]++;
          analysis.riskAssessment.level = 'high';
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[84]++;
          analysis.riskAssessment.factors.push(...anomalies.map(a => {
            /* istanbul ignore next */
            cov_1nhvlyjug3().f[5]++;
            cov_1nhvlyjug3().s[85]++;
            return a.description;
          }));
        } else
        /* istanbul ignore next */
        {
          cov_1nhvlyjug3().b[9][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[8][1]++;
      }
      // Apply learning insights if enabled
      cov_1nhvlyjug3().s[86]++;
      if (this.config.enableLearning) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[10][0]++;
        const learningInsights =
        /* istanbul ignore next */
        (cov_1nhvlyjug3().s[87]++, await this.adaptiveLearner.getInsights(symbol));
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[88]++;
        analysis.prediction.confidence *= learningInsights.confidenceMultiplier;
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[10][1]++;
      }
      cov_1nhvlyjug3().s[89]++;
      this.logger.debug(`Market analysis complete for ${symbol}`, {
        sentiment: analysis.sentiment.score,
        trend: analysis.technicalAnalysis.trend,
        prediction: analysis.prediction.direction
      });
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[90]++;
      this.emit('marketAnalysis', analysis);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[91]++;
      return analysis;
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[92]++;
      this.logger.error(`Market analysis failed for ${symbol}:`, error);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[93]++;
      throw error;
    }
  }
  /**
   * Generate trading signal based on market analysis
   */
  async generateTradeSignal(symbol, marketData) {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[6]++;
    cov_1nhvlyjug3().s[94]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[95]++;
      this.logger.debug(`Generating trade signal for ${symbol}`);
      // Get market analysis
      const analysis =
      /* istanbul ignore next */
      (cov_1nhvlyjug3().s[96]++, await this.analyzeMarket(symbol, marketData));
      // Generate trade signal based on analysis
      const signal =
      /* istanbul ignore next */
      (cov_1nhvlyjug3().s[97]++, {
        symbol,
        action: 'hold',
        confidence: 0,
        reasoning: [],
        timeframe: '1h',
        timestamp: new Date()
      });
      // Determine action based on analysis
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[98]++;
      if (
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[12][0]++, analysis.sentiment.score > 0.3) &&
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[12][1]++, analysis.technicalAnalysis.trend === 'bullish')) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[11][0]++;
        cov_1nhvlyjug3().s[99]++;
        signal.action = 'buy';
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[100]++;
        signal.confidence = Math.min(analysis.sentiment.confidence, analysis.prediction.confidence);
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[101]++;
        signal.reasoning.push('Bullish sentiment and technical trend');
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[102]++;
        signal.entryPrice = marketData.price;
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[103]++;
        signal.stopLoss = marketData.price * (1 - 0.02); // 2% stop loss
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[104]++;
        signal.takeProfit = marketData.price * (1 + 0.06); // 6% take profit
      } else {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[11][1]++;
        cov_1nhvlyjug3().s[105]++;
        if (
        /* istanbul ignore next */
        (cov_1nhvlyjug3().b[14][0]++, analysis.sentiment.score < -0.3) &&
        /* istanbul ignore next */
        (cov_1nhvlyjug3().b[14][1]++, analysis.technicalAnalysis.trend === 'bearish')) {
          /* istanbul ignore next */
          cov_1nhvlyjug3().b[13][0]++;
          cov_1nhvlyjug3().s[106]++;
          signal.action = 'sell';
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[107]++;
          signal.confidence = Math.min(analysis.sentiment.confidence, analysis.prediction.confidence);
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[108]++;
          signal.reasoning.push('Bearish sentiment and technical trend');
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[109]++;
          signal.entryPrice = marketData.price;
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[110]++;
          signal.stopLoss = marketData.price * (1 + 0.02); // 2% stop loss
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[111]++;
          signal.takeProfit = marketData.price * (1 - 0.06); // 6% take profit
        } else
        /* istanbul ignore next */
        {
          cov_1nhvlyjug3().b[13][1]++;
        }
      }
      // Adjust confidence based on risk assessment
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[112]++;
      if (analysis.riskAssessment.level === 'high') {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[15][0]++;
        cov_1nhvlyjug3().s[113]++;
        signal.confidence *= 0.5;
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[114]++;
        signal.reasoning.push('High risk detected - reduced confidence');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[15][1]++;
      }
      cov_1nhvlyjug3().s[115]++;
      this.logger.debug(`Trade signal generated for ${symbol}`, {
        action: signal.action,
        confidence: signal.confidence
      });
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[116]++;
      this.emit('tradeSignal', signal);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[117]++;
      return signal;
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[118]++;
      this.logger.error(`Trade signal generation failed for ${symbol}:`, error);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[119]++;
      throw error;
    }
  }
  /**
   * Learn from trade results to improve future predictions
   */
  async learnFromTrade(tradeResult) {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[7]++;
    cov_1nhvlyjug3().s[120]++;
    if (!this.config.enableLearning) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().b[16][0]++;
      cov_1nhvlyjug3().s[121]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1nhvlyjug3().b[16][1]++;
    }
    cov_1nhvlyjug3().s[122]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[123]++;
      await this.adaptiveLearner.learnFromTrade(tradeResult);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[124]++;
      this.logger.debug('Learning from trade result', {
        symbol: tradeResult.symbol,
        success: tradeResult.profitable
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[125]++;
      this.logger.error('Learning from trade failed:', error);
    }
  }
  /**
   * Get AI system health status
   */
  async getSystemHealth() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[8]++;
    const health =
    /* istanbul ignore next */
    (cov_1nhvlyjug3().s[126]++, {
      isHealthy: true,
      components: {
        llmEngine: false,
        marketAnalyzer: false,
        anomalyDetector: false,
        adaptiveLearner: false,
        resourceMonitor: false
      },
      performance: {
        responseTime: 0,
        accuracy: 0,
        memoryUsage: 0,
        cpuUsage: 0
      },
      lastUpdate: new Date(),
      errors: [],
      warnings: []
    });
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[127]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[128]++;
      // Check component health
      health.components.llmEngine = await this.llmEngine.isHealthy();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[129]++;
      health.components.marketAnalyzer = this.marketAnalyzer.isHealthy();
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[130]++;
      health.components.anomalyDetector = this.config.enableAnomalyDetection ?
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[17][0]++, this.anomalyDetector.isHealthy()) :
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[17][1]++, true);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[131]++;
      health.components.adaptiveLearner = this.config.enableLearning ?
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[18][0]++, this.adaptiveLearner.isHealthy()) :
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[18][1]++, true);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[132]++;
      health.components.resourceMonitor = this.resourceMonitor.isHealthy();
      // Get performance metrics
      const resourceStats =
      /* istanbul ignore next */
      (cov_1nhvlyjug3().s[133]++, await this.resourceMonitor.getStats());
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[134]++;
      health.performance.memoryUsage = resourceStats.memoryUsage;
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[135]++;
      health.performance.cpuUsage = resourceStats.cpuUsage;
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[136]++;
      health.performance.responseTime = await this.measureResponseTime();
      // Overall health
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[137]++;
      health.isHealthy = Object.values(health.components).every(status => {
        /* istanbul ignore next */
        cov_1nhvlyjug3().f[9]++;
        cov_1nhvlyjug3().s[138]++;
        return status;
      });
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[139]++;
      if (!health.isHealthy) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[19][0]++;
        cov_1nhvlyjug3().s[140]++;
        health.errors.push('One or more AI components are unhealthy');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[19][1]++;
      }
      // Check resource limits
      cov_1nhvlyjug3().s[141]++;
      if (health.performance.memoryUsage > this.config.resourceLimits.maxMemoryMB) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[20][0]++;
        cov_1nhvlyjug3().s[142]++;
        health.warnings.push('Memory usage exceeds limit');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[20][1]++;
      }
      cov_1nhvlyjug3().s[143]++;
      if (health.performance.cpuUsage > this.config.resourceLimits.maxCpuPercent) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[21][0]++;
        cov_1nhvlyjug3().s[144]++;
        health.warnings.push('CPU usage exceeds limit');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[21][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[145]++;
      health.isHealthy = false;
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[146]++;
      health.errors.push(`Health check failed: ${error}`);
    }
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[147]++;
    return health;
  }
  /**
   * Test AI capabilities
   */
  async testAICapabilities() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[10]++;
    cov_1nhvlyjug3().s[148]++;
    try {
      // Test LLM engine
      const testResponse =
      /* istanbul ignore next */
      (cov_1nhvlyjug3().s[149]++, await this.llmEngine.generateResponse('Analyze the current Bitcoin market sentiment in one sentence.'));
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[150]++;
      if (
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[23][0]++, !testResponse) ||
      /* istanbul ignore next */
      (cov_1nhvlyjug3().b[23][1]++, testResponse.length < 10)) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().b[22][0]++;
        cov_1nhvlyjug3().s[151]++;
        throw new Error('LLM engine test failed - invalid response');
      } else
      /* istanbul ignore next */
      {
        cov_1nhvlyjug3().b[22][1]++;
      }
      cov_1nhvlyjug3().s[152]++;
      this.logger.info('AI capabilities test passed');
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[153]++;
      this.logger.error('AI capabilities test failed:', error);
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[154]++;
      throw new Error(`AI capabilities test failed: ${error}`);
    }
  }
  /**
   * Start continuous market analysis
   */
  startContinuousAnalysis() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[11]++;
    cov_1nhvlyjug3().s[155]++;
    this.analysisInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_1nhvlyjug3().f[12]++;
      cov_1nhvlyjug3().s[156]++;
      try {
        // Analyze major trading pairs
        const symbols =
        /* istanbul ignore next */
        (cov_1nhvlyjug3().s[157]++, ['BTC_USDT', 'ETH_USDT']);
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[158]++;
        for (const symbol of symbols) {
          // This would get real market data
          const mockMarketData =
          /* istanbul ignore next */
          (cov_1nhvlyjug3().s[159]++, {
            symbol,
            price: 50000,
            volume: 1000000,
            timestamp: new Date()
          });
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[160]++;
          await this.analyzeMarket(symbol, mockMarketData);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[161]++;
        this.logger.error('Continuous analysis error:', error);
      }
    }, 300000); // Analyze every 5 minutes
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[162]++;
    this.logger.info('Continuous market analysis started');
  }
  /**
   * Start health monitoring
   */
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[13]++;
    cov_1nhvlyjug3().s[163]++;
    this.healthCheckInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_1nhvlyjug3().f[14]++;
      cov_1nhvlyjug3().s[164]++;
      try {
        const health =
        /* istanbul ignore next */
        (cov_1nhvlyjug3().s[165]++, await this.getSystemHealth());
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[166]++;
        if (!health.isHealthy) {
          /* istanbul ignore next */
          cov_1nhvlyjug3().b[24][0]++;
          cov_1nhvlyjug3().s[167]++;
          this.logger.warn('AI system health check failed', health.errors);
          /* istanbul ignore next */
          cov_1nhvlyjug3().s[168]++;
          this.emit('healthWarning', health);
        } else
        /* istanbul ignore next */
        {
          cov_1nhvlyjug3().b[24][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1nhvlyjug3().s[169]++;
        this.logger.error('AI health monitoring error:', error);
      }
    }, 120000); // Check every 2 minutes
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[170]++;
    this.logger.info('AI health monitoring started');
  }
  /**
   * Measure AI response time
   */
  async measureResponseTime() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[15]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1nhvlyjug3().s[171]++, Date.now());
    /* istanbul ignore next */
    cov_1nhvlyjug3().s[172]++;
    try {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[173]++;
      await this.llmEngine.generateResponse('Test response time');
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[174]++;
      return Date.now() - startTime;
    } catch (error) {
      /* istanbul ignore next */
      cov_1nhvlyjug3().s[175]++;
      return -1;
    }
  }
  /**
   * Get AI engine status for monitoring
   */
  getStatus() {
    /* istanbul ignore next */
    cov_1nhvlyjug3().f[16]++;
    cov_1nhvlyjug3().s[176]++;
    return {
      isRunning: this.isRunning,
      isInitialized: this.isInitialized,
      learningEnabled: this.config.enableLearning,
      anomalyDetectionEnabled: this.config.enableAnomalyDetection,
      timestamp: Date.now()
    };
  }
}
/* istanbul ignore next */
cov_1nhvlyjug3().s[177]++;
exports.AIEngine = AIEngine;
/* istanbul ignore next */
cov_1nhvlyjug3().s[178]++;
exports.default = AIEngine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,