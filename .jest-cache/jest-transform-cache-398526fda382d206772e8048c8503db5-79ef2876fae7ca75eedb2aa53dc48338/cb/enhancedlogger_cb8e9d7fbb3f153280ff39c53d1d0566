7c23b59babccae37e4fb7a4e4ce785c9
"use strict";

/**
 * =============================================================================
 * ENHANCED LOGGER WITH RICH FORMATTING AND VISUAL INDICATORS
 * =============================================================================
 *
 * This module extends the base logger with rich formatting, emojis, and
 * visual indicators for better log readability and monitoring.
 *
 * Features:
 * - Emoji-based status indicators
 * - Color-coded log levels
 * - Contextual information enrichment
 * - Performance metrics integration
 * - Visual progress indicators
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1ztmiz16ba() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\enhanced-logger.ts";
  var hash = "0e94b9bb48d30eadbedac948ae4bfb29ccfd3ef2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\enhanced-logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "2": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "3": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 97
        }
      },
      "4": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "5": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "6": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 81,
          column: 2
        }
      },
      "7": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 94,
          column: 2
        }
      },
      "8": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 99,
          column: 34
        }
      },
      "9": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 33
        }
      },
      "10": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 29
        }
      },
      "11": {
        start: {
          line: 108,
          column: 33
        },
        end: {
          line: 108,
          column: 54
        }
      },
      "12": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "13": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 50
        }
      },
      "14": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 22
        }
      },
      "15": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 50
        }
      },
      "16": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 22
        }
      },
      "17": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 51
        }
      },
      "18": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "19": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 51
        }
      },
      "20": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 22
        }
      },
      "21": {
        start: {
          line: 128,
          column: 22
        },
        end: {
          line: 128,
          column: 50
        }
      },
      "22": {
        start: {
          line: 129,
          column: 22
        },
        end: {
          line: 129,
          column: 46
        }
      },
      "23": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "24": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "25": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 46
        }
      },
      "26": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 41
        }
      },
      "27": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "28": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "29": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "30": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "31": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 94
        }
      },
      "32": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "33": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 41
        }
      },
      "34": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 83
        }
      },
      "35": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 68
        }
      },
      "36": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "37": {
        start: {
          line: 163,
          column: 22
        },
        end: {
          line: 163,
          column: 42
        }
      },
      "38": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 70
        }
      },
      "39": {
        start: {
          line: 165,
          column: 29
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "40": {
        start: {
          line: 172,
          column: 22
        },
        end: {
          line: 173,
          column: 50
        }
      },
      "41": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 63
        }
      },
      "42": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 42
        }
      },
      "43": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 26
        }
      },
      "44": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "45": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "46": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 48
        }
      },
      "47": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 32
        }
      },
      "48": {
        start: {
          line: 187,
          column: 17
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "49": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 50
        }
      },
      "50": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 31
        }
      },
      "51": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 50
        }
      },
      "52": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 73
        }
      },
      "53": {
        start: {
          line: 196,
          column: 29
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "54": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "55": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 51
        }
      },
      "56": {
        start: {
          line: 211,
          column: 29
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "57": {
        start: {
          line: 217,
          column: 22
        },
        end: {
          line: 217,
          column: 42
        }
      },
      "58": {
        start: {
          line: 218,
          column: 22
        },
        end: {
          line: 218,
          column: 58
        }
      },
      "59": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "60": {
        start: {
          line: 220,
          column: 33
        },
        end: {
          line: 221,
          column: 79
        }
      },
      "61": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 57
        }
      },
      "62": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "63": {
        start: {
          line: 231,
          column: 22
        },
        end: {
          line: 231,
          column: 89
        }
      },
      "64": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 63
        }
      },
      "65": {
        start: {
          line: 238,
          column: 32
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "66": {
        start: {
          line: 243,
          column: 22
        },
        end: {
          line: 243,
          column: 48
        }
      },
      "67": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 117
        }
      },
      "68": {
        start: {
          line: 245,
          column: 29
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "69": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 77
        }
      },
      "70": {
        start: {
          line: 259,
          column: 30
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "71": {
        start: {
          line: 264,
          column: 29
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "72": {
        start: {
          line: 269,
          column: 29
        },
        end: {
          line: 269,
          column: 51
        }
      },
      "73": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 48
        }
      },
      "74": {
        start: {
          line: 271,
          column: 22
        },
        end: {
          line: 271,
          column: 87
        }
      },
      "75": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "76": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 42
        }
      },
      "77": {
        start: {
          line: 275,
          column: 29
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "78": {
        start: {
          line: 282,
          column: 22
        },
        end: {
          line: 282,
          column: 60
        }
      },
      "79": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 69
        }
      },
      "80": {
        start: {
          line: 289,
          column: 31
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "81": {
        start: {
          line: 295,
          column: 22
        },
        end: {
          line: 295,
          column: 46
        }
      },
      "82": {
        start: {
          line: 296,
          column: 24
        },
        end: {
          line: 296,
          column: 97
        }
      },
      "83": {
        start: {
          line: 297,
          column: 29
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "84": {
        start: {
          line: 304,
          column: 22
        },
        end: {
          line: 305,
          column: 51
        }
      },
      "85": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 84
        }
      },
      "86": {
        start: {
          line: 312,
          column: 27
        },
        end: {
          line: 312,
          column: 62
        }
      },
      "87": {
        start: {
          line: 313,
          column: 28
        },
        end: {
          line: 313,
          column: 62
        }
      },
      "88": {
        start: {
          line: 314,
          column: 22
        },
        end: {
          line: 314,
          column: 93
        }
      },
      "89": {
        start: {
          line: 315,
          column: 24
        },
        end: {
          line: 315,
          column: 100
        }
      },
      "90": {
        start: {
          line: 316,
          column: 29
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "91": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 64
        }
      },
      "92": {
        start: {
          line: 330,
          column: 23
        },
        end: {
          line: 330,
          column: 61
        }
      },
      "93": {
        start: {
          line: 331,
          column: 22
        },
        end: {
          line: 331,
          column: 36
        }
      },
      "94": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 54
        }
      },
      "95": {
        start: {
          line: 338,
          column: 24
        },
        end: {
          line: 338,
          column: 66
        }
      },
      "96": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 59
        }
      },
      "97": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 59
        }
      },
      "98": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 58
        }
      },
      "99": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 40
        }
      },
      "100": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 39
        }
      },
      "101": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 368,
          column: 10
        }
      },
      "102": {
        start: {
          line: 371,
          column: 0
        },
        end: {
          line: 371,
          column: 40
        }
      },
      "103": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 373,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 57
          }
        },
        loc: {
          start: {
            line: 21,
            column: 71
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 101
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 46
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 107
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 72
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 127
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 54
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 155
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 57
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 179
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 52
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 210
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 72
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 237
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 54
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 258
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 57
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 288
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 49
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 311
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 46
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 329
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 32
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 337
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 28
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 344
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 27
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 350
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        loc: {
          start: {
            line: 356,
            column: 19
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 356
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 25
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 363
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 23,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 23,
            column: 1
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 22,
            column: 40
          }
        }, {
          start: {
            line: 22,
            column: 43
          },
          end: {
            line: 22,
            column: 61
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 15
          }
        }, {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 33
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 22
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 22
          }
        }, {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 22
          }
        }, {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 121,
            column: 22
          }
        }],
        line: 109
      },
      "4": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "5": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "6": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 32
          },
          end: {
            line: 145,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 45
          },
          end: {
            line: 145,
            column: 69
          }
        }, {
          start: {
            line: 145,
            column: 72
          },
          end: {
            line: 145,
            column: 94
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 172,
            column: 22
          },
          end: {
            line: 173,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 46
          },
          end: {
            line: 172,
            column: 53
          }
        }, {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 50
          }
        }],
        line: 172
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 35
          },
          end: {
            line: 173,
            column: 41
          }
        }, {
          start: {
            line: 173,
            column: 44
          },
          end: {
            line: 173,
            column: 50
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "11": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 193,
            column: 13
          }
        }],
        line: 183
      },
      "12": {
        loc: {
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: 191,
            column: 17
          },
          end: {
            line: 193,
            column: 13
          }
        }],
        line: 187
      },
      "13": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "14": {
        loc: {
          start: {
            line: 220,
            column: 33
          },
          end: {
            line: 221,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 49
          },
          end: {
            line: 220,
            column: 71
          }
        }, {
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 221,
            column: 79
          }
        }],
        line: 220
      },
      "15": {
        loc: {
          start: {
            line: 221,
            column: 16
          },
          end: {
            line: 221,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 32
          },
          end: {
            line: 221,
            column: 54
          }
        }, {
          start: {
            line: 221,
            column: 57
          },
          end: {
            line: 221,
            column: 79
          }
        }],
        line: 221
      },
      "16": {
        loc: {
          start: {
            line: 231,
            column: 22
          },
          end: {
            line: 231,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 74
          },
          end: {
            line: 231,
            column: 80
          }
        }, {
          start: {
            line: 231,
            column: 83
          },
          end: {
            line: 231,
            column: 89
          }
        }],
        line: 231
      },
      "17": {
        loc: {
          start: {
            line: 231,
            column: 22
          },
          end: {
            line: 231,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 22
          },
          end: {
            line: 231,
            column: 47
          }
        }, {
          start: {
            line: 231,
            column: 51
          },
          end: {
            line: 231,
            column: 71
          }
        }],
        line: 231
      },
      "18": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "19": {
        loc: {
          start: {
            line: 282,
            column: 22
          },
          end: {
            line: 282,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 44
          },
          end: {
            line: 282,
            column: 51
          }
        }, {
          start: {
            line: 282,
            column: 54
          },
          end: {
            line: 282,
            column: 60
          }
        }],
        line: 282
      },
      "20": {
        loc: {
          start: {
            line: 304,
            column: 22
          },
          end: {
            line: 305,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 304,
            column: 71
          },
          end: {
            line: 304,
            column: 78
          }
        }, {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 305,
            column: 51
          }
        }],
        line: 304
      },
      "21": {
        loc: {
          start: {
            line: 304,
            column: 22
          },
          end: {
            line: 304,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 22
          },
          end: {
            line: 304,
            column: 45
          }
        }, {
          start: {
            line: 304,
            column: 49
          },
          end: {
            line: 304,
            column: 68
          }
        }],
        line: 304
      },
      "22": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 305,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 36
          },
          end: {
            line: 305,
            column: 42
          }
        }, {
          start: {
            line: 305,
            column: 45
          },
          end: {
            line: 305,
            column: 51
          }
        }],
        line: 305
      },
      "23": {
        loc: {
          start: {
            line: 314,
            column: 22
          },
          end: {
            line: 314,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 43
          },
          end: {
            line: 314,
            column: 68
          }
        }, {
          start: {
            line: 314,
            column: 71
          },
          end: {
            line: 314,
            column: 93
          }
        }],
        line: 314
      },
      "24": {
        loc: {
          start: {
            line: 329,
            column: 34
          },
          end: {
            line: 329,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 329,
            column: 42
          },
          end: {
            line: 329,
            column: 44
          }
        }],
        line: 329
      },
      "25": {
        loc: {
          start: {
            line: 338,
            column: 24
          },
          end: {
            line: 338,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 24
          },
          end: {
            line: 338,
            column: 61
          }
        }, {
          start: {
            line: 338,
            column: 65
          },
          end: {
            line: 338,
            column: 66
          }
        }],
        line: 338
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\enhanced-logger.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\logging\\enhanced-logger.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * ENHANCED LOGGER WITH RICH FORMATTING AND VISUAL INDICATORS\r\n * =============================================================================\r\n * \r\n * This module extends the base logger with rich formatting, emojis, and\r\n * visual indicators for better log readability and monitoring.\r\n * \r\n * Features:\r\n * - Emoji-based status indicators\r\n * - Color-coded log levels\r\n * - Contextual information enrichment\r\n * - Performance metrics integration\r\n * - Visual progress indicators\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * =============================================================================\r\n */\r\n\r\nimport { Logger, LogMetadata } from './logger';\r\nimport chalk from 'chalk';\r\n\r\n/**\r\n * Emoji mappings for different log types and statuses\r\n */\r\nexport const LogEmojis = {\r\n  // System status\r\n  SUCCESS: '\u2705',\r\n  ERROR: '\u274C',\r\n  WARNING: '\u26A0\uFE0F',\r\n  INFO: '\u2139\uFE0F',\r\n  DEBUG: '\uD83D\uDD0D',\r\n  \r\n  // Trading operations\r\n  BUY: '\uD83D\uDCC8',\r\n  SELL: '\uD83D\uDCC9',\r\n  PROFIT: '\uD83D\uDCB0',\r\n  LOSS: '\uD83D\uDCB8',\r\n  BALANCE: '\u2696\uFE0F',\r\n  PORTFOLIO: '\uD83D\uDCCA',\r\n  \r\n  // System operations\r\n  START: '\uD83D\uDE80',\r\n  STOP: '\uD83D\uDED1',\r\n  RESTART: '\uD83D\uDD04',\r\n  INITIALIZE: '\uD83D\uDD27',\r\n  SHUTDOWN: '\u23F9\uFE0F',\r\n  \r\n  // Network and connectivity\r\n  CONNECTED: '\uD83D\uDD17',\r\n  DISCONNECTED: '\uD83D\uDD0C',\r\n  TUNNEL: '\uD83D\uDE87',\r\n  API: '\uD83C\uDF10',\r\n  DATABASE: '\uD83D\uDDC4\uFE0F',\r\n  \r\n  // Security and monitoring\r\n  SECURITY: '\uD83D\uDD12',\r\n  AUDIT: '\uD83D\uDCCB',\r\n  ALERT: '\uD83D\uDEA8',\r\n  MONITOR: '\uD83D\uDC41\uFE0F',\r\n  BACKUP: '\uD83D\uDCBE',\r\n  \r\n  // Performance\r\n  FAST: '\u26A1',\r\n  SLOW: '\uD83D\uDC0C',\r\n  MEMORY: '\uD83E\uDDE0',\r\n  CPU: '\u2699\uFE0F',\r\n  DISK: '\uD83D\uDCBD',\r\n  \r\n  // Market data\r\n  BULL: '\uD83D\uDC02',\r\n  BEAR: '\uD83D\uDC3B',\r\n  ROCKET: '\uD83D\uDE80',\r\n  CRASH: '\uD83D\uDCA5',\r\n  TREND_UP: '\uD83D\uDCC8',\r\n  TREND_DOWN: '\uD83D\uDCC9',\r\n  \r\n  // Notifications\r\n  TELEGRAM: '\uD83D\uDCF1',\r\n  EMAIL: '\uD83D\uDCE7',\r\n  BELL: '\uD83D\uDD14',\r\n  MUTE: '\uD83D\uDD15'\r\n} as const;\r\n\r\n/**\r\n * Color schemes for different log levels\r\n */\r\nexport const LogColors = {\r\n  ERROR: chalk.red,\r\n  WARN: chalk.yellow,\r\n  INFO: chalk.blue,\r\n  DEBUG: chalk.gray,\r\n  SUCCESS: chalk.green,\r\n  TRADING: chalk.magenta,\r\n  SECURITY: chalk.cyan,\r\n  PERFORMANCE: chalk.white\r\n} as const;\r\n\r\n/**\r\n * Enhanced logger with rich formatting and visual indicators\r\n */\r\nexport class EnhancedLogger extends Logger {\r\n  private performanceMetrics: Map<string, number> = new Map();\r\n  private operationCounters: Map<string, number> = new Map();\r\n\r\n  constructor(componentName?: string) {\r\n    super(componentName);\r\n  }\r\n\r\n  /**\r\n   * Log with emoji and rich formatting\r\n   */\r\n  public logWithEmoji(\r\n    level: 'info' | 'warn' | 'error' | 'debug',\r\n    emoji: string,\r\n    message: string,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const formattedMessage = `${emoji} ${message}`;\r\n    \r\n    switch (level) {\r\n      case 'info':\r\n        this.info(formattedMessage, meta);\r\n        break;\r\n      case 'warn':\r\n        this.warn(formattedMessage, meta);\r\n        break;\r\n      case 'error':\r\n        this.error(formattedMessage, meta);\r\n        break;\r\n      case 'debug':\r\n        this.debug(formattedMessage, meta);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log trading operations with rich context\r\n   */\r\n  public logTradingOperation(\r\n    operation: 'BUY' | 'SELL' | 'PROFIT' | 'LOSS' | 'BALANCE_CHECK',\r\n    symbol: string,\r\n    amount?: number,\r\n    price?: number,\r\n    profit?: number,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const emoji = LogEmojis[operation];\r\n    let message = `${operation} operation`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      symbol,\r\n      operation: operation.toLowerCase(),\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    if (amount !== undefined) {\r\n      message += ` - Amount: ${amount}`;\r\n      enrichedMeta.amount = amount;\r\n    }\r\n    \r\n    if (price !== undefined) {\r\n      message += ` - Price: $${price.toFixed(4)}`;\r\n      enrichedMeta.price = price;\r\n    }\r\n    \r\n    if (profit !== undefined) {\r\n      const profitEmoji = profit > 0 ? LogEmojis.PROFIT : LogEmojis.LOSS;\r\n      message += ` - P&L: ${profitEmoji} $${profit.toFixed(2)}`;\r\n      enrichedMeta.profit = profit;\r\n    }\r\n\r\n    this.trading(operation.toLowerCase(), `${emoji} ${message}`, enrichedMeta);\r\n    this.incrementCounter(`trading_${operation.toLowerCase()}`);\r\n  }\r\n\r\n  /**\r\n   * Log system status with visual indicators\r\n   */\r\n  public logSystemStatus(\r\n    status: 'HEALTHY' | 'WARNING' | 'CRITICAL' | 'STARTING' | 'STOPPING',\r\n    component: string,\r\n    details?: Record<string, any>,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const statusEmojis = {\r\n      HEALTHY: LogEmojis.SUCCESS,\r\n      WARNING: LogEmojis.WARNING,\r\n      CRITICAL: LogEmojis.ERROR,\r\n      STARTING: LogEmojis.START,\r\n      STOPPING: LogEmojis.STOP\r\n    };\r\n\r\n    const emoji = statusEmojis[status];\r\n    const message = `System ${status.toLowerCase()}: ${component}`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      component,\r\n      status: status.toLowerCase(),\r\n      details,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const level = status === 'CRITICAL' ? 'error' : \r\n                 status === 'WARNING' ? 'warn' : 'info';\r\n    \r\n    this.logWithEmoji(level, emoji, message, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Log performance metrics with visual indicators\r\n   */\r\n  public logPerformance(\r\n    metric: string,\r\n    value: number,\r\n    unit: string,\r\n    threshold?: { warning: number; critical: number },\r\n    meta?: LogMetadata\r\n  ): void {\r\n    let emoji = LogEmojis.INFO;\r\n    let level: 'info' | 'warn' | 'error' = 'info';\r\n    \r\n    if (threshold) {\r\n      if (value >= threshold.critical) {\r\n        emoji = LogEmojis.ERROR;\r\n        level = 'error';\r\n      } else if (value >= threshold.warning) {\r\n        emoji = LogEmojis.WARNING;\r\n        level = 'warn';\r\n      } else {\r\n        emoji = LogEmojis.SUCCESS;\r\n      }\r\n    }\r\n\r\n    const message = `Performance metric: ${metric} = ${value}${unit}`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      metric,\r\n      value,\r\n      unit,\r\n      threshold,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    this.logWithEmoji(level, emoji, message, enrichedMeta);\r\n    this.performanceMetrics.set(metric, value);\r\n  }\r\n\r\n  /**\r\n   * Log network connectivity status\r\n   */\r\n  public logConnectivity(\r\n    service: string,\r\n    status: 'CONNECTED' | 'DISCONNECTED' | 'RECONNECTING' | 'TIMEOUT',\r\n    latency?: number,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const statusEmojis = {\r\n      CONNECTED: LogEmojis.CONNECTED,\r\n      DISCONNECTED: LogEmojis.DISCONNECTED,\r\n      RECONNECTING: LogEmojis.RESTART,\r\n      TIMEOUT: LogEmojis.WARNING\r\n    };\r\n\r\n    const emoji = statusEmojis[status];\r\n    let message = `${service} ${status.toLowerCase()}`;\r\n    \r\n    if (latency !== undefined) {\r\n      const latencyEmoji = latency < 100 ? LogEmojis.FAST : \r\n                          latency < 500 ? LogEmojis.INFO : LogEmojis.SLOW;\r\n      message += ` ${latencyEmoji} (${latency}ms)`;\r\n    }\r\n\r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      service,\r\n      status: status.toLowerCase(),\r\n      latency,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const level = status === 'DISCONNECTED' || status === 'TIMEOUT' ? 'warn' : 'info';\r\n    this.logWithEmoji(level, emoji, message, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Log market sentiment and analysis\r\n   */\r\n  public logMarketSentiment(\r\n    symbol: string,\r\n    sentiment: 'BULLISH' | 'BEARISH' | 'NEUTRAL',\r\n    confidence: number,\r\n    indicators?: Record<string, any>,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const sentimentEmojis = {\r\n      BULLISH: LogEmojis.BULL,\r\n      BEARISH: LogEmojis.BEAR,\r\n      NEUTRAL: LogEmojis.BALANCE\r\n    };\r\n\r\n    const emoji = sentimentEmojis[sentiment];\r\n    const message = `Market sentiment for ${symbol}: ${sentiment} (${(confidence * 100).toFixed(1)}% confidence)`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      symbol,\r\n      sentiment: sentiment.toLowerCase(),\r\n      confidence,\r\n      indicators,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    this.trading('market_analysis', `${emoji} ${message}`, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Log notification delivery status\r\n   */\r\n  public logNotification(\r\n    channel: 'TELEGRAM' | 'EMAIL' | 'WEBHOOK',\r\n    status: 'SENT' | 'FAILED' | 'QUEUED',\r\n    recipient?: string,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const channelEmojis = {\r\n      TELEGRAM: LogEmojis.TELEGRAM,\r\n      EMAIL: LogEmojis.EMAIL,\r\n      WEBHOOK: LogEmojis.API\r\n    };\r\n\r\n    const statusEmojis = {\r\n      SENT: LogEmojis.SUCCESS,\r\n      FAILED: LogEmojis.ERROR,\r\n      QUEUED: LogEmojis.INFO\r\n    };\r\n\r\n    const channelEmoji = channelEmojis[channel];\r\n    const statusEmoji = statusEmojis[status];\r\n    \r\n    let message = `${channelEmoji} ${channel} notification ${status.toLowerCase()}`;\r\n    if (recipient) {\r\n      message += ` to ${recipient}`;\r\n    }\r\n\r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      channel: channel.toLowerCase(),\r\n      status: status.toLowerCase(),\r\n      recipient,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const level = status === 'FAILED' ? 'error' : 'info';\r\n    this.logWithEmoji(level, statusEmoji, message, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Log security events with appropriate classification\r\n   */\r\n  public logSecurityEvent(\r\n    eventType: 'LOGIN' | 'LOGOUT' | 'API_ACCESS' | 'UNAUTHORIZED' | 'SUSPICIOUS',\r\n    severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL',\r\n    details: string,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const severityEmojis = {\r\n      LOW: LogEmojis.INFO,\r\n      MEDIUM: LogEmojis.WARNING,\r\n      HIGH: LogEmojis.ALERT,\r\n      CRITICAL: LogEmojis.ERROR\r\n    };\r\n\r\n    const emoji = severityEmojis[severity];\r\n    const message = `${LogEmojis.SECURITY} Security event: ${eventType} - ${details}`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      eventType: eventType.toLowerCase(),\r\n      severity: severity.toLowerCase(),\r\n      classification: 'CONFIDENTIAL',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const level = severity === 'CRITICAL' || severity === 'HIGH' ? 'error' : \r\n                 severity === 'MEDIUM' ? 'warn' : 'info';\r\n    \r\n    this.security(eventType.toLowerCase(), `${emoji} ${message}`, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Create a progress indicator for long-running operations\r\n   */\r\n  public logProgress(\r\n    operation: string,\r\n    current: number,\r\n    total: number,\r\n    meta?: LogMetadata\r\n  ): void {\r\n    const percentage = Math.round((current / total) * 100);\r\n    const progressBar = this.createProgressBar(percentage);\r\n    const emoji = percentage === 100 ? LogEmojis.SUCCESS : LogEmojis.INFO;\r\n    \r\n    const message = `${operation} progress: ${progressBar} ${percentage}% (${current}/${total})`;\r\n    \r\n    const enrichedMeta: LogMetadata = {\r\n      ...meta,\r\n      operation,\r\n      current,\r\n      total,\r\n      percentage,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    this.logWithEmoji('info', emoji, message, enrichedMeta);\r\n  }\r\n\r\n  /**\r\n   * Create a visual progress bar\r\n   */\r\n  private createProgressBar(percentage: number, width: number = 20): string {\r\n    const filled = Math.round((percentage / 100) * width);\r\n    const empty = width - filled;\r\n    return '\u2588'.repeat(filled) + '\u2591'.repeat(empty);\r\n  }\r\n\r\n  /**\r\n   * Increment operation counter\r\n   */\r\n  private incrementCounter(operation: string): void {\r\n    const current = this.operationCounters.get(operation) || 0;\r\n    this.operationCounters.set(operation, current + 1);\r\n  }\r\n\r\n  /**\r\n   * Get current performance metrics\r\n   */\r\n  public getPerformanceMetrics(): Record<string, number> {\r\n    return Object.fromEntries(this.performanceMetrics);\r\n  }\r\n\r\n  /**\r\n   * Get operation counters\r\n   */\r\n  public getOperationCounters(): Record<string, number> {\r\n    return Object.fromEntries(this.operationCounters);\r\n  }\r\n\r\n  /**\r\n   * Reset all counters and metrics\r\n   */\r\n  public resetMetrics(): void {\r\n    this.performanceMetrics.clear();\r\n    this.operationCounters.clear();\r\n  }\r\n\r\n  /**\r\n   * Generate a summary report of logging activity\r\n   */\r\n  public generateLogSummary(): {\r\n    metrics: Record<string, number>;\r\n    counters: Record<string, number>;\r\n    timestamp: string;\r\n  } {\r\n    return {\r\n      metrics: this.getPerformanceMetrics(),\r\n      counters: this.getOperationCounters(),\r\n      timestamp: new Date().toISOString()\r\n    };\r\n  }\r\n}\r\n\r\n// Create and export enhanced logger instance\r\nexport const enhancedLogger = new EnhancedLogger();\r\n\r\n// Export types and constants\r\nexport type { LogMetadata };\r\nexport { LogEmojis, LogColors };"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e94b9bb48d30eadbedac948ae4bfb29ccfd3ef2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ztmiz16ba = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ztmiz16ba();
var __importDefault =
/* istanbul ignore next */
(cov_1ztmiz16ba().s[0]++,
/* istanbul ignore next */
(cov_1ztmiz16ba().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ztmiz16ba().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ztmiz16ba().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ztmiz16ba().f[0]++;
  cov_1ztmiz16ba().s[1]++;
  return /* istanbul ignore next */(cov_1ztmiz16ba().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ztmiz16ba().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ztmiz16ba().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ztmiz16ba().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ztmiz16ba().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ztmiz16ba().s[3]++;
exports.enhancedLogger = exports.EnhancedLogger = exports.LogColors = exports.LogEmojis = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_1ztmiz16ba().s[4]++, require("./logger"));
const chalk_1 =
/* istanbul ignore next */
(cov_1ztmiz16ba().s[5]++, __importDefault(require("chalk")));
/**
 * Emoji mappings for different log types and statuses
 */
/* istanbul ignore next */
cov_1ztmiz16ba().s[6]++;
exports.LogEmojis = {
  // System status
  SUCCESS: '✅',
  ERROR: '❌',
  WARNING: '⚠️',
  INFO: 'ℹ️',
  DEBUG: '🔍',
  // Trading operations
  BUY: '📈',
  SELL: '📉',
  PROFIT: '💰',
  LOSS: '💸',
  BALANCE: '⚖️',
  PORTFOLIO: '📊',
  // System operations
  START: '🚀',
  STOP: '🛑',
  RESTART: '🔄',
  INITIALIZE: '🔧',
  SHUTDOWN: '⏹️',
  // Network and connectivity
  CONNECTED: '🔗',
  DISCONNECTED: '🔌',
  TUNNEL: '🚇',
  API: '🌐',
  DATABASE: '🗄️',
  // Security and monitoring
  SECURITY: '🔒',
  AUDIT: '📋',
  ALERT: '🚨',
  MONITOR: '👁️',
  BACKUP: '💾',
  // Performance
  FAST: '⚡',
  SLOW: '🐌',
  MEMORY: '🧠',
  CPU: '⚙️',
  DISK: '💽',
  // Market data
  BULL: '🐂',
  BEAR: '🐻',
  ROCKET: '🚀',
  CRASH: '💥',
  TREND_UP: '📈',
  TREND_DOWN: '📉',
  // Notifications
  TELEGRAM: '📱',
  EMAIL: '📧',
  BELL: '🔔',
  MUTE: '🔕'
};
/**
 * Color schemes for different log levels
 */
/* istanbul ignore next */
cov_1ztmiz16ba().s[7]++;
exports.LogColors = {
  ERROR: chalk_1.default.red,
  WARN: chalk_1.default.yellow,
  INFO: chalk_1.default.blue,
  DEBUG: chalk_1.default.gray,
  SUCCESS: chalk_1.default.green,
  TRADING: chalk_1.default.magenta,
  SECURITY: chalk_1.default.cyan,
  PERFORMANCE: chalk_1.default.white
};
/**
 * Enhanced logger with rich formatting and visual indicators
 */
class EnhancedLogger extends
/* istanbul ignore next */
(logger_1.Logger) {
  performanceMetrics =
  /* istanbul ignore next */
  (cov_1ztmiz16ba().s[8]++, new Map());
  operationCounters =
  /* istanbul ignore next */
  (cov_1ztmiz16ba().s[9]++, new Map());
  constructor(componentName) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[1]++;
    cov_1ztmiz16ba().s[10]++;
    super(componentName);
  }
  /**
   * Log with emoji and rich formatting
   */
  logWithEmoji(level, emoji, message, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[2]++;
    const formattedMessage =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[11]++, `${emoji} ${message}`);
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[12]++;
    switch (level) {
      case 'info':
        /* istanbul ignore next */
        cov_1ztmiz16ba().b[3][0]++;
        cov_1ztmiz16ba().s[13]++;
        this.info(formattedMessage, meta);
        /* istanbul ignore next */
        cov_1ztmiz16ba().s[14]++;
        break;
      case 'warn':
        /* istanbul ignore next */
        cov_1ztmiz16ba().b[3][1]++;
        cov_1ztmiz16ba().s[15]++;
        this.warn(formattedMessage, meta);
        /* istanbul ignore next */
        cov_1ztmiz16ba().s[16]++;
        break;
      case 'error':
        /* istanbul ignore next */
        cov_1ztmiz16ba().b[3][2]++;
        cov_1ztmiz16ba().s[17]++;
        this.error(formattedMessage, meta);
        /* istanbul ignore next */
        cov_1ztmiz16ba().s[18]++;
        break;
      case 'debug':
        /* istanbul ignore next */
        cov_1ztmiz16ba().b[3][3]++;
        cov_1ztmiz16ba().s[19]++;
        this.debug(formattedMessage, meta);
        /* istanbul ignore next */
        cov_1ztmiz16ba().s[20]++;
        break;
    }
  }
  /**
   * Log trading operations with rich context
   */
  logTradingOperation(operation, symbol, amount, price, profit, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[3]++;
    const emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[21]++, exports.LogEmojis[operation]);
    let message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[22]++, `${operation} operation`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[23]++, {
      ...meta,
      symbol,
      operation: operation.toLowerCase(),
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[24]++;
    if (amount !== undefined) {
      /* istanbul ignore next */
      cov_1ztmiz16ba().b[4][0]++;
      cov_1ztmiz16ba().s[25]++;
      message += ` - Amount: ${amount}`;
      /* istanbul ignore next */
      cov_1ztmiz16ba().s[26]++;
      enrichedMeta.amount = amount;
    } else
    /* istanbul ignore next */
    {
      cov_1ztmiz16ba().b[4][1]++;
    }
    cov_1ztmiz16ba().s[27]++;
    if (price !== undefined) {
      /* istanbul ignore next */
      cov_1ztmiz16ba().b[5][0]++;
      cov_1ztmiz16ba().s[28]++;
      message += ` - Price: $${price.toFixed(4)}`;
      /* istanbul ignore next */
      cov_1ztmiz16ba().s[29]++;
      enrichedMeta.price = price;
    } else
    /* istanbul ignore next */
    {
      cov_1ztmiz16ba().b[5][1]++;
    }
    cov_1ztmiz16ba().s[30]++;
    if (profit !== undefined) {
      /* istanbul ignore next */
      cov_1ztmiz16ba().b[6][0]++;
      const profitEmoji =
      /* istanbul ignore next */
      (cov_1ztmiz16ba().s[31]++, profit > 0 ?
      /* istanbul ignore next */
      (cov_1ztmiz16ba().b[7][0]++, exports.LogEmojis.PROFIT) :
      /* istanbul ignore next */
      (cov_1ztmiz16ba().b[7][1]++, exports.LogEmojis.LOSS));
      /* istanbul ignore next */
      cov_1ztmiz16ba().s[32]++;
      message += ` - P&L: ${profitEmoji} $${profit.toFixed(2)}`;
      /* istanbul ignore next */
      cov_1ztmiz16ba().s[33]++;
      enrichedMeta.profit = profit;
    } else
    /* istanbul ignore next */
    {
      cov_1ztmiz16ba().b[6][1]++;
    }
    cov_1ztmiz16ba().s[34]++;
    this.trading(operation.toLowerCase(), `${emoji} ${message}`, enrichedMeta);
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[35]++;
    this.incrementCounter(`trading_${operation.toLowerCase()}`);
  }
  /**
   * Log system status with visual indicators
   */
  logSystemStatus(status, component, details, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[4]++;
    const statusEmojis =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[36]++, {
      HEALTHY: exports.LogEmojis.SUCCESS,
      WARNING: exports.LogEmojis.WARNING,
      CRITICAL: exports.LogEmojis.ERROR,
      STARTING: exports.LogEmojis.START,
      STOPPING: exports.LogEmojis.STOP
    });
    const emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[37]++, statusEmojis[status]);
    const message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[38]++, `System ${status.toLowerCase()}: ${component}`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[39]++, {
      ...meta,
      component,
      status: status.toLowerCase(),
      details,
      timestamp: new Date().toISOString()
    });
    const level =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[40]++, status === 'CRITICAL' ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[8][0]++, 'error') :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[8][1]++, status === 'WARNING' ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[9][0]++, 'warn') :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[9][1]++, 'info')));
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[41]++;
    this.logWithEmoji(level, emoji, message, enrichedMeta);
  }
  /**
   * Log performance metrics with visual indicators
   */
  logPerformance(metric, value, unit, threshold, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[5]++;
    let emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[42]++, exports.LogEmojis.INFO);
    let level =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[43]++, 'info');
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[44]++;
    if (threshold) {
      /* istanbul ignore next */
      cov_1ztmiz16ba().b[10][0]++;
      cov_1ztmiz16ba().s[45]++;
      if (value >= threshold.critical) {
        /* istanbul ignore next */
        cov_1ztmiz16ba().b[11][0]++;
        cov_1ztmiz16ba().s[46]++;
        emoji = exports.LogEmojis.ERROR;
        /* istanbul ignore next */
        cov_1ztmiz16ba().s[47]++;
        level = 'error';
      } else {
        /* istanbul ignore next */
        cov_1ztmiz16ba().b[11][1]++;
        cov_1ztmiz16ba().s[48]++;
        if (value >= threshold.warning) {
          /* istanbul ignore next */
          cov_1ztmiz16ba().b[12][0]++;
          cov_1ztmiz16ba().s[49]++;
          emoji = exports.LogEmojis.WARNING;
          /* istanbul ignore next */
          cov_1ztmiz16ba().s[50]++;
          level = 'warn';
        } else {
          /* istanbul ignore next */
          cov_1ztmiz16ba().b[12][1]++;
          cov_1ztmiz16ba().s[51]++;
          emoji = exports.LogEmojis.SUCCESS;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ztmiz16ba().b[10][1]++;
    }
    const message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[52]++, `Performance metric: ${metric} = ${value}${unit}`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[53]++, {
      ...meta,
      metric,
      value,
      unit,
      threshold,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[54]++;
    this.logWithEmoji(level, emoji, message, enrichedMeta);
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[55]++;
    this.performanceMetrics.set(metric, value);
  }
  /**
   * Log network connectivity status
   */
  logConnectivity(service, status, latency, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[6]++;
    const statusEmojis =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[56]++, {
      CONNECTED: exports.LogEmojis.CONNECTED,
      DISCONNECTED: exports.LogEmojis.DISCONNECTED,
      RECONNECTING: exports.LogEmojis.RESTART,
      TIMEOUT: exports.LogEmojis.WARNING
    });
    const emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[57]++, statusEmojis[status]);
    let message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[58]++, `${service} ${status.toLowerCase()}`);
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[59]++;
    if (latency !== undefined) {
      /* istanbul ignore next */
      cov_1ztmiz16ba().b[13][0]++;
      const latencyEmoji =
      /* istanbul ignore next */
      (cov_1ztmiz16ba().s[60]++, latency < 100 ?
      /* istanbul ignore next */
      (cov_1ztmiz16ba().b[14][0]++, exports.LogEmojis.FAST) :
      /* istanbul ignore next */
      (cov_1ztmiz16ba().b[14][1]++, latency < 500 ?
      /* istanbul ignore next */
      (cov_1ztmiz16ba().b[15][0]++, exports.LogEmojis.INFO) :
      /* istanbul ignore next */
      (cov_1ztmiz16ba().b[15][1]++, exports.LogEmojis.SLOW)));
      /* istanbul ignore next */
      cov_1ztmiz16ba().s[61]++;
      message += ` ${latencyEmoji} (${latency}ms)`;
    } else
    /* istanbul ignore next */
    {
      cov_1ztmiz16ba().b[13][1]++;
    }
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[62]++, {
      ...meta,
      service,
      status: status.toLowerCase(),
      latency,
      timestamp: new Date().toISOString()
    });
    const level =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[63]++,
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[17][0]++, status === 'DISCONNECTED') ||
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[17][1]++, status === 'TIMEOUT') ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[16][0]++, 'warn') :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[16][1]++, 'info'));
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[64]++;
    this.logWithEmoji(level, emoji, message, enrichedMeta);
  }
  /**
   * Log market sentiment and analysis
   */
  logMarketSentiment(symbol, sentiment, confidence, indicators, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[7]++;
    const sentimentEmojis =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[65]++, {
      BULLISH: exports.LogEmojis.BULL,
      BEARISH: exports.LogEmojis.BEAR,
      NEUTRAL: exports.LogEmojis.BALANCE
    });
    const emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[66]++, sentimentEmojis[sentiment]);
    const message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[67]++, `Market sentiment for ${symbol}: ${sentiment} (${(confidence * 100).toFixed(1)}% confidence)`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[68]++, {
      ...meta,
      symbol,
      sentiment: sentiment.toLowerCase(),
      confidence,
      indicators,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[69]++;
    this.trading('market_analysis', `${emoji} ${message}`, enrichedMeta);
  }
  /**
   * Log notification delivery status
   */
  logNotification(channel, status, recipient, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[8]++;
    const channelEmojis =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[70]++, {
      TELEGRAM: exports.LogEmojis.TELEGRAM,
      EMAIL: exports.LogEmojis.EMAIL,
      WEBHOOK: exports.LogEmojis.API
    });
    const statusEmojis =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[71]++, {
      SENT: exports.LogEmojis.SUCCESS,
      FAILED: exports.LogEmojis.ERROR,
      QUEUED: exports.LogEmojis.INFO
    });
    const channelEmoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[72]++, channelEmojis[channel]);
    const statusEmoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[73]++, statusEmojis[status]);
    let message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[74]++, `${channelEmoji} ${channel} notification ${status.toLowerCase()}`);
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[75]++;
    if (recipient) {
      /* istanbul ignore next */
      cov_1ztmiz16ba().b[18][0]++;
      cov_1ztmiz16ba().s[76]++;
      message += ` to ${recipient}`;
    } else
    /* istanbul ignore next */
    {
      cov_1ztmiz16ba().b[18][1]++;
    }
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[77]++, {
      ...meta,
      channel: channel.toLowerCase(),
      status: status.toLowerCase(),
      recipient,
      timestamp: new Date().toISOString()
    });
    const level =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[78]++, status === 'FAILED' ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[19][0]++, 'error') :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[19][1]++, 'info'));
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[79]++;
    this.logWithEmoji(level, statusEmoji, message, enrichedMeta);
  }
  /**
   * Log security events with appropriate classification
   */
  logSecurityEvent(eventType, severity, details, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[9]++;
    const severityEmojis =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[80]++, {
      LOW: exports.LogEmojis.INFO,
      MEDIUM: exports.LogEmojis.WARNING,
      HIGH: exports.LogEmojis.ALERT,
      CRITICAL: exports.LogEmojis.ERROR
    });
    const emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[81]++, severityEmojis[severity]);
    const message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[82]++, `${exports.LogEmojis.SECURITY} Security event: ${eventType} - ${details}`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[83]++, {
      ...meta,
      eventType: eventType.toLowerCase(),
      severity: severity.toLowerCase(),
      classification: 'CONFIDENTIAL',
      timestamp: new Date().toISOString()
    });
    const level =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[84]++,
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[21][0]++, severity === 'CRITICAL') ||
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[21][1]++, severity === 'HIGH') ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[20][0]++, 'error') :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[20][1]++, severity === 'MEDIUM' ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[22][0]++, 'warn') :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[22][1]++, 'info')));
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[85]++;
    this.security(eventType.toLowerCase(), `${emoji} ${message}`, enrichedMeta);
  }
  /**
   * Create a progress indicator for long-running operations
   */
  logProgress(operation, current, total, meta) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[10]++;
    const percentage =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[86]++, Math.round(current / total * 100));
    const progressBar =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[87]++, this.createProgressBar(percentage));
    const emoji =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[88]++, percentage === 100 ?
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[23][0]++, exports.LogEmojis.SUCCESS) :
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[23][1]++, exports.LogEmojis.INFO));
    const message =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[89]++, `${operation} progress: ${progressBar} ${percentage}% (${current}/${total})`);
    const enrichedMeta =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[90]++, {
      ...meta,
      operation,
      current,
      total,
      percentage,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[91]++;
    this.logWithEmoji('info', emoji, message, enrichedMeta);
  }
  /**
   * Create a visual progress bar
   */
  createProgressBar(percentage, width =
  /* istanbul ignore next */
  (cov_1ztmiz16ba().b[24][0]++, 20)) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[11]++;
    const filled =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[92]++, Math.round(percentage / 100 * width));
    const empty =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[93]++, width - filled);
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[94]++;
    return '█'.repeat(filled) + '░'.repeat(empty);
  }
  /**
   * Increment operation counter
   */
  incrementCounter(operation) {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[12]++;
    const current =
    /* istanbul ignore next */
    (cov_1ztmiz16ba().s[95]++,
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[25][0]++, this.operationCounters.get(operation)) ||
    /* istanbul ignore next */
    (cov_1ztmiz16ba().b[25][1]++, 0));
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[96]++;
    this.operationCounters.set(operation, current + 1);
  }
  /**
   * Get current performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[13]++;
    cov_1ztmiz16ba().s[97]++;
    return Object.fromEntries(this.performanceMetrics);
  }
  /**
   * Get operation counters
   */
  getOperationCounters() {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[14]++;
    cov_1ztmiz16ba().s[98]++;
    return Object.fromEntries(this.operationCounters);
  }
  /**
   * Reset all counters and metrics
   */
  resetMetrics() {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[15]++;
    cov_1ztmiz16ba().s[99]++;
    this.performanceMetrics.clear();
    /* istanbul ignore next */
    cov_1ztmiz16ba().s[100]++;
    this.operationCounters.clear();
  }
  /**
   * Generate a summary report of logging activity
   */
  generateLogSummary() {
    /* istanbul ignore next */
    cov_1ztmiz16ba().f[16]++;
    cov_1ztmiz16ba().s[101]++;
    return {
      metrics: this.getPerformanceMetrics(),
      counters: this.getOperationCounters(),
      timestamp: new Date().toISOString()
    };
  }
}
/* istanbul ignore next */
cov_1ztmiz16ba().s[102]++;
exports.EnhancedLogger = EnhancedLogger;
// Create and export enhanced logger instance
/* istanbul ignore next */
cov_1ztmiz16ba().s[103]++;
exports.enhancedLogger = new EnhancedLogger();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,