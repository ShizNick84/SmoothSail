bd693b2434f055e66a63c7c5b738569a
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - DEPENDENCY MANAGER
 * =============================================================================
 *
 * This module provides comprehensive dependency management for system components.
 * It handles dependency resolution, injection, and lifecycle coordination to
 * ensure proper component initialization order and runtime dependencies.
 *
 * CRITICAL SYSTEM NOTICE:
 * Proper dependency management is essential for system stability. Components
 * must be initialized in the correct order to prevent runtime errors and
 * ensure financial system safety.
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_l79ej0g0l() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\dependency-manager.ts";
  var hash = "e39f6a18758df86f4716766949d68659dcbb423a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\dependency-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "1": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 117
        }
      },
      "2": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "3": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "4": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "5": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "6": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 36,
          column: 75
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 50
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 48
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "11": {
        start: {
          line: 41,
          column: 19
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "12": {
        start: {
          line: 42,
          column: 15
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "13": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "14": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 26
        }
      },
      "15": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 83
        }
      },
      "16": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 47
        }
      },
      "18": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "20": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 81
        }
      },
      "21": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "22": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 75
        }
      },
      "23": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "24": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "25": {
        start: {
          line: 85,
          column: 33
        },
        end: {
          line: 85,
          column: 88
        }
      },
      "26": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 77
        }
      },
      "27": {
        start: {
          line: 89,
          column: 23
        },
        end: {
          line: 89,
          column: 51
        }
      },
      "28": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "29": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 75
        }
      },
      "30": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 93,
          column: 49
        }
      },
      "31": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "32": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "33": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "34": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 43
        }
      },
      "35": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 41
        }
      },
      "36": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 57
        }
      },
      "37": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 108
        }
      },
      "38": {
        start: {
          line: 111,
          column: 41
        },
        end: {
          line: 111,
          column: 104
        }
      },
      "39": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 84
        }
      },
      "40": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "41": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 45
        }
      },
      "42": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 58
        }
      },
      "43": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "44": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "45": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "46": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 49
        }
      },
      "47": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 77
        }
      },
      "48": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 28
        }
      },
      "49": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 53
        }
      },
      "50": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 93
        }
      },
      "51": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 24
        }
      },
      "52": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 44
        }
      },
      "53": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 40
        }
      },
      "54": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 52
        }
      },
      "55": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 167,
          column: 25
        }
      },
      "56": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "57": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "58": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 35
        }
      },
      "59": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 22
        }
      },
      "60": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 64
        }
      },
      "61": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 34
        }
      },
      "62": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 30
        }
      },
      "63": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 37
        }
      },
      "64": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 59
        }
      },
      "65": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 71
        }
      },
      "66": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "67": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "68": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "69": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "70": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 90
        }
      },
      "71": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "72": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 102
        }
      },
      "73": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 37
        }
      },
      "74": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 72
        }
      },
      "75": {
        start: {
          line: 213,
          column: 34
        },
        end: {
          line: 213,
          column: 56
        }
      },
      "76": {
        start: {
          line: 214,
          column: 35
        },
        end: {
          line: 214,
          column: 36
        }
      },
      "77": {
        start: {
          line: 215,
          column: 36
        },
        end: {
          line: 215,
          column: 37
        }
      },
      "78": {
        start: {
          line: 216,
          column: 31
        },
        end: {
          line: 216,
          column: 32
        }
      },
      "79": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "80": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 220,
          column: 13
        }
      },
      "81": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 39
        }
      },
      "82": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "83": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 40
        }
      },
      "84": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 57
        }
      },
      "85": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "86": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "87": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 60
        }
      },
      "88": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "89": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 86
        }
      },
      "90": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "91": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 94
        }
      },
      "92": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "93": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 95
        }
      },
      "94": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "95": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 97
        }
      },
      "96": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "97": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 93
        }
      },
      "98": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "99": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 89
        }
      },
      "100": {
        start: {
          line: 268,
          column: 24
        },
        end: {
          line: 268,
          column: 33
        }
      },
      "101": {
        start: {
          line: 269,
          column: 25
        },
        end: {
          line: 269,
          column: 34
        }
      },
      "102": {
        start: {
          line: 270,
          column: 22
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "103": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "104": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 92
        }
      },
      "105": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "106": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 23
        }
      },
      "107": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 32
        }
      },
      "108": {
        start: {
          line: 278,
          column: 30
        },
        end: {
          line: 278,
          column: 58
        }
      },
      "109": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "110": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 282,
          column: 17
        }
      },
      "111": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 38
        }
      },
      "112": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 35
        }
      },
      "113": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 31
        }
      },
      "114": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "115": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 30
        }
      },
      "116": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 28
        }
      },
      "117": {
        start: {
          line: 302,
          column: 25
        },
        end: {
          line: 302,
          column: 27
        }
      },
      "118": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "119": {
        start: {
          line: 304,
          column: 31
        },
        end: {
          line: 304,
          column: 65
        }
      },
      "120": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 38
        }
      },
      "121": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 24
        }
      },
      "122": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "123": {
        start: {
          line: 319,
          column: 29
        },
        end: {
          line: 319,
          column: 75
        }
      },
      "124": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "125": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 96
        }
      },
      "126": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 28
        }
      },
      "127": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 95
        }
      },
      "128": {
        start: {
          line: 331,
          column: 0
        },
        end: {
          line: 331,
          column: 46
        }
      },
      "129": {
        start: {
          line: 335,
          column: 0
        },
        end: {
          line: 364,
          column: 2
        }
      },
      "130": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 368,
          column: 52
        }
      },
      "131": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 382,
          column: 6
        }
      },
      "132": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "133": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 38
        }
      },
      "134": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 58
        }
      },
      "135": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 401,
          column: 7
        }
      },
      "136": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 420,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 1
          },
          end: {
            line: 31,
            column: 2
          }
        },
        loc: {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 73
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 140
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 149
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 32
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 157
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 30
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 166
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 178
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 21
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 188
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 20
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 212
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 37
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 239
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 38
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 267
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 270,
            column: 22
          },
          end: {
            line: 270,
            column: 23
          }
        },
        loc: {
          start: {
            line: 270,
            column: 33
          },
          end: {
            line: 286,
            column: 9
          }
        },
        line: 270
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        loc: {
          start: {
            line: 301,
            column: 47
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 301
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 47
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 316
      },
      "15": {
        name: "Inject",
        decl: {
          start: {
            line: 375,
            column: 9
          },
          end: {
            line: 375,
            column: 15
          }
        },
        loc: {
          start: {
            line: 375,
            column: 23
          },
          end: {
            line: 383,
            column: 1
          }
        },
        line: 375
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 376,
            column: 11
          },
          end: {
            line: 376,
            column: 12
          }
        },
        loc: {
          start: {
            line: 376,
            column: 42
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 376
      },
      "17": {
        name: "registerSingleton",
        decl: {
          start: {
            line: 393,
            column: 9
          },
          end: {
            line: 393,
            column: 26
          }
        },
        loc: {
          start: {
            line: 393,
            column: 89
          },
          end: {
            line: 402,
            column: 1
          }
        },
        line: 393
      },
      "18": {
        name: "registerTransient",
        decl: {
          start: {
            line: 412,
            column: 9
          },
          end: {
            line: 412,
            column: 26
          }
        },
        loc: {
          start: {
            line: 412,
            column: 89
          },
          end: {
            line: 421,
            column: 1
          }
        },
        line: 412
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 3
          },
          end: {
            line: 36,
            column: 19
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 72
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 77,
            column: 38
          }
        }, {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 82,
            column: 9
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 32
          }
        }, {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 53
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "8": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "9": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "10": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "11": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 193,
            column: 24
          }
        }, {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 193,
            column: 67
          }
        }],
        line: 193
      },
      "12": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 220,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 220,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "13": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "14": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "15": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "16": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "17": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "18": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "19": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "20": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "21": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "22": {
        loc: {
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "23": {
        loc: {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "24": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "25": {
        loc: {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 38
          }
        }, {
          start: {
            line: 321,
            column: 42
          },
          end: {
            line: 321,
            column: 59
          }
        }],
        line: 321
      },
      "26": {
        loc: {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "27": {
        loc: {
          start: {
            line: 393,
            column: 43
          },
          end: {
            line: 393,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 393,
            column: 58
          },
          end: {
            line: 393,
            column: 60
          }
        }],
        line: 393
      },
      "28": {
        loc: {
          start: {
            line: 393,
            column: 62
          },
          end: {
            line: 393,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 393,
            column: 69
          },
          end: {
            line: 393,
            column: 71
          }
        }],
        line: 393
      },
      "29": {
        loc: {
          start: {
            line: 393,
            column: 73
          },
          end: {
            line: 393,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 393,
            column: 84
          },
          end: {
            line: 393,
            column: 87
          }
        }],
        line: 393
      },
      "30": {
        loc: {
          start: {
            line: 412,
            column: 43
          },
          end: {
            line: 412,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 412,
            column: 58
          },
          end: {
            line: 412,
            column: 60
          }
        }],
        line: 412
      },
      "31": {
        loc: {
          start: {
            line: 412,
            column: 62
          },
          end: {
            line: 412,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 412,
            column: 69
          },
          end: {
            line: 412,
            column: 71
          }
        }],
        line: 412
      },
      "32": {
        loc: {
          start: {
            line: 412,
            column: 73
          },
          end: {
            line: 412,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 412,
            column: 84
          },
          end: {
            line: 412,
            column: 87
          }
        }],
        line: 412
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0],
      "30": [0],
      "31": [0],
      "32": [0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\dependency-manager.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\orchestration\\dependency-manager.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - DEPENDENCY MANAGER\r\n * =============================================================================\r\n * \r\n * This module provides comprehensive dependency management for system components.\r\n * It handles dependency resolution, injection, and lifecycle coordination to\r\n * ensure proper component initialization order and runtime dependencies.\r\n * \r\n * CRITICAL SYSTEM NOTICE:\r\n * Proper dependency management is essential for system stability. Components\r\n * must be initialized in the correct order to prevent runtime errors and\r\n * ensure financial system safety.\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\n\r\n/**\r\n * Dependency injection token\r\n */\r\nexport type DependencyToken = string | symbol;\r\n\r\n/**\r\n * Dependency factory function\r\n */\r\nexport type DependencyFactory<T = any> = () => T | Promise<T>;\r\n\r\n/**\r\n * Dependency configuration\r\n */\r\nexport interface DependencyConfig<T = any> {\r\n  /** Dependency token */\r\n  token: DependencyToken;\r\n  /** Factory function */\r\n  factory: DependencyFactory<T>;\r\n  /** Singleton instance */\r\n  singleton: boolean;\r\n  /** Dependencies required by this dependency */\r\n  dependencies: DependencyToken[];\r\n  /** Initialization priority (lower = higher priority) */\r\n  priority: number;\r\n  /** Optional tags for categorization */\r\n  tags: string[];\r\n}\r\n\r\n/**\r\n * Dependency metadata\r\n */\r\nexport interface DependencyMetadata {\r\n  /** When dependency was registered */\r\n  registeredAt: Date;\r\n  /** When dependency was first resolved */\r\n  resolvedAt?: Date;\r\n  /** Number of times resolved */\r\n  resolutionCount: number;\r\n  /** Whether dependency is singleton */\r\n  singleton: boolean;\r\n  /** Current instance (for singletons) */\r\n  instance?: any;\r\n  /** Dependency status */\r\n  status: DependencyStatus;\r\n}\r\n\r\n/**\r\n * Dependency status enumeration\r\n */\r\nexport enum DependencyStatus {\r\n  REGISTERED = 'REGISTERED',\r\n  RESOLVING = 'RESOLVING',\r\n  RESOLVED = 'RESOLVED',\r\n  ERROR = 'ERROR'\r\n}\r\n\r\n/**\r\n * Dependency resolution context\r\n */\r\nexport interface ResolutionContext {\r\n  /** Current resolution path */\r\n  path: DependencyToken[];\r\n  /** Resolution depth */\r\n  depth: number;\r\n  /** Start time */\r\n  startTime: Date;\r\n  /** Parent context */\r\n  parent?: ResolutionContext;\r\n}\r\n\r\n/**\r\n * Dependency manager class\r\n */\r\nexport class DependencyManager {\r\n  private dependencies: Map<DependencyToken, DependencyConfig> = new Map();\r\n  private metadata: Map<DependencyToken, DependencyMetadata> = new Map();\r\n  private resolutionCache: Map<DependencyToken, any> = new Map();\r\n  private isShuttingDown: boolean = false;\r\n\r\n  /**\r\n   * Register a dependency\r\n   * \r\n   * @param config Dependency configuration\r\n   */\r\n  public register<T>(config: DependencyConfig<T>): void {\r\n    logger.info(`\uD83D\uDCCB Registering dependency: ${String(config.token)}`);\r\n\r\n    // Validate configuration\r\n    this.validateDependencyConfig(config);\r\n\r\n    // Check for circular dependencies\r\n    this.checkCircularDependencies(config);\r\n\r\n    // Register dependency\r\n    this.dependencies.set(config.token, config);\r\n    this.metadata.set(config.token, {\r\n      registeredAt: new Date(),\r\n      resolutionCount: 0,\r\n      singleton: config.singleton,\r\n      status: DependencyStatus.REGISTERED\r\n    });\r\n\r\n    logger.info(`\u2705 Dependency registered: ${String(config.token)}`);\r\n  }\r\n\r\n  /**\r\n   * Resolve a dependency\r\n   * \r\n   * @param token Dependency token\r\n   * @param context Resolution context\r\n   * @returns Resolved dependency instance\r\n   */\r\n  public async resolve<T>(token: DependencyToken, context?: ResolutionContext): T {\r\n    if (this.isShuttingDown) {\r\n      throw new Error('Cannot resolve dependencies during shutdown');\r\n    }\r\n\r\n    const resolveContext: ResolutionContext = context || {\r\n      path: [],\r\n      depth: 0,\r\n      startTime: new Date(),\r\n      parent: undefined\r\n    };\r\n\r\n    // Check for circular dependencies in resolution path\r\n    if (resolveContext.path.includes(token)) {\r\n      const circularPath = [...resolveContext.path, token].map(String).join(' \u2192 ');\r\n      throw new Error(`Circular dependency detected: ${circularPath}`);\r\n    }\r\n\r\n    // Get dependency configuration\r\n    const config = this.dependencies.get(token);\r\n    if (!config) {\r\n      throw new Error(`Dependency not registered: ${String(token)}`);\r\n    }\r\n\r\n    const metadata = this.metadata.get(token)!;\r\n\r\n    try {\r\n      // Update resolution context\r\n      const newContext: ResolutionContext = {\r\n        path: [...resolveContext.path, token],\r\n        depth: resolveContext.depth + 1,\r\n        startTime: resolveContext.startTime,\r\n        parent: resolveContext\r\n      };\r\n\r\n      // Check if singleton and already resolved\r\n      if (config.singleton && metadata.instance) {\r\n        metadata.resolutionCount++;\r\n        return metadata.instance;\r\n      }\r\n\r\n      // Update status\r\n      metadata.status = DependencyStatus.RESOLVING;\r\n\r\n      logger.debug(`\uD83D\uDD0D Resolving dependency: ${String(token)} (depth: ${newContext.depth})`);\r\n\r\n      // Resolve dependencies first\r\n      const resolvedDependencies = await this.resolveDependencies(config.dependencies, newContext);\r\n\r\n      // Create instance\r\n      const instance = await this.createInstance(config, resolvedDependencies);\r\n\r\n      // Cache singleton instance\r\n      if (config.singleton) {\r\n        metadata.instance = instance;\r\n        this.resolutionCache.set(token, instance);\r\n      }\r\n\r\n      // Update metadata\r\n      metadata.status = DependencyStatus.RESOLVED;\r\n      metadata.resolutionCount++;\r\n      if (!metadata.resolvedAt) {\r\n        metadata.resolvedAt = new Date();\r\n      }\r\n\r\n      logger.debug(`\u2705 Dependency resolved: ${String(token)}`);\r\n\r\n      return instance;\r\n\r\n    } catch (error) {\r\n      metadata.status = DependencyStatus.ERROR;\r\n      logger.error(`\u274C Failed to resolve dependency ${String(token)}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if dependency is registered\r\n   * \r\n   * @param token Dependency token\r\n   * @returns True if registered\r\n   */\r\n  public isRegistered(token: DependencyToken): boolean {\r\n    return this.dependencies.has(token);\r\n  }\r\n\r\n  /**\r\n   * Get dependency metadata\r\n   * \r\n   * @param token Dependency token\r\n   * @returns Dependency metadata or undefined\r\n   */\r\n  public getMetadata(token: DependencyToken): DependencyMetadata | undefined {\r\n    return this.metadata.get(token);\r\n  }\r\n\r\n  /**\r\n   * Get all registered dependencies\r\n   * \r\n   * @returns Array of dependency tokens\r\n   */\r\n  public getRegisteredDependencies(): DependencyToken[] {\r\n    return Array.from(this.dependencies.keys());\r\n  }\r\n\r\n  /**\r\n   * Get dependencies by tag\r\n   * \r\n   * @param tag Tag to filter by\r\n   * @returns Array of dependency tokens\r\n   */\r\n  public getDependenciesByTag(tag: string): DependencyToken[] {\r\n    const result: DependencyToken[] = [];\r\n    \r\n    for (const [token, config] of this.dependencies) {\r\n      if (config.tags.includes(tag)) {\r\n        result.push(token);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Clear all dependencies (for testing)\r\n   */\r\n  public clear(): void {\r\n    logger.info('\uD83E\uDDF9 Clearing all dependencies...');\r\n    \r\n    this.dependencies.clear();\r\n    this.metadata.clear();\r\n    this.resolutionCache.clear();\r\n    \r\n    logger.info('\u2705 All dependencies cleared');\r\n  }\r\n\r\n  /**\r\n   * Shutdown dependency manager\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    logger.info('\uD83D\uDED1 Shutting down dependency manager...');\r\n    \r\n    this.isShuttingDown = true;\r\n\r\n    // Shutdown singleton instances that have shutdown methods\r\n    for (const [token, instance] of this.resolutionCache) {\r\n      if (instance && typeof instance.shutdown === 'function') {\r\n        try {\r\n          logger.info(`\uD83D\uDED1 Shutting down dependency: ${String(token)}`);\r\n          await instance.shutdown();\r\n        } catch (error) {\r\n          logger.error(`\u274C Failed to shutdown dependency ${String(token)}:`, error);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Clear caches\r\n    this.resolutionCache.clear();\r\n\r\n    logger.info('\u2705 Dependency manager shutdown completed');\r\n  }\r\n\r\n  /**\r\n   * Get dependency resolution statistics\r\n   * \r\n   * @returns Resolution statistics\r\n   */\r\n  public getStatistics(): {\r\n    totalDependencies: number;\r\n    resolvedDependencies: number;\r\n    singletonDependencies: number;\r\n    totalResolutions: number;\r\n    averageResolutionTime: number;\r\n  } {\r\n    const totalDependencies = this.dependencies.size;\r\n    let resolvedDependencies = 0;\r\n    let singletonDependencies = 0;\r\n    let totalResolutions = 0;\r\n\r\n    for (const metadata of this.metadata.values()) {\r\n      if (metadata.status === DependencyStatus.RESOLVED) {\r\n        resolvedDependencies++;\r\n      }\r\n      if (metadata.singleton) {\r\n        singletonDependencies++;\r\n      }\r\n      totalResolutions += metadata.resolutionCount;\r\n    }\r\n\r\n    return {\r\n      totalDependencies,\r\n      resolvedDependencies,\r\n      singletonDependencies,\r\n      totalResolutions,\r\n      averageResolutionTime: 0 // Would need to track timing\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate dependency configuration\r\n   * \r\n   * @param config Dependency configuration\r\n   */\r\n  private validateDependencyConfig<T>(config: DependencyConfig<T>): void {\r\n    if (!config.token) {\r\n      throw new Error('Dependency token is required');\r\n    }\r\n\r\n    if (this.dependencies.has(config.token)) {\r\n      throw new Error(`Dependency already registered: ${String(config.token)}`);\r\n    }\r\n\r\n    if (typeof config.factory !== 'function') {\r\n      throw new Error(`Dependency factory must be a function: ${String(config.token)}`);\r\n    }\r\n\r\n    if (typeof config.singleton !== 'boolean') {\r\n      throw new Error(`Dependency singleton must be a boolean: ${String(config.token)}`);\r\n    }\r\n\r\n    if (!Array.isArray(config.dependencies)) {\r\n      throw new Error(`Dependency dependencies must be an array: ${String(config.token)}`);\r\n    }\r\n\r\n    if (typeof config.priority !== 'number') {\r\n      throw new Error(`Dependency priority must be a number: ${String(config.token)}`);\r\n    }\r\n\r\n    if (!Array.isArray(config.tags)) {\r\n      throw new Error(`Dependency tags must be an array: ${String(config.token)}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check for circular dependencies\r\n   * \r\n   * @param config Dependency configuration\r\n   */\r\n  private checkCircularDependencies<T>(config: DependencyConfig<T>): void {\r\n    const visited = new Set<DependencyToken>();\r\n    const visiting = new Set<DependencyToken>();\r\n\r\n    const visit = (token: DependencyToken): void => {\r\n      if (visiting.has(token)) {\r\n        throw new Error(`Circular dependency detected involving: ${String(token)}`);\r\n      }\r\n\r\n      if (visited.has(token)) {\r\n        return;\r\n      }\r\n\r\n      visiting.add(token);\r\n\r\n      const depConfig = this.dependencies.get(token);\r\n      if (depConfig) {\r\n        for (const dependency of depConfig.dependencies) {\r\n          visit(dependency);\r\n        }\r\n      }\r\n\r\n      visiting.delete(token);\r\n      visited.add(token);\r\n    };\r\n\r\n    // Check the new dependency\r\n    for (const dependency of config.dependencies) {\r\n      visit(dependency);\r\n    }\r\n\r\n    // Check if adding this dependency creates a cycle\r\n    visit(config.token);\r\n  }\r\n\r\n  /**\r\n   * Resolve multiple dependencies\r\n   * \r\n   * @param tokens Dependency tokens\r\n   * @param context Resolution context\r\n   * @returns Array of resolved dependencies\r\n   */\r\n  private async resolveDependencies(\r\n    tokens: DependencyToken[],\r\n    context: ResolutionContext\r\n  ): Promise<any[]> {\r\n    const resolved: any[] = [];\r\n\r\n    for (const token of tokens) {\r\n      const dependency = await this.resolve(token, context);\r\n      resolved.push(dependency);\r\n    }\r\n\r\n    return resolved;\r\n  }\r\n\r\n  /**\r\n   * Create instance from factory\r\n   * \r\n   * @param config Dependency configuration\r\n   * @param dependencies Resolved dependencies\r\n   * @returns Created instance\r\n   */\r\n  private async createInstance<T>(\r\n    config: DependencyConfig<T>,\r\n    dependencies: any[]\r\n  ): Promise<T> {\r\n    try {\r\n      // Call factory function with dependencies\r\n      const instance = await config.factory.apply(null, dependencies);\r\n      \r\n      // Validate instance\r\n      if (instance === undefined || instance === null) {\r\n        throw new Error(`Factory returned null/undefined for: ${String(config.token)}`);\r\n      }\r\n\r\n      return instance;\r\n\r\n    } catch (error) {\r\n      throw new Error(`Failed to create instance for ${String(config.token)}: ${error}`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Dependency tokens for system components\r\n */\r\nexport const DependencyTokens = {\r\n  // Core services\r\n  LOGGER: Symbol('LOGGER'),\r\n  AUDIT_SERVICE: Symbol('AUDIT_SERVICE'),\r\n  CONFIG_SERVICE: Symbol('CONFIG_SERVICE'),\r\n  \r\n  // Security services\r\n  SECURITY_MANAGER: Symbol('SECURITY_MANAGER'),\r\n  ENCRYPTION_SERVICE: Symbol('ENCRYPTION_SERVICE'),\r\n  THREAT_DETECTION: Symbol('THREAT_DETECTION'),\r\n  \r\n  // Infrastructure services\r\n  SYSTEM_MONITOR: Symbol('SYSTEM_MONITOR'),\r\n  TUNNEL_MANAGER: Symbol('TUNNEL_MANAGER'),\r\n  DATABASE_SERVICE: Symbol('DATABASE_SERVICE'),\r\n  \r\n  // Trading services\r\n  TRADING_ENGINE: Symbol('TRADING_ENGINE'),\r\n  RISK_MANAGER: Symbol('RISK_MANAGER'),\r\n  STRATEGY_ENGINE: Symbol('STRATEGY_ENGINE'),\r\n  ORDER_MANAGER: Symbol('ORDER_MANAGER'),\r\n  \r\n  // AI services\r\n  LLM_ENGINE: Symbol('LLM_ENGINE'),\r\n  SENTIMENT_ANALYZER: Symbol('SENTIMENT_ANALYZER'),\r\n  MARKET_ANALYZER: Symbol('MARKET_ANALYZER'),\r\n  \r\n  // Communication services\r\n  NOTIFICATION_MANAGER: Symbol('NOTIFICATION_MANAGER'),\r\n  EMAIL_SERVICE: Symbol('EMAIL_SERVICE'),\r\n  TELEGRAM_SERVICE: Symbol('TELEGRAM_SERVICE'),\r\n  \r\n  // API services\r\n  GATE_IO_CLIENT: Symbol('GATE_IO_CLIENT'),\r\n  TUNNEL_ROUTER: Symbol('TUNNEL_ROUTER')\r\n} as const;\r\n\r\n/**\r\n * Global dependency manager instance\r\n */\r\nexport const dependencyManager = new DependencyManager();\r\n\r\n/**\r\n * Decorator for dependency injection\r\n * \r\n * @param token Dependency token\r\n * @returns Property decorator\r\n */\r\nexport function Inject(token: DependencyToken) {\r\n  return function (target: any, propertyKey: string | symbol) {\r\n    // Store dependency metadata for later injection\r\n    if (!target._dependencies) {\r\n      target._dependencies = [];\r\n    }\r\n    target._dependencies.push({ token, propertyKey });\r\n  };\r\n}\r\n\r\n/**\r\n * Helper function to register a singleton dependency\r\n * \r\n * @param token Dependency token\r\n * @param factory Factory function\r\n * @param dependencies Dependencies\r\n * @param tags Tags\r\n * @param priority Priority\r\n */\r\nexport function registerSingleton<T>(\r\n  token: DependencyToken,\r\n  factory: DependencyFactory<T>,\r\n  dependencies: DependencyToken[] = [],\r\n  tags: string[] = [],\r\n  priority: number = 100\r\n): void {\r\n  dependencyManager.register({\r\n    token,\r\n    factory,\r\n    singleton: true,\r\n    dependencies,\r\n    priority,\r\n    tags\r\n  });\r\n}\r\n\r\n/**\r\n * Helper function to register a transient dependency\r\n * \r\n * @param token Dependency token\r\n * @param factory Factory function\r\n * @param dependencies Dependencies\r\n * @param tags Tags\r\n * @param priority Priority\r\n */\r\nexport function registerTransient<T>(\r\n  token: DependencyToken,\r\n  factory: DependencyFactory<T>,\r\n  dependencies: DependencyToken[] = [],\r\n  tags: string[] = [],\r\n  priority: number = 100\r\n): void {\r\n  dependencyManager.register({\r\n    token,\r\n    factory,\r\n    singleton: false,\r\n    dependencies,\r\n    priority,\r\n    tags\r\n  });\r\n}\r\n\r\n// =============================================================================\r\n// DEPENDENCY MANAGEMENT NOTES\r\n// =============================================================================\r\n// 1. Comprehensive dependency injection with circular dependency detection\r\n// 2. Singleton and transient dependency lifecycle management\r\n// 3. Dependency resolution with proper error handling and logging\r\n// 4. Metadata tracking for monitoring and debugging\r\n// 5. Tag-based dependency categorization and filtering\r\n// 6. Graceful shutdown with proper cleanup of singleton instances\r\n// 7. Resolution context tracking for debugging complex dependency chains\r\n// 8. Factory-based dependency creation with parameter injection\r\n// ============================================================================="],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e39f6a18758df86f4716766949d68659dcbb423a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_l79ej0g0l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_l79ej0g0l();
cov_l79ej0g0l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_l79ej0g0l().s[1]++;
exports.dependencyManager = exports.DependencyTokens = exports.DependencyManager = exports.DependencyStatus = void 0;
/* istanbul ignore next */
cov_l79ej0g0l().s[2]++;
exports.Inject = Inject;
/* istanbul ignore next */
cov_l79ej0g0l().s[3]++;
exports.registerSingleton = registerSingleton;
/* istanbul ignore next */
cov_l79ej0g0l().s[4]++;
exports.registerTransient = registerTransient;
const logger_1 =
/* istanbul ignore next */
(cov_l79ej0g0l().s[5]++, require("@/core/logging/logger"));
/**
 * Dependency status enumeration
 */
var DependencyStatus;
/* istanbul ignore next */
cov_l79ej0g0l().s[6]++;
(function (DependencyStatus) {
  /* istanbul ignore next */
  cov_l79ej0g0l().f[0]++;
  cov_l79ej0g0l().s[7]++;
  DependencyStatus["REGISTERED"] = "REGISTERED";
  /* istanbul ignore next */
  cov_l79ej0g0l().s[8]++;
  DependencyStatus["RESOLVING"] = "RESOLVING";
  /* istanbul ignore next */
  cov_l79ej0g0l().s[9]++;
  DependencyStatus["RESOLVED"] = "RESOLVED";
  /* istanbul ignore next */
  cov_l79ej0g0l().s[10]++;
  DependencyStatus["ERROR"] = "ERROR";
})(
/* istanbul ignore next */
(cov_l79ej0g0l().b[0][0]++, DependencyStatus) ||
/* istanbul ignore next */
(cov_l79ej0g0l().b[0][1]++, exports.DependencyStatus = DependencyStatus = {}));
/**
 * Dependency manager class
 */
class DependencyManager {
  dependencies =
  /* istanbul ignore next */
  (cov_l79ej0g0l().s[11]++, new Map());
  metadata =
  /* istanbul ignore next */
  (cov_l79ej0g0l().s[12]++, new Map());
  resolutionCache =
  /* istanbul ignore next */
  (cov_l79ej0g0l().s[13]++, new Map());
  isShuttingDown =
  /* istanbul ignore next */
  (cov_l79ej0g0l().s[14]++, false);
  /**
   * Register a dependency
   *
   * @param config Dependency configuration
   */
  register(config) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[1]++;
    cov_l79ej0g0l().s[15]++;
    logger_1.logger.info(`📋 Registering dependency: ${String(config.token)}`);
    // Validate configuration
    /* istanbul ignore next */
    cov_l79ej0g0l().s[16]++;
    this.validateDependencyConfig(config);
    // Check for circular dependencies
    /* istanbul ignore next */
    cov_l79ej0g0l().s[17]++;
    this.checkCircularDependencies(config);
    // Register dependency
    /* istanbul ignore next */
    cov_l79ej0g0l().s[18]++;
    this.dependencies.set(config.token, config);
    /* istanbul ignore next */
    cov_l79ej0g0l().s[19]++;
    this.metadata.set(config.token, {
      registeredAt: new Date(),
      resolutionCount: 0,
      singleton: config.singleton,
      status: DependencyStatus.REGISTERED
    });
    /* istanbul ignore next */
    cov_l79ej0g0l().s[20]++;
    logger_1.logger.info(`✅ Dependency registered: ${String(config.token)}`);
  }
  /**
   * Resolve a dependency
   *
   * @param token Dependency token
   * @param context Resolution context
   * @returns Resolved dependency instance
   */
  async resolve(token, context) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[2]++;
    cov_l79ej0g0l().s[21]++;
    if (this.isShuttingDown) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[1][0]++;
      cov_l79ej0g0l().s[22]++;
      throw new Error('Cannot resolve dependencies during shutdown');
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[1][1]++;
    }
    const resolveContext =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[23]++,
    /* istanbul ignore next */
    (cov_l79ej0g0l().b[2][0]++, context) ||
    /* istanbul ignore next */
    (cov_l79ej0g0l().b[2][1]++, {
      path: [],
      depth: 0,
      startTime: new Date(),
      parent: undefined
    }));
    // Check for circular dependencies in resolution path
    /* istanbul ignore next */
    cov_l79ej0g0l().s[24]++;
    if (resolveContext.path.includes(token)) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[3][0]++;
      const circularPath =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[25]++, [...resolveContext.path, token].map(String).join(' → '));
      /* istanbul ignore next */
      cov_l79ej0g0l().s[26]++;
      throw new Error(`Circular dependency detected: ${circularPath}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[3][1]++;
    }
    // Get dependency configuration
    const config =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[27]++, this.dependencies.get(token));
    /* istanbul ignore next */
    cov_l79ej0g0l().s[28]++;
    if (!config) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[4][0]++;
      cov_l79ej0g0l().s[29]++;
      throw new Error(`Dependency not registered: ${String(token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[4][1]++;
    }
    const metadata =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[30]++, this.metadata.get(token));
    /* istanbul ignore next */
    cov_l79ej0g0l().s[31]++;
    try {
      // Update resolution context
      const newContext =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[32]++, {
        path: [...resolveContext.path, token],
        depth: resolveContext.depth + 1,
        startTime: resolveContext.startTime,
        parent: resolveContext
      });
      // Check if singleton and already resolved
      /* istanbul ignore next */
      cov_l79ej0g0l().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_l79ej0g0l().b[6][0]++, config.singleton) &&
      /* istanbul ignore next */
      (cov_l79ej0g0l().b[6][1]++, metadata.instance)) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[5][0]++;
        cov_l79ej0g0l().s[34]++;
        metadata.resolutionCount++;
        /* istanbul ignore next */
        cov_l79ej0g0l().s[35]++;
        return metadata.instance;
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[5][1]++;
      }
      // Update status
      cov_l79ej0g0l().s[36]++;
      metadata.status = DependencyStatus.RESOLVING;
      /* istanbul ignore next */
      cov_l79ej0g0l().s[37]++;
      logger_1.logger.debug(`🔍 Resolving dependency: ${String(token)} (depth: ${newContext.depth})`);
      // Resolve dependencies first
      const resolvedDependencies =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[38]++, await this.resolveDependencies(config.dependencies, newContext));
      // Create instance
      const instance =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[39]++, await this.createInstance(config, resolvedDependencies));
      // Cache singleton instance
      /* istanbul ignore next */
      cov_l79ej0g0l().s[40]++;
      if (config.singleton) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[7][0]++;
        cov_l79ej0g0l().s[41]++;
        metadata.instance = instance;
        /* istanbul ignore next */
        cov_l79ej0g0l().s[42]++;
        this.resolutionCache.set(token, instance);
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[7][1]++;
      }
      // Update metadata
      cov_l79ej0g0l().s[43]++;
      metadata.status = DependencyStatus.RESOLVED;
      /* istanbul ignore next */
      cov_l79ej0g0l().s[44]++;
      metadata.resolutionCount++;
      /* istanbul ignore next */
      cov_l79ej0g0l().s[45]++;
      if (!metadata.resolvedAt) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[8][0]++;
        cov_l79ej0g0l().s[46]++;
        metadata.resolvedAt = new Date();
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[8][1]++;
      }
      cov_l79ej0g0l().s[47]++;
      logger_1.logger.debug(`✅ Dependency resolved: ${String(token)}`);
      /* istanbul ignore next */
      cov_l79ej0g0l().s[48]++;
      return instance;
    } catch (error) {
      /* istanbul ignore next */
      cov_l79ej0g0l().s[49]++;
      metadata.status = DependencyStatus.ERROR;
      /* istanbul ignore next */
      cov_l79ej0g0l().s[50]++;
      logger_1.logger.error(`❌ Failed to resolve dependency ${String(token)}:`, error);
      /* istanbul ignore next */
      cov_l79ej0g0l().s[51]++;
      throw error;
    }
  }
  /**
   * Check if dependency is registered
   *
   * @param token Dependency token
   * @returns True if registered
   */
  isRegistered(token) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[3]++;
    cov_l79ej0g0l().s[52]++;
    return this.dependencies.has(token);
  }
  /**
   * Get dependency metadata
   *
   * @param token Dependency token
   * @returns Dependency metadata or undefined
   */
  getMetadata(token) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[4]++;
    cov_l79ej0g0l().s[53]++;
    return this.metadata.get(token);
  }
  /**
   * Get all registered dependencies
   *
   * @returns Array of dependency tokens
   */
  getRegisteredDependencies() {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[5]++;
    cov_l79ej0g0l().s[54]++;
    return Array.from(this.dependencies.keys());
  }
  /**
   * Get dependencies by tag
   *
   * @param tag Tag to filter by
   * @returns Array of dependency tokens
   */
  getDependenciesByTag(tag) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[6]++;
    const result =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[55]++, []);
    /* istanbul ignore next */
    cov_l79ej0g0l().s[56]++;
    for (const [token, config] of this.dependencies) {
      /* istanbul ignore next */
      cov_l79ej0g0l().s[57]++;
      if (config.tags.includes(tag)) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[9][0]++;
        cov_l79ej0g0l().s[58]++;
        result.push(token);
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[9][1]++;
      }
    }
    /* istanbul ignore next */
    cov_l79ej0g0l().s[59]++;
    return result;
  }
  /**
   * Clear all dependencies (for testing)
   */
  clear() {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[7]++;
    cov_l79ej0g0l().s[60]++;
    logger_1.logger.info('🧹 Clearing all dependencies...');
    /* istanbul ignore next */
    cov_l79ej0g0l().s[61]++;
    this.dependencies.clear();
    /* istanbul ignore next */
    cov_l79ej0g0l().s[62]++;
    this.metadata.clear();
    /* istanbul ignore next */
    cov_l79ej0g0l().s[63]++;
    this.resolutionCache.clear();
    /* istanbul ignore next */
    cov_l79ej0g0l().s[64]++;
    logger_1.logger.info('✅ All dependencies cleared');
  }
  /**
   * Shutdown dependency manager
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[8]++;
    cov_l79ej0g0l().s[65]++;
    logger_1.logger.info('🛑 Shutting down dependency manager...');
    /* istanbul ignore next */
    cov_l79ej0g0l().s[66]++;
    this.isShuttingDown = true;
    // Shutdown singleton instances that have shutdown methods
    /* istanbul ignore next */
    cov_l79ej0g0l().s[67]++;
    for (const [token, instance] of this.resolutionCache) {
      /* istanbul ignore next */
      cov_l79ej0g0l().s[68]++;
      if (
      /* istanbul ignore next */
      (cov_l79ej0g0l().b[11][0]++, instance) &&
      /* istanbul ignore next */
      (cov_l79ej0g0l().b[11][1]++, typeof instance.shutdown === 'function')) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[10][0]++;
        cov_l79ej0g0l().s[69]++;
        try {
          /* istanbul ignore next */
          cov_l79ej0g0l().s[70]++;
          logger_1.logger.info(`🛑 Shutting down dependency: ${String(token)}`);
          /* istanbul ignore next */
          cov_l79ej0g0l().s[71]++;
          await instance.shutdown();
        } catch (error) {
          /* istanbul ignore next */
          cov_l79ej0g0l().s[72]++;
          logger_1.logger.error(`❌ Failed to shutdown dependency ${String(token)}:`, error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[10][1]++;
      }
    }
    // Clear caches
    /* istanbul ignore next */
    cov_l79ej0g0l().s[73]++;
    this.resolutionCache.clear();
    /* istanbul ignore next */
    cov_l79ej0g0l().s[74]++;
    logger_1.logger.info('✅ Dependency manager shutdown completed');
  }
  /**
   * Get dependency resolution statistics
   *
   * @returns Resolution statistics
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[9]++;
    const totalDependencies =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[75]++, this.dependencies.size);
    let resolvedDependencies =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[76]++, 0);
    let singletonDependencies =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[77]++, 0);
    let totalResolutions =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[78]++, 0);
    /* istanbul ignore next */
    cov_l79ej0g0l().s[79]++;
    for (const metadata of this.metadata.values()) {
      /* istanbul ignore next */
      cov_l79ej0g0l().s[80]++;
      if (metadata.status === DependencyStatus.RESOLVED) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[12][0]++;
        cov_l79ej0g0l().s[81]++;
        resolvedDependencies++;
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[12][1]++;
      }
      cov_l79ej0g0l().s[82]++;
      if (metadata.singleton) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[13][0]++;
        cov_l79ej0g0l().s[83]++;
        singletonDependencies++;
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[13][1]++;
      }
      cov_l79ej0g0l().s[84]++;
      totalResolutions += metadata.resolutionCount;
    }
    /* istanbul ignore next */
    cov_l79ej0g0l().s[85]++;
    return {
      totalDependencies,
      resolvedDependencies,
      singletonDependencies,
      totalResolutions,
      averageResolutionTime: 0 // Would need to track timing
    };
  }
  /**
   * Validate dependency configuration
   *
   * @param config Dependency configuration
   */
  validateDependencyConfig(config) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[10]++;
    cov_l79ej0g0l().s[86]++;
    if (!config.token) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[14][0]++;
      cov_l79ej0g0l().s[87]++;
      throw new Error('Dependency token is required');
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[14][1]++;
    }
    cov_l79ej0g0l().s[88]++;
    if (this.dependencies.has(config.token)) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[15][0]++;
      cov_l79ej0g0l().s[89]++;
      throw new Error(`Dependency already registered: ${String(config.token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[15][1]++;
    }
    cov_l79ej0g0l().s[90]++;
    if (typeof config.factory !== 'function') {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[16][0]++;
      cov_l79ej0g0l().s[91]++;
      throw new Error(`Dependency factory must be a function: ${String(config.token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[16][1]++;
    }
    cov_l79ej0g0l().s[92]++;
    if (typeof config.singleton !== 'boolean') {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[17][0]++;
      cov_l79ej0g0l().s[93]++;
      throw new Error(`Dependency singleton must be a boolean: ${String(config.token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[17][1]++;
    }
    cov_l79ej0g0l().s[94]++;
    if (!Array.isArray(config.dependencies)) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[18][0]++;
      cov_l79ej0g0l().s[95]++;
      throw new Error(`Dependency dependencies must be an array: ${String(config.token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[18][1]++;
    }
    cov_l79ej0g0l().s[96]++;
    if (typeof config.priority !== 'number') {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[19][0]++;
      cov_l79ej0g0l().s[97]++;
      throw new Error(`Dependency priority must be a number: ${String(config.token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[19][1]++;
    }
    cov_l79ej0g0l().s[98]++;
    if (!Array.isArray(config.tags)) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[20][0]++;
      cov_l79ej0g0l().s[99]++;
      throw new Error(`Dependency tags must be an array: ${String(config.token)}`);
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[20][1]++;
    }
  }
  /**
   * Check for circular dependencies
   *
   * @param config Dependency configuration
   */
  checkCircularDependencies(config) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[11]++;
    const visited =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[100]++, new Set());
    const visiting =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[101]++, new Set());
    /* istanbul ignore next */
    cov_l79ej0g0l().s[102]++;
    const visit = token => {
      /* istanbul ignore next */
      cov_l79ej0g0l().f[12]++;
      cov_l79ej0g0l().s[103]++;
      if (visiting.has(token)) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[21][0]++;
        cov_l79ej0g0l().s[104]++;
        throw new Error(`Circular dependency detected involving: ${String(token)}`);
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[21][1]++;
      }
      cov_l79ej0g0l().s[105]++;
      if (visited.has(token)) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[22][0]++;
        cov_l79ej0g0l().s[106]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[22][1]++;
      }
      cov_l79ej0g0l().s[107]++;
      visiting.add(token);
      const depConfig =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[108]++, this.dependencies.get(token));
      /* istanbul ignore next */
      cov_l79ej0g0l().s[109]++;
      if (depConfig) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[23][0]++;
        cov_l79ej0g0l().s[110]++;
        for (const dependency of depConfig.dependencies) {
          /* istanbul ignore next */
          cov_l79ej0g0l().s[111]++;
          visit(dependency);
        }
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[23][1]++;
      }
      cov_l79ej0g0l().s[112]++;
      visiting.delete(token);
      /* istanbul ignore next */
      cov_l79ej0g0l().s[113]++;
      visited.add(token);
    };
    // Check the new dependency
    /* istanbul ignore next */
    cov_l79ej0g0l().s[114]++;
    for (const dependency of config.dependencies) {
      /* istanbul ignore next */
      cov_l79ej0g0l().s[115]++;
      visit(dependency);
    }
    // Check if adding this dependency creates a cycle
    /* istanbul ignore next */
    cov_l79ej0g0l().s[116]++;
    visit(config.token);
  }
  /**
   * Resolve multiple dependencies
   *
   * @param tokens Dependency tokens
   * @param context Resolution context
   * @returns Array of resolved dependencies
   */
  async resolveDependencies(tokens, context) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[13]++;
    const resolved =
    /* istanbul ignore next */
    (cov_l79ej0g0l().s[117]++, []);
    /* istanbul ignore next */
    cov_l79ej0g0l().s[118]++;
    for (const token of tokens) {
      const dependency =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[119]++, await this.resolve(token, context));
      /* istanbul ignore next */
      cov_l79ej0g0l().s[120]++;
      resolved.push(dependency);
    }
    /* istanbul ignore next */
    cov_l79ej0g0l().s[121]++;
    return resolved;
  }
  /**
   * Create instance from factory
   *
   * @param config Dependency configuration
   * @param dependencies Resolved dependencies
   * @returns Created instance
   */
  async createInstance(config, dependencies) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[14]++;
    cov_l79ej0g0l().s[122]++;
    try {
      // Call factory function with dependencies
      const instance =
      /* istanbul ignore next */
      (cov_l79ej0g0l().s[123]++, await config.factory.apply(null, dependencies));
      // Validate instance
      /* istanbul ignore next */
      cov_l79ej0g0l().s[124]++;
      if (
      /* istanbul ignore next */
      (cov_l79ej0g0l().b[25][0]++, instance === undefined) ||
      /* istanbul ignore next */
      (cov_l79ej0g0l().b[25][1]++, instance === null)) {
        /* istanbul ignore next */
        cov_l79ej0g0l().b[24][0]++;
        cov_l79ej0g0l().s[125]++;
        throw new Error(`Factory returned null/undefined for: ${String(config.token)}`);
      } else
      /* istanbul ignore next */
      {
        cov_l79ej0g0l().b[24][1]++;
      }
      cov_l79ej0g0l().s[126]++;
      return instance;
    } catch (error) {
      /* istanbul ignore next */
      cov_l79ej0g0l().s[127]++;
      throw new Error(`Failed to create instance for ${String(config.token)}: ${error}`);
    }
  }
}
/* istanbul ignore next */
cov_l79ej0g0l().s[128]++;
exports.DependencyManager = DependencyManager;
/**
 * Dependency tokens for system components
 */
/* istanbul ignore next */
cov_l79ej0g0l().s[129]++;
exports.DependencyTokens = {
  // Core services
  LOGGER: Symbol('LOGGER'),
  AUDIT_SERVICE: Symbol('AUDIT_SERVICE'),
  CONFIG_SERVICE: Symbol('CONFIG_SERVICE'),
  // Security services
  SECURITY_MANAGER: Symbol('SECURITY_MANAGER'),
  ENCRYPTION_SERVICE: Symbol('ENCRYPTION_SERVICE'),
  THREAT_DETECTION: Symbol('THREAT_DETECTION'),
  // Infrastructure services
  SYSTEM_MONITOR: Symbol('SYSTEM_MONITOR'),
  TUNNEL_MANAGER: Symbol('TUNNEL_MANAGER'),
  DATABASE_SERVICE: Symbol('DATABASE_SERVICE'),
  // Trading services
  TRADING_ENGINE: Symbol('TRADING_ENGINE'),
  RISK_MANAGER: Symbol('RISK_MANAGER'),
  STRATEGY_ENGINE: Symbol('STRATEGY_ENGINE'),
  ORDER_MANAGER: Symbol('ORDER_MANAGER'),
  // AI services
  LLM_ENGINE: Symbol('LLM_ENGINE'),
  SENTIMENT_ANALYZER: Symbol('SENTIMENT_ANALYZER'),
  MARKET_ANALYZER: Symbol('MARKET_ANALYZER'),
  // Communication services
  NOTIFICATION_MANAGER: Symbol('NOTIFICATION_MANAGER'),
  EMAIL_SERVICE: Symbol('EMAIL_SERVICE'),
  TELEGRAM_SERVICE: Symbol('TELEGRAM_SERVICE'),
  // API services
  GATE_IO_CLIENT: Symbol('GATE_IO_CLIENT'),
  TUNNEL_ROUTER: Symbol('TUNNEL_ROUTER')
};
/**
 * Global dependency manager instance
 */
/* istanbul ignore next */
cov_l79ej0g0l().s[130]++;
exports.dependencyManager = new DependencyManager();
/**
 * Decorator for dependency injection
 *
 * @param token Dependency token
 * @returns Property decorator
 */
function Inject(token) {
  /* istanbul ignore next */
  cov_l79ej0g0l().f[15]++;
  cov_l79ej0g0l().s[131]++;
  return function (target, propertyKey) {
    /* istanbul ignore next */
    cov_l79ej0g0l().f[16]++;
    cov_l79ej0g0l().s[132]++;
    // Store dependency metadata for later injection
    if (!target._dependencies) {
      /* istanbul ignore next */
      cov_l79ej0g0l().b[26][0]++;
      cov_l79ej0g0l().s[133]++;
      target._dependencies = [];
    } else
    /* istanbul ignore next */
    {
      cov_l79ej0g0l().b[26][1]++;
    }
    cov_l79ej0g0l().s[134]++;
    target._dependencies.push({
      token,
      propertyKey
    });
  };
}
/**
 * Helper function to register a singleton dependency
 *
 * @param token Dependency token
 * @param factory Factory function
 * @param dependencies Dependencies
 * @param tags Tags
 * @param priority Priority
 */
function registerSingleton(token, factory, dependencies =
/* istanbul ignore next */
(cov_l79ej0g0l().b[27][0]++, []), tags =
/* istanbul ignore next */
(cov_l79ej0g0l().b[28][0]++, []), priority =
/* istanbul ignore next */
(cov_l79ej0g0l().b[29][0]++, 100)) {
  /* istanbul ignore next */
  cov_l79ej0g0l().f[17]++;
  cov_l79ej0g0l().s[135]++;
  exports.dependencyManager.register({
    token,
    factory,
    singleton: true,
    dependencies,
    priority,
    tags
  });
}
/**
 * Helper function to register a transient dependency
 *
 * @param token Dependency token
 * @param factory Factory function
 * @param dependencies Dependencies
 * @param tags Tags
 * @param priority Priority
 */
function registerTransient(token, factory, dependencies =
/* istanbul ignore next */
(cov_l79ej0g0l().b[30][0]++, []), tags =
/* istanbul ignore next */
(cov_l79ej0g0l().b[31][0]++, []), priority =
/* istanbul ignore next */
(cov_l79ej0g0l().b[32][0]++, 100)) {
  /* istanbul ignore next */
  cov_l79ej0g0l().f[18]++;
  cov_l79ej0g0l().s[136]++;
  exports.dependencyManager.register({
    token,
    factory,
    singleton: false,
    dependencies,
    priority,
    tags
  });
}
// =============================================================================
// DEPENDENCY MANAGEMENT NOTES
// =============================================================================
// 1. Comprehensive dependency injection with circular dependency detection
// 2. Singleton and transient dependency lifecycle management
// 3. Dependency resolution with proper error handling and logging
// 4. Metadata tracking for monitoring and debugging
// 5. Tag-based dependency categorization and filtering
// 6. Graceful shutdown with proper cleanup of singleton instances
// 7. Resolution context tracking for debugging complex dependency chains
// 8. Factory-based dependency creation with parameter injection
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,