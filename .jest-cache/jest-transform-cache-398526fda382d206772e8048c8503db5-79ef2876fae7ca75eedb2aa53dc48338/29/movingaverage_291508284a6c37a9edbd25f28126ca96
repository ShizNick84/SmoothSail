814d886c1251b8862863763931c2a8c6
"use strict";

/**
 * Moving Average Strategy Implementation
 *
 * This module implements Simple Moving Average (SMA) and Exponential Moving Average (EMA)
 * calculations with crossover signal detection and volume confirmation.
 *
 * Requirements: 4.1, 4.8 - Moving average crossover with configurable periods and signal strength
 */
/* istanbul ignore next */
function cov_8jz5m8s9d() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts";
  var hash = "c563f096fc2aed9fb190e6acbdd01c344860170a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "2": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "3": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "4": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "6": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 22
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "8": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "10": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "11": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "14": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "15": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "16": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 102
        }
      },
      "17": {
        start: {
          line: 38,
          column: 87
        },
        end: {
          line: 38,
          column: 98
        }
      },
      "18": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 22
        }
      },
      "20": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "21": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "23": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "25": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "26": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "27": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 61,
          column: 43
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "29": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 63,
          column: 22
        }
      },
      "30": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 30
        }
      },
      "31": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 96
        }
      },
      "32": {
        start: {
          line: 67,
          column: 72
        },
        end: {
          line: 67,
          column: 83
        }
      },
      "33": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 30
        }
      },
      "34": {
        start: {
          line: 70,
          column: 18
        },
        end: {
          line: 70,
          column: 26
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "36": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 71,
          column: 27
        }
      },
      "37": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 70
        }
      },
      "38": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 29
        }
      },
      "39": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 22
        }
      },
      "40": {
        start: {
          line: 85,
          column: 23
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "41": {
        start: {
          line: 85,
          column: 46
        },
        end: {
          line: 85,
          column: 56
        }
      },
      "42": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "43": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 87,
          column: 66
        }
      },
      "44": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 91,
          column: 10
        }
      },
      "45": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "46": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 24
        }
      },
      "47": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 105,
          column: 66
        }
      },
      "48": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 106,
          column: 71
        }
      },
      "49": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 87
        }
      },
      "50": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 89
        }
      },
      "51": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "52": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "53": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 34
        }
      },
      "54": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "55": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "56": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 43
        }
      },
      "57": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 100
        }
      },
      "58": {
        start: {
          line: 121,
          column: 13
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "59": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 42
        }
      },
      "60": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 100
        }
      },
      "61": {
        start: {
          line: 126,
          column: 32
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "62": {
        start: {
          line: 127,
          column: 27
        },
        end: {
          line: 127,
          column: 60
        }
      },
      "63": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "64": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 54
        }
      },
      "65": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 154,
          column: 52
        }
      },
      "66": {
        start: {
          line: 155,
          column: 37
        },
        end: {
          line: 155,
          column: 70
        }
      },
      "67": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 65
        }
      },
      "68": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 36
        }
      },
      "69": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "70": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 25
        }
      },
      "71": {
        start: {
          line: 170,
          column: 30
        },
        end: {
          line: 170,
          column: 70
        }
      },
      "72": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 172,
          column: 61
        }
      },
      "73": {
        start: {
          line: 172,
          column: 35
        },
        end: {
          line: 172,
          column: 52
        }
      },
      "74": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 83
        }
      },
      "75": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "76": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 24
        }
      },
      "77": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 82
        }
      },
      "78": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "79": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 199,
          column: 14
        }
      },
      "80": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 60
        }
      },
      "81": {
        start: {
          line: 202,
          column: 27
        },
        end: {
          line: 202,
          column: 87
        }
      },
      "82": {
        start: {
          line: 204,
          column: 25
        },
        end: {
          line: 204,
          column: 53
        }
      },
      "83": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "84": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 56
        }
      },
      "85": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 209,
          column: 75
        }
      },
      "86": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "87": {
        start: {
          line: 235,
          column: 29
        },
        end: {
          line: 235,
          column: 68
        }
      },
      "88": {
        start: {
          line: 236,
          column: 27
        },
        end: {
          line: 236,
          column: 78
        }
      },
      "89": {
        start: {
          line: 236,
          column: 70
        },
        end: {
          line: 236,
          column: 76
        }
      },
      "90": {
        start: {
          line: 237,
          column: 26
        },
        end: {
          line: 237,
          column: 76
        }
      },
      "91": {
        start: {
          line: 237,
          column: 69
        },
        end: {
          line: 237,
          column: 74
        }
      },
      "92": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "93": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 37
        }
      },
      "94": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 38
        }
      },
      "95": {
        start: {
          line: 241,
          column: 27
        },
        end: {
          line: 241,
          column: 48
        }
      },
      "96": {
        start: {
          line: 242,
          column: 25
        },
        end: {
          line: 242,
          column: 48
        }
      },
      "97": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 50
        }
      },
      "98": {
        start: {
          line: 246,
          column: 27
        },
        end: {
          line: 246,
          column: 36
        }
      },
      "99": {
        start: {
          line: 247,
          column: 29
        },
        end: {
          line: 247,
          column: 39
        }
      },
      "100": {
        start: {
          line: 248,
          column: 27
        },
        end: {
          line: 248,
          column: 48
        }
      },
      "101": {
        start: {
          line: 249,
          column: 25
        },
        end: {
          line: 249,
          column: 48
        }
      },
      "102": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 50
        }
      },
      "103": {
        start: {
          line: 261,
          column: 52
        },
        end: {
          line: 261,
          column: 71
        }
      },
      "104": {
        start: {
          line: 262,
          column: 27
        },
        end: {
          line: 262,
          column: 101
        }
      },
      "105": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "106": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 199
        }
      },
      "107": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 198
        }
      },
      "108": {
        start: {
          line: 277,
          column: 26
        },
        end: {
          line: 277,
          column: 41
        }
      },
      "109": {
        start: {
          line: 278,
          column: 23
        },
        end: {
          line: 278,
          column: 65
        }
      },
      "110": {
        start: {
          line: 280,
          column: 29
        },
        end: {
          line: 280,
          column: 67
        }
      },
      "111": {
        start: {
          line: 280,
          column: 59
        },
        end: {
          line: 280,
          column: 66
        }
      },
      "112": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 79
        }
      },
      "113": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 85
        }
      },
      "114": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "115": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 294,
          column: 10
        }
      },
      "116": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 304,
          column: 22
        }
      },
      "117": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 22
        }
      },
      "118": {
        start: {
          line: 305,
          column: 28
        },
        end: {
          line: 305,
          column: 79
        }
      },
      "119": {
        start: {
          line: 306,
          column: 34
        },
        end: {
          line: 306,
          column: 63
        }
      },
      "120": {
        start: {
          line: 307,
          column: 26
        },
        end: {
          line: 307,
          column: 57
        }
      },
      "121": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 67
        }
      },
      "122": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "123": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 25
        }
      },
      "124": {
        start: {
          line: 321,
          column: 30
        },
        end: {
          line: 321,
          column: 51
        }
      },
      "125": {
        start: {
          line: 322,
          column: 30
        },
        end: {
          line: 323,
          column: 51
        }
      },
      "126": {
        start: {
          line: 323,
          column: 34
        },
        end: {
          line: 323,
          column: 43
        }
      },
      "127": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 83
        }
      },
      "128": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "129": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 21
        }
      },
      "130": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 45
        }
      },
      "131": {
        start: {
          line: 337,
          column: 27
        },
        end: {
          line: 337,
          column: 80
        }
      },
      "132": {
        start: {
          line: 338,
          column: 29
        },
        end: {
          line: 338,
          column: 102
        }
      },
      "133": {
        start: {
          line: 338,
          column: 65
        },
        end: {
          line: 338,
          column: 76
        }
      },
      "134": {
        start: {
          line: 340,
          column: 27
        },
        end: {
          line: 340,
          column: 60
        }
      },
      "135": {
        start: {
          line: 343,
          column: 25
        },
        end: {
          line: 343,
          column: 55
        }
      },
      "136": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 36
        }
      },
      "137": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "138": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 358,
          column: 13
        }
      },
      "139": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 355,
          column: 17
        }
      },
      "140": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 74
        }
      },
      "141": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 59
        }
      },
      "142": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 365,
          column: 13
        }
      },
      "143": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 362,
          column: 17
        }
      },
      "144": {
        start: {
          line: 361,
          column: 20
        },
        end: {
          line: 361,
          column: 74
        }
      },
      "145": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 59
        }
      },
      "146": {
        start: {
          line: 367,
          column: 31
        },
        end: {
          line: 367,
          column: 74
        }
      },
      "147": {
        start: {
          line: 368,
          column: 31
        },
        end: {
          line: 368,
          column: 74
        }
      },
      "148": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "149": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 77
        }
      },
      "150": {
        start: {
          line: 375,
          column: 0
        },
        end: {
          line: 375,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 71
          },
          end: {
            line: 38,
            column: 72
          }
        },
        loc: {
          start: {
            line: 38,
            column: 87
          },
          end: {
            line: 38,
            column: 98
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 67,
            column: 56
          },
          end: {
            line: 67,
            column: 57
          }
        },
        loc: {
          start: {
            line: 67,
            column: 72
          },
          end: {
            line: 67,
            column: 83
          }
        },
        line: 67
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 112
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 85,
            column: 39
          }
        },
        loc: {
          start: {
            line: 85,
            column: 46
          },
          end: {
            line: 85,
            column: 56
          }
        },
        line: 85
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 106
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 60
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 152
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 34
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 166
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 172,
            column: 20
          },
          end: {
            line: 172,
            column: 21
          }
        },
        loc: {
          start: {
            line: 172,
            column: 35
          },
          end: {
            line: 172,
            column: 52
          }
        },
        line: 172
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 105
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 182
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 48
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 234
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 236,
            column: 65
          },
          end: {
            line: 236,
            column: 66
          }
        },
        loc: {
          start: {
            line: 236,
            column: 70
          },
          end: {
            line: 236,
            column: 76
          }
        },
        line: 236
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 237,
            column: 64
          },
          end: {
            line: 237,
            column: 65
          }
        },
        loc: {
          start: {
            line: 237,
            column: 69
          },
          end: {
            line: 237,
            column: 74
          }
        },
        line: 237
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 57
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 260
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        loc: {
          start: {
            line: 276,
            column: 49
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 276
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 280,
            column: 54
          },
          end: {
            line: 280,
            column: 55
          }
        },
        loc: {
          start: {
            line: 280,
            column: 59
          },
          end: {
            line: 280,
            column: 66
          }
        },
        line: 280
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 302
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 45
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 317
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 323,
            column: 20
          },
          end: {
            line: 323,
            column: 21
          }
        },
        loc: {
          start: {
            line: 323,
            column: 34
          },
          end: {
            line: 323,
            column: 43
          }
        },
        line: 323
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 51
          },
          end: {
            line: 345,
            column: 5
          }
        },
        line: 332
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 338,
            column: 49
          },
          end: {
            line: 338,
            column: 50
          }
        },
        loc: {
          start: {
            line: 338,
            column: 65
          },
          end: {
            line: 338,
            column: 76
          }
        },
        line: 338
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 24
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 350
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 40,
            column: 13
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 84,
            column: 51
          },
          end: {
            line: 84,
            column: 73
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 75
          },
          end: {
            line: 84,
            column: 110
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 84,
            column: 88
          },
          end: {
            line: 84,
            column: 110
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 89,
            column: 21
          },
          end: {
            line: 89,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 63
          },
          end: {
            line: 89,
            column: 100
          }
        }, {
          start: {
            line: 89,
            column: 103
          },
          end: {
            line: 89,
            column: 107
          }
        }],
        line: 89
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 21
          },
          end: {
            line: 89,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 21
          },
          end: {
            line: 89,
            column: 33
          }
        }, {
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 89,
            column: 60
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 21
          },
          end: {
            line: 90,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 63
          },
          end: {
            line: 90,
            column: 100
          }
        }, {
          start: {
            line: 90,
            column: 103
          },
          end: {
            line: 90,
            column: 107
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 90,
            column: 21
          },
          end: {
            line: 90,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 21
          },
          end: {
            line: 90,
            column: 33
          }
        }, {
          start: {
            line: 90,
            column: 37
          },
          end: {
            line: 90,
            column: 60
          }
        }],
        line: 90
      },
      "13": {
        loc: {
          start: {
            line: 100,
            column: 32
          },
          end: {
            line: 100,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 100,
            column: 67
          }
        }],
        line: 100
      },
      "14": {
        loc: {
          start: {
            line: 100,
            column: 69
          },
          end: {
            line: 100,
            column: 104
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 82
          },
          end: {
            line: 100,
            column: 104
          }
        }],
        line: 100
      },
      "15": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "16": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 38
          }
        }, {
          start: {
            line: 101,
            column: 42
          },
          end: {
            line: 101,
            column: 98
          }
        }],
        line: 101
      },
      "17": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 109,
            column: 28
          }
        }, {
          start: {
            line: 109,
            column: 32
          },
          end: {
            line: 109,
            column: 48
          }
        }, {
          start: {
            line: 109,
            column: 52
          },
          end: {
            line: 109,
            column: 69
          }
        }, {
          start: {
            line: 109,
            column: 73
          },
          end: {
            line: 109,
            column: 90
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: 121,
            column: 13
          },
          end: {
            line: 124,
            column: 9
          }
        }],
        line: 116
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 116,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 116,
            column: 48
          }
        }, {
          start: {
            line: 116,
            column: 52
          },
          end: {
            line: 116,
            column: 85
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 121,
            column: 13
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 13
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "22": {
        loc: {
          start: {
            line: 121,
            column: 17
          },
          end: {
            line: 121,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 17
          },
          end: {
            line: 121,
            column: 53
          }
        }, {
          start: {
            line: 121,
            column: 57
          },
          end: {
            line: 121,
            column: 90
          }
        }],
        line: 121
      },
      "23": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "24": {
        loc: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 182,
            column: 44
          },
          end: {
            line: 182,
            column: 66
          }
        }],
        line: 182
      },
      "25": {
        loc: {
          start: {
            line: 182,
            column: 68
          },
          end: {
            line: 182,
            column: 103
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 182,
            column: 81
          },
          end: {
            line: 182,
            column: 103
          }
        }],
        line: 182
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 38
          }
        }, {
          start: {
            line: 183,
            column: 42
          },
          end: {
            line: 183,
            column: 65
          }
        }],
        line: 183
      },
      "28": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "29": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 22
          }
        }, {
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 46
          }
        }, {
          start: {
            line: 187,
            column: 50
          },
          end: {
            line: 187,
            column: 85
          }
        }],
        line: 187
      },
      "30": {
        loc: {
          start: {
            line: 202,
            column: 27
          },
          end: {
            line: 202,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 73
          },
          end: {
            line: 202,
            column: 78
          }
        }, {
          start: {
            line: 202,
            column: 81
          },
          end: {
            line: 202,
            column: 87
          }
        }],
        line: 202
      },
      "31": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "32": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: 245,
            column: 13
          },
          end: {
            line: 251,
            column: 9
          }
        }],
        line: 238
      },
      "33": {
        loc: {
          start: {
            line: 243,
            column: 19
          },
          end: {
            line: 243,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 30
          },
          end: {
            line: 243,
            column: 43
          }
        }, {
          start: {
            line: 243,
            column: 46
          },
          end: {
            line: 243,
            column: 49
          }
        }],
        line: 243
      },
      "34": {
        loc: {
          start: {
            line: 250,
            column: 19
          },
          end: {
            line: 250,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 30
          },
          end: {
            line: 250,
            column: 43
          }
        }, {
          start: {
            line: 250,
            column: 46
          },
          end: {
            line: 250,
            column: 49
          }
        }],
        line: 250
      },
      "35": {
        loc: {
          start: {
            line: 262,
            column: 27
          },
          end: {
            line: 262,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 262,
            column: 79
          }
        }, {
          start: {
            line: 262,
            column: 82
          },
          end: {
            line: 262,
            column: 101
          }
        }],
        line: 262
      },
      "36": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: 266,
            column: 13
          },
          end: {
            line: 268,
            column: 9
          }
        }],
        line: 263
      },
      "37": {
        loc: {
          start: {
            line: 278,
            column: 23
          },
          end: {
            line: 278,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 278,
            column: 58
          },
          end: {
            line: 278,
            column: 60
          }
        }, {
          start: {
            line: 278,
            column: 63
          },
          end: {
            line: 278,
            column: 65
          }
        }],
        line: 278
      },
      "38": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 304,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 304,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "39": {
        loc: {
          start: {
            line: 306,
            column: 34
          },
          end: {
            line: 306,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 57
          },
          end: {
            line: 306,
            column: 58
          }
        }, {
          start: {
            line: 306,
            column: 61
          },
          end: {
            line: 306,
            column: 63
          }
        }],
        line: 306
      },
      "40": {
        loc: {
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "41": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 318,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 318,
            column: 30
          }
        }, {
          start: {
            line: 318,
            column: 34
          },
          end: {
            line: 318,
            column: 50
          }
        }],
        line: 318
      },
      "42": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "43": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 333,
            column: 39
          }
        }, {
          start: {
            line: 333,
            column: 43
          },
          end: {
            line: 333,
            column: 60
          }
        }],
        line: 333
      },
      "44": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "45": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 358,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 358,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "46": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 355,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 355,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "47": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "48": {
        loc: {
          start: {
            line: 360,
            column: 16
          },
          end: {
            line: 362,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 16
          },
          end: {
            line: 362,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "49": {
        loc: {
          start: {
            line: 367,
            column: 31
          },
          end: {
            line: 367,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 31
          },
          end: {
            line: 367,
            column: 48
          }
        }, {
          start: {
            line: 367,
            column: 52
          },
          end: {
            line: 367,
            column: 74
          }
        }],
        line: 367
      },
      "50": {
        loc: {
          start: {
            line: 368,
            column: 31
          },
          end: {
            line: 368,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 31
          },
          end: {
            line: 368,
            column: 48
          }
        }, {
          start: {
            line: 368,
            column: 52
          },
          end: {
            line: 368,
            column: 74
          }
        }],
        line: 368
      },
      "51": {
        loc: {
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts"],
      sourcesContent: ["/**\r\n * Moving Average Strategy Implementation\r\n * \r\n * This module implements Simple Moving Average (SMA) and Exponential Moving Average (EMA)\r\n * calculations with crossover signal detection and volume confirmation.\r\n * \r\n * Requirements: 4.1, 4.8 - Moving average crossover with configurable periods and signal strength\r\n */\r\n\r\nimport { MarketData, MovingAverageSignal, TradingSignal, SignalConfidence } from './types';\r\n\r\nexport class MovingAverageStrategy {\r\n  private readonly defaultFastPeriod = 20;\r\n  private readonly defaultSlowPeriod = 50;\r\n  private readonly volumeConfirmationThreshold = 1.5; // 50% above average volume\r\n\r\n  /**\r\n   * Calculate Simple Moving Average (SMA)\r\n   * @param prices Array of price values\r\n   * @param period Number of periods for calculation\r\n   * @returns Array of SMA values or null if insufficient data\r\n   */\r\n  public calculateSMA(prices: number[], period: number): (number | null)[] | null {\r\n    if (prices.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (prices.length < period) {\r\n      return null;\r\n    }\r\n\r\n    if (prices.length === 1) {\r\n      return [prices[0]];\r\n    }\r\n\r\n    const result: (number | null)[] = [];\r\n    \r\n    for (let i = 0; i < prices.length; i++) {\r\n      if (i < period - 1) {\r\n        result.push(null);\r\n      } else {\r\n        const sum = prices.slice(i - period + 1, i + 1).reduce((acc, price) => acc + price, 0);\r\n        result.push(sum / period);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate Exponential Moving Average (EMA)\r\n   * @param prices Array of price values\r\n   * @param period Number of periods for calculation\r\n   * @returns Array of EMA values or null if insufficient data\r\n   */\r\n  public calculateEMA(prices: number[], period: number): (number | null)[] | null {\r\n    if (prices.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (prices.length < period) {\r\n      return null;\r\n    }\r\n\r\n    if (prices.length === 1) {\r\n      return [prices[0]];\r\n    }\r\n\r\n    const result: (number | null)[] = [];\r\n    const multiplier = 2 / (period + 1);\r\n    \r\n    // Fill initial values with null\r\n    for (let i = 0; i < period - 1; i++) {\r\n      result.push(null);\r\n    }\r\n    \r\n    // Calculate first EMA as SMA\r\n    const firstSMA = prices.slice(0, period).reduce((sum, price) => sum + price, 0) / period;\r\n    result.push(firstSMA);\r\n    \r\n    // Calculate subsequent EMAs\r\n    let ema = firstSMA;\r\n    for (let i = period; i < prices.length; i++) {\r\n      ema = (prices[i] * multiplier) + (ema * (1 - multiplier));\r\n      result.push(ema);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate multiple EMAs for crossover analysis\r\n   * @param marketData Array of market data\r\n   * @param fastPeriod Fast EMA period (default: 20)\r\n   * @param slowPeriod Slow EMA period (default: 50)\r\n   * @returns Object containing fast and slow EMA values\r\n   */\r\n  public calculateEMACrossover(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): { fastEMA: number | null; slowEMA: number | null } {\r\n    const prices = marketData.map(data => data.close);\r\n    \r\n    const fastEMAArray = this.calculateEMA(prices, fastPeriod);\r\n    const slowEMAArray = this.calculateEMA(prices, slowPeriod);\r\n    \r\n    return {\r\n      fastEMA: fastEMAArray && fastEMAArray.length > 0 ? fastEMAArray[fastEMAArray.length - 1] : null,\r\n      slowEMA: slowEMAArray && slowEMAArray.length > 0 ? slowEMAArray[slowEMAArray.length - 1] : null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Detect moving average crossover signals\r\n   * @param marketData Array of market data (minimum 2 periods for crossover detection)\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns MovingAverageSignal with crossover information\r\n   */\r\n  public detectCrossover(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): MovingAverageSignal | null {\r\n    if (!Array.isArray(marketData) || marketData.length < Math.max(fastPeriod, slowPeriod) + 1) {\r\n      return null;\r\n    }\r\n\r\n    // Calculate current EMAs\r\n    const currentData = marketData.slice(0, marketData.length);\r\n    const previousData = marketData.slice(0, marketData.length - 1);\r\n\r\n    const current = this.calculateEMACrossover(currentData, fastPeriod, slowPeriod);\r\n    const previous = this.calculateEMACrossover(previousData, fastPeriod, slowPeriod);\r\n\r\n    if (!current.fastEMA || !current.slowEMA || !previous.fastEMA || !previous.slowEMA) {\r\n      return null;\r\n    }\r\n\r\n    // Determine crossover type\r\n    let crossoverType: 'GOLDEN_CROSS' | 'DEATH_CROSS' | 'NONE' = 'NONE';\r\n    let strength = 0;\r\n\r\n    // Golden Cross: Fast EMA crosses above Slow EMA (bullish)\r\n    if (previous.fastEMA <= previous.slowEMA && current.fastEMA > current.slowEMA) {\r\n      crossoverType = 'GOLDEN_CROSS';\r\n      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bullish');\r\n    }\r\n    // Death Cross: Fast EMA crosses below Slow EMA (bearish)\r\n    else if (previous.fastEMA >= previous.slowEMA && current.fastEMA < current.slowEMA) {\r\n      crossoverType = 'DEATH_CROSS';\r\n      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bearish');\r\n    }\r\n\r\n    // Check volume confirmation\r\n    const volumeConfirmed = this.isVolumeConfirmed(marketData);\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n\r\n    return {\r\n      name: 'EMA',\r\n      value: current.fastEMA,\r\n      timestamp: latestData.timestamp,\r\n      period: fastPeriod,\r\n      parameters: {\r\n        fastPeriod,\r\n        slowPeriod,\r\n        slowEMA: current.slowEMA\r\n      },\r\n      crossover: {\r\n        type: crossoverType,\r\n        strength,\r\n        volumeConfirmed\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate crossover strength based on EMA separation\r\n   * @param fastEMA Fast EMA value\r\n   * @param slowEMA Slow EMA value\r\n   * @param direction Crossover direction\r\n   * @returns Strength score (0-100)\r\n   */\r\n  private calculateCrossoverStrength(\r\n    fastEMA: number,\r\n    slowEMA: number,\r\n    direction: 'bullish' | 'bearish'\r\n  ): number {\r\n    const separation = Math.abs(fastEMA - slowEMA);\r\n    const averagePrice = (fastEMA + slowEMA) / 2;\r\n    const separationPercentage = (separation / averagePrice) * 100;\r\n\r\n    // Normalize to 0-100 scale (higher separation = stronger signal)\r\n    // Typical separation ranges from 0.1% to 5% for most assets\r\n    const strength = Math.min(separationPercentage * 20, 100);\r\n    \r\n    return Math.round(strength);\r\n  }\r\n\r\n  /**\r\n   * Check if current volume confirms the crossover signal\r\n   * @param marketData Array of market data\r\n   * @returns True if volume is above average threshold\r\n   */\r\n  private isVolumeConfirmed(marketData: MarketData[]): boolean {\r\n    if (marketData.length < 20) {\r\n      return false; // Need at least 20 periods for volume analysis\r\n    }\r\n\r\n    const currentVolume = marketData[marketData.length - 1].volume;\r\n    const averageVolume = marketData.slice(-20)\r\n      .reduce((sum, data) => sum + data.volume, 0) / 20;\r\n\r\n    return currentVolume >= (averageVolume * this.volumeConfirmationThreshold);\r\n  }\r\n\r\n  /**\r\n   * Generate trading signal based on moving average crossover\r\n   * @param marketData Array of market data\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns TradingSignal or null if no signal\r\n   */\r\n  public generateSignal(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): TradingSignal | null {\r\n    if (!Array.isArray(marketData) || marketData.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const crossover = this.detectCrossover(marketData, fastPeriod, slowPeriod);\r\n    \r\n    if (!crossover || !crossover.crossover || crossover.crossover.type === 'NONE') {\r\n      return {\r\n        id: `ma_hold_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        symbol: marketData[marketData.length - 1].symbol,\r\n        type: 'HOLD',\r\n        strength: 0,\r\n        confidence: 50,\r\n        indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],\r\n        reasoning: 'No clear crossover signal detected',\r\n        riskReward: 1.0,\r\n        timestamp: marketData[marketData.length - 1].timestamp,\r\n        metadata: {}\r\n      };\r\n    }\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n    const signalType = crossover.crossover.type === 'GOLDEN_CROSS' ? 'BUY' : 'SELL';\r\n    \r\n    // Calculate confidence based on strength and volume confirmation\r\n    let confidence = crossover.crossover.strength;\r\n    if (crossover.crossover.volumeConfirmed) {\r\n      confidence = Math.min(confidence + 20, 100); // Boost confidence with volume\r\n    }\r\n\r\n    // Calculate risk-reward ratio (simplified for MA strategy)\r\n    const riskReward = this.calculateRiskReward(marketData, signalType);\r\n\r\n    return {\r\n      id: `ma_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      symbol: latestData.symbol,\r\n      type: signalType,\r\n      strength: crossover.crossover.strength,\r\n      confidence,\r\n      indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],\r\n      reasoning: this.generateReasoning(crossover, fastPeriod, slowPeriod),\r\n      riskReward,\r\n      timestamp: latestData.timestamp,\r\n      metadata: {\r\n        fastEMA: crossover.value,\r\n        slowEMA: crossover.parameters.slowEMA,\r\n        volumeConfirmed: crossover.crossover.volumeConfirmed,\r\n        crossoverType: crossover.crossover.type\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate risk-reward ratio for MA strategy\r\n   * @param marketData Array of market data\r\n   * @param signalType Signal type (BUY/SELL)\r\n   * @returns Risk-reward ratio\r\n   */\r\n  private calculateRiskReward(marketData: MarketData[], signalType: 'BUY' | 'SELL'): number {\r\n    const currentPrice = marketData[marketData.length - 1].close;\r\n    const recentHigh = Math.max(...marketData.slice(-20).map(d => d.high));\r\n    const recentLow = Math.min(...marketData.slice(-20).map(d => d.low));\r\n\r\n    if (signalType === 'BUY') {\r\n      const target = recentHigh;\r\n      const stopLoss = recentLow;\r\n      const reward = target - currentPrice;\r\n      const risk = currentPrice - stopLoss;\r\n      return risk > 0 ? reward / risk : 1.0;\r\n    } else {\r\n      const target = recentLow;\r\n      const stopLoss = recentHigh;\r\n      const reward = currentPrice - target;\r\n      const risk = stopLoss - currentPrice;\r\n      return risk > 0 ? reward / risk : 1.0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate human-readable reasoning for the signal\r\n   * @param crossover MovingAverageSignal data\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns Reasoning string\r\n   */\r\n  private generateReasoning(\r\n    crossover: MovingAverageSignal,\r\n    fastPeriod: number,\r\n    slowPeriod: number\r\n  ): string {\r\n    const { type, strength, volumeConfirmed } = crossover.crossover!;\r\n    const volumeText = volumeConfirmed ? ' with strong volume confirmation' : ' with weak volume';\r\n    \r\n    if (type === 'GOLDEN_CROSS') {\r\n      return `Golden Cross detected: ${fastPeriod}-period EMA crossed above ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bullish momentum.`;\r\n    } else {\r\n      return `Death Cross detected: ${fastPeriod}-period EMA crossed below ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bearish momentum.`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evaluate signal confidence based on multiple factors\r\n   * @param marketData Array of market data\r\n   * @param signal Generated trading signal\r\n   * @returns SignalConfidence object\r\n   */\r\n  public evaluateSignalConfidence(marketData: MarketData[], signal: TradingSignal): SignalConfidence {\r\n    const technical = signal.strength;\r\n    const volume = signal.metadata?.volumeConfirmed ? 80 : 40;\r\n    \r\n    // Calculate momentum based on recent price action\r\n    const recentPrices = marketData.slice(-5).map(d => d.close);\r\n    const momentum = this.calculateMomentumScore(recentPrices, signal.type);\r\n    \r\n    const overall = Math.round((technical * 0.4 + volume * 0.3 + momentum * 0.3));\r\n    \r\n    const factors = [\r\n      `EMA crossover strength: ${technical}/100`,\r\n      `Volume confirmation: ${volume}/100`,\r\n      `Price momentum: ${momentum}/100`\r\n    ];\r\n\r\n    return {\r\n      overall,\r\n      technical,\r\n      volume,\r\n      momentum,\r\n      factors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate momentum score based on recent price action\r\n   * @param prices Recent price array\r\n   * @param signalType Signal direction\r\n   * @returns Momentum score (0-100)\r\n   */\r\n  private calculateMomentumScore(prices: number[], signalType: 'BUY' | 'SELL'): number {\r\n    if (prices.length < 3) return 50;\r\n\r\n    const priceChange = (prices[prices.length - 1] - prices[0]) / prices[0];\r\n    const expectedDirection = signalType === 'BUY' ? 1 : -1;\r\n    const alignment = priceChange * expectedDirection;\r\n\r\n    // Convert to 0-100 scale\r\n    return Math.max(0, Math.min(100, 50 + (alignment * 1000)));\r\n  }\r\n\r\n  /**\r\n   * Confirm signal with volume analysis\r\n   * @param volumes Array of volume data\r\n   * @param currentIndex Current index to analyze\r\n   * @returns True if volume confirms the signal\r\n   */\r\n  public confirmWithVolume(volumes: number[], currentIndex: number): boolean {\r\n    if (volumes.length < 5 || currentIndex < 4) {\r\n      return false;\r\n    }\r\n\r\n    const currentVolume = volumes[currentIndex];\r\n    const averageVolume = volumes.slice(currentIndex - 4, currentIndex)\r\n      .reduce((sum, vol) => sum + vol, 0) / 4;\r\n\r\n    return currentVolume >= (averageVolume * this.volumeConfirmationThreshold);\r\n  }\r\n\r\n  /**\r\n   * Calculate signal strength based on price movements and crossover type\r\n   * @param prices Array of price data\r\n   * @param crossoverType Type of crossover detected\r\n   * @returns Signal strength (0-100)\r\n   */\r\n  public calculateSignalStrength(prices: number[], crossoverType: string): number {\r\n    if (crossoverType === 'INVALID' || prices.length < 5) {\r\n      return 0;\r\n    }\r\n\r\n    const recentPrices = prices.slice(-5);\r\n    const priceRange = Math.max(...recentPrices) - Math.min(...recentPrices);\r\n    const averagePrice = recentPrices.reduce((sum, price) => sum + price, 0) / recentPrices.length;\r\n    \r\n    // Calculate volatility as a percentage\r\n    const volatility = (priceRange / averagePrice) * 100;\r\n    \r\n    // Higher volatility generally means stronger signals\r\n    // Scale to 0-100 range\r\n    const strength = Math.min(volatility * 10, 100);\r\n    \r\n    return Math.round(strength);\r\n  }\r\n\r\n  /**\r\n   * Constructor with configuration validation\r\n   * @param config Configuration object\r\n   */\r\n  constructor(config?: { fastPeriod?: number; slowPeriod?: number }) {\r\n    if (config) {\r\n      if (config.fastPeriod !== undefined) {\r\n        if (config.fastPeriod <= 0) {\r\n          throw new Error('Fast period must be greater than 0');\r\n        }\r\n        // Override default if provided\r\n        (this as any).defaultFastPeriod = config.fastPeriod;\r\n      }\r\n      \r\n      if (config.slowPeriod !== undefined) {\r\n        if (config.slowPeriod <= 0) {\r\n          throw new Error('Slow period must be greater than 0');\r\n        }\r\n        // Override default if provided\r\n        (this as any).defaultSlowPeriod = config.slowPeriod;\r\n      }\r\n      \r\n      // Validate that fast period is less than slow period\r\n      const fastPeriod = config.fastPeriod || this.defaultFastPeriod;\r\n      const slowPeriod = config.slowPeriod || this.defaultSlowPeriod;\r\n      \r\n      if (fastPeriod >= slowPeriod) {\r\n        throw new Error('Fast period must be less than slow period');\r\n      }\r\n    }\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c563f096fc2aed9fb190e6acbdd01c344860170a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8jz5m8s9d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8jz5m8s9d();
cov_8jz5m8s9d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_8jz5m8s9d().s[1]++;
exports.MovingAverageStrategy = void 0;
class MovingAverageStrategy {
  defaultFastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().s[2]++, 20);
  defaultSlowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().s[3]++, 50);
  volumeConfirmationThreshold =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().s[4]++, 1.5); // 50% above average volume
  /**
   * Calculate Simple Moving Average (SMA)
   * @param prices Array of price values
   * @param period Number of periods for calculation
   * @returns Array of SMA values or null if insufficient data
   */
  calculateSMA(prices, period) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[0]++;
    cov_8jz5m8s9d().s[5]++;
    if (prices.length === 0) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[0][0]++;
      cov_8jz5m8s9d().s[6]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[0][1]++;
    }
    cov_8jz5m8s9d().s[7]++;
    if (prices.length < period) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[1][0]++;
      cov_8jz5m8s9d().s[8]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[1][1]++;
    }
    cov_8jz5m8s9d().s[9]++;
    if (prices.length === 1) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[2][0]++;
      cov_8jz5m8s9d().s[10]++;
      return [prices[0]];
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[2][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[11]++, []);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[12]++;
    for (let i =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[13]++, 0); i < prices.length; i++) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[14]++;
      if (i < period - 1) {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[3][0]++;
        cov_8jz5m8s9d().s[15]++;
        result.push(null);
      } else {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[3][1]++;
        const sum =
        /* istanbul ignore next */
        (cov_8jz5m8s9d().s[16]++, prices.slice(i - period + 1, i + 1).reduce((acc, price) => {
          /* istanbul ignore next */
          cov_8jz5m8s9d().f[1]++;
          cov_8jz5m8s9d().s[17]++;
          return acc + price;
        }, 0));
        /* istanbul ignore next */
        cov_8jz5m8s9d().s[18]++;
        result.push(sum / period);
      }
    }
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[19]++;
    return result;
  }
  /**
   * Calculate Exponential Moving Average (EMA)
   * @param prices Array of price values
   * @param period Number of periods for calculation
   * @returns Array of EMA values or null if insufficient data
   */
  calculateEMA(prices, period) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[2]++;
    cov_8jz5m8s9d().s[20]++;
    if (prices.length === 0) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[4][0]++;
      cov_8jz5m8s9d().s[21]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[4][1]++;
    }
    cov_8jz5m8s9d().s[22]++;
    if (prices.length < period) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[5][0]++;
      cov_8jz5m8s9d().s[23]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[5][1]++;
    }
    cov_8jz5m8s9d().s[24]++;
    if (prices.length === 1) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[6][0]++;
      cov_8jz5m8s9d().s[25]++;
      return [prices[0]];
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[6][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[26]++, []);
    const multiplier =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[27]++, 2 / (period + 1));
    // Fill initial values with null
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[28]++;
    for (let i =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[29]++, 0); i < period - 1; i++) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[30]++;
      result.push(null);
    }
    // Calculate first EMA as SMA
    const firstSMA =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[31]++, prices.slice(0, period).reduce((sum, price) => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[3]++;
      cov_8jz5m8s9d().s[32]++;
      return sum + price;
    }, 0) / period);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[33]++;
    result.push(firstSMA);
    // Calculate subsequent EMAs
    let ema =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[34]++, firstSMA);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[35]++;
    for (let i =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[36]++, period); i < prices.length; i++) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[37]++;
      ema = prices[i] * multiplier + ema * (1 - multiplier);
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[38]++;
      result.push(ema);
    }
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[39]++;
    return result;
  }
  /**
   * Calculate multiple EMAs for crossover analysis
   * @param marketData Array of market data
   * @param fastPeriod Fast EMA period (default: 20)
   * @param slowPeriod Slow EMA period (default: 50)
   * @returns Object containing fast and slow EMA values
   */
  calculateEMACrossover(marketData, fastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[7][0]++, this.defaultFastPeriod), slowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[8][0]++, this.defaultSlowPeriod)) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[4]++;
    const prices =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[40]++, marketData.map(data => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[5]++;
      cov_8jz5m8s9d().s[41]++;
      return data.close;
    }));
    const fastEMAArray =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[42]++, this.calculateEMA(prices, fastPeriod));
    const slowEMAArray =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[43]++, this.calculateEMA(prices, slowPeriod));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[44]++;
    return {
      fastEMA:
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[10][0]++, fastEMAArray) &&
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[10][1]++, fastEMAArray.length > 0) ?
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[9][0]++, fastEMAArray[fastEMAArray.length - 1]) :
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[9][1]++, null),
      slowEMA:
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[12][0]++, slowEMAArray) &&
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[12][1]++, slowEMAArray.length > 0) ?
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[11][0]++, slowEMAArray[slowEMAArray.length - 1]) :
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[11][1]++, null)
    };
  }
  /**
   * Detect moving average crossover signals
   * @param marketData Array of market data (minimum 2 periods for crossover detection)
   * @param fastPeriod Fast EMA period
   * @param slowPeriod Slow EMA period
   * @returns MovingAverageSignal with crossover information
   */
  detectCrossover(marketData, fastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[13][0]++, this.defaultFastPeriod), slowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[14][0]++, this.defaultSlowPeriod)) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[6]++;
    cov_8jz5m8s9d().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[16][0]++, !Array.isArray(marketData)) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[16][1]++, marketData.length < Math.max(fastPeriod, slowPeriod) + 1)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[15][0]++;
      cov_8jz5m8s9d().s[46]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[15][1]++;
    }
    // Calculate current EMAs
    const currentData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[47]++, marketData.slice(0, marketData.length));
    const previousData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[48]++, marketData.slice(0, marketData.length - 1));
    const current =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[49]++, this.calculateEMACrossover(currentData, fastPeriod, slowPeriod));
    const previous =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[50]++, this.calculateEMACrossover(previousData, fastPeriod, slowPeriod));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[51]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[18][0]++, !current.fastEMA) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[18][1]++, !current.slowEMA) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[18][2]++, !previous.fastEMA) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[18][3]++, !previous.slowEMA)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[17][0]++;
      cov_8jz5m8s9d().s[52]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[17][1]++;
    }
    // Determine crossover type
    let crossoverType =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[53]++, 'NONE');
    let strength =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[54]++, 0);
    // Golden Cross: Fast EMA crosses above Slow EMA (bullish)
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[20][0]++, previous.fastEMA <= previous.slowEMA) &&
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[20][1]++, current.fastEMA > current.slowEMA)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[19][0]++;
      cov_8jz5m8s9d().s[56]++;
      crossoverType = 'GOLDEN_CROSS';
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[57]++;
      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bullish');
    }
    // Death Cross: Fast EMA crosses below Slow EMA (bearish)
    else {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[19][1]++;
      cov_8jz5m8s9d().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[22][0]++, previous.fastEMA >= previous.slowEMA) &&
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[22][1]++, current.fastEMA < current.slowEMA)) {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[21][0]++;
        cov_8jz5m8s9d().s[59]++;
        crossoverType = 'DEATH_CROSS';
        /* istanbul ignore next */
        cov_8jz5m8s9d().s[60]++;
        strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bearish');
      } else
      /* istanbul ignore next */
      {
        cov_8jz5m8s9d().b[21][1]++;
      }
    }
    // Check volume confirmation
    const volumeConfirmed =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[61]++, this.isVolumeConfirmed(marketData));
    const latestData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[62]++, marketData[marketData.length - 1]);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[63]++;
    return {
      name: 'EMA',
      value: current.fastEMA,
      timestamp: latestData.timestamp,
      period: fastPeriod,
      parameters: {
        fastPeriod,
        slowPeriod,
        slowEMA: current.slowEMA
      },
      crossover: {
        type: crossoverType,
        strength,
        volumeConfirmed
      }
    };
  }
  /**
   * Calculate crossover strength based on EMA separation
   * @param fastEMA Fast EMA value
   * @param slowEMA Slow EMA value
   * @param direction Crossover direction
   * @returns Strength score (0-100)
   */
  calculateCrossoverStrength(fastEMA, slowEMA, direction) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[7]++;
    const separation =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[64]++, Math.abs(fastEMA - slowEMA));
    const averagePrice =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[65]++, (fastEMA + slowEMA) / 2);
    const separationPercentage =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[66]++, separation / averagePrice * 100);
    // Normalize to 0-100 scale (higher separation = stronger signal)
    // Typical separation ranges from 0.1% to 5% for most assets
    const strength =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[67]++, Math.min(separationPercentage * 20, 100));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[68]++;
    return Math.round(strength);
  }
  /**
   * Check if current volume confirms the crossover signal
   * @param marketData Array of market data
   * @returns True if volume is above average threshold
   */
  isVolumeConfirmed(marketData) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[8]++;
    cov_8jz5m8s9d().s[69]++;
    if (marketData.length < 20) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[23][0]++;
      cov_8jz5m8s9d().s[70]++;
      return false; // Need at least 20 periods for volume analysis
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[23][1]++;
    }
    const currentVolume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[71]++, marketData[marketData.length - 1].volume);
    const averageVolume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[72]++, marketData.slice(-20).reduce((sum, data) => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[9]++;
      cov_8jz5m8s9d().s[73]++;
      return sum + data.volume;
    }, 0) / 20);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[74]++;
    return currentVolume >= averageVolume * this.volumeConfirmationThreshold;
  }
  /**
   * Generate trading signal based on moving average crossover
   * @param marketData Array of market data
   * @param fastPeriod Fast EMA period
   * @param slowPeriod Slow EMA period
   * @returns TradingSignal or null if no signal
   */
  generateSignal(marketData, fastPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[24][0]++, this.defaultFastPeriod), slowPeriod =
  /* istanbul ignore next */
  (cov_8jz5m8s9d().b[25][0]++, this.defaultSlowPeriod)) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[10]++;
    cov_8jz5m8s9d().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[27][0]++, !Array.isArray(marketData)) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[27][1]++, marketData.length === 0)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[26][0]++;
      cov_8jz5m8s9d().s[76]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[26][1]++;
    }
    const crossover =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[77]++, this.detectCrossover(marketData, fastPeriod, slowPeriod));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[29][0]++, !crossover) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[29][1]++, !crossover.crossover) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[29][2]++, crossover.crossover.type === 'NONE')) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[28][0]++;
      cov_8jz5m8s9d().s[79]++;
      return {
        id: `ma_hold_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        symbol: marketData[marketData.length - 1].symbol,
        type: 'HOLD',
        strength: 0,
        confidence: 50,
        indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],
        reasoning: 'No clear crossover signal detected',
        riskReward: 1.0,
        timestamp: marketData[marketData.length - 1].timestamp,
        metadata: {}
      };
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[28][1]++;
    }
    const latestData =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[80]++, marketData[marketData.length - 1]);
    const signalType =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[81]++, crossover.crossover.type === 'GOLDEN_CROSS' ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[30][0]++, 'BUY') :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[30][1]++, 'SELL'));
    // Calculate confidence based on strength and volume confirmation
    let confidence =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[82]++, crossover.crossover.strength);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[83]++;
    if (crossover.crossover.volumeConfirmed) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[31][0]++;
      cov_8jz5m8s9d().s[84]++;
      confidence = Math.min(confidence + 20, 100); // Boost confidence with volume
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[31][1]++;
    }
    // Calculate risk-reward ratio (simplified for MA strategy)
    const riskReward =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[85]++, this.calculateRiskReward(marketData, signalType));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[86]++;
    return {
      id: `ma_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      symbol: latestData.symbol,
      type: signalType,
      strength: crossover.crossover.strength,
      confidence,
      indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],
      reasoning: this.generateReasoning(crossover, fastPeriod, slowPeriod),
      riskReward,
      timestamp: latestData.timestamp,
      metadata: {
        fastEMA: crossover.value,
        slowEMA: crossover.parameters.slowEMA,
        volumeConfirmed: crossover.crossover.volumeConfirmed,
        crossoverType: crossover.crossover.type
      }
    };
  }
  /**
   * Calculate risk-reward ratio for MA strategy
   * @param marketData Array of market data
   * @param signalType Signal type (BUY/SELL)
   * @returns Risk-reward ratio
   */
  calculateRiskReward(marketData, signalType) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[11]++;
    const currentPrice =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[87]++, marketData[marketData.length - 1].close);
    const recentHigh =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[88]++, Math.max(...marketData.slice(-20).map(d => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[12]++;
      cov_8jz5m8s9d().s[89]++;
      return d.high;
    })));
    const recentLow =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[90]++, Math.min(...marketData.slice(-20).map(d => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[13]++;
      cov_8jz5m8s9d().s[91]++;
      return d.low;
    })));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[92]++;
    if (signalType === 'BUY') {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[32][0]++;
      const target =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[93]++, recentHigh);
      const stopLoss =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[94]++, recentLow);
      const reward =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[95]++, target - currentPrice);
      const risk =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[96]++, currentPrice - stopLoss);
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[97]++;
      return risk > 0 ?
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[33][0]++, reward / risk) :
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[33][1]++, 1.0);
    } else {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[32][1]++;
      const target =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[98]++, recentLow);
      const stopLoss =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[99]++, recentHigh);
      const reward =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[100]++, currentPrice - target);
      const risk =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[101]++, stopLoss - currentPrice);
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[102]++;
      return risk > 0 ?
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[34][0]++, reward / risk) :
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[34][1]++, 1.0);
    }
  }
  /**
   * Generate human-readable reasoning for the signal
   * @param crossover MovingAverageSignal data
   * @param fastPeriod Fast EMA period
   * @param slowPeriod Slow EMA period
   * @returns Reasoning string
   */
  generateReasoning(crossover, fastPeriod, slowPeriod) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[14]++;
    const {
      type,
      strength,
      volumeConfirmed
    } =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[103]++, crossover.crossover);
    const volumeText =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[104]++, volumeConfirmed ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[35][0]++, ' with strong volume confirmation') :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[35][1]++, ' with weak volume'));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[105]++;
    if (type === 'GOLDEN_CROSS') {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[36][0]++;
      cov_8jz5m8s9d().s[106]++;
      return `Golden Cross detected: ${fastPeriod}-period EMA crossed above ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bullish momentum.`;
    } else {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[36][1]++;
      cov_8jz5m8s9d().s[107]++;
      return `Death Cross detected: ${fastPeriod}-period EMA crossed below ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bearish momentum.`;
    }
  }
  /**
   * Evaluate signal confidence based on multiple factors
   * @param marketData Array of market data
   * @param signal Generated trading signal
   * @returns SignalConfidence object
   */
  evaluateSignalConfidence(marketData, signal) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[15]++;
    const technical =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[108]++, signal.strength);
    const volume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[109]++, signal.metadata?.volumeConfirmed ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[37][0]++, 80) :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[37][1]++, 40));
    // Calculate momentum based on recent price action
    const recentPrices =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[110]++, marketData.slice(-5).map(d => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[16]++;
      cov_8jz5m8s9d().s[111]++;
      return d.close;
    }));
    const momentum =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[112]++, this.calculateMomentumScore(recentPrices, signal.type));
    const overall =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[113]++, Math.round(technical * 0.4 + volume * 0.3 + momentum * 0.3));
    const factors =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[114]++, [`EMA crossover strength: ${technical}/100`, `Volume confirmation: ${volume}/100`, `Price momentum: ${momentum}/100`]);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[115]++;
    return {
      overall,
      technical,
      volume,
      momentum,
      factors
    };
  }
  /**
   * Calculate momentum score based on recent price action
   * @param prices Recent price array
   * @param signalType Signal direction
   * @returns Momentum score (0-100)
   */
  calculateMomentumScore(prices, signalType) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[17]++;
    cov_8jz5m8s9d().s[116]++;
    if (prices.length < 3) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[38][0]++;
      cov_8jz5m8s9d().s[117]++;
      return 50;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[38][1]++;
    }
    const priceChange =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[118]++, (prices[prices.length - 1] - prices[0]) / prices[0]);
    const expectedDirection =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[119]++, signalType === 'BUY' ?
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[39][0]++, 1) :
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[39][1]++, -1));
    const alignment =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[120]++, priceChange * expectedDirection);
    // Convert to 0-100 scale
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[121]++;
    return Math.max(0, Math.min(100, 50 + alignment * 1000));
  }
  /**
   * Confirm signal with volume analysis
   * @param volumes Array of volume data
   * @param currentIndex Current index to analyze
   * @returns True if volume confirms the signal
   */
  confirmWithVolume(volumes, currentIndex) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[18]++;
    cov_8jz5m8s9d().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[41][0]++, volumes.length < 5) ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[41][1]++, currentIndex < 4)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[40][0]++;
      cov_8jz5m8s9d().s[123]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[40][1]++;
    }
    const currentVolume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[124]++, volumes[currentIndex]);
    const averageVolume =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[125]++, volumes.slice(currentIndex - 4, currentIndex).reduce((sum, vol) => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[19]++;
      cov_8jz5m8s9d().s[126]++;
      return sum + vol;
    }, 0) / 4);
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[127]++;
    return currentVolume >= averageVolume * this.volumeConfirmationThreshold;
  }
  /**
   * Calculate signal strength based on price movements and crossover type
   * @param prices Array of price data
   * @param crossoverType Type of crossover detected
   * @returns Signal strength (0-100)
   */
  calculateSignalStrength(prices, crossoverType) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[20]++;
    cov_8jz5m8s9d().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[43][0]++, crossoverType === 'INVALID') ||
    /* istanbul ignore next */
    (cov_8jz5m8s9d().b[43][1]++, prices.length < 5)) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[42][0]++;
      cov_8jz5m8s9d().s[129]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[42][1]++;
    }
    const recentPrices =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[130]++, prices.slice(-5));
    const priceRange =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[131]++, Math.max(...recentPrices) - Math.min(...recentPrices));
    const averagePrice =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[132]++, recentPrices.reduce((sum, price) => {
      /* istanbul ignore next */
      cov_8jz5m8s9d().f[21]++;
      cov_8jz5m8s9d().s[133]++;
      return sum + price;
    }, 0) / recentPrices.length);
    // Calculate volatility as a percentage
    const volatility =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[134]++, priceRange / averagePrice * 100);
    // Higher volatility generally means stronger signals
    // Scale to 0-100 range
    const strength =
    /* istanbul ignore next */
    (cov_8jz5m8s9d().s[135]++, Math.min(volatility * 10, 100));
    /* istanbul ignore next */
    cov_8jz5m8s9d().s[136]++;
    return Math.round(strength);
  }
  /**
   * Constructor with configuration validation
   * @param config Configuration object
   */
  constructor(config) {
    /* istanbul ignore next */
    cov_8jz5m8s9d().f[22]++;
    cov_8jz5m8s9d().s[137]++;
    if (config) {
      /* istanbul ignore next */
      cov_8jz5m8s9d().b[44][0]++;
      cov_8jz5m8s9d().s[138]++;
      if (config.fastPeriod !== undefined) {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[45][0]++;
        cov_8jz5m8s9d().s[139]++;
        if (config.fastPeriod <= 0) {
          /* istanbul ignore next */
          cov_8jz5m8s9d().b[46][0]++;
          cov_8jz5m8s9d().s[140]++;
          throw new Error('Fast period must be greater than 0');
        } else
        /* istanbul ignore next */
        {
          cov_8jz5m8s9d().b[46][1]++;
        }
        // Override default if provided
        cov_8jz5m8s9d().s[141]++;
        this.defaultFastPeriod = config.fastPeriod;
      } else
      /* istanbul ignore next */
      {
        cov_8jz5m8s9d().b[45][1]++;
      }
      cov_8jz5m8s9d().s[142]++;
      if (config.slowPeriod !== undefined) {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[47][0]++;
        cov_8jz5m8s9d().s[143]++;
        if (config.slowPeriod <= 0) {
          /* istanbul ignore next */
          cov_8jz5m8s9d().b[48][0]++;
          cov_8jz5m8s9d().s[144]++;
          throw new Error('Slow period must be greater than 0');
        } else
        /* istanbul ignore next */
        {
          cov_8jz5m8s9d().b[48][1]++;
        }
        // Override default if provided
        cov_8jz5m8s9d().s[145]++;
        this.defaultSlowPeriod = config.slowPeriod;
      } else
      /* istanbul ignore next */
      {
        cov_8jz5m8s9d().b[47][1]++;
      }
      // Validate that fast period is less than slow period
      const fastPeriod =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[146]++,
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[49][0]++, config.fastPeriod) ||
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[49][1]++, this.defaultFastPeriod));
      const slowPeriod =
      /* istanbul ignore next */
      (cov_8jz5m8s9d().s[147]++,
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[50][0]++, config.slowPeriod) ||
      /* istanbul ignore next */
      (cov_8jz5m8s9d().b[50][1]++, this.defaultSlowPeriod));
      /* istanbul ignore next */
      cov_8jz5m8s9d().s[148]++;
      if (fastPeriod >= slowPeriod) {
        /* istanbul ignore next */
        cov_8jz5m8s9d().b[51][0]++;
        cov_8jz5m8s9d().s[149]++;
        throw new Error('Fast period must be less than slow period');
      } else
      /* istanbul ignore next */
      {
        cov_8jz5m8s9d().b[51][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_8jz5m8s9d().b[44][1]++;
    }
  }
}
/* istanbul ignore next */
cov_8jz5m8s9d().s[150]++;
exports.MovingAverageStrategy = MovingAverageStrategy;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,