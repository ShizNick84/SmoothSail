{"version":3,"names":["cov_8jz5m8s9d","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","MovingAverageStrategy","defaultFastPeriod","defaultSlowPeriod","volumeConfirmationThreshold","calculateSMA","prices","period","length","result","i","push","sum","slice","reduce","acc","price","calculateEMA","multiplier","firstSMA","ema","calculateEMACrossover","marketData","fastPeriod","slowPeriod","map","data","close","fastEMAArray","slowEMAArray","fastEMA","slowEMA","detectCrossover","Array","isArray","Math","max","currentData","previousData","current","previous","crossoverType","strength","calculateCrossoverStrength","volumeConfirmed","isVolumeConfirmed","latestData","value","timestamp","parameters","crossover","direction","separation","abs","averagePrice","separationPercentage","min","round","currentVolume","volume","averageVolume","generateSignal","id","Date","now","random","toString","substr","symbol","confidence","indicators","reasoning","riskReward","metadata","signalType","calculateRiskReward","generateReasoning","currentPrice","recentHigh","d","high","recentLow","low","target","stopLoss","reward","risk","volumeText","evaluateSignalConfidence","signal","technical","recentPrices","momentum","calculateMomentumScore","overall","factors","priceChange","expectedDirection","alignment","confirmWithVolume","volumes","currentIndex","vol","calculateSignalStrength","priceRange","volatility","constructor","config","Error","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\strategies\\moving-average.ts"],"sourcesContent":["/**\r\n * Moving Average Strategy Implementation\r\n * \r\n * This module implements Simple Moving Average (SMA) and Exponential Moving Average (EMA)\r\n * calculations with crossover signal detection and volume confirmation.\r\n * \r\n * Requirements: 4.1, 4.8 - Moving average crossover with configurable periods and signal strength\r\n */\r\n\r\nimport { MarketData, MovingAverageSignal, TradingSignal, SignalConfidence } from './types';\r\n\r\nexport class MovingAverageStrategy {\r\n  private readonly defaultFastPeriod = 20;\r\n  private readonly defaultSlowPeriod = 50;\r\n  private readonly volumeConfirmationThreshold = 1.5; // 50% above average volume\r\n\r\n  /**\r\n   * Calculate Simple Moving Average (SMA)\r\n   * @param prices Array of price values\r\n   * @param period Number of periods for calculation\r\n   * @returns Array of SMA values or null if insufficient data\r\n   */\r\n  public calculateSMA(prices: number[], period: number): (number | null)[] | null {\r\n    if (prices.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (prices.length < period) {\r\n      return null;\r\n    }\r\n\r\n    if (prices.length === 1) {\r\n      return [prices[0]];\r\n    }\r\n\r\n    const result: (number | null)[] = [];\r\n    \r\n    for (let i = 0; i < prices.length; i++) {\r\n      if (i < period - 1) {\r\n        result.push(null);\r\n      } else {\r\n        const sum = prices.slice(i - period + 1, i + 1).reduce((acc, price) => acc + price, 0);\r\n        result.push(sum / period);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate Exponential Moving Average (EMA)\r\n   * @param prices Array of price values\r\n   * @param period Number of periods for calculation\r\n   * @returns Array of EMA values or null if insufficient data\r\n   */\r\n  public calculateEMA(prices: number[], period: number): (number | null)[] | null {\r\n    if (prices.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    if (prices.length < period) {\r\n      return null;\r\n    }\r\n\r\n    if (prices.length === 1) {\r\n      return [prices[0]];\r\n    }\r\n\r\n    const result: (number | null)[] = [];\r\n    const multiplier = 2 / (period + 1);\r\n    \r\n    // Fill initial values with null\r\n    for (let i = 0; i < period - 1; i++) {\r\n      result.push(null);\r\n    }\r\n    \r\n    // Calculate first EMA as SMA\r\n    const firstSMA = prices.slice(0, period).reduce((sum, price) => sum + price, 0) / period;\r\n    result.push(firstSMA);\r\n    \r\n    // Calculate subsequent EMAs\r\n    let ema = firstSMA;\r\n    for (let i = period; i < prices.length; i++) {\r\n      ema = (prices[i] * multiplier) + (ema * (1 - multiplier));\r\n      result.push(ema);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate multiple EMAs for crossover analysis\r\n   * @param marketData Array of market data\r\n   * @param fastPeriod Fast EMA period (default: 20)\r\n   * @param slowPeriod Slow EMA period (default: 50)\r\n   * @returns Object containing fast and slow EMA values\r\n   */\r\n  public calculateEMACrossover(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): { fastEMA: number | null; slowEMA: number | null } {\r\n    const prices = marketData.map(data => data.close);\r\n    \r\n    const fastEMAArray = this.calculateEMA(prices, fastPeriod);\r\n    const slowEMAArray = this.calculateEMA(prices, slowPeriod);\r\n    \r\n    return {\r\n      fastEMA: fastEMAArray && fastEMAArray.length > 0 ? fastEMAArray[fastEMAArray.length - 1] : null,\r\n      slowEMA: slowEMAArray && slowEMAArray.length > 0 ? slowEMAArray[slowEMAArray.length - 1] : null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Detect moving average crossover signals\r\n   * @param marketData Array of market data (minimum 2 periods for crossover detection)\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns MovingAverageSignal with crossover information\r\n   */\r\n  public detectCrossover(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): MovingAverageSignal | null {\r\n    if (!Array.isArray(marketData) || marketData.length < Math.max(fastPeriod, slowPeriod) + 1) {\r\n      return null;\r\n    }\r\n\r\n    // Calculate current EMAs\r\n    const currentData = marketData.slice(0, marketData.length);\r\n    const previousData = marketData.slice(0, marketData.length - 1);\r\n\r\n    const current = this.calculateEMACrossover(currentData, fastPeriod, slowPeriod);\r\n    const previous = this.calculateEMACrossover(previousData, fastPeriod, slowPeriod);\r\n\r\n    if (!current.fastEMA || !current.slowEMA || !previous.fastEMA || !previous.slowEMA) {\r\n      return null;\r\n    }\r\n\r\n    // Determine crossover type\r\n    let crossoverType: 'GOLDEN_CROSS' | 'DEATH_CROSS' | 'NONE' = 'NONE';\r\n    let strength = 0;\r\n\r\n    // Golden Cross: Fast EMA crosses above Slow EMA (bullish)\r\n    if (previous.fastEMA <= previous.slowEMA && current.fastEMA > current.slowEMA) {\r\n      crossoverType = 'GOLDEN_CROSS';\r\n      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bullish');\r\n    }\r\n    // Death Cross: Fast EMA crosses below Slow EMA (bearish)\r\n    else if (previous.fastEMA >= previous.slowEMA && current.fastEMA < current.slowEMA) {\r\n      crossoverType = 'DEATH_CROSS';\r\n      strength = this.calculateCrossoverStrength(current.fastEMA, current.slowEMA, 'bearish');\r\n    }\r\n\r\n    // Check volume confirmation\r\n    const volumeConfirmed = this.isVolumeConfirmed(marketData);\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n\r\n    return {\r\n      name: 'EMA',\r\n      value: current.fastEMA,\r\n      timestamp: latestData.timestamp,\r\n      period: fastPeriod,\r\n      parameters: {\r\n        fastPeriod,\r\n        slowPeriod,\r\n        slowEMA: current.slowEMA\r\n      },\r\n      crossover: {\r\n        type: crossoverType,\r\n        strength,\r\n        volumeConfirmed\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate crossover strength based on EMA separation\r\n   * @param fastEMA Fast EMA value\r\n   * @param slowEMA Slow EMA value\r\n   * @param direction Crossover direction\r\n   * @returns Strength score (0-100)\r\n   */\r\n  private calculateCrossoverStrength(\r\n    fastEMA: number,\r\n    slowEMA: number,\r\n    direction: 'bullish' | 'bearish'\r\n  ): number {\r\n    const separation = Math.abs(fastEMA - slowEMA);\r\n    const averagePrice = (fastEMA + slowEMA) / 2;\r\n    const separationPercentage = (separation / averagePrice) * 100;\r\n\r\n    // Normalize to 0-100 scale (higher separation = stronger signal)\r\n    // Typical separation ranges from 0.1% to 5% for most assets\r\n    const strength = Math.min(separationPercentage * 20, 100);\r\n    \r\n    return Math.round(strength);\r\n  }\r\n\r\n  /**\r\n   * Check if current volume confirms the crossover signal\r\n   * @param marketData Array of market data\r\n   * @returns True if volume is above average threshold\r\n   */\r\n  private isVolumeConfirmed(marketData: MarketData[]): boolean {\r\n    if (marketData.length < 20) {\r\n      return false; // Need at least 20 periods for volume analysis\r\n    }\r\n\r\n    const currentVolume = marketData[marketData.length - 1].volume;\r\n    const averageVolume = marketData.slice(-20)\r\n      .reduce((sum, data) => sum + data.volume, 0) / 20;\r\n\r\n    return currentVolume >= (averageVolume * this.volumeConfirmationThreshold);\r\n  }\r\n\r\n  /**\r\n   * Generate trading signal based on moving average crossover\r\n   * @param marketData Array of market data\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns TradingSignal or null if no signal\r\n   */\r\n  public generateSignal(\r\n    marketData: MarketData[],\r\n    fastPeriod: number = this.defaultFastPeriod,\r\n    slowPeriod: number = this.defaultSlowPeriod\r\n  ): TradingSignal | null {\r\n    if (!Array.isArray(marketData) || marketData.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const crossover = this.detectCrossover(marketData, fastPeriod, slowPeriod);\r\n    \r\n    if (!crossover || !crossover.crossover || crossover.crossover.type === 'NONE') {\r\n      return {\r\n        id: `ma_hold_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        symbol: marketData[marketData.length - 1].symbol,\r\n        type: 'HOLD',\r\n        strength: 0,\r\n        confidence: 50,\r\n        indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],\r\n        reasoning: 'No clear crossover signal detected',\r\n        riskReward: 1.0,\r\n        timestamp: marketData[marketData.length - 1].timestamp,\r\n        metadata: {}\r\n      };\r\n    }\r\n\r\n    const latestData = marketData[marketData.length - 1];\r\n    const signalType = crossover.crossover.type === 'GOLDEN_CROSS' ? 'BUY' : 'SELL';\r\n    \r\n    // Calculate confidence based on strength and volume confirmation\r\n    let confidence = crossover.crossover.strength;\r\n    if (crossover.crossover.volumeConfirmed) {\r\n      confidence = Math.min(confidence + 20, 100); // Boost confidence with volume\r\n    }\r\n\r\n    // Calculate risk-reward ratio (simplified for MA strategy)\r\n    const riskReward = this.calculateRiskReward(marketData, signalType);\r\n\r\n    return {\r\n      id: `ma_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      symbol: latestData.symbol,\r\n      type: signalType,\r\n      strength: crossover.crossover.strength,\r\n      confidence,\r\n      indicators: [`EMA_${fastPeriod}`, `EMA_${slowPeriod}`],\r\n      reasoning: this.generateReasoning(crossover, fastPeriod, slowPeriod),\r\n      riskReward,\r\n      timestamp: latestData.timestamp,\r\n      metadata: {\r\n        fastEMA: crossover.value,\r\n        slowEMA: crossover.parameters.slowEMA,\r\n        volumeConfirmed: crossover.crossover.volumeConfirmed,\r\n        crossoverType: crossover.crossover.type\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate risk-reward ratio for MA strategy\r\n   * @param marketData Array of market data\r\n   * @param signalType Signal type (BUY/SELL)\r\n   * @returns Risk-reward ratio\r\n   */\r\n  private calculateRiskReward(marketData: MarketData[], signalType: 'BUY' | 'SELL'): number {\r\n    const currentPrice = marketData[marketData.length - 1].close;\r\n    const recentHigh = Math.max(...marketData.slice(-20).map(d => d.high));\r\n    const recentLow = Math.min(...marketData.slice(-20).map(d => d.low));\r\n\r\n    if (signalType === 'BUY') {\r\n      const target = recentHigh;\r\n      const stopLoss = recentLow;\r\n      const reward = target - currentPrice;\r\n      const risk = currentPrice - stopLoss;\r\n      return risk > 0 ? reward / risk : 1.0;\r\n    } else {\r\n      const target = recentLow;\r\n      const stopLoss = recentHigh;\r\n      const reward = currentPrice - target;\r\n      const risk = stopLoss - currentPrice;\r\n      return risk > 0 ? reward / risk : 1.0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate human-readable reasoning for the signal\r\n   * @param crossover MovingAverageSignal data\r\n   * @param fastPeriod Fast EMA period\r\n   * @param slowPeriod Slow EMA period\r\n   * @returns Reasoning string\r\n   */\r\n  private generateReasoning(\r\n    crossover: MovingAverageSignal,\r\n    fastPeriod: number,\r\n    slowPeriod: number\r\n  ): string {\r\n    const { type, strength, volumeConfirmed } = crossover.crossover!;\r\n    const volumeText = volumeConfirmed ? ' with strong volume confirmation' : ' with weak volume';\r\n    \r\n    if (type === 'GOLDEN_CROSS') {\r\n      return `Golden Cross detected: ${fastPeriod}-period EMA crossed above ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bullish momentum.`;\r\n    } else {\r\n      return `Death Cross detected: ${fastPeriod}-period EMA crossed below ${slowPeriod}-period EMA${volumeText}. Signal strength: ${strength}/100. This indicates potential bearish momentum.`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evaluate signal confidence based on multiple factors\r\n   * @param marketData Array of market data\r\n   * @param signal Generated trading signal\r\n   * @returns SignalConfidence object\r\n   */\r\n  public evaluateSignalConfidence(marketData: MarketData[], signal: TradingSignal): SignalConfidence {\r\n    const technical = signal.strength;\r\n    const volume = signal.metadata?.volumeConfirmed ? 80 : 40;\r\n    \r\n    // Calculate momentum based on recent price action\r\n    const recentPrices = marketData.slice(-5).map(d => d.close);\r\n    const momentum = this.calculateMomentumScore(recentPrices, signal.type);\r\n    \r\n    const overall = Math.round((technical * 0.4 + volume * 0.3 + momentum * 0.3));\r\n    \r\n    const factors = [\r\n      `EMA crossover strength: ${technical}/100`,\r\n      `Volume confirmation: ${volume}/100`,\r\n      `Price momentum: ${momentum}/100`\r\n    ];\r\n\r\n    return {\r\n      overall,\r\n      technical,\r\n      volume,\r\n      momentum,\r\n      factors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate momentum score based on recent price action\r\n   * @param prices Recent price array\r\n   * @param signalType Signal direction\r\n   * @returns Momentum score (0-100)\r\n   */\r\n  private calculateMomentumScore(prices: number[], signalType: 'BUY' | 'SELL'): number {\r\n    if (prices.length < 3) return 50;\r\n\r\n    const priceChange = (prices[prices.length - 1] - prices[0]) / prices[0];\r\n    const expectedDirection = signalType === 'BUY' ? 1 : -1;\r\n    const alignment = priceChange * expectedDirection;\r\n\r\n    // Convert to 0-100 scale\r\n    return Math.max(0, Math.min(100, 50 + (alignment * 1000)));\r\n  }\r\n\r\n  /**\r\n   * Confirm signal with volume analysis\r\n   * @param volumes Array of volume data\r\n   * @param currentIndex Current index to analyze\r\n   * @returns True if volume confirms the signal\r\n   */\r\n  public confirmWithVolume(volumes: number[], currentIndex: number): boolean {\r\n    if (volumes.length < 5 || currentIndex < 4) {\r\n      return false;\r\n    }\r\n\r\n    const currentVolume = volumes[currentIndex];\r\n    const averageVolume = volumes.slice(currentIndex - 4, currentIndex)\r\n      .reduce((sum, vol) => sum + vol, 0) / 4;\r\n\r\n    return currentVolume >= (averageVolume * this.volumeConfirmationThreshold);\r\n  }\r\n\r\n  /**\r\n   * Calculate signal strength based on price movements and crossover type\r\n   * @param prices Array of price data\r\n   * @param crossoverType Type of crossover detected\r\n   * @returns Signal strength (0-100)\r\n   */\r\n  public calculateSignalStrength(prices: number[], crossoverType: string): number {\r\n    if (crossoverType === 'INVALID' || prices.length < 5) {\r\n      return 0;\r\n    }\r\n\r\n    const recentPrices = prices.slice(-5);\r\n    const priceRange = Math.max(...recentPrices) - Math.min(...recentPrices);\r\n    const averagePrice = recentPrices.reduce((sum, price) => sum + price, 0) / recentPrices.length;\r\n    \r\n    // Calculate volatility as a percentage\r\n    const volatility = (priceRange / averagePrice) * 100;\r\n    \r\n    // Higher volatility generally means stronger signals\r\n    // Scale to 0-100 range\r\n    const strength = Math.min(volatility * 10, 100);\r\n    \r\n    return Math.round(strength);\r\n  }\r\n\r\n  /**\r\n   * Constructor with configuration validation\r\n   * @param config Configuration object\r\n   */\r\n  constructor(config?: { fastPeriod?: number; slowPeriod?: number }) {\r\n    if (config) {\r\n      if (config.fastPeriod !== undefined) {\r\n        if (config.fastPeriod <= 0) {\r\n          throw new Error('Fast period must be greater than 0');\r\n        }\r\n        // Override default if provided\r\n        (this as any).defaultFastPeriod = config.fastPeriod;\r\n      }\r\n      \r\n      if (config.slowPeriod !== undefined) {\r\n        if (config.slowPeriod <= 0) {\r\n          throw new Error('Slow period must be greater than 0');\r\n        }\r\n        // Override default if provided\r\n        (this as any).defaultSlowPeriod = config.slowPeriod;\r\n      }\r\n      \r\n      // Validate that fast period is less than slow period\r\n      const fastPeriod = config.fastPeriod || this.defaultFastPeriod;\r\n      const slowPeriod = config.slowPeriod || this.defaultSlowPeriod;\r\n      \r\n      if (fastPeriod >= slowPeriod) {\r\n        throw new Error('Fast period must be less than slow period');\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}