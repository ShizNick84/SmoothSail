799dc5b6dc4eb39a5487dc33561de013
#!/usr/bin/env node
"use strict";

/**
 * =============================================================================
 * AI CRYPTO TRADING AGENT - MAIN ENTRY POINT
 * =============================================================================
 *
 * This is the main entry point for the AI-powered cryptocurrency trading agent.
 * The system is designed with security-first principles, focusing on capital
 * preservation and profit maximization through sophisticated trading strategies.
 *
 * CRITICAL SECURITY NOTICE:
 * This system handles real financial assets and trading operations.
 * All security measures must be maintained and regularly audited.
 *
 * Hardware Requirements:
 * - Intel NUC with i5 CPU
 * - 12GB RAM minimum
 * - 256GB M.2 SSD
 * - Stable internet connection (wireless + ethernet)
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_1l4ww0hrmr() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\index.ts";
  var hash = "fa85d7428a26d1e8121a2957d79679a2c6cb6aa9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "1": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "2": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "3": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "4": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "5": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "6": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 67
        }
      },
      "7": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "8": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 74
        }
      },
      "9": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "10": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 72
        }
      },
      "11": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "12": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 72
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 66
        }
      },
      "14": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 66
        }
      },
      "15": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "16": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "17": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 90
        }
      },
      "18": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 43
        }
      },
      "19": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 44
        }
      },
      "20": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "21": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 42
        }
      },
      "22": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "23": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 87
        }
      },
      "25": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 80
        }
      },
      "26": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 92
        }
      },
      "27": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 43
        }
      },
      "28": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 24
        }
      },
      "29": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 60
        }
      },
      "30": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 83
        }
      },
      "31": {
        start: {
          line: 95,
          column: 33
        },
        end: {
          line: 95,
          column: 89
        }
      },
      "32": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "33": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 95
        }
      },
      "34": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "35": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 82
        }
      },
      "36": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 68
        }
      },
      "37": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 58
        }
      },
      "38": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 59
        }
      },
      "39": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 60
        }
      },
      "40": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 115,
          column: 79
        }
      },
      "41": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "42": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 85
        }
      },
      "43": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 82
        }
      },
      "44": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 76
        }
      },
      "45": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 79
        }
      },
      "46": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 59
        }
      },
      "47": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 69
        }
      },
      "48": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 58
        }
      },
      "49": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 82
        }
      },
      "50": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "51": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 104
        }
      },
      "52": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 77
        }
      },
      "53": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 82
        }
      },
      "54": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 51
        }
      },
      "55": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 150,
          column: 74
        }
      },
      "56": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "57": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 92
        }
      },
      "58": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 60
        }
      },
      "59": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 70
        }
      },
      "60": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 66
        }
      },
      "61": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 59
        }
      },
      "62": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 57
        }
      },
      "63": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 60
        }
      },
      "64": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 56
        }
      },
      "65": {
        start: {
          line: 172,
          column: 30
        },
        end: {
          line: 172,
          column: 75
        }
      },
      "66": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "67": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 97
        }
      },
      "68": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 68
        }
      },
      "69": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 71
        }
      },
      "70": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 68
        }
      },
      "71": {
        start: {
          line: 185,
          column: 36
        },
        end: {
          line: 185,
          column: 66
        }
      },
      "72": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 66
        }
      },
      "73": {
        start: {
          line: 186,
          column: 35
        },
        end: {
          line: 186,
          column: 64
        }
      },
      "74": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 66
        }
      },
      "75": {
        start: {
          line: 187,
          column: 35
        },
        end: {
          line: 187,
          column: 64
        }
      },
      "76": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "77": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 66
        }
      },
      "78": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 54
        }
      },
      "79": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "80": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 91
        }
      },
      "81": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 55
        }
      },
      "82": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "83": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 94
        }
      },
      "84": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 19
        }
      },
      "85": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 35
        }
      },
      "86": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 71
        }
      },
      "87": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "88": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 217,
          column: 15
        }
      },
      "89": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 79
        }
      },
      "90": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 28
        }
      },
      "91": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 78
        }
      },
      "92": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 43
        }
      },
      "93": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 28
        }
      },
      "94": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 65
        }
      },
      "95": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "96": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 54
        }
      },
      "97": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 53
        }
      },
      "98": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 81
        }
      },
      "99": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 79
        }
      },
      "100": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 81
        }
      },
      "101": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 48
        }
      },
      "102": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 79
        }
      },
      "103": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 87
        }
      },
      "104": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 95
        }
      },
      "105": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 40
        }
      },
      "106": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "107": {
        start: {
          line: 266,
          column: 29
        },
        end: {
          line: 266,
          column: 49
        }
      },
      "108": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 40
        }
      },
      "109": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 35
        }
      },
      "110": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 73
        }
      },
      "111": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "112": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 282,
          column: 1
        }
      },
      "113": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 281,
          column: 7
        }
      },
      "114": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 53
        }
      },
      "115": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 18
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 48
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 62
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 90
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 31
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 106
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 126
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 145
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 161
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 183
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 185,
            column: 30
          },
          end: {
            line: 185,
            column: 31
          }
        },
        loc: {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 185,
            column: 66
          }
        },
        line: 185
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 186,
            column: 29
          },
          end: {
            line: 186,
            column: 30
          }
        },
        loc: {
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 186,
            column: 64
          }
        },
        line: 186
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 187,
            column: 30
          }
        },
        loc: {
          start: {
            line: 187,
            column: 35
          },
          end: {
            line: 187,
            column: 64
          }
        },
        line: 187
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 189,
            column: 40
          },
          end: {
            line: 189,
            column: 41
          }
        },
        loc: {
          start: {
            line: 189,
            column: 51
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 189
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 193,
            column: 42
          }
        },
        loc: {
          start: {
            line: 193,
            column: 62
          },
          end: {
            line: 196,
            column: 9
          }
        },
        line: 193
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 33
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 204
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 231
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        loc: {
          start: {
            line: 249,
            column: 18
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 249
      },
      "16": {
        name: "main",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 19
          }
        },
        loc: {
          start: {
            line: 263,
            column: 22
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 263
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 278,
            column: 17
          },
          end: {
            line: 278,
            column: 18
          }
        },
        loc: {
          start: {
            line: 278,
            column: 28
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "1": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "2": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "3": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "4": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "5": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "6": {
        loc: {
          start: {
            line: 277,
            column: 0
          },
          end: {
            line: 282,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 0
          },
          end: {
            line: 282,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\index.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\index.ts"],
      sourcesContent: ["#!/usr/bin/env node\r\n\r\n/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - MAIN ENTRY POINT\r\n * =============================================================================\r\n * \r\n * This is the main entry point for the AI-powered cryptocurrency trading agent.\r\n * The system is designed with security-first principles, focusing on capital\r\n * preservation and profit maximization through sophisticated trading strategies.\r\n * \r\n * CRITICAL SECURITY NOTICE:\r\n * This system handles real financial assets and trading operations.\r\n * All security measures must be maintained and regularly audited.\r\n * \r\n * Hardware Requirements:\r\n * - Intel NUC with i5 CPU\r\n * - 12GB RAM minimum\r\n * - 256GB M.2 SSD\r\n * - Stable internet connection (wireless + ethernet)\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { config } from 'dotenv';\r\nimport { resolve } from 'path';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { SecurityManager } from '@/security/security-manager';\r\nimport { SystemMonitor } from '@/infrastructure/system-monitor';\r\nimport { TradingEngine } from '@/trading/trading-engine';\r\nimport { TunnelManager } from '@/infrastructure/tunnel/tunnel-manager';\r\nimport { validateEnvironment } from '@/config/environment-validator';\r\nimport { gracefulShutdown } from '@/core/shutdown/graceful-shutdown';\r\n\r\n/**\r\n * Main application class that orchestrates all system components\r\n * Implements security-first initialization and proper error handling\r\n */\r\nclass AITradingAgent {\r\n  private securityManager: SecurityManager;\r\n  private systemMonitor: SystemMonitor;\r\n  private tradingEngine: TradingEngine;\r\n  private tunnelManager: TunnelManager;\r\n  private isShuttingDown: boolean = false;\r\n\r\n  constructor() {\r\n    // Initialize core components with security-first approach\r\n    this.securityManager = new SecurityManager();\r\n    this.systemMonitor = new SystemMonitor();\r\n    this.tradingEngine = new TradingEngine();\r\n    this.tunnelManager = new TunnelManager();\r\n  }\r\n\r\n  /**\r\n   * Initialize the trading agent with comprehensive security checks\r\n   * This method performs all necessary startup procedures in the correct order\r\n   * \r\n   * @returns Promise<void> Resolves when initialization is complete\r\n   * @throws Error if any critical initialization step fails\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Starting AI Crypto Trading Agent initialization...');\r\n      \r\n      // Step 1: Load and validate environment configuration\r\n      await this.loadConfiguration();\r\n      \r\n      // Step 2: Initialize security systems first (critical for financial system)\r\n      await this.initializeSecurity();\r\n      \r\n      // Step 3: Start system monitoring for Intel NUC hardware\r\n      await this.initializeSystemMonitoring();\r\n      \r\n      // Step 4: Establish SSH tunnel to Oracle Free Tier\r\n      await this.initializeTunnel();\r\n      \r\n      // Step 5: Initialize trading engine with all safety systems\r\n      await this.initializeTradingEngine();\r\n      \r\n      // Step 6: Set up graceful shutdown handlers\r\n      this.setupShutdownHandlers();\r\n      \r\n      logger.info('\u2705 AI Crypto Trading Agent initialized successfully');\r\n      logger.info('\uD83C\uDFAF System ready for 24/7 trading operations');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize AI Crypto Trading Agent:', error);\r\n      await this.emergencyShutdown();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load and validate environment configuration\r\n   * Ensures all required environment variables are present and valid\r\n   */\r\n  private async loadConfiguration(): Promise<void> {\r\n    logger.info('\uD83D\uDCCB Loading configuration...');\r\n    \r\n    // Load environment variables from .env file\r\n    config({ path: resolve(process.cwd(), '.env') });\r\n    \r\n    // Validate all required environment variables\r\n    const validationResult = await validateEnvironment();\r\n    \r\n    if (!validationResult.isValid) {\r\n      logger.error('\u274C Environment validation failed:', validationResult.errors);\r\n      throw new Error('Invalid environment configuration');\r\n    }\r\n    \r\n    logger.info('\u2705 Configuration loaded and validated successfully');\r\n  }\r\n\r\n  /**\r\n   * Initialize security systems with military-grade protection\r\n   * This is the most critical initialization step for financial system\r\n   */\r\n  private async initializeSecurity(): Promise<void> {\r\n    logger.info('\uD83D\uDD12 Initializing security systems...');\r\n    \r\n    // Initialize encryption and key management\r\n    await this.securityManager.initializeEncryption();\r\n    \r\n    // Start threat detection and monitoring\r\n    await this.securityManager.startThreatMonitoring();\r\n    \r\n    // Initialize audit logging system\r\n    await this.securityManager.initializeAuditLogging();\r\n    \r\n    // Perform initial security scan\r\n    const securityStatus = await this.securityManager.performSecurityScan();\r\n    \r\n    if (!securityStatus.isSecure) {\r\n      logger.error('\u274C Security scan failed:', securityStatus.threats);\r\n      throw new Error('System security compromised - cannot start trading');\r\n    }\r\n    \r\n    logger.info('\u2705 Security systems initialized and verified');\r\n  }\r\n\r\n  /**\r\n   * Initialize Intel NUC system monitoring\r\n   * Monitors CPU, RAM, SSD, network, and thermal conditions\r\n   */\r\n  private async initializeSystemMonitoring(): Promise<void> {\r\n    logger.info('\uD83D\uDCCA Initializing Intel NUC system monitoring...');\r\n    \r\n    // Start hardware monitoring\r\n    await this.systemMonitor.startHardwareMonitoring();\r\n    \r\n    // Initialize performance optimization\r\n    await this.systemMonitor.initializePerformanceOptimization();\r\n    \r\n    // Set up thermal management\r\n    await this.systemMonitor.setupThermalManagement();\r\n    \r\n    // Verify system meets requirements\r\n    const systemStatus = await this.systemMonitor.validateSystemRequirements();\r\n    \r\n    if (!systemStatus.meetsRequirements) {\r\n      logger.warn('\u26A0\uFE0F System may not meet optimal requirements:', systemStatus.warnings);\r\n    }\r\n    \r\n    logger.info('\u2705 System monitoring initialized successfully');\r\n  }\r\n\r\n  /**\r\n   * Initialize SSH tunnel to Oracle Free Tier\r\n   * Establishes secure connection for consistent IP address\r\n   */\r\n  private async initializeTunnel(): Promise<void> {\r\n    logger.info('\uD83C\uDF10 Initializing SSH tunnel to Oracle Free Tier...');\r\n    \r\n    // Establish SSH tunnel connection\r\n    await this.tunnelManager.establishTunnel();\r\n    \r\n    // Verify tunnel connectivity\r\n    const tunnelStatus = await this.tunnelManager.verifyTunnelHealth();\r\n    \r\n    if (!tunnelStatus.isHealthy) {\r\n      logger.error('\u274C SSH tunnel health check failed:', tunnelStatus.issues);\r\n      throw new Error('SSH tunnel connection failed');\r\n    }\r\n    \r\n    logger.info('\u2705 SSH tunnel established and verified');\r\n  }\r\n\r\n  /**\r\n   * Initialize trading engine with all safety systems\r\n   * Sets up strategies, risk management, and API connections\r\n   */\r\n  private async initializeTradingEngine(): Promise<void> {\r\n    logger.info('\uD83D\uDCB9 Initializing trading engine...');\r\n    \r\n    // Initialize Gate.io API connection through tunnel\r\n    await this.tradingEngine.initializeAPIConnection();\r\n    \r\n    // Load and validate trading strategies\r\n    await this.tradingEngine.loadTradingStrategies();\r\n    \r\n    // Initialize risk management system\r\n    await this.tradingEngine.initializeRiskManagement();\r\n    \r\n    // Start market data feeds\r\n    await this.tradingEngine.startMarketDataFeeds();\r\n    \r\n    // Perform trading system health check\r\n    const tradingStatus = await this.tradingEngine.performHealthCheck();\r\n    \r\n    if (!tradingStatus.isHealthy) {\r\n      logger.error('\u274C Trading engine health check failed:', tradingStatus.issues);\r\n      throw new Error('Trading engine initialization failed');\r\n    }\r\n    \r\n    logger.info('\u2705 Trading engine initialized and ready');\r\n  }\r\n\r\n  /**\r\n   * Set up graceful shutdown handlers for clean system termination\r\n   * Ensures all positions are safely closed and data is preserved\r\n   */\r\n  private setupShutdownHandlers(): void {\r\n    // Handle various shutdown signals\r\n    process.on('SIGTERM', () => this.handleShutdown('SIGTERM'));\r\n    process.on('SIGINT', () => this.handleShutdown('SIGINT'));\r\n    process.on('SIGHUP', () => this.handleShutdown('SIGHUP'));\r\n    \r\n    // Handle uncaught exceptions and rejections\r\n    process.on('uncaughtException', (error) => {\r\n      logger.error('\u274C Uncaught exception:', error);\r\n      this.handleShutdown('UNCAUGHT_EXCEPTION');\r\n    });\r\n    \r\n    process.on('unhandledRejection', (reason, promise) => {\r\n      logger.error('\u274C Unhandled rejection at:', promise, 'reason:', reason);\r\n      this.handleShutdown('UNHANDLED_REJECTION');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle shutdown signals with proper cleanup\r\n   * Ensures safe termination of all trading operations\r\n   * \r\n   * @param signal - The shutdown signal received\r\n   */\r\n  private async handleShutdown(signal: string): Promise<void> {\r\n    if (this.isShuttingDown) {\r\n      logger.warn('\u26A0\uFE0F Shutdown already in progress, ignoring signal:', signal);\r\n      return;\r\n    }\r\n    \r\n    this.isShuttingDown = true;\r\n    logger.info(`\uD83D\uDED1 Received shutdown signal: ${signal}`);\r\n    \r\n    try {\r\n      await gracefulShutdown({\r\n        tradingEngine: this.tradingEngine,\r\n        tunnelManager: this.tunnelManager,\r\n        systemMonitor: this.systemMonitor,\r\n        securityManager: this.securityManager\r\n      });\r\n      \r\n      logger.info('\u2705 Graceful shutdown completed successfully');\r\n      process.exit(0);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error during graceful shutdown:', error);\r\n      await this.emergencyShutdown();\r\n      process.exit(1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emergency shutdown procedure for critical failures\r\n   * Immediately stops all operations and secures assets\r\n   */\r\n  private async emergencyShutdown(): Promise<void> {\r\n    logger.error('\uD83D\uDEA8 EMERGENCY SHUTDOWN INITIATED');\r\n    \r\n    try {\r\n      // Immediately stop trading operations\r\n      await this.tradingEngine?.emergencyStop();\r\n      \r\n      // Secure all assets and positions\r\n      await this.tradingEngine?.secureAssets();\r\n      \r\n      // Send emergency notifications\r\n      await this.securityManager?.sendEmergencyAlert('EMERGENCY_SHUTDOWN');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error during emergency shutdown:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the main trading loop\r\n   * Begins continuous trading operations with monitoring\r\n   */\r\n  public async start(): Promise<void> {\r\n    logger.info('\uD83C\uDFAF Starting AI Crypto Trading Agent main loop...');\r\n    \r\n    // Start trading operations\r\n    await this.tradingEngine.startTrading();\r\n    \r\n    logger.info('\uD83D\uDE80 AI Crypto Trading Agent is now running 24/7');\r\n    logger.info('\uD83D\uDCB0 Focus: Capital preservation and profit maximization');\r\n    logger.info('\uD83C\uDFAF Goal: Building generational wealth through compound returns');\r\n  }\r\n}\r\n\r\n/**\r\n * Main execution function\r\n * Entry point for the entire trading system\r\n */\r\nasync function main(): Promise<void> {\r\n  try {\r\n    // Create and initialize the trading agent\r\n    const tradingAgent = new AITradingAgent();\r\n    await tradingAgent.initialize();\r\n    \r\n    // Start trading operations\r\n    await tradingAgent.start();\r\n    \r\n  } catch (error) {\r\n    logger.error('\u274C Fatal error in main execution:', error);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\n// Start the application if this file is run directly\r\nif (import.meta.url === `file://${process.argv[1]}`) {\r\n  main().catch((error) => {\r\n    console.error('Fatal startup error:', error);\r\n    process.exit(1);\r\n  });\r\n}\r\n\r\nexport { AITradingAgent };\r\n\r\n// =============================================================================\r\n// SECURITY AND OPERATIONAL NOTES\r\n// =============================================================================\r\n// 1. This system handles real financial assets - security is paramount\r\n// 2. All errors are logged and monitored for security analysis\r\n// 3. Graceful shutdown ensures no trading positions are left unmanaged\r\n// 4. Emergency shutdown procedures protect capital in critical situations\r\n// 5. System is designed for 24/7 operation with automatic recovery\r\n// 6. Regular security audits and updates are essential\r\n// 7. Monitor system logs continuously for any suspicious activity\r\n// ============================================================================="],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa85d7428a26d1e8121a2957d79679a2c6cb6aa9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1l4ww0hrmr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l4ww0hrmr();
cov_1l4ww0hrmr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1l4ww0hrmr().s[1]++;
exports.AITradingAgent = void 0;
const dotenv_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[2]++, require("dotenv"));
const path_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[3]++, require("path"));
const logger_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[4]++, require("@/core/logging/logger"));
const security_manager_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[5]++, require("@/security/security-manager"));
const system_monitor_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[6]++, require("@/infrastructure/system-monitor"));
const trading_engine_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[7]++, require("@/trading/trading-engine"));
const tunnel_manager_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[8]++, require("@/infrastructure/tunnel/tunnel-manager"));
const environment_validator_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[9]++, require("@/config/environment-validator"));
const graceful_shutdown_1 =
/* istanbul ignore next */
(cov_1l4ww0hrmr().s[10]++, require("@/core/shutdown/graceful-shutdown"));
/**
 * Main application class that orchestrates all system components
 * Implements security-first initialization and proper error handling
 */
class AITradingAgent {
  securityManager;
  systemMonitor;
  tradingEngine;
  tunnelManager;
  isShuttingDown =
  /* istanbul ignore next */
  (cov_1l4ww0hrmr().s[11]++, false);
  constructor() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[0]++;
    cov_1l4ww0hrmr().s[12]++;
    // Initialize core components with security-first approach
    this.securityManager = new security_manager_1.SecurityManager();
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[13]++;
    this.systemMonitor = new system_monitor_1.SystemMonitor();
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[14]++;
    this.tradingEngine = new trading_engine_1.TradingEngine();
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[15]++;
    this.tunnelManager = new tunnel_manager_1.TunnelManager();
  }
  /**
   * Initialize the trading agent with comprehensive security checks
   * This method performs all necessary startup procedures in the correct order
   *
   * @returns Promise<void> Resolves when initialization is complete
   * @throws Error if any critical initialization step fails
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[1]++;
    cov_1l4ww0hrmr().s[16]++;
    try {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[17]++;
      logger_1.logger.info('🚀 Starting AI Crypto Trading Agent initialization...');
      // Step 1: Load and validate environment configuration
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[18]++;
      await this.loadConfiguration();
      // Step 2: Initialize security systems first (critical for financial system)
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[19]++;
      await this.initializeSecurity();
      // Step 3: Start system monitoring for Intel NUC hardware
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[20]++;
      await this.initializeSystemMonitoring();
      // Step 4: Establish SSH tunnel to Oracle Free Tier
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[21]++;
      await this.initializeTunnel();
      // Step 5: Initialize trading engine with all safety systems
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[22]++;
      await this.initializeTradingEngine();
      // Step 6: Set up graceful shutdown handlers
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[23]++;
      this.setupShutdownHandlers();
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[24]++;
      logger_1.logger.info('✅ AI Crypto Trading Agent initialized successfully');
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[25]++;
      logger_1.logger.info('🎯 System ready for 24/7 trading operations');
    } catch (error) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[26]++;
      logger_1.logger.error('❌ Failed to initialize AI Crypto Trading Agent:', error);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[27]++;
      await this.emergencyShutdown();
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[28]++;
      throw error;
    }
  }
  /**
   * Load and validate environment configuration
   * Ensures all required environment variables are present and valid
   */
  async loadConfiguration() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[2]++;
    cov_1l4ww0hrmr().s[29]++;
    logger_1.logger.info('📋 Loading configuration...');
    // Load environment variables from .env file
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[30]++;
    (0, dotenv_1.config)({
      path: (0, path_1.resolve)(process.cwd(), '.env')
    });
    // Validate all required environment variables
    const validationResult =
    /* istanbul ignore next */
    (cov_1l4ww0hrmr().s[31]++, await (0, environment_validator_1.validateEnvironment)());
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[32]++;
    if (!validationResult.isValid) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().b[0][0]++;
      cov_1l4ww0hrmr().s[33]++;
      logger_1.logger.error('❌ Environment validation failed:', validationResult.errors);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[34]++;
      throw new Error('Invalid environment configuration');
    } else
    /* istanbul ignore next */
    {
      cov_1l4ww0hrmr().b[0][1]++;
    }
    cov_1l4ww0hrmr().s[35]++;
    logger_1.logger.info('✅ Configuration loaded and validated successfully');
  }
  /**
   * Initialize security systems with military-grade protection
   * This is the most critical initialization step for financial system
   */
  async initializeSecurity() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[3]++;
    cov_1l4ww0hrmr().s[36]++;
    logger_1.logger.info('🔒 Initializing security systems...');
    // Initialize encryption and key management
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[37]++;
    await this.securityManager.initializeEncryption();
    // Start threat detection and monitoring
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[38]++;
    await this.securityManager.startThreatMonitoring();
    // Initialize audit logging system
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[39]++;
    await this.securityManager.initializeAuditLogging();
    // Perform initial security scan
    const securityStatus =
    /* istanbul ignore next */
    (cov_1l4ww0hrmr().s[40]++, await this.securityManager.performSecurityScan());
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[41]++;
    if (!securityStatus.isSecure) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().b[1][0]++;
      cov_1l4ww0hrmr().s[42]++;
      logger_1.logger.error('❌ Security scan failed:', securityStatus.threats);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[43]++;
      throw new Error('System security compromised - cannot start trading');
    } else
    /* istanbul ignore next */
    {
      cov_1l4ww0hrmr().b[1][1]++;
    }
    cov_1l4ww0hrmr().s[44]++;
    logger_1.logger.info('✅ Security systems initialized and verified');
  }
  /**
   * Initialize Intel NUC system monitoring
   * Monitors CPU, RAM, SSD, network, and thermal conditions
   */
  async initializeSystemMonitoring() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[4]++;
    cov_1l4ww0hrmr().s[45]++;
    logger_1.logger.info('📊 Initializing Intel NUC system monitoring...');
    // Start hardware monitoring
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[46]++;
    await this.systemMonitor.startHardwareMonitoring();
    // Initialize performance optimization
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[47]++;
    await this.systemMonitor.initializePerformanceOptimization();
    // Set up thermal management
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[48]++;
    await this.systemMonitor.setupThermalManagement();
    // Verify system meets requirements
    const systemStatus =
    /* istanbul ignore next */
    (cov_1l4ww0hrmr().s[49]++, await this.systemMonitor.validateSystemRequirements());
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[50]++;
    if (!systemStatus.meetsRequirements) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().b[2][0]++;
      cov_1l4ww0hrmr().s[51]++;
      logger_1.logger.warn('⚠️ System may not meet optimal requirements:', systemStatus.warnings);
    } else
    /* istanbul ignore next */
    {
      cov_1l4ww0hrmr().b[2][1]++;
    }
    cov_1l4ww0hrmr().s[52]++;
    logger_1.logger.info('✅ System monitoring initialized successfully');
  }
  /**
   * Initialize SSH tunnel to Oracle Free Tier
   * Establishes secure connection for consistent IP address
   */
  async initializeTunnel() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[5]++;
    cov_1l4ww0hrmr().s[53]++;
    logger_1.logger.info('🌐 Initializing SSH tunnel to Oracle Free Tier...');
    // Establish SSH tunnel connection
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[54]++;
    await this.tunnelManager.establishTunnel();
    // Verify tunnel connectivity
    const tunnelStatus =
    /* istanbul ignore next */
    (cov_1l4ww0hrmr().s[55]++, await this.tunnelManager.verifyTunnelHealth());
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[56]++;
    if (!tunnelStatus.isHealthy) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().b[3][0]++;
      cov_1l4ww0hrmr().s[57]++;
      logger_1.logger.error('❌ SSH tunnel health check failed:', tunnelStatus.issues);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[58]++;
      throw new Error('SSH tunnel connection failed');
    } else
    /* istanbul ignore next */
    {
      cov_1l4ww0hrmr().b[3][1]++;
    }
    cov_1l4ww0hrmr().s[59]++;
    logger_1.logger.info('✅ SSH tunnel established and verified');
  }
  /**
   * Initialize trading engine with all safety systems
   * Sets up strategies, risk management, and API connections
   */
  async initializeTradingEngine() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[6]++;
    cov_1l4ww0hrmr().s[60]++;
    logger_1.logger.info('💹 Initializing trading engine...');
    // Initialize Gate.io API connection through tunnel
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[61]++;
    await this.tradingEngine.initializeAPIConnection();
    // Load and validate trading strategies
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[62]++;
    await this.tradingEngine.loadTradingStrategies();
    // Initialize risk management system
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[63]++;
    await this.tradingEngine.initializeRiskManagement();
    // Start market data feeds
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[64]++;
    await this.tradingEngine.startMarketDataFeeds();
    // Perform trading system health check
    const tradingStatus =
    /* istanbul ignore next */
    (cov_1l4ww0hrmr().s[65]++, await this.tradingEngine.performHealthCheck());
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[66]++;
    if (!tradingStatus.isHealthy) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().b[4][0]++;
      cov_1l4ww0hrmr().s[67]++;
      logger_1.logger.error('❌ Trading engine health check failed:', tradingStatus.issues);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[68]++;
      throw new Error('Trading engine initialization failed');
    } else
    /* istanbul ignore next */
    {
      cov_1l4ww0hrmr().b[4][1]++;
    }
    cov_1l4ww0hrmr().s[69]++;
    logger_1.logger.info('✅ Trading engine initialized and ready');
  }
  /**
   * Set up graceful shutdown handlers for clean system termination
   * Ensures all positions are safely closed and data is preserved
   */
  setupShutdownHandlers() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[7]++;
    cov_1l4ww0hrmr().s[70]++;
    // Handle various shutdown signals
    process.on('SIGTERM', () => {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().f[8]++;
      cov_1l4ww0hrmr().s[71]++;
      return this.handleShutdown('SIGTERM');
    });
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[72]++;
    process.on('SIGINT', () => {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().f[9]++;
      cov_1l4ww0hrmr().s[73]++;
      return this.handleShutdown('SIGINT');
    });
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[74]++;
    process.on('SIGHUP', () => {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().f[10]++;
      cov_1l4ww0hrmr().s[75]++;
      return this.handleShutdown('SIGHUP');
    });
    // Handle uncaught exceptions and rejections
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[76]++;
    process.on('uncaughtException', error => {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().f[11]++;
      cov_1l4ww0hrmr().s[77]++;
      logger_1.logger.error('❌ Uncaught exception:', error);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[78]++;
      this.handleShutdown('UNCAUGHT_EXCEPTION');
    });
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[79]++;
    process.on('unhandledRejection', (reason, promise) => {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().f[12]++;
      cov_1l4ww0hrmr().s[80]++;
      logger_1.logger.error('❌ Unhandled rejection at:', promise, 'reason:', reason);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[81]++;
      this.handleShutdown('UNHANDLED_REJECTION');
    });
  }
  /**
   * Handle shutdown signals with proper cleanup
   * Ensures safe termination of all trading operations
   *
   * @param signal - The shutdown signal received
   */
  async handleShutdown(signal) {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[13]++;
    cov_1l4ww0hrmr().s[82]++;
    if (this.isShuttingDown) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().b[5][0]++;
      cov_1l4ww0hrmr().s[83]++;
      logger_1.logger.warn('⚠️ Shutdown already in progress, ignoring signal:', signal);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[84]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1l4ww0hrmr().b[5][1]++;
    }
    cov_1l4ww0hrmr().s[85]++;
    this.isShuttingDown = true;
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[86]++;
    logger_1.logger.info(`🛑 Received shutdown signal: ${signal}`);
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[87]++;
    try {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[88]++;
      await (0, graceful_shutdown_1.gracefulShutdown)({
        tradingEngine: this.tradingEngine,
        tunnelManager: this.tunnelManager,
        systemMonitor: this.systemMonitor,
        securityManager: this.securityManager
      });
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[89]++;
      logger_1.logger.info('✅ Graceful shutdown completed successfully');
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[90]++;
      process.exit(0);
    } catch (error) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[91]++;
      logger_1.logger.error('❌ Error during graceful shutdown:', error);
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[92]++;
      await this.emergencyShutdown();
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[93]++;
      process.exit(1);
    }
  }
  /**
   * Emergency shutdown procedure for critical failures
   * Immediately stops all operations and secures assets
   */
  async emergencyShutdown() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[14]++;
    cov_1l4ww0hrmr().s[94]++;
    logger_1.logger.error('🚨 EMERGENCY SHUTDOWN INITIATED');
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[95]++;
    try {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[96]++;
      // Immediately stop trading operations
      await this.tradingEngine?.emergencyStop();
      // Secure all assets and positions
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[97]++;
      await this.tradingEngine?.secureAssets();
      // Send emergency notifications
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[98]++;
      await this.securityManager?.sendEmergencyAlert('EMERGENCY_SHUTDOWN');
    } catch (error) {
      /* istanbul ignore next */
      cov_1l4ww0hrmr().s[99]++;
      logger_1.logger.error('❌ Error during emergency shutdown:', error);
    }
  }
  /**
   * Start the main trading loop
   * Begins continuous trading operations with monitoring
   */
  async start() {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[15]++;
    cov_1l4ww0hrmr().s[100]++;
    logger_1.logger.info('🎯 Starting AI Crypto Trading Agent main loop...');
    // Start trading operations
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[101]++;
    await this.tradingEngine.startTrading();
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[102]++;
    logger_1.logger.info('🚀 AI Crypto Trading Agent is now running 24/7');
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[103]++;
    logger_1.logger.info('💰 Focus: Capital preservation and profit maximization');
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[104]++;
    logger_1.logger.info('🎯 Goal: Building generational wealth through compound returns');
  }
}
/* istanbul ignore next */
cov_1l4ww0hrmr().s[105]++;
exports.AITradingAgent = AITradingAgent;
/**
 * Main execution function
 * Entry point for the entire trading system
 */
async function main() {
  /* istanbul ignore next */
  cov_1l4ww0hrmr().f[16]++;
  cov_1l4ww0hrmr().s[106]++;
  try {
    // Create and initialize the trading agent
    const tradingAgent =
    /* istanbul ignore next */
    (cov_1l4ww0hrmr().s[107]++, new AITradingAgent());
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[108]++;
    await tradingAgent.initialize();
    // Start trading operations
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[109]++;
    await tradingAgent.start();
  } catch (error) {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[110]++;
    logger_1.logger.error('❌ Fatal error in main execution:', error);
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[111]++;
    process.exit(1);
  }
}
// Start the application if this file is run directly
/* istanbul ignore next */
cov_1l4ww0hrmr().s[112]++;
if (import.meta.url === `file://${process.argv[1]}`) {
  /* istanbul ignore next */
  cov_1l4ww0hrmr().b[6][0]++;
  cov_1l4ww0hrmr().s[113]++;
  main().catch(error => {
    /* istanbul ignore next */
    cov_1l4ww0hrmr().f[17]++;
    cov_1l4ww0hrmr().s[114]++;
    console.error('Fatal startup error:', error);
    /* istanbul ignore next */
    cov_1l4ww0hrmr().s[115]++;
    process.exit(1);
  });
} else
/* istanbul ignore next */
{
  cov_1l4ww0hrmr().b[6][1]++;
}
// =============================================================================
// SECURITY AND OPERATIONAL NOTES
// =============================================================================
// 1. This system handles real financial assets - security is paramount
// 2. All errors are logged and monitored for security analysis
// 3. Graceful shutdown ensures no trading positions are left unmanaged
// 4. Emergency shutdown procedures protect capital in critical situations
// 5. System is designed for 24/7 operation with automatic recovery
// 6. Regular security audits and updates are essential
// 7. Monitor system logs continuously for any suspicious activity
// =============================================================================
//# sourceMappingURL=data:application/json;charset=utf-8;base64,