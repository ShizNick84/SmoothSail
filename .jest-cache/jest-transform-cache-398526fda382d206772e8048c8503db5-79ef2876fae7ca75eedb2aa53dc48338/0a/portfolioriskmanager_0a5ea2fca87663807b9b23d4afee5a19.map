{"version":3,"names":["cov_1iduem191k","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","PortfolioRiskManager","config","historicalPrices","Map","correlationCache","constructor","analyzePortfolioRisk","positions","metrics","calculatePortfolioMetrics","assetExposures","calculateAssetExposures","sectorExposures","calculateSectorExposures","correlationMatrix","calculateCorrelationMatrix","riskViolations","identifyRiskViolations","rebalancingRecommendations","generateRebalancingRecommendations","overallRiskScore","calculateOverallRiskScore","length","timestamp","Date","totalValue","reduce","sum","pos","size","currentPrice","beta","volatility","sharpeRatio","maxDrawdown","valueAtRisk","expectedShortfall","diversificationRatio","concentrationRisk","calculatePortfolioBeta","calculatePortfolioVolatility","riskFreeRate","portfolioReturn","calculatePortfolioReturn","calculateMaxDrawdown","calculateValueAtRisk","calculateExpectedShortfall","calculateDiversificationRatio","calculateConcentrationRisk","assetMap","forEach","has","symbol","set","get","push","Array","from","entries","map","assetPositions","value","totalSize","averageEntryPrice","entryPrice","unrealizedPnL","riskContribution","calculateAssetRiskContribution","percentage","positionCount","sort","a","sectorMap","sectors","asset","sector","assets","calculateSectorBeta","marketCorrelation","calculateSectorMarketCorrelation","symbols","Set","p","correlations","cryptoCorrelations","i","j","symbol1","symbol2","correlation","portfolioCorrelationRisk","calculatePortfolioCorrelationRisk","diversificationScore","Math","max","recommendations","weightedCorrelation","totalWeight","pair","split","pos1Value","filter","pos2Value","weight","abs","violations","maxSingleAssetExposure","toFixed","maxSectorExposure","maxPortfolioCorrelation","minDiversificationScore","targetAllocation","deviation","rebalancingThreshold","priority","id","now","currentAllocation","action","riskReduction","calculateRiskReduction","reasoning","estimatedImpact","portfolioRisk","diversificationImprovement","correlationReduction","highestCorrelationPair","findHighestCorrelationPair","asset1","find","asset2","symbolToReduce","priorityOrder","CRITICAL","HIGH","MEDIUM","LOW","maxCorrelation","maxPair","violationCount","riskScore","min","cryptoBetas","weightedBeta","totalPnL","confidence","zScore","sqrt","var95","uniqueAssets","totalPositions","assetValues","percentages","values","v","herfindahlIndex","assetValue","currentRisk","targetRisk","updateConfig","newConfig","getConfig","getPortfolioRiskSummary","report","riskLevel","keyRisks","slice","topRecommendations","diversificationStatus","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\portfolio-risk-manager.ts"],"sourcesContent":["/**\r\n * Portfolio Risk Manager\r\n * \r\n * Implements sophisticated portfolio-level risk management with:\r\n * - Correlation analysis between positions\r\n * - Portfolio-level risk exposure monitoring\r\n * - Diversification requirements and enforcement\r\n * - Portfolio rebalancing recommendations\r\n */\r\n\r\nimport { \r\n  Position, \r\n  CorrelationMatrix, \r\n  PositionAdjustment, \r\n  RiskMetrics \r\n} from './types.js';\r\n\r\nexport interface PortfolioRiskConfig {\r\n  /** Maximum portfolio correlation threshold */\r\n  maxPortfolioCorrelation: number;\r\n  /** Maximum single asset exposure (% of portfolio) */\r\n  maxSingleAssetExposure: number;\r\n  /** Maximum sector exposure (% of portfolio) */\r\n  maxSectorExposure: number;\r\n  /** Minimum diversification score required */\r\n  minDiversificationScore: number;\r\n  /** Maximum portfolio beta */\r\n  maxPortfolioBeta: number;\r\n  /** Rebalancing threshold (% deviation) */\r\n  rebalancingThreshold: number;\r\n  /** Target portfolio allocation */\r\n  targetAllocation: Map<string, number>;\r\n}\r\n\r\nexport interface PortfolioMetrics {\r\n  /** Total portfolio value */\r\n  totalValue: number;\r\n  /** Portfolio beta */\r\n  beta: number;\r\n  /** Portfolio volatility */\r\n  volatility: number;\r\n  /** Sharpe ratio */\r\n  sharpeRatio: number;\r\n  /** Maximum drawdown */\r\n  maxDrawdown: number;\r\n  /** Value at Risk (95% confidence) */\r\n  valueAtRisk: number;\r\n  /** Expected shortfall */\r\n  expectedShortfall: number;\r\n  /** Diversification ratio */\r\n  diversificationRatio: number;\r\n  /** Concentration risk score */\r\n  concentrationRisk: number;\r\n}\r\n\r\nexport interface AssetExposure {\r\n  /** Asset symbol */\r\n  symbol: string;\r\n  /** Position value */\r\n  value: number;\r\n  /** Percentage of portfolio */\r\n  percentage: number;\r\n  /** Number of positions */\r\n  positionCount: number;\r\n  /** Average entry price */\r\n  averageEntryPrice: number;\r\n  /** Current price */\r\n  currentPrice: number;\r\n  /** Unrealized P&L */\r\n  unrealizedPnL: number;\r\n  /** Risk contribution to portfolio */\r\n  riskContribution: number;\r\n}\r\n\r\nexport interface SectorExposure {\r\n  /** Sector name */\r\n  sector: string;\r\n  /** Total exposure value */\r\n  value: number;\r\n  /** Percentage of portfolio */\r\n  percentage: number;\r\n  /** Assets in sector */\r\n  assets: string[];\r\n  /** Sector beta */\r\n  beta: number;\r\n  /** Sector correlation with market */\r\n  marketCorrelation: number;\r\n}\r\n\r\nexport interface RebalancingRecommendation {\r\n  /** Recommendation ID */\r\n  id: string;\r\n  /** Recommendation type */\r\n  type: 'REDUCE_EXPOSURE' | 'INCREASE_EXPOSURE' | 'CLOSE_POSITION' | 'DIVERSIFY';\r\n  /** Asset symbol */\r\n  symbol: string;\r\n  /** Current allocation percentage */\r\n  currentAllocation: number;\r\n  /** Target allocation percentage */\r\n  targetAllocation: number;\r\n  /** Recommended action */\r\n  action: string;\r\n  /** Expected risk reduction */\r\n  riskReduction: number;\r\n  /** Priority level */\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Reasoning */\r\n  reasoning: string;\r\n  /** Estimated impact */\r\n  estimatedImpact: {\r\n    portfolioRisk: number;\r\n    diversificationImprovement: number;\r\n    correlationReduction: number;\r\n  };\r\n}\r\n\r\nexport interface PortfolioRiskReport {\r\n  /** Report timestamp */\r\n  timestamp: Date;\r\n  /** Portfolio metrics */\r\n  metrics: PortfolioMetrics;\r\n  /** Asset exposures */\r\n  assetExposures: AssetExposure[];\r\n  /** Sector exposures */\r\n  sectorExposures: SectorExposure[];\r\n  /** Correlation matrix */\r\n  correlationMatrix: CorrelationMatrix;\r\n  /** Risk violations */\r\n  riskViolations: string[];\r\n  /** Rebalancing recommendations */\r\n  rebalancingRecommendations: RebalancingRecommendation[];\r\n  /** Overall risk score (0-100) */\r\n  overallRiskScore: number;\r\n}\r\n\r\nexport class PortfolioRiskManager {\r\n  private config: PortfolioRiskConfig;\r\n  private historicalPrices: Map<string, number[]> = new Map();\r\n  private correlationCache: Map<string, number> = new Map();\r\n\r\n  constructor(config: PortfolioRiskConfig) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Analyze portfolio risk and generate comprehensive report\r\n   */\r\n  async analyzePortfolioRisk(positions: Position[]): Promise<PortfolioRiskReport> {\r\n    // Calculate portfolio metrics\r\n    const metrics = this.calculatePortfolioMetrics(positions);\r\n    \r\n    // Calculate asset exposures\r\n    const assetExposures = this.calculateAssetExposures(positions);\r\n    \r\n    // Calculate sector exposures\r\n    const sectorExposures = this.calculateSectorExposures(assetExposures);\r\n    \r\n    // Calculate correlation matrix\r\n    const correlationMatrix = await this.calculateCorrelationMatrix(positions);\r\n    \r\n    // Identify risk violations\r\n    const riskViolations = this.identifyRiskViolations(assetExposures, sectorExposures, correlationMatrix);\r\n    \r\n    // Generate rebalancing recommendations\r\n    const rebalancingRecommendations = this.generateRebalancingRecommendations(\r\n      assetExposures, \r\n      sectorExposures, \r\n      correlationMatrix\r\n    );\r\n    \r\n    // Calculate overall risk score\r\n    const overallRiskScore = this.calculateOverallRiskScore(\r\n      metrics, \r\n      riskViolations.length, \r\n      correlationMatrix\r\n    );\r\n\r\n    return {\r\n      timestamp: new Date(),\r\n      metrics,\r\n      assetExposures,\r\n      sectorExposures,\r\n      correlationMatrix,\r\n      riskViolations,\r\n      rebalancingRecommendations,\r\n      overallRiskScore\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate comprehensive portfolio metrics\r\n   */\r\n  private calculatePortfolioMetrics(positions: Position[]): PortfolioMetrics {\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    \r\n    if (totalValue === 0) {\r\n      return {\r\n        totalValue: 0,\r\n        beta: 0,\r\n        volatility: 0,\r\n        sharpeRatio: 0,\r\n        maxDrawdown: 0,\r\n        valueAtRisk: 0,\r\n        expectedShortfall: 0,\r\n        diversificationRatio: 0,\r\n        concentrationRisk: 0\r\n      };\r\n    }\r\n\r\n    // Calculate portfolio beta (weighted average of asset betas)\r\n    const beta = this.calculatePortfolioBeta(positions, totalValue);\r\n    \r\n    // Calculate portfolio volatility\r\n    const volatility = this.calculatePortfolioVolatility(positions);\r\n    \r\n    // Calculate Sharpe ratio (assuming risk-free rate of 2%)\r\n    const riskFreeRate = 0.02;\r\n    const portfolioReturn = this.calculatePortfolioReturn(positions);\r\n    const sharpeRatio = volatility > 0 ? (portfolioReturn - riskFreeRate) / volatility : 0;\r\n    \r\n    // Calculate maximum drawdown\r\n    const maxDrawdown = this.calculateMaxDrawdown(positions);\r\n    \r\n    // Calculate Value at Risk (95% confidence)\r\n    const valueAtRisk = this.calculateValueAtRisk(positions, totalValue, 0.95);\r\n    \r\n    // Calculate Expected Shortfall\r\n    const expectedShortfall = this.calculateExpectedShortfall(positions, totalValue, 0.95);\r\n    \r\n    // Calculate diversification ratio\r\n    const diversificationRatio = this.calculateDiversificationRatio(positions);\r\n    \r\n    // Calculate concentration risk\r\n    const concentrationRisk = this.calculateConcentrationRisk(positions, totalValue);\r\n\r\n    return {\r\n      totalValue,\r\n      beta,\r\n      volatility,\r\n      sharpeRatio,\r\n      maxDrawdown,\r\n      valueAtRisk,\r\n      expectedShortfall,\r\n      diversificationRatio,\r\n      concentrationRisk\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate asset exposures\r\n   */\r\n  private calculateAssetExposures(positions: Position[]): AssetExposure[] {\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    const assetMap = new Map<string, Position[]>();\r\n\r\n    // Group positions by asset\r\n    positions.forEach(pos => {\r\n      if (!assetMap.has(pos.symbol)) {\r\n        assetMap.set(pos.symbol, []);\r\n      }\r\n      assetMap.get(pos.symbol)!.push(pos);\r\n    });\r\n\r\n    return Array.from(assetMap.entries()).map(([symbol, assetPositions]) => {\r\n      const value = assetPositions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n      const totalSize = assetPositions.reduce((sum, pos) => sum + pos.size, 0);\r\n      const averageEntryPrice = assetPositions.reduce((sum, pos) => sum + (pos.entryPrice * pos.size), 0) / totalSize;\r\n      const currentPrice = assetPositions[0].currentPrice;\r\n      const unrealizedPnL = assetPositions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\r\n      const riskContribution = this.calculateAssetRiskContribution(symbol, assetPositions, totalValue);\r\n\r\n      return {\r\n        symbol,\r\n        value,\r\n        percentage: (value / totalValue) * 100,\r\n        positionCount: assetPositions.length,\r\n        averageEntryPrice,\r\n        currentPrice,\r\n        unrealizedPnL,\r\n        riskContribution\r\n      };\r\n    }).sort((a, b) => b.percentage - a.percentage);\r\n  }\r\n\r\n  /**\r\n   * Calculate sector exposures\r\n   */\r\n  private calculateSectorExposures(assetExposures: AssetExposure[]): SectorExposure[] {\r\n    // Define crypto sectors\r\n    const sectorMap: Record<string, string> = {\r\n      'BTC': 'Digital Gold',\r\n      'ETH': 'Smart Contracts',\r\n      'ADA': 'Smart Contracts',\r\n      'DOT': 'Interoperability',\r\n      'LINK': 'Oracle',\r\n      'UNI': 'DeFi',\r\n      'AAVE': 'DeFi'\r\n    };\r\n\r\n    const sectors = new Map<string, AssetExposure[]>();\r\n    const totalValue = assetExposures.reduce((sum, asset) => sum + asset.value, 0);\r\n\r\n    assetExposures.forEach(asset => {\r\n      const sector = sectorMap[asset.symbol] || 'Other';\r\n      if (!sectors.has(sector)) {\r\n        sectors.set(sector, []);\r\n      }\r\n      sectors.get(sector)!.push(asset);\r\n    });\r\n\r\n    return Array.from(sectors.entries()).map(([sector, assets]) => {\r\n      const value = assets.reduce((sum, asset) => sum + asset.value, 0);\r\n      const beta = this.calculateSectorBeta(assets);\r\n      const marketCorrelation = this.calculateSectorMarketCorrelation(assets);\r\n\r\n      return {\r\n        sector,\r\n        value,\r\n        percentage: (value / totalValue) * 100,\r\n        assets: assets.map(a => a.symbol),\r\n        beta,\r\n        marketCorrelation\r\n      };\r\n    }).sort((a, b) => b.percentage - a.percentage);\r\n  }\r\n\r\n  /**\r\n   * Calculate correlation matrix between assets\r\n   */\r\n  private async calculateCorrelationMatrix(positions: Position[]): Promise<CorrelationMatrix> {\r\n    const symbols = [...new Set(positions.map(p => p.symbol))];\r\n    const correlations = new Map<string, number>();\r\n\r\n    // Predefined correlation coefficients for crypto assets\r\n    const cryptoCorrelations: Record<string, Record<string, number>> = {\r\n      'BTC': { 'ETH': 0.75, 'BTC': 1.0 },\r\n      'ETH': { 'BTC': 0.75, 'ETH': 1.0 }\r\n    };\r\n\r\n    for (let i = 0; i < symbols.length; i++) {\r\n      for (let j = i + 1; j < symbols.length; j++) {\r\n        const symbol1 = symbols[i];\r\n        const symbol2 = symbols[j];\r\n        const correlation = cryptoCorrelations[symbol1]?.[symbol2] || \r\n                          cryptoCorrelations[symbol2]?.[symbol1] || \r\n                          0.3; // Default moderate correlation for crypto\r\n\r\n        correlations.set(`${symbol1}-${symbol2}`, correlation);\r\n      }\r\n    }\r\n\r\n    const portfolioCorrelationRisk = this.calculatePortfolioCorrelationRisk(correlations, positions);\r\n    const diversificationScore = Math.max(0, 100 - (portfolioCorrelationRisk * 100));\r\n\r\n    return {\r\n      correlations,\r\n      portfolioCorrelationRisk,\r\n      diversificationScore,\r\n      recommendations: []\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate portfolio correlation risk\r\n   */\r\n  private calculatePortfolioCorrelationRisk(\r\n    correlations: Map<string, number>, \r\n    positions: Position[]\r\n  ): number {\r\n    if (correlations.size === 0) return 0;\r\n\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    let weightedCorrelation = 0;\r\n    let totalWeight = 0;\r\n\r\n    correlations.forEach((correlation, pair) => {\r\n      const [symbol1, symbol2] = pair.split('-');\r\n      const pos1Value = positions\r\n        .filter(p => p.symbol === symbol1)\r\n        .reduce((sum, p) => sum + (p.size * p.currentPrice), 0);\r\n      const pos2Value = positions\r\n        .filter(p => p.symbol === symbol2)\r\n        .reduce((sum, p) => sum + (p.size * p.currentPrice), 0);\r\n\r\n      const weight = (pos1Value * pos2Value) / (totalValue * totalValue);\r\n      weightedCorrelation += Math.abs(correlation) * weight;\r\n      totalWeight += weight;\r\n    });\r\n\r\n    return totalWeight > 0 ? weightedCorrelation / totalWeight : 0;\r\n  }\r\n\r\n  /**\r\n   * Identify risk violations\r\n   */\r\n  private identifyRiskViolations(\r\n    assetExposures: AssetExposure[],\r\n    sectorExposures: SectorExposure[],\r\n    correlationMatrix: CorrelationMatrix\r\n  ): string[] {\r\n    const violations: string[] = [];\r\n\r\n    // Check single asset exposure limits\r\n    assetExposures.forEach(asset => {\r\n      if (asset.percentage > this.config.maxSingleAssetExposure) {\r\n        violations.push(\r\n          `${asset.symbol} exposure ${asset.percentage.toFixed(1)}% exceeds limit ${this.config.maxSingleAssetExposure}%`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Check sector exposure limits\r\n    sectorExposures.forEach(sector => {\r\n      if (sector.percentage > this.config.maxSectorExposure) {\r\n        violations.push(\r\n          `${sector.sector} sector exposure ${sector.percentage.toFixed(1)}% exceeds limit ${this.config.maxSectorExposure}%`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Check portfolio correlation\r\n    if (correlationMatrix.portfolioCorrelationRisk > this.config.maxPortfolioCorrelation) {\r\n      violations.push(\r\n        `Portfolio correlation risk ${(correlationMatrix.portfolioCorrelationRisk * 100).toFixed(1)}% exceeds limit ${(this.config.maxPortfolioCorrelation * 100).toFixed(1)}%`\r\n      );\r\n    }\r\n\r\n    // Check diversification score\r\n    if (correlationMatrix.diversificationScore < this.config.minDiversificationScore) {\r\n      violations.push(\r\n        `Diversification score ${correlationMatrix.diversificationScore.toFixed(1)} below minimum ${this.config.minDiversificationScore}`\r\n      );\r\n    }\r\n\r\n    return violations;\r\n  }\r\n\r\n  /**\r\n   * Generate rebalancing recommendations\r\n   */\r\n  private generateRebalancingRecommendations(\r\n    assetExposures: AssetExposure[],\r\n    sectorExposures: SectorExposure[],\r\n    correlationMatrix: CorrelationMatrix\r\n  ): RebalancingRecommendation[] {\r\n    const recommendations: RebalancingRecommendation[] = [];\r\n\r\n    // Recommendations for overexposed assets\r\n    assetExposures.forEach(asset => {\r\n      const targetAllocation = this.config.targetAllocation.get(asset.symbol) || 0;\r\n      const deviation = Math.abs(asset.percentage - targetAllocation);\r\n\r\n      if (deviation > this.config.rebalancingThreshold) {\r\n        const priority = asset.percentage > this.config.maxSingleAssetExposure ? 'CRITICAL' : \r\n                        deviation > this.config.rebalancingThreshold * 2 ? 'HIGH' : 'MEDIUM';\r\n\r\n        recommendations.push({\r\n          id: `rebalance-${asset.symbol}-${Date.now()}`,\r\n          type: asset.percentage > targetAllocation ? 'REDUCE_EXPOSURE' : 'INCREASE_EXPOSURE',\r\n          symbol: asset.symbol,\r\n          currentAllocation: asset.percentage,\r\n          targetAllocation,\r\n          action: asset.percentage > targetAllocation \r\n            ? `Reduce ${asset.symbol} position by ${(asset.percentage - targetAllocation).toFixed(1)}%`\r\n            : `Increase ${asset.symbol} position by ${(targetAllocation - asset.percentage).toFixed(1)}%`,\r\n          riskReduction: this.calculateRiskReduction(asset, targetAllocation),\r\n          priority,\r\n          reasoning: `Current allocation ${asset.percentage.toFixed(1)}% deviates from target ${targetAllocation.toFixed(1)}%`,\r\n          estimatedImpact: {\r\n            portfolioRisk: deviation * -0.1, // Estimated risk reduction\r\n            diversificationImprovement: deviation * 0.05,\r\n            correlationReduction: asset.riskContribution * 0.1\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // Recommendations for high correlation\r\n    if (correlationMatrix.portfolioCorrelationRisk > this.config.maxPortfolioCorrelation) {\r\n      const highestCorrelationPair = this.findHighestCorrelationPair(correlationMatrix.correlations);\r\n      if (highestCorrelationPair) {\r\n        const [symbol1, symbol2] = highestCorrelationPair.pair.split('-');\r\n        const asset1 = assetExposures.find(a => a.symbol === symbol1);\r\n        const asset2 = assetExposures.find(a => a.symbol === symbol2);\r\n\r\n        if (asset1 && asset2) {\r\n          const symbolToReduce = asset1.percentage > asset2.percentage ? symbol1 : symbol2;\r\n          \r\n          recommendations.push({\r\n            id: `diversify-${symbolToReduce}-${Date.now()}`,\r\n            type: 'DIVERSIFY',\r\n            symbol: symbolToReduce,\r\n            currentAllocation: (asset1.percentage + asset2.percentage),\r\n            targetAllocation: Math.max(asset1.percentage, asset2.percentage) * 0.7,\r\n            action: `Reduce ${symbolToReduce} to improve diversification`,\r\n            riskReduction: highestCorrelationPair.correlation * 10,\r\n            priority: 'HIGH',\r\n            reasoning: `High correlation ${(highestCorrelationPair.correlation * 100).toFixed(0)}% between ${symbol1} and ${symbol2}`,\r\n            estimatedImpact: {\r\n              portfolioRisk: -5,\r\n              diversificationImprovement: 10,\r\n              correlationReduction: highestCorrelationPair.correlation * 20\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return recommendations.sort((a, b) => {\r\n      const priorityOrder = { CRITICAL: 4, HIGH: 3, MEDIUM: 2, LOW: 1 };\r\n      return priorityOrder[b.priority] - priorityOrder[a.priority];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Find highest correlation pair\r\n   */\r\n  private findHighestCorrelationPair(correlations: Map<string, number>): { pair: string; correlation: number } | null {\r\n    let maxCorrelation = 0;\r\n    let maxPair = '';\r\n\r\n    correlations.forEach((correlation, pair) => {\r\n      if (Math.abs(correlation) > Math.abs(maxCorrelation)) {\r\n        maxCorrelation = correlation;\r\n        maxPair = pair;\r\n      }\r\n    });\r\n\r\n    return maxPair ? { pair: maxPair, correlation: maxCorrelation } : null;\r\n  }\r\n\r\n  /**\r\n   * Calculate overall risk score\r\n   */\r\n  private calculateOverallRiskScore(\r\n    metrics: PortfolioMetrics,\r\n    violationCount: number,\r\n    correlationMatrix: CorrelationMatrix\r\n  ): number {\r\n    let riskScore = 0;\r\n\r\n    // Base risk from concentration\r\n    riskScore += metrics.concentrationRisk * 30;\r\n\r\n    // Risk from correlation\r\n    riskScore += correlationMatrix.portfolioCorrelationRisk * 25;\r\n\r\n    // Risk from violations\r\n    riskScore += violationCount * 10;\r\n\r\n    // Risk from volatility\r\n    riskScore += Math.min(metrics.volatility * 100, 20);\r\n\r\n    // Risk from drawdown\r\n    riskScore += Math.min(metrics.maxDrawdown, 15);\r\n\r\n    return Math.min(100, Math.max(0, riskScore));\r\n  }\r\n\r\n  // Helper methods for calculations\r\n  private calculatePortfolioBeta(positions: Position[], totalValue: number): number {\r\n    // Simplified beta calculation - in production would use historical data\r\n    const cryptoBetas: Record<string, number> = {\r\n      'BTC': 1.0,\r\n      'ETH': 1.2,\r\n      'ADA': 1.5,\r\n      'DOT': 1.3\r\n    };\r\n\r\n    let weightedBeta = 0;\r\n    positions.forEach(pos => {\r\n      const weight = (pos.size * pos.currentPrice) / totalValue;\r\n      const beta = cryptoBetas[pos.symbol] || 1.0;\r\n      weightedBeta += weight * beta;\r\n    });\r\n\r\n    return weightedBeta;\r\n  }\r\n\r\n  private calculatePortfolioVolatility(positions: Position[]): number {\r\n    // Simplified volatility calculation\r\n    return 0.4; // 40% annual volatility for crypto portfolio\r\n  }\r\n\r\n  private calculatePortfolioReturn(positions: Position[]): number {\r\n    const totalValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    const totalPnL = positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\r\n    return totalValue > 0 ? totalPnL / totalValue : 0;\r\n  }\r\n\r\n  private calculateMaxDrawdown(positions: Position[]): number {\r\n    // Simplified max drawdown calculation\r\n    return 15; // 15% max drawdown\r\n  }\r\n\r\n  private calculateValueAtRisk(positions: Position[], totalValue: number, confidence: number): number {\r\n    const volatility = this.calculatePortfolioVolatility(positions);\r\n    const zScore = confidence === 0.95 ? 1.645 : 2.33; // 95% or 99% confidence\r\n    return totalValue * volatility * zScore / Math.sqrt(252); // Daily VaR\r\n  }\r\n\r\n  private calculateExpectedShortfall(positions: Position[], totalValue: number, confidence: number): number {\r\n    const var95 = this.calculateValueAtRisk(positions, totalValue, confidence);\r\n    return var95 * 1.3; // ES is typically 1.3x VaR for normal distribution\r\n  }\r\n\r\n  private calculateDiversificationRatio(positions: Position[]): number {\r\n    const uniqueAssets = new Set(positions.map(p => p.symbol)).size;\r\n    const totalPositions = positions.length;\r\n    return uniqueAssets / Math.max(1, totalPositions);\r\n  }\r\n\r\n  private calculateConcentrationRisk(positions: Position[], totalValue: number): number {\r\n    const assetValues = new Map<string, number>();\r\n    positions.forEach(pos => {\r\n      const value = pos.size * pos.currentPrice;\r\n      assetValues.set(pos.symbol, (assetValues.get(pos.symbol) || 0) + value);\r\n    });\r\n\r\n    const percentages = Array.from(assetValues.values()).map(v => v / totalValue);\r\n    const herfindahlIndex = percentages.reduce((sum, p) => sum + p * p, 0);\r\n    \r\n    return herfindahlIndex; // 0 = perfectly diversified, 1 = concentrated in one asset\r\n  }\r\n\r\n  private calculateAssetRiskContribution(symbol: string, positions: Position[], totalValue: number): number {\r\n    const assetValue = positions.reduce((sum, pos) => sum + (pos.size * pos.currentPrice), 0);\r\n    const weight = assetValue / totalValue;\r\n    const volatility = 0.5; // Simplified asset volatility\r\n    \r\n    return weight * volatility * 100; // Risk contribution as percentage\r\n  }\r\n\r\n  private calculateSectorBeta(assets: AssetExposure[]): number {\r\n    const cryptoBetas: Record<string, number> = {\r\n      'BTC': 1.0, 'ETH': 1.2, 'ADA': 1.5, 'DOT': 1.3\r\n    };\r\n\r\n    const totalValue = assets.reduce((sum, asset) => sum + asset.value, 0);\r\n    let weightedBeta = 0;\r\n\r\n    assets.forEach(asset => {\r\n      const weight = asset.value / totalValue;\r\n      const beta = cryptoBetas[asset.symbol] || 1.0;\r\n      weightedBeta += weight * beta;\r\n    });\r\n\r\n    return weightedBeta;\r\n  }\r\n\r\n  private calculateSectorMarketCorrelation(assets: AssetExposure[]): number {\r\n    // Simplified sector correlation with overall crypto market\r\n    return 0.8; // High correlation with crypto market\r\n  }\r\n\r\n  private calculateRiskReduction(asset: AssetExposure, targetAllocation: number): number {\r\n    const currentRisk = asset.riskContribution;\r\n    const targetRisk = currentRisk * (targetAllocation / asset.percentage);\r\n    return currentRisk - targetRisk;\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  updateConfig(newConfig: Partial<PortfolioRiskConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   */\r\n  getConfig(): PortfolioRiskConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Get portfolio risk summary\r\n   */\r\n  getPortfolioRiskSummary(report: PortfolioRiskReport): {\r\n    riskLevel: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n    keyRisks: string[];\r\n    topRecommendations: RebalancingRecommendation[];\r\n    diversificationStatus: 'GOOD' | 'FAIR' | 'POOR';\r\n  } {\r\n    const riskLevel = report.overallRiskScore < 25 ? 'LOW' :\r\n                     report.overallRiskScore < 50 ? 'MEDIUM' :\r\n                     report.overallRiskScore < 75 ? 'HIGH' : 'CRITICAL';\r\n\r\n    const keyRisks = report.riskViolations.slice(0, 3);\r\n    const topRecommendations = report.rebalancingRecommendations.slice(0, 3);\r\n    \r\n    const diversificationStatus = report.correlationMatrix.diversificationScore > 70 ? 'GOOD' :\r\n                                 report.correlationMatrix.diversificationScore > 40 ? 'FAIR' : 'POOR';\r\n\r\n    return {\r\n      riskLevel,\r\n      keyRisks,\r\n      topRecommendations,\r\n      diversificationStatus\r\n    };\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}