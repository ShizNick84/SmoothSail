4b489c9a1f3aabc9f856e3d5c0d723b7
"use strict";

/**
 * =============================================================================
 * ADAPTIVE LEARNER - AI LEARNING AND OPTIMIZATION SYSTEM
 * =============================================================================
 *
 * This module implements adaptive learning and continuous optimization for
 * the AI trading system. It learns from trading outcomes, market conditions,
 * and performance feedback to continuously improve decision-making and
 * strategy parameters.
 *
 * Key Features:
 * - Performance feedback loops for strategy improvement
 * - Market condition adaptation mechanisms
 * - Strategy parameter optimization based on results
 * - Continuous learning from trading outcomes
 * - Model performance tracking and adjustment
 * - Automated hyperparameter tuning
 *
 * @author AI Crypto Trading System
 * @version 1.0.0
 * @license PROPRIETARY
 * =============================================================================
 */
/* istanbul ignore next */
function cov_n7stll51c() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\adaptive-learner.ts";
  var hash = "6a3937b5a1baa16f57e6e77cb95597c622c8fe65";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\adaptive-learner.ts",
    statementMap: {
      "0": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "1": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "2": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "3": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "4": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 25
        }
      },
      "5": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "6": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "7": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 25
        }
      },
      "8": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 26
        }
      },
      "9": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "10": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "11": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "12": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 16
        }
      },
      "13": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 35
        }
      },
      "14": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 64
        }
      },
      "15": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "16": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "17": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "18": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 59
        }
      },
      "19": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 44
        }
      },
      "20": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "21": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 38
        }
      },
      "22": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "23": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 80
        }
      },
      "24": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 37
        }
      },
      "25": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 85
        }
      },
      "26": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 24
        }
      },
      "27": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "28": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 87
        }
      },
      "29": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "30": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 105
        }
      },
      "31": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 77
        }
      },
      "32": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "33": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 44
        }
      },
      "34": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 110
        }
      },
      "35": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "36": {
        start: {
          line: 161,
          column: 32
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "37": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 64
        }
      },
      "38": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 92
        }
      },
      "39": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 193,
          column: 40
        }
      },
      "40": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "41": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 51
        }
      },
      "42": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 75
        }
      },
      "43": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 58
        }
      },
      "44": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "45": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 125
        }
      },
      "46": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 47
        }
      },
      "47": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "48": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 88
        }
      },
      "49": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 58
        }
      },
      "50": {
        start: {
          line: 211,
          column: 29
        },
        end: {
          line: 211,
          column: 67
        }
      },
      "51": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "52": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 61
        }
      },
      "53": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 50
        }
      },
      "54": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 79
        }
      },
      "55": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 24
        }
      },
      "56": {
        start: {
          line: 227,
          column: 28
        },
        end: {
          line: 227,
          column: 74
        }
      },
      "57": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "58": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "59": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 34
        }
      },
      "60": {
        start: {
          line: 232,
          column: 22
        },
        end: {
          line: 232,
          column: 47
        }
      },
      "61": {
        start: {
          line: 233,
          column: 27
        },
        end: {
          line: 233,
          column: 46
        }
      },
      "62": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 123
        }
      },
      "63": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 44
        }
      },
      "64": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 115
        }
      },
      "65": {
        start: {
          line: 237,
          column: 36
        },
        end: {
          line: 237,
          column: 64
        }
      },
      "66": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 145
        }
      },
      "67": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 45
        }
      },
      "68": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 124
        }
      },
      "69": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "70": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "71": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 31
        }
      },
      "72": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 42
        }
      },
      "73": {
        start: {
          line: 254,
          column: 17
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "74": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 255,
          column: 31
        }
      },
      "75": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 42
        }
      },
      "76": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 31
        }
      },
      "77": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 42
        }
      },
      "78": {
        start: {
          line: 263,
          column: 13
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "79": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "80": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 31
        }
      },
      "81": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 44
        }
      },
      "82": {
        start: {
          line: 268,
          column: 17
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "83": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 31
        }
      },
      "84": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 44
        }
      },
      "85": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 31
        }
      },
      "86": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 42
        }
      },
      "87": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 27
        }
      },
      "88": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 38
        }
      },
      "89": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 288,
          column: 10
        }
      },
      "90": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "91": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 108
        }
      },
      "92": {
        start: {
          line: 297,
          column: 29
        },
        end: {
          line: 297,
          column: 76
        }
      },
      "93": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 52
        }
      },
      "94": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 66
        }
      },
      "95": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 75
        }
      },
      "96": {
        start: {
          line: 310,
          column: 25
        },
        end: {
          line: 310,
          column: 27
        }
      },
      "97": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "98": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "99": {
        start: {
          line: 327,
          column: 13
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "100": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "101": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 24
        }
      },
      "102": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "103": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 77
        }
      },
      "104": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 353,
          column: 13
        }
      },
      "105": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 152
        }
      },
      "106": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 23
        }
      },
      "107": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 54
        }
      },
      "108": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 50
        }
      },
      "109": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 34
        }
      },
      "110": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 64
        }
      },
      "111": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 15
        }
      },
      "112": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 72
        }
      },
      "113": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "114": {
        start: {
          line: 375,
          column: 37
        },
        end: {
          line: 375,
          column: 98
        }
      },
      "115": {
        start: {
          line: 375,
          column: 70
        },
        end: {
          line: 375,
          column: 97
        }
      },
      "116": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 377,
          column: 25
        }
      },
      "117": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 25
        }
      },
      "118": {
        start: {
          line: 379,
          column: 25
        },
        end: {
          line: 379,
          column: 81
        }
      },
      "119": {
        start: {
          line: 379,
          column: 54
        },
        end: {
          line: 379,
          column: 73
        }
      },
      "120": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 73
        }
      },
      "121": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 111
        }
      },
      "122": {
        start: {
          line: 381,
          column: 69
        },
        end: {
          line: 381,
          column: 80
        }
      },
      "123": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 131
        }
      },
      "124": {
        start: {
          line: 382,
          column: 79
        },
        end: {
          line: 382,
          column: 100
        }
      },
      "125": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 49
        }
      },
      "126": {
        start: {
          line: 390,
          column: 31
        },
        end: {
          line: 390,
          column: 63
        }
      },
      "127": {
        start: {
          line: 392,
          column: 24
        },
        end: {
          line: 392,
          column: 110
        }
      },
      "128": {
        start: {
          line: 392,
          column: 52
        },
        end: {
          line: 392,
          column: 71
        }
      },
      "129": {
        start: {
          line: 393,
          column: 26
        },
        end: {
          line: 393,
          column: 109
        }
      },
      "130": {
        start: {
          line: 393,
          column: 60
        },
        end: {
          line: 393,
          column: 81
        }
      },
      "131": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "132": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 403,
          column: 15
        }
      },
      "133": {
        start: {
          line: 405,
          column: 13
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "134": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 414,
          column: 15
        }
      },
      "135": {
        start: {
          line: 421,
          column: 23
        },
        end: {
          line: 421,
          column: 47
        }
      },
      "136": {
        start: {
          line: 422,
          column: 27
        },
        end: {
          line: 422,
          column: 56
        }
      },
      "137": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 105
        }
      },
      "138": {
        start: {
          line: 424,
          column: 72
        },
        end: {
          line: 424,
          column: 103
        }
      },
      "139": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 64
        }
      },
      "140": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "141": {
        start: {
          line: 432,
          column: 32
        },
        end: {
          line: 432,
          column: 74
        }
      },
      "142": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 52
        }
      },
      "143": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 61
        }
      },
      "144": {
        start: {
          line: 441,
          column: 25
        },
        end: {
          line: 441,
          column: 113
        }
      },
      "145": {
        start: {
          line: 441,
          column: 67
        },
        end: {
          line: 441,
          column: 112
        }
      },
      "146": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 59
        }
      },
      "147": {
        start: {
          line: 448,
          column: 30
        },
        end: {
          line: 448,
          column: 57
        }
      },
      "148": {
        start: {
          line: 449,
          column: 31
        },
        end: {
          line: 450,
          column: 100
        }
      },
      "149": {
        start: {
          line: 450,
          column: 46
        },
        end: {
          line: 450,
          column: 65
        }
      },
      "150": {
        start: {
          line: 451,
          column: 27
        },
        end: {
          line: 451,
          column: 72
        }
      },
      "151": {
        start: {
          line: 452,
          column: 29
        },
        end: {
          line: 452,
          column: 153
        }
      },
      "152": {
        start: {
          line: 452,
          column: 66
        },
        end: {
          line: 452,
          column: 113
        }
      },
      "153": {
        start: {
          line: 453,
          column: 30
        },
        end: {
          line: 453,
          column: 157
        }
      },
      "154": {
        start: {
          line: 453,
          column: 68
        },
        end: {
          line: 453,
          column: 117
        }
      },
      "155": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 460,
          column: 10
        }
      },
      "156": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "157": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 73
        }
      },
      "158": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "159": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 50
        }
      },
      "160": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 42
        }
      },
      "161": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 38
        }
      },
      "162": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 45
        }
      },
      "163": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 39
        }
      },
      "164": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 39
        }
      },
      "165": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 74
        }
      },
      "166": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 86
        }
      },
      "167": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 24
        }
      },
      "168": {
        start: {
          line: 486,
          column: 0
        },
        end: {
          line: 486,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 52
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 60
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 31
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 85
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 39
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 158
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 25
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 185
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 186,
            column: 41
          },
          end: {
            line: 186,
            column: 42
          }
        },
        loc: {
          start: {
            line: 186,
            column: 53
          },
          end: {
            line: 193,
            column: 9
          }
        },
        line: 186
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        loc: {
          start: {
            line: 199,
            column: 40
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 199
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 45
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 226
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 38
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 245
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 44
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 293
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 47
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 309
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 34
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 347
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 41
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 373
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 375,
            column: 65
          },
          end: {
            line: 375,
            column: 66
          }
        },
        loc: {
          start: {
            line: 375,
            column: 70
          },
          end: {
            line: 375,
            column: 97
          }
        },
        line: 375
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 379,
            column: 49
          },
          end: {
            line: 379,
            column: 50
          }
        },
        loc: {
          start: {
            line: 379,
            column: 54
          },
          end: {
            line: 379,
            column: 73
          }
        },
        line: 379
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 381,
            column: 57
          },
          end: {
            line: 381,
            column: 58
          }
        },
        loc: {
          start: {
            line: 381,
            column: 69
          },
          end: {
            line: 381,
            column: 80
          }
        },
        line: 381
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 382,
            column: 67
          },
          end: {
            line: 382,
            column: 68
          }
        },
        loc: {
          start: {
            line: 382,
            column: 79
          },
          end: {
            line: 382,
            column: 100
          }
        },
        line: 382
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 389,
            column: 5
          }
        },
        loc: {
          start: {
            line: 389,
            column: 37
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 389
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 392,
            column: 47
          },
          end: {
            line: 392,
            column: 48
          }
        },
        loc: {
          start: {
            line: 392,
            column: 52
          },
          end: {
            line: 392,
            column: 71
          }
        },
        line: 392
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 393,
            column: 48
          },
          end: {
            line: 393,
            column: 49
          }
        },
        loc: {
          start: {
            line: 393,
            column: 60
          },
          end: {
            line: 393,
            column: 81
          }
        },
        line: 393
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        loc: {
          start: {
            line: 420,
            column: 21
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 420
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 424,
            column: 61
          },
          end: {
            line: 424,
            column: 62
          }
        },
        loc: {
          start: {
            line: 424,
            column: 72
          },
          end: {
            line: 424,
            column: 103
          }
        },
        line: 424
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        loc: {
          start: {
            line: 430,
            column: 41
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 430
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 31
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 440
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 441,
            column: 57
          },
          end: {
            line: 441,
            column: 58
          }
        },
        loc: {
          start: {
            line: 441,
            column: 67
          },
          end: {
            line: 441,
            column: 112
          }
        },
        line: 441
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 447,
            column: 4
          },
          end: {
            line: 447,
            column: 5
          }
        },
        loc: {
          start: {
            line: 447,
            column: 25
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 447
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 450,
            column: 41
          },
          end: {
            line: 450,
            column: 42
          }
        },
        loc: {
          start: {
            line: 450,
            column: 46
          },
          end: {
            line: 450,
            column: 65
          }
        },
        line: 450
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 452,
            column: 47
          },
          end: {
            line: 452,
            column: 48
          }
        },
        loc: {
          start: {
            line: 452,
            column: 66
          },
          end: {
            line: 452,
            column: 113
          }
        },
        line: 452
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 453,
            column: 48
          },
          end: {
            line: 453,
            column: 49
          }
        },
        loc: {
          start: {
            line: 453,
            column: 68
          },
          end: {
            line: 453,
            column: 117
          }
        },
        line: 453
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 465,
            column: 4
          },
          end: {
            line: 465,
            column: 5
          }
        },
        loc: {
          start: {
            line: 465,
            column: 21
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 465
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "2": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "3": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 54
          }
        }, {
          start: {
            line: 213,
            column: 58
          },
          end: {
            line: 213,
            column: 95
          }
        }],
        line: 213
      },
      "4": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 229,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 229,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "5": {
        loc: {
          start: {
            line: 234,
            column: 79
          },
          end: {
            line: 234,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 87
          },
          end: {
            line: 234,
            column: 90
          }
        }, {
          start: {
            line: 234,
            column: 93
          },
          end: {
            line: 234,
            column: 94
          }
        }],
        line: 234
      },
      "6": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 280,
            column: 9
          }
        }],
        line: 249
      },
      "7": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 261,
            column: 13
          }
        }, {
          start: {
            line: 254,
            column: 17
          },
          end: {
            line: 261,
            column: 13
          }
        }],
        line: 250
      },
      "8": {
        loc: {
          start: {
            line: 254,
            column: 17
          },
          end: {
            line: 261,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 17
          },
          end: {
            line: 261,
            column: 13
          }
        }, {
          start: {
            line: 258,
            column: 17
          },
          end: {
            line: 261,
            column: 13
          }
        }],
        line: 254
      },
      "9": {
        loc: {
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 13
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 280,
            column: 9
          }
        }],
        line: 263
      },
      "10": {
        loc: {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: 268,
            column: 17
          },
          end: {
            line: 275,
            column: 13
          }
        }],
        line: 264
      },
      "11": {
        loc: {
          start: {
            line: 268,
            column: 17
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 17
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: 272,
            column: 17
          },
          end: {
            line: 275,
            column: 13
          }
        }],
        line: 268
      },
      "12": {
        loc: {
          start: {
            line: 286,
            column: 23
          },
          end: {
            line: 286,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 23
          },
          end: {
            line: 286,
            column: 44
          }
        }, {
          start: {
            line: 286,
            column: 48
          },
          end: {
            line: 286,
            column: 58
          }
        }],
        line: 286
      },
      "13": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: 327,
            column: 13
          },
          end: {
            line: 341,
            column: 9
          }
        }],
        line: 312
      },
      "14": {
        loc: {
          start: {
            line: 327,
            column: 13
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 13
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "15": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 353,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 353,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "16": {
        loc: {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 377,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 377,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "17": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 415,
            column: 9
          }
        }],
        line: 394
      },
      "18": {
        loc: {
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 415,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 13
          },
          end: {
            line: 415,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "19": {
        loc: {
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 434,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 434,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "20": {
        loc: {
          start: {
            line: 433,
            column: 19
          },
          end: {
            line: 433,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 33
          },
          end: {
            line: 433,
            column: 46
          }
        }, {
          start: {
            line: 433,
            column: 49
          },
          end: {
            line: 433,
            column: 51
          }
        }],
        line: 433
      },
      "21": {
        loc: {
          start: {
            line: 442,
            column: 15
          },
          end: {
            line: 442,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 442,
            column: 23
          },
          end: {
            line: 442,
            column: 47
          }
        }, {
          start: {
            line: 442,
            column: 50
          },
          end: {
            line: 442,
            column: 58
          }
        }],
        line: 442
      },
      "22": {
        loc: {
          start: {
            line: 449,
            column: 31
          },
          end: {
            line: 450,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 450,
            column: 96
          }
        }, {
          start: {
            line: 450,
            column: 99
          },
          end: {
            line: 450,
            column: 100
          }
        }],
        line: 449
      },
      "23": {
        loc: {
          start: {
            line: 452,
            column: 29
          },
          end: {
            line: 452,
            column: 153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 452,
            column: 29
          },
          end: {
            line: 452,
            column: 143
          }
        }, {
          start: {
            line: 452,
            column: 147
          },
          end: {
            line: 452,
            column: 153
          }
        }],
        line: 452
      },
      "24": {
        loc: {
          start: {
            line: 452,
            column: 66
          },
          end: {
            line: 452,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 99
          },
          end: {
            line: 452,
            column: 106
          }
        }, {
          start: {
            line: 452,
            column: 109
          },
          end: {
            line: 452,
            column: 113
          }
        }],
        line: 452
      },
      "25": {
        loc: {
          start: {
            line: 453,
            column: 30
          },
          end: {
            line: 453,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 453,
            column: 30
          },
          end: {
            line: 453,
            column: 147
          }
        }, {
          start: {
            line: 453,
            column: 151
          },
          end: {
            line: 453,
            column: 157
          }
        }],
        line: 453
      },
      "26": {
        loc: {
          start: {
            line: 453,
            column: 68
          },
          end: {
            line: 453,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 102
          },
          end: {
            line: 453,
            column: 109
          }
        }, {
          start: {
            line: 453,
            column: 112
          },
          end: {
            line: 453,
            column: 117
          }
        }],
        line: 453
      },
      "27": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\adaptive-learner.ts",
      mappings: ";AAAA;;;;;;;;;;;;;;;;;;;;;;GAsBG;;;AAEH,mCAAsC;AACtC,kDAA+C;AAqF/C;;GAEG;AACH,MAAa,eAAgB,SAAQ,qBAAY;IACvC,SAAS,CAAY;IACrB,aAAa,GAAY,KAAK,CAAC;IAC/B,eAAe,GAAqB,EAAE,CAAC;IACvC,mBAAmB,GAAqC,IAAI,GAAG,EAAE,CAAC;IAClE,gBAAgB,GAAsB,EAAE,CAAC;IAEzC,cAAc,GAAW,KAAK,CAAC;IAC/B,sBAAsB,GAAW,OAAO,CAAC,CAAC,SAAS;IACnD,aAAa,GAA0B,IAAI,CAAC;IAEpD,yBAAyB;IACR,eAAe,GAAG;QACjC,oBAAoB,EAAE,EAAE;QACxB,wBAAwB,EAAE,GAAG;QAC7B,mBAAmB,EAAE,EAAE;QACvB,qBAAqB,EAAE,IAAI,EAAE,2BAA2B;QACxD,mBAAmB,EAAE,CAAC,EAAE,iCAAiC;QACzD,kBAAkB,EAAE,GAAG,EAAE,6CAA6C;QACtE,YAAY,EAAE,GAAG,EAAE,sCAAsC;QACzD,eAAe,EAAE,GAAG,CAAC,sCAAsC;KAC5D,CAAC;IAEF,YAAY,SAAoB;QAC9B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,eAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,UAAU;QACrB,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;YAEnD,6BAA6B;YAC7B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC;gBAC9B,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC7C,CAAC;YAED,oCAAoC;YACpC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEhC,2CAA2C;YAC3C,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAExC,8BAA8B;YAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,eAAM,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;YAE3D,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,CAAC,CAAC;YAChE,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB;QAC9B,IAAI,CAAC;YACH,+CAA+C;YAC/C,sCAAsC;YACtC,eAAM,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;YAElE,8CAA8C;YAC9C,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,eAAM,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,eAAe,CAAC,MAAM,8BAA8B,CAAC,CAAC;QAEtF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAED;;OAEG;IACK,kBAAkB;QACxB,oCAAoC;QACpC,MAAM,YAAY,GAAqB;YACrC;gBACE,UAAU,EAAE,cAAc;gBAC1B,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;gBACjB,SAAS,EAAE,KAAK;gBAChB,QAAQ,EAAE,GAAG;gBACb,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,EAAE,aAAa;gBAC7D,aAAa,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,EAAE,aAAa;gBACjE,GAAG,EAAE,GAAG;gBACR,aAAa,EAAE,IAAI;gBACnB,aAAa,EAAE,EAAE;gBACjB,QAAQ,EAAE,0BAA0B;gBACpC,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,GAAG;gBACf,gBAAgB,EAAE;oBAChB,UAAU,EAAE,QAAQ;oBACpB,KAAK,EAAE,SAAS;oBAChB,SAAS,EAAE,EAAE;oBACb,MAAM,EAAE,OAAO;iBAChB;gBACD,OAAO,EAAE,KAAK;gBACd,cAAc,EAAE,MAAM;aACvB;YACD;gBACE,UAAU,EAAE,cAAc;gBAC1B,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,MAAM;gBAChB,UAAU,EAAE,IAAI;gBAChB,SAAS,EAAE,IAAI;gBACf,QAAQ,EAAE,GAAG;gBACb,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,EAAE,aAAa;gBAC7D,aAAa,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,CAAC,CAAC,EAAE,aAAa;gBACjE,GAAG,EAAE,CAAC,GAAG;gBACT,aAAa,EAAE,CAAC,KAAK;gBACrB,aAAa,EAAE,EAAE;gBACjB,QAAQ,EAAE,cAAc;gBACxB,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,GAAG;gBACf,gBAAgB,EAAE;oBAChB,UAAU,EAAE,MAAM;oBAClB,KAAK,EAAE,SAAS;oBAChB,SAAS,EAAE,CAAC,EAAE;oBACd,MAAM,EAAE,MAAM;iBACf;gBACD,OAAO,EAAE,MAAM;gBACf,cAAc,EAAE,SAAS;aAC1B;SACF,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;IACtC,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,0BAA0B;QACtC,MAAM,UAAU,GAAG,CAAC,0BAA0B,EAAE,cAAc,EAAE,YAAY,EAAE,uBAAuB,CAAC,CAAC;QAEvG,KAAK,MAAM,QAAQ,IAAI,UAAU,EAAE,CAAC;YAClC,MAAM,WAAW,GAAwB;gBACvC,YAAY,EAAE,QAAQ;gBACtB,WAAW,EAAE,CAAC;gBACd,OAAO,EAAE,CAAC;gBACV,MAAM,EAAE,CAAC;gBACT,gBAAgB,EAAE,CAAC;gBACnB,WAAW,EAAE,CAAC;gBACd,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,sBAAsB,EAAE,EAAE;gBAC1B,iBAAiB,EAAE;oBACjB,YAAY,EAAE,CAAC;oBACf,UAAU,EAAE,CAAC;oBACb,KAAK,EAAE,QAAQ;iBAChB;gBACD,WAAW,EAAE,IAAI,IAAI,EAAE;aACxB,CAAC;YAEF,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACtD,CAAC;QAED,eAAM,CAAC,IAAI,CAAC,+BAA+B,UAAU,CAAC,MAAM,aAAa,CAAC,CAAC;IAC7E,CAAC;IAED;;OAEG;IACK,kBAAkB;QACxB,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;YAC1C,IAAI,CAAC;gBACH,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACrC,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,eAAM,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAEhC,eAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,oBAAoB,CAAC,OAAuB;QACvD,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,iCAAiC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,QAAQ,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;YAExG,0BAA0B;YAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEnC,8BAA8B;YAC9B,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC1E,CAAC;YAED,8BAA8B;YAC9B,MAAM,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;YAE9C,6BAA6B;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;YAExD,oDAAoD;YACpD,IAAI,OAAO,CAAC,cAAc,KAAK,WAAW,IAAI,OAAO,CAAC,cAAc,KAAK,UAAU,EAAE,CAAC;gBACpF,MAAM,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;YAC/C,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAExC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YAC1D,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,yBAAyB,CAAC,OAAuB;QAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,CAAC,WAAW;YAAE,OAAO;QAEzB,uBAAuB;QACvB,WAAW,CAAC,WAAW,EAAE,CAAC;QAE1B,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;QACxC,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC;QACvC,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC;QAEnH,MAAM,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;QACrC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC;QAE3G,MAAM,mBAAmB,GAAG,WAAW,CAAC,gBAAgB,CAAC;QACzD,WAAW,CAAC,gBAAgB,GAAG,CAAC,CAAC,mBAAmB,GAAG,CAAC,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,WAAW,CAAC,WAAW,CAAC;QAEzI,WAAW,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAErC,eAAM,CAAC,IAAI,CAAC,8BAA8B,OAAO,CAAC,QAAQ,KAAK,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7G,CAAC;IAED;;OAEG;IACK,wBAAwB,CAAC,OAAuB;QACtD,IAAI,QAAgB,CAAC;QACrB,IAAI,aAAkD,CAAC;QAEvD,6DAA6D;QAC7D,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,EAAE,CAAC;YAC9B,IAAI,OAAO,CAAC,cAAc,KAAK,WAAW,EAAE,CAAC;gBAC3C,QAAQ,GAAG,GAAG,CAAC;gBACf,aAAa,GAAG,SAAS,CAAC;YAC5B,CAAC;iBAAM,IAAI,OAAO,CAAC,cAAc,KAAK,MAAM,EAAE,CAAC;gBAC7C,QAAQ,GAAG,GAAG,CAAC;gBACf,aAAa,GAAG,SAAS,CAAC;YAC5B,CAAC;iBAAM,CAAC;gBACN,QAAQ,GAAG,GAAG,CAAC;gBACf,aAAa,GAAG,SAAS,CAAC;YAC5B,CAAC;QACH,CAAC;aAAM,IAAI,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE,CAAC;YACtC,IAAI,OAAO,CAAC,cAAc,KAAK,UAAU,EAAE,CAAC;gBAC1C,QAAQ,GAAG,GAAG,CAAC;gBACf,aAAa,GAAG,WAAW,CAAC;YAC9B,CAAC;iBAAM,IAAI,OAAO,CAAC,cAAc,KAAK,MAAM,EAAE,CAAC;gBAC7C,QAAQ,GAAG,GAAG,CAAC;gBACf,aAAa,GAAG,WAAW,CAAC;YAC9B,CAAC;iBAAM,CAAC;gBACN,QAAQ,GAAG,GAAG,CAAC;gBACf,aAAa,GAAG,SAAS,CAAC;YAC5B,CAAC;QACH,CAAC;aAAM,CAAC,CAAC,YAAY;YACnB,QAAQ,GAAG,GAAG,CAAC;YACf,aAAa,GAAG,SAAS,CAAC;QAC5B,CAAC;QAED,OAAO;YACL,YAAY,EAAE,OAAO,CAAC,UAAU;YAChC,aAAa;YACb,QAAQ;YACR,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;YAC1C,SAAS,EAAE,OAAO,CAAC,aAAa,IAAI,IAAI,IAAI,EAAE;YAC9C,KAAK,EAAE,GAAG,OAAO,CAAC,QAAQ,qBAAqB,OAAO,CAAC,OAAO,SAAS,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU;SAClH,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,wBAAwB,CAAC,OAAuB;QAC5D,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,yCAAyC,OAAO,CAAC,cAAc,UAAU,CAAC,CAAC;YAEvF,qCAAqC;YACrC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;YAEjE,mCAAmC;YACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;YAExC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QAExD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACxD,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,2BAA2B,CAAC,OAAuB;QAC/D,MAAM,QAAQ,GAAsB,EAAE,CAAC;QAEvC,+BAA+B;QAC/B,IAAI,OAAO,CAAC,cAAc,KAAK,WAAW,EAAE,CAAC;YAC3C,QAAQ,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,UAAU;gBAChB,OAAO,EAAE,GAAG,OAAO,CAAC,QAAQ,6BAA6B,OAAO,CAAC,gBAAgB,CAAC,UAAU,gBAAgB,OAAO,CAAC,gBAAgB,CAAC,KAAK,mBAAmB;gBAC7J,UAAU,EAAE,EAAE;gBACd,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,0BAA0B,OAAO,CAAC,QAAQ,+BAA+B;gBACzF,cAAc,EAAE;oBACd,aAAa,EAAE,OAAO,CAAC,aAAa;oBACpC,UAAU,EAAE,OAAO,CAAC,UAAU;oBAC9B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;iBAC3C;gBACD,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC,CAAC;QACL,CAAC;aAAM,IAAI,OAAO,CAAC,cAAc,KAAK,UAAU,EAAE,CAAC;YACjD,QAAQ,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,UAAU;gBAChB,OAAO,EAAE,GAAG,OAAO,CAAC,QAAQ,wBAAwB,OAAO,CAAC,gBAAgB,CAAC,UAAU,gBAAgB,OAAO,CAAC,gBAAgB,CAAC,KAAK,mBAAmB;gBACxJ,UAAU,EAAE,EAAE;gBACd,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,wBAAwB,OAAO,CAAC,QAAQ,sDAAsD;gBAC9G,cAAc,EAAE;oBACd,aAAa,EAAE,OAAO,CAAC,aAAa;oBACpC,UAAU,EAAE,OAAO,CAAC,UAAU;oBAC9B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;iBAC3C;gBACD,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC,CAAC;QACL,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,qBAAqB;QACjC,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;YAExD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;gBAC5E,eAAM,CAAC,IAAI,CAAC,sCAAsC,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,oBAAoB,GAAG,CAAC,CAAC;gBAC/H,OAAO;YACT,CAAC;YAED,sCAAsC;YACtC,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;YAE1C,wBAAwB;YACxB,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAEtC,oBAAoB;YACpB,IAAI,CAAC,cAAc,EAAE,CAAC;YAEtB,eAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;YAE3C,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM;gBAC1C,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM;aACvC,CAAC,CAAC;QAEL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,4BAA4B;QACxC,KAAK,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YACnE,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC;YAEvF,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC;gBAAE,SAAS;YAE5C,sBAAsB;YACtB,MAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,MAAM,CAAC;YACtE,WAAW,CAAC,OAAO,GAAG,CAAC,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;YAE7D,WAAW,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC;YACnG,WAAW,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,GAAG,gBAAgB,CAAC,MAAM,CAAC;YAEvH,WAAW,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QACvC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,wBAAwB;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB;QAE3E,8BAA8B;QAC9B,MAAM,OAAO,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;QACvG,MAAM,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC;QAEtG,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBACzB,IAAI,EAAE,UAAU;gBAChB,OAAO,EAAE,qCAAqC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB;gBACxH,UAAU,EAAE,EAAE;gBACd,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,4EAA4E;gBAC5F,cAAc,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,CAAC,MAAM,EAAE;gBACrE,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC,CAAC;QACL,CAAC;aAAM,IAAI,OAAO,GAAG,EAAE,EAAE,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBACzB,IAAI,EAAE,UAAU;gBAChB,OAAO,EAAE,gCAAgC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,yCAAyC;gBACpG,UAAU,EAAE,EAAE;gBACd,MAAM,EAAE,MAAM;gBACd,cAAc,EAAE,gEAAgE;gBAChF,cAAc,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,CAAC,MAAM,EAAE;gBACrE,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;OAEG;IACK,cAAc;QACpB,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,UAAU;QACnD,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;QAEjD,wBAAwB;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,IAAI,UAAU,CAAC,CAAC;QAEjG,eAAM,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACI,sBAAsB,CAAC,YAAqB;QACjD,IAAI,YAAY,EAAE,CAAC;YACjB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC/D,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1C,CAAC;QAED,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACI,mBAAmB,CAAC,KAAc;QACvC,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1G,OAAO,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IACrD,CAAC;IAED;;OAEG;IACI,kBAAkB;QAOvB,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAClD,MAAM,cAAc,GAAG,aAAa,GAAG,CAAC,CAAC,CAAC;YACxC,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,MAAM,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3F,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,CACvD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,IAAI,MAAM,CAAC;QAC1F,MAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,CACzD,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,IAAI,MAAM,CAAC;QAE5F,OAAO;YACL,aAAa;YACb,cAAc;YACd,YAAY;YACZ,aAAa;YACb,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM;SAC1C,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,QAAQ;QACnB,IAAI,CAAC;YACH,eAAM,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;YAEpD,sBAAsB;YACtB,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;gBACvB,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC;YAED,aAAa;YACb,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;YACjC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAE3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAE3B,eAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC;QAEvD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,eAAM,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;YACjE,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CACF;AA7gBD,0CA6gBC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\ai\\adaptive-learner.ts"],
      sourcesContent: ["/**\r\n * =============================================================================\r\n * ADAPTIVE LEARNER - AI LEARNING AND OPTIMIZATION SYSTEM\r\n * =============================================================================\r\n * \r\n * This module implements adaptive learning and continuous optimization for\r\n * the AI trading system. It learns from trading outcomes, market conditions,\r\n * and performance feedback to continuously improve decision-making and\r\n * strategy parameters.\r\n * \r\n * Key Features:\r\n * - Performance feedback loops for strategy improvement\r\n * - Market condition adaptation mechanisms\r\n * - Strategy parameter optimization based on results\r\n * - Continuous learning from trading outcomes\r\n * - Model performance tracking and adjustment\r\n * - Automated hyperparameter tuning\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { LLMEngine } from './llm-engine';\r\nimport type { LearningFeedback } from './llm-engine';\r\n\r\n/**\r\n * Interface for trading outcome data\r\n */\r\ninterface TradingOutcome {\r\n  decisionId: string;\r\n  symbol: string;\r\n  decision: 'BUY' | 'SELL' | 'HOLD';\r\n  entryPrice: number;\r\n  exitPrice?: number;\r\n  quantity: number;\r\n  timestamp: Date;\r\n  exitTimestamp?: Date;\r\n  \r\n  // Performance metrics\r\n  pnl: number; // Profit/Loss in dollars\r\n  pnlPercentage: number; // Profit/Loss percentage\r\n  holdingPeriod: number; // Hours held\r\n  \r\n  // Strategy information\r\n  strategy: string;\r\n  confidence: number;\r\n  riskReward: number;\r\n  \r\n  // Market conditions at time of trade\r\n  marketConditions: {\r\n    volatility: string;\r\n    trend: string;\r\n    sentiment: number;\r\n    volume: number;\r\n  };\r\n  \r\n  // Outcome classification\r\n  outcome: 'WIN' | 'LOSS' | 'BREAKEVEN';\r\n  outcomeQuality: 'EXCELLENT' | 'GOOD' | 'AVERAGE' | 'POOR' | 'TERRIBLE';\r\n}\r\n\r\n/**\r\n * Interface for strategy performance metrics\r\n */\r\ninterface StrategyPerformance {\r\n  strategyName: string;\r\n  totalTrades: number;\r\n  winRate: number; // 0-100\r\n  avgPnL: number;\r\n  avgPnLPercentage: number;\r\n  maxDrawdown: number;\r\n  sharpeRatio: number;\r\n  profitFactor: number;\r\n  \r\n  // Performance by market conditions\r\n  performanceByCondition: {\r\n    [condition: string]: {\r\n      trades: number;\r\n      winRate: number;\r\n      avgPnL: number;\r\n    };\r\n  };\r\n  \r\n  // Recent performance trend\r\n  recentPerformance: {\r\n    last10Trades: number; // Win rate\r\n    last30Days: number; // Win rate\r\n    trend: 'IMPROVING' | 'DECLINING' | 'STABLE';\r\n  };\r\n  \r\n  lastUpdated: Date;\r\n}\r\n\r\n/**\r\n * Interface for learning insights\r\n */\r\ninterface LearningInsight {\r\n  type: 'STRATEGY' | 'PARAMETER' | 'MARKET_CONDITION' | 'RISK_MANAGEMENT' | 'TIMING';\r\n  insight: string;\r\n  confidence: number; // 0-100\r\n  impact: 'HIGH' | 'MEDIUM' | 'LOW';\r\n  recommendation: string;\r\n  supportingData: any;\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Adaptive Learner class for continuous system improvement\r\n */\r\nexport class AdaptiveLearner extends EventEmitter {\r\n  private llmEngine: LLMEngine;\r\n  private isInitialized: boolean = false;\r\n  private tradingOutcomes: TradingOutcome[] = [];\r\n  private strategyPerformance: Map<string, StrategyPerformance> = new Map();\r\n  private learningInsights: LearningInsight[] = [];\r\n  \r\n  private maxHistorySize: number = 10000;\r\n  private learningUpdateInterval: number = 3600000; // 1 hour\r\n  private learningTimer: NodeJS.Timeout | null = null;\r\n\r\n  // Learning configuration\r\n  private readonly LEARNING_CONFIG = {\r\n    minTradesForLearning: 50,\r\n    minTradesForOptimization: 100,\r\n    confidenceThreshold: 70,\r\n    significanceThreshold: 0.05, // Statistical significance\r\n    adaptationThreshold: 5, // Minimum % improvement to adapt\r\n    maxParameterChange: 0.2, // Maximum 20% parameter change per iteration\r\n    learningRate: 0.1, // Learning rate for parameter updates\r\n    explorationRate: 0.1 // Exploration vs exploitation balance\r\n  };\r\n\r\n  constructor(llmEngine: LLMEngine) {\r\n    super();\r\n    this.llmEngine = llmEngine;\r\n\r\n    logger.info('\uD83E\uDDE0 Adaptive Learner initialized');\r\n  }\r\n\r\n  /**\r\n   * Initialize the adaptive learner\r\n   */\r\n  public async initialize(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDE80 Initializing Adaptive Learner...');\r\n\r\n      // Verify LLM engine is ready\r\n      if (!this.llmEngine.isReady()) {\r\n        throw new Error('LLM Engine is not ready');\r\n      }\r\n\r\n      // Load historical data if available\r\n      await this.loadHistoricalData();\r\n\r\n      // Initialize strategy performance tracking\r\n      await this.initializeStrategyTracking();\r\n\r\n      // Start learning update cycle\r\n      this.startLearningCycle();\r\n\r\n      this.isInitialized = true;\r\n      logger.info('\u2705 Adaptive Learner initialized successfully');\r\n\r\n      this.emit('initialized');\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Failed to initialize Adaptive Learner:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load historical trading data for learning\r\n   */\r\n  private async loadHistoricalData(): Promise<void> {\r\n    try {\r\n      // In production, this would load from database\r\n      // For now, initialize with empty data\r\n      logger.info('\uD83D\uDCDA Loading historical trading data for learning...');\r\n      \r\n      // Mock some historical data for demonstration\r\n      this.initializeMockData();\r\n      \r\n      logger.info(`\uD83D\uDCCA Loaded ${this.tradingOutcomes.length} historical trading outcomes`);\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error loading historical data:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize mock data for demonstration\r\n   */\r\n  private initializeMockData(): void {\r\n    // Create some mock trading outcomes\r\n    const mockOutcomes: TradingOutcome[] = [\r\n      {\r\n        decisionId: 'DEC_12345678',\r\n        symbol: 'BTC',\r\n        decision: 'BUY',\r\n        entryPrice: 45000,\r\n        exitPrice: 46500,\r\n        quantity: 0.1,\r\n        timestamp: new Date(Date.now() - 86400000 * 7), // 7 days ago\r\n        exitTimestamp: new Date(Date.now() - 86400000 * 6), // 6 days ago\r\n        pnl: 150,\r\n        pnlPercentage: 3.33,\r\n        holdingPeriod: 24,\r\n        strategy: 'moving_average_crossover',\r\n        confidence: 75,\r\n        riskReward: 1.5,\r\n        marketConditions: {\r\n          volatility: 'MEDIUM',\r\n          trend: 'BULLISH',\r\n          sentiment: 35,\r\n          volume: 1500000\r\n        },\r\n        outcome: 'WIN',\r\n        outcomeQuality: 'GOOD'\r\n      },\r\n      {\r\n        decisionId: 'DEC_87654321',\r\n        symbol: 'ETH',\r\n        decision: 'SELL',\r\n        entryPrice: 3200,\r\n        exitPrice: 3100,\r\n        quantity: 1.0,\r\n        timestamp: new Date(Date.now() - 86400000 * 5), // 5 days ago\r\n        exitTimestamp: new Date(Date.now() - 86400000 * 4), // 4 days ago\r\n        pnl: -100,\r\n        pnlPercentage: -3.125,\r\n        holdingPeriod: 18,\r\n        strategy: 'rsi_momentum',\r\n        confidence: 68,\r\n        riskReward: 1.3,\r\n        marketConditions: {\r\n          volatility: 'HIGH',\r\n          trend: 'BEARISH',\r\n          sentiment: -25,\r\n          volume: 800000\r\n        },\r\n        outcome: 'LOSS',\r\n        outcomeQuality: 'AVERAGE'\r\n      }\r\n    ];\r\n\r\n    this.tradingOutcomes = mockOutcomes;\r\n  }\r\n\r\n  /**\r\n   * Initialize strategy performance tracking\r\n   */\r\n  private async initializeStrategyTracking(): Promise<void> {\r\n    const strategies = ['moving_average_crossover', 'rsi_momentum', 'macd_trend', 'fibonacci_retracement'];\r\n    \r\n    for (const strategy of strategies) {\r\n      const performance: StrategyPerformance = {\r\n        strategyName: strategy,\r\n        totalTrades: 0,\r\n        winRate: 0,\r\n        avgPnL: 0,\r\n        avgPnLPercentage: 0,\r\n        maxDrawdown: 0,\r\n        sharpeRatio: 0,\r\n        profitFactor: 0,\r\n        performanceByCondition: {},\r\n        recentPerformance: {\r\n          last10Trades: 0,\r\n          last30Days: 0,\r\n          trend: 'STABLE'\r\n        },\r\n        lastUpdated: new Date()\r\n      };\r\n      \r\n      this.strategyPerformance.set(strategy, performance);\r\n    }\r\n\r\n    logger.info(`\uD83D\uDCC8 Initialized tracking for ${strategies.length} strategies`);\r\n  }\r\n\r\n  /**\r\n   * Start the learning cycle\r\n   */\r\n  private startLearningCycle(): void {\r\n    this.learningTimer = setInterval(async () => {\r\n      try {\r\n        await this.performLearningUpdate();\r\n      } catch (error) {\r\n        logger.error('\u274C Error in learning cycle:', error);\r\n      }\r\n    }, this.learningUpdateInterval);\r\n\r\n    logger.info('\uD83D\uDD04 Learning cycle started');\r\n  }\r\n\r\n  /**\r\n   * Record a trading outcome for learning\r\n   */\r\n  public async recordTradingOutcome(outcome: TradingOutcome): Promise<void> {\r\n    try {\r\n      logger.info(`\uD83D\uDCDD Recording trading outcome: ${outcome.symbol} ${outcome.decision} - ${outcome.outcome}`);\r\n\r\n      // Add to outcomes history\r\n      this.tradingOutcomes.push(outcome);\r\n      \r\n      // Maintain history size limit\r\n      if (this.tradingOutcomes.length > this.maxHistorySize) {\r\n        this.tradingOutcomes = this.tradingOutcomes.slice(-this.maxHistorySize);\r\n      }\r\n\r\n      // Update strategy performance\r\n      await this.updateStrategyPerformance(outcome);\r\n\r\n      // Generate learning feedback\r\n      const feedback = this.generateLearningFeedback(outcome);\r\n      \r\n      // Trigger immediate learning if significant outcome\r\n      if (outcome.outcomeQuality === 'EXCELLENT' || outcome.outcomeQuality === 'TERRIBLE') {\r\n        await this.performImmediateLearning(outcome);\r\n      }\r\n\r\n      this.emit('outcomeRecorded', outcome);\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error recording trading outcome:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update strategy performance metrics\r\n   */\r\n  private async updateStrategyPerformance(outcome: TradingOutcome): Promise<void> {\r\n    const performance = this.strategyPerformance.get(outcome.strategy);\r\n    if (!performance) return;\r\n\r\n    // Update basic metrics\r\n    performance.totalTrades++;\r\n    \r\n    const isWin = outcome.outcome === 'WIN';\r\n    const oldWinRate = performance.winRate;\r\n    performance.winRate = ((oldWinRate * (performance.totalTrades - 1)) + (isWin ? 100 : 0)) / performance.totalTrades;\r\n    \r\n    const oldAvgPnL = performance.avgPnL;\r\n    performance.avgPnL = ((oldAvgPnL * (performance.totalTrades - 1)) + outcome.pnl) / performance.totalTrades;\r\n    \r\n    const oldAvgPnLPercentage = performance.avgPnLPercentage;\r\n    performance.avgPnLPercentage = ((oldAvgPnLPercentage * (performance.totalTrades - 1)) + outcome.pnlPercentage) / performance.totalTrades;\r\n\r\n    performance.lastUpdated = new Date();\r\n\r\n    logger.info(`\uD83D\uDCCA Updated performance for ${outcome.strategy}: ${performance.winRate.toFixed(1)}% win rate`);\r\n  }\r\n\r\n  /**\r\n   * Generate learning feedback from outcome\r\n   */\r\n  private generateLearningFeedback(outcome: TradingOutcome): LearningFeedback {\r\n    let accuracy: number;\r\n    let actualOutcome: 'CORRECT' | 'INCORRECT' | 'PARTIAL';\r\n\r\n    // Determine accuracy based on outcome quality and confidence\r\n    if (outcome.outcome === 'WIN') {\r\n      if (outcome.outcomeQuality === 'EXCELLENT') {\r\n        accuracy = 1.0;\r\n        actualOutcome = 'CORRECT';\r\n      } else if (outcome.outcomeQuality === 'GOOD') {\r\n        accuracy = 0.8;\r\n        actualOutcome = 'CORRECT';\r\n      } else {\r\n        accuracy = 0.6;\r\n        actualOutcome = 'PARTIAL';\r\n      }\r\n    } else if (outcome.outcome === 'LOSS') {\r\n      if (outcome.outcomeQuality === 'TERRIBLE') {\r\n        accuracy = 0.0;\r\n        actualOutcome = 'INCORRECT';\r\n      } else if (outcome.outcomeQuality === 'POOR') {\r\n        accuracy = 0.2;\r\n        actualOutcome = 'INCORRECT';\r\n      } else {\r\n        accuracy = 0.4;\r\n        actualOutcome = 'PARTIAL';\r\n      }\r\n    } else { // BREAKEVEN\r\n      accuracy = 0.5;\r\n      actualOutcome = 'PARTIAL';\r\n    }\r\n\r\n    return {\r\n      predictionId: outcome.decisionId,\r\n      actualOutcome,\r\n      accuracy,\r\n      marketConditions: outcome.marketConditions,\r\n      timestamp: outcome.exitTimestamp || new Date(),\r\n      notes: `${outcome.strategy} strategy result: ${outcome.outcome} with ${outcome.pnlPercentage.toFixed(2)}% return`\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Perform immediate learning from significant outcomes\r\n   */\r\n  private async performImmediateLearning(outcome: TradingOutcome): Promise<void> {\r\n    try {\r\n      logger.info(`\uD83E\uDDE0 Performing immediate learning from ${outcome.outcomeQuality} outcome`);\r\n\r\n      // Generate insights from the outcome\r\n      const insights = await this.generateInsightsFromOutcome(outcome);\r\n      \r\n      // Add insights to learning history\r\n      this.learningInsights.push(...insights);\r\n\r\n      this.emit('immediateLearning', { outcome, insights });\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error in immediate learning:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate insights from trading outcome\r\n   */\r\n  private async generateInsightsFromOutcome(outcome: TradingOutcome): Promise<LearningInsight[]> {\r\n    const insights: LearningInsight[] = [];\r\n\r\n    // Strategy performance insight\r\n    if (outcome.outcomeQuality === 'EXCELLENT') {\r\n      insights.push({\r\n        type: 'STRATEGY',\r\n        insight: `${outcome.strategy} performed excellently in ${outcome.marketConditions.volatility} volatility, ${outcome.marketConditions.trend} trend conditions`,\r\n        confidence: 85,\r\n        impact: 'HIGH',\r\n        recommendation: `Increase allocation to ${outcome.strategy} in similar market conditions`,\r\n        supportingData: {\r\n          pnlPercentage: outcome.pnlPercentage,\r\n          confidence: outcome.confidence,\r\n          marketConditions: outcome.marketConditions\r\n        },\r\n        timestamp: new Date()\r\n      });\r\n    } else if (outcome.outcomeQuality === 'TERRIBLE') {\r\n      insights.push({\r\n        type: 'STRATEGY',\r\n        insight: `${outcome.strategy} performed poorly in ${outcome.marketConditions.volatility} volatility, ${outcome.marketConditions.trend} trend conditions`,\r\n        confidence: 80,\r\n        impact: 'HIGH',\r\n        recommendation: `Reduce allocation to ${outcome.strategy} in similar market conditions or optimize parameters`,\r\n        supportingData: {\r\n          pnlPercentage: outcome.pnlPercentage,\r\n          confidence: outcome.confidence,\r\n          marketConditions: outcome.marketConditions\r\n        },\r\n        timestamp: new Date()\r\n      });\r\n    }\r\n\r\n    return insights;\r\n  }\r\n\r\n  /**\r\n   * Perform regular learning update\r\n   */\r\n  private async performLearningUpdate(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDD04 Performing regular learning update...');\r\n\r\n      if (this.tradingOutcomes.length < this.LEARNING_CONFIG.minTradesForLearning) {\r\n        logger.info(`\uD83D\uDCCA Insufficient data for learning (${this.tradingOutcomes.length}/${this.LEARNING_CONFIG.minTradesForLearning})`);\r\n        return;\r\n      }\r\n\r\n      // Update strategy performance metrics\r\n      await this.updateAllStrategyPerformance();\r\n\r\n      // Generate new insights\r\n      await this.generatePeriodicInsights();\r\n\r\n      // Clean up old data\r\n      this.cleanupOldData();\r\n\r\n      logger.info('\u2705 Learning update completed');\r\n\r\n      this.emit('learningUpdate', {\r\n        totalOutcomes: this.tradingOutcomes.length,\r\n        insights: this.learningInsights.length\r\n      });\r\n\r\n    } catch (error) {\r\n      logger.error('\u274C Error in learning update:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update all strategy performance metrics\r\n   */\r\n  private async updateAllStrategyPerformance(): Promise<void> {\r\n    for (const [strategyName, performance] of this.strategyPerformance) {\r\n      const strategyOutcomes = this.tradingOutcomes.filter(o => o.strategy === strategyName);\r\n      \r\n      if (strategyOutcomes.length === 0) continue;\r\n\r\n      // Recalculate metrics\r\n      const wins = strategyOutcomes.filter(o => o.outcome === 'WIN').length;\r\n      performance.winRate = (wins / strategyOutcomes.length) * 100;\r\n      \r\n      performance.avgPnL = strategyOutcomes.reduce((sum, o) => sum + o.pnl, 0) / strategyOutcomes.length;\r\n      performance.avgPnLPercentage = strategyOutcomes.reduce((sum, o) => sum + o.pnlPercentage, 0) / strategyOutcomes.length;\r\n      \r\n      performance.lastUpdated = new Date();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate periodic insights\r\n   */\r\n  private async generatePeriodicInsights(): Promise<void> {\r\n    const recentOutcomes = this.tradingOutcomes.slice(-100); // Last 100 trades\r\n    \r\n    // Overall performance insight\r\n    const winRate = (recentOutcomes.filter(o => o.outcome === 'WIN').length / recentOutcomes.length) * 100;\r\n    const avgReturn = recentOutcomes.reduce((sum, o) => sum + o.pnlPercentage, 0) / recentOutcomes.length;\r\n    \r\n    if (winRate > 70) {\r\n      this.learningInsights.push({\r\n        type: 'STRATEGY',\r\n        insight: `Excellent recent performance with ${winRate.toFixed(1)}% win rate and ${avgReturn.toFixed(2)}% average return`,\r\n        confidence: 90,\r\n        impact: 'HIGH',\r\n        recommendation: 'Continue current strategy mix with potential for increased position sizing',\r\n        supportingData: { winRate, avgReturn, trades: recentOutcomes.length },\r\n        timestamp: new Date()\r\n      });\r\n    } else if (winRate < 50) {\r\n      this.learningInsights.push({\r\n        type: 'STRATEGY',\r\n        insight: `Poor recent performance with ${winRate.toFixed(1)}% win rate requires immediate attention`,\r\n        confidence: 95,\r\n        impact: 'HIGH',\r\n        recommendation: 'Review and adjust strategy parameters or reduce position sizes',\r\n        supportingData: { winRate, avgReturn, trades: recentOutcomes.length },\r\n        timestamp: new Date()\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up old data\r\n   */\r\n  private cleanupOldData(): void {\r\n    const maxAge = 90 * 24 * 60 * 60 * 1000; // 90 days\r\n    const cutoffDate = new Date(Date.now() - maxAge);\r\n    \r\n    // Clean up old insights\r\n    this.learningInsights = this.learningInsights.filter(insight => insight.timestamp >= cutoffDate);\r\n    \r\n    logger.info('\uD83E\uDDF9 Cleaned up old learning data');\r\n  }\r\n\r\n  /**\r\n   * Get strategy performance\r\n   */\r\n  public getStrategyPerformance(strategyName?: string): StrategyPerformance[] {\r\n    if (strategyName) {\r\n      const performance = this.strategyPerformance.get(strategyName);\r\n      return performance ? [performance] : [];\r\n    }\r\n    \r\n    return Array.from(this.strategyPerformance.values());\r\n  }\r\n\r\n  /**\r\n   * Get learning insights\r\n   */\r\n  public getLearningInsights(limit?: number): LearningInsight[] {\r\n    const insights = [...this.learningInsights].sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n    return limit ? insights.slice(0, limit) : insights;\r\n  }\r\n\r\n  /**\r\n   * Get learning summary\r\n   */\r\n  public getLearningSummary(): {\r\n    totalOutcomes: number;\r\n    overallWinRate: number;\r\n    bestStrategy: string;\r\n    worstStrategy: string;\r\n    keyInsights: number;\r\n  } {\r\n    const totalOutcomes = this.tradingOutcomes.length;\r\n    const overallWinRate = totalOutcomes > 0 ? \r\n      (this.tradingOutcomes.filter(o => o.outcome === 'WIN').length / totalOutcomes) * 100 : 0;\r\n    \r\n    const strategies = Array.from(this.strategyPerformance.values());\r\n    const bestStrategy = strategies.reduce((best, current) => \r\n      current.winRate > best.winRate ? current : best, strategies[0])?.strategyName || 'None';\r\n    const worstStrategy = strategies.reduce((worst, current) => \r\n      current.winRate < worst.winRate ? current : worst, strategies[0])?.strategyName || 'None';\r\n    \r\n    return {\r\n      totalOutcomes,\r\n      overallWinRate,\r\n      bestStrategy,\r\n      worstStrategy,\r\n      keyInsights: this.learningInsights.length\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Shutdown the adaptive learner\r\n   */\r\n  public async shutdown(): Promise<void> {\r\n    try {\r\n      logger.info('\uD83D\uDED1 Shutting down Adaptive Learner...');\r\n      \r\n      // Stop learning cycle\r\n      if (this.learningTimer) {\r\n        clearInterval(this.learningTimer);\r\n        this.learningTimer = null;\r\n      }\r\n      \r\n      // Clear data\r\n      this.tradingOutcomes = [];\r\n      this.strategyPerformance.clear();\r\n      this.learningInsights = [];\r\n      \r\n      this.isInitialized = false;\r\n      \r\n      logger.info('\u2705 Adaptive Learner shutdown completed');\r\n      \r\n    } catch (error) {\r\n      logger.error('\u274C Error during Adaptive Learner shutdown:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Export types\r\nexport type {\r\n  TradingOutcome,\r\n  StrategyPerformance,\r\n  LearningInsight\r\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a3937b5a1baa16f57e6e77cb95597c622c8fe65"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_n7stll51c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_n7stll51c();
cov_n7stll51c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_n7stll51c().s[1]++;
exports.AdaptiveLearner = void 0;
const events_1 =
/* istanbul ignore next */
(cov_n7stll51c().s[2]++, require("events"));
const logger_1 =
/* istanbul ignore next */
(cov_n7stll51c().s[3]++, require("@/core/logging/logger"));
/**
 * Adaptive Learner class for continuous system improvement
 */
class AdaptiveLearner extends
/* istanbul ignore next */
(events_1.EventEmitter) {
  llmEngine;
  isInitialized =
  /* istanbul ignore next */
  (cov_n7stll51c().s[4]++, false);
  tradingOutcomes =
  /* istanbul ignore next */
  (cov_n7stll51c().s[5]++, []);
  strategyPerformance =
  /* istanbul ignore next */
  (cov_n7stll51c().s[6]++, new Map());
  learningInsights =
  /* istanbul ignore next */
  (cov_n7stll51c().s[7]++, []);
  maxHistorySize =
  /* istanbul ignore next */
  (cov_n7stll51c().s[8]++, 10000);
  learningUpdateInterval =
  /* istanbul ignore next */
  (cov_n7stll51c().s[9]++, 3600000); // 1 hour
  learningTimer =
  /* istanbul ignore next */
  (cov_n7stll51c().s[10]++, null);
  // Learning configuration
  LEARNING_CONFIG =
  /* istanbul ignore next */
  (cov_n7stll51c().s[11]++, {
    minTradesForLearning: 50,
    minTradesForOptimization: 100,
    confidenceThreshold: 70,
    significanceThreshold: 0.05,
    // Statistical significance
    adaptationThreshold: 5,
    // Minimum % improvement to adapt
    maxParameterChange: 0.2,
    // Maximum 20% parameter change per iteration
    learningRate: 0.1,
    // Learning rate for parameter updates
    explorationRate: 0.1 // Exploration vs exploitation balance
  });
  constructor(llmEngine) {
    /* istanbul ignore next */
    cov_n7stll51c().f[0]++;
    cov_n7stll51c().s[12]++;
    super();
    /* istanbul ignore next */
    cov_n7stll51c().s[13]++;
    this.llmEngine = llmEngine;
    /* istanbul ignore next */
    cov_n7stll51c().s[14]++;
    logger_1.logger.info('🧠 Adaptive Learner initialized');
  }
  /**
   * Initialize the adaptive learner
   */
  async initialize() {
    /* istanbul ignore next */
    cov_n7stll51c().f[1]++;
    cov_n7stll51c().s[15]++;
    try {
      /* istanbul ignore next */
      cov_n7stll51c().s[16]++;
      logger_1.logger.info('🚀 Initializing Adaptive Learner...');
      // Verify LLM engine is ready
      /* istanbul ignore next */
      cov_n7stll51c().s[17]++;
      if (!this.llmEngine.isReady()) {
        /* istanbul ignore next */
        cov_n7stll51c().b[0][0]++;
        cov_n7stll51c().s[18]++;
        throw new Error('LLM Engine is not ready');
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[0][1]++;
      }
      // Load historical data if available
      cov_n7stll51c().s[19]++;
      await this.loadHistoricalData();
      // Initialize strategy performance tracking
      /* istanbul ignore next */
      cov_n7stll51c().s[20]++;
      await this.initializeStrategyTracking();
      // Start learning update cycle
      /* istanbul ignore next */
      cov_n7stll51c().s[21]++;
      this.startLearningCycle();
      /* istanbul ignore next */
      cov_n7stll51c().s[22]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_n7stll51c().s[23]++;
      logger_1.logger.info('✅ Adaptive Learner initialized successfully');
      /* istanbul ignore next */
      cov_n7stll51c().s[24]++;
      this.emit('initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_n7stll51c().s[25]++;
      logger_1.logger.error('❌ Failed to initialize Adaptive Learner:', error);
      /* istanbul ignore next */
      cov_n7stll51c().s[26]++;
      throw error;
    }
  }
  /**
   * Load historical trading data for learning
   */
  async loadHistoricalData() {
    /* istanbul ignore next */
    cov_n7stll51c().f[2]++;
    cov_n7stll51c().s[27]++;
    try {
      /* istanbul ignore next */
      cov_n7stll51c().s[28]++;
      // In production, this would load from database
      // For now, initialize with empty data
      logger_1.logger.info('📚 Loading historical trading data for learning...');
      // Mock some historical data for demonstration
      /* istanbul ignore next */
      cov_n7stll51c().s[29]++;
      this.initializeMockData();
      /* istanbul ignore next */
      cov_n7stll51c().s[30]++;
      logger_1.logger.info(`📊 Loaded ${this.tradingOutcomes.length} historical trading outcomes`);
    } catch (error) {
      /* istanbul ignore next */
      cov_n7stll51c().s[31]++;
      logger_1.logger.error('❌ Error loading historical data:', error);
    }
  }
  /**
   * Initialize mock data for demonstration
   */
  initializeMockData() {
    /* istanbul ignore next */
    cov_n7stll51c().f[3]++;
    // Create some mock trading outcomes
    const mockOutcomes =
    /* istanbul ignore next */
    (cov_n7stll51c().s[32]++, [{
      decisionId: 'DEC_12345678',
      symbol: 'BTC',
      decision: 'BUY',
      entryPrice: 45000,
      exitPrice: 46500,
      quantity: 0.1,
      timestamp: new Date(Date.now() - 86400000 * 7),
      // 7 days ago
      exitTimestamp: new Date(Date.now() - 86400000 * 6),
      // 6 days ago
      pnl: 150,
      pnlPercentage: 3.33,
      holdingPeriod: 24,
      strategy: 'moving_average_crossover',
      confidence: 75,
      riskReward: 1.5,
      marketConditions: {
        volatility: 'MEDIUM',
        trend: 'BULLISH',
        sentiment: 35,
        volume: 1500000
      },
      outcome: 'WIN',
      outcomeQuality: 'GOOD'
    }, {
      decisionId: 'DEC_87654321',
      symbol: 'ETH',
      decision: 'SELL',
      entryPrice: 3200,
      exitPrice: 3100,
      quantity: 1.0,
      timestamp: new Date(Date.now() - 86400000 * 5),
      // 5 days ago
      exitTimestamp: new Date(Date.now() - 86400000 * 4),
      // 4 days ago
      pnl: -100,
      pnlPercentage: -3.125,
      holdingPeriod: 18,
      strategy: 'rsi_momentum',
      confidence: 68,
      riskReward: 1.3,
      marketConditions: {
        volatility: 'HIGH',
        trend: 'BEARISH',
        sentiment: -25,
        volume: 800000
      },
      outcome: 'LOSS',
      outcomeQuality: 'AVERAGE'
    }]);
    /* istanbul ignore next */
    cov_n7stll51c().s[33]++;
    this.tradingOutcomes = mockOutcomes;
  }
  /**
   * Initialize strategy performance tracking
   */
  async initializeStrategyTracking() {
    /* istanbul ignore next */
    cov_n7stll51c().f[4]++;
    const strategies =
    /* istanbul ignore next */
    (cov_n7stll51c().s[34]++, ['moving_average_crossover', 'rsi_momentum', 'macd_trend', 'fibonacci_retracement']);
    /* istanbul ignore next */
    cov_n7stll51c().s[35]++;
    for (const strategy of strategies) {
      const performance =
      /* istanbul ignore next */
      (cov_n7stll51c().s[36]++, {
        strategyName: strategy,
        totalTrades: 0,
        winRate: 0,
        avgPnL: 0,
        avgPnLPercentage: 0,
        maxDrawdown: 0,
        sharpeRatio: 0,
        profitFactor: 0,
        performanceByCondition: {},
        recentPerformance: {
          last10Trades: 0,
          last30Days: 0,
          trend: 'STABLE'
        },
        lastUpdated: new Date()
      });
      /* istanbul ignore next */
      cov_n7stll51c().s[37]++;
      this.strategyPerformance.set(strategy, performance);
    }
    /* istanbul ignore next */
    cov_n7stll51c().s[38]++;
    logger_1.logger.info(`📈 Initialized tracking for ${strategies.length} strategies`);
  }
  /**
   * Start the learning cycle
   */
  startLearningCycle() {
    /* istanbul ignore next */
    cov_n7stll51c().f[5]++;
    cov_n7stll51c().s[39]++;
    this.learningTimer = setInterval(async () => {
      /* istanbul ignore next */
      cov_n7stll51c().f[6]++;
      cov_n7stll51c().s[40]++;
      try {
        /* istanbul ignore next */
        cov_n7stll51c().s[41]++;
        await this.performLearningUpdate();
      } catch (error) {
        /* istanbul ignore next */
        cov_n7stll51c().s[42]++;
        logger_1.logger.error('❌ Error in learning cycle:', error);
      }
    }, this.learningUpdateInterval);
    /* istanbul ignore next */
    cov_n7stll51c().s[43]++;
    logger_1.logger.info('🔄 Learning cycle started');
  }
  /**
   * Record a trading outcome for learning
   */
  async recordTradingOutcome(outcome) {
    /* istanbul ignore next */
    cov_n7stll51c().f[7]++;
    cov_n7stll51c().s[44]++;
    try {
      /* istanbul ignore next */
      cov_n7stll51c().s[45]++;
      logger_1.logger.info(`📝 Recording trading outcome: ${outcome.symbol} ${outcome.decision} - ${outcome.outcome}`);
      // Add to outcomes history
      /* istanbul ignore next */
      cov_n7stll51c().s[46]++;
      this.tradingOutcomes.push(outcome);
      // Maintain history size limit
      /* istanbul ignore next */
      cov_n7stll51c().s[47]++;
      if (this.tradingOutcomes.length > this.maxHistorySize) {
        /* istanbul ignore next */
        cov_n7stll51c().b[1][0]++;
        cov_n7stll51c().s[48]++;
        this.tradingOutcomes = this.tradingOutcomes.slice(-this.maxHistorySize);
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[1][1]++;
      }
      // Update strategy performance
      cov_n7stll51c().s[49]++;
      await this.updateStrategyPerformance(outcome);
      // Generate learning feedback
      const feedback =
      /* istanbul ignore next */
      (cov_n7stll51c().s[50]++, this.generateLearningFeedback(outcome));
      // Trigger immediate learning if significant outcome
      /* istanbul ignore next */
      cov_n7stll51c().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_n7stll51c().b[3][0]++, outcome.outcomeQuality === 'EXCELLENT') ||
      /* istanbul ignore next */
      (cov_n7stll51c().b[3][1]++, outcome.outcomeQuality === 'TERRIBLE')) {
        /* istanbul ignore next */
        cov_n7stll51c().b[2][0]++;
        cov_n7stll51c().s[52]++;
        await this.performImmediateLearning(outcome);
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[2][1]++;
      }
      cov_n7stll51c().s[53]++;
      this.emit('outcomeRecorded', outcome);
    } catch (error) {
      /* istanbul ignore next */
      cov_n7stll51c().s[54]++;
      logger_1.logger.error('❌ Error recording trading outcome:', error);
      /* istanbul ignore next */
      cov_n7stll51c().s[55]++;
      throw error;
    }
  }
  /**
   * Update strategy performance metrics
   */
  async updateStrategyPerformance(outcome) {
    /* istanbul ignore next */
    cov_n7stll51c().f[8]++;
    const performance =
    /* istanbul ignore next */
    (cov_n7stll51c().s[56]++, this.strategyPerformance.get(outcome.strategy));
    /* istanbul ignore next */
    cov_n7stll51c().s[57]++;
    if (!performance) {
      /* istanbul ignore next */
      cov_n7stll51c().b[4][0]++;
      cov_n7stll51c().s[58]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_n7stll51c().b[4][1]++;
    }
    // Update basic metrics
    cov_n7stll51c().s[59]++;
    performance.totalTrades++;
    const isWin =
    /* istanbul ignore next */
    (cov_n7stll51c().s[60]++, outcome.outcome === 'WIN');
    const oldWinRate =
    /* istanbul ignore next */
    (cov_n7stll51c().s[61]++, performance.winRate);
    /* istanbul ignore next */
    cov_n7stll51c().s[62]++;
    performance.winRate = (oldWinRate * (performance.totalTrades - 1) + (isWin ?
    /* istanbul ignore next */
    (cov_n7stll51c().b[5][0]++, 100) :
    /* istanbul ignore next */
    (cov_n7stll51c().b[5][1]++, 0))) / performance.totalTrades;
    const oldAvgPnL =
    /* istanbul ignore next */
    (cov_n7stll51c().s[63]++, performance.avgPnL);
    /* istanbul ignore next */
    cov_n7stll51c().s[64]++;
    performance.avgPnL = (oldAvgPnL * (performance.totalTrades - 1) + outcome.pnl) / performance.totalTrades;
    const oldAvgPnLPercentage =
    /* istanbul ignore next */
    (cov_n7stll51c().s[65]++, performance.avgPnLPercentage);
    /* istanbul ignore next */
    cov_n7stll51c().s[66]++;
    performance.avgPnLPercentage = (oldAvgPnLPercentage * (performance.totalTrades - 1) + outcome.pnlPercentage) / performance.totalTrades;
    /* istanbul ignore next */
    cov_n7stll51c().s[67]++;
    performance.lastUpdated = new Date();
    /* istanbul ignore next */
    cov_n7stll51c().s[68]++;
    logger_1.logger.info(`📊 Updated performance for ${outcome.strategy}: ${performance.winRate.toFixed(1)}% win rate`);
  }
  /**
   * Generate learning feedback from outcome
   */
  generateLearningFeedback(outcome) {
    /* istanbul ignore next */
    cov_n7stll51c().f[9]++;
    let accuracy;
    let actualOutcome;
    // Determine accuracy based on outcome quality and confidence
    /* istanbul ignore next */
    cov_n7stll51c().s[69]++;
    if (outcome.outcome === 'WIN') {
      /* istanbul ignore next */
      cov_n7stll51c().b[6][0]++;
      cov_n7stll51c().s[70]++;
      if (outcome.outcomeQuality === 'EXCELLENT') {
        /* istanbul ignore next */
        cov_n7stll51c().b[7][0]++;
        cov_n7stll51c().s[71]++;
        accuracy = 1.0;
        /* istanbul ignore next */
        cov_n7stll51c().s[72]++;
        actualOutcome = 'CORRECT';
      } else {
        /* istanbul ignore next */
        cov_n7stll51c().b[7][1]++;
        cov_n7stll51c().s[73]++;
        if (outcome.outcomeQuality === 'GOOD') {
          /* istanbul ignore next */
          cov_n7stll51c().b[8][0]++;
          cov_n7stll51c().s[74]++;
          accuracy = 0.8;
          /* istanbul ignore next */
          cov_n7stll51c().s[75]++;
          actualOutcome = 'CORRECT';
        } else {
          /* istanbul ignore next */
          cov_n7stll51c().b[8][1]++;
          cov_n7stll51c().s[76]++;
          accuracy = 0.6;
          /* istanbul ignore next */
          cov_n7stll51c().s[77]++;
          actualOutcome = 'PARTIAL';
        }
      }
    } else {
      /* istanbul ignore next */
      cov_n7stll51c().b[6][1]++;
      cov_n7stll51c().s[78]++;
      if (outcome.outcome === 'LOSS') {
        /* istanbul ignore next */
        cov_n7stll51c().b[9][0]++;
        cov_n7stll51c().s[79]++;
        if (outcome.outcomeQuality === 'TERRIBLE') {
          /* istanbul ignore next */
          cov_n7stll51c().b[10][0]++;
          cov_n7stll51c().s[80]++;
          accuracy = 0.0;
          /* istanbul ignore next */
          cov_n7stll51c().s[81]++;
          actualOutcome = 'INCORRECT';
        } else {
          /* istanbul ignore next */
          cov_n7stll51c().b[10][1]++;
          cov_n7stll51c().s[82]++;
          if (outcome.outcomeQuality === 'POOR') {
            /* istanbul ignore next */
            cov_n7stll51c().b[11][0]++;
            cov_n7stll51c().s[83]++;
            accuracy = 0.2;
            /* istanbul ignore next */
            cov_n7stll51c().s[84]++;
            actualOutcome = 'INCORRECT';
          } else {
            /* istanbul ignore next */
            cov_n7stll51c().b[11][1]++;
            cov_n7stll51c().s[85]++;
            accuracy = 0.4;
            /* istanbul ignore next */
            cov_n7stll51c().s[86]++;
            actualOutcome = 'PARTIAL';
          }
        }
      } else {
        /* istanbul ignore next */
        cov_n7stll51c().b[9][1]++;
        cov_n7stll51c().s[87]++;
        // BREAKEVEN
        accuracy = 0.5;
        /* istanbul ignore next */
        cov_n7stll51c().s[88]++;
        actualOutcome = 'PARTIAL';
      }
    }
    /* istanbul ignore next */
    cov_n7stll51c().s[89]++;
    return {
      predictionId: outcome.decisionId,
      actualOutcome,
      accuracy,
      marketConditions: outcome.marketConditions,
      timestamp:
      /* istanbul ignore next */
      (cov_n7stll51c().b[12][0]++, outcome.exitTimestamp) ||
      /* istanbul ignore next */
      (cov_n7stll51c().b[12][1]++, new Date()),
      notes: `${outcome.strategy} strategy result: ${outcome.outcome} with ${outcome.pnlPercentage.toFixed(2)}% return`
    };
  }
  /**
   * Perform immediate learning from significant outcomes
   */
  async performImmediateLearning(outcome) {
    /* istanbul ignore next */
    cov_n7stll51c().f[10]++;
    cov_n7stll51c().s[90]++;
    try {
      /* istanbul ignore next */
      cov_n7stll51c().s[91]++;
      logger_1.logger.info(`🧠 Performing immediate learning from ${outcome.outcomeQuality} outcome`);
      // Generate insights from the outcome
      const insights =
      /* istanbul ignore next */
      (cov_n7stll51c().s[92]++, await this.generateInsightsFromOutcome(outcome));
      // Add insights to learning history
      /* istanbul ignore next */
      cov_n7stll51c().s[93]++;
      this.learningInsights.push(...insights);
      /* istanbul ignore next */
      cov_n7stll51c().s[94]++;
      this.emit('immediateLearning', {
        outcome,
        insights
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_n7stll51c().s[95]++;
      logger_1.logger.error('❌ Error in immediate learning:', error);
    }
  }
  /**
   * Generate insights from trading outcome
   */
  async generateInsightsFromOutcome(outcome) {
    /* istanbul ignore next */
    cov_n7stll51c().f[11]++;
    const insights =
    /* istanbul ignore next */
    (cov_n7stll51c().s[96]++, []);
    // Strategy performance insight
    /* istanbul ignore next */
    cov_n7stll51c().s[97]++;
    if (outcome.outcomeQuality === 'EXCELLENT') {
      /* istanbul ignore next */
      cov_n7stll51c().b[13][0]++;
      cov_n7stll51c().s[98]++;
      insights.push({
        type: 'STRATEGY',
        insight: `${outcome.strategy} performed excellently in ${outcome.marketConditions.volatility} volatility, ${outcome.marketConditions.trend} trend conditions`,
        confidence: 85,
        impact: 'HIGH',
        recommendation: `Increase allocation to ${outcome.strategy} in similar market conditions`,
        supportingData: {
          pnlPercentage: outcome.pnlPercentage,
          confidence: outcome.confidence,
          marketConditions: outcome.marketConditions
        },
        timestamp: new Date()
      });
    } else {
      /* istanbul ignore next */
      cov_n7stll51c().b[13][1]++;
      cov_n7stll51c().s[99]++;
      if (outcome.outcomeQuality === 'TERRIBLE') {
        /* istanbul ignore next */
        cov_n7stll51c().b[14][0]++;
        cov_n7stll51c().s[100]++;
        insights.push({
          type: 'STRATEGY',
          insight: `${outcome.strategy} performed poorly in ${outcome.marketConditions.volatility} volatility, ${outcome.marketConditions.trend} trend conditions`,
          confidence: 80,
          impact: 'HIGH',
          recommendation: `Reduce allocation to ${outcome.strategy} in similar market conditions or optimize parameters`,
          supportingData: {
            pnlPercentage: outcome.pnlPercentage,
            confidence: outcome.confidence,
            marketConditions: outcome.marketConditions
          },
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[14][1]++;
      }
    }
    /* istanbul ignore next */
    cov_n7stll51c().s[101]++;
    return insights;
  }
  /**
   * Perform regular learning update
   */
  async performLearningUpdate() {
    /* istanbul ignore next */
    cov_n7stll51c().f[12]++;
    cov_n7stll51c().s[102]++;
    try {
      /* istanbul ignore next */
      cov_n7stll51c().s[103]++;
      logger_1.logger.info('🔄 Performing regular learning update...');
      /* istanbul ignore next */
      cov_n7stll51c().s[104]++;
      if (this.tradingOutcomes.length < this.LEARNING_CONFIG.minTradesForLearning) {
        /* istanbul ignore next */
        cov_n7stll51c().b[15][0]++;
        cov_n7stll51c().s[105]++;
        logger_1.logger.info(`📊 Insufficient data for learning (${this.tradingOutcomes.length}/${this.LEARNING_CONFIG.minTradesForLearning})`);
        /* istanbul ignore next */
        cov_n7stll51c().s[106]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[15][1]++;
      }
      // Update strategy performance metrics
      cov_n7stll51c().s[107]++;
      await this.updateAllStrategyPerformance();
      // Generate new insights
      /* istanbul ignore next */
      cov_n7stll51c().s[108]++;
      await this.generatePeriodicInsights();
      // Clean up old data
      /* istanbul ignore next */
      cov_n7stll51c().s[109]++;
      this.cleanupOldData();
      /* istanbul ignore next */
      cov_n7stll51c().s[110]++;
      logger_1.logger.info('✅ Learning update completed');
      /* istanbul ignore next */
      cov_n7stll51c().s[111]++;
      this.emit('learningUpdate', {
        totalOutcomes: this.tradingOutcomes.length,
        insights: this.learningInsights.length
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_n7stll51c().s[112]++;
      logger_1.logger.error('❌ Error in learning update:', error);
    }
  }
  /**
   * Update all strategy performance metrics
   */
  async updateAllStrategyPerformance() {
    /* istanbul ignore next */
    cov_n7stll51c().f[13]++;
    cov_n7stll51c().s[113]++;
    for (const [strategyName, performance] of this.strategyPerformance) {
      const strategyOutcomes =
      /* istanbul ignore next */
      (cov_n7stll51c().s[114]++, this.tradingOutcomes.filter(o => {
        /* istanbul ignore next */
        cov_n7stll51c().f[14]++;
        cov_n7stll51c().s[115]++;
        return o.strategy === strategyName;
      }));
      /* istanbul ignore next */
      cov_n7stll51c().s[116]++;
      if (strategyOutcomes.length === 0) {
        /* istanbul ignore next */
        cov_n7stll51c().b[16][0]++;
        cov_n7stll51c().s[117]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[16][1]++;
      }
      // Recalculate metrics
      const wins =
      /* istanbul ignore next */
      (cov_n7stll51c().s[118]++, strategyOutcomes.filter(o => {
        /* istanbul ignore next */
        cov_n7stll51c().f[15]++;
        cov_n7stll51c().s[119]++;
        return o.outcome === 'WIN';
      }).length);
      /* istanbul ignore next */
      cov_n7stll51c().s[120]++;
      performance.winRate = wins / strategyOutcomes.length * 100;
      /* istanbul ignore next */
      cov_n7stll51c().s[121]++;
      performance.avgPnL = strategyOutcomes.reduce((sum, o) => {
        /* istanbul ignore next */
        cov_n7stll51c().f[16]++;
        cov_n7stll51c().s[122]++;
        return sum + o.pnl;
      }, 0) / strategyOutcomes.length;
      /* istanbul ignore next */
      cov_n7stll51c().s[123]++;
      performance.avgPnLPercentage = strategyOutcomes.reduce((sum, o) => {
        /* istanbul ignore next */
        cov_n7stll51c().f[17]++;
        cov_n7stll51c().s[124]++;
        return sum + o.pnlPercentage;
      }, 0) / strategyOutcomes.length;
      /* istanbul ignore next */
      cov_n7stll51c().s[125]++;
      performance.lastUpdated = new Date();
    }
  }
  /**
   * Generate periodic insights
   */
  async generatePeriodicInsights() {
    /* istanbul ignore next */
    cov_n7stll51c().f[18]++;
    const recentOutcomes =
    /* istanbul ignore next */
    (cov_n7stll51c().s[126]++, this.tradingOutcomes.slice(-100)); // Last 100 trades
    // Overall performance insight
    const winRate =
    /* istanbul ignore next */
    (cov_n7stll51c().s[127]++, recentOutcomes.filter(o => {
      /* istanbul ignore next */
      cov_n7stll51c().f[19]++;
      cov_n7stll51c().s[128]++;
      return o.outcome === 'WIN';
    }).length / recentOutcomes.length * 100);
    const avgReturn =
    /* istanbul ignore next */
    (cov_n7stll51c().s[129]++, recentOutcomes.reduce((sum, o) => {
      /* istanbul ignore next */
      cov_n7stll51c().f[20]++;
      cov_n7stll51c().s[130]++;
      return sum + o.pnlPercentage;
    }, 0) / recentOutcomes.length);
    /* istanbul ignore next */
    cov_n7stll51c().s[131]++;
    if (winRate > 70) {
      /* istanbul ignore next */
      cov_n7stll51c().b[17][0]++;
      cov_n7stll51c().s[132]++;
      this.learningInsights.push({
        type: 'STRATEGY',
        insight: `Excellent recent performance with ${winRate.toFixed(1)}% win rate and ${avgReturn.toFixed(2)}% average return`,
        confidence: 90,
        impact: 'HIGH',
        recommendation: 'Continue current strategy mix with potential for increased position sizing',
        supportingData: {
          winRate,
          avgReturn,
          trades: recentOutcomes.length
        },
        timestamp: new Date()
      });
    } else {
      /* istanbul ignore next */
      cov_n7stll51c().b[17][1]++;
      cov_n7stll51c().s[133]++;
      if (winRate < 50) {
        /* istanbul ignore next */
        cov_n7stll51c().b[18][0]++;
        cov_n7stll51c().s[134]++;
        this.learningInsights.push({
          type: 'STRATEGY',
          insight: `Poor recent performance with ${winRate.toFixed(1)}% win rate requires immediate attention`,
          confidence: 95,
          impact: 'HIGH',
          recommendation: 'Review and adjust strategy parameters or reduce position sizes',
          supportingData: {
            winRate,
            avgReturn,
            trades: recentOutcomes.length
          },
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[18][1]++;
      }
    }
  }
  /**
   * Clean up old data
   */
  cleanupOldData() {
    /* istanbul ignore next */
    cov_n7stll51c().f[21]++;
    const maxAge =
    /* istanbul ignore next */
    (cov_n7stll51c().s[135]++, 90 * 24 * 60 * 60 * 1000); // 90 days
    const cutoffDate =
    /* istanbul ignore next */
    (cov_n7stll51c().s[136]++, new Date(Date.now() - maxAge));
    // Clean up old insights
    /* istanbul ignore next */
    cov_n7stll51c().s[137]++;
    this.learningInsights = this.learningInsights.filter(insight => {
      /* istanbul ignore next */
      cov_n7stll51c().f[22]++;
      cov_n7stll51c().s[138]++;
      return insight.timestamp >= cutoffDate;
    });
    /* istanbul ignore next */
    cov_n7stll51c().s[139]++;
    logger_1.logger.info('🧹 Cleaned up old learning data');
  }
  /**
   * Get strategy performance
   */
  getStrategyPerformance(strategyName) {
    /* istanbul ignore next */
    cov_n7stll51c().f[23]++;
    cov_n7stll51c().s[140]++;
    if (strategyName) {
      /* istanbul ignore next */
      cov_n7stll51c().b[19][0]++;
      const performance =
      /* istanbul ignore next */
      (cov_n7stll51c().s[141]++, this.strategyPerformance.get(strategyName));
      /* istanbul ignore next */
      cov_n7stll51c().s[142]++;
      return performance ?
      /* istanbul ignore next */
      (cov_n7stll51c().b[20][0]++, [performance]) :
      /* istanbul ignore next */
      (cov_n7stll51c().b[20][1]++, []);
    } else
    /* istanbul ignore next */
    {
      cov_n7stll51c().b[19][1]++;
    }
    cov_n7stll51c().s[143]++;
    return Array.from(this.strategyPerformance.values());
  }
  /**
   * Get learning insights
   */
  getLearningInsights(limit) {
    /* istanbul ignore next */
    cov_n7stll51c().f[24]++;
    const insights =
    /* istanbul ignore next */
    (cov_n7stll51c().s[144]++, [...this.learningInsights].sort((a, b) => {
      /* istanbul ignore next */
      cov_n7stll51c().f[25]++;
      cov_n7stll51c().s[145]++;
      return b.timestamp.getTime() - a.timestamp.getTime();
    }));
    /* istanbul ignore next */
    cov_n7stll51c().s[146]++;
    return limit ?
    /* istanbul ignore next */
    (cov_n7stll51c().b[21][0]++, insights.slice(0, limit)) :
    /* istanbul ignore next */
    (cov_n7stll51c().b[21][1]++, insights);
  }
  /**
   * Get learning summary
   */
  getLearningSummary() {
    /* istanbul ignore next */
    cov_n7stll51c().f[26]++;
    const totalOutcomes =
    /* istanbul ignore next */
    (cov_n7stll51c().s[147]++, this.tradingOutcomes.length);
    const overallWinRate =
    /* istanbul ignore next */
    (cov_n7stll51c().s[148]++, totalOutcomes > 0 ?
    /* istanbul ignore next */
    (cov_n7stll51c().b[22][0]++, this.tradingOutcomes.filter(o => {
      /* istanbul ignore next */
      cov_n7stll51c().f[27]++;
      cov_n7stll51c().s[149]++;
      return o.outcome === 'WIN';
    }).length / totalOutcomes * 100) :
    /* istanbul ignore next */
    (cov_n7stll51c().b[22][1]++, 0));
    const strategies =
    /* istanbul ignore next */
    (cov_n7stll51c().s[150]++, Array.from(this.strategyPerformance.values()));
    const bestStrategy =
    /* istanbul ignore next */
    (cov_n7stll51c().s[151]++,
    /* istanbul ignore next */
    (cov_n7stll51c().b[23][0]++, strategies.reduce((best, current) => {
      /* istanbul ignore next */
      cov_n7stll51c().f[28]++;
      cov_n7stll51c().s[152]++;
      return current.winRate > best.winRate ?
      /* istanbul ignore next */
      (cov_n7stll51c().b[24][0]++, current) :
      /* istanbul ignore next */
      (cov_n7stll51c().b[24][1]++, best);
    }, strategies[0])?.strategyName) ||
    /* istanbul ignore next */
    (cov_n7stll51c().b[23][1]++, 'None'));
    const worstStrategy =
    /* istanbul ignore next */
    (cov_n7stll51c().s[153]++,
    /* istanbul ignore next */
    (cov_n7stll51c().b[25][0]++, strategies.reduce((worst, current) => {
      /* istanbul ignore next */
      cov_n7stll51c().f[29]++;
      cov_n7stll51c().s[154]++;
      return current.winRate < worst.winRate ?
      /* istanbul ignore next */
      (cov_n7stll51c().b[26][0]++, current) :
      /* istanbul ignore next */
      (cov_n7stll51c().b[26][1]++, worst);
    }, strategies[0])?.strategyName) ||
    /* istanbul ignore next */
    (cov_n7stll51c().b[25][1]++, 'None'));
    /* istanbul ignore next */
    cov_n7stll51c().s[155]++;
    return {
      totalOutcomes,
      overallWinRate,
      bestStrategy,
      worstStrategy,
      keyInsights: this.learningInsights.length
    };
  }
  /**
   * Shutdown the adaptive learner
   */
  async shutdown() {
    /* istanbul ignore next */
    cov_n7stll51c().f[30]++;
    cov_n7stll51c().s[156]++;
    try {
      /* istanbul ignore next */
      cov_n7stll51c().s[157]++;
      logger_1.logger.info('🛑 Shutting down Adaptive Learner...');
      // Stop learning cycle
      /* istanbul ignore next */
      cov_n7stll51c().s[158]++;
      if (this.learningTimer) {
        /* istanbul ignore next */
        cov_n7stll51c().b[27][0]++;
        cov_n7stll51c().s[159]++;
        clearInterval(this.learningTimer);
        /* istanbul ignore next */
        cov_n7stll51c().s[160]++;
        this.learningTimer = null;
      } else
      /* istanbul ignore next */
      {
        cov_n7stll51c().b[27][1]++;
      }
      // Clear data
      cov_n7stll51c().s[161]++;
      this.tradingOutcomes = [];
      /* istanbul ignore next */
      cov_n7stll51c().s[162]++;
      this.strategyPerformance.clear();
      /* istanbul ignore next */
      cov_n7stll51c().s[163]++;
      this.learningInsights = [];
      /* istanbul ignore next */
      cov_n7stll51c().s[164]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_n7stll51c().s[165]++;
      logger_1.logger.info('✅ Adaptive Learner shutdown completed');
    } catch (error) {
      /* istanbul ignore next */
      cov_n7stll51c().s[166]++;
      logger_1.logger.error('❌ Error during Adaptive Learner shutdown:', error);
      /* istanbul ignore next */
      cov_n7stll51c().s[167]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_n7stll51c().s[168]++;
exports.AdaptiveLearner = AdaptiveLearner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,