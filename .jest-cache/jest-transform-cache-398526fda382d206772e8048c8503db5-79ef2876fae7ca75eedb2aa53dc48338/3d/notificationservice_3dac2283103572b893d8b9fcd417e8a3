8776b1a8e68272d2da544eee124b0c44
"use strict";

/**
 * Notification Service
 *
 * Central notification service for the AI crypto trading agent.
 * Handles email, Telegram, and other notification channels.
 */
/* istanbul ignore next */
function cov_oxd48l9x6() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-service.ts";
  var hash = "3557e4c2453324d836a2742affdb173d3385af69";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 37
        }
      },
      "2": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "3": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 18,
          column: 10
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "5": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "6": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "7": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "8": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "9": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "10": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "11": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 33
        }
      },
      "12": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 28
          }
        }, {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 18,
            column: 9
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-service.ts",
      mappings: ";AAAA;;;;;GAKG;;;AA0CH,MAAa,mBAAmB;IACtB,MAAM,CAAS;IACf,MAAM,CAAqB;IAEnC,YAAY,MAAc,EAAE,MAA2B;QACrD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI;YACtB,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;YACrG,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE;SACvD,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,YAA0B;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE;YAC7C,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,QAAQ,EAAE,YAAY,CAAC,QAAQ;SAChC,CAAC,CAAC;QAEH,kCAAkC;QAClC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,YAA0B;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qCAAqC,EAAE;YACtD,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,QAAQ,EAAE,YAAY,CAAC,QAAQ;SAChC,CAAC,CAAC;QAEH,kCAAkC;QAClC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,KAAwB;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE;YAC7C,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,OAAO,EAAE,KAAK,CAAC,OAAO;SACvB,CAAC,CAAC;QAEH,kCAAkC;QAClC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAAe;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+BAA+B,EAAE;YAChD,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC;SACnC,CAAC,CAAC;QAEH,kCAAkC;QAClC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CACF;AAlDD,kDAkDC",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\core\\notifications\\notification-service.ts"],
      sourcesContent: ["/**\r\n * Notification Service\r\n * \r\n * Central notification service for the AI crypto trading agent.\r\n * Handles email, Telegram, and other notification channels.\r\n */\r\n\r\nimport { Logger } from '../logging/logger';\r\n\r\nexport interface NotificationConfig {\r\n  email?: {\r\n    enabled: boolean;\r\n    smtp: {\r\n      host: string;\r\n      port: number;\r\n      secure: boolean;\r\n      auth: {\r\n        user: string;\r\n        pass: string;\r\n      };\r\n    };\r\n  };\r\n  telegram?: {\r\n    enabled: boolean;\r\n    botToken: string;\r\n    chatId: string;\r\n  };\r\n}\r\n\r\nexport interface Notification {\r\n  title: string;\r\n  message: string;\r\n  details?: any;\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n}\r\n\r\nexport interface EmailNotification {\r\n  to: string;\r\n  subject: string;\r\n  html: string;\r\n  attachments?: Array<{\r\n    filename: string;\r\n    content: string;\r\n    contentType: string;\r\n  }>;\r\n}\r\n\r\nexport class NotificationService {\r\n  private logger: Logger;\r\n  private config: NotificationConfig;\r\n\r\n  constructor(logger: Logger, config?: NotificationConfig) {\r\n    this.logger = logger;\r\n    this.config = config || {\r\n      email: { enabled: false, smtp: { host: '', port: 587, secure: false, auth: { user: '', pass: '' } } },\r\n      telegram: { enabled: false, botToken: '', chatId: '' }\r\n    };\r\n  }\r\n\r\n  async sendAlert(notification: Notification): Promise<void> {\r\n    this.logger.info('Sending alert notification', {\r\n      title: notification.title,\r\n      priority: notification.priority\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async sendCriticalAlert(notification: Notification): Promise<void> {\r\n    this.logger.warn('Sending critical alert notification', {\r\n      title: notification.title,\r\n      priority: notification.priority\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async sendEmail(email: EmailNotification): Promise<void> {\r\n    this.logger.info('Sending email notification', {\r\n      to: email.to,\r\n      subject: email.subject\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async sendTelegram(message: string): Promise<void> {\r\n    this.logger.info('Sending Telegram notification', {\r\n      message: message.substring(0, 100)\r\n    });\r\n\r\n    // Mock implementation for testing\r\n    return Promise.resolve();\r\n  }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3557e4c2453324d836a2742affdb173d3385af69"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_oxd48l9x6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_oxd48l9x6();
cov_oxd48l9x6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_oxd48l9x6().s[1]++;
exports.NotificationService = void 0;
class NotificationService {
  logger;
  config;
  constructor(logger, config) {
    /* istanbul ignore next */
    cov_oxd48l9x6().f[0]++;
    cov_oxd48l9x6().s[2]++;
    this.logger = logger;
    /* istanbul ignore next */
    cov_oxd48l9x6().s[3]++;
    this.config =
    /* istanbul ignore next */
    (cov_oxd48l9x6().b[0][0]++, config) ||
    /* istanbul ignore next */
    (cov_oxd48l9x6().b[0][1]++, {
      email: {
        enabled: false,
        smtp: {
          host: '',
          port: 587,
          secure: false,
          auth: {
            user: '',
            pass: ''
          }
        }
      },
      telegram: {
        enabled: false,
        botToken: '',
        chatId: ''
      }
    });
  }
  async sendAlert(notification) {
    /* istanbul ignore next */
    cov_oxd48l9x6().f[1]++;
    cov_oxd48l9x6().s[4]++;
    this.logger.info('Sending alert notification', {
      title: notification.title,
      priority: notification.priority
    });
    // Mock implementation for testing
    /* istanbul ignore next */
    cov_oxd48l9x6().s[5]++;
    return Promise.resolve();
  }
  async sendCriticalAlert(notification) {
    /* istanbul ignore next */
    cov_oxd48l9x6().f[2]++;
    cov_oxd48l9x6().s[6]++;
    this.logger.warn('Sending critical alert notification', {
      title: notification.title,
      priority: notification.priority
    });
    // Mock implementation for testing
    /* istanbul ignore next */
    cov_oxd48l9x6().s[7]++;
    return Promise.resolve();
  }
  async sendEmail(email) {
    /* istanbul ignore next */
    cov_oxd48l9x6().f[3]++;
    cov_oxd48l9x6().s[8]++;
    this.logger.info('Sending email notification', {
      to: email.to,
      subject: email.subject
    });
    // Mock implementation for testing
    /* istanbul ignore next */
    cov_oxd48l9x6().s[9]++;
    return Promise.resolve();
  }
  async sendTelegram(message) {
    /* istanbul ignore next */
    cov_oxd48l9x6().f[4]++;
    cov_oxd48l9x6().s[10]++;
    this.logger.info('Sending Telegram notification', {
      message: message.substring(0, 100)
    });
    // Mock implementation for testing
    /* istanbul ignore next */
    cov_oxd48l9x6().s[11]++;
    return Promise.resolve();
  }
}
/* istanbul ignore next */
cov_oxd48l9x6().s[12]++;
exports.NotificationService = NotificationService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,