{"version":3,"names":["cov_783ohuk0e","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","si","__importStar","require","logger_1","audit_service_1","SystemMonitor","monitoringInterval","currentMetrics","activeAlerts","Map","config","monitoringIntervalMs","cpuWarningThreshold","parseInt","process","env","CPU_USAGE_WARNING_THRESHOLD","cpuCriticalThreshold","CPU_USAGE_CRITICAL_THRESHOLD","ramWarningThreshold","MEMORY_USAGE_WARNING_THRESHOLD","ramCriticalThreshold","MEMORY_USAGE_CRITICAL_THRESHOLD","ssdWarningThreshold","DISK_USAGE_WARNING_THRESHOLD","ssdCriticalThreshold","DISK_USAGE_CRITICAL_THRESHOLD","tempWarningThreshold","CPU_TEMP_WARNING_THRESHOLD","tempCriticalThreshold","CPU_TEMP_CRITICAL_THRESHOLD","networkLatencyWarning","NETWORK_LATENCY_WARNING_MS","networkLatencyCritical","NETWORK_LATENCY_CRITICAL_MS","constructor","logger","info","startHardwareMonitoring","performSystemScan","setInterval","error","auditService","createAuditEntry","auditId","Date","now","eventType","actor","resource","action","result","timestamp","auditData","Error","cpu","collectCPUMetrics","ram","collectRAMMetrics","ssd","collectSSDMetrics","network","collectNetworkMetrics","analyzeMetricsAndGenerateAlerts","logSystemStatus","cpuData","currentLoad","cpuTemp","processes","Promise","all","cpuTemperature","utilization","Math","round","temperature","main","frequency","speed","loadAverage","avgLoad","cores","physical","physicalCores","logical","brand","memData","mem","total","used","free","cached","buffers","available","swap","swaptotal","swapused","swapfree","fsSize","diskIO","blockDevices","disksIO","primaryDisk","primaryBlockDevice","size","use","readIOPS","rIO","writeIOPS","wIO","readThroughput","rIO_sec","writeThroughput","wIO_sec","health","networkInterfaces","networkStats","interfaces","map","iface","ip","ip4","mac","isUp","internal","operstate","bytesReceived","bytesSent","forEach","stat","find","i","rx_bytes","tx_bytes","totalBytesReceived","reduce","sum","totalBytesSent","downloadSpeed","rx_sec","uploadSpeed","tx_sec","latency","packetLoss","alerts","push","createAlert","alert","processAlert","severity","message","currentValue","threshold","id","toLowerCase","random","toString","substring","isActive","existingAlert","Array","from","values","a","set","warn","alertType","debug","activeInterfaces","filter","length","getSystemHealthStatus","cpuHealth","calculateComponentHealth","ramHealth","ssdHealth","thermalHealth","networkHealth","score","status","value","thresholds","warning","critical","overallHealth","recommendations","components","thermal","lastUpdated","warningThreshold","criticalThreshold","description","max","validateSystemRequirements","warnings","meetsRequirements","includes","getCurrentMetrics","stopHardwareMonitoring","clearInterval","initializePerformanceOptimization","setupThermalManagement","getStatus","isMonitoring","lastScanTime","exports"],"sources":["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\infrastructure\\system-monitor.ts"],"sourcesContent":["/**\r\n * =============================================================================\r\n * AI CRYPTO TRADING AGENT - INTEL NUC SYSTEM MONITOR\r\n * =============================================================================\r\n * \r\n * This service provides comprehensive hardware monitoring for Intel NUC systems\r\n * running the AI crypto trading agent. It monitors CPU, RAM, SSD, network, and\r\n * thermal conditions to ensure optimal trading performance.\r\n * \r\n * CRITICAL PERFORMANCE NOTICE:\r\n * This system monitors hardware that controls trading operations. Hardware\r\n * failures or performance degradation could impact trading decisions and\r\n * result in financial losses. All metrics are continuously monitored.\r\n * \r\n * Hardware Specifications:\r\n * - Intel NUC with i5 CPU\r\n * - 12GB RAM\r\n * - 256GB M.2 SSD\r\n * - Wireless and Gigabit Ethernet\r\n * \r\n * @author AI Crypto Trading System\r\n * @version 1.0.0\r\n * @license PROPRIETARY\r\n * =============================================================================\r\n */\r\n\r\nimport * as si from 'systeminformation';\r\nimport { logger } from '@/core/logging/logger';\r\nimport { auditService } from '@/security/audit-service';\r\n\r\n/**\r\n * Interface for CPU metrics\r\n */\r\nexport interface CPUMetrics {\r\n  /** CPU utilization percentage */\r\n  utilization: number;\r\n  /** CPU temperature in Celsius */\r\n  temperature: number;\r\n  /** CPU frequency in MHz */\r\n  frequency: number;\r\n  /** Load average (1, 5, 15 minutes) */\r\n  loadAverage: number[];\r\n  /** Number of processes */\r\n  processes: number;\r\n  /** CPU cores information */\r\n  cores: {\r\n    physical: number;\r\n    logical: number;\r\n  };\r\n  /** CPU brand and model */\r\n  brand: string;\r\n  /** CPU speed in GHz */\r\n  speed: number;\r\n}\r\n\r\n/**\r\n * Interface for RAM metrics\r\n */\r\nexport interface RAMMetrics {\r\n  /** Total RAM in bytes */\r\n  total: number;\r\n  /** Used RAM in bytes */\r\n  used: number;\r\n  /** Free RAM in bytes */\r\n  free: number;\r\n  /** RAM utilization percentage */\r\n  utilization: number;\r\n  /** Cached memory in bytes */\r\n  cached: number;\r\n  /** Buffer memory in bytes */\r\n  buffers: number;\r\n  /** Available memory in bytes */\r\n  available: number;\r\n  /** Swap usage */\r\n  swap: {\r\n    total: number;\r\n    used: number;\r\n    free: number;\r\n  };\r\n}/**\r\n * \r\nInterface for SSD metrics\r\n */\r\nexport interface SSDMetrics {\r\n  /** Total storage in bytes */\r\n  total: number;\r\n  /** Used storage in bytes */\r\n  used: number;\r\n  /** Free storage in bytes */\r\n  free: number;\r\n  /** Storage utilization percentage */\r\n  utilization: number;\r\n  /** Read IOPS */\r\n  readIOPS: number;\r\n  /** Write IOPS */\r\n  writeIOPS: number;\r\n  /** Read throughput in MB/s */\r\n  readThroughput: number;\r\n  /** Write throughput in MB/s */\r\n  writeThroughput: number;\r\n  /** SSD health percentage */\r\n  health: number;\r\n  /** SSD temperature in Celsius */\r\n  temperature: number;\r\n}\r\n\r\n/**\r\n * Interface for network metrics\r\n */\r\nexport interface NetworkMetrics {\r\n  /** Network interfaces */\r\n  interfaces: NetworkInterface[];\r\n  /** Total bytes received */\r\n  totalBytesReceived: number;\r\n  /** Total bytes sent */\r\n  totalBytesSent: number;\r\n  /** Current download speed in Mbps */\r\n  downloadSpeed: number;\r\n  /** Current upload speed in Mbps */\r\n  uploadSpeed: number;\r\n  /** Network latency in ms */\r\n  latency: number;\r\n  /** Packet loss percentage */\r\n  packetLoss: number;\r\n}\r\n\r\n/**\r\n * Interface for network interface\r\n */\r\nexport interface NetworkInterface {\r\n  /** Interface name */\r\n  name: string;\r\n  /** Interface type (ethernet, wireless) */\r\n  type: string;\r\n  /** IP address */\r\n  ip: string;\r\n  /** MAC address */\r\n  mac: string;\r\n  /** Connection status */\r\n  isUp: boolean;\r\n  /** Link speed in Mbps */\r\n  speed: number;\r\n  /** Bytes received */\r\n  bytesReceived: number;\r\n  /** Bytes sent */\r\n  bytesSent: number;\r\n}\r\n\r\n/**\r\n * Interface for system health status\r\n */\r\nexport interface SystemHealthStatus {\r\n  /** Overall system health score (0-100) */\r\n  overallHealth: number;\r\n  /** Individual component health */\r\n  components: {\r\n    cpu: HealthStatus;\r\n    ram: HealthStatus;\r\n    ssd: HealthStatus;\r\n    network: HealthStatus;\r\n    thermal: HealthStatus;\r\n  };\r\n  /** System alerts */\r\n  alerts: SystemAlert[];\r\n  /** Performance recommendations */\r\n  recommendations: string[];\r\n  /** Last update timestamp */\r\n  lastUpdated: Date;\r\n}/**\r\n * Int\r\nerface for component health status\r\n */\r\nexport interface HealthStatus {\r\n  /** Health score (0-100) */\r\n  score: number;\r\n  /** Status level */\r\n  status: 'EXCELLENT' | 'GOOD' | 'WARNING' | 'CRITICAL';\r\n  /** Status message */\r\n  message: string;\r\n  /** Metric value */\r\n  value: number;\r\n  /** Threshold values */\r\n  thresholds: {\r\n    warning: number;\r\n    critical: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Interface for system alert\r\n */\r\nexport interface SystemAlert {\r\n  /** Alert ID */\r\n  id: string;\r\n  /** Alert type */\r\n  type: 'CPU' | 'RAM' | 'SSD' | 'NETWORK' | 'THERMAL';\r\n  /** Alert severity */\r\n  severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL';\r\n  /** Alert message */\r\n  message: string;\r\n  /** Current value */\r\n  currentValue: number;\r\n  /** Threshold value */\r\n  threshold: number;\r\n  /** Alert timestamp */\r\n  timestamp: Date;\r\n  /** Whether alert is active */\r\n  isActive: boolean;\r\n}\r\n\r\n/**\r\n * Intel NUC System Monitor\r\n * Provides comprehensive hardware monitoring and performance optimization\r\n */\r\nexport class SystemMonitor {\r\n  /** Monitoring interval in milliseconds */\r\n  private monitoringInterval: NodeJS.Timeout | null = null;\r\n  \r\n  /** Current system metrics */\r\n  private currentMetrics: {\r\n    cpu?: CPUMetrics;\r\n    ram?: RAMMetrics;\r\n    ssd?: SSDMetrics;\r\n    network?: NetworkMetrics;\r\n  } = {};\r\n  \r\n  /** Active system alerts */\r\n  private activeAlerts: Map<string, SystemAlert> = new Map();\r\n  \r\n  /** Monitoring configuration */\r\n  private config = {\r\n    monitoringIntervalMs: 30000, // 30 seconds\r\n    cpuWarningThreshold: parseInt(process.env.CPU_USAGE_WARNING_THRESHOLD || '70'),\r\n    cpuCriticalThreshold: parseInt(process.env.CPU_USAGE_CRITICAL_THRESHOLD || '85'),\r\n    ramWarningThreshold: parseInt(process.env.MEMORY_USAGE_WARNING_THRESHOLD || '75'),\r\n    ramCriticalThreshold: parseInt(process.env.MEMORY_USAGE_CRITICAL_THRESHOLD || '90'),\r\n    ssdWarningThreshold: parseInt(process.env.DISK_USAGE_WARNING_THRESHOLD || '80'),\r\n    ssdCriticalThreshold: parseInt(process.env.DISK_USAGE_CRITICAL_THRESHOLD || '95'),\r\n    tempWarningThreshold: parseInt(process.env.CPU_TEMP_WARNING_THRESHOLD || '70'),\r\n    tempCriticalThreshold: parseInt(process.env.CPU_TEMP_CRITICAL_THRESHOLD || '80'),\r\n    networkLatencyWarning: parseInt(process.env.NETWORK_LATENCY_WARNING_MS || '100'),\r\n    networkLatencyCritical: parseInt(process.env.NETWORK_LATENCY_CRITICAL_MS || '500')\r\n  };\r\n\r\n  constructor() {\r\n    logger.info('🖥️ Intel NUC System Monitor initializing...');\r\n  }\r\n\r\n  /**\r\n   * Start hardware monitoring\r\n   * Begins continuous monitoring of all system components\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  public async startHardwareMonitoring(): Promise<void> {\r\n    try {\r\n      logger.info('📊 Starting Intel NUC hardware monitoring...');\r\n      \r\n      // Perform initial system scan\r\n      await this.performSystemScan();\r\n      \r\n      // Start continuous monitoring\r\n      this.monitoringInterval = setInterval(async () => {\r\n        try {\r\n          await this.performSystemScan();\r\n        } catch (error) {\r\n          logger.error('❌ System monitoring error:', error);\r\n        }\r\n      }, this.config.monitoringIntervalMs);\r\n      \r\n      logger.info('✅ Hardware monitoring started successfully');\r\n      \r\n      // Audit log\r\n      await auditService.createAuditEntry({\r\n        auditId: `sys_mon_start_${Date.now()}`,\r\n        eventType: 'SYSTEM_MONITORING_START',\r\n        actor: 'SYSTEM',\r\n        resource: 'HARDWARE_MONITOR',\r\n        action: 'START_MONITORING',\r\n        result: 'SUCCESS',\r\n        timestamp: new Date(),\r\n        auditData: { monitoringInterval: this.config.monitoringIntervalMs }\r\n      });\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to start hardware monitoring:', error);\r\n      throw new Error('Hardware monitoring initialization failed');\r\n    }\r\n  }  /**\r\n  \r\n * Perform comprehensive system scan\r\n   * Collects metrics from all hardware components\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async performSystemScan(): Promise<void> {\r\n    try {\r\n      // Collect CPU metrics\r\n      this.currentMetrics.cpu = await this.collectCPUMetrics();\r\n      \r\n      // Collect RAM metrics\r\n      this.currentMetrics.ram = await this.collectRAMMetrics();\r\n      \r\n      // Collect SSD metrics\r\n      this.currentMetrics.ssd = await this.collectSSDMetrics();\r\n      \r\n      // Collect network metrics\r\n      this.currentMetrics.network = await this.collectNetworkMetrics();\r\n      \r\n      // Analyze metrics and generate alerts\r\n      await this.analyzeMetricsAndGenerateAlerts();\r\n      \r\n      // Log system status\r\n      this.logSystemStatus();\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ System scan failed:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect CPU metrics\r\n   * Gathers comprehensive CPU performance data\r\n   * \r\n   * @returns Promise<CPUMetrics> CPU metrics\r\n   */\r\n  private async collectCPUMetrics(): Promise<CPUMetrics> {\r\n    try {\r\n      const [cpuData, currentLoad, cpuTemp, processes] = await Promise.all([\r\n        si.cpu(),\r\n        si.currentLoad(),\r\n        si.cpuTemperature(),\r\n        si.processes()\r\n      ]);\r\n      \r\n      return {\r\n        utilization: Math.round(currentLoad.currentLoad),\r\n        temperature: cpuTemp.main || 0,\r\n        frequency: cpuData.speed || 0,\r\n        loadAverage: [currentLoad.avgLoad || 0],\r\n        processes: processes.all || 0,\r\n        cores: {\r\n          physical: cpuData.physicalCores || 0,\r\n          logical: cpuData.cores || 0\r\n        },\r\n        brand: cpuData.brand || 'Unknown',\r\n        speed: cpuData.speed || 0\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to collect CPU metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect RAM metrics\r\n   * Gathers comprehensive memory usage data\r\n   * \r\n   * @returns Promise<RAMMetrics> RAM metrics\r\n   */\r\n  private async collectRAMMetrics(): Promise<RAMMetrics> {\r\n    try {\r\n      const memData = await si.mem();\r\n      \r\n      return {\r\n        total: memData.total,\r\n        used: memData.used,\r\n        free: memData.free,\r\n        utilization: Math.round((memData.used / memData.total) * 100),\r\n        cached: memData.cached || 0,\r\n        buffers: memData.buffers || 0,\r\n        available: memData.available,\r\n        swap: {\r\n          total: memData.swaptotal || 0,\r\n          used: memData.swapused || 0,\r\n          free: memData.swapfree || 0\r\n        }\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to collect RAM metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect SSD metrics\r\n   * Gathers comprehensive storage performance data\r\n   * \r\n   * @returns Promise<SSDMetrics> SSD metrics\r\n   */\r\n  private async collectSSDMetrics(): Promise<SSDMetrics> {\r\n    try {\r\n      const [fsSize, diskIO, blockDevices] = await Promise.all([\r\n        si.fsSize(),\r\n        si.disksIO(),\r\n        si.blockDevices()\r\n      ]);\r\n      \r\n      // Get primary disk (usually the first one)\r\n      const primaryDisk = fsSize[0] || {};\r\n      const primaryBlockDevice = blockDevices[0] || {};\r\n      \r\n      return {\r\n        total: primaryDisk.size || 0,\r\n        used: primaryDisk.used || 0,\r\n        free: primaryDisk.available || 0,\r\n        utilization: Math.round(primaryDisk.use || 0),\r\n        readIOPS: diskIO.rIO || 0,\r\n        writeIOPS: diskIO.wIO || 0,\r\n        readThroughput: (diskIO.rIO_sec || 0) / 1024 / 1024, // Convert to MB/s\r\n        writeThroughput: (diskIO.wIO_sec || 0) / 1024 / 1024, // Convert to MB/s\r\n        health: 100, // Would need SMART data for actual health\r\n        temperature: primaryBlockDevice.temperature || 0\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to collect SSD metrics:', error);\r\n      throw error;\r\n    }\r\n  }  /**\r\n\r\n   * Collect network metrics\r\n   * Gathers comprehensive network performance data\r\n   * \r\n   * @returns Promise<NetworkMetrics> Network metrics\r\n   */\r\n  private async collectNetworkMetrics(): Promise<NetworkMetrics> {\r\n    try {\r\n      const [networkInterfaces, networkStats] = await Promise.all([\r\n        si.networkInterfaces(),\r\n        si.networkStats()\r\n      ]);\r\n      \r\n      const interfaces: NetworkInterface[] = networkInterfaces.map(iface => ({\r\n        name: iface.iface,\r\n        type: iface.type || 'unknown',\r\n        ip: iface.ip4 || '',\r\n        mac: iface.mac || '',\r\n        isUp: !iface.internal && iface.operstate === 'up',\r\n        speed: iface.speed || 0,\r\n        bytesReceived: 0, // Will be updated from networkStats\r\n        bytesSent: 0 // Will be updated from networkStats\r\n      }));\r\n      \r\n      // Update interface statistics\r\n      networkStats.forEach(stat => {\r\n        const iface = interfaces.find(i => i.name === stat.iface);\r\n        if (iface) {\r\n          iface.bytesReceived = stat.rx_bytes || 0;\r\n          iface.bytesSent = stat.tx_bytes || 0;\r\n        }\r\n      });\r\n      \r\n      const totalBytesReceived = networkStats.reduce((sum, stat) => sum + (stat.rx_bytes || 0), 0);\r\n      const totalBytesSent = networkStats.reduce((sum, stat) => sum + (stat.tx_bytes || 0), 0);\r\n      \r\n      // Calculate current speeds (simplified)\r\n      const downloadSpeed = networkStats.reduce((sum, stat) => sum + (stat.rx_sec || 0), 0) / 1024 / 1024 * 8; // Mbps\r\n      const uploadSpeed = networkStats.reduce((sum, stat) => sum + (stat.tx_sec || 0), 0) / 1024 / 1024 * 8; // Mbps\r\n      \r\n      return {\r\n        interfaces,\r\n        totalBytesReceived,\r\n        totalBytesSent,\r\n        downloadSpeed,\r\n        uploadSpeed,\r\n        latency: 0, // Would need ping test for actual latency\r\n        packetLoss: 0 // Would need ping test for packet loss\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to collect network metrics:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analyze metrics and generate alerts\r\n   * Evaluates system metrics against thresholds and creates alerts\r\n   * \r\n   * @returns Promise<void>\r\n   */\r\n  private async analyzeMetricsAndGenerateAlerts(): Promise<void> {\r\n    try {\r\n      const alerts: SystemAlert[] = [];\r\n      \r\n      // Analyze CPU metrics\r\n      if (this.currentMetrics.cpu) {\r\n        const cpu = this.currentMetrics.cpu;\r\n        \r\n        if (cpu.utilization >= this.config.cpuCriticalThreshold) {\r\n          alerts.push(this.createAlert('CPU', 'CRITICAL', \r\n            `CPU utilization critical: ${cpu.utilization}%`, \r\n            cpu.utilization, this.config.cpuCriticalThreshold));\r\n        } else if (cpu.utilization >= this.config.cpuWarningThreshold) {\r\n          alerts.push(this.createAlert('CPU', 'HIGH', \r\n            `CPU utilization high: ${cpu.utilization}%`, \r\n            cpu.utilization, this.config.cpuWarningThreshold));\r\n        }\r\n        \r\n        if (cpu.temperature >= this.config.tempCriticalThreshold) {\r\n          alerts.push(this.createAlert('THERMAL', 'CRITICAL', \r\n            `CPU temperature critical: ${cpu.temperature}°C`, \r\n            cpu.temperature, this.config.tempCriticalThreshold));\r\n        } else if (cpu.temperature >= this.config.tempWarningThreshold) {\r\n          alerts.push(this.createAlert('THERMAL', 'HIGH', \r\n            `CPU temperature high: ${cpu.temperature}°C`, \r\n            cpu.temperature, this.config.tempWarningThreshold));\r\n        }\r\n      }\r\n      \r\n      // Analyze RAM metrics\r\n      if (this.currentMetrics.ram) {\r\n        const ram = this.currentMetrics.ram;\r\n        \r\n        if (ram.utilization >= this.config.ramCriticalThreshold) {\r\n          alerts.push(this.createAlert('RAM', 'CRITICAL', \r\n            `Memory utilization critical: ${ram.utilization}%`, \r\n            ram.utilization, this.config.ramCriticalThreshold));\r\n        } else if (ram.utilization >= this.config.ramWarningThreshold) {\r\n          alerts.push(this.createAlert('RAM', 'HIGH', \r\n            `Memory utilization high: ${ram.utilization}%`, \r\n            ram.utilization, this.config.ramWarningThreshold));\r\n        }\r\n      }\r\n      \r\n      // Analyze SSD metrics\r\n      if (this.currentMetrics.ssd) {\r\n        const ssd = this.currentMetrics.ssd;\r\n        \r\n        if (ssd.utilization >= this.config.ssdCriticalThreshold) {\r\n          alerts.push(this.createAlert('SSD', 'CRITICAL', \r\n            `Storage utilization critical: ${ssd.utilization}%`, \r\n            ssd.utilization, this.config.ssdCriticalThreshold));\r\n        } else if (ssd.utilization >= this.config.ssdWarningThreshold) {\r\n          alerts.push(this.createAlert('SSD', 'HIGH', \r\n            `Storage utilization high: ${ssd.utilization}%`, \r\n            ssd.utilization, this.config.ssdWarningThreshold));\r\n        }\r\n      }\r\n      \r\n      // Process new alerts\r\n      for (const alert of alerts) {\r\n        await this.processAlert(alert);\r\n      }\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to analyze metrics:', error);\r\n    }\r\n  }  /**\r\n\r\n   * Create system alert\r\n   * Creates a new system alert with specified parameters\r\n   * \r\n   * @param type - Alert type\r\n   * @param severity - Alert severity\r\n   * @param message - Alert message\r\n   * @param currentValue - Current metric value\r\n   * @param threshold - Threshold value\r\n   * @returns SystemAlert New alert\r\n   */\r\n  private createAlert(\r\n    type: 'CPU' | 'RAM' | 'SSD' | 'NETWORK' | 'THERMAL',\r\n    severity: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL',\r\n    message: string,\r\n    currentValue: number,\r\n    threshold: number\r\n  ): SystemAlert {\r\n    return {\r\n      id: `${type.toLowerCase()}_${Date.now()}_${Math.random().toString(36).substring(2)}`,\r\n      type,\r\n      severity,\r\n      message,\r\n      currentValue,\r\n      threshold,\r\n      timestamp: new Date(),\r\n      isActive: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Process system alert\r\n   * Handles new alerts and triggers appropriate responses\r\n   * \r\n   * @param alert - System alert to process\r\n   * @returns Promise<void>\r\n   */\r\n  private async processAlert(alert: SystemAlert): Promise<void> {\r\n    try {\r\n      // Check if similar alert already exists\r\n      const existingAlert = Array.from(this.activeAlerts.values())\r\n        .find(a => a.type === alert.type && a.severity === alert.severity && a.isActive);\r\n      \r\n      if (existingAlert) {\r\n        // Update existing alert\r\n        existingAlert.currentValue = alert.currentValue;\r\n        existingAlert.timestamp = alert.timestamp;\r\n        return;\r\n      }\r\n      \r\n      // Add new alert\r\n      this.activeAlerts.set(alert.id, alert);\r\n      \r\n      // Log alert\r\n      logger.warn(`⚠️ System Alert: ${alert.message}`, {\r\n        type: alert.type,\r\n        severity: alert.severity,\r\n        currentValue: alert.currentValue,\r\n        threshold: alert.threshold\r\n      });\r\n      \r\n      // Create audit entry for critical alerts\r\n      if (alert.severity === 'CRITICAL') {\r\n        await auditService.createAuditEntry({\r\n          auditId: `sys_alert_${alert.id}`,\r\n          eventType: 'CRITICAL_SYSTEM_ALERT',\r\n          actor: 'SYSTEM_MONITOR',\r\n          resource: `HARDWARE_${alert.type}`,\r\n          action: 'GENERATE_ALERT',\r\n          result: 'SUCCESS',\r\n          timestamp: alert.timestamp,\r\n          auditData: {\r\n            alertType: alert.type,\r\n            severity: alert.severity,\r\n            currentValue: alert.currentValue,\r\n            threshold: alert.threshold\r\n          }\r\n        });\r\n      }\r\n      \r\n      // TODO: Send notifications for critical alerts\r\n      // This would integrate with notification service\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to process alert:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Log system status\r\n   * Logs current system metrics for monitoring\r\n   */\r\n  private logSystemStatus(): void {\r\n    const { cpu, ram, ssd, network } = this.currentMetrics;\r\n    \r\n    logger.debug('📊 System Status Update', {\r\n      cpu: cpu ? {\r\n        utilization: cpu.utilization,\r\n        temperature: cpu.temperature,\r\n        frequency: cpu.frequency\r\n      } : null,\r\n      ram: ram ? {\r\n        utilization: ram.utilization,\r\n        used: Math.round(ram.used / 1024 / 1024 / 1024 * 100) / 100, // GB\r\n        total: Math.round(ram.total / 1024 / 1024 / 1024 * 100) / 100 // GB\r\n      } : null,\r\n      ssd: ssd ? {\r\n        utilization: ssd.utilization,\r\n        used: Math.round(ssd.used / 1024 / 1024 / 1024 * 100) / 100, // GB\r\n        total: Math.round(ssd.total / 1024 / 1024 / 1024 * 100) / 100 // GB\r\n      } : null,\r\n      network: network ? {\r\n        downloadSpeed: Math.round(network.downloadSpeed * 100) / 100,\r\n        uploadSpeed: Math.round(network.uploadSpeed * 100) / 100,\r\n        activeInterfaces: network.interfaces.filter(i => i.isUp).length\r\n      } : null,\r\n      activeAlerts: this.activeAlerts.size\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get current system health status\r\n   * Returns comprehensive system health information\r\n   * \r\n   * @returns Promise<SystemHealthStatus> System health status\r\n   */\r\n  public async getSystemHealthStatus(): Promise<SystemHealthStatus> {\r\n    try {\r\n      const { cpu, ram, ssd, network } = this.currentMetrics;\r\n      \r\n      // Calculate component health scores\r\n      const cpuHealth = this.calculateComponentHealth(\r\n        cpu?.utilization || 0, \r\n        this.config.cpuWarningThreshold, \r\n        this.config.cpuCriticalThreshold,\r\n        'CPU utilization'\r\n      );\r\n      \r\n      const ramHealth = this.calculateComponentHealth(\r\n        ram?.utilization || 0, \r\n        this.config.ramWarningThreshold, \r\n        this.config.ramCriticalThreshold,\r\n        'Memory utilization'\r\n      );\r\n      \r\n      const ssdHealth = this.calculateComponentHealth(\r\n        ssd?.utilization || 0, \r\n        this.config.ssdWarningThreshold, \r\n        this.config.ssdCriticalThreshold,\r\n        'Storage utilization'\r\n      );\r\n      \r\n      const thermalHealth = this.calculateComponentHealth(\r\n        cpu?.temperature || 0, \r\n        this.config.tempWarningThreshold, \r\n        this.config.tempCriticalThreshold,\r\n        'CPU temperature'\r\n      );\r\n      \r\n      const networkHealth: HealthStatus = {\r\n        score: network?.interfaces.filter(i => i.isUp).length > 0 ? 100 : 0,\r\n        status: network?.interfaces.filter(i => i.isUp).length > 0 ? 'EXCELLENT' : 'CRITICAL',\r\n        message: `${network?.interfaces.filter(i => i.isUp).length || 0} active interfaces`,\r\n        value: network?.interfaces.filter(i => i.isUp).length || 0,\r\n        thresholds: { warning: 1, critical: 0 }\r\n      };\r\n      \r\n      // Calculate overall health score\r\n      const overallHealth = Math.round(\r\n        (cpuHealth.score + ramHealth.score + ssdHealth.score + thermalHealth.score + networkHealth.score) / 5\r\n      );\r\n      \r\n      // Generate recommendations\r\n      const recommendations: string[] = [];\r\n      if (cpuHealth.score < 70) recommendations.push('Consider reducing CPU-intensive operations');\r\n      if (ramHealth.score < 70) recommendations.push('Consider freeing up memory or adding more RAM');\r\n      if (ssdHealth.score < 70) recommendations.push('Consider cleaning up disk space');\r\n      if (thermalHealth.score < 70) recommendations.push('Check system cooling and ventilation');\r\n      if (networkHealth.score < 70) recommendations.push('Check network connectivity');\r\n      \r\n      return {\r\n        overallHealth,\r\n        components: {\r\n          cpu: cpuHealth,\r\n          ram: ramHealth,\r\n          ssd: ssdHealth,\r\n          network: networkHealth,\r\n          thermal: thermalHealth\r\n        },\r\n        alerts: Array.from(this.activeAlerts.values()).filter(a => a.isActive),\r\n        recommendations,\r\n        lastUpdated: new Date()\r\n      };\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to get system health status:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate component health score\r\n   * Determines health score based on current value and thresholds\r\n   * \r\n   * @param currentValue - Current metric value\r\n   * @param warningThreshold - Warning threshold\r\n   * @param criticalThreshold - Critical threshold\r\n   * @param description - Component description\r\n   * @returns HealthStatus Component health status\r\n   */\r\n  private calculateComponentHealth(\r\n    currentValue: number,\r\n    warningThreshold: number,\r\n    criticalThreshold: number,\r\n    description: string\r\n  ): HealthStatus {\r\n    let score: number;\r\n    let status: 'EXCELLENT' | 'GOOD' | 'WARNING' | 'CRITICAL';\r\n    let message: string;\r\n    \r\n    if (currentValue >= criticalThreshold) {\r\n      score = Math.max(0, 100 - ((currentValue - criticalThreshold) / criticalThreshold) * 100);\r\n      status = 'CRITICAL';\r\n      message = `${description} is critical (${currentValue})`;\r\n    } else if (currentValue >= warningThreshold) {\r\n      score = Math.max(30, 100 - ((currentValue - warningThreshold) / (criticalThreshold - warningThreshold)) * 70);\r\n      status = 'WARNING';\r\n      message = `${description} is elevated (${currentValue})`;\r\n    } else if (currentValue >= warningThreshold * 0.7) {\r\n      score = Math.max(70, 100 - (currentValue / warningThreshold) * 30);\r\n      status = 'GOOD';\r\n      message = `${description} is good (${currentValue})`;\r\n    } else {\r\n      score = 100;\r\n      status = 'EXCELLENT';\r\n      message = `${description} is excellent (${currentValue})`;\r\n    }\r\n    \r\n    return {\r\n      score: Math.round(score),\r\n      status,\r\n      message,\r\n      value: currentValue,\r\n      thresholds: {\r\n        warning: warningThreshold,\r\n        critical: criticalThreshold\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Validate system requirements\r\n   * Checks if system meets minimum requirements for trading\r\n   * \r\n   * @returns Promise<{ meetsRequirements: boolean; warnings: string[] }> Validation result\r\n   */\r\n  public async validateSystemRequirements(): Promise<{ meetsRequirements: boolean; warnings: string[] }> {\r\n    try {\r\n      const warnings: string[] = [];\r\n      let meetsRequirements = true;\r\n      \r\n      const { cpu, ram, ssd } = this.currentMetrics;\r\n      \r\n      // Check CPU requirements (i5 or better)\r\n      if (cpu && !cpu.brand.toLowerCase().includes('i5') && !cpu.brand.toLowerCase().includes('i7')) {\r\n        warnings.push(`CPU may not meet requirements: ${cpu.brand} (recommended: Intel i5 or better)`);\r\n      }\r\n      \r\n      // Check RAM requirements (12GB minimum)\r\n      if (ram && ram.total < 12 * 1024 * 1024 * 1024) {\r\n        warnings.push(`RAM below recommended: ${Math.round(ram.total / 1024 / 1024 / 1024)}GB (recommended: 12GB)`);\r\n        meetsRequirements = false;\r\n      }\r\n      \r\n      // Check SSD requirements (256GB minimum)\r\n      if (ssd && ssd.total < 256 * 1024 * 1024 * 1024) {\r\n        warnings.push(`Storage below recommended: ${Math.round(ssd.total / 1024 / 1024 / 1024)}GB (recommended: 256GB)`);\r\n      }\r\n      \r\n      // Check available storage (at least 50GB free)\r\n      if (ssd && ssd.free < 50 * 1024 * 1024 * 1024) {\r\n        warnings.push(`Low storage space: ${Math.round(ssd.free / 1024 / 1024 / 1024)}GB free (recommended: 50GB+)`);\r\n        meetsRequirements = false;\r\n      }\r\n      \r\n      return { meetsRequirements, warnings };\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Failed to validate system requirements:', error);\r\n      return { meetsRequirements: false, warnings: ['System validation failed'] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current system metrics\r\n   * Returns the most recent system metrics\r\n   * \r\n   * @returns Current system metrics\r\n   */\r\n  public getCurrentMetrics(): {\r\n    cpu?: CPUMetrics;\r\n    ram?: RAMMetrics;\r\n    ssd?: SSDMetrics;\r\n    network?: NetworkMetrics;\r\n  } {\r\n    return { ...this.currentMetrics };\r\n  }\r\n\r\n  /**\r\n   * Stop hardware monitoring\r\n   * Stops continuous monitoring and cleans up resources\r\n   */\r\n  public stopHardwareMonitoring(): void {\r\n    if (this.monitoringInterval) {\r\n      clearInterval(this.monitoringInterval);\r\n      this.monitoringInterval = null;\r\n      logger.info('🛑 Hardware monitoring stopped');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize performance optimization\r\n   * Sets up performance optimization integration\r\n   */\r\n  public async initializePerformanceOptimization(): Promise<void> {\r\n    logger.info('⚡ Initializing performance optimization integration...');\r\n    // Performance optimization is handled by PerformanceOptimizer class\r\n    // This method provides integration point for system monitoring\r\n    logger.info('✅ Performance optimization integration ready');\r\n  }\r\n\r\n  /**\r\n   * Setup thermal management\r\n   * Sets up thermal monitoring integration\r\n   */\r\n  public async setupThermalManagement(): Promise<void> {\r\n    logger.info('🌡️ Setting up thermal management integration...');\r\n    // Thermal management is handled by PerformanceOptimizer class\r\n    // This method provides integration point for system monitoring\r\n    logger.info('✅ Thermal management integration ready');\r\n  }\r\n\r\n  /**\r\n   * Get system monitor status\r\n   * Returns current status for monitoring\r\n   * \r\n   * @returns Object containing status information\r\n   */\r\n  public getStatus(): {\r\n    isMonitoring: boolean;\r\n    activeAlerts: number;\r\n    lastScanTime: Date | null;\r\n    monitoringInterval: number;\r\n    timestamp: number;\r\n  } {\r\n    return {\r\n      isMonitoring: this.monitoringInterval !== null,\r\n      activeAlerts: this.activeAlerts.size,\r\n      lastScanTime: null, // Would track last scan time\r\n      monitoringInterval: this.config.monitoringIntervalMs,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}\r\n\r\n// =============================================================================\r\n// INTEL NUC SYSTEM MONITORING NOTES\r\n// =============================================================================\r\n// 1. Continuous monitoring of CPU, RAM, SSD, and network performance\r\n// 2. Real-time alerting for performance issues and hardware problems\r\n// 3. Thermal monitoring to prevent overheating during intensive trading\r\n// 4. Storage monitoring to prevent disk space issues\r\n// 5. Network monitoring for connectivity and performance issues\r\n// 6. System health scoring for overall system assessment\r\n// 7. Hardware requirement validation for optimal trading performance\r\n// 8. Comprehensive logging and audit trails for all monitoring activities\r\n// ============================================================================="],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,SAAAA,ccAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAAgC,EAAA;AAAA;AAAA,CAAAjC,aAAA,GAAAoB,CAAA,QAAAc,YAAA,CAAAC,OAAA;AACA,MAAAC,QAAA;AAAA;AAAA,CAAApC,aAAA,GAAAoB,CAAA,QAAAe,OAAA;AACA,MAAAE,eAAA;AAAA;AAAA,CAAArC,aAAA,GAAAoB,CAAA,QAAAe,OAAA;AAsLA;;;;AAIA,MAAaG,aAAa;EACxB;EACQC,kBAAkB;EAAA;EAAA,CAAAvC,aAAA,GAAAoB,CAAA,QAA0B,IAAI;EAExD;EACQoB,cAAc;EAAA;EAAA,CAAAxC,aAAA,GAAAoB,CAAA,QAKlB,EAAE;EAEN;EACQqB,YAAY;EAAA;EAAA,CAAAzC,aAAA,GAAAoB,CAAA,QAA6B,IAAIsB,GAAG,EAAE;EAE1D;EACQC,MAAM;EAAA;EAAA,CAAA3C,aAAA,GAAAoB,CAAA,QAAG;IACfwB,oBAAoB,EAAE,KAAK;IAAE;IAC7BC,mBAAmB,EAAEC,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACC,2BAA2B;IAAA;IAAA,CAAAjD,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IAC9E4B,oBAAoB,EAAEJ,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACG,4BAA4B;IAAA;IAAA,CAAAnD,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IAChF8B,mBAAmB,EAAEN,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACK,8BAA8B;IAAA;IAAA,CAAArD,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IACjFgC,oBAAoB,EAAER,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACO,+BAA+B;IAAA;IAAA,CAAAvD,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IACnFkC,mBAAmB,EAAEV,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACS,4BAA4B;IAAA;IAAA,CAAAzD,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IAC/EoC,oBAAoB,EAAEZ,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACW,6BAA6B;IAAA;IAAA,CAAA3D,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IACjFsC,oBAAoB,EAAEd,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACa,0BAA0B;IAAA;IAAA,CAAA7D,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IAC9EwC,qBAAqB,EAAEhB,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACe,2BAA2B;IAAA;IAAA,CAAA/D,aAAA,GAAAsB,CAAA,WAAI,IAAI,EAAC;IAChF0C,qBAAqB,EAAElB,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACiB,0BAA0B;IAAA;IAAA,CAAAjE,aAAA,GAAAsB,CAAA,WAAI,KAAK,EAAC;IAChF4C,sBAAsB,EAAEpB,QAAQ;IAAC;IAAA,CAAA9C,aAAA,GAAAsB,CAAA,WAAAyB,OAAO,CAACC,GAAG,CAACmB,2BAA2B;IAAA;IAAA,CAAAnE,aAAA,GAAAsB,CAAA,WAAI,KAAK;GAClF;EAED8C,YAAA;IAAA;IAAApE,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACEgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,8CAA8C,CAAC;EAC7D;EAEA;;;;;;EAMO,MAAMC,uBAAuBA,CAAA;IAAA;IAAAvE,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAClC,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACFgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,8CAA8C,CAAC;MAE3D;MAAA;MAAAtE,aAAA,GAAAoB,CAAA;MACA,MAAM,IAAI,CAACoD,iBAAiB,EAAE;MAE9B;MAAA;MAAAxE,aAAA,GAAAoB,CAAA;MACA,IAAI,CAACmB,kBAAkB,GAAGkC,WAAW,CAAC,YAAW;QAAA;QAAAzE,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAC/C,IAAI;UAAA;UAAApB,aAAA,GAAAoB,CAAA;UACF,MAAM,IAAI,CAACoD,iBAAiB,EAAE;QAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;UAAA;UAAA1E,aAAA,GAAAoB,CAAA;UACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC,EAAE,IAAI,CAAC/B,MAAM,CAACC,oBAAoB,CAAC;MAAC;MAAA5C,aAAA,GAAAoB,CAAA;MAErCgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,4CAA4C,CAAC;MAEzD;MAAA;MAAAtE,aAAA,GAAAoB,CAAA;MACA,MAAMiB,eAAA,CAAAsC,YAAY,CAACC,gBAAgB,CAAC;QAClCC,OAAO,EAAE,iBAAiBC,IAAI,CAACC,GAAG,EAAE,EAAE;QACtCC,SAAS,EAAE,yBAAyB;QACpCC,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAE,kBAAkB;QAC5BC,MAAM,EAAE,kBAAkB;QAC1BC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE,IAAIP,IAAI,EAAE;QACrBQ,SAAS,EAAE;UAAE/C,kBAAkB,EAAE,IAAI,CAACI,MAAM,CAACC;QAAoB;OAClE,CAAC;IAEJ,CAAC,CAAC,OAAO8B,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MAC9D,MAAM,IAAImE,KAAK,CAAC,2CAA2C,CAAC;IAC9D;EACF,CAAC,CAAE;;;;;;EAOK,MAAMf,iBAAiBA,CAAA;IAAA;IAAAxE,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC7B,IAAI;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACF;MACA,IAAI,CAACoB,cAAc,CAACgD,GAAG,GAAG,MAAM,IAAI,CAACC,iBAAiB,EAAE;MAExD;MAAA;MAAAzF,aAAA,GAAAoB,CAAA;MACA,IAAI,CAACoB,cAAc,CAACkD,GAAG,GAAG,MAAM,IAAI,CAACC,iBAAiB,EAAE;MAExD;MAAA;MAAA3F,aAAA,GAAAoB,CAAA;MACA,IAAI,CAACoB,cAAc,CAACoD,GAAG,GAAG,MAAM,IAAI,CAACC,iBAAiB,EAAE;MAExD;MAAA;MAAA7F,aAAA,GAAAoB,CAAA;MACA,IAAI,CAACoB,cAAc,CAACsD,OAAO,GAAG,MAAM,IAAI,CAACC,qBAAqB,EAAE;MAEhE;MAAA;MAAA/F,aAAA,GAAAoB,CAAA;MACA,MAAM,IAAI,CAAC4E,+BAA+B,EAAE;MAE5C;MAAA;MAAAhG,aAAA,GAAAoB,CAAA;MACA,IAAI,CAAC6E,eAAe,EAAE;IAExB,CAAC,CAAC,OAAOvB,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC9C;EACF;EAEA;;;;;;EAMQ,MAAMe,iBAAiBA,CAAA;IAAA;IAAAzF,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC7B,IAAI;MACF,MAAM,CAAC8E,OAAO,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,CAAC;MAAA;MAAA,CAAArG,aAAA,GAAAoB,CAAA,QAAG,MAAMkF,OAAO,CAACC,GAAG,CAAC,CACnEtE,EAAE,CAACuD,GAAG,EAAE,EACRvD,EAAE,CAACkE,WAAW,EAAE,EAChBlE,EAAE,CAACuE,cAAc,EAAE,EACnBvE,EAAE,CAACoE,SAAS,EAAE,CACf,CAAC;MAAC;MAAArG,aAAA,GAAAoB,CAAA;MAEH,OAAO;QACLqF,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACR,WAAW,CAACA,WAAW,CAAC;QAChDS,WAAW;QAAE;QAAA,CAAA5G,aAAA,GAAAsB,CAAA,WAAA8E,OAAO,CAACS,IAAI;QAAA;QAAA,CAAA7G,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC9BwF,SAAS;QAAE;QAAA,CAAA9G,aAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACa,KAAK;QAAA;QAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC7B0F,WAAW,EAAE;QAAC;QAAA,CAAAhH,aAAA,GAAAsB,CAAA,WAAA6E,WAAW,CAACc,OAAO;QAAA;QAAA,CAAAjH,aAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;QACvC+E,SAAS;QAAE;QAAA,CAAArG,aAAA,GAAAsB,CAAA,WAAA+E,SAAS,CAACE,GAAG;QAAA;QAAA,CAAAvG,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC7B4F,KAAK,EAAE;UACLC,QAAQ;UAAE;UAAA,CAAAnH,aAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACkB,aAAa;UAAA;UAAA,CAAApH,aAAA,GAAAsB,CAAA,WAAI,CAAC;UACpC+F,OAAO;UAAE;UAAA,CAAArH,aAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACgB,KAAK;UAAA;UAAA,CAAAlH,aAAA,GAAAsB,CAAA,WAAI,CAAC;SAC5B;QACDgG,KAAK;QAAE;QAAA,CAAAtH,aAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACoB,KAAK;QAAA;QAAA,CAAAtH,aAAA,GAAAsB,CAAA,WAAI,SAAS;QACjCyF,KAAK;QAAE;QAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACa,KAAK;QAAA;QAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAI,CAAC;OAC1B;IAEH,CAAC,CAAC,OAAOoD,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MACxD,MAAMsD,KAAK;IACb;EACF;EAEA;;;;;;EAMQ,MAAMiB,iBAAiBA,CAAA;IAAA;IAAA3F,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC7B,IAAI;MACF,MAAMmG,OAAO;MAAA;MAAA,CAAAvH,aAAA,GAAAoB,CAAA,QAAG,MAAMa,EAAE,CAACuF,GAAG,EAAE;MAAC;MAAAxH,aAAA,GAAAoB,CAAA;MAE/B,OAAO;QACLqG,KAAK,EAAEF,OAAO,CAACE,KAAK;QACpBC,IAAI,EAAEH,OAAO,CAACG,IAAI;QAClBC,IAAI,EAAEJ,OAAO,CAACI,IAAI;QAClBlB,WAAW,EAAEC,IAAI,CAACC,KAAK,CAAEY,OAAO,CAACG,IAAI,GAAGH,OAAO,CAACE,KAAK,GAAI,GAAG,CAAC;QAC7DG,MAAM;QAAE;QAAA,CAAA5H,aAAA,GAAAsB,CAAA,WAAAiG,OAAO,CAACK,MAAM;QAAA;QAAA,CAAA5H,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC3BuG,OAAO;QAAE;QAAA,CAAA7H,aAAA,GAAAsB,CAAA,WAAAiG,OAAO,CAACM,OAAO;QAAA;QAAA,CAAA7H,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC7BwG,SAAS,EAAEP,OAAO,CAACO,SAAS;QAC5BC,IAAI,EAAE;UACJN,KAAK;UAAE;UAAA,CAAAzH,aAAA,GAAAsB,CAAA,WAAAiG,OAAO,CAACS,SAAS;UAAA;UAAA,CAAAhI,aAAA,GAAAsB,CAAA,WAAI,CAAC;UAC7BoG,IAAI;UAAE;UAAA,CAAA1H,aAAA,GAAAsB,CAAA,WAAAiG,OAAO,CAACU,QAAQ;UAAA;UAAA,CAAAjI,aAAA,GAAAsB,CAAA,WAAI,CAAC;UAC3BqG,IAAI;UAAE;UAAA,CAAA3H,aAAA,GAAAsB,CAAA,WAAAiG,OAAO,CAACW,QAAQ;UAAA;UAAA,CAAAlI,aAAA,GAAAsB,CAAA,WAAI,CAAC;;OAE9B;IAEH,CAAC,CAAC,OAAOoD,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MACxD,MAAMsD,KAAK;IACb;EACF;EAEA;;;;;;EAMQ,MAAMmB,iBAAiBA,CAAA;IAAA;IAAA7F,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC7B,IAAI;MACF,MAAM,CAAC+G,MAAM,EAAEC,MAAM,EAAEC,YAAY,CAAC;MAAA;MAAA,CAAArI,aAAA,GAAAoB,CAAA,QAAG,MAAMkF,OAAO,CAACC,GAAG,CAAC,CACvDtE,EAAE,CAACkG,MAAM,EAAE,EACXlG,EAAE,CAACqG,OAAO,EAAE,EACZrG,EAAE,CAACoG,YAAY,EAAE,CAClB,CAAC;MAEF;MACA,MAAME,WAAW;MAAA;MAAA,CAAAvI,aAAA,GAAAoB,CAAA;MAAG;MAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAA6G,MAAM,CAAC,CAAC,CAAC;MAAA;MAAA,CAAAnI,aAAA,GAAAsB,CAAA,WAAI,EAAE;MACnC,MAAMkH,kBAAkB;MAAA;MAAA,CAAAxI,aAAA,GAAAoB,CAAA;MAAG;MAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAA+G,YAAY,CAAC,CAAC,CAAC;MAAA;MAAA,CAAArI,aAAA,GAAAsB,CAAA,WAAI,EAAE;MAAC;MAAAtB,aAAA,GAAAoB,CAAA;MAEjD,OAAO;QACLqG,KAAK;QAAE;QAAA,CAAAzH,aAAA,GAAAsB,CAAA,WAAAiH,WAAW,CAACE,IAAI;QAAA;QAAA,CAAAzI,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC5BoG,IAAI;QAAE;QAAA,CAAA1H,aAAA,GAAAsB,CAAA,WAAAiH,WAAW,CAACb,IAAI;QAAA;QAAA,CAAA1H,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC3BqG,IAAI;QAAE;QAAA,CAAA3H,aAAA,GAAAsB,CAAA,WAAAiH,WAAW,CAACT,SAAS;QAAA;QAAA,CAAA9H,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAChCmF,WAAW,EAAEC,IAAI,CAACC,KAAK;QAAC;QAAA,CAAA3G,aAAA,GAAAsB,CAAA,WAAAiH,WAAW,CAACG,GAAG;QAAA;QAAA,CAAA1I,aAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;QAC7CqH,QAAQ;QAAE;QAAA,CAAA3I,aAAA,GAAAsB,CAAA,WAAA8G,MAAM,CAACQ,GAAG;QAAA;QAAA,CAAA5I,aAAA,GAAAsB,CAAA,WAAI,CAAC;QACzBuH,SAAS;QAAE;QAAA,CAAA7I,aAAA,GAAAsB,CAAA,WAAA8G,MAAM,CAACU,GAAG;QAAA;QAAA,CAAA9I,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC1ByH,cAAc,EAAE;QAAC;QAAA,CAAA/I,aAAA,GAAAsB,CAAA,WAAA8G,MAAM,CAACY,OAAO;QAAA;QAAA,CAAAhJ,aAAA,GAAAsB,CAAA,WAAI,CAAC,KAAI,IAAI,GAAG,IAAI;QAAE;QACrD2H,eAAe,EAAE;QAAC;QAAA,CAAAjJ,aAAA,GAAAsB,CAAA,WAAA8G,MAAM,CAACc,OAAO;QAAA;QAAA,CAAAlJ,aAAA,GAAAsB,CAAA,WAAI,CAAC,KAAI,IAAI,GAAG,IAAI;QAAE;QACtD6H,MAAM,EAAE,GAAG;QAAE;QACbvC,WAAW;QAAE;QAAA,CAAA5G,aAAA,GAAAsB,CAAA,WAAAkH,kBAAkB,CAAC5B,WAAW;QAAA;QAAA,CAAA5G,aAAA,GAAAsB,CAAA,WAAI,CAAC;OACjD;IAEH,CAAC,CAAC,OAAOoD,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MACxD,MAAMsD,KAAK;IACb;EACF,CAAC,CAAE;;;;;;EAOK,MAAMqB,qBAAqBA,CAAA;IAAA;IAAA/F,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACjC,IAAI;MACF,MAAM,CAACgI,iBAAiB,EAAEC,YAAY,CAAC;MAAA;MAAA,CAAArJ,aAAA,GAAAoB,CAAA,QAAG,MAAMkF,OAAO,CAACC,GAAG,CAAC,CAC1DtE,EAAE,CAACmH,iBAAiB,EAAE,EACtBnH,EAAE,CAACoH,YAAY,EAAE,CAClB,CAAC;MAEF,MAAMC,UAAU;MAAA;MAAA,CAAAtJ,aAAA,GAAAoB,CAAA,QAAuBgI,iBAAiB,CAACG,GAAG,CAACC,KAAK,IAAK;QAAA;QAAAxJ,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA;UACrEP,IAAI,EAAE2I,KAAK,CAACA,KAAK;UACjBvI,IAAI;UAAE;UAAA,CAAAjB,aAAA,GAAAsB,CAAA,WAAAkI,KAAK,CAACvI,IAAI;UAAA;UAAA,CAAAjB,aAAA,GAAAsB,CAAA,WAAI,SAAS;UAC7BmI,EAAE;UAAE;UAAA,CAAAzJ,aAAA,GAAAsB,CAAA,WAAAkI,KAAK,CAACE,GAAG;UAAA;UAAA,CAAA1J,aAAA,GAAAsB,CAAA,WAAI,EAAE;UACnBqI,GAAG;UAAE;UAAA,CAAA3J,aAAA,GAAAsB,CAAA,WAAAkI,KAAK,CAACG,GAAG;UAAA;UAAA,CAAA3J,aAAA,GAAAsB,CAAA,WAAI,EAAE;UACpBsI,IAAI;UAAE;UAAA,CAAA5J,aAAA,GAAAsB,CAAA,YAACkI,KAAK,CAACK,QAAQ;UAAA;UAAA,CAAA7J,aAAA,GAAAsB,CAAA,WAAIkI,KAAK,CAACM,SAAS,KAAK,IAAI;UACjD/C,KAAK;UAAE;UAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAAkI,KAAK,CAACzC,KAAK;UAAA;UAAA,CAAA/G,aAAA,GAAAsB,CAAA,WAAI,CAAC;UACvByI,aAAa,EAAE,CAAC;UAAE;UAClBC,SAAS,EAAE,CAAC,CAAC;SACd;OAAC,CAAC;MAEH;MAAA;MAAAhK,aAAA,GAAAoB,CAAA;MACAiI,YAAY,CAACY,OAAO,CAACC,IAAI,IAAG;QAAA;QAAAlK,aAAA,GAAAqB,CAAA;QAC1B,MAAMmI,KAAK;QAAA;QAAA,CAAAxJ,aAAA,GAAAoB,CAAA,QAAGkI,UAAU,CAACa,IAAI,CAACC,CAAC,IAAI;UAAA;UAAApK,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgJ,CAAC,CAACvJ,IAAI,KAAKqJ,IAAI,CAACV,KAAK;QAAL,CAAK,CAAC;QAAC;QAAAxJ,aAAA,GAAAoB,CAAA;QAC1D,IAAIoI,KAAK,EAAE;UAAA;UAAAxJ,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACToI,KAAK,CAACO,aAAa;UAAG;UAAA,CAAA/J,aAAA,GAAAsB,CAAA,WAAA4I,IAAI,CAACG,QAAQ;UAAA;UAAA,CAAArK,aAAA,GAAAsB,CAAA,WAAI,CAAC;UAAC;UAAAtB,aAAA,GAAAoB,CAAA;UACzCoI,KAAK,CAACQ,SAAS;UAAG;UAAA,CAAAhK,aAAA,GAAAsB,CAAA,WAAA4I,IAAI,CAACI,QAAQ;UAAA;UAAA,CAAAtK,aAAA,GAAAsB,CAAA,WAAI,CAAC;QACtC,CAAC;QAAA;QAAA;UAAAtB,aAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC;MAEF,MAAMiJ,kBAAkB;MAAA;MAAA,CAAAvK,aAAA,GAAAoB,CAAA,QAAGiI,YAAY,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAK;QAAA;QAAAlK,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAqJ,GAAG;QAAI;QAAA,CAAAzK,aAAA,GAAAsB,CAAA,WAAA4I,IAAI,CAACG,QAAQ;QAAA;QAAA,CAAArK,aAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;MAAD,CAAC,EAAE,CAAC,CAAC;MAC5F,MAAMoJ,cAAc;MAAA;MAAA,CAAA1K,aAAA,GAAAoB,CAAA,QAAGiI,YAAY,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAK;QAAA;QAAAlK,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAqJ,GAAG;QAAI;QAAA,CAAAzK,aAAA,GAAAsB,CAAA,WAAA4I,IAAI,CAACI,QAAQ;QAAA;QAAA,CAAAtK,aAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;MAAD,CAAC,EAAE,CAAC,CAAC;MAExF;MACA,MAAMqJ,aAAa;MAAA;MAAA,CAAA3K,aAAA,GAAAoB,CAAA,QAAGiI,YAAY,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAK;QAAA;QAAAlK,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAqJ,GAAG;QAAI;QAAA,CAAAzK,aAAA,GAAAsB,CAAA,WAAA4I,IAAI,CAACU,MAAM;QAAA;QAAA,CAAA5K,aAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;MAAD,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,EAAC,CAAC;MACzG,MAAMuJ,WAAW;MAAA;MAAA,CAAA7K,aAAA,GAAAoB,CAAA,QAAGiI,YAAY,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAK;QAAA;QAAAlK,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAAqJ,GAAG;QAAI;QAAA,CAAAzK,aAAA,GAAAsB,CAAA,WAAA4I,IAAI,CAACY,MAAM;QAAA;QAAA,CAAA9K,aAAA,GAAAsB,CAAA,WAAI,CAAC,EAAC;MAAD,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,EAAC,CAAC;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAEvG,OAAO;QACLkI,UAAU;QACViB,kBAAkB;QAClBG,cAAc;QACdC,aAAa;QACbE,WAAW;QACXE,OAAO,EAAE,CAAC;QAAE;QACZC,UAAU,EAAE,CAAC,CAAC;OACf;IAEH,CAAC,CAAC,OAAOtG,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MAC5D,MAAMsD,KAAK;IACb;EACF;EAEA;;;;;;EAMQ,MAAMsB,+BAA+BA,CAAA;IAAA;IAAAhG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC3C,IAAI;MACF,MAAM6J,MAAM;MAAA;MAAA,CAAAjL,aAAA,GAAAoB,CAAA,SAAkB,EAAE;MAEhC;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACA,IAAI,IAAI,CAACoB,cAAc,CAACgD,GAAG,EAAE;QAAA;QAAAxF,aAAA,GAAAsB,CAAA;QAC3B,MAAMkE,GAAG;QAAA;QAAA,CAAAxF,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACoB,cAAc,CAACgD,GAAG;QAAC;QAAAxF,aAAA,GAAAoB,CAAA;QAEpC,IAAIoE,GAAG,CAACiB,WAAW,IAAI,IAAI,CAAC9D,MAAM,CAACO,oBAAoB,EAAE;UAAA;UAAAlD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACvD6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,UAAU,EAC5C,6BAA6B3F,GAAG,CAACiB,WAAW,GAAG,EAC/CjB,GAAG,CAACiB,WAAW,EAAE,IAAI,CAAC9D,MAAM,CAACO,oBAAoB,CAAC,CAAC;QACvD,CAAC,MAAM;UAAA;UAAAlD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAAA,IAAIoE,GAAG,CAACiB,WAAW,IAAI,IAAI,CAAC9D,MAAM,CAACE,mBAAmB,EAAE;YAAA;YAAA7C,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAC7D6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,MAAM,EACxC,yBAAyB3F,GAAG,CAACiB,WAAW,GAAG,EAC3CjB,GAAG,CAACiB,WAAW,EAAE,IAAI,CAAC9D,MAAM,CAACE,mBAAmB,CAAC,CAAC;UACtD,CAAC;UAAA;UAAA;YAAA7C,aAAA,GAAAsB,CAAA;UAAA;QAAD;QAAC;QAAAtB,aAAA,GAAAoB,CAAA;QAED,IAAIoE,GAAG,CAACoB,WAAW,IAAI,IAAI,CAACjE,MAAM,CAACmB,qBAAqB,EAAE;UAAA;UAAA9D,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACxD6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,SAAS,EAAE,UAAU,EAChD,6BAA6B3F,GAAG,CAACoB,WAAW,IAAI,EAChDpB,GAAG,CAACoB,WAAW,EAAE,IAAI,CAACjE,MAAM,CAACmB,qBAAqB,CAAC,CAAC;QACxD,CAAC,MAAM;UAAA;UAAA9D,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAAA,IAAIoE,GAAG,CAACoB,WAAW,IAAI,IAAI,CAACjE,MAAM,CAACiB,oBAAoB,EAAE;YAAA;YAAA5D,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAC9D6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,SAAS,EAAE,MAAM,EAC5C,yBAAyB3F,GAAG,CAACoB,WAAW,IAAI,EAC5CpB,GAAG,CAACoB,WAAW,EAAE,IAAI,CAACjE,MAAM,CAACiB,oBAAoB,CAAC,CAAC;UACvD,CAAC;UAAA;UAAA;YAAA5D,aAAA,GAAAsB,CAAA;UAAA;QAAD;MACF,CAAC;MAAA;MAAA;QAAAtB,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA,IAAI,IAAI,CAACoB,cAAc,CAACkD,GAAG,EAAE;QAAA;QAAA1F,aAAA,GAAAsB,CAAA;QAC3B,MAAMoE,GAAG;QAAA;QAAA,CAAA1F,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACoB,cAAc,CAACkD,GAAG;QAAC;QAAA1F,aAAA,GAAAoB,CAAA;QAEpC,IAAIsE,GAAG,CAACe,WAAW,IAAI,IAAI,CAAC9D,MAAM,CAACW,oBAAoB,EAAE;UAAA;UAAAtD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACvD6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,UAAU,EAC5C,gCAAgCzF,GAAG,CAACe,WAAW,GAAG,EAClDf,GAAG,CAACe,WAAW,EAAE,IAAI,CAAC9D,MAAM,CAACW,oBAAoB,CAAC,CAAC;QACvD,CAAC,MAAM;UAAA;UAAAtD,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAAA,IAAIsE,GAAG,CAACe,WAAW,IAAI,IAAI,CAAC9D,MAAM,CAACS,mBAAmB,EAAE;YAAA;YAAApD,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAC7D6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,MAAM,EACxC,4BAA4BzF,GAAG,CAACe,WAAW,GAAG,EAC9Cf,GAAG,CAACe,WAAW,EAAE,IAAI,CAAC9D,MAAM,CAACS,mBAAmB,CAAC,CAAC;UACtD,CAAC;UAAA;UAAA;YAAApD,aAAA,GAAAsB,CAAA;UAAA;QAAD;MACF,CAAC;MAAA;MAAA;QAAAtB,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA,IAAI,IAAI,CAACoB,cAAc,CAACoD,GAAG,EAAE;QAAA;QAAA5F,aAAA,GAAAsB,CAAA;QAC3B,MAAMsE,GAAG;QAAA;QAAA,CAAA5F,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACoB,cAAc,CAACoD,GAAG;QAAC;QAAA5F,aAAA,GAAAoB,CAAA;QAEpC,IAAIwE,GAAG,CAACa,WAAW,IAAI,IAAI,CAAC9D,MAAM,CAACe,oBAAoB,EAAE;UAAA;UAAA1D,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACvD6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,UAAU,EAC5C,iCAAiCvF,GAAG,CAACa,WAAW,GAAG,EACnDb,GAAG,CAACa,WAAW,EAAE,IAAI,CAAC9D,MAAM,CAACe,oBAAoB,CAAC,CAAC;QACvD,CAAC,MAAM;UAAA;UAAA1D,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAAA,IAAIwE,GAAG,CAACa,WAAW,IAAI,IAAI,CAAC9D,MAAM,CAACa,mBAAmB,EAAE;YAAA;YAAAxD,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAC7D6J,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC,KAAK,EAAE,MAAM,EACxC,6BAA6BvF,GAAG,CAACa,WAAW,GAAG,EAC/Cb,GAAG,CAACa,WAAW,EAAE,IAAI,CAAC9D,MAAM,CAACa,mBAAmB,CAAC,CAAC;UACtD,CAAC;UAAA;UAAA;YAAAxD,aAAA,GAAAsB,CAAA;UAAA;QAAD;MACF,CAAC;MAAA;MAAA;QAAAtB,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA,KAAK,MAAMgK,KAAK,IAAIH,MAAM,EAAE;QAAA;QAAAjL,aAAA,GAAAoB,CAAA;QAC1B,MAAM,IAAI,CAACiK,YAAY,CAACD,KAAK,CAAC;MAChC;IAEF,CAAC,CAAC,OAAO1G,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC,CAAE;;;;;;;;;;;EAYKyG,WAAWA,CACjBlK,IAAmD,EACnDqK,QAAgD,EAChDC,OAAe,EACfC,YAAoB,EACpBC,SAAiB;IAAA;IAAAzL,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAEjB,OAAO;MACLsK,EAAE,EAAE,GAAGzK,IAAI,CAAC0K,WAAW,EAAE,IAAI7G,IAAI,CAACC,GAAG,EAAE,IAAI2B,IAAI,CAACkF,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE;MACpF7K,IAAI;MACJqK,QAAQ;MACRC,OAAO;MACPC,YAAY;MACZC,SAAS;MACTpG,SAAS,EAAE,IAAIP,IAAI,EAAE;MACrBiH,QAAQ,EAAE;KACX;EACH;EAEA;;;;;;;EAOQ,MAAMV,YAAYA,CAACD,KAAkB;IAAA;IAAApL,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC3C,IAAI;MACF;MACA,MAAM4K,aAAa;MAAA;MAAA,CAAAhM,aAAA,GAAAoB,CAAA,SAAG6K,KAAK,CAACC,IAAI,CAAC,IAAI,CAACzJ,YAAY,CAAC0J,MAAM,EAAE,CAAC,CACzDhC,IAAI,CAACiC,CAAC,IAAI;QAAA;QAAApM,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,kCAAApB,aAAA,GAAAsB,CAAA,WAAA8K,CAAC,CAACnL,IAAI,KAAKmK,KAAK,CAACnK,IAAI;QAAA;QAAA,CAAAjB,aAAA,GAAAsB,CAAA,WAAI8K,CAAC,CAACd,QAAQ,KAAKF,KAAK,CAACE,QAAQ;QAAA;QAAA,CAAAtL,aAAA,GAAAsB,CAAA,WAAI8K,CAAC,CAACL,QAAQ;MAAR,CAAQ,CAAC;MAAC;MAAA/L,aAAA,GAAAoB,CAAA;MAEnF,IAAI4K,aAAa,EAAE;QAAA;QAAAhM,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACjB;QACA4K,aAAa,CAACR,YAAY,GAAGJ,KAAK,CAACI,YAAY;QAAC;QAAAxL,aAAA,GAAAoB,CAAA;QAChD4K,aAAa,CAAC3G,SAAS,GAAG+F,KAAK,CAAC/F,SAAS;QAAC;QAAArF,aAAA,GAAAoB,CAAA;QAC1C;MACF,CAAC;MAAA;MAAA;QAAApB,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA,IAAI,CAACqB,YAAY,CAAC4J,GAAG,CAACjB,KAAK,CAACM,EAAE,EAAEN,KAAK,CAAC;MAEtC;MAAA;MAAApL,aAAA,GAAAoB,CAAA;MACAgB,QAAA,CAAAiC,MAAM,CAACiI,IAAI,CAAC,oBAAoBlB,KAAK,CAACG,OAAO,EAAE,EAAE;QAC/CtK,IAAI,EAAEmK,KAAK,CAACnK,IAAI;QAChBqK,QAAQ,EAAEF,KAAK,CAACE,QAAQ;QACxBE,YAAY,EAAEJ,KAAK,CAACI,YAAY;QAChCC,SAAS,EAAEL,KAAK,CAACK;OAClB,CAAC;MAEF;MAAA;MAAAzL,aAAA,GAAAoB,CAAA;MACA,IAAIgK,KAAK,CAACE,QAAQ,KAAK,UAAU,EAAE;QAAA;QAAAtL,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACjC,MAAMiB,eAAA,CAAAsC,YAAY,CAACC,gBAAgB,CAAC;UAClCC,OAAO,EAAE,aAAauG,KAAK,CAACM,EAAE,EAAE;UAChC1G,SAAS,EAAE,uBAAuB;UAClCC,KAAK,EAAE,gBAAgB;UACvBC,QAAQ,EAAE,YAAYkG,KAAK,CAACnK,IAAI,EAAE;UAClCkE,MAAM,EAAE,gBAAgB;UACxBC,MAAM,EAAE,SAAS;UACjBC,SAAS,EAAE+F,KAAK,CAAC/F,SAAS;UAC1BC,SAAS,EAAE;YACTiH,SAAS,EAAEnB,KAAK,CAACnK,IAAI;YACrBqK,QAAQ,EAAEF,KAAK,CAACE,QAAQ;YACxBE,YAAY,EAAEJ,KAAK,CAACI,YAAY;YAChCC,SAAS,EAAEL,KAAK,CAACK;;SAEpB,CAAC;MACJ,CAAC;MAAA;MAAA;QAAAzL,aAAA,GAAAsB,CAAA;MAAA;MAED;MACA;IAEF,CAAC,CAAC,OAAOoD,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACnD;EACF;EAEA;;;;EAIQuB,eAAeA,CAAA;IAAA;IAAAjG,aAAA,GAAAqB,CAAA;IACrB,MAAM;MAAEmE,GAAG;MAAEE,GAAG;MAAEE,GAAG;MAAEE;IAAO,CAAE;IAAA;IAAA,CAAA9F,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACoB,cAAc;IAAC;IAAAxC,aAAA,GAAAoB,CAAA;IAEvDgB,QAAA,CAAAiC,MAAM,CAACmI,KAAK,CAAC,yBAAyB,EAAE;MACtChH,GAAG,EAAEA,GAAG;MAAA;MAAA,CAAAxF,aAAA,GAAAsB,CAAA,WAAG;QACTmF,WAAW,EAAEjB,GAAG,CAACiB,WAAW;QAC5BG,WAAW,EAAEpB,GAAG,CAACoB,WAAW;QAC5BE,SAAS,EAAEtB,GAAG,CAACsB;OAChB;MAAA;MAAA,CAAA9G,aAAA,GAAAsB,CAAA,WAAG,IAAI;MACRoE,GAAG,EAAEA,GAAG;MAAA;MAAA,CAAA1F,aAAA,GAAAsB,CAAA,WAAG;QACTmF,WAAW,EAAEf,GAAG,CAACe,WAAW;QAC5BiB,IAAI,EAAEhB,IAAI,CAACC,KAAK,CAACjB,GAAG,CAACgC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG;QAAE;QAC7DD,KAAK,EAAEf,IAAI,CAACC,KAAK,CAACjB,GAAG,CAAC+B,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;OAC/D;MAAA;MAAA,CAAAzH,aAAA,GAAAsB,CAAA,WAAG,IAAI;MACRsE,GAAG,EAAEA,GAAG;MAAA;MAAA,CAAA5F,aAAA,GAAAsB,CAAA,WAAG;QACTmF,WAAW,EAAEb,GAAG,CAACa,WAAW;QAC5BiB,IAAI,EAAEhB,IAAI,CAACC,KAAK,CAACf,GAAG,CAAC8B,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG;QAAE;QAC7DD,KAAK,EAAEf,IAAI,CAACC,KAAK,CAACf,GAAG,CAAC6B,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;OAC/D;MAAA;MAAA,CAAAzH,aAAA,GAAAsB,CAAA,WAAG,IAAI;MACRwE,OAAO,EAAEA,OAAO;MAAA;MAAA,CAAA9F,aAAA,GAAAsB,CAAA,WAAG;QACjBqJ,aAAa,EAAEjE,IAAI,CAACC,KAAK,CAACb,OAAO,CAAC6E,aAAa,GAAG,GAAG,CAAC,GAAG,GAAG;QAC5DE,WAAW,EAAEnE,IAAI,CAACC,KAAK,CAACb,OAAO,CAAC+E,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;QACxD4B,gBAAgB,EAAE3G,OAAO,CAACwD,UAAU,CAACoD,MAAM,CAACtC,CAAC,IAAI;UAAA;UAAApK,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgJ,CAAC,CAACR,IAAI;QAAJ,CAAI,CAAC,CAAC+C;OAC1D;MAAA;MAAA,CAAA3M,aAAA,GAAAsB,CAAA,WAAG,IAAI;MACRmB,YAAY,EAAE,IAAI,CAACA,YAAY,CAACgG;KACjC,CAAC;EACJ;EAEA;;;;;;EAMO,MAAMmE,qBAAqBA,CAAA;IAAA;IAAA5M,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAChC,IAAI;MACF,MAAM;QAAEoE,GAAG;QAAEE,GAAG;QAAEE,GAAG;QAAEE;MAAO,CAAE;MAAA;MAAA,CAAA9F,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACoB,cAAc;MAEtD;MACA,MAAMqK,SAAS;MAAA;MAAA,CAAA7M,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC0L,wBAAwB;MAC7C;MAAA,CAAA9M,aAAA,GAAAsB,CAAA,WAAAkE,GAAG,EAAEiB,WAAW;MAAA;MAAA,CAAAzG,aAAA,GAAAsB,CAAA,WAAI,CAAC,GACrB,IAAI,CAACqB,MAAM,CAACE,mBAAmB,EAC/B,IAAI,CAACF,MAAM,CAACO,oBAAoB,EAChC,iBAAiB,CAClB;MAED,MAAM6J,SAAS;MAAA;MAAA,CAAA/M,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC0L,wBAAwB;MAC7C;MAAA,CAAA9M,aAAA,GAAAsB,CAAA,WAAAoE,GAAG,EAAEe,WAAW;MAAA;MAAA,CAAAzG,aAAA,GAAAsB,CAAA,WAAI,CAAC,GACrB,IAAI,CAACqB,MAAM,CAACS,mBAAmB,EAC/B,IAAI,CAACT,MAAM,CAACW,oBAAoB,EAChC,oBAAoB,CACrB;MAED,MAAM0J,SAAS;MAAA;MAAA,CAAAhN,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC0L,wBAAwB;MAC7C;MAAA,CAAA9M,aAAA,GAAAsB,CAAA,WAAAsE,GAAG,EAAEa,WAAW;MAAA;MAAA,CAAAzG,aAAA,GAAAsB,CAAA,WAAI,CAAC,GACrB,IAAI,CAACqB,MAAM,CAACa,mBAAmB,EAC/B,IAAI,CAACb,MAAM,CAACe,oBAAoB,EAChC,qBAAqB,CACtB;MAED,MAAMuJ,aAAa;MAAA;MAAA,CAAAjN,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAAC0L,wBAAwB;MACjD;MAAA,CAAA9M,aAAA,GAAAsB,CAAA,WAAAkE,GAAG,EAAEoB,WAAW;MAAA;MAAA,CAAA5G,aAAA,GAAAsB,CAAA,WAAI,CAAC,GACrB,IAAI,CAACqB,MAAM,CAACiB,oBAAoB,EAChC,IAAI,CAACjB,MAAM,CAACmB,qBAAqB,EACjC,iBAAiB,CAClB;MAED,MAAMoJ,aAAa;MAAA;MAAA,CAAAlN,aAAA,GAAAoB,CAAA,SAAiB;QAClC+L,KAAK,EAAErH,OAAO,EAAEwD,UAAU,CAACoD,MAAM,CAACtC,CAAC,IAAI;UAAA;UAAApK,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgJ,CAAC,CAACR,IAAI;QAAJ,CAAI,CAAC,CAAC+C,MAAM,GAAG,CAAC;QAAA;QAAA,CAAA3M,aAAA,GAAAsB,CAAA,WAAG,GAAG;QAAA;QAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,CAAC;QACnE8L,MAAM,EAAEtH,OAAO,EAAEwD,UAAU,CAACoD,MAAM,CAACtC,CAAC,IAAI;UAAA;UAAApK,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgJ,CAAC,CAACR,IAAI;QAAJ,CAAI,CAAC,CAAC+C,MAAM,GAAG,CAAC;QAAA;QAAA,CAAA3M,aAAA,GAAAsB,CAAA,WAAG,WAAW;QAAA;QAAA,CAAAtB,aAAA,GAAAsB,CAAA,WAAG,UAAU;QACrFiK,OAAO,EAAE;QAAG;QAAA,CAAAvL,aAAA,GAAAsB,CAAA,WAAAwE,OAAO,EAAEwD,UAAU,CAACoD,MAAM,CAACtC,CAAC,IAAI;UAAA;UAAApK,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgJ,CAAC,CAACR,IAAI;QAAJ,CAAI,CAAC,CAAC+C,MAAM;QAAA;QAAA,CAAA3M,aAAA,GAAAsB,CAAA,WAAI,CAAC,qBAAoB;QACnF+L,KAAK;QAAE;QAAA,CAAArN,aAAA,GAAAsB,CAAA,WAAAwE,OAAO,EAAEwD,UAAU,CAACoD,MAAM,CAACtC,CAAC,IAAI;UAAA;UAAApK,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgJ,CAAC,CAACR,IAAI;QAAJ,CAAI,CAAC,CAAC+C,MAAM;QAAA;QAAA,CAAA3M,aAAA,GAAAsB,CAAA,WAAI,CAAC;QAC1DgM,UAAU,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAC;OACtC;MAED;MACA,MAAMC,aAAa;MAAA;MAAA,CAAAzN,aAAA,GAAAoB,CAAA,SAAGsF,IAAI,CAACC,KAAK,CAC9B,CAACkG,SAAS,CAACM,KAAK,GAAGJ,SAAS,CAACI,KAAK,GAAGH,SAAS,CAACG,KAAK,GAAGF,aAAa,CAACE,KAAK,GAAGD,aAAa,CAACC,KAAK,IAAI,CAAC,CACtG;MAED;MACA,MAAMO,eAAe;MAAA;MAAA,CAAA1N,aAAA,GAAAoB,CAAA,SAAa,EAAE;MAAC;MAAApB,aAAA,GAAAoB,CAAA;MACrC,IAAIyL,SAAS,CAACM,KAAK,GAAG,EAAE,EAAE;QAAA;QAAAnN,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAAsM,eAAe,CAACxC,IAAI,CAAC,4CAA4C,CAAC;MAAA,CAAC;MAAA;MAAA;QAAAlL,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC7F,IAAI2L,SAAS,CAACI,KAAK,GAAG,EAAE,EAAE;QAAA;QAAAnN,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAAsM,eAAe,CAACxC,IAAI,CAAC,+CAA+C,CAAC;MAAA,CAAC;MAAA;MAAA;QAAAlL,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAChG,IAAI4L,SAAS,CAACG,KAAK,GAAG,EAAE,EAAE;QAAA;QAAAnN,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAAsM,eAAe,CAACxC,IAAI,CAAC,iCAAiC,CAAC;MAAA,CAAC;MAAA;MAAA;QAAAlL,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAClF,IAAI6L,aAAa,CAACE,KAAK,GAAG,EAAE,EAAE;QAAA;QAAAnN,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAAsM,eAAe,CAACxC,IAAI,CAAC,sCAAsC,CAAC;MAAA,CAAC;MAAA;MAAA;QAAAlL,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC3F,IAAI8L,aAAa,CAACC,KAAK,GAAG,EAAE,EAAE;QAAA;QAAAnN,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAAsM,eAAe,CAACxC,IAAI,CAAC,4BAA4B,CAAC;MAAA,CAAC;MAAA;MAAA;QAAAlL,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAEjF,OAAO;QACLqM,aAAa;QACbE,UAAU,EAAE;UACVnI,GAAG,EAAEqH,SAAS;UACdnH,GAAG,EAAEqH,SAAS;UACdnH,GAAG,EAAEoH,SAAS;UACdlH,OAAO,EAAEoH,aAAa;UACtBU,OAAO,EAAEX;SACV;QACDhC,MAAM,EAAEgB,KAAK,CAACC,IAAI,CAAC,IAAI,CAACzJ,YAAY,CAAC0J,MAAM,EAAE,CAAC,CAACO,MAAM,CAACN,CAAC,IAAI;UAAA;UAAApM,aAAA,GAAAqB,CAAA;UAAArB,aAAA,GAAAoB,CAAA;UAAA,OAAAgL,CAAC,CAACL,QAAQ;QAAR,CAAQ,CAAC;QACtE2B,eAAe;QACfG,WAAW,EAAE,IAAI/I,IAAI;OACtB;IAEH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MAC7D,MAAMsD,KAAK;IACb;EACF;EAEA;;;;;;;;;;EAUQoI,wBAAwBA,CAC9BtB,YAAoB,EACpBsC,gBAAwB,EACxBC,iBAAyB,EACzBC,WAAmB;IAAA;IAAAhO,aAAA,GAAAqB,CAAA;IAEnB,IAAI8L,KAAa;IACjB,IAAIC,MAAqD;IACzD,IAAI7B,OAAe;IAAC;IAAAvL,aAAA,GAAAoB,CAAA;IAEpB,IAAIoK,YAAY,IAAIuC,iBAAiB,EAAE;MAAA;MAAA/N,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACrC+L,KAAK,GAAGzG,IAAI,CAACuH,GAAG,CAAC,CAAC,EAAE,GAAG,GAAI,CAACzC,YAAY,GAAGuC,iBAAiB,IAAIA,iBAAiB,GAAI,GAAG,CAAC;MAAC;MAAA/N,aAAA,GAAAoB,CAAA;MAC1FgM,MAAM,GAAG,UAAU;MAAC;MAAApN,aAAA,GAAAoB,CAAA;MACpBmK,OAAO,GAAG,GAAGyC,WAAW,iBAAiBxC,YAAY,GAAG;IAC1D,CAAC,MAAM;MAAA;MAAAxL,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAAA,IAAIoK,YAAY,IAAIsC,gBAAgB,EAAE;QAAA;QAAA9N,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC3C+L,KAAK,GAAGzG,IAAI,CAACuH,GAAG,CAAC,EAAE,EAAE,GAAG,GAAI,CAACzC,YAAY,GAAGsC,gBAAgB,KAAKC,iBAAiB,GAAGD,gBAAgB,CAAC,GAAI,EAAE,CAAC;QAAC;QAAA9N,aAAA,GAAAoB,CAAA;QAC9GgM,MAAM,GAAG,SAAS;QAAC;QAAApN,aAAA,GAAAoB,CAAA;QACnBmK,OAAO,GAAG,GAAGyC,WAAW,iBAAiBxC,YAAY,GAAG;MAC1D,CAAC,MAAM;QAAA;QAAAxL,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAAA,IAAIoK,YAAY,IAAIsC,gBAAgB,GAAG,GAAG,EAAE;UAAA;UAAA9N,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACjD+L,KAAK,GAAGzG,IAAI,CAACuH,GAAG,CAAC,EAAE,EAAE,GAAG,GAAIzC,YAAY,GAAGsC,gBAAgB,GAAI,EAAE,CAAC;UAAC;UAAA9N,aAAA,GAAAoB,CAAA;UACnEgM,MAAM,GAAG,MAAM;UAAC;UAAApN,aAAA,GAAAoB,CAAA;UAChBmK,OAAO,GAAG,GAAGyC,WAAW,aAAaxC,YAAY,GAAG;QACtD,CAAC,MAAM;UAAA;UAAAxL,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UACL+L,KAAK,GAAG,GAAG;UAAC;UAAAnN,aAAA,GAAAoB,CAAA;UACZgM,MAAM,GAAG,WAAW;UAAC;UAAApN,aAAA,GAAAoB,CAAA;UACrBmK,OAAO,GAAG,GAAGyC,WAAW,kBAAkBxC,YAAY,GAAG;QAC3D;MAAA;IAAA;IAAC;IAAAxL,aAAA,GAAAoB,CAAA;IAED,OAAO;MACL+L,KAAK,EAAEzG,IAAI,CAACC,KAAK,CAACwG,KAAK,CAAC;MACxBC,MAAM;MACN7B,OAAO;MACP8B,KAAK,EAAE7B,YAAY;MACnB8B,UAAU,EAAE;QACVC,OAAO,EAAEO,gBAAgB;QACzBN,QAAQ,EAAEO;;KAEb;EACH;EAEA;;;;;;EAMO,MAAMG,0BAA0BA,CAAA;IAAA;IAAAlO,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACrC,IAAI;MACF,MAAM+M,QAAQ;MAAA;MAAA,CAAAnO,aAAA,GAAAoB,CAAA,SAAa,EAAE;MAC7B,IAAIgN,iBAAiB;MAAA;MAAA,CAAApO,aAAA,GAAAoB,CAAA,SAAG,IAAI;MAE5B,MAAM;QAAEoE,GAAG;QAAEE,GAAG;QAAEE;MAAG,CAAE;MAAA;MAAA,CAAA5F,aAAA,GAAAoB,CAAA,SAAG,IAAI,CAACoB,cAAc;MAE7C;MAAA;MAAAxC,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAAkE,GAAG;MAAA;MAAA,CAAAxF,aAAA,GAAAsB,CAAA,WAAI,CAACkE,GAAG,CAAC8B,KAAK,CAACqE,WAAW,EAAE,CAAC0C,QAAQ,CAAC,IAAI,CAAC;MAAA;MAAA,CAAArO,aAAA,GAAAsB,CAAA,WAAI,CAACkE,GAAG,CAAC8B,KAAK,CAACqE,WAAW,EAAE,CAAC0C,QAAQ,CAAC,IAAI,CAAC,GAAE;QAAA;QAAArO,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC7F+M,QAAQ,CAACjD,IAAI,CAAC,kCAAkC1F,GAAG,CAAC8B,KAAK,oCAAoC,CAAC;MAChG,CAAC;MAAA;MAAA;QAAAtH,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,YAAAoE,GAAG;MAAA;MAAA,CAAA1F,aAAA,GAAAsB,CAAA,YAAIoE,GAAG,CAAC+B,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAE;QAAA;QAAAzH,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC9C+M,QAAQ,CAACjD,IAAI,CAAC,0BAA0BxE,IAAI,CAACC,KAAK,CAACjB,GAAG,CAAC+B,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC;QAAC;QAAAzH,aAAA,GAAAoB,CAAA;QAC5GgN,iBAAiB,GAAG,KAAK;MAC3B,CAAC;MAAA;MAAA;QAAApO,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,YAAAsE,GAAG;MAAA;MAAA,CAAA5F,aAAA,GAAAsB,CAAA,YAAIsE,GAAG,CAAC6B,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAE;QAAA;QAAAzH,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC/C+M,QAAQ,CAACjD,IAAI,CAAC,8BAA8BxE,IAAI,CAACC,KAAK,CAACf,GAAG,CAAC6B,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,yBAAyB,CAAC;MAClH,CAAC;MAAA;MAAA;QAAAzH,aAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,YAAAsE,GAAG;MAAA;MAAA,CAAA5F,aAAA,GAAAsB,CAAA,YAAIsE,GAAG,CAAC+B,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAE;QAAA;QAAA3H,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC7C+M,QAAQ,CAACjD,IAAI,CAAC,sBAAsBxE,IAAI,CAACC,KAAK,CAACf,GAAG,CAAC+B,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,8BAA8B,CAAC;QAAC;QAAA3H,aAAA,GAAAoB,CAAA;QAC7GgN,iBAAiB,GAAG,KAAK;MAC3B,CAAC;MAAA;MAAA;QAAApO,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAED,OAAO;QAAEgN,iBAAiB;QAAED;MAAQ,CAAE;IAExC,CAAC,CAAC,OAAOzJ,KAAK,EAAE;MAAA;MAAA1E,aAAA,GAAAoB,CAAA;MACdgB,QAAA,CAAAiC,MAAM,CAACK,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MAAC;MAAA1E,aAAA,GAAAoB,CAAA;MACjE,OAAO;QAAEgN,iBAAiB,EAAE,KAAK;QAAED,QAAQ,EAAE,CAAC,0BAA0B;MAAC,CAAE;IAC7E;EACF;EAEA;;;;;;EAMOG,iBAAiBA,CAAA;IAAA;IAAAtO,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAMtB,OAAO;MAAE,GAAG,IAAI,CAACoB;IAAc,CAAE;EACnC;EAEA;;;;EAIO+L,sBAAsBA,CAAA;IAAA;IAAAvO,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC3B,IAAI,IAAI,CAACmB,kBAAkB,EAAE;MAAA;MAAAvC,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAC3BoN,aAAa,CAAC,IAAI,CAACjM,kBAAkB,CAAC;MAAC;MAAAvC,aAAA,GAAAoB,CAAA;MACvC,IAAI,CAACmB,kBAAkB,GAAG,IAAI;MAAC;MAAAvC,aAAA,GAAAoB,CAAA;MAC/BgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,gCAAgC,CAAC;IAC/C,CAAC;IAAA;IAAA;MAAAtE,aAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;;EAIO,MAAMmN,iCAAiCA,CAAA;IAAA;IAAAzO,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAC5CgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,wDAAwD,CAAC;IACrE;IACA;IAAA;IAAAtE,aAAA,GAAAoB,CAAA;IACAgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,8CAA8C,CAAC;EAC7D;EAEA;;;;EAIO,MAAMoK,sBAAsBA,CAAA;IAAA;IAAA1O,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACjCgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,kDAAkD,CAAC;IAC/D;IACA;IAAA;IAAAtE,aAAA,GAAAoB,CAAA;IACAgB,QAAA,CAAAiC,MAAM,CAACC,IAAI,CAAC,wCAAwC,CAAC;EACvD;EAEA;;;;;;EAMOqK,SAASA,CAAA;IAAA;IAAA3O,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAOd,OAAO;MACLwN,YAAY,EAAE,IAAI,CAACrM,kBAAkB,KAAK,IAAI;MAC9CE,YAAY,EAAE,IAAI,CAACA,YAAY,CAACgG,IAAI;MACpCoG,YAAY,EAAE,IAAI;MAAE;MACpBtM,kBAAkB,EAAE,IAAI,CAACI,MAAM,CAACC,oBAAoB;MACpDyC,SAAS,EAAEP,IAAI,CAACC,GAAG;KACpB;EACH;;AACD;AAAA/E,aAAA,GAAAoB,CAAA;AA7rBD0N,OAAA,CAAAxM,aAAA,GAAAA,aAAA;AA+rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}