5890ab97f350429635527aad29c9cfa9
"use strict";

/**
 * Risk-Reward Ratio Enforcer
 *
 * Implements sophisticated risk-reward ratio enforcement with:
 * - Minimum 1.3:1 risk-reward ratio validation
 * - Dynamic RR adjustment based on market conditions
 * - Trade rejection for insufficient risk-reward
 * - RR optimization recommendations
 */
/* istanbul ignore next */
function cov_rxb1yu68n() {
  var path = "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\risk-reward-enforcer.ts";
  var hash = "55d5c7a72ce595876e0d62784b6111c6caafe8e3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\risk-reward-enforcer.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "2": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "3": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "5": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 34,
          column: 67
        }
      },
      "6": {
        start: {
          line: 36,
          column: 33
        },
        end: {
          line: 36,
          column: 103
        }
      },
      "7": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 116
        }
      },
      "8": {
        start: {
          line: 40,
          column: 30
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "9": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 63
        }
      },
      "10": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 46
        }
      },
      "11": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "12": {
        start: {
          line: 56,
          column: 77
        },
        end: {
          line: 56,
          column: 85
        }
      },
      "13": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 78
        }
      },
      "14": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 59,
          column: 82
        }
      },
      "15": {
        start: {
          line: 61,
          column: 31
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "16": {
        start: {
          line: 62,
          column: 33
        },
        end: {
          line: 62,
          column: 92
        }
      },
      "17": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 78
        }
      },
      "18": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 66,
          column: 80
        }
      },
      "19": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "20": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "21": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "22": {
        start: {
          line: 83,
          column: 31
        },
        end: {
          line: 83,
          column: 34
        }
      },
      "23": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "24": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 83
        }
      },
      "25": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 22
        }
      },
      "26": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 83
        }
      },
      "27": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 22
        }
      },
      "28": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 84
        }
      },
      "29": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 22
        }
      },
      "30": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "31": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 86
        }
      },
      "32": {
        start: {
          line: 100,
          column: 13
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "33": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 85
        }
      },
      "34": {
        start: {
          line: 104,
          column: 37
        },
        end: {
          line: 104,
          column: 76
        }
      },
      "35": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "36": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 107,
          column: 79
        }
      },
      "37": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 10
        }
      },
      "38": {
        start: {
          line: 117,
          column: 32
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "39": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "40": {
        start: {
          line: 121,
          column: 36
        },
        end: {
          line: 121,
          column: 93
        }
      },
      "41": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "42": {
        start: {
          line: 123,
          column: 32
        },
        end: {
          line: 123,
          column: 103
        }
      },
      "43": {
        start: {
          line: 124,
          column: 30
        },
        end: {
          line: 124,
          column: 61
        }
      },
      "44": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "45": {
        start: {
          line: 135,
          column: 39
        },
        end: {
          line: 135,
          column: 98
        }
      },
      "46": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "47": {
        start: {
          line: 137,
          column: 34
        },
        end: {
          line: 137,
          column: 108
        }
      },
      "48": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 61
        }
      },
      "49": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "50": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 90
        }
      },
      "51": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "52": {
        start: {
          line: 151,
          column: 32
        },
        end: {
          line: 151,
          column: 102
        }
      },
      "53": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 106
        }
      },
      "54": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "55": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 161,
          column: 19
        }
      },
      "56": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "57": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 173,
          column: 15
        }
      },
      "58": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "59": {
        start: {
          line: 176,
          column: 34
        },
        end: {
          line: 176,
          column: 64
        }
      },
      "60": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 73
        }
      },
      "61": {
        start: {
          line: 184,
          column: 37
        },
        end: {
          line: 184,
          column: 45
        }
      },
      "62": {
        start: {
          line: 186,
          column: 33
        },
        end: {
          line: 186,
          column: 74
        }
      },
      "63": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 69
        }
      },
      "64": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "65": {
        start: {
          line: 189,
          column: 32
        },
        end: {
          line: 189,
          column: 72
        }
      },
      "66": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "67": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 84
        }
      },
      "68": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "69": {
        start: {
          line: 197,
          column: 32
        },
        end: {
          line: 197,
          column: 72
        }
      },
      "70": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "71": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 87
        }
      },
      "72": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 31
        }
      },
      "73": {
        start: {
          line: 209,
          column: 52
        },
        end: {
          line: 209,
          column: 60
        }
      },
      "74": {
        start: {
          line: 210,
          column: 29
        },
        end: {
          line: 210,
          column: 65
        }
      },
      "75": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 211,
          column: 61
        }
      },
      "76": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "77": {
        start: {
          line: 213,
          column: 34
        },
        end: {
          line: 213,
          column: 72
        }
      },
      "78": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "79": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 89
        }
      },
      "80": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 33
        }
      },
      "81": {
        start: {
          line: 221,
          column: 34
        },
        end: {
          line: 221,
          column: 72
        }
      },
      "82": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "83": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 86
        }
      },
      "84": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 33
        }
      },
      "85": {
        start: {
          line: 233,
          column: 69
        },
        end: {
          line: 233,
          column: 77
        }
      },
      "86": {
        start: {
          line: 235,
          column: 30
        },
        end: {
          line: 235,
          column: 68
        }
      },
      "87": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 64
        }
      },
      "88": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "89": {
        start: {
          line: 239,
          column: 31
        },
        end: {
          line: 239,
          column: 83
        }
      },
      "90": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 46
        }
      },
      "91": {
        start: {
          line: 244,
          column: 31
        },
        end: {
          line: 244,
          column: 83
        }
      },
      "92": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 46
        }
      },
      "93": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "94": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 25
        }
      },
      "95": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "96": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 25
        }
      },
      "97": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "98": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 25
        }
      },
      "99": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 20
        }
      },
      "100": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 26
        }
      },
      "101": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "102": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 133
        }
      },
      "103": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "104": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 133
        }
      },
      "105": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "106": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 131
        }
      },
      "107": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 23
        }
      },
      "108": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 54
        }
      },
      "109": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "110": {
        start: {
          line: 289,
          column: 31
        },
        end: {
          line: 289,
          column: 162
        }
      },
      "111": {
        start: {
          line: 290,
          column: 35
        },
        end: {
          line: 290,
          column: 124
        }
      },
      "112": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 105
        }
      },
      "113": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 112
        }
      },
      "114": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 114
        }
      },
      "115": {
        start: {
          line: 296,
          column: 31
        },
        end: {
          line: 296,
          column: 95
        }
      },
      "116": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 117
        }
      },
      "117": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 58
        }
      },
      "118": {
        start: {
          line: 303,
          column: 31
        },
        end: {
          line: 303,
          column: 120
        }
      },
      "119": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 120
        }
      },
      "120": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 46
        }
      },
      "121": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "122": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 51
        }
      },
      "123": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 38
        }
      },
      "124": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 55
        }
      },
      "125": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 34
        }
      },
      "126": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 345,
          column: 10
        }
      },
      "127": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 31
        }
      },
      "128": {
        start: {
          line: 352,
          column: 30
        },
        end: {
          line: 355,
          column: 24
        }
      },
      "129": {
        start: {
          line: 353,
          column: 41
        },
        end: {
          line: 353,
          column: 60
        }
      },
      "130": {
        start: {
          line: 354,
          column: 28
        },
        end: {
          line: 354,
          column: 45
        }
      },
      "131": {
        start: {
          line: 357,
          column: 29
        },
        end: {
          line: 371,
          column: 10
        }
      },
      "132": {
        start: {
          line: 358,
          column: 33
        },
        end: {
          line: 358,
          column: 65
        }
      },
      "133": {
        start: {
          line: 359,
          column: 35
        },
        end: {
          line: 359,
          column: 71
        }
      },
      "134": {
        start: {
          line: 359,
          column: 60
        },
        end: {
          line: 359,
          column: 70
        }
      },
      "135": {
        start: {
          line: 360,
          column: 26
        },
        end: {
          line: 362,
          column: 19
        }
      },
      "136": {
        start: {
          line: 361,
          column: 52
        },
        end: {
          line: 361,
          column: 75
        }
      },
      "137": {
        start: {
          line: 363,
          column: 33
        },
        end: {
          line: 365,
          column: 19
        }
      },
      "138": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 370,
          column: 14
        }
      },
      "139": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 376,
          column: 10
        }
      },
      "140": {
        start: {
          line: 379,
          column: 0
        },
        end: {
          line: 379,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 50
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 55
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 70
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 79
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 78
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 175,
            column: 37
          }
        },
        loc: {
          start: {
            line: 175,
            column: 46
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 175
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 57
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 183
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 59
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 208
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 58
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 232
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 46
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 251
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 49
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 269
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 49
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 285
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 309
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 27
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 315
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 28
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 324
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 330
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 30
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 336
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        loc: {
          start: {
            line: 351,
            column: 32
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 351
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 353,
            column: 17
          },
          end: {
            line: 353,
            column: 18
          }
        },
        loc: {
          start: {
            line: 353,
            column: 41
          },
          end: {
            line: 353,
            column: 60
          }
        },
        line: 353
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 354,
            column: 18
          },
          end: {
            line: 354,
            column: 19
          }
        },
        loc: {
          start: {
            line: 354,
            column: 28
          },
          end: {
            line: 354,
            column: 45
          }
        },
        line: 354
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 47
          }
        },
        loc: {
          start: {
            line: 357,
            column: 56
          },
          end: {
            line: 371,
            column: 9
          }
        },
        line: 357
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 359,
            column: 55
          },
          end: {
            line: 359,
            column: 56
          }
        },
        loc: {
          start: {
            line: 359,
            column: 60
          },
          end: {
            line: 359,
            column: 70
          }
        },
        line: 359
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 361,
            column: 40
          },
          end: {
            line: 361,
            column: 41
          }
        },
        loc: {
          start: {
            line: 361,
            column: 52
          },
          end: {
            line: 361,
            column: 75
          }
        },
        line: 361
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 74
          }
        }, {
          start: {
            line: 64,
            column: 77
          },
          end: {
            line: 64,
            column: 78
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 22
          }
        }, {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 91,
            column: 22
          }
        }, {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 22
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: 100,
            column: 13
          },
          end: {
            line: 102,
            column: 9
          }
        }],
        line: 97
      },
      "4": {
        loc: {
          start: {
            line: 100,
            column: 13
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 13
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "8": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "9": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: 196,
            column: 13
          },
          end: {
            line: 203,
            column: 9
          }
        }],
        line: 188
      },
      "11": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "12": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 45
          }
        }, {
          start: {
            line: 191,
            column: 49
          },
          end: {
            line: 191,
            column: 91
          }
        }],
        line: 191
      },
      "13": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "14": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 199,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 199,
            column: 48
          }
        }, {
          start: {
            line: 199,
            column: 52
          },
          end: {
            line: 199,
            column: 97
          }
        }],
        line: 199
      },
      "15": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 220,
            column: 13
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 212
      },
      "16": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "17": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 215,
            column: 48
          }
        }, {
          start: {
            line: 215,
            column: 52
          },
          end: {
            line: 215,
            column: 97
          }
        }],
        line: 215
      },
      "18": {
        loc: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "19": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 223,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 223,
            column: 45
          }
        }, {
          start: {
            line: 223,
            column: 49
          },
          end: {
            line: 223,
            column: 91
          }
        }],
        line: 223
      },
      "20": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 246,
            column: 9
          }
        }],
        line: 237
      },
      "21": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "22": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "23": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "24": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 36
          }
        }, {
          start: {
            line: 261,
            column: 40
          },
          end: {
            line: 261,
            column: 103
          }
        }],
        line: 261
      },
      "25": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "26": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "27": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "28": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 36
          }
        }, {
          start: {
            line: 277,
            column: 40
          },
          end: {
            line: 277,
            column: 103
          }
        }],
        line: 277
      },
      "29": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: 299,
            column: 13
          },
          end: {
            line: 301,
            column: 9
          }
        }],
        line: 287
      },
      "30": {
        loc: {
          start: {
            line: 296,
            column: 31
          },
          end: {
            line: 296,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 31
          },
          end: {
            line: 296,
            column: 90
          }
        }, {
          start: {
            line: 296,
            column: 94
          },
          end: {
            line: 296,
            column: 95
          }
        }],
        line: 296
      },
      "31": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "32": {
        loc: {
          start: {
            line: 360,
            column: 26
          },
          end: {
            line: 362,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 18
          },
          end: {
            line: 361,
            column: 103
          }
        }, {
          start: {
            line: 362,
            column: 18
          },
          end: {
            line: 362,
            column: 19
          }
        }],
        line: 360
      },
      "33": {
        loc: {
          start: {
            line: 363,
            column: 33
          },
          end: {
            line: 365,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 18
          },
          end: {
            line: 364,
            column: 69
          }
        }, {
          start: {
            line: 365,
            column: 18
          },
          end: {
            line: 365,
            column: 19
          }
        }],
        line: 363
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\risk-reward-enforcer.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\Nick\\Desktop\\SmoothSail\\src\\trading\\risk\\risk-reward-enforcer.ts"],
      sourcesContent: ["/**\r\n * Risk-Reward Ratio Enforcer\r\n * \r\n * Implements sophisticated risk-reward ratio enforcement with:\r\n * - Minimum 1.3:1 risk-reward ratio validation\r\n * - Dynamic RR adjustment based on market conditions\r\n * - Trade rejection for insufficient risk-reward\r\n * - RR optimization recommendations\r\n */\r\n\r\nimport { MarketConditions } from './trailing-stop-manager.js';\r\n\r\nexport interface TradeProposal {\r\n  /** Trading symbol */\r\n  symbol: string;\r\n  /** Position type */\r\n  type: 'LONG' | 'SHORT';\r\n  /** Entry price */\r\n  entryPrice: number;\r\n  /** Stop loss price */\r\n  stopLossPrice: number;\r\n  /** Take profit price */\r\n  takeProfitPrice: number;\r\n  /** Position size */\r\n  positionSize: number;\r\n  /** Signal confidence (0-100) */\r\n  confidence: number;\r\n  /** Strategy that generated the signal */\r\n  strategy: string;\r\n}\r\n\r\nexport interface RiskRewardAnalysis {\r\n  /** Calculated risk-reward ratio */\r\n  riskRewardRatio: number;\r\n  /** Risk amount in currency */\r\n  riskAmount: number;\r\n  /** Reward amount in currency */\r\n  rewardAmount: number;\r\n  /** Risk percentage of position value */\r\n  riskPercentage: number;\r\n  /** Reward percentage of position value */\r\n  rewardPercentage: number;\r\n  /** Whether trade meets minimum RR requirements */\r\n  meetsMinimumRR: boolean;\r\n  /** Approval status */\r\n  approved: boolean;\r\n  /** Rejection reasons */\r\n  rejectionReasons: string[];\r\n  /** Optimization recommendations */\r\n  optimizationRecommendations: RROptimization[];\r\n}\r\n\r\nexport interface RROptimization {\r\n  /** Type of optimization */\r\n  type: 'ADJUST_STOP_LOSS' | 'ADJUST_TAKE_PROFIT' | 'REDUCE_POSITION_SIZE' | 'WAIT_FOR_BETTER_ENTRY';\r\n  /** Current value */\r\n  currentValue: number;\r\n  /** Recommended value */\r\n  recommendedValue: number;\r\n  /** Expected improvement in RR ratio */\r\n  rrImprovement: number;\r\n  /** Description of the optimization */\r\n  description: string;\r\n  /** Priority level */\r\n  priority: 'LOW' | 'MEDIUM' | 'HIGH';\r\n}\r\n\r\nexport interface RREnforcementConfig {\r\n  /** Minimum risk-reward ratio */\r\n  minRiskRewardRatio: number;\r\n  /** Preferred risk-reward ratio */\r\n  preferredRiskRewardRatio: number;\r\n  /** Maximum acceptable risk percentage */\r\n  maxRiskPercentage: number;\r\n  /** Enable dynamic RR adjustment */\r\n  enableDynamicAdjustment: boolean;\r\n  /** Market condition adjustment factors */\r\n  marketConditionAdjustments: {\r\n    bullish: number;\r\n    bearish: number;\r\n    sideways: number;\r\n    highVolatility: number;\r\n    lowVolatility: number;\r\n  };\r\n}\r\n\r\nexport interface RRPerformanceMetrics {\r\n  /** Average risk-reward ratio of executed trades */\r\n  averageRR: number;\r\n  /** Percentage of trades meeting minimum RR */\r\n  rrComplianceRate: number;\r\n  /** Number of trades rejected for poor RR */\r\n  rejectedTradesCount: number;\r\n  /** Total trades analyzed */\r\n  totalTradesAnalyzed: number;\r\n  /** Best RR ratio achieved */\r\n  bestRR: number;\r\n  /** Worst RR ratio executed */\r\n  worstRR: number;\r\n  /** RR distribution by strategy */\r\n  rrByStrategy: Map<string, number>;\r\n}\r\n\r\nexport class RiskRewardEnforcer {\r\n  private config: RREnforcementConfig;\r\n  private performanceMetrics: RRPerformanceMetrics;\r\n  private tradeHistory: RiskRewardAnalysis[] = [];\r\n\r\n  constructor(config: RREnforcementConfig) {\r\n    this.config = config;\r\n    this.performanceMetrics = {\r\n      averageRR: 0,\r\n      rrComplianceRate: 0,\r\n      rejectedTradesCount: 0,\r\n      totalTradesAnalyzed: 0,\r\n      bestRR: 0,\r\n      worstRR: Infinity,\r\n      rrByStrategy: new Map()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Analyze and enforce risk-reward ratio for a trade proposal\r\n   */\r\n  analyzeRiskReward(\r\n    proposal: TradeProposal,\r\n    marketConditions: MarketConditions\r\n  ): RiskRewardAnalysis {\r\n    // Calculate base risk-reward metrics\r\n    const baseAnalysis = this.calculateBaseRiskReward(proposal);\r\n\r\n    // Apply dynamic adjustments based on market conditions\r\n    const adjustedAnalysis = this.applyDynamicAdjustments(baseAnalysis, proposal, marketConditions);\r\n\r\n    // Generate optimization recommendations\r\n    const optimizations = this.generateOptimizationRecommendations(proposal, adjustedAnalysis, marketConditions);\r\n\r\n    // Final validation\r\n    const finalAnalysis: RiskRewardAnalysis = {\r\n      ...adjustedAnalysis,\r\n      optimizationRecommendations: optimizations,\r\n      approved: this.validateTradeApproval(adjustedAnalysis, proposal),\r\n      rejectionReasons: this.generateRejectionReasons(adjustedAnalysis, proposal)\r\n    };\r\n\r\n    // Update performance metrics\r\n    this.updatePerformanceMetrics(finalAnalysis, proposal);\r\n\r\n    // Store in history\r\n    this.tradeHistory.push(finalAnalysis);\r\n\r\n    return finalAnalysis;\r\n  }\r\n\r\n  /**\r\n   * Calculate base risk-reward metrics\r\n   */\r\n  private calculateBaseRiskReward(proposal: TradeProposal): Omit<RiskRewardAnalysis, 'optimizationRecommendations' | 'approved' | 'rejectionReasons'> {\r\n    const { entryPrice, stopLossPrice, takeProfitPrice, positionSize } = proposal;\r\n\r\n    // Calculate risk and reward amounts\r\n    const riskAmount = Math.abs(entryPrice - stopLossPrice) * positionSize;\r\n    const rewardAmount = Math.abs(takeProfitPrice - entryPrice) * positionSize;\r\n\r\n    // Calculate percentages\r\n    const riskPercentage = Math.abs((entryPrice - stopLossPrice) / entryPrice) * 100;\r\n    const rewardPercentage = Math.abs((takeProfitPrice - entryPrice) / entryPrice) * 100;\r\n\r\n    // Calculate risk-reward ratio\r\n    const riskRewardRatio = riskAmount > 0 ? rewardAmount / riskAmount : 0;\r\n\r\n    // Check if meets minimum requirements\r\n    const meetsMinimumRR = riskRewardRatio >= this.config.minRiskRewardRatio;\r\n\r\n    return {\r\n      riskRewardRatio,\r\n      riskAmount,\r\n      rewardAmount,\r\n      riskPercentage,\r\n      rewardPercentage,\r\n      meetsMinimumRR\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Apply dynamic adjustments based on market conditions\r\n   */\r\n  private applyDynamicAdjustments(\r\n    baseAnalysis: Omit<RiskRewardAnalysis, 'optimizationRecommendations' | 'approved' | 'rejectionReasons'>,\r\n    proposal: TradeProposal,\r\n    marketConditions: MarketConditions\r\n  ): Omit<RiskRewardAnalysis, 'optimizationRecommendations' | 'approved' | 'rejectionReasons'> {\r\n    if (!this.config.enableDynamicAdjustment) {\r\n      return baseAnalysis;\r\n    }\r\n\r\n    let adjustmentFactor = 1.0;\r\n\r\n    // Adjust based on market trend\r\n    switch (marketConditions.trend) {\r\n      case 'BULLISH':\r\n        adjustmentFactor *= this.config.marketConditionAdjustments.bullish;\r\n        break;\r\n      case 'BEARISH':\r\n        adjustmentFactor *= this.config.marketConditionAdjustments.bearish;\r\n        break;\r\n      case 'SIDEWAYS':\r\n        adjustmentFactor *= this.config.marketConditionAdjustments.sideways;\r\n        break;\r\n    }\r\n\r\n    // Adjust based on volatility\r\n    if (marketConditions.volatility > 0.5) {\r\n      adjustmentFactor *= this.config.marketConditionAdjustments.highVolatility;\r\n    } else if (marketConditions.volatility < 0.2) {\r\n      adjustmentFactor *= this.config.marketConditionAdjustments.lowVolatility;\r\n    }\r\n\r\n    // Adjust based on signal confidence\r\n    const confidenceAdjustment = 0.8 + (proposal.confidence / 100) * 0.4; // 0.8 to 1.2 range\r\n    adjustmentFactor *= confidenceAdjustment;\r\n\r\n    // Apply adjustment to minimum RR requirement\r\n    const adjustedMinRR = this.config.minRiskRewardRatio * adjustmentFactor;\r\n\r\n    return {\r\n      ...baseAnalysis,\r\n      meetsMinimumRR: baseAnalysis.riskRewardRatio >= adjustedMinRR\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate optimization recommendations\r\n   */\r\n  private generateOptimizationRecommendations(\r\n    proposal: TradeProposal,\r\n    analysis: Omit<RiskRewardAnalysis, 'optimizationRecommendations' | 'approved' | 'rejectionReasons'>,\r\n    marketConditions: MarketConditions\r\n  ): RROptimization[] {\r\n    const recommendations: RROptimization[] = [];\r\n\r\n    // If RR is below minimum, suggest improvements\r\n    if (!analysis.meetsMinimumRR) {\r\n      // Suggest tightening stop loss\r\n      const tighterStopLoss = this.calculateOptimalStopLoss(proposal, marketConditions);\r\n      if (tighterStopLoss !== proposal.stopLossPrice) {\r\n        const newRisk = Math.abs(proposal.entryPrice - tighterStopLoss) * proposal.positionSize;\r\n        const newRR = analysis.rewardAmount / newRisk;\r\n\r\n        recommendations.push({\r\n          type: 'ADJUST_STOP_LOSS',\r\n          currentValue: proposal.stopLossPrice,\r\n          recommendedValue: tighterStopLoss,\r\n          rrImprovement: newRR - analysis.riskRewardRatio,\r\n          description: `Tighten stop loss to ${tighterStopLoss.toFixed(2)} to improve RR ratio`,\r\n          priority: 'HIGH'\r\n        });\r\n      }\r\n\r\n      // Suggest extending take profit\r\n      const extendedTakeProfit = this.calculateOptimalTakeProfit(proposal, marketConditions);\r\n      if (extendedTakeProfit !== proposal.takeProfitPrice) {\r\n        const newReward = Math.abs(extendedTakeProfit - proposal.entryPrice) * proposal.positionSize;\r\n        const newRR = newReward / analysis.riskAmount;\r\n\r\n        recommendations.push({\r\n          type: 'ADJUST_TAKE_PROFIT',\r\n          currentValue: proposal.takeProfitPrice,\r\n          recommendedValue: extendedTakeProfit,\r\n          rrImprovement: newRR - analysis.riskRewardRatio,\r\n          description: `Extend take profit to ${extendedTakeProfit.toFixed(2)} to improve RR ratio`,\r\n          priority: 'MEDIUM'\r\n        });\r\n      }\r\n\r\n      // Suggest waiting for better entry\r\n      const betterEntry = this.calculateBetterEntryPrice(proposal, marketConditions);\r\n      if (betterEntry !== proposal.entryPrice) {\r\n        const newRisk = Math.abs(betterEntry - proposal.stopLossPrice) * proposal.positionSize;\r\n        const newReward = Math.abs(proposal.takeProfitPrice - betterEntry) * proposal.positionSize;\r\n        const newRR = newReward / newRisk;\r\n\r\n        recommendations.push({\r\n          type: 'WAIT_FOR_BETTER_ENTRY',\r\n          currentValue: proposal.entryPrice,\r\n          recommendedValue: betterEntry,\r\n          rrImprovement: newRR - analysis.riskRewardRatio,\r\n          description: `Wait for better entry at ${betterEntry.toFixed(2)} to improve RR ratio`,\r\n          priority: 'LOW'\r\n        });\r\n      }\r\n    }\r\n\r\n    // If RR is acceptable but could be better\r\n    if (analysis.riskRewardRatio < this.config.preferredRiskRewardRatio) {\r\n      recommendations.push({\r\n        type: 'REDUCE_POSITION_SIZE',\r\n        currentValue: proposal.positionSize,\r\n        recommendedValue: proposal.positionSize * 0.8,\r\n        rrImprovement: 0,\r\n        description: 'Consider reducing position size to maintain capital preservation',\r\n        priority: 'LOW'\r\n      });\r\n    }\r\n\r\n    return recommendations.sort((a, b) => {\r\n      const priorityOrder = { HIGH: 3, MEDIUM: 2, LOW: 1 };\r\n      return priorityOrder[b.priority] - priorityOrder[a.priority];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculate optimal stop loss based on market conditions\r\n   */\r\n  private calculateOptimalStopLoss(proposal: TradeProposal, marketConditions: MarketConditions): number {\r\n    const { entryPrice, type } = proposal;\r\n    \r\n    // Use ATR to determine optimal stop distance\r\n    const atrBasedDistance = (marketConditions.atr / entryPrice) * 100;\r\n    const minStopDistance = Math.max(0.5, atrBasedDistance * 1.5); // 1.5x ATR minimum\r\n\r\n    if (type === 'LONG') {\r\n      const optimalStop = entryPrice * (1 - minStopDistance / 100);\r\n      \r\n      // Consider support levels\r\n      if (marketConditions.supportLevel && marketConditions.supportLevel < entryPrice) {\r\n        return Math.max(optimalStop, marketConditions.supportLevel * 0.995);\r\n      }\r\n      \r\n      return optimalStop;\r\n    } else {\r\n      const optimalStop = entryPrice * (1 + minStopDistance / 100);\r\n      \r\n      // Consider resistance levels\r\n      if (marketConditions.resistanceLevel && marketConditions.resistanceLevel > entryPrice) {\r\n        return Math.min(optimalStop, marketConditions.resistanceLevel * 1.005);\r\n      }\r\n      \r\n      return optimalStop;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate optimal take profit based on market conditions\r\n   */\r\n  private calculateOptimalTakeProfit(proposal: TradeProposal, marketConditions: MarketConditions): number {\r\n    const { entryPrice, stopLossPrice, type } = proposal;\r\n    \r\n    const riskDistance = Math.abs(entryPrice - stopLossPrice);\r\n    const targetRR = this.config.preferredRiskRewardRatio;\r\n    \r\n    if (type === 'LONG') {\r\n      const optimalTarget = entryPrice + (riskDistance * targetRR);\r\n      \r\n      // Consider resistance levels as potential targets\r\n      if (marketConditions.resistanceLevel && marketConditions.resistanceLevel > entryPrice) {\r\n        return Math.min(optimalTarget, marketConditions.resistanceLevel * 0.995);\r\n      }\r\n      \r\n      return optimalTarget;\r\n    } else {\r\n      const optimalTarget = entryPrice - (riskDistance * targetRR);\r\n      \r\n      // Consider support levels as potential targets\r\n      if (marketConditions.supportLevel && marketConditions.supportLevel < entryPrice) {\r\n        return Math.max(optimalTarget, marketConditions.supportLevel * 1.005);\r\n      }\r\n      \r\n      return optimalTarget;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate better entry price for improved RR\r\n   */\r\n  private calculateBetterEntryPrice(proposal: TradeProposal, marketConditions: MarketConditions): number {\r\n    const { entryPrice, stopLossPrice, takeProfitPrice, type } = proposal;\r\n    \r\n    // Calculate what entry price would give us the preferred RR\r\n    const currentReward = Math.abs(takeProfitPrice - entryPrice);\r\n    const currentRisk = Math.abs(entryPrice - stopLossPrice);\r\n    \r\n    if (type === 'LONG') {\r\n      // For long positions, lower entry improves RR\r\n      const targetRisk = currentReward / this.config.preferredRiskRewardRatio;\r\n      return stopLossPrice + targetRisk;\r\n    } else {\r\n      // For short positions, higher entry improves RR\r\n      const targetRisk = currentReward / this.config.preferredRiskRewardRatio;\r\n      return stopLossPrice - targetRisk;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate if trade should be approved\r\n   */\r\n  private validateTradeApproval(\r\n    analysis: Omit<RiskRewardAnalysis, 'optimizationRecommendations' | 'approved' | 'rejectionReasons'>,\r\n    proposal: TradeProposal\r\n  ): boolean {\r\n    // Must meet minimum RR ratio\r\n    if (!analysis.meetsMinimumRR) {\r\n      return false;\r\n    }\r\n\r\n    // Must not exceed maximum risk percentage\r\n    if (analysis.riskPercentage > this.config.maxRiskPercentage) {\r\n      return false;\r\n    }\r\n\r\n    // Additional validation based on confidence\r\n    if (proposal.confidence < 50 && analysis.riskRewardRatio < this.config.preferredRiskRewardRatio) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Generate rejection reasons\r\n   */\r\n  private generateRejectionReasons(\r\n    analysis: Omit<RiskRewardAnalysis, 'optimizationRecommendations' | 'approved' | 'rejectionReasons'>,\r\n    proposal: TradeProposal\r\n  ): string[] {\r\n    const reasons: string[] = [];\r\n\r\n    if (!analysis.meetsMinimumRR) {\r\n      reasons.push(`Risk-reward ratio ${analysis.riskRewardRatio.toFixed(2)} below minimum ${this.config.minRiskRewardRatio}`);\r\n    }\r\n\r\n    if (analysis.riskPercentage > this.config.maxRiskPercentage) {\r\n      reasons.push(`Risk percentage ${analysis.riskPercentage.toFixed(2)}% exceeds maximum ${this.config.maxRiskPercentage}%`);\r\n    }\r\n\r\n    if (proposal.confidence < 50 && analysis.riskRewardRatio < this.config.preferredRiskRewardRatio) {\r\n      reasons.push(`Low confidence ${proposal.confidence}% with suboptimal RR ratio ${analysis.riskRewardRatio.toFixed(2)}`);\r\n    }\r\n\r\n    return reasons;\r\n  }\r\n\r\n  /**\r\n   * Update performance metrics\r\n   */\r\n  private updatePerformanceMetrics(analysis: RiskRewardAnalysis, proposal: TradeProposal): void {\r\n    this.performanceMetrics.totalTradesAnalyzed++;\r\n\r\n    if (analysis.approved) {\r\n      // Update average RR\r\n      const currentSum = this.performanceMetrics.averageRR * (this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount - 1);\r\n      const executedTrades = this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount;\r\n      this.performanceMetrics.averageRR = (currentSum + analysis.riskRewardRatio) / executedTrades;\r\n\r\n      // Update best/worst RR\r\n      this.performanceMetrics.bestRR = Math.max(this.performanceMetrics.bestRR, analysis.riskRewardRatio);\r\n      this.performanceMetrics.worstRR = Math.min(this.performanceMetrics.worstRR, analysis.riskRewardRatio);\r\n\r\n      // Update strategy-specific RR\r\n      const strategyRR = this.performanceMetrics.rrByStrategy.get(proposal.strategy) || 0;\r\n      this.performanceMetrics.rrByStrategy.set(proposal.strategy, \r\n        (strategyRR + analysis.riskRewardRatio) / 2\r\n      );\r\n    } else {\r\n      this.performanceMetrics.rejectedTradesCount++;\r\n    }\r\n\r\n    // Update compliance rate\r\n    const approvedTrades = this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount;\r\n    this.performanceMetrics.rrComplianceRate = (approvedTrades / this.performanceMetrics.totalTradesAnalyzed) * 100;\r\n  }\r\n\r\n  /**\r\n   * Get performance metrics\r\n   */\r\n  getPerformanceMetrics(): RRPerformanceMetrics {\r\n    return { ...this.performanceMetrics };\r\n  }\r\n\r\n  /**\r\n   * Get trade history\r\n   */\r\n  getTradeHistory(limit?: number): RiskRewardAnalysis[] {\r\n    if (limit) {\r\n      return this.tradeHistory.slice(-limit);\r\n    }\r\n    return [...this.tradeHistory];\r\n  }\r\n\r\n  /**\r\n   * Update configuration\r\n   */\r\n  updateConfig(newConfig: Partial<RREnforcementConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Get current configuration\r\n   */\r\n  getConfig(): RREnforcementConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  /**\r\n   * Reset performance metrics\r\n   */\r\n  resetPerformanceMetrics(): void {\r\n    this.performanceMetrics = {\r\n      averageRR: 0,\r\n      rrComplianceRate: 0,\r\n      rejectedTradesCount: 0,\r\n      totalTradesAnalyzed: 0,\r\n      bestRR: 0,\r\n      worstRR: Infinity,\r\n      rrByStrategy: new Map()\r\n    };\r\n    this.tradeHistory = [];\r\n  }\r\n\r\n  /**\r\n   * Generate RR performance report\r\n   */\r\n  generatePerformanceReport(): {\r\n    summary: RRPerformanceMetrics;\r\n    topStrategies: Array<{ strategy: string; avgRR: number }>;\r\n    recentTrends: Array<{ period: string; avgRR: number; approvalRate: number }>;\r\n  } {\r\n    const topStrategies = Array.from(this.performanceMetrics.rrByStrategy.entries())\r\n      .map(([strategy, avgRR]) => ({ strategy, avgRR }))\r\n      .sort((a, b) => b.avgRR - a.avgRR)\r\n      .slice(0, 5);\r\n\r\n    // Calculate recent trends (last 10, 20, 50 trades)\r\n    const recentTrends = [10, 20, 50].map(period => {\r\n      const recentTrades = this.tradeHistory.slice(-period);\r\n      const approvedTrades = recentTrades.filter(t => t.approved);\r\n      const avgRR = approvedTrades.length > 0 \r\n        ? approvedTrades.reduce((sum, t) => sum + t.riskRewardRatio, 0) / approvedTrades.length\r\n        : 0;\r\n      const approvalRate = recentTrades.length > 0 \r\n        ? (approvedTrades.length / recentTrades.length) * 100\r\n        : 0;\r\n\r\n      return {\r\n        period: `Last ${period} trades`,\r\n        avgRR,\r\n        approvalRate\r\n      };\r\n    });\r\n\r\n    return {\r\n      summary: this.getPerformanceMetrics(),\r\n      topStrategies,\r\n      recentTrends\r\n    };\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "55d5c7a72ce595876e0d62784b6111c6caafe8e3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rxb1yu68n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rxb1yu68n();
cov_rxb1yu68n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_rxb1yu68n().s[1]++;
exports.RiskRewardEnforcer = void 0;
class RiskRewardEnforcer {
  config;
  performanceMetrics;
  tradeHistory =
  /* istanbul ignore next */
  (cov_rxb1yu68n().s[2]++, []);
  constructor(config) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[0]++;
    cov_rxb1yu68n().s[3]++;
    this.config = config;
    /* istanbul ignore next */
    cov_rxb1yu68n().s[4]++;
    this.performanceMetrics = {
      averageRR: 0,
      rrComplianceRate: 0,
      rejectedTradesCount: 0,
      totalTradesAnalyzed: 0,
      bestRR: 0,
      worstRR: Infinity,
      rrByStrategy: new Map()
    };
  }
  /**
   * Analyze and enforce risk-reward ratio for a trade proposal
   */
  analyzeRiskReward(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[1]++;
    // Calculate base risk-reward metrics
    const baseAnalysis =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[5]++, this.calculateBaseRiskReward(proposal));
    // Apply dynamic adjustments based on market conditions
    const adjustedAnalysis =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[6]++, this.applyDynamicAdjustments(baseAnalysis, proposal, marketConditions));
    // Generate optimization recommendations
    const optimizations =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[7]++, this.generateOptimizationRecommendations(proposal, adjustedAnalysis, marketConditions));
    // Final validation
    const finalAnalysis =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[8]++, {
      ...adjustedAnalysis,
      optimizationRecommendations: optimizations,
      approved: this.validateTradeApproval(adjustedAnalysis, proposal),
      rejectionReasons: this.generateRejectionReasons(adjustedAnalysis, proposal)
    });
    // Update performance metrics
    /* istanbul ignore next */
    cov_rxb1yu68n().s[9]++;
    this.updatePerformanceMetrics(finalAnalysis, proposal);
    // Store in history
    /* istanbul ignore next */
    cov_rxb1yu68n().s[10]++;
    this.tradeHistory.push(finalAnalysis);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[11]++;
    return finalAnalysis;
  }
  /**
   * Calculate base risk-reward metrics
   */
  calculateBaseRiskReward(proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[2]++;
    const {
      entryPrice,
      stopLossPrice,
      takeProfitPrice,
      positionSize
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[12]++, proposal);
    // Calculate risk and reward amounts
    const riskAmount =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[13]++, Math.abs(entryPrice - stopLossPrice) * positionSize);
    const rewardAmount =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[14]++, Math.abs(takeProfitPrice - entryPrice) * positionSize);
    // Calculate percentages
    const riskPercentage =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[15]++, Math.abs((entryPrice - stopLossPrice) / entryPrice) * 100);
    const rewardPercentage =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[16]++, Math.abs((takeProfitPrice - entryPrice) / entryPrice) * 100);
    // Calculate risk-reward ratio
    const riskRewardRatio =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[17]++, riskAmount > 0 ?
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[0][0]++, rewardAmount / riskAmount) :
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[0][1]++, 0));
    // Check if meets minimum requirements
    const meetsMinimumRR =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[18]++, riskRewardRatio >= this.config.minRiskRewardRatio);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[19]++;
    return {
      riskRewardRatio,
      riskAmount,
      rewardAmount,
      riskPercentage,
      rewardPercentage,
      meetsMinimumRR
    };
  }
  /**
   * Apply dynamic adjustments based on market conditions
   */
  applyDynamicAdjustments(baseAnalysis, proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[3]++;
    cov_rxb1yu68n().s[20]++;
    if (!this.config.enableDynamicAdjustment) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[1][0]++;
      cov_rxb1yu68n().s[21]++;
      return baseAnalysis;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[1][1]++;
    }
    let adjustmentFactor =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[22]++, 1.0);
    // Adjust based on market trend
    /* istanbul ignore next */
    cov_rxb1yu68n().s[23]++;
    switch (marketConditions.trend) {
      case 'BULLISH':
        /* istanbul ignore next */
        cov_rxb1yu68n().b[2][0]++;
        cov_rxb1yu68n().s[24]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.bullish;
        /* istanbul ignore next */
        cov_rxb1yu68n().s[25]++;
        break;
      case 'BEARISH':
        /* istanbul ignore next */
        cov_rxb1yu68n().b[2][1]++;
        cov_rxb1yu68n().s[26]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.bearish;
        /* istanbul ignore next */
        cov_rxb1yu68n().s[27]++;
        break;
      case 'SIDEWAYS':
        /* istanbul ignore next */
        cov_rxb1yu68n().b[2][2]++;
        cov_rxb1yu68n().s[28]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.sideways;
        /* istanbul ignore next */
        cov_rxb1yu68n().s[29]++;
        break;
    }
    // Adjust based on volatility
    /* istanbul ignore next */
    cov_rxb1yu68n().s[30]++;
    if (marketConditions.volatility > 0.5) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[3][0]++;
      cov_rxb1yu68n().s[31]++;
      adjustmentFactor *= this.config.marketConditionAdjustments.highVolatility;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[3][1]++;
      cov_rxb1yu68n().s[32]++;
      if (marketConditions.volatility < 0.2) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[4][0]++;
        cov_rxb1yu68n().s[33]++;
        adjustmentFactor *= this.config.marketConditionAdjustments.lowVolatility;
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[4][1]++;
      }
    }
    // Adjust based on signal confidence
    const confidenceAdjustment =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[34]++, 0.8 + proposal.confidence / 100 * 0.4); // 0.8 to 1.2 range
    /* istanbul ignore next */
    cov_rxb1yu68n().s[35]++;
    adjustmentFactor *= confidenceAdjustment;
    // Apply adjustment to minimum RR requirement
    const adjustedMinRR =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[36]++, this.config.minRiskRewardRatio * adjustmentFactor);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[37]++;
    return {
      ...baseAnalysis,
      meetsMinimumRR: baseAnalysis.riskRewardRatio >= adjustedMinRR
    };
  }
  /**
   * Generate optimization recommendations
   */
  generateOptimizationRecommendations(proposal, analysis, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[4]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[38]++, []);
    // If RR is below minimum, suggest improvements
    /* istanbul ignore next */
    cov_rxb1yu68n().s[39]++;
    if (!analysis.meetsMinimumRR) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[5][0]++;
      // Suggest tightening stop loss
      const tighterStopLoss =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[40]++, this.calculateOptimalStopLoss(proposal, marketConditions));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[41]++;
      if (tighterStopLoss !== proposal.stopLossPrice) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[6][0]++;
        const newRisk =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[42]++, Math.abs(proposal.entryPrice - tighterStopLoss) * proposal.positionSize);
        const newRR =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[43]++, analysis.rewardAmount / newRisk);
        /* istanbul ignore next */
        cov_rxb1yu68n().s[44]++;
        recommendations.push({
          type: 'ADJUST_STOP_LOSS',
          currentValue: proposal.stopLossPrice,
          recommendedValue: tighterStopLoss,
          rrImprovement: newRR - analysis.riskRewardRatio,
          description: `Tighten stop loss to ${tighterStopLoss.toFixed(2)} to improve RR ratio`,
          priority: 'HIGH'
        });
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[6][1]++;
      }
      // Suggest extending take profit
      const extendedTakeProfit =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[45]++, this.calculateOptimalTakeProfit(proposal, marketConditions));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[46]++;
      if (extendedTakeProfit !== proposal.takeProfitPrice) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[7][0]++;
        const newReward =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[47]++, Math.abs(extendedTakeProfit - proposal.entryPrice) * proposal.positionSize);
        const newRR =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[48]++, newReward / analysis.riskAmount);
        /* istanbul ignore next */
        cov_rxb1yu68n().s[49]++;
        recommendations.push({
          type: 'ADJUST_TAKE_PROFIT',
          currentValue: proposal.takeProfitPrice,
          recommendedValue: extendedTakeProfit,
          rrImprovement: newRR - analysis.riskRewardRatio,
          description: `Extend take profit to ${extendedTakeProfit.toFixed(2)} to improve RR ratio`,
          priority: 'MEDIUM'
        });
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[7][1]++;
      }
      // Suggest waiting for better entry
      const betterEntry =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[50]++, this.calculateBetterEntryPrice(proposal, marketConditions));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[51]++;
      if (betterEntry !== proposal.entryPrice) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[8][0]++;
        const newRisk =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[52]++, Math.abs(betterEntry - proposal.stopLossPrice) * proposal.positionSize);
        const newReward =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[53]++, Math.abs(proposal.takeProfitPrice - betterEntry) * proposal.positionSize);
        const newRR =
        /* istanbul ignore next */
        (cov_rxb1yu68n().s[54]++, newReward / newRisk);
        /* istanbul ignore next */
        cov_rxb1yu68n().s[55]++;
        recommendations.push({
          type: 'WAIT_FOR_BETTER_ENTRY',
          currentValue: proposal.entryPrice,
          recommendedValue: betterEntry,
          rrImprovement: newRR - analysis.riskRewardRatio,
          description: `Wait for better entry at ${betterEntry.toFixed(2)} to improve RR ratio`,
          priority: 'LOW'
        });
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[5][1]++;
    }
    // If RR is acceptable but could be better
    cov_rxb1yu68n().s[56]++;
    if (analysis.riskRewardRatio < this.config.preferredRiskRewardRatio) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[9][0]++;
      cov_rxb1yu68n().s[57]++;
      recommendations.push({
        type: 'REDUCE_POSITION_SIZE',
        currentValue: proposal.positionSize,
        recommendedValue: proposal.positionSize * 0.8,
        rrImprovement: 0,
        description: 'Consider reducing position size to maintain capital preservation',
        priority: 'LOW'
      });
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[9][1]++;
    }
    cov_rxb1yu68n().s[58]++;
    return recommendations.sort((a, b) => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[5]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[59]++, {
        HIGH: 3,
        MEDIUM: 2,
        LOW: 1
      });
      /* istanbul ignore next */
      cov_rxb1yu68n().s[60]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    });
  }
  /**
   * Calculate optimal stop loss based on market conditions
   */
  calculateOptimalStopLoss(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[6]++;
    const {
      entryPrice,
      type
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[61]++, proposal);
    // Use ATR to determine optimal stop distance
    const atrBasedDistance =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[62]++, marketConditions.atr / entryPrice * 100);
    const minStopDistance =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[63]++, Math.max(0.5, atrBasedDistance * 1.5)); // 1.5x ATR minimum
    /* istanbul ignore next */
    cov_rxb1yu68n().s[64]++;
    if (type === 'LONG') {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[10][0]++;
      const optimalStop =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[65]++, entryPrice * (1 - minStopDistance / 100));
      // Consider support levels
      /* istanbul ignore next */
      cov_rxb1yu68n().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[12][0]++, marketConditions.supportLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[12][1]++, marketConditions.supportLevel < entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[11][0]++;
        cov_rxb1yu68n().s[67]++;
        return Math.max(optimalStop, marketConditions.supportLevel * 0.995);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[11][1]++;
      }
      cov_rxb1yu68n().s[68]++;
      return optimalStop;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[10][1]++;
      const optimalStop =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[69]++, entryPrice * (1 + minStopDistance / 100));
      // Consider resistance levels
      /* istanbul ignore next */
      cov_rxb1yu68n().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[14][0]++, marketConditions.resistanceLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[14][1]++, marketConditions.resistanceLevel > entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[13][0]++;
        cov_rxb1yu68n().s[71]++;
        return Math.min(optimalStop, marketConditions.resistanceLevel * 1.005);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[13][1]++;
      }
      cov_rxb1yu68n().s[72]++;
      return optimalStop;
    }
  }
  /**
   * Calculate optimal take profit based on market conditions
   */
  calculateOptimalTakeProfit(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[7]++;
    const {
      entryPrice,
      stopLossPrice,
      type
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[73]++, proposal);
    const riskDistance =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[74]++, Math.abs(entryPrice - stopLossPrice));
    const targetRR =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[75]++, this.config.preferredRiskRewardRatio);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[76]++;
    if (type === 'LONG') {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[15][0]++;
      const optimalTarget =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[77]++, entryPrice + riskDistance * targetRR);
      // Consider resistance levels as potential targets
      /* istanbul ignore next */
      cov_rxb1yu68n().s[78]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[17][0]++, marketConditions.resistanceLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[17][1]++, marketConditions.resistanceLevel > entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[16][0]++;
        cov_rxb1yu68n().s[79]++;
        return Math.min(optimalTarget, marketConditions.resistanceLevel * 0.995);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[16][1]++;
      }
      cov_rxb1yu68n().s[80]++;
      return optimalTarget;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[15][1]++;
      const optimalTarget =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[81]++, entryPrice - riskDistance * targetRR);
      // Consider support levels as potential targets
      /* istanbul ignore next */
      cov_rxb1yu68n().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[19][0]++, marketConditions.supportLevel) &&
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[19][1]++, marketConditions.supportLevel < entryPrice)) {
        /* istanbul ignore next */
        cov_rxb1yu68n().b[18][0]++;
        cov_rxb1yu68n().s[83]++;
        return Math.max(optimalTarget, marketConditions.supportLevel * 1.005);
      } else
      /* istanbul ignore next */
      {
        cov_rxb1yu68n().b[18][1]++;
      }
      cov_rxb1yu68n().s[84]++;
      return optimalTarget;
    }
  }
  /**
   * Calculate better entry price for improved RR
   */
  calculateBetterEntryPrice(proposal, marketConditions) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[8]++;
    const {
      entryPrice,
      stopLossPrice,
      takeProfitPrice,
      type
    } =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[85]++, proposal);
    // Calculate what entry price would give us the preferred RR
    const currentReward =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[86]++, Math.abs(takeProfitPrice - entryPrice));
    const currentRisk =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[87]++, Math.abs(entryPrice - stopLossPrice));
    /* istanbul ignore next */
    cov_rxb1yu68n().s[88]++;
    if (type === 'LONG') {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[20][0]++;
      // For long positions, lower entry improves RR
      const targetRisk =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[89]++, currentReward / this.config.preferredRiskRewardRatio);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[90]++;
      return stopLossPrice + targetRisk;
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[20][1]++;
      // For short positions, higher entry improves RR
      const targetRisk =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[91]++, currentReward / this.config.preferredRiskRewardRatio);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[92]++;
      return stopLossPrice - targetRisk;
    }
  }
  /**
   * Validate if trade should be approved
   */
  validateTradeApproval(analysis, proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[9]++;
    cov_rxb1yu68n().s[93]++;
    // Must meet minimum RR ratio
    if (!analysis.meetsMinimumRR) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[21][0]++;
      cov_rxb1yu68n().s[94]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[21][1]++;
    }
    // Must not exceed maximum risk percentage
    cov_rxb1yu68n().s[95]++;
    if (analysis.riskPercentage > this.config.maxRiskPercentage) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[22][0]++;
      cov_rxb1yu68n().s[96]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[22][1]++;
    }
    // Additional validation based on confidence
    cov_rxb1yu68n().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[24][0]++, proposal.confidence < 50) &&
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[24][1]++, analysis.riskRewardRatio < this.config.preferredRiskRewardRatio)) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[23][0]++;
      cov_rxb1yu68n().s[98]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[23][1]++;
    }
    cov_rxb1yu68n().s[99]++;
    return true;
  }
  /**
   * Generate rejection reasons
   */
  generateRejectionReasons(analysis, proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[10]++;
    const reasons =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[100]++, []);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[101]++;
    if (!analysis.meetsMinimumRR) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[25][0]++;
      cov_rxb1yu68n().s[102]++;
      reasons.push(`Risk-reward ratio ${analysis.riskRewardRatio.toFixed(2)} below minimum ${this.config.minRiskRewardRatio}`);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[25][1]++;
    }
    cov_rxb1yu68n().s[103]++;
    if (analysis.riskPercentage > this.config.maxRiskPercentage) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[26][0]++;
      cov_rxb1yu68n().s[104]++;
      reasons.push(`Risk percentage ${analysis.riskPercentage.toFixed(2)}% exceeds maximum ${this.config.maxRiskPercentage}%`);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[26][1]++;
    }
    cov_rxb1yu68n().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[28][0]++, proposal.confidence < 50) &&
    /* istanbul ignore next */
    (cov_rxb1yu68n().b[28][1]++, analysis.riskRewardRatio < this.config.preferredRiskRewardRatio)) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[27][0]++;
      cov_rxb1yu68n().s[106]++;
      reasons.push(`Low confidence ${proposal.confidence}% with suboptimal RR ratio ${analysis.riskRewardRatio.toFixed(2)}`);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[27][1]++;
    }
    cov_rxb1yu68n().s[107]++;
    return reasons;
  }
  /**
   * Update performance metrics
   */
  updatePerformanceMetrics(analysis, proposal) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[11]++;
    cov_rxb1yu68n().s[108]++;
    this.performanceMetrics.totalTradesAnalyzed++;
    /* istanbul ignore next */
    cov_rxb1yu68n().s[109]++;
    if (analysis.approved) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[29][0]++;
      // Update average RR
      const currentSum =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[110]++, this.performanceMetrics.averageRR * (this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount - 1));
      const executedTrades =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[111]++, this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[112]++;
      this.performanceMetrics.averageRR = (currentSum + analysis.riskRewardRatio) / executedTrades;
      // Update best/worst RR
      /* istanbul ignore next */
      cov_rxb1yu68n().s[113]++;
      this.performanceMetrics.bestRR = Math.max(this.performanceMetrics.bestRR, analysis.riskRewardRatio);
      /* istanbul ignore next */
      cov_rxb1yu68n().s[114]++;
      this.performanceMetrics.worstRR = Math.min(this.performanceMetrics.worstRR, analysis.riskRewardRatio);
      // Update strategy-specific RR
      const strategyRR =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[115]++,
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[30][0]++, this.performanceMetrics.rrByStrategy.get(proposal.strategy)) ||
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[30][1]++, 0));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[116]++;
      this.performanceMetrics.rrByStrategy.set(proposal.strategy, (strategyRR + analysis.riskRewardRatio) / 2);
    } else {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[29][1]++;
      cov_rxb1yu68n().s[117]++;
      this.performanceMetrics.rejectedTradesCount++;
    }
    // Update compliance rate
    const approvedTrades =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[118]++, this.performanceMetrics.totalTradesAnalyzed - this.performanceMetrics.rejectedTradesCount);
    /* istanbul ignore next */
    cov_rxb1yu68n().s[119]++;
    this.performanceMetrics.rrComplianceRate = approvedTrades / this.performanceMetrics.totalTradesAnalyzed * 100;
  }
  /**
   * Get performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[12]++;
    cov_rxb1yu68n().s[120]++;
    return {
      ...this.performanceMetrics
    };
  }
  /**
   * Get trade history
   */
  getTradeHistory(limit) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[13]++;
    cov_rxb1yu68n().s[121]++;
    if (limit) {
      /* istanbul ignore next */
      cov_rxb1yu68n().b[31][0]++;
      cov_rxb1yu68n().s[122]++;
      return this.tradeHistory.slice(-limit);
    } else
    /* istanbul ignore next */
    {
      cov_rxb1yu68n().b[31][1]++;
    }
    cov_rxb1yu68n().s[123]++;
    return [...this.tradeHistory];
  }
  /**
   * Update configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[14]++;
    cov_rxb1yu68n().s[124]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
  }
  /**
   * Get current configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[15]++;
    cov_rxb1yu68n().s[125]++;
    return {
      ...this.config
    };
  }
  /**
   * Reset performance metrics
   */
  resetPerformanceMetrics() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[16]++;
    cov_rxb1yu68n().s[126]++;
    this.performanceMetrics = {
      averageRR: 0,
      rrComplianceRate: 0,
      rejectedTradesCount: 0,
      totalTradesAnalyzed: 0,
      bestRR: 0,
      worstRR: Infinity,
      rrByStrategy: new Map()
    };
    /* istanbul ignore next */
    cov_rxb1yu68n().s[127]++;
    this.tradeHistory = [];
  }
  /**
   * Generate RR performance report
   */
  generatePerformanceReport() {
    /* istanbul ignore next */
    cov_rxb1yu68n().f[17]++;
    const topStrategies =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[128]++, Array.from(this.performanceMetrics.rrByStrategy.entries()).map(([strategy, avgRR]) => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[18]++;
      cov_rxb1yu68n().s[129]++;
      return {
        strategy,
        avgRR
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[19]++;
      cov_rxb1yu68n().s[130]++;
      return b.avgRR - a.avgRR;
    }).slice(0, 5));
    // Calculate recent trends (last 10, 20, 50 trades)
    const recentTrends =
    /* istanbul ignore next */
    (cov_rxb1yu68n().s[131]++, [10, 20, 50].map(period => {
      /* istanbul ignore next */
      cov_rxb1yu68n().f[20]++;
      const recentTrades =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[132]++, this.tradeHistory.slice(-period));
      const approvedTrades =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[133]++, recentTrades.filter(t => {
        /* istanbul ignore next */
        cov_rxb1yu68n().f[21]++;
        cov_rxb1yu68n().s[134]++;
        return t.approved;
      }));
      const avgRR =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[135]++, approvedTrades.length > 0 ?
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[32][0]++, approvedTrades.reduce((sum, t) => {
        /* istanbul ignore next */
        cov_rxb1yu68n().f[22]++;
        cov_rxb1yu68n().s[136]++;
        return sum + t.riskRewardRatio;
      }, 0) / approvedTrades.length) :
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[32][1]++, 0));
      const approvalRate =
      /* istanbul ignore next */
      (cov_rxb1yu68n().s[137]++, recentTrades.length > 0 ?
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[33][0]++, approvedTrades.length / recentTrades.length * 100) :
      /* istanbul ignore next */
      (cov_rxb1yu68n().b[33][1]++, 0));
      /* istanbul ignore next */
      cov_rxb1yu68n().s[138]++;
      return {
        period: `Last ${period} trades`,
        avgRR,
        approvalRate
      };
    }));
    /* istanbul ignore next */
    cov_rxb1yu68n().s[139]++;
    return {
      summary: this.getPerformanceMetrics(),
      topStrategies,
      recentTrends
    };
  }
}
/* istanbul ignore next */
cov_rxb1yu68n().s[140]++;
exports.RiskRewardEnforcer = RiskRewardEnforcer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,