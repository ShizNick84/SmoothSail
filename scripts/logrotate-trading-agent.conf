# =============================================================================
# AI CRYPTO TRADING AGENT - LOGROTATE CONFIGURATION
# =============================================================================
# 
# This configuration file defines log rotation policies for the AI crypto
# trading agent running on Intel NUC Ubuntu deployment. It ensures proper
# log management with appropriate retention periods and compression.
# 
# Installation:
# sudo cp logrotate-trading-agent.conf /etc/logrotate.d/trading-agent
# sudo chmod 644 /etc/logrotate.d/trading-agent
# 
# Test configuration:
# sudo logrotate -d /etc/logrotate.d/trading-agent
# 
# Force rotation (for testing):
# sudo logrotate -f /etc/logrotate.d/trading-agent
# 
# @author AI Crypto Trading System
# @version 1.0.0
# @license PROPRIETARY
# =============================================================================

# Application logs - General application logging
/var/log/trading-agent/application/*.log {
    # Rotate daily
    daily
    
    # Keep 30 days of logs
    rotate 30
    
    # Compress rotated logs (except the most recent)
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate original file instead of moving
    copytruncate
    
    # Run after rotation
    postrotate
        # Send SIGUSR1 to trading agent to reopen log files
        /bin/kill -USR1 $(cat /var/run/trading-agent.pid 2>/dev/null) 2>/dev/null || true
        # Reload systemd service if running
        /bin/systemctl reload trading-agent 2>/dev/null || true
    endscript
}

# Trading logs - Financial transaction logging (keep longer)
/var/log/trading-agent/trading/*.log {
    # Rotate daily
    daily
    
    # Keep 90 days of trading logs for compliance
    rotate 90
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate to avoid disrupting active logging
    copytruncate
    
    # Run after rotation
    postrotate
        /bin/kill -USR1 $(cat /var/run/trading-agent.pid 2>/dev/null) 2>/dev/null || true
        /bin/systemctl reload trading-agent 2>/dev/null || true
        # Log rotation event for audit trail
        /usr/bin/logger -p local0.info -t trading-logrotate "Trading logs rotated"
    endscript
}

# Security logs - Security events and audit trail (keep longest)
/var/log/trading-agent/security/*.log {
    # Rotate daily
    daily
    
    # Keep 365 days of security logs for compliance and forensics
    rotate 365
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with restricted permissions
    create 600 trading trading
    
    # Copy and truncate to preserve file handles
    copytruncate
    
    # Run after rotation
    postrotate
        /bin/kill -USR1 $(cat /var/run/trading-agent.pid 2>/dev/null) 2>/dev/null || true
        /bin/systemctl reload trading-agent 2>/dev/null || true
        # Log security log rotation for audit
        /usr/bin/logger -p local0.notice -t trading-security-logrotate "Security logs rotated"
    endscript
}

# Audit logs - Compliance and regulatory logging (keep longest)
/var/log/trading-agent/audit/*.log {
    # Rotate daily
    daily
    
    # Keep 365 days of audit logs for regulatory compliance
    rotate 365
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with restricted permissions
    create 600 trading trading
    
    # Copy and truncate to preserve file handles
    copytruncate
    
    # Run after rotation
    postrotate
        /bin/kill -USR1 $(cat /var/run/trading-agent.pid 2>/dev/null) 2>/dev/null || true
        /bin/systemctl reload trading-agent 2>/dev/null || true
        # Log audit log rotation
        /usr/bin/logger -p local0.notice -t trading-audit-logrotate "Audit logs rotated"
    endscript
}

# Performance logs - System performance metrics (rotate more frequently)
/var/log/trading-agent/performance/*.log {
    # Rotate hourly for performance logs (high volume)
    hourly
    
    # Keep 168 hours (7 days) of performance logs
    rotate 168
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate to avoid disrupting metrics collection
    copytruncate
    
    # Run after rotation
    postrotate
        # No need to reload for performance logs (high frequency)
        /usr/bin/logger -p local0.debug -t trading-perf-logrotate "Performance logs rotated"
    endscript
}

# System logs - System monitoring and health checks
/var/log/trading-agent/system/*.log {
    # Rotate daily
    daily
    
    # Keep 30 days of system logs
    rotate 30
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate to preserve file handles
    copytruncate
    
    # Run after rotation
    postrotate
        /bin/kill -USR1 $(cat /var/run/trading-agent.pid 2>/dev/null) 2>/dev/null || true
        /bin/systemctl reload trading-agent 2>/dev/null || true
        /usr/bin/logger -p local0.info -t trading-system-logrotate "System logs rotated"
    endscript
}

# Error logs - Application error logging
/var/log/trading-agent/application/error*.log {
    # Rotate daily
    daily
    
    # Keep 60 days of error logs for debugging
    rotate 60
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate to preserve file handles
    copytruncate
    
    # Run after rotation
    postrotate
        /bin/kill -USR1 $(cat /var/run/trading-agent.pid 2>/dev/null) 2>/dev/null || true
        /bin/systemctl reload trading-agent 2>/dev/null || true
        /usr/bin/logger -p local0.warning -t trading-error-logrotate "Error logs rotated"
    endscript
}

# SSH tunnel logs - Network connectivity logging
/var/log/trading-agent/system/tunnel*.log {
    # Rotate daily
    daily
    
    # Keep 14 days of tunnel logs
    rotate 14
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate to preserve file handles
    copytruncate
    
    # Run after rotation
    postrotate
        # Reload SSH tunnel service if needed
        /bin/systemctl reload ssh-tunnel 2>/dev/null || true
        /usr/bin/logger -p local0.info -t trading-tunnel-logrotate "Tunnel logs rotated"
    endscript
}

# Dashboard logs - Web interface logging
/var/log/trading-agent/system/dashboard*.log {
    # Rotate daily
    daily
    
    # Keep 14 days of dashboard logs
    rotate 14
    
    # Compress rotated logs
    compress
    delaycompress
    
    # Don't error if log file is missing
    missingok
    
    # Don't rotate empty files
    notifempty
    
    # Create new log file with specific permissions
    create 640 trading trading
    
    # Copy and truncate to preserve file handles
    copytruncate
    
    # Run after rotation
    postrotate
        # Reload dashboard service if needed
        /bin/systemctl reload trading-dashboard 2>/dev/null || true
        /usr/bin/logger -p local0.info -t trading-dashboard-logrotate "Dashboard logs rotated"
    endscript
}

# =============================================================================
# LOGROTATE CONFIGURATION NOTES
# =============================================================================
# 
# Rotation Schedule:
# - Application logs: Daily, 30 days retention
# - Trading logs: Daily, 90 days retention (compliance)
# - Security logs: Daily, 365 days retention (forensics)
# - Audit logs: Daily, 365 days retention (regulatory)
# - Performance logs: Hourly, 7 days retention (high volume)
# - System logs: Daily, 30 days retention
# - Error logs: Daily, 60 days retention (debugging)
# - Tunnel logs: Daily, 14 days retention
# - Dashboard logs: Daily, 14 days retention
# 
# Permissions:
# - Regular logs: 640 (trading:trading)
# - Security/Audit logs: 600 (trading:trading) - more restrictive
# 
# Compression:
# - All logs are compressed after rotation
# - delaycompress keeps the most recent rotated log uncompressed
# 
# Signal Handling:
# - SIGUSR1 sent to trading agent process to reopen log files
# - systemctl reload used to gracefully reload services
# 
# Monitoring:
# - All rotation events are logged to syslog for monitoring
# - Different log levels used based on log type importance
# 
# Testing:
# - Use 'sudo logrotate -d /etc/logrotate.d/trading-agent' to test
# - Use 'sudo logrotate -f /etc/logrotate.d/trading-agent' to force rotation
# 
# =============================================================================